<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeiHao&#39;s Blog</title>
  
  
  <link href="/ja/atom.xml" rel="self"/>
  
  <link href="https://leihao0.github.io/ja/"/>
  <updated>2017-12-08T16:00:00.000Z</updated>
  <id>https://leihao0.github.io/ja/</id>
  
  <author>
    <name>LeiHao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>北京 -  1</title>
    <link href="https://leihao0.github.io/ja/bejing-1/"/>
    <id>https://leihao0.github.io/ja/bejing-1/</id>
    <published>2021-08-11T16:00:00.000Z</published>
    <updated>2017-12-08T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2014-2018"><a href="#2014-2018" class="headerlink" title="2014-2018"></a>2014-2018</h2><p>小さな魔術師はいくつかの春と秋の皇帝に住んでいました。 </p><p>ただ皇帝に到着した、批評を経験しました<br>準備ができていますが、それはまだ毎日呼吸するのがショックでした。 </p><a id="more"></a><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-12.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-13.webp" alt=""></div></div></div><p>過去数年間で<br>イヤリーニング<br>途中のどちらか<br>どちらか実行する準備ができています </p><p>もちろん、いくつかの青い空と白い雲もあります。<br>Diesiderの効果を持つShengguangさえ </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-00.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-11.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-05.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-07.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-14.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-16.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-17.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-20.webp" alt=""></div></div></div><p>日本から戻ってきた最後の時間の後、小さな魔術師は突然考えた<br>天然の風景に加えて、旅行はさまざまな会場を訪問するだけです。国内はありませんか？<br>だから私はそれをチェックしました、私は皇帝がたくさんあること、ほとんど嘔吐した血液があることがわかりました。 </p><h2 id="天文"><a href="#天文" class="headerlink" title="天文"></a>天文</h2><p>日本のテキストとは異なり、今回はついに理解できます。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-30.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-32.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-33.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-36.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-37.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-39.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-41.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-42.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-43.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-44.webp" alt=""></div></div></div><h2 id="オーシャンホール"><a href="#オーシャンホール" class="headerlink" title="オーシャンホール"></a>オーシャンホール</h2><p>道路電話やデザインに問題があるかどうかわかりません。<br>道路標識に沿って出てくる後、私は中間巨大なイルカホールが見えなかったことを見つけました… </p><p>しかし、ほとんどガラス油性、それで私はDravepairやスタイルを知りません </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-47.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-49.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-50.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-53.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-54.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-56.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-57.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-59.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-60.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-62.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-63.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-65.webp" alt=""></div></div></div><h2 id="動物園"><a href="#動物園" class="headerlink" title="動物園"></a>動物園</h2><p>大阪動物園からの絶妙な違い<br>これが大きな目的です<br>唯一の悪いことはあまりにも疲れています<br>古いものを見るためにクリーチャーを変えなさい </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-67.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-68.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-69.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-70.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-71.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-73.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-75.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-76.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-78.webp" alt=""></div></div></div><h2 id="月"><a href="#月" class="headerlink" title="月"></a>月</h2><p>魔法<br>月はしばしばありますが<br>しかし実際のシーンはまだ初めてです。 </p><p>当時、iPhoneには夜景がありませんでした、そしてペーストはそうではありません </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-79.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-80.webp" alt=""></div></div></div><h2 id="市場調査"><a href="#市場調査" class="headerlink" title="市場調査"></a>市場調査</h2><p>ゆっくりとしており、ソフトモーションをオフラインにして市場調査を行いましょう </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-81.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-82.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-84.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-85.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-86.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-87.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-88.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-89.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-90.webp" alt=""></div></div></div><h2 id="美味しい"><a href="#美味しい" class="headerlink" title="美味しい"></a>美味しい</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-24.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-25.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-91.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-92.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-94.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-95.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-98.webp" alt=""></div></div></div><h2 id="楽しい"><a href="#楽しい" class="headerlink" title="楽しい"></a>楽しい</h2><p>🏎️、🎬、🎭、👨💻 </p><p>レース、映画、クロストーク、錆パーティー </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-27.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-93.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-96.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-97.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-03.webp" alt=""></div></div></div><p>最後に、年の終わりは皇帝で終わりました。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-22.webp" alt=""></div></div></div><ul><li>Walden. </li></ul><hr><p>Translated by Google</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2014-2018&quot;&gt;&lt;a href=&quot;#2014-2018&quot; class=&quot;headerlink&quot; title=&quot;2014-2018&quot;&gt;&lt;/a&gt;2014-2018&lt;/h2&gt;&lt;p&gt;小さな魔術師はいくつかの春と秋の皇帝に住んでいました。 &lt;/p&gt;
&lt;p&gt;ただ皇帝に到着した、批評を経験しました&lt;br&gt;準備ができていますが、それはまだ毎日呼吸するのがショックでした。 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ja/tags/travel/"/>
    
      <category term="Beijing" scheme="https://leihao0.github.io/ja/tags/beijing/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ja/tags/littlemaster/"/>
    
      <category term="🇨🇳" scheme="https://leihao0.github.io/ja/tags/%F0%9F%87%A8%F0%9F%87%B3/"/>
    
  </entry>
  
  <entry>
    <title>🇯🇵--1-3</title>
    <link href="https://leihao0.github.io/ja/japan-1-3/"/>
    <id>https://leihao0.github.io/ja/japan-1-3/</id>
    <published>2021-05-13T13:58:00.000Z</published>
    <updated>2017-12-08T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大阪"><a href="#大阪" class="headerlink" title="大阪"></a>大阪</h1><p>私は2日目を買った、私は大阪で2日間の旅行クーポンを購入しました。<br>だから次の項目はすべてです<br>自由<br>自由<br>自由 </p><a id="more"></a><h2 id="観覧車"><a href="#観覧車" class="headerlink" title="観覧車"></a>観覧車</h2><p>2箱に分かれて大阪ホイールをRedhorse<br>白は完全な透明なボックスです<br>赤と青は下部に不透明です </p><p>その後、昨日のローラーコースターです<br>小さな魔術師は当然透明です。 </p><p>とシンガポール🇸🇬はいつもフェリスホイールを閉鎖しなければならなかった<br>これは内側に食べられない </p><p>約30分間円を回します<br>私は他人と共有したいと思いました。<br>私は誰もが一人で立つことを期待していませんでした。 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-01.webp" alt=""></p><h2 id="キャプテンライン"><a href="#キャプテンライン" class="headerlink" title="キャプテンライン"></a>キャプテンライン</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-03.webp" alt=""></div></div></div><p>ボートの上に立って、観覧車を見続けます </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-05.webp" alt=""></div></div></div><h2 id="サンタマリア"><a href="#サンタマリア" class="headerlink" title="サンタマリア"></a>サンタマリア</h2><p>毎時、交互、約50分 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-08.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-07.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-09.webp" alt=""></div></div></div><h2 id="オーシャンホール"><a href="#オーシャンホール" class="headerlink" title="オーシャンホール"></a>オーシャンホール</h2><p>オーシャンホールの外の壁の外側の巨大なクジラのサメのモデルがあります。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-10.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-11.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-12.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-16.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-17.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-19.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-20.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-21.webp" alt=""></div></div></div><h3 id="魚を触れる"><a href="#魚を触れる" class="headerlink" title="魚を触れる"></a>魚を触れる</h3><p>手を洗う必要がありますが、唯一の唯一の<br>それは魚の皮膚の皮膚を破壊するからであるようです。 </p><p>小さなマスターが前に魚に触れたことがないと言う<br>初めて、私はサメに触れました。 </p><p>架空の氷とは異なります<br>温度は私が女の子に触れた子牛のように柔らかく、柔らかいです。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-24.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-27.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-30.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-32.webp" alt=""></div></div></div><p>hoofuユニークな飲み物🥤<br>青、スーパーメッキ<br>私は出てくる後に鉄の燃焼を食べました。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-33.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-35.webp" alt=""></div></div></div><h2 id="Hep-Five-Ferris-Wheel"><a href="#Hep-Five-Ferris-Wheel" class="headerlink" title="Hep Five Ferris Wheel."></a>Hep Five Ferris Wheel.</h2><p>この機能は、モール内の床が特徴付けられています。<br>私は高い到達モデルと運命を見ました </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-36.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-37.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-39.webp" alt=""></div></div></div><p>ローマの後にローマに住んでいた最後の時間。<br>自然に、私は知っており、ヒルトン </p><p>観覧車にそれを言う必要があります<br>ライトのライトの1つ<br>ヒルトンいくつかの大きな言葉が輝く </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-41.webp" alt=""></div></div></div><h2 id="Tianshugeの時間と宇宙カプセル"><a href="#Tianshugeの時間と宇宙カプセル" class="headerlink" title="Tianshugeの時間と宇宙カプセル"></a>Tianshugeの時間と宇宙カプセル</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-43.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-44.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-45.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-47.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-48.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-49.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-51.webp" alt=""></div></div></div><h2 id="ティアニテンプル動物園"><a href="#ティアニテンプル動物園" class="headerlink" title="ティアニテンプル動物園"></a>ティアニテンプル動物園</h2><p>Naxim Niklas Tareboの「BROLLER」でブラックスワン🦢を見ました </p><ul><li>黒いくま </li><li>祖先の鳥 </li><li>コア(骷髅) </li><li>象 </li><li>フクロウ </li><li>crow </li><li>サイエロ </li><li>カバ </li><li>キャメル </li><li>ラクーン </li><li>ヤギ(家畜) </li><li>クロコダイル🐊(骷髅) </li><li>ライオン </li><li>キリン </li><li>パンダ(人形) </li><li>子供には小さな馬はありません。 </li></ul><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-54.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-57.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-59.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-60.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-62.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-63.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-65.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-66.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-71.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-68.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-69.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-70.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-73.webp" alt=""></div></div></div><h2 id="Tongtiange"><a href="#Tongtiange" class="headerlink" title="Tongtiange."></a>Tongtiange.</h2><p>明日のため </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-75.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-78.webp" alt=""></div></div></div><h2 id="空港"><a href="#空港" class="headerlink" title="空港"></a>空港</h2><p>チケットがチェックされると、妹は小さなマスターに尋ねました。それは人ですか？<br>小さな魔術師は奇妙で、彼がもちろん人だと言っています。 </p><p>それから妹の一連の操作を見る<br>それから彼に昇圧させるために小さな魔術師におめでとうございます </p><p>その際、私は不明瞭にしました、そして私はチケットに無関心でした。<br>妹は、小さな魔術師が表現がなかったことを見ました。 </p><p>ただし、アップグレードチケットと独自の費用とはまだ異なります。<br>初めて日本とは異なります<br>アップグレードチケットはVIP RESTを入力できません </p><p>だから今度はあなたは風呂に入ることができません。<br>しかし、飛行機の後に楽しんだサービスはまったく同じです。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-79.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-80.webp" alt=""></div></div></div><p>戻ってきた後、私は世界の力から学びました。空港は潜在的な顧客の無料アップグレードを与えます。 </p><p>もともとシングル、この利点<br>小さなマスターは悲しいです </p><hr><p>Translated by Google</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;大阪&quot;&gt;&lt;a href=&quot;#大阪&quot; class=&quot;headerlink&quot; title=&quot;大阪&quot;&gt;&lt;/a&gt;大阪&lt;/h1&gt;&lt;p&gt;私は2日目を買った、私は大阪で2日間の旅行クーポンを購入しました。&lt;br&gt;だから次の項目はすべてです&lt;br&gt;自由&lt;br&gt;自由&lt;br&gt;自由 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ja/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ja/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/ja/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/ja/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>🇯🇵-1-2</title>
    <link href="https://leihao0.github.io/ja/japan-1-2/"/>
    <id>https://leihao0.github.io/ja/japan-1-2/</id>
    <published>2021-05-12T01:58:00.000Z</published>
    <updated>2017-12-06T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大阪阪急シティ"><a href="#大阪阪急シティ" class="headerlink" title="大阪阪急シティ"></a>大阪阪急シティ</h1><p>夕方に行くために翌日にJRを取る </p><a id="more"></a><h2 id="奈良"><a href="#奈良" class="headerlink" title="奈良"></a>奈良</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-02.webp" alt=""></div></div></div><p>コナンを参照 </p><p>衝撃的なことは、小さな鹿が車とラピファと混ざっているということです </p><p>私はそれが悪い胃を食べているかどうかわからない、私は公共のスペースでバスルームに行かなければなりません。<br>驚いた発見もトイレカバーを取りました、そして、この小さな魔術師は日本でそれについて心配しません。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-05.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-07.webp" alt=""></div></div></div><p>出かけた後に小さな鹿を受け取る<br>私は誤ってタップをしました<br>小さな魔術師の袋が開き、旅行のパンフレットが落ちました。 </p><p>それから… </p><p>私が羊が紙を食べることができると聞いたと言ったとき。<br>私はそれを見ることを期待していませんでした。 </p><p>小さな鹿のさまざまな攻撃パターンのため<br>私はスタッフを助けなければなりませんが、私は長い間見ていません。<br>愚かな鹿は祝福以上のものだけを尋ねることができます、下痢はしないでください。 </p><h2 id="宇治-🍦"><a href="#宇治-🍦" class="headerlink" title="宇治 🍦"></a>宇治 🍦</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-08.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-09.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-13.webp" alt=""></div></div></div><p>あなたが毎日の名前を持っているならば、あなたは期待を超えていませんでした。<br>日本の整形外科を通過する<br>それからよろしく茶アイスクリームとタットティーを食べる </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-16.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-17.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-18.webp" alt=""></div></div></div><p>私が食べ終わったら大阪に引き戻されました。<br>Yujiはアイスクリームのためだけにあることがわかりました… </p><h2 id="大阪阪急シティ-1"><a href="#大阪阪急シティ-1" class="headerlink" title="大阪阪急シティ"></a>大阪阪急シティ</h2><p>翌朝の早朝にグローバルスタジオへ </p><p>多くの映画によく表示されるジオフォンがあります。 </p><p>それから小さな魔術師は驚くほど発見されました<br>それはXiao Huang、Spider-Man、Meng、私はグローバルスタジオのIPです。 </p><p>グローバルスタジオは特に大きいので、テーマは特に<br>あなたが遊びたいのなら、あなたはそれに少なくとも一晩生活する必要があります。<br>しかし、後でカリフォルニア最大のロサンゼルスを数日間学んだ。<br>シンガポールは非常に小さいです、あなたは1日以上持てることができます。<br>もちろん、これは後の言葉であり、私はそれを言及しません。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-20.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-21.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-24.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-27.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-30.webp" alt=""></div></div></div><h3 id="ハリウッドの夢"><a href="#ハリウッドの夢" class="headerlink" title="ハリウッドの夢"></a>ハリウッドの夢</h3><p>私は遠く離れた叫び声を聞いた。<br>山の車の断片に神々の死を繰り返し思い出させる<br>しかし、この車の人々を見ています。<br>私は来たい、何もありません。<br>私は自分自身を調整するのを恐れています。 </p><p>同じことが言えます。<br>私はクイックチケットを買ったからです<br>小さなマスターはバス上に直接長い男のドラゴンを通過しました。 </p><p>ハリウッドの夢をやることもやることができます<br>スタッフは彼らがそう恐怖ではなかったと言った。<br>その自然な選択はやっています </p><p>このプロセスは大丈夫です、垂直降下を除いて、より誇張されていると感じます。<br>それからいくつかの連続的なターンが巨大に感じます<br>私は常にレールがステアリングを支えるのに十分ではないと感じています。これは映画のように粉砕されます。 </p><p>しかし、セキュリティが終わっています。 </p><p>したがって、🎢も人とは異なります。<br>私はそれを怖がらせることができません、私はずっと叫ぶ、私は私が座らなければならないことを知っています、しかし私はフライングドラゴンのための早いチケットを持っていません。 </p><p>そして、小さな魔術師はまだ旅行と通行人の通行人を感じました<br>ぶら下がっている橋の効果によると、小さな魔術師は考えています、姉の紙はすでにあなた自身と恋をしています。 </p><h3 id="ジュラシック・パーク"><a href="#ジュラシック・パーク" class="headerlink" title="ジュラシック・パーク"></a>ジュラシック・パーク</h3><p>私はレイダーズをチェックし、それがその後ろに使われるだろうと言ってレインコートを投げました。<br>真ん中で、私は誤った恐竜を見ました、そして、太陽の龍の外に突然突然描かれた、そして絵は怖かった。<br>すべての方法は黒い部屋に無関心であり、ゆっくり登る<br>突然の船が倒れ、観光客の最初の列が飛び越えました。<br>まあ、それは同じではありません </p><h3 id="フライングTianyi-Dragon"><a href="#フライングTianyi-Dragon" class="headerlink" title="フライングTianyi Dragon"></a>フライングTianyi Dragon</h3><p>そしてハリウッドの夢<br>フライングフラスコプレーヤーは座席に固定され、90度回転させ、地球に顔をゆっくり登る </p><p>しかし、この小さなマスターはそれほど多くはありません。<br>その隣に姉の紙ではない、2つが遅れている、あなたはそれを見ることができません。<br>私は私がぎこちなかったと感じただけで、私は数回巻きました、私は降りています。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-36.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-33.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-37.webp" alt=""></div></div></div><h3 id="ハリーポッター"><a href="#ハリーポッター" class="headerlink" title="ハリーポッター"></a>ハリーポッター</h3><p>長い森林道路の後、🦉🦉咕🦉、境 </p><p>バタービールがありますよ🧈🧈、Azkanの募集物 </p><h4 id="オリファンデキーショップ"><a href="#オリファンデキーショップ" class="headerlink" title="オリファンデキーショップ"></a>オリファンデキーショップ</h4><p>Harryが最初に魔法の杖を選ぶとき、NPCはランダムに子供を選び、プロットを取ります。<br>他の人は階下にあります </p><p>あなたが出てきた後、あなたは杖を使うことができます、あなたは呪文を見ることができます。 </p><h4 id="Hoggaz-Magic-and-Wizard-College"><a href="#Hoggaz-Magic-and-Wizard-College" class="headerlink" title="Hoggaz Magic and Wizard College"></a>Hoggaz Magic and Wizard College</h4><p>3D映画を見るために小さな車を取ります<br>キリ競争に参加するハリーRonggenを続けて </p><p>うわー、それは本当に楽しいです。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-39.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-40.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-41.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-42.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-43.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-44.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-46.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-47.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-49.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-52.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-54.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-55.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-57.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-58.webp" alt=""></div></div></div><h2 id="友達"><a href="#友達" class="headerlink" title="友達"></a>友達</h2><p>Global Studioから来た後は遅くなっています。<br>遊ぶ、私は小さくて精神、友人、すべてを送ることを期待していませんでした、トイレ、米の炊飯器、電気器具の山が戻ってくる… </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-59.webp" alt=""></p><hr><p>Translated by Google</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;大阪阪急シティ&quot;&gt;&lt;a href=&quot;#大阪阪急シティ&quot; class=&quot;headerlink&quot; title=&quot;大阪阪急シティ&quot;&gt;&lt;/a&gt;大阪阪急シティ&lt;/h1&gt;&lt;p&gt;夕方に行くために翌日にJRを取る &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ja/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ja/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/ja/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/ja/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>🇯🇵-1-1</title>
    <link href="https://leihao0.github.io/ja/japan-1-1/"/>
    <id>https://leihao0.github.io/ja/japan-1-1/</id>
    <published>2021-03-15T16:24:10.000Z</published>
    <updated>2021-03-22T16:00:09.114Z</updated>
    
    <content type="html"><![CDATA[<h2 id="千鳥"><a href="#千鳥" class="headerlink" title="千鳥"></a>千鳥</h2><p>これは何千もの鳥と呼ばれていることがわかりました。 </p><p>登る<br>小さな魔術師はまだ来ていると言った、それは山の上に登るのが良いです。<br>しかし、それは小さなものではありません。<br>地図を見下ろした、千の鳥はほぼ小さかった、小さな魔術がたくさんの画像を感じました。<br>それはまだ山の真ん中にあるようです、あなたが最近登るならば、私は残りの旅程を遅らせる必要があることを恐れています。<br>だから山を降りるだけです。 </p><p>私は後で戻ってきました、私はあまり距離がないことを学びました。<br>鳥が本当にあるので、それが少ない </p><a id="more"></a><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-04.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-11.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-10.webp" alt=""></div></div></div><p>誰もがQingquanによって手を洗っています<br>携帯電話によって洗われた小さなマスター。<br>私は来たいとき私は恐れています。<br>幸福があるかどうかわからない<br>まだ人々の周りの人々によって破裂していない </p><p>竹 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-17.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-16.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-15.webp" alt=""></div></div></div><p>夕食、ワインハウスは、地元の人がおしゃべりしてリラックスしている場所です。<br>ワインと比較して、それはまだ良い飲み物です。<br>スーパーマーケットの隣に販売されるさまざまなコミックマガジンが一緒に売る </p><h2 id="城崎温泉-♨️"><a href="#城崎温泉-♨️" class="headerlink" title="城崎温泉 ♨️"></a>城崎温泉 ♨️</h2><p>翌日、街の街に行くために小さな電車をしなさい。<br>小さなマスターは温泉を気にしませんでした。<br>しかし、Northernerとして、私は来たいと思います。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-20.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-21.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-22.webp" alt=""></div></div></div><h2 id="真正的温泉-♨️"><a href="#真正的温泉-♨️" class="headerlink" title="真正的温泉 ♨️"></a>真正的温泉 ♨️</h2><p>しかし、事実は想像を超えています </p><p>まず第一に、温泉は屋外の空気を持っています、池、秋の風の葉、そして雪が降る<br>暖かい春の水に泡立ち、あまりにも幸せにならないで </p><p>小さな魔術師は、彼らが到着する前に小さな魔術師が千鳥を強制した。<br>節プロペルスの痛みは畳でのみクロールすることができます </p><p>温泉の後、それは魔法のように見えた。 </p><p>上記だけではありません<br>偽のボイラーの水はシャワーを浴びることができるだけです<br>そして本物のスパは血を戻すことができます </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-26.webp" alt=""></div></div></div><p>11月のため、春、蒸気の近く<br>道路の横に温泉卵もあり、20分でも温泉で購入することもできます。<br>それを取り出して標準の砂糖の心の卵です </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-55.webp" alt=""></div></div></div><p>水は澄んだり魚です<br>大きなカニもあります<br>バス✓ここでシンガポールのようなものです<br>バスに乗る前に、バスを降りる前に小さなボタンを押してください。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-24.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-27.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-28.webp" alt=""></div></div></div><h2 id="日と山の海岸"><a href="#日と山の海岸" class="headerlink" title="日と山の海岸"></a>日と山の海岸</h2><p>サンフランシスとは異なり、それは違う、ここで海はきれいです、何もない<br>しかし、天候は瞬間、まだ風と美しい、突然雨、超寒さ<br>隣の隣の水族館を隠して、ホットコーヒーを弾くと雨を聴くのが暖かい </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-30.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-33.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-32.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-49.webp" alt=""></div></div></div><h2 id="虹"><a href="#虹" class="headerlink" title="虹"></a>虹</h2><p>人生は最初に虹を見ました<br>記念してZhang da Tuに来てください </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-37.webp" alt=""></p><h2 id="水族館"><a href="#水族館" class="headerlink" title="水族館"></a>水族館</h2><p>私はそれを買うことができません。<br>100元以上、7つのテーマが見ることができます<br>前の東京の水族館以上のもの<br>海のために、その場所は大きいです<br>私は巨大なシーホースを見ました<br>あなたの隣に体重を測定することもできます、21リトルメイジ==このシーホース<br>最後に、小さなイルカの小さな水性能があります。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-39.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-41.webp" alt=""></div></div></div><h2 id="温泉寺"><a href="#温泉寺" class="headerlink" title="温泉寺"></a>温泉寺</h2><p>その隣に丘があります、あなたはケーブルカーをすることができます。<br>山は高くないが、すでに雪が降っています。<br>軒先のデザインはとても良く、雪が飛び散らないでしょう。 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-57.webp" alt=""></p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-68.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-59.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-67.webp" alt=""></div></div></div><p>タイルのタイル<br>私がホテルに戻るとき、私はスプリンクラーの道路中心を見つけました。<br>非常に魔法のように、なぜこれをデザインしたいのか理解していません </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-71.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-73.webp" alt=""></div></div></div><p>荷物を大阪に詰めた </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-75.webp" alt=""></div></div></div><h2 id="カニレビア"><a href="#カニレビア" class="headerlink" title="カニレビア"></a>カニレビア</h2><h2 id="1つのブルエラバン"><a href="#1つのブルエラバン" class="headerlink" title="1つのブルエラバン"></a>1つのブルエラバン</h2><p>グルメストリート<br>カニの音楽、事前に予約をする必要がある、または店舗は座席なしです。<br>それは遊ぶことができますが、この種の困難は非常に困難です、それで畳のふりをするためにくぼんだ座席があります。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-78.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-82.webp" alt=""></div></div></div><hr><p><a href="https://twitter.com/leiaho0">Twitterでフォローする</a> </p><hr><p>Translated by Google</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;千鳥&quot;&gt;&lt;a href=&quot;#千鳥&quot; class=&quot;headerlink&quot; title=&quot;千鳥&quot;&gt;&lt;/a&gt;千鳥&lt;/h2&gt;&lt;p&gt;これは何千もの鳥と呼ばれていることがわかりました。 &lt;/p&gt;
&lt;p&gt;登る&lt;br&gt;小さな魔術師はまだ来ていると言った、それは山の上に登るのが良いです。&lt;br&gt;しかし、それは小さなものではありません。&lt;br&gt;地図を見下ろした、千の鳥はほぼ小さかった、小さな魔術がたくさんの画像を感じました。&lt;br&gt;それはまだ山の真ん中にあるようです、あなたが最近登るならば、私は残りの旅程を遅らせる必要があることを恐れています。&lt;br&gt;だから山を降りるだけです。 &lt;/p&gt;
&lt;p&gt;私は後で戻ってきました、私はあまり距離がないことを学びました。&lt;br&gt;鳥が本当にあるので、それが少ない &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ja/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ja/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/ja/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/ja/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>🇯🇵-1-0</title>
    <link href="https://leihao0.github.io/ja/japan-1-0/"/>
    <id>https://leihao0.github.io/ja/japan-1-0/</id>
    <published>2021-03-14T02:38:19.000Z</published>
    <updated>2021-03-14T11:21:52.637Z</updated>
    
    <content type="html"><![CDATA[<h1 id="京都"><a href="#京都" class="headerlink" title="京都"></a>京都</h1><p>11の休日は🇮🇹から戻ってきました<br>クレジットカードがブラッシングされているため、中国商人銀行がZhang Premiumに送られたため </p><p>半月後に1日、メープルの葉を見るために小さな魔術が日本に送られます。<br>ルートプランニングが行われたことを示します<br>京都 -&gt; 奈良 -&gt; 城崎 -&gt; 大阪<br>システムには良くない場合は偽造してください。 </p><p>小さなマスターは関西地域を見ています、私はそこにいませんでした。<br>すぐに、6月は3年間の往復ビザです。<br>あなたも一緒に行くことができます </p><p>わずか2週間ですが、時間はより緊急です<br>幸いなことに、チケットを購入し、狂った、2週間をやる、事前にタスクを完了<br>コードを組織に提出した後、あなたは2番目の日本語を始めました </p><p>私はまだそれを見る方法がわからない。<br>私が空港に到着したとき、私はこの単一の小飛行機を見たとき、私は愚かだった。<br>それはちょうどボーイング737です<br>最大イベントはまだ発生していませんが<br>しかし、それはまだ海に落ちる場所が飛ぶことを飛ぶことを心配しています。<br>失われた本線を開く </p><a id="more"></a><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-02.webp" alt=""></div></div></div><h2 id="京都地下鉄駅"><a href="#京都地下鉄駅" class="headerlink" title="京都地下鉄駅"></a>京都地下鉄駅</h2><p>同じプラットフォームの前回のプラットフォームの前回 </p><p>小さな魔術師はまだ初めて、地下鉄駅は巨大なモールです。<br>合計7階、もっと食べる<br>11月の初めにのみ、クリスマスでいっぱいになっています。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-05.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-08.webp" alt=""></div></div></div><h2 id="ゴールデンパビリオンテンプル"><a href="#ゴールデンパビリオンテンプル" class="headerlink" title="ゴールデンパビリオンテンプル"></a>ゴールデンパビリオンテンプル</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-12.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-10.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-11.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-15.webp" alt=""></div></div></div><h2 id="京都御苑"><a href="#京都御苑" class="headerlink" title="京都御苑"></a>京都御苑</h2><p>赤緑色の間に特別な黄色い葉の木があります </p><blockquote><p>ヘッドレス </p></blockquote><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-23.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-24.webp" alt=""></div></div></div><p>来る時間、誰もいません </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-20.webp" alt=""></div></div></div><h2 id="清水寺"><a href="#清水寺" class="headerlink" title="清水寺"></a>清水寺</h2><p>着物の姉妹を見てください </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-28.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-32.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-33.webp" alt=""></div></div></div><h2 id="高台寺"><a href="#高台寺" class="headerlink" title="高台寺"></a>高台寺</h2><p>結婚式の撮影で家族に触れる </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-35.webp" alt=""></div></div></div><p>夕日と奇妙な蛇口 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-36.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-38.webp" alt=""></div></div></div><p>多くの人々が崇拝仏の神を求めていることを見て<br>小さな魔術師もコインロックを唱えるつもりです。<br>私はアプリがオンラインであることを願っています、クラッシュしないでください♥ </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-41.webp" alt=""></div></div></div><h2 id="ルサンの小電車"><a href="#ルサンの小電車" class="headerlink" title="ルサンの小電車"></a>ルサンの小電車</h2><p>翌朝、朝早くLushanの小電車に行きました。風景は絵のようなものだと言われています。<br>ただし、必ず山の側面を購入してください。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-47.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-49.webp" alt=""></div></div></div><h2 id="嵯峨野竹林小径"><a href="#嵯峨野竹林小径" class="headerlink" title="嵯峨野竹林小径"></a>嵯峨野竹林小径</h2><p>st st </p><p>これは京都のパンフレットで見られる竹林です。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-57.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-52.webp" alt=""></div></div></div><blockquote><p>深い森に背景、苔をコピーします </p></blockquote><p>こちらのコケは素晴らしい、一度小さな魔術師の携帯電話の壁紙 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-92.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-93.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-54.webp" alt=""></div></div></div><p>シフト </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-62.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-63.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-64.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-65.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-67.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-68.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-69.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-70.webp" alt=""></div></div></div><p>珠江首相の詩 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-73.webp" alt=""></div></div></div><p>あなたは人間の車をやることができます。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-78.webp" alt=""></div></div></div><p>それはたくさんの枯れたものですが<br>こっぱでも赤も美しいとしても、それは勝ちません。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-76.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-81.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-82.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-83.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-84.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-85.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-86.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-87.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-88.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-89.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-90.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-91.webp" alt=""></div></div></div><p>東京の街の風景とは異なります </p><p>京都での風景も爆発的です。 </p><p>次回、私は一緒に姉の紙を取ります。<br>小さなマスターが考えています </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;京都&quot;&gt;&lt;a href=&quot;#京都&quot; class=&quot;headerlink&quot; title=&quot;京都&quot;&gt;&lt;/a&gt;京都&lt;/h1&gt;&lt;p&gt;11の休日は🇮🇹から戻ってきました&lt;br&gt;クレジットカードがブラッシングされているため、中国商人銀行がZhang Premiumに送られたため &lt;/p&gt;
&lt;p&gt;半月後に1日、メープルの葉を見るために小さな魔術が日本に送られます。&lt;br&gt;ルートプランニングが行われたことを示します&lt;br&gt;京都 -&amp;gt; 奈良 -&amp;gt; 城崎 -&amp;gt; 大阪&lt;br&gt;システムには良くない場合は偽造してください。 &lt;/p&gt;
&lt;p&gt;小さなマスターは関西地域を見ています、私はそこにいませんでした。&lt;br&gt;すぐに、6月は3年間の往復ビザです。&lt;br&gt;あなたも一緒に行くことができます &lt;/p&gt;
&lt;p&gt;わずか2週間ですが、時間はより緊急です&lt;br&gt;幸いなことに、チケットを購入し、狂った、2週間をやる、事前にタスクを完了&lt;br&gt;コードを組織に提出した後、あなたは2番目の日本語を始めました &lt;/p&gt;
&lt;p&gt;私はまだそれを見る方法がわからない。&lt;br&gt;私が空港に到着したとき、私はこの単一の小飛行機を見たとき、私は愚かだった。&lt;br&gt;それはちょうどボーイング737です&lt;br&gt;最大イベントはまだ発生していませんが&lt;br&gt;しかし、それはまだ海に落ちる場所が飛ぶことを飛ぶことを心配しています。&lt;br&gt;失われた本線を開く &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ja/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ja/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/ja/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/ja/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>🇮🇹-0-2</title>
    <link href="https://leihao0.github.io/ja/italy-0-2/"/>
    <id>https://leihao0.github.io/ja/italy-0-2/</id>
    <published>2021-02-12T16:00:00.000Z</published>
    <updated>2017-09-30T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="バチカン"><a href="#バチカン" class="headerlink" title="バチカン"></a>バチカン</h2><p>イタリアのオリジナルバチカン<br>この地域は国内大学や大学よりも少ない<br>領土は開いていません<br>美術館に加えて </p><a id="more"></a><h3 id="エジプト"><a href="#エジプト" class="headerlink" title="エジプト"></a>エジプト</h3><p>私はミイラがより恐ろしいと感じることを見ました。<br>撮影してください<br>私は魂を追うことを恐れています </p><p>Nosbisもあります </p><p>あなたがAssassinの信条を演奏するなら：原産地<br>たくさんの身近な要素を見るでしょう </p><h3 id="神話の英雄"><a href="#神話の英雄" class="headerlink" title="神話の英雄"></a>神話の英雄</h3><p>残念ながら、小さな魔術師は芸術栽培における対応するレベルに達していません。<br>私はこれらの教科書の芸術を見ました、そして結果は誰が誰であるかわからなかった。<br>恥ずかしい </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-06.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-10.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-14.jpg" alt=""></div></div></div><h3 id="パインアートガーデン＆壊れた地球"><a href="#パインアートガーデン＆壊れた地球" class="headerlink" title="パインアートガーデン＆壊れた地球"></a>パインアートガーデン＆壊れた地球</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-17.jpg" alt=""></div></div></div><h3 id="ロイの穴とその息子"><a href="#ロイの穴とその息子" class="headerlink" title="ロイの穴とその息子"></a>ロイの穴とその息子</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-28.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-25.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-27.jpg" alt=""></div></div></div><h3 id="展示場ホール"><a href="#展示場ホール" class="headerlink" title="展示場ホール"></a>展示場ホール</h3><p>中央センターは、Nero、Neroで使用されているビデです。 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-29.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-31.jpg" alt=""></div></div></div><h3 id="壁画"><a href="#壁画" class="headerlink" title="壁画"></a>壁画</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-37.jpg" alt=""></div></div></div><h3 id="ラファエル絵画室"><a href="#ラファエル絵画室" class="headerlink" title="ラファエル絵画室"></a>ラファエル絵画室</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-39.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-40.jpg" alt=""></div></div></div><h3 id="Sistin-Chapel"><a href="#Sistin-Chapel" class="headerlink" title="Sistin Chapel"></a>Sistin Chapel</h3><p>Michelangeloの最終的な試みと創世記<br>写真を撮ることはできません<br>あなたは1人あたり15分だけ滞在することができます。 </p><p>通常、実際には最も中間、実際には9世紀が普通の世紀があります。<br>暗闇、クリエイティブな日、月、草、Semland、アダムの作成、イブ、オリジナルの罪 - 拡張エデン、ノア献身、素晴らしい洪水、Naahirun </p><h3 id="らせん階段"><a href="#らせん階段" class="headerlink" title="らせん階段"></a>らせん階段</h3><p>輸出は衝撃を受け続けています<br>ここにいることが判明しました </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-41.jpg" alt=""></div></div></div><h3 id="聖カップ"><a href="#聖カップ" class="headerlink" title="聖カップ"></a>聖カップ</h3><p>運命滞在夜 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-44.jpg" alt=""></div></div></div><h2 id="セントピータースクエア"><a href="#セントピータースクエア" class="headerlink" title="セントピータースクエア"></a>セントピータースクエア</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-45.jpg" alt=""></div></div></div><h2 id="エンジェルフォート"><a href="#エンジェルフォート" class="headerlink" title="エンジェルフォート"></a>エンジェルフォート</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-47.jpg" alt=""></div></div></div><p>突然アサシンの信条 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-53.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-54.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-55.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-56.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-57.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-58.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-59.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-60.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-61.jpg" alt=""></div></div></div><h2 id="日没"><a href="#日没" class="headerlink" title="日没"></a>日没</h2><p>初めて夕日を見ています </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-62.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-66.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-67.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-69.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-68.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-70.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-71.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-73.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-74.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-76.jpg" alt=""></div></div></div><h2 id="次の日"><a href="#次の日" class="headerlink" title="次の日"></a>次の日</h2><p>道路上、弟は一日のツアーバスを推薦するようになる<br>チケットを手に入れるためにお金を受け取り、それから人々は消えた<br>私が嘘つきだと思ったとき、私の弟は2票で戻ってきました。<br>ループ、あなたは常にバスで降りることができます、またはとても良い </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-78.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-79.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-82.jpg" alt=""></div></div></div><h2 id="パンテオン"><a href="#パンテオン" class="headerlink" title="パンテオン"></a>パンテオン</h2><p>人が多すぎると、私は外側を見ました。 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-80.jpg" alt=""></p><h2 id="ローマの戦いの獣"><a href="#ローマの戦いの獣" class="headerlink" title="ローマの戦いの獣"></a>ローマの戦いの獣</h2><p>スコーピオ、最後に私が獣を見たとき、リトルマージはアサシンの信条を再生しました：黙示録<br>獣を登る、夕日を見てください<br>私は長い間ショックを受けました。<br>私はそれを三次元の世界でそれを見ることを期待していませんでした。<br>それは素晴らしいですか？ </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-92.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-86.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-91.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-89.jpg" alt=""></div></div></div><h2 id="Arc-de-Triomphe"><a href="#Arc-de-Triomphe" class="headerlink" title="Arc de Triomphe"></a>Arc de Triomphe</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-87.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-88.jpg" alt=""></div></div></div><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-90.jpg" alt=""></p><h2 id="エルメス小さな財布"><a href="#エルメス小さな財布" class="headerlink" title="エルメス小さな財布"></a>エルメス小さな財布</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-94.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-95.jpg" alt=""></div></div></div><p>CBDの高級ビルディングストリートに戻る<br>HERUBERED LOVE MA SHI BAGを購入することをお勧めします<br>贅沢にあるものを言うと、それはまた最高の存在です </p><p>リトルマージは、アップルがストラップを発売する前にヘルメスを聞いていませんでした。<br>自然には信じていません<br>私はそれを読みたいです、私にうそをつくな。<br>グーグルに行く「エルメスは贅沢ではありません」<br>かもしれないかもしれないことを見つけるために驚いた </p><p>それを磨き、私は子犬のパックを買いました。<br>空白のボックスに注意してください<br>チェックアウトすると、その隣のゴミ山の中の巨大な比類のないボックスが表示されます。 </p><h2 id="空港"><a href="#空港" class="headerlink" title="空港"></a>空港</h2><p>ずっと拷問を受けて、私はついに戻ってきました。<br>日本とは異なり、ヨーロッパは空港で払い戻すことができます<br>ぴんぴん </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-97.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-98.jpg" alt=""></div></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;バチカン&quot;&gt;&lt;a href=&quot;#バチカン&quot; class=&quot;headerlink&quot; title=&quot;バチカン&quot;&gt;&lt;/a&gt;バチカン&lt;/h2&gt;&lt;p&gt;イタリアのオリジナルバチカン&lt;br&gt;この地域は国内大学や大学よりも少ない&lt;br&gt;領土は開いていません&lt;br&gt;美術館に加えて &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ja/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ja/tags/littlemaster/"/>
    
      <category term="Italy" scheme="https://leihao0.github.io/ja/tags/italy/"/>
    
      <category term="🇮🇹" scheme="https://leihao0.github.io/ja/tags/%F0%9F%87%AE%F0%9F%87%B9/"/>
    
  </entry>
  
  <entry>
    <title>コロナウイルスの陰で中国に戻る</title>
    <link href="https://leihao0.github.io/ja/fly-back-to-china-under-covid-19/"/>
    <id>https://leihao0.github.io/ja/fly-back-to-china-under-covid-19/</id>
    <published>2020-12-20T07:52:43.000Z</published>
    <updated>2020-12-20T23:56:39.372Z</updated>
    
    <content type="html"><![CDATA[<p>新しい美術館の世界的な流行状況は2020年の終わりに改善されません<br>そして冬の到来とともに、徐々に別の発生の兆候があります<br>しかし最近、小さな魔道士は家に帰る必要があります<br>さまざまなワクチンが世界中でワクチン接種されていますが </p><table><thead><tr><th>会社</th><th>タイプ</th><th>投与量</th><th>有効性</th><th>保管℃</th></tr></thead><tbody><tr><td>BioNTech / Pfizer</td><td>mRNA</td><td>x2</td><td>95％</td><td>-70</td></tr><tr><td>モダン</td><td>mRNA</td><td>x2</td><td>95％</td><td>-20</td></tr><tr><td>オックスフォード/アストラゼネカ</td><td>アデノウイルスベクター</td><td>x2</td><td>62-90％</td><td>0</td></tr></tbody></table><p>しかし、それでも家に帰るには14日間の隔離が必要です </p><a id="more"></a><h2 id="準備ができました"><a href="#準備ができました" class="headerlink" title="準備ができました"></a>準備ができました</h2><p>地元の大使館にアクセスして、エントリー情報を入手してください<br><a href="http://www.chinaembassy.org.sg/chn/lsfw/zytzs/t1838128.htm">ニュージーランド大使館</a>によると、シンガポールを例にとると </p><p>10月以降の搭乗は、おそらくいくつかの段階を経て、段階的に引き締められます </p><ol><li>核酸増幅試験 </li><li>核酸+血清IgMダブルネガティブ証明書 </li><li>WeChatミニプログラムで流行予防健康コードを申請する必要があります </li></ol><h2 id="核酸増幅試験"><a href="#核酸増幅試験" class="headerlink" title="核酸増幅試験"></a>核酸増幅試験</h2><p>11月に検査の予約をする必要があり、12月に予約をする必要はありません。承認された病院を見つけたら、直接検査を行うことができます。<br>小さな魔道士が住んでいるアパートのすぐ隣に診療所があります。5分間歩きます。<br>予定がないので人が多すぎて1時間くらい待ちました<br>血を引いて鼻を刺した<br>私は以前にこのテストを恐れていましたが、シンガポールの医師はより穏やかで、それほど不快ではありません </p><p>採血後しばらく押す必要があることをお知らせします。採血前の弟が採血し、バンドエイドを慎重に使用しませんでした🩹押してください<br>その結果、血が川に流れ込み、地面の服が血で覆われ、ひどいものでした😨 </p><h2 id="健康コード"><a href="#健康コード" class="headerlink" title="健康コード"></a>健康コード</h2><p>SMSと翌朝の電子メールで受信した二重陰影証明<br>ただし、WeChatアップルはドキュメントを送信できません<br>メイジとして、小さなメイジはそれがDNS解決の問題であると大胆に推測しました<br>Cloudflareは、アップルトのサーバーIPを正しく返しませんでした。<br>電話📱DNSを114.114.114.114に変更すると、すばらしいでしょう<br>Mugglesをどうするかため息をつくだけではありません </p><p>約1時間後にヘルスコードを受け取りました<br>万が一に備えてスクリーンショットを保存する </p><h2 id="生化学スーツ"><a href="#生化学スーツ" class="headerlink" title="生化学スーツ"></a>生化学スーツ</h2><p>空港で生化学スーツを着て帰国する人々に怯えていた。<br>小さな魔道士が揺れていて、+大人のおむつセットを購入しました<br>密かに試着するのは不快でした<br>北半球が年末の冬であることを考えると、トロピカルTシャツを着て飛行機に乗り、服を着ずに飛行機から降りると、その場で間違いなくひどい寒さになります。 </p><p>生化学スーツの着用と服の追加が大きな問題になります </p><p>CDCの<a href="https://chinese.cdc.gov/coronavirus/2019-ncov/travelers/travel-during-covid19.html">COVID-19流行中の国内旅行</a>を繰り返し読んだ後、小さなマスターは結論を出しました </p><ul><li>飛行機は新鮮な空気を持っています </li><li>マスクを着用してください </li><li>柔らかな目と鼻ではない </li></ul><p>新しい王冠の主な感染経路は呼吸器系です。小さな魔道士は、** N95 +外科用マスク+ゴーグル**を身に着けているのは安心できるはずだと感じています。 </p><h2 id="帰りのフライト"><a href="#帰りのフライト" class="headerlink" title="帰りのフライト"></a>帰りのフライト</h2><p>現在、シンガポールから北京への直行便はありません。<br>最初に上海に行き、14回の隔離後に転送することしか選択できません </p><p>シンガポールから上海への直行便は週に3回のみです。<br>月曜日はシンガポール航空、木曜日はイースタン航空、金曜日の夜はジュネヤオ航空 </p><p>イースタンエアラインズは1枚の荷物しかチェックできず、追加の荷物を購入する必要があります。1枚は500RMBです。<br>アプリでの事前購入の20％割引 </p><p>搭乗直前の健康コードに加えて、税関旅客ミニプログラムを使用してエントリー情報を入力する必要もあります </p><h2 id="イースタンエアラインズ"><a href="#イースタンエアラインズ" class="headerlink" title="イースタンエアラインズ"></a>イースタンエアラインズ</h2><p>午後3:00 </p><p>搭乗口を待つ間、約半数の人が生化学スーツを着てしっかりと覆っていました。<br>実際、フロントセキュリティチェックでは、ベルトなどの理由で生化学サービスの半分を負担しなければならなかったため、非常に恥ずかしかったです。<br>この場合、作業は中断されませんか？どのような保護効果がありますか？ </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-02.jpg" alt=""></div></div></div><p>乗組員はまた、2層マスク+ゴーグルを着用しています </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-03.jpg" alt=""></p><p>飛行機が登った後、小さな魔道士は衛星Wi-Fiに接続し、家族が心配する必要がないように最新のニュースで家族を更新し続けました。 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-05.jpg" alt=""></p><p>流行はありますが、食事はまだ提供されています<br>乗客は少なく、小さな魔法使いが真ん中にいて、どちらの側にも誰もいません。<br>だから、間違ったピークが食べるのを待つのではなく、スナックを受け取ってから食べるのが待ちきれませんでした。 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-04.jpg" alt=""></p><p>窓際の左側の姉がしっかりと包み込み、旅行中ずっと食べたり、飲んだり、トイレに行ったりしませんでした。<br>また素晴らしい </p><h2 id="ハード核酸検出"><a href="#ハード核酸検出" class="headerlink" title="ハード核酸検出"></a>ハード核酸検出</h2><p>午後21時30分 </p><p>下船前にQRコードを確認してください<br>それから、核酸検査のために彼の鼻を再び突く<br>小さな魔道士は彼がすでに経験を持っていると言いました。<br>ミスシスターは中国がより厳しいと言いました、私はより軽くしようとします </p><p>それから私はそれをシンガポールよりも深く刺し、それから綿の綿棒を数回回しました<br>小さな魔道士はそれが終わったと思い、OKのジェスチャーをしました<br>意外にも、数秒待った後、ミスシスターは数回引き返しました<br>次に、綿の綿棒を壊して、テストチューブに入れます<br>小さな魔道士が話しかけようとしていた、妹は別の綿の綿棒を取り出した<br>右の鼻を時計回りに向け、停止し、反時計回りに、同じようにします </p><p>小さな魔道士は涙をこらえ、ありがとうと言いました🙏<br>結局のところ、夜遅く、みんな一生懸命働いています </p><h2 id="エントリ"><a href="#エントリ" class="headerlink" title="エントリ"></a>エントリ</h2><p>午後22時10分 </p><p>エントリーフォーム、パスポートを確認してください </p><p>国境の弟は、小さな魔道士のビザをめくり、章を変えました。<br>次に、IDカードは消磁される可能性があるため、パスポートと一緒にしないでください。 </p><p>午後22時20分 </p><p>セキュリティチェック中にトロリーを忘れないでください </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-07.jpg" alt=""></div></div></div><p>夕方22時30分 </p><p>上海の国内および海外の迂回と孤立 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-08.jpg" alt=""></div></div></div><h2 id="悪夢"><a href="#悪夢" class="headerlink" title="悪夢"></a>悪夢</h2><p>これは旅行全体の悪夢です<br>今日はフライトが多すぎるため、バスは孤立しています🚌準備が不十分です<br>長い待ち時間を始めました⌛️ </p><p>00:40 AM<br>パスポート登録 </p><p>待って待って、上海は夜遅くまでとても寒い<br>幸いなことに、出発する前に、シンガポール国立大学の友人が暖かい機器のセットを購入するのを手伝ってくれました<br>小さな魔道士は暖かいものを着て立ち上がって眠りに落ちました </p><p>2:33 AM<br>待って、バスに乗ると、スタッフはパスポートがホテルであなたに返されることを思い出させます </p><p>高速で、車の中で揺れと揺れ<br>ヒーターで眠りに落ちた<br>高速車を降りて立ち止まりました。目を覚ますと、夜遅くまで待たなければならなかったのは1万個の赤信号でした。 </p><p>立ち止まって行き、苦しみ </p><p>隔離ホテルはランダムに割り当てられているので、良い高価なものは安いです<br>しかし今回は、小さな魔道士はもはやお金を節約することはできません。 </p><p>神様、私にもっと良いホテルを割り当ててください🏨 </p><h2 id="インターナショナルスパ"><a href="#インターナショナルスパ" class="headerlink" title="インターナショナルスパ"></a>インターナショナルスパ</h2><p>午前4時50分 </p><p>ついに隔離ホテルに到着<br>小さな魔道士が見上げると、それが高い建物であることがわかりました。直感的にこのホテルは良いです。 </p><p>地図を開いてみると、5つ星でした。<br>上海の国際スパ </p><p>ひそかに幸せ<br>ポールテールなし </p><p>しかし、ガチョウはまだ降りることができません<br>最初の数台のバスがチェックインするのを待つ必要があります </p><p>午前5時50分 </p><p>最後に降りる<br>パスポートIDを登録する </p><ul><li>ホテル350日、Alipay、WeChat、UnionPayおよびその他の方法を使用して送金できます </li><li>1日100日3回の食事ですが、ホテルのケータリングではなく、外注のボックスランチです。 </li><li>自分でテイクアウトを注文して、毎日12時と6時に配達することもできます。 </li><li>クーリエはメールのみを受信できますが、メールは送信できません </li><li>1日2回体温を測る </li><li>ゴミ袋は密閉されてドアの外に置かれ、全身の生化学スーツを着たスタッフは定期的に掃除をします </li></ul><h2 id="チェックイン"><a href="#チェックイン" class="headerlink" title="チェックイン"></a>チェックイン</h2><p>午前6時10分 </p><p>それから小さな魔道士は14日間の検疫生活を始めました<br>ママは小さな魔道士が退屈するのではないかと心配していました<br>しかし、小さな魔道士はもともと家でしたが、今では法律に従って人に会う必要はありません。<br>また、初めてシンガポールに行ったときに泊まったMホテルのようです </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-12.jpg" alt=""></div></div></div><h2 id="14日間の隔離"><a href="#14日間の隔離" class="headerlink" title="14日間の隔離"></a>14日間の隔離</h2><p>もちろん、隔離中に軽く取ることができません<br>途中で同じ国から来た観光客との比較<br>孤立したホテルでは、さまざまな国の人々と出会うでしょう </p><ul><li>たとえば、12月20日<a href="https://www.zaobao.com.sg/znews/singapore/story20201220-1110087">13人が隔離され、冠状動脈疾患が確認された</a> </li><li>検疫終了後16日目に病気になる14人もいます </li><li>北京14 + 7医学的観察 </li><li>英国コロナウイルスの新しい亜種の感染性が70％増加 </li><li>..。 </li></ul><p>そのため、一方では窓を開けて🪟換気を行い、空気の循環を確保してウイルス濃度を減らします<br>一方、頻繁に手を洗ってください🧽、目や鼻を柔らかくするのではなく👀👃、正直にマスクを着用してください😷 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;新しい美術館の世界的な流行状況は2020年の終わりに改善されません&lt;br&gt;そして冬の到来とともに、徐々に別の発生の兆候があります&lt;br&gt;しかし最近、小さな魔道士は家に帰る必要があります&lt;br&gt;さまざまなワクチンが世界中でワクチン接種されていますが &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;会社&lt;/th&gt;
&lt;th&gt;タイプ&lt;/th&gt;
&lt;th&gt;投与量&lt;/th&gt;
&lt;th&gt;有効性&lt;/th&gt;
&lt;th&gt;保管℃&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;BioNTech / Pfizer&lt;/td&gt;
&lt;td&gt;mRNA&lt;/td&gt;
&lt;td&gt;x2&lt;/td&gt;
&lt;td&gt;95％&lt;/td&gt;
&lt;td&gt;-70&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;モダン&lt;/td&gt;
&lt;td&gt;mRNA&lt;/td&gt;
&lt;td&gt;x2&lt;/td&gt;
&lt;td&gt;95％&lt;/td&gt;
&lt;td&gt;-20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;オックスフォード/アストラゼネカ&lt;/td&gt;
&lt;td&gt;アデノウイルスベクター&lt;/td&gt;
&lt;td&gt;x2&lt;/td&gt;
&lt;td&gt;62-90％&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;しかし、それでも家に帰るには14日間の隔離が必要です &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Covid" scheme="https://leihao0.github.io/ja/tags/covid/"/>
    
  </entry>
  
  <entry>
    <title>米国株で口座を開設する方法</title>
    <link href="https://leihao0.github.io/ja/how-to-buy-us-stocks/"/>
    <id>https://leihao0.github.io/ja/how-to-buy-us-stocks/</id>
    <published>2020-11-05T15:00:03.000Z</published>
    <updated>2020-12-20T23:53:08.322Z</updated>
    
    <content type="html"><![CDATA[<p>コード <code>0CM1QE</code>を参照してください </p><p>この2日間の米国の選挙<br>時差があるため、リークとして共有しないでください。<br>真夜中に起きて肉を切る<br>現在、🚀は一般的に上昇していますが、市場の恥ずかしさに参入する勇気はありません </p><p>その時に口座を開設するという悲しい旅を共有してください </p><a id="more"></a><h2 id="米国の証券会社"><a href="#米国の証券会社" class="headerlink" title="米国の証券会社"></a>米国の証券会社</h2><p>多くの米国の証券会社は手数料を免除されているため、最初に見てください </p><ul><li>ロビンフッド(より良いユーザーインターフェース) </li><li>TDアメリトレード(旧ブランド) </li><li>Firstrade(中国のカスタマーサービス) </li></ul><p>ロビンフッド両当事者は招待されたときに株を送ることができるので、私は米国の友人にコードを入手するように頼みました、そしてそれから私は公式ウェブサイトに行きました、そして彼らが米国内でのみ提出できることを知りました…<br>TD AmeritradeにはSGとウェブサイトがありますが、情報を送信した後の最後のステップで立ち往生する方法がわかりません。過去に誰もメールを確認していません。<br>Firstrade、非アメリカ人は自動的に免税フォームの提出を手伝いました。情報を提出した後、アカウントは数営業日後にようやく開設され、預金はACH、Check、WireTrannsferのみであることがわかりました。 </p><p>ACHとCheckの両方が私の米国の銀行口座に送金する必要があるので、絶対に必要ありません<br>WireTrannsferには別の料金があります </p><h2 id="シンガポール証券会社"><a href="#シンガポール証券会社" class="headerlink" title="シンガポール証券会社"></a>シンガポール証券会社</h2><p>それから私はシンガポールを調査し、これらの人々が実際にUOBまたはDBS銀行の取引口座に行ったことを発見しました<br>手数料が高すぎて価値がないと聞いただけです </p><h2 id="国内証券会社"><a href="#国内証券会社" class="headerlink" title="国内証券会社"></a>国内証券会社</h2><p>さて、私は周りを回って戻ってきました… </p><ul><li>Xiaomiのタイガー </li><li>テンセントのフツ </li><li>スノーボール </li></ul><p>嬉しいです🐯シンガポールの口座開設をサポートします、はい </p><ul><li>米国株、香港株、シンガポール株、オーストラリア株.. </li><li>プレポストマーケット、フューチャーズをサポート </li><li>レバー </li></ul><p>もともとパスポートなどの情報をアップロードする予定でしたが、とにかく前もって準備しました<br>Singpass認証がサポートされていることが判明し、クリックして前後にジャンプし、認証されました… </p><p>神はそれがとても簡単であることを知っていました<br>去年開けましたか？ </p><p>そうでなければ、それはすでに数回です<br>または屋上から飛び降りた </p><h2 id="取引料金"><a href="#取引料金" class="headerlink" title="取引料金"></a>取引料金</h2><p>私はオプションを(あえて)購入しないので<br>通常の取引には3つの追加費用があります </p><ul><li>2 \ $を購入する </li><li>総在庫の0.1％ </li><li>2 \ $を売る </li></ul><p>だから、下着を全部持っていても🐯いっぱいになります </p><h2 id="コードを参照"><a href="#コードを参照" class="headerlink" title="コードを参照"></a>コードを参照</h2><p>あなたは私のコード <code>0CM1QE</code>を使うことができます </p><p>現在の活動は双方だと思います </p><ul><li>5コミッション無料 </li><li>2000SGDを充電して30SGDを取得し、3Wを充電して100SGDを取得します </li></ul><p>まあ、参照したいという欲求はまったくありません<br>以前はアリの株を配っていたのを覚えていますが、今は高すぎるのでしょうか？ </p><h2 id="トランスクリプト"><a href="#トランスクリプト" class="headerlink" title="トランスクリプト"></a>トランスクリプト</h2><p>過去2日間の世界的な株式市場のブームを見てみましょう。夜は眠れないのではないかと心配し、激しい手術の後にレポートカードを持っていました。 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/how-to-buy-us-stocks.jpeg" alt=""></p><p>だからあなたは何を待っていますか、サインアップしてください </p><p>屋上でお待ちしております<del>~</del> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;コード &lt;code&gt;0CM1QE&lt;/code&gt;を参照してください &lt;/p&gt;
&lt;p&gt;この2日間の米国の選挙&lt;br&gt;時差があるため、リークとして共有しないでください。&lt;br&gt;真夜中に起きて肉を切る&lt;br&gt;現在、🚀は一般的に上昇していますが、市場の恥ずかしさに参入する勇気はありません &lt;/p&gt;
&lt;p&gt;その時に口座を開設するという悲しい旅を共有してください &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Stock" scheme="https://leihao0.github.io/ja/tags/stock/"/>
    
      <category term="Broker" scheme="https://leihao0.github.io/ja/tags/broker/"/>
    
  </entry>
  
  <entry>
    <title>Pythonの目的は何ですか</title>
    <link href="https://leihao0.github.io/ja/What-is-Python-Used-for/"/>
    <id>https://leihao0.github.io/ja/What-is-Python-Used-for/</id>
    <published>2020-09-15T03:17:56.000Z</published>
    <updated>2020-12-20T23:53:08.322Z</updated>
    
    <content type="html"><![CDATA[<h1 id="実世界でPythonを使用する方法"><a href="#実世界でPythonを使用する方法" class="headerlink" title="実世界でPythonを使用する方法"></a>実世界でPythonを使用する方法</h1><p>** Python **は、世界で最も人気のあるコーディング言語の1つです。 </p><p>米国のトップ大学のほとんどは、入門コーディングコースでPythonを使用しています。Pythonを使用して簡単なゲームを作成したり、Webページから情報を解析したり、言語処理を実行したりする方法を学生に教えてください。 </p><p>それにもかかわらず、多くの親や学生は、Pythonが実際に会社やさまざまな分野でどのように使用されているかを知りたいと思うことがよくありますか？ </p><p>** Python <strong>が今日の主要な業界をどのように推進し</strong>、多くのコンピューターサイエンス分野で重要な役割を果たしているかを学ぶために読んでください。 **** </p><a id="more"></a><h2 id="なぜPythonを選ぶのですか？"><a href="#なぜPythonを選ぶのですか？" class="headerlink" title="なぜPythonを選ぶのですか？"></a>なぜPythonを選ぶのですか？</h2><p>[Python](<a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJJMxTc?utm_source=gout_mx">https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJJMxTc?utm_source=gout_mx</a> <strong>および</strong>ユニバーサルコーディング言語**-これは、理解しやすく、さまざまな問題の解決に使用できることを意味します。 </p><p>シンプルな構文、高い読みやすさ、オペレーティングシステム全体での使用により、Pythonは、さまざまなアプリケーションでの学習と使用に使用できる貴重な言語です。 </p><p>！<a href="https://images.ctfassets.net/mrop88jh71hl/70P7f6p7J1Bk4VY8GDzm95/58d544a1044609e94a001523d9583f22/python-code-application.jpeg">画面上のPythonコード。 </a> </p><p>エンジニアの画面に表示されるPythonのコード例。 </p><p>したがって、Pythonが今日の求人市場だけでなく、私たちが毎日使用する一般的なテクノロジーでも普及していることは驚くべきことではありません。 </p><p>** Pythonプログラミング<strong>は、ほぼすべての業界で使用できるスキルであり、その役割はソフトウェア開発をはるかに超えています。 **金融、ヘルスケア、</strong>および<strong>保険</strong>などの業界から<strong>航空宇宙</strong>から<strong>エンターテイメント</strong>まで-[Pythonベースのテクノロジー](<a href="https://appdevelopermagazine.com/ten">https://appdevelopermagazine.com/ten</a> -industries-using-python-programming /)は、<strong>イノベーションと新しいソリューション</strong>を促進することです。 </p><p>「<a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjut_mx9ACq">Python101とは」ガイド</a>、Pythonと、<strong>テクノロジー</strong>、<strong>ファイナンス</strong>、<strong>バイオテクノロジー</strong>など、Pythonで使用されるいくつかの領域を紹介しました。 ただし、この記事では、Pythonの幅広い使用法、特に次の分野について詳しく説明します。 </p><ul><li><strong>ウェブ開発</strong> </li><li><strong>データサイエンス</strong> </li><li><strong>機械学習</strong> </li><li><strong>人工知能</strong> </li></ul><h2 id="Pythonアプリケーション"><a href="#Pythonアプリケーション" class="headerlink" title="Pythonアプリケーション"></a>Pythonアプリケーション</h2><h3 id="ウェブ開発"><a href="#ウェブ開発" class="headerlink" title="ウェブ開発"></a>ウェブ開発</h3><p>HTML、CSS、Javascriptは** Web開発**の一般的なツールかもしれませんが、Pythonも良い選択です。 </p><p>[Web開発](<a href="https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before">https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before</a> -getting-started /)は、静的なプレーンテキストページから動的なeコマースWebサイトやインタラクティブなインターネットアプリケーションまで、インターネット上にWebサイトを構築することを指します。 </p><p>コーディングは、Web開発がサイトの機能を構築し、ユーザーエクスペリエンスを最適化し、情報が適切に整理されるようにするために不可欠です。 Pythonの** Django <strong>や</strong> Flask **などのWebフレームワークは、Webサイト開発の一般的な選択肢になっています。 </p><p>！<a href="https://images.ctfassets.net/mrop88jh71hl/6prH9NRKgybllrNcEqeCBy/c7fbc7b6960e8f94efb9eaa0b70a97d2/python-web-development-applications.png">PythonはWebページの作成に使用されます。 </a> </p><p>Pythonは、バックエンドWeb開発に最適であり、現在多くの企業で使用されています。 </p><p>これらのオープンソースフレームワークにより、Pythonには大量のデータを処理してタスクを自動化する機能があるため、ユーザーはWebアプリケーションをより効率的に構築できます。 実際、** Instagram <strong>、</strong> Pinterest <strong>、</strong> Google **はすべて[バックエンドWeb開発]にあります(<a href="https://learn.onemonth.com/10-famous-websites-built">https://learn.onemonth.com/10-famous-websites-built</a> -using-python /)はPythonを使用します。 </p><h3 id="データサイエンス"><a href="#データサイエンス" class="headerlink" title="データサイエンス"></a>データサイエンス</h3><p>[データサイエンス](<a href="https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_reach=">https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_reach=</a> ](<a href="https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_outm_reach">https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_outm_reach</a> </p><p><strong>ビッグデータ</strong>の時代には、ナビゲーション(GPS)、オンラインショッピング、エネルギー使用、スマートウォッチなどのウェアラブルデバイスを通じて、日常生活のデータと頻繁に接触します。 </p><p>平均して、各世帯には約[11台のデバイス](<a href="https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should">https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should</a> -push-that-even-higher-1203431225 /)そして、この数は将来増加する可能性があります！ 非常に多くのデバイスがあるため、企業はサービスを提供するために大量のデータを処理する必要があります。 </p><p>！<a href="https://images.ctfassets.net/mrop88jh71hl/3XS43f9pqDhRuft9GdnvZq/2d0513d9f0079c572923a49cd214add5/python-data-analysis-applications.png">データ分析のためのPythonのプロセスの説明</a> </p><p>Pythonベースのツールは、大量のデータを視覚化、処理、分析するためによく使用されます。 </p><p><strong>データサイエンス</strong>には、データの処理と傾向の推測が含まれます<strong>-Python **には、</strong> scipy <strong>、</strong> numpy <strong>、</strong> pandas **などの高密度パッケージが含まれているため、この分野で非常に役立ちます。 </p><p>さらに、** matplotlib <strong>ソフトウェアパッケージを使用して、データの視覚化を構築できます。 これにより、Pythonは</strong> bioinformatics **などの分野で人気があり、大量のデータやモデリングも含まれます。 </p><p>これらのPythonベースのツールは、使いやすさと拡張性のために人気があります。 たとえば、<a href="https://www.edureka.co/blog/how-netflix-uses-python/#hownetflixusespython">Netflix</a>は、クロスプラットフォームユーザーを管理するための数値計算に** scipy <strong>と</strong> numpy **を使用します フロー。 </p><p>▶<strong>試してみてください：</strong> [高度なデータサイエンスとPythonチュートリアル](<a href="https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMT9Cutj_HBXf">https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMT9Cutj_HBXf</a> = gf＆utm_medium = what_is_python_used_for＆utm_campaign = outreach) </p><h3 id="機械学習"><a href="#機械学習" class="headerlink" title="機械学習"></a>機械学習</h3><p>大量のデータを分析することにより、** Machine Learning ** [Algorithm](<a href="https://junilearning.com/blog/guide/what-are-algorithms/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTium">https://junilearning.com/blog/guide/what-are-algorithms/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTium</a> パターン化して、将来の動作に適用します。 </p><p>製品での機械学習の最も明白な使用法は、推奨システムです。 ** Netflix <strong>、</strong> Spotify <strong>、</strong> Youtube **などの企業は、ユーザーの行動を収集して、プレイリストやビデオを予測および提案します。 </p><p>** Scikit-learn <strong>および</strong> tensorflow **は、大規模なデータセットの分類、クラスタリング、および回帰のアルゴリズムに使用できるPythonライブラリです。 これらのライブラリの高性能と幅広い機能により、これらのライブラリはあらゆる機械学習の探索に不可欠です。 </p><p>▶<strong>詳細：</strong> [子供のアルゴリズムの重要性](<a href="https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjM">https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjM</a> what_is_python_used_for＆utm_campaign = outreach) </p><h3 id="人工知能"><a href="#人工知能" class="headerlink" title="人工知能"></a>人工知能</h3><p>機械学習は、実際には<strong>人工知能</strong>の1つの側面にすぎません。 AIとは、機械のインテリジェンスと、知覚や意思決定などの人間指向のタスクを実行するためのコンピューターシステムの開発を指します。 </p><p>人工知能の優れた例は、** Uber <strong>や</strong> Lyft **などのライドヘイリングアプリケーションです。 </p><p>！<a href="https://images.ctfassets.net/mrop88jh71hl/dlvfPv6HAIV4YaMb1TRCl/88739612a93476c94733255a94a567d7/python-artificial-intelligence-in-ride-sharing.png">カープーリングアプリケーションで使用される人工知能のPythonイラスト。 </a> </p><p>Pythonは、LyftやUberなどのアプリケーションの人工知能で使用されます。 AIシステムは、ユーザーのニーズや到着予定時刻などを予測できます。 </p><p>UberはAIを使用して、<strong>ユーザーのニーズを予測</strong>および<strong>推定到着時間</strong>(およびその他の機能)を行います。これらのほとんどは<a href="https://eng.uber.com/uber-ai-blog">Python</a>を介して行われます。 -2019 /)完了しました。 </p><p>前述のPythonライブラリの一部に加えて、** keras <strong>や</strong> pytorch **などの他のライブラリを使用してAI関数(予測モデルやニューラルネットワークなど)を作成することもできます。 </p><h2 id="Pythonはどこにでもあります！"><a href="#Pythonはどこにでもあります！" class="headerlink" title="Pythonはどこにでもあります！"></a>Pythonはどこにでもあります！</h2><p>人気のあるプログラミング言語の中で、Pythonはそのアプリケーションで最も多様な言語の1つです。 さらに、それは私たちと今日の主要企業と深く統合されています。 </p><p>Pythonに関連する職業には、<strong>ソフトウェアエンジニア、Web開発者、データサイエンティスト、製品マネージャー、ビジネスアナリスト</strong>などが含まれます。 業界に関係なく、この技術時代の企業はデータ主導の意思決定に依存しており、Pythonはこれを行うのに最適なツールです。 </p><p>あなたやあなたの子供が上記の分野や役割に興味があるなら、Pythonを学ぶことは良い選択です！ </p><h2 id="Pythonプログラマーになりたいですか？"><a href="#Pythonプログラマーになりたいですか？" class="headerlink" title="Pythonプログラマーになりたいですか？"></a>Pythonプログラマーになりたいですか？</h2><p>Pythonの最大の利点の1つは、新しいコーダーが基本的な概念を学び、プログラミングに慣れることを支援することです。 すべての年齢の新しいプログラマーのために、Pythonを広範囲に学ぶための多くのリソースもあります。 </p><h3 id="子供のためのPythonクラス"><a href="#子供のためのPythonクラス" class="headerlink" title="子供のためのPythonクラス"></a>子供のためのPythonクラス</h3><p>！<a href="https://images.ctfassets.net/mrop88jh71hl/2dK37wFC5SF8HNKm4nGmqr/c256e7002d196ea54e4c10817a68f8a7/learning-python-with-juni.png">Pythonを使用するJuniインストラクター。 </a> </p><p>インストラクターのジュニは、若い学生に基本的なPythonを教えています。 </p><p>Juni Learningでは、経験豊富なコーディング教師の助けを借りて、若いコーダーに[Pythonを教える](<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACutjMEHBXfCjJMxT=c">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACutjMEHBXfCjJMxT=c</a> gf＆utm_medium = what_is_python_used_for＆utm_campaign = outreach)。 <strong>コーディング基盤の統合からアルゴリズムの構築およびデータセットの分析</strong>まで、これらのコースではPythonのさまざまなアプリケーションを探索し、独自のコーディングプロジェクトを構築する方法を学生に教えます。 </p><p>詳しく読む[コーディングコース](<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_medium=ed_is=_python_usと到達についての詳細についてのhttps：//キャンペーン]">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_medium=ed_is=_python_usと到達についての詳細についてのhttps：//キャンペーン]</a> [<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTcを？">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTcを？</a> join.junilearning.com/)入学チームと一緒に、お子様のコーディングの旅に最適なコースを学びましょう。 </p><hr><p><em>This</em> [_article _](<a href="https://junilearning.com/blog/guide/what-is-python-used-for-major-industries/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc？">https://junilearning.com/blog/guide/what-is-python-used-for-major-industries/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc？</a> _junilearning.com _](<a href="https://junilearning.com/?utm_source=gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach)。">https://junilearning.com/?utm_source=gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach)。</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;実世界でPythonを使用する方法&quot;&gt;&lt;a href=&quot;#実世界でPythonを使用する方法&quot; class=&quot;headerlink&quot; title=&quot;実世界でPythonを使用する方法&quot;&gt;&lt;/a&gt;実世界でPythonを使用する方法&lt;/h1&gt;&lt;p&gt;** Python **は、世界で最も人気のあるコーディング言語の1つです。 &lt;/p&gt;
&lt;p&gt;米国のトップ大学のほとんどは、入門コーディングコースでPythonを使用しています。Pythonを使用して簡単なゲームを作成したり、Webページから情報を解析したり、言語処理を実行したりする方法を学生に教えてください。 &lt;/p&gt;
&lt;p&gt;それにもかかわらず、多くの親や学生は、Pythonが実際に会社やさまざまな分野でどのように使用されているかを知りたいと思うことがよくありますか？ &lt;/p&gt;
&lt;p&gt;** Python &lt;strong&gt;が今日の主要な業界をどのように推進し&lt;/strong&gt;、多くのコンピューターサイエンス分野で重要な役割を果たしているかを学ぶために読んでください。 **** &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://leihao0.github.io/ja/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>MacBookのほこりやファンをきれいにする方法</title>
    <link href="https://leihao0.github.io/ja/How-to-Clean-MacBook-Dust-Fan/"/>
    <id>https://leihao0.github.io/ja/How-to-Clean-MacBook-Dust-Fan/</id>
    <published>2020-09-10T08:46:44.000Z</published>
    <updated>2020-12-20T23:53:08.322Z</updated>
    
    <content type="html"><![CDATA[<h2 id="kernel-taskがMacCPUの大部分を使用している場合"><a href="#kernel-taskがMacCPUの大部分を使用している場合" class="headerlink" title="kernel_taskがMacCPUの大部分を使用している場合"></a>kernel_taskがMacCPUの大部分を使用している場合</h2><p><code>kernel_task</code>は毎ターン100％スタックすることに気づきましたが、これは<code>System</code>プロセスであり、方法はありません。 </p><p>根発生的文档<a href="https://support.apple.com/en-us/HT207359">kernel_taskがMacCPUの大部分を使用している場合</a> </p><blockquote><p>言い換えると、kernel_taskは、Macが熱く感じられなくても、** CPUが熱くなりすぎる**原因となる条件に応答します。 それ自体はそれらの状態を引き起こしません。 CPUの温度が下がると、kernel_taskは自動的にそのアクティビティを減らします。 </p></blockquote><p>これは、CPUが熱すぎるためです🔥熱くないと思っていても🥶… </p><p>また、 <code>kernel_task</code>は原因ではありません。CPUが高温でない場合、その占有率は自動的に低下します… </p><a id="more"></a><p>また、左側にあるべきではないこともわかりました👈充電🔋、信じてください </p><h3 id="左側でMacBookProを充電しない理由は次のとおりです-https-www-digitaltrends-com-computing-why-you-shouldnt-charge-macbook-pro-left-side-text-％20chargeing％20the％20MacBook％20Proの間、％20the％20right％2Dhand％20portsを使用します。"><a href="#左側でMacBookProを充電しない理由は次のとおりです-https-www-digitaltrends-com-computing-why-you-shouldnt-charge-macbook-pro-left-side-text-％20chargeing％20the％20MacBook％20Proの間、％20the％20right％2Dhand％20portsを使用します。" class="headerlink" title="[左側でMacBookProを充電しない理由は次のとおりです](https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text =％20chargeing％20the％20MacBook％20Proの間、％20the％20right％2Dhand％20portsを使用します。)"></a>[左側でMacBookProを充電しない理由は次のとおりです](<a href="https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text">https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text</a> =％20chargeing％20the％20MacBook％20Proの間、％20the％20right％2Dhand％20portsを使用します。)</h3><blockquote><p>MacBook Proを充電し、周辺機器を左側のポートに接続していると、デバイスのポートが熱くなる可能性があります。 何らかの理由で、これにより、kernel_taskが少し混乱し、システムリソースのボート全体を使い果たす可能性があります。 </p></blockquote><p>しかし、数日後に右に切り替えた後👉充電🔋、しばらくすると100％になります </p><p>絶望… </p><p>突然、片付けが必要だったのではないかと思いました </p><h2 id="MacBookのほこりとファンを掃除する方法"><a href="#MacBookのほこりとファンを掃除する方法" class="headerlink" title="MacBookのほこりとファンを掃除する方法"></a>MacBookのほこりとファンを掃除する方法</h2><p>自分で分解できることをGoogleが知るのに時間がかかりました<br>私のは16歳の本で、保証されています<br>不然根購入<a href="https://www.apple.com/legal/warranty/products/embedded-mac-warranty-rest-of-apac-english.html">Mac保証</a><br>あなたがそれを自分で解体するならば、あなたはそれを失うべきです </p><blockquote><p>この保証は適用されません： </p><blockquote></blockquote><p>-(c)アップル製品の仕様を満たさないサードパーティのコンポーネントまたは製品の使用によって引き起こされた損傷 </p></blockquote><h3 id="ツール🔧"><a href="#ツール🔧" class="headerlink" title="ツール🔧"></a>ツール🔧</h3><ul><li>ペンタスクリュー🔩ナイフ </li><li>スートボール、小さなブラシ </li><li>放棄されたクレジットカード💳 </li></ul><h3 id="ステップ"><a href="#ステップ" class="headerlink" title="ステップ"></a>ステップ</h3><ol><li>ネジを緩めます </li><li>側面に小さなスリットを入れます </li><li>未使用のクレジットカードを挿入します💳そして青い矢印の方向にスライドさせます <ol><li>カチッという音がします </li><li>図2では、中央の水平線に4つのバックルがあることがわかります。 </li><li>何かを壊す代わりに(私はそう願っています😓) </li></ol></li><li>右側で対称的に使用します💳スライドします </li><li>次に、赤い矢印を押して水平に引きます <ol><li>図2カードスロットはファンの上に見えます </li><li>水平に力を入れ、左右に少し対称に引っ張る↔️ </li></ol></li><li>裏表紙を開けます </li></ol><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-3.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-0.jpg" alt=""></div></div></div><p>本当に汚い </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-1.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-2.jpg" alt=""></div></div></div><p>ほこりを片付けた後、 <code>kernel_task</code>はあまり表示されず、💻も復活します<br>16年間のノートブック💻は5年間使用できるとすぐに感じます👨‍💻 </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;kernel-taskがMacCPUの大部分を使用している場合&quot;&gt;&lt;a href=&quot;#kernel-taskがMacCPUの大部分を使用している場合&quot; class=&quot;headerlink&quot; title=&quot;kernel_taskがMacCPUの大部分を使用している場合&quot;&gt;&lt;/a&gt;kernel_taskがMacCPUの大部分を使用している場合&lt;/h2&gt;&lt;p&gt;&lt;code&gt;kernel_task&lt;/code&gt;は毎ターン100％スタックすることに気づきましたが、これは&lt;code&gt;System&lt;/code&gt;プロセスであり、方法はありません。 &lt;/p&gt;
&lt;p&gt;根発生的文档&lt;a href=&quot;https://support.apple.com/en-us/HT207359&quot;&gt;kernel_taskがMacCPUの大部分を使用している場合&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;言い換えると、kernel_taskは、Macが熱く感じられなくても、** CPUが熱くなりすぎる**原因となる条件に応答します。 それ自体はそれらの状態を引き起こしません。 CPUの温度が下がると、kernel_taskは自動的にそのアクティビティを減らします。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;これは、CPUが熱すぎるためです🔥熱くないと思っていても🥶… &lt;/p&gt;
&lt;p&gt;また、 &lt;code&gt;kernel_task&lt;/code&gt;は原因ではありません。CPUが高温でない場合、その占有率は自動的に低下します… &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Macbook" scheme="https://leihao0.github.io/ja/tags/macbook/"/>
    
  </entry>
  
  <entry>
    <title>子供のためのPython対Java</title>
    <link href="https://leihao0.github.io/ja/Python-vs-Java-for-Kids/"/>
    <id>https://leihao0.github.io/ja/Python-vs-Java-for-Kids/</id>
    <published>2020-08-12T05:33:04.000Z</published>
    <updated>2020-12-20T23:53:08.321Z</updated>
    
    <content type="html"><![CDATA[<p><em>The</em> <a href="https://junilearning.com/blog/guide/python-vs-java/">_Article _</a><em>元々は</em> <a href="https://junilearning.com/">_junilearning.com _</a>に登場しました </p><h1 id="PythonとJava：使用法、パフォーマンス、学習"><a href="#PythonとJava：使用法、パフォーマンス、学習" class="headerlink" title="PythonとJava：使用法、パフォーマンス、学習"></a>PythonとJava：使用法、パフォーマンス、学習</h1><p>コンピュータサイエンスの分野には多くのプログラミング言語があり、他の言語より優れているものはありません。 言い換えれば、<strong>各言語は特定の問題を解決するのに最適です</strong>。実際、特定のプログラミングプロジェクトでは、通常、選択できる最適な言語はありません。 したがって、ソフトウェアを開発したり、コードを介して興味深い問題を解決したりする学生にとって、コンピュータサイエンスの強力な基盤を持つことが非常に重要です<strong>あらゆるプログラミング言語に適用できます</strong>。 </p><a id="more"></a><p>プログラミング言語は、メモリ使用量の処理やオブジェクトの使用強度など、動作方法で特定の特性を共有する傾向があります。 学生がより多くの言語に触れるようになるにつれて、彼らはこれらのパターンを見始めるでしょう。 この記事では、世界で最も広く使用されている2つのプログラミング言語であるPythonとJavaに焦点を当てます。 各プログラミング言語の成長率を正確に測定することは困難ですが、<strong>これらは今日の業界で使用されている2つの最も人気のあるプログラミング言語です</strong>。 </p><p>PythonとJavaの主な違いは、Pythonは<strong>動的に型付け</strong>されるのに対し、Javaは<strong>静的に型付け</strong>されることです。 大まかに言えば、これは、Javaがコード内の変数を定義および使用する方法についてより厳格であることを意味します。 *<em>その結果、Javaの構文は冗長になる傾向があります。これが、初心者がJavaの前にPythonを学ぶことをお勧めする理由の1つです。 *</em>たとえば、これは <code>numbers</code>が0から9までの数字を保持する名前変数をPythonで作成する方法です。 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">numbers = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">numbers.append(i)</span><br></pre></td></tr></table></figure><p>Javaで同じことを行う方法は次のとおりです。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ArrayList numbers = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    numbers.add(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>もう1つの大きな違いは、Javaは<strong>コンパイルされた言語</strong>であるため、通常はPythonよりも高速にプログラムを実行することです。 これは、コンパイラが実際にプログラムを実行する前に、Javaコードをマシンレベルのコードに変換することを意味します。 対照的に、Pythonは<strong>解釈された</strong>言語です。つまり、コンパイル手順はありません。 </p><h2 id="使用法と実用性"><a href="#使用法と実用性" class="headerlink" title="使用法と実用性"></a>使用法と実用性</h2><p>歴史的に、Javaは、その長い歴史もあって、より人気のある言語になりました。 ただし、Pythonは急速に人気を集めています。 <a href="https://octoverse.github.com/">Githubの10月のステータスレポート</a>によると、最近、最も広く使用されているプログラミング言語としてJavaを上回っています。 2018 Developer Surveyによると、** Pythonは現在最も急速に成長しているコンピュータープログラミング言語**です。 </p><p>PythonとJavaの両方に大規模な開発者コミュニティがあり、<a href="https://stackoverflow.com/">Stack Overflow</a>Webサイトで質問に答えることができます。 <a href="https://insights.stackoverflow.com/trends?tags=python%2Cjava">Stack Overflow Trends</a>から、2017年にStackOverflowでPythonが尋ねた質問の割合がJava **を上回っていることがわかります。 これを書いている時点で、Stack Overflowに関する質問の約13％がPythonでマークされており、約8％がJavaでマークされています。 </p><h2 id="ウェブ開発"><a href="#ウェブ開発" class="headerlink" title="ウェブ開発"></a>ウェブ開発</h2><p>** PythonとJavaの両方をバックエンドWeb開発に使用できます**。 通常、開発者はPythonの場合は<a href="https://stackify.com/python-frameworks/">Django and Flask</a>フレームワークを使用し、Javaの場合は<a href="https://spring.io/">Spring</a>を使用します。 Pythonはコードの読みやすさで知られています。つまり、Pythonコードはクリーンで、読みやすく、簡潔です。 Pythonには、多数の包括的なモジュール、パッケージ、およびライブラリもあります。これらのモジュール、パッケージ、およびライブラリは、標準のライブラリに加えて、Python愛好家コミュニティによって開発されています。 Javaにも同様のエコシステムがありますが、程度は低いです。 </p><h2 id="モバイルアプリケーション開発"><a href="#モバイルアプリケーション開発" class="headerlink" title="モバイルアプリケーション開発"></a>モバイルアプリケーション開発</h2><p><strong>モバイルアプリケーションの開発に関しては、</strong> Java <strong>がAndroidアプリケーションとゲームの構築に使用される主要な言語であるため、Javaが支配的な位置を占めています</strong>。 これらのオーダーメイドのライブラリの助けを借りて、開発者は、オペレーティングシステム用に特別に構築された強力なフレームワークと開発ツールを使用してAndroidアプリケーションを作成することを選択できます。 現在、<a href="https://kivy.org/">Kivy</a>や<a href="https://beeware.org/">BeeWare之</a>のように、一度コードを書いてWindows、OS X、iOS、 Androidにアプリケーションをデプロイしますが、モバイル開発にはPythonはあまり使用されません。 </p><h2 id="機械学習とビッグデータ"><a href="#機械学習とビッグデータ" class="headerlink" title="機械学習とビッグデータ"></a>機械学習とビッグデータ</h2><p>対照的に、機械学習と<a href="https://junilearning.com/blog/coding-and-data-science">データサイエンス</a>では、Pythonが最も人気のある言語です。 Pythonは、ビッグデータ、科学コンピューティング、および人工知能(AI)プロジェクトで一般的に使用されています。 <strong>感情分析を含むプロジェクトに取り組む場合、ほとんどのデータサイエンティストと機械学習プログラマーはJavaの代わりにPythonを使用することを選択します</strong>。 同時に、多くの機械学習プログラマーが、ネットワークセキュリティ、ネットワーク攻撃防止、および不正検出に関連するプロジェクトで作業するときにJavaを使用することを選択する可能性があることは注目に値します。 </p><h2 id="どこから始めれば"><a href="#どこから始めれば" class="headerlink" title="どこから始めれば"></a>どこから始めれば</h2><p>プログラミングの基礎を学ぶとき、<strong>多くの研究が結論に達しました</strong>。Pythonのシンプルで直感的な構文のため、** Javaよりも簡単です<strong>** \ * \ *</strong> [Pythonを学ぶ](https 前の例に示したように、：//junilearning.com/coding)*<em>。 Pythonと比較して、Javaプログラムは通常、より多くの定型コードを持っています-それらは多くの場所でほとんどまたはまったく変更なしでコードの一部を含まなければなりません。 そうは言っても、Javaにはいくつかの重要な利点があります。特に、コンパイルされた言語としての速度です。 *</em> PythonとJavaを学習すると、学生は2つの言語に触れることができます。これらの言語は、類似したコンピューターサイエンスの概念に基づいていますが、教育が異なります。 \ * \ * </p><p>全体として、PythonとJavaはどちらも実際には強力なプログラミング言語であることは明らかです。したがって、意欲的なソフトウェア開発者にとっては、両方の言語を上手に学ぶことが最善です。 プログラマーは、単に好きな言語を学ぶのではなく、各ソフトウェア開発プロジェクトの特定のニーズに基づいてPythonとJavaを比較する必要があります。 つまり、<strong>ある言語が別の言語より優れているわけではないため、プログラマーは両方の言語を両方のエンコーディングで使用するように努める必要があります</strong>。 </p><table><thead><tr><th></th><th>Python</th><th>Java</th></tr></thead><tbody><tr><td>ランタイムパフォーマンス</td><td></td><td>勝者</td></tr><tr><td>学習のしやすさ</td><td>勝者</td><td></td></tr><tr><td>実用的な敏捷性</td><td>ネクタイ</td><td>ネクタイ</td></tr><tr><td>モバイルアプリ開発</td><td></td><td>勝者</td></tr><tr><td>ビッグデータ</td><td>勝者</td><td></td></tr></tbody></table><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;The&lt;/em&gt; &lt;a href=&quot;https://junilearning.com/blog/guide/python-vs-java/&quot;&gt;_Article _&lt;/a&gt;&lt;em&gt;元々は&lt;/em&gt; &lt;a href=&quot;https://junilearning.com/&quot;&gt;_junilearning.com _&lt;/a&gt;に登場しました &lt;/p&gt;
&lt;h1 id=&quot;PythonとJava：使用法、パフォーマンス、学習&quot;&gt;&lt;a href=&quot;#PythonとJava：使用法、パフォーマンス、学習&quot; class=&quot;headerlink&quot; title=&quot;PythonとJava：使用法、パフォーマンス、学習&quot;&gt;&lt;/a&gt;PythonとJava：使用法、パフォーマンス、学習&lt;/h1&gt;&lt;p&gt;コンピュータサイエンスの分野には多くのプログラミング言語があり、他の言語より優れているものはありません。 言い換えれば、&lt;strong&gt;各言語は特定の問題を解決するのに最適です&lt;/strong&gt;。実際、特定のプログラミングプロジェクトでは、通常、選択できる最適な言語はありません。 したがって、ソフトウェアを開発したり、コードを介して興味深い問題を解決したりする学生にとって、コンピュータサイエンスの強力な基盤を持つことが非常に重要です&lt;strong&gt;あらゆるプログラミング言語に適用できます&lt;/strong&gt;。 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://leihao0.github.io/ja/tags/python/"/>
    
      <category term="Java" scheme="https://leihao0.github.io/ja/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>ラズベリー4.</title>
    <link href="https://leihao0.github.io/ja/Raspberry-Pi-4/"/>
    <id>https://leihao0.github.io/ja/Raspberry-Pi-4/</id>
    <published>2020-06-11T15:14:06.000Z</published>
    <updated>2021-03-08T16:29:06.035Z</updated>
    
    <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Pi-Hole.png" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Raspberrypi.png" alt=""></div></div></div><a id="more"></a><h2 id="モニターなしで起動します"><a href="#モニターなしで起動します" class="headerlink" title="モニターなしで起動します"></a>モニターなしで起動します</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span></span><br><span class="line"><span class="string">update_config=1</span></span><br><span class="line"><span class="string">country=CN</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">network=&#123;</span></span><br><span class="line"><span class="string"> ssid=&quot;xxx&quot;</span></span><br><span class="line"><span class="string"> psk=&quot;xxx&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; wpa_supplicant.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># WPA_Supplicant、SSHまたはSSH.TXTをSDカードのルートにコピーする </span></span><br><span class="line"></span><br><span class="line">sudo raspi-config</span><br><span class="line"></span><br><span class="line"><span class="comment"># crontab -e. </span></span><br><span class="line"><span class="comment"># @reboot sudo ifdown Wlan1. </span></span><br><span class="line">sudo iwconfig wlan1 txpower off</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># epr </span></span><br><span class="line">sudo apt -y update</span><br><span class="line">sudo apt -y upgrade</span><br><span class="line">sudo apt -y install rpi-eeprom</span><br><span class="line">sudo rpi-eeprom-update</span><br><span class="line">sudo rpi-eeprom-update -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># OH-MY-ZSH </span></span><br><span class="line">sudo apt-get install zsh</span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line">sudo apt -y install vim</span><br><span class="line"></span><br><span class="line">sudo chsh -s /bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># PIホール </span></span><br><span class="line">curl -sSL https://install.pi-hole.net | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pivpn. </span></span><br><span class="line">curl -L https://install.pivpn.io | bash</span><br><span class="line">pivpn add</span><br><span class="line">pivpn remove</span><br><span class="line">pivpn list</span><br><span class="line">pivpn -qr</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="パスワードのないSSHアクセス"><a href="#パスワードのないSSHアクセス" class="headerlink" title="パスワードのないSSHアクセス"></a>パスワードのないSSHアクセス</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="comment"># ラズベリーパイ </span></span><br><span class="line">cat raspberrypi.pub</span><br><span class="line">cat ~/.ssh/raspberrypi.pub | ssh pi@192.168.2.2 <span class="string">&#x27;mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="静的IPアドレス"><a href="#静的IPアドレス" class="headerlink" title="静的IPアドレス"></a>静的IPアドレス</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dhcpcd.conf. </span></span><br><span class="line"></span><br><span class="line">interface eth0</span><br><span class="line">static ip_address=192.168.0.4/24</span><br><span class="line">static routers=192.168.0.254</span><br><span class="line">static domain_name_servers=192.168.0.254 8.8.8.8</span><br></pre></td></tr></table></figure><h2 id="vnc"><a href="#vnc" class="headerlink" title="vnc."></a>vnc.</h2><p>https：//马果.Raspberry Skin .org /記事/ VNC-Raspberry-Skin </p><h2 id="Rclone＆Googleドライブ"><a href="#Rclone＆Googleドライブ" class="headerlink" title="Rclone＆Googleドライブ"></a>Rclone＆Googleドライブ</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install fuse</span><br><span class="line"></span><br><span class="line">curl -L https://raw.github.com/pageauc/rclone4pi/master/rclone-install.sh | bash</span><br><span class="line">rclone config</span><br><span class="line"></span><br><span class="line">mkdir -p /tmp/gdrive</span><br><span class="line">fusermount -u /tmp/gdrive</span><br><span class="line"></span><br><span class="line">sudo vim /etc/fuse.conf</span><br><span class="line"><span class="comment"># user_allow_other </span></span><br></pre></td></tr></table></figure><h2 id="この心"><a href="#この心" class="headerlink" title="この心"></a>この心</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo blkid</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo vim / etc / fstab </span></span><br><span class="line"></span><br><span class="line">UUID=633a8bc8 /media/3T ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=d271d018 /media/TM ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=53f3ce6b /media/8G ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo chown -R pi:pi /media/3T /media/TM</span><br></pre></td></tr></table></figure><h2 id="RamDisk＆Logs"><a href="#RamDisk＆Logs" class="headerlink" title="RamDisk＆Logs."></a>RamDisk＆Logs.</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sudoサービスrsyslog stop. </span></span><br><span class="line"><span class="comment"># sudo systemctl rsyslogを無効にします </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo vim / etc / fstab </span></span><br><span class="line"></span><br><span class="line">tmpfs /var/lib/plexmediaserver tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /home/pi./cache tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /tmp tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /var/<span class="built_in">log</span> tmpfs defaults,noatime 0 0</span><br></pre></td></tr></table></figure><h2 id="ext4を修正しました"><a href="#ext4を修正しました" class="headerlink" title="ext4を修正しました"></a>ext4を修正しました</h2><p><code>sudo fsck.ext4 -vy / dev / sda2</code> </p><h2 id="外付けハードドライブのスワップスペース"><a href="#外付けハードドライブのスワップスペース" class="headerlink" title="外付けハードドライブのスワップスペース"></a>外付けハードドライブのスワップスペース</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/dphys-swapfile</span><br><span class="line"></span><br><span class="line">CONF_SWAPFILE=/media/3T/swapfile</span><br><span class="line">CONF_SWAPSIZE=8192</span><br></pre></td></tr></table></figure><h2 id="AFP＆タイムマシン"><a href="#AFP＆タイムマシン" class="headerlink" title="AFP＆タイムマシン"></a>AFP＆タイムマシン</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install netatalk gparted</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo mkfs.ext4 / dev / sda2 </span></span><br><span class="line"><span class="comment"># SUDA  -  4 /ゲスト/頭痛 </span></span><br><span class="line"><span class="comment"># sudo mkdir / media / tm </span></span><br><span class="line"><span class="comment"># スーダモンテ/ゲスト/ヘッドカッシュ/メディア/完了 </span></span><br><span class="line"><span class="comment"># Suddo Poon -R PI：PI / Media / ZT </span></span><br><span class="line"><span class="comment"># SUDO CHENG -RPI：皮膚/メディア/ TM </span></span><br><span class="line"></span><br><span class="line">sudo vim /etc/netatalk/afp.conf</span><br><span class="line"><span class="comment"># 3T </span></span><br><span class="line"><span class="comment"># ; 聖書= /メディア/ DT / </span></span><br><span class="line"><span class="comment"># ; [TMP] </span></span><br><span class="line"><span class="comment"># ; パス= / tmp / </span></span><br><span class="line"><span class="comment"># [TM] </span></span><br><span class="line"><span class="comment"># パス= /メディア/ TUM / </span></span><br><span class="line"><span class="comment"># タイムマシン=はい </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo systemctl restart netatalk</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="サンバ"><a href="#サンバ" class="headerlink" title="サンバ"></a>サンバ</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install samba samba-common-bin</span><br><span class="line"></span><br><span class="line">sudo vim /etc/samba/smb.conf</span><br><span class="line"><span class="comment"># [Pimylifeup Share] </span></span><br><span class="line"><span class="comment"># 聖書= /メディア/ DT / </span></span><br><span class="line"><span class="comment"># 書き込み可能=はい </span></span><br><span class="line"><span class="comment"># MASK = 0777を作成します </span></span><br><span class="line"><span class="comment"># ディレクトリマスク= 0777 </span></span><br><span class="line"><span class="comment"># 公共=ノー </span></span><br><span class="line"><span class="comment"># [TMP] </span></span><br><span class="line"><span class="comment"># パス= / tmp / </span></span><br><span class="line"><span class="comment"># 書き込み可能=はい </span></span><br><span class="line"><span class="comment"># MASK = 0777を作成します </span></span><br><span class="line"><span class="comment"># ディレクトリマスク= 0777 </span></span><br><span class="line"><span class="comment"># 公共=ノー </span></span><br><span class="line">sudo smbpasswd -a pi</span><br><span class="line">sudo systemctl restart smbd</span><br></pre></td></tr></table></figure><h2 id="プレックスサーバー"><a href="#プレックスサーバー" class="headerlink" title="プレックスサーバー"></a>プレックスサーバー</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="string">&quot;/tmp/plexmediaserver&quot;</span></span><br><span class="line">sudo mount -t tmpfs -o size=1000M tmpfs /tmp/plexmediaserver</span><br><span class="line">sudo chown -R pi:pi /var/lib/plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo apt -y install apt-transport-https</span><br><span class="line">curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list</span><br><span class="line">sudo apt -y install plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo vim /etc/default/plexmediaserver</span><br><span class="line"><span class="comment"># 輸出PLEX_MEDIA_SERVER_USER = PI </span></span><br><span class="line"></span><br><span class="line">hostname -I</span><br><span class="line">sudo vim /boot/cmdline.txt</span><br><span class="line"><span class="comment"># ip = ipaddress. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo apt -y pmountをインストールします </span></span><br><span class="line"><span class="comment"># sudo apt-getインストールNTFS-3G exfat-fuse exfat-utils pmount </span></span><br><span class="line"><span class="comment"># sudo apt-get hfsplus hfsutils hfsprogs gdisk. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># LSBLK </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># /週/システム/システム/写真X Media Server.Service </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Piへのユーザープレックス </span></span><br><span class="line">sudo mkdir -p /etc/systemd/system/plexmediaserver.service.d</span><br><span class="line">sudo vim /etc/systemd/system/plexmediaserver.service.d/override.conf</span><br><span class="line"><span class="comment"># [サービス] </span></span><br><span class="line"><span class="comment"># ユーザー= Pi </span></span><br><span class="line"><span class="comment"># group =スキン </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [サービス] </span></span><br><span class="line"><span class="comment"># EXECSTARTPRE = / BIN / SLEEP 120; / bin / sh -c &#x27;/ usr / bin / test -d &quot;$ &#123;plex_media_server_application_support_dir&#125;&quot; || / bin / mkdir -p &quot;$ &#123;plex_media_server_application_support_dir&#125;&quot; &quot; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># データフォルダ </span></span><br><span class="line"></span><br><span class="line">sudo systemctl stop plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo service plexmediaserver stop</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> plexmediaserver.service</span><br><span class="line">sudo systemctl restart plexmediaserver.service</span><br></pre></td></tr></table></figure><h2 id="crontab-e"><a href="#crontab-e" class="headerlink" title="crontab -e."></a>crontab -e.</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install php php-curl</span><br></pre></td></tr></table></figure><p><code>crontab -e</code> </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># rclone. </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;mkdir -p /tmp/gdrive</span></span><br><span class="line"><span class="string">fusermount -u /tmp/gdrive</span></span><br><span class="line"><span class="string">/usr/bin/rclone mount Plex:Plex /tmp/gdrive --umask 0000 --default-permissions --allow-non-empty --allow-other --buffer-size 64M --dir-cache-time 48h --vfs-read-chunk-size 128M --vfs-read-chunk-size-limit 1500M &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; rclone.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># バックアップ </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tar --exclude = &quot;$ plexpath / logs&quot; --exclude = &quot;$ plexpath / cache&quot; --exclude = &quot;$ plexpath / crashレポート&quot; -czf /tmp/gdrive/backup/plex.tar.gz / var / lib /プレックスメディアサーバー </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">mkdir -p /tmp/gdrive/backup/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">tar cf - --exclude=&quot;$PlexPath/Logs&quot; --exclude=&quot;$PlexPath/Cache&quot; --exclude=&quot;$PlexPath/Crash Reports&quot; /var/lib/plexmediaserver | lz4 -f - /tmp/gdrive/backup/plex.tar.lz4</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; backup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 戻す </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">lz4 -d /tmp/gdrive/backup/plex.tar.lz4 | tar -xC /</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">mkdir -p &quot;$PlexPath/Logs&quot; &quot;$PlexPath/Cache&quot; &quot;$PlexPath/Crash Reports&quot;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; restore.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chmod a+x backup.sh restore.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">sudo apt update &amp;&amp; sudo apt upgrade &amp;&amp; sudo apt autoremove &amp;&amp; sudo apt clean</span></span><br><span class="line"><span class="string">pihole -up &amp;&amp; pihole -g</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; update.sh</span><br><span class="line"></span><br><span class="line">chmod a+x update.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@reboot vncserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># @ rubwite pmots2 Zt. </span></span><br><span class="line"><span class="comment"># 頭痛で@ラブワ </span></span><br><span class="line"></span><br><span class="line">@reboot /home/pi/rclone.sh</span><br><span class="line">@reboot sleep 30 &amp;&amp; /home/pi/restore.sh</span><br><span class="line"></span><br><span class="line">*/30 * * * * /home/pi/backup.sh</span><br><span class="line">0 3 * * * /home/pi/update.sh</span><br><span class="line"></span><br><span class="line">0 22 * * * <span class="built_in">cd</span> ~/Bot;python3 autoPill.py</span><br><span class="line">0 9 * * * php ~/Bot/bilibiliRun.ph</span><br></pre></td></tr></table></figure><p><code>sudo crontab -e</code> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 0 4 * * * &#x2F; SBIN &#x2F; SHUTDOWN -R </span><br><span class="line">@reboot sleep 90 &amp;&amp; sudo service plexmediaserver start</span><br></pre></td></tr></table></figure><h2 id="jellyfin"><a href="#jellyfin" class="headerlink" title="~ jellyfin ~"></a><del>~ jellyfin ~</del></h2><p>https：// jelly fat.org/ </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install apt-transport-https</span><br><span class="line">wget -O - https://repo.jellyfin.org/jellyfin_team.gpg.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$( dpkg --print-architecture )</span>] https://repo.jellyfin.org/<span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^ID=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> <span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^VERSION_CODENAME=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> main&quot;</span> | sudo tee /etc/apt/sources.list.d/jellyfin.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># サービスJellyfinのステータス </span></span><br><span class="line"><span class="comment"># systemctl jellyfinを再起動します </span></span><br><span class="line"><span class="comment"># sudo /etc/init.d/jellyfin stop. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># .local / share / jellyfin </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;#!/bin/zsh</span></span><br><span class="line"><span class="string">JELLYFINTMP=&quot;/tmp/jellyfin&quot;</span></span><br><span class="line"><span class="string">USRBIN=&quot;/usr/bin&quot;</span></span><br><span class="line"><span class="string">mkdir -p $JELLYFINTMP/log $JELLYFINTMP/cache $JELLYFINTMP/transcodes \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/data \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/metadata \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/config</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$USRBIN/jellyfin \</span></span><br><span class="line"><span class="string"> -C $JELLYFINTMP/cache \</span></span><br><span class="line"><span class="string"> -l $JELLYFINTMP/log \</span></span><br><span class="line"><span class="string"> -d $JELLYFINTMP/data \</span></span><br><span class="line"><span class="string"> -c $JELLYFINTMP/config \</span></span><br><span class="line"><span class="string"> --ffmpeg $USRBIN/ffmpeg &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; jellyfin.sh</span><br><span class="line"></span><br><span class="line">chmod a+x jellyfin.sh</span><br><span class="line">nohup ./jellyfin.sh &lt;/dev/null &amp;</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># https：// jelly fin.org/docs/general/administration/hardware-acceleration.html. </span></span><br><span class="line">sudo usermod -aG video jellyfin</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;group-picture&quot;&gt;&lt;div class=&quot;group-picture-row&quot;&gt;&lt;div class=&quot;group-picture-column&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Pi-Hole.png&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;group-picture-column&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Raspberrypi.png&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
    
    </summary>
    
    
    
      <category term="Raspberry" scheme="https://leihao0.github.io/ja/tags/raspberry/"/>
    
  </entry>
  
  <entry>
    <title>iOSトークンに基づくAPN</title>
    <link href="https://leihao0.github.io/ja/iOS-Token-Based-APNs/"/>
    <id>https://leihao0.github.io/ja/iOS-Token-Based-APNs/</id>
    <published>2020-05-29T09:23:18.000Z</published>
    <updated>2020-12-20T23:53:08.321Z</updated>
    
    <content type="html"><![CDATA[<p>Appleは、APNを実行するための新しいメソッド(認証トークン)を提供します </p><p>以前の方法(プロバイダー証明書)と比較して、証明書 <code>* .p12</code>は毎年期限切れになります </p><p>トークンベースの <code>* .p8</code> <strong>有効期限はありません</strong> </p><a id="more"></a><ul><li><a href="https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/establishing_a_token-based_connection_to_apns">APNとのトークンベースの接続を確立する</a> </li><li><a href="https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html">APNとの通信</a> </li></ul><h2 id="お客様向け"><a href="#お客様向け" class="headerlink" title="お客様向け"></a>お客様向け</h2><p>クライアントの唯一の違いは </p><ol><li><a href="https://developer.apple.com/で認証トークン署名キーを作成します">https://developer.apple.com/で認証トークン署名キーを作成します</a> </li><li><code>* .p8</code>をダウンロードして、バックエンドエンジニアに送信します </li></ol><h2 id="バックエンドの場合"><a href="#バックエンドの場合" class="headerlink" title="バックエンドの場合"></a>バックエンドの場合</h2><p>多くのフレームワークは <code>* .p8</code>をサポートしています。 </p><p>例えば： </p><p><a href="https://firebase.google.com/docs/cloud-messaging/ios/certs">Firebase</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Appleは、APNを実行するための新しいメソッド(認証トークン)を提供します &lt;/p&gt;
&lt;p&gt;以前の方法(プロバイダー証明書)と比較して、証明書 &lt;code&gt;* .p12&lt;/code&gt;は毎年期限切れになります &lt;/p&gt;
&lt;p&gt;トークンベースの &lt;code&gt;* .p8&lt;/code&gt; &lt;strong&gt;有効期限はありません&lt;/strong&gt; &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="iOS" scheme="https://leihao0.github.io/ja/tags/ios/"/>
    
      <category term="APNs" scheme="https://leihao0.github.io/ja/tags/apns/"/>
    
  </entry>
  
  <entry>
    <title>墓地の本</title>
    <link href="https://leihao0.github.io/ja/The-Graveyard-Book/"/>
    <id>https://leihao0.github.io/ja/The-Graveyard-Book/</id>
    <published>2020-05-07T00:55:21.000Z</published>
    <updated>2020-12-20T23:53:08.321Z</updated>
    
    <content type="html"><![CDATA[<h1 id="アミューズメントパーク🎠予約"><a href="#アミューズメントパーク🎠予約" class="headerlink" title="アミューズメントパーク🎠予約"></a>アミューズメントパーク🎠予約</h1><div style="width: 300px"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/The%20Graveyard%20Book.jpg" /></div><p>子供たちは生と死の概念を持っておらず、墓地は彼らにとって娯楽公園のようなものです </p><a id="more"></a><hr><p>別の本を送ってくれてありがとう🙏🐼読者 </p><p>恥ずかしいことに、海外に行った後、測定値の数は急落しました<br>以前は年間数百冊の本から突然一桁になりました </p><p>読書は実用的であってはならず、興味によって動かされるべきであるという古いことわざについて考えてください<br>今、それは本当にクソ顔です </p><p>しかし、客観的な理由もあります。 </p><p>一つは、今読みたい本のほとんどがオリジナル版になっていることです<br>元のバージョンがあるので、翻訳されたバージョンはあまり見たくありません </p><p>第二に、私は電話をしていて、シンガポール国立大学の友人に聞いた。<br>その後、彼女は繰り返し「あなたのプラスチック英語」を軽蔑した </p><p>しかし、私は頑固で、遅いのは遅いですが、元のバージョンに固執します<br>中国の本と同じくらい早く起きることができる日があるはずです </p><p>三つ目は、ポー郡は島であり、海外には良い山や川などないので寂しいです<br>そして、この流行の初めに、私はかつてこの場所が混乱した先進国だと思っていました<br>また、一年中夏ですが、暑い以外はとても快適です<br>青い空と白い雲、大雨と雷、時間が凍ったように感じます、それは良いです </p><p>実用主義がなければ、当然、読む動機はありません </p><p>サーキットブレーカーは今なので、時間と気分があります </p><hr><p>私は最初にこの本を手に入れました<br>最初はサイエンスフィクションだと思っていました<br>見えないかもしれないと聞いて、ファンタジーだと思った<br>姉妹紙に出会った時は愛だと思った<br>学校に行って、キャンパスだと思った<br>お父さんがゲームに来て、それが親子だと思った<br>家族全員が殺され、サスペンドだと思った<br>結局、私は成長について話していました </p><p>最後の著者が書いたように： </p><blockquote><p>ニューオーリンズのぼろぼろのホテルで第6章「バーティーズスクールデイズ」を終えました。 庭のガゼボの最後のページを書き終え、涙をこらえて書いた。 その時だけ、私が父親の時にこの本を書かなかった理由を理解しました。 なぜなら、創造する前に、私は子供たちの成長過程に同行し、子供たちを育て、愛し、そして最後に手放すことを学ばなければならないからです。 </p></blockquote><hr><p>さらに、読書プロセスに参加するのは難しいです<br>本全体が私にハリーポッターのコピーの感覚を与え続けています </p><p>しかし、今回の読書には大きな違いがあります<br>昔、そんな小説を読んでいると、主人公の視点で本に入ることが多かったです。<br>年齢とともに<br>今回はSilasの視点からです </p><p>この本が中国で一般的なファンタジールーチンである場合<br>ボッドは間違いなく姉妹スカーレットを迎え、スレアを飼いならし、マスターになり、ジャックを引き裂き、ブラザーフッドのボスとして座ります </p><p>しかし、アメリカの神々について書いたニールでは、これは何も起こりませんでした。<br>ボッドがモンスターを演じた後👾、姉妹紙は怖がっていました。ボッドはごく普通の<strong>世界はとても大きいので、見たいです</strong> </p><p>父親として、あなたはあなたの体が田舎のものになるのを見たいですか、それとも本の中のものになるのを見たいですか📖？ </p><hr><p>反抗期に行われた愚かなこともあり、両親はそれを支払う必要があります<br>年をとった今、両親のさまざまな禁止事項の難しさを理解しています。 </p><p>しかし、私はそれについて考えずにはいられません<br>私は今何を知っているのか分かりませんでした </p><p>私は、今の自分とその時の自分が<br>その時は絶対に従わない<br>目を覚ますには、社会の鉄の拳で顔を殴られなければなりません<br>断固として何かをする </p><hr><p>総務を扱った後、いつの日かおとぎ話の世界から出て人生に入る </p><blockquote><p>「さようなら、それでは、サイラス。」 ボッドは小さな男の子の時と同じように手を差し出し、シラスはそれを冷たい手で古い象牙の色で手に取り、それを激しく振った。<br>「さようなら、誰もオーエンス。」<br>ボッドは小さなスーツケースを手に取った。 彼は地下室から抜け出すためにドアを開け、振り返らずに小道への緩やかな斜面を歩いて戻った。」 </p></blockquote><p>私が出てきたとき私は惨めでした、誰も私を与えませんでした、さようならもありません<br>北京の家賃が払い戻され、片道チケットを購入しました<br>すべての持ち物は3つのスーツケースに詰められています<br>午前4時に空港までタクシーに乗る<br>委託終了後、搭乗、退去 </p><blockquote><p>振り返らずに </p></blockquote><p>ボッドの聴覚幻覚も聞いてほしいと思います。 </p><blockquote><p>彼は一歩前進しました…「息子よ、あなたをとても誇りに思います」という声がありました。 </p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;アミューズメントパーク🎠予約&quot;&gt;&lt;a href=&quot;#アミューズメントパーク🎠予約&quot; class=&quot;headerlink&quot; title=&quot;アミューズメントパーク🎠予約&quot;&gt;&lt;/a&gt;アミューズメントパーク🎠予約&lt;/h1&gt;&lt;div style=&quot;width: 300px&quot;&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/The%20Graveyard%20Book.jpg&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;子供たちは生と死の概念を持っておらず、墓地は彼らにとって娯楽公園のようなものです &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Reading" scheme="https://leihao0.github.io/ja/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>SwiftUIのヒント</title>
    <link href="https://leihao0.github.io/ja/SwiftUI-Tips/"/>
    <id>https://leihao0.github.io/ja/SwiftUI-Tips/</id>
    <published>2020-04-24T11:49:41.000Z</published>
    <updated>2020-12-20T23:53:08.320Z</updated>
    
    <content type="html"><![CDATA[<h2 id="UserDefaultsへのバインド"><a href="#UserDefaultsへのバインド" class="headerlink" title="UserDefaultsへのバインド"></a>UserDefaultsへのバインド</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UD</span>: <span class="title">ObservableObject</span> </span>&#123;</span><br><span class="line">    @<span class="type">Published</span> <span class="keyword">var</span> date: <span class="type">Date</span> = <span class="type">UserDefaults</span>.standard.value(forKey: <span class="string">&quot;date&quot;</span>) <span class="keyword">as</span>? <span class="type">Date</span> ?? <span class="type">Date</span>() &#123;</span><br><span class="line">        <span class="keyword">didSet</span> &#123;</span><br><span class="line">            <span class="type">UserDefaults</span>.standard.<span class="keyword">set</span>(<span class="keyword">self</span>.date, forKey: <span class="string">&quot;date&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="AppDelegate-gt-SceneDelegate"><a href="#AppDelegate-gt-SceneDelegate" class="headerlink" title="AppDelegate-&gt; SceneDelegate"></a>AppDelegate-&gt; SceneDelegate</h2><p>多くの代表者が <code>AppDelegate.swift</code>から<code>SceneDelegate.swift</code>に移動しました </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> app: UIApplication, <span class="keyword">open</span> url: URL, options: [UIApplication.OpenURLOptionsKey : <span class="keyword">Any</span>] = [:])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// to</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">scene</span><span class="params">(<span class="number">_</span> scene: UIScene, openURLContexts URLContexts: Set&lt;UIOpenURLContext&gt;)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="NavigationView、NavigationBarItems、NavigationLink"><a href="#NavigationView、NavigationBarItems、NavigationLink" class="headerlink" title="NavigationView、NavigationBarItems、NavigationLink"></a>NavigationView、NavigationBarItems、NavigationLink</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ContentView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">EnvironmentObject</span> <span class="keyword">var</span> ud: <span class="type">UD</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> url = <span class="string">&quot;Title:status?date=\(String(ud.firstDate.timeIntervalSince1970))&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                qrCodeImage(<span class="keyword">for</span>: url)!</span><br><span class="line"></span><br><span class="line">                <span class="type">Spacer</span>().frame(height: <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">                <span class="type">Text</span>(<span class="string">&quot;\(ud.firstDate)&quot;</span>)</span><br><span class="line">            &#125;.navigationBarTitle(<span class="string">&quot;Title&quot;</span>)</span><br><span class="line">                .navigationBarItems(trailing:</span><br><span class="line">                    <span class="type">HStack</span> &#123;</span><br><span class="line">                        <span class="type">NavigationLink</span>(destination: <span class="type">PickerView</span>(firstDate: $ud.firstDate)) &#123;</span><br><span class="line">                            <span class="type">Image</span>(systemName: <span class="string">&quot;gear&quot;</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="PickerViewバインディング"><a href="#PickerViewバインディング" class="headerlink" title="PickerViewバインディング"></a>PickerViewバインディング</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PickerView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">Binding</span> <span class="keyword">var</span> date: <span class="type">Date</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                <span class="type">DatePicker</span>(selection: $date, <span class="keyword">in</span>: ...<span class="type">Date</span>(), displayedComponents: .date) &#123;</span><br><span class="line">                    <span class="type">Text</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SwiftUI画像の空白のビューを修正"><a href="#SwiftUI画像の空白のビューを修正" class="headerlink" title="SwiftUI画像の空白のビューを修正"></a>SwiftUI画像の空白のビューを修正</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ciContext = <span class="type">CIContext</span>()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">qrCodeImage</span><span class="params">(<span class="keyword">for</span> string: String)</span></span> -&gt; <span class="type">Image?</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> data = string.data(using: <span class="type">String</span>.<span class="type">Encoding</span>.utf8)</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> qrFilter = <span class="type">CIFilter</span>(name: <span class="string">&quot;CIQRCodeGenerator&quot;</span>) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">    qrFilter.setValue(data, forKey: <span class="string">&quot;inputMessage&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">10</span>, y: <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> ciImage = qrFilter.outputImage?.transformed(by: transform) <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cgImage = ciContext.createCGImage(ciImage, from: ciImage.extent)</span><br><span class="line">    <span class="comment">// convert to UIImage</span></span><br><span class="line">    <span class="keyword">let</span> uiImage = <span class="type">UIImage</span>(cgImage: cgImage!)</span><br><span class="line">    <span class="keyword">let</span> image = <span class="type">Image</span>(uiImage: uiImage)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> image</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;UserDefaultsへのバインド&quot;&gt;&lt;a href=&quot;#UserDefaultsへのバインド&quot; class=&quot;headerlink&quot; title=&quot;UserDefaultsへのバインド&quot;&gt;&lt;/a&gt;UserDefaultsへのバインド&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UD&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;ObservableObject&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @&lt;span class=&quot;type&quot;&gt;Published&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; date: &lt;span class=&quot;type&quot;&gt;Date&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;UserDefaults&lt;/span&gt;.standard.value(forKey: &lt;span class=&quot;string&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;Date&lt;/span&gt; ?? &lt;span class=&quot;type&quot;&gt;Date&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;didSet&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;UserDefaults&lt;/span&gt;.standard.&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.date, forKey: &lt;span class=&quot;string&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="SwiftUI" scheme="https://leihao0.github.io/ja/tags/swiftui/"/>
    
  </entry>
  
  <entry>
    <title>ビデオを縮小してiCloudストレージを削減する方法</title>
    <link href="https://leihao0.github.io/ja/How-to-reduce-iCloud-storage-by-shrink-videos/"/>
    <id>https://leihao0.github.io/ja/How-to-reduce-iCloud-storage-by-shrink-videos/</id>
    <published>2020-03-29T16:04:51.000Z</published>
    <updated>2020-12-20T23:53:08.320Z</updated>
    
    <content type="html"><![CDATA[<p>実際、4kビデオから不要なクリップを差し引くと、スペースをより効果的に節約できます </p><hr><p>「写真」で動画をギャラリーすると、いつどこで撮ったかが表示されます </p><p>これは私の思い出を思い出すのに役立つ素晴らしい機能です<br>しかし、元の4kはiCloudであまりにも多くのスペースを占有します </p><p>たとえば、HEVC(High Efficiency Video Coding)を使用しても、2：30のビデオは1GBのスペースを占有します<br>私の200GiCloudプランはほぼ満杯です </p><p>したがって、スペースを節約するために、ビデオを少し圧縮する予定です。 </p><a id="more"></a><p>だが、 </p><h2 id="FFmpegはビデオを変換します。メタデータがあっても、GPSは失われます。"><a href="#FFmpegはビデオを変換します。メタデータがあっても、GPSは失われます。" class="headerlink" title="FFmpegはビデオを変換します。メタデータがあっても、GPSは失われます。"></a>FFmpegはビデオを変換します。メタデータがあっても、GPSは失われます。</h2><p>幸いなことに、私は方法を見つけました </p><h3 id="ツール"><a href="#ツール" class="headerlink" title="ツール"></a>ツール</h3><ul><li>FFmpeg </li><li>Exiftool </li></ul><h4 id="元のビデオをフォルダにエクスポートする"><a href="#元のビデオをフォルダにエクスポートする" class="headerlink" title="元のビデオをフォルダにエクスポートする"></a>元のビデオをフォルダにエクスポートする</h4><p>「写真」からフォルダにビデオをドラッグする一般的な方法は、「写真」にビデオを変換させることです </p><p>したがって、エクスポートするすべてのビデオを選択する必要があります。 </p><p><code>ファイル-&gt;エクスポート-&gt;変更されていないオリジナルをエクスポート...</code> </p><h4 id="各ビデオを縮小する"><a href="#各ビデオを縮小する" class="headerlink" title="各ビデオを縮小する"></a>各ビデオを縮小する</h4><p>iPhoneのデフォルトストリームは </p><p><code>＃0：0(および)：ビデオ：hevc(メイン)(hvc1 / 0x31637668)、yuv420p(tv、bt709)</code> </p><p>したがって、 <code>-pix_fmtyuv420p10le</code>を使用して10ビットに再エンコードしても役に立ちません </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">ffmov</span></span>() &#123;</span><br><span class="line">    mkdir -p shrunk</span><br><span class="line"></span><br><span class="line">    <span class="comment"># h265でffmpeg </span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v libx265 -crf 28 -c:a copy -c:s copy -tag:v hvc1 shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    overwriteExif <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Exif情報を元のビデオから縮小された* .movにコピーします </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## すべての* .movをウォークスルーします </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$f</span></span><br><span class="line">        ffmov <span class="variable">$f</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>次に、これらのコードをコピーして <code>Terminal</code>と<code>cd VideoFolder</code>に貼り付け、次に <code>shrinkVideos</code>に貼り付けることができます。 </p><p>収縮には時間がかかります </p><p>私のMacBookPro(15インチ、2018)では、わずか0.3回<br>しかし、通常、ビデオはあまり品質を失うことなく5分の1に削減されます </p><p>すべてが完了すると、縮小されたビデオは <code>shrunk /</code>フォルダーの下に配置されます </p><p>次に、縮小されたビデオをインポートする前に、それらを比較して元のビデオを削除できます </p><p>さて、結局私は極端に遅い速度に耐えられないので、私は加速のためにNvidia 1080 GPUを使用して詳細を学びます：[CUDA GPU Accelerated h264 / h265 / HEVC Video Encoding with Staxrip](<a href="https://leihao0.github.io">https://leihao0.github.io</a> / CUDA-GPU-Accelerated-h264-h265-HEVC-Video-Encoding-with-Staxrip /) </p><p>次のステップは、変換されたビデオを <code>hvc1</code>としてマークすることです。そうしないと、写真のインポート時にエラーが発生します。 </p><p><strong>無効：操作を完了できませんでした。 (PHPhotosErrorDomainエラー-1。)</strong> </p><p>つまり、全体のステップは </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">ffhvc1</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> -&gt; <span class="variable">$1</span>.mov&quot;</span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v copy -c:a copy -c:s copy -tag:v hvc1 <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>.mov -&gt; <span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm <span class="string">&quot;<span class="variable">$1</span>&quot;</span>; mv <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line">    <span class="comment"># Exif情報を元のビデオから縮小された* .movにコピーします </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## すべての* .movをウォークスルーします </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">        ffhvc1 <span class="string">&quot;shrunk/<span class="variable">$f</span>&quot;</span></span><br><span class="line">        overwriteExif <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Staxripを使用してすべてのビデオを縮小/に変換します </span></span><br><span class="line"><span class="comment"># 次に、 `shrinkVideos`を実行します </span></span><br></pre></td></tr></table></figure><hr><p>それがあなたを助けることを願っています </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;実際、4kビデオから不要なクリップを差し引くと、スペースをより効果的に節約できます &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;「写真」で動画をギャラリーすると、いつどこで撮ったかが表示されます &lt;/p&gt;
&lt;p&gt;これは私の思い出を思い出すのに役立つ素晴らしい機能です&lt;br&gt;しかし、元の4kはiCloudであまりにも多くのスペースを占有します &lt;/p&gt;
&lt;p&gt;たとえば、HEVC(High Efficiency Video Coding)を使用しても、2：30のビデオは1GBのスペースを占有します&lt;br&gt;私の200GiCloudプランはほぼ満杯です &lt;/p&gt;
&lt;p&gt;したがって、スペースを節約するために、ビデオを少し圧縮する予定です。 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="FFmpeg" scheme="https://leihao0.github.io/ja/tags/ffmpeg/"/>
    
      <category term="Exiftool" scheme="https://leihao0.github.io/ja/tags/exiftool/"/>
    
      <category term="iCloud" scheme="https://leihao0.github.io/ja/tags/icloud/"/>
    
  </entry>
  
  <entry>
    <title>LeetCodeハッシュテーブル</title>
    <link href="https://leihao0.github.io/ja/LeetCode-Hash-Table/"/>
    <id>https://leihao0.github.io/ja/LeetCode-Hash-Table/</id>
    <published>2020-01-11T16:00:00.000Z</published>
    <updated>2020-12-20T23:53:08.320Z</updated>
    
    <content type="html"><![CDATA[<h2 id="デザインハッシュセット"><a href="#デザインハッシュセット" class="headerlink" title="デザインハッシュセット"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashSet">デザインハッシュセット</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: <span class="literal">false</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">         bucket[key] = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">contains</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="デザインハッシュマップ"><a href="#デザインハッシュマップ" class="headerlink" title="デザインハッシュマップ"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashMap">デザインハッシュマップ</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashMap</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: -<span class="number">1</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> key: Int, <span class="number">_</span> value: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">get</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重複が含まれています"><a href="#重複が含まれています" class="headerlink" title="重複が含まれています"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate">重複が含まれています</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(i) &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(i)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="単一番号"><a href="#単一番号" class="headerlink" title="単一番号"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Single-Number">単一番号</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">singleNumber</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> ^ $<span class="number">1</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2つの配列の交差"><a href="#2つの配列の交差" class="headerlink" title="2つの配列の交差"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-Arrays">2つの配列の交差</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ハッピー数"><a href="#ハッピー数" class="headerlink" title="ハッピー数"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Happy-Number">ハッピー数</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> setI = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isHappy</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = n, r = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &gt; <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> t = i%<span class="number">10</span></span><br><span class="line">            r += t*t</span><br><span class="line">            i /= <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> setI.<span class="built_in">contains</span>(r) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        setI.insert(r)</span><br><span class="line">        <span class="keyword">return</span> isHappy(r)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2つのリストの最小インデックス合計"><a href="#2つのリストの最小インデックス合計" class="headerlink" title="2つのリストの最小インデックス合計"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Minimum-Index-Sum-of-Two-Lists">2つのリストの最小インデックス合計</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 452 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict2 = [<span class="type">String</span>: <span class="type">Int</span>](), least = <span class="type">Int</span>.<span class="built_in">max</span>, arr = [<span class="type">String</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list2.<span class="built_in">count</span> &#123;</span><br><span class="line">            dict2[ list2[i] ] = i</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list1.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> j = dict2[ list1[i] ] &#123;</span><br><span class="line">                <span class="keyword">let</span> n = i+j</span><br><span class="line">                <span class="keyword">if</span> n &lt; least &#123;</span><br><span class="line">                    arr = [list1[i]]</span><br><span class="line">                    least = n</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> n == least &#123;</span><br><span class="line">                    arr.append(list1[i])</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2104 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> dict1 = list1.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict2 = list2.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict = <span class="type">Set</span>(dict1.keys).intersection(dict2.keys).<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>] = dict1[$<span class="number">1</span>]! + dict2[$<span class="number">1</span>]! &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value == dict.<span class="built_in">map</span>(&#123; $<span class="number">0</span>.value &#125;).<span class="built_in">min</span>()  &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.key &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2つのアレイの交差II"><a href="#2つのアレイの交差II" class="headerlink" title="2つのアレイの交差II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-Arrays-II">2つのアレイの交差II</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span>](), ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重複IIを含む"><a href="#重複IIを含む" class="headerlink" title="重複IIを含む"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate-II">重複IIを含む</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsNearbyDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: [<span class="type">Int</span>]]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> n = nums[i]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> arr = dict[n] &#123;</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> arr &#123;</span><br><span class="line">                    <span class="keyword">if</span> i-j &lt;= k &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                dict[n] = arr + [i]</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dict[n] = [i]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ロガーレートリミッター"><a href="#ロガーレートリミッター" class="headerlink" title="ロガーレートリミッター"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Logger-Rate-Limiter">ロガーレートリミッター</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> logs = [<span class="type">String</span>: <span class="type">Int</span>]()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">shouldPrintMessage</span><span class="params">(<span class="number">_</span> timestamp: Int, <span class="number">_</span> message: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> lastTimestamp = logs[message], timestamp - lastTimestamp &lt; <span class="number">10</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        logs[message] = timestamp</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="グループシフト文字列"><a href="#グループシフト文字列" class="headerlink" title="グループシフト文字列"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Group-Shifted-Strings">グループシフト文字列</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">groupStrings</span><span class="params">(<span class="number">_</span> strings: [String])</span></span> -&gt; [[<span class="type">String</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [[<span class="type">Int</span>]: [<span class="type">String</span>]]()</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> strings &#123;</span><br><span class="line">            <span class="keyword">let</span> arrS = <span class="type">Array</span>(s)</span><br><span class="line">            <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">1</span>..&lt;arrS.<span class="built_in">count</span>) &#123;</span><br><span class="line">                arr.append((<span class="type">Int</span>(arrS[i].asciiValue!)-<span class="type">Int</span>(arrS[i-<span class="number">1</span>].asciiValue!)+<span class="number">26</span>)%<span class="number">26</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            dict[arr, <span class="keyword">default</span>: []] += [s]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="有効な数独"><a href="#有効な数独" class="headerlink" title="有効な数独"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Valid-Sudoku">有効な数独</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidSudoku</span><span class="params">(<span class="number">_</span> board: [[Character]])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[i].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[i].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[j].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[j].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> setC = <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;()</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                        <span class="keyword">let</span> <span class="built_in">c</span> = board[i*<span class="number">3</span>+k][j*<span class="number">3</span>+l]</span><br><span class="line">                        <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                        <span class="keyword">if</span> setC.<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            setC.insert(<span class="built_in">c</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重複するサブツリーを検索"><a href="#重複するサブツリーを検索" class="headerlink" title="重複するサブツリーを検索"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Find-Duplicate-Subtrees">重複するサブツリーを検索</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicateSubtrees</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        dfs(root)</span><br><span class="line">        <span class="keyword">return</span> nodeDict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value.<span class="number">1</span> &gt; <span class="number">1</span> &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value.<span class="number">0</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> nodeDict = [[<span class="type">Int?</span>]: (<span class="type">TreeNode</span>, <span class="type">Int</span>)]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">dfs</span><span class="params">(<span class="number">_</span> node: TreeNode?)</span></span> -&gt; [<span class="type">Int?</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> node = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> [<span class="literal">nil</span>] &#125;</span><br><span class="line">        <span class="keyword">let</span> key: [<span class="type">Int?</span>] = [node.val] + dfs(node.<span class="keyword">left</span>) + dfs(node.<span class="keyword">right</span>)</span><br><span class="line">        nodeDict[key, <span class="keyword">default</span>: (node, <span class="number">0</span>)].<span class="number">1</span> += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> key</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="宝石と石"><a href="#宝石と石" class="headerlink" title="宝石と石"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Jewels-and-Stones">宝石と石</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">numJewelsInStones</span><span class="params">(<span class="number">_</span> J: String, <span class="number">_</span> S: String)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> j = <span class="type">Set</span>(<span class="type">J</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">S</span>.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + (j.<span class="built_in">contains</span>($<span class="number">1</span>) ? <span class="number">1</span> : <span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文字を繰り返さない最長の部分文字列"><a href="#文字を繰り返さない最長の部分文字列" class="headerlink" title="文字を繰り返さない最長の部分文字列"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Longest-Substring-Without-Repeating-Characters">文字を繰り返さない最長の部分文字列</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Two-Sum-III-データ構造設計"><a href="#Two-Sum-III-データ構造設計" class="headerlink" title="Two Sum III-データ構造設計"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Two-Sum-III---Data-structure-design">Two Sum III-データ構造設計</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TwoSum</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> numbers = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> number: Int)</span></span> &#123;</span><br><span class="line">        numbers[number, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">find</span><span class="params">(<span class="number">_</span> value: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (k, v) <span class="keyword">in</span> numbers &#123;</span><br><span class="line">            <span class="keyword">let</span> rest = value-k</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> num = numbers[rest], (num &gt; ((rest == k) ? <span class="number">1</span> : <span class="number">0</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4Sum-II"><a href="#4Sum-II" class="headerlink" title="4Sum II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#4Sum-II">4Sum II</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fourSumCount</span><span class="params">(<span class="number">_</span> A: [Int], <span class="number">_</span> B: [Int], <span class="number">_</span> C: [Int], <span class="number">_</span> D: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">0</span>, ab = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">A</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">B</span> &#123;</span><br><span class="line">                ab[i+j, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">C</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">D</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> v = ab[-i-j] &#123; num += v &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="トップKの頻繁な要素"><a href="#トップKの頻繁な要素" class="headerlink" title="トップKの頻繁な要素"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Top-K-Frequent-Elements">トップKの頻繁な要素</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">topKFrequent</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(into: [<span class="type">Int</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span> &#125;.sorted(by: &#123;$<span class="number">0</span>.value &gt; $<span class="number">1</span>.value&#125;)[..&lt;k].<span class="built_in">map</span>&#123;$<span class="number">0</span>.key&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="一意の単語の略語"><a href="#一意の単語の略語" class="headerlink" title="一意の単語の略語"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Unique-Word-Abbreviation">一意の単語の略語</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ValidWordAbbr</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> abbrDict = [<span class="type">String</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;]()</span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> dictionary: [<span class="type">String</span>]) &#123;</span><br><span class="line">        dictionary.forEach &#123; abbrDict[abbreviate($<span class="number">0</span>), <span class="keyword">default</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;()].insert($<span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isUnique</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> abbrSet = abbrDict[abbreviate(word)] &#123;</span><br><span class="line">            <span class="keyword">return</span> abbrSet.<span class="built_in">contains</span>(word) &amp;&amp; abbrSet.<span class="built_in">count</span> == <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">abbreviate</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> word.<span class="built_in">count</span> &lt; <span class="number">3</span> ? word : (<span class="type">String</span>(word.first!) + <span class="type">String</span>(word.<span class="built_in">count</span>-<span class="number">2</span>) + <span class="type">String</span>(word.last!))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="削除GetRandomO-1-を挿入"><a href="#削除GetRandomO-1-を挿入" class="headerlink" title="削除GetRandomO(1)を挿入"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Insert-Delete-GetRandom-O(1)">削除GetRandomO(1)を挿入</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 220 ms, 30.27%</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RandomizedSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> vals = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.insert(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> !vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.remove(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getRandom</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> vals.randomElement() ?? <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;デザインハッシュセット&quot;&gt;&lt;a href=&quot;#デザインハッシュセット&quot; class=&quot;headerlink&quot; title=&quot;デザインハッシュセット&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashSet&quot;&gt;デザインハッシュセット&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyHashSet&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bucket = &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;(repeating: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1000001&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; key: Int)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bucket[key] = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; key: Int)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         bucket[key] = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; key: Int)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bucket[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Swift" scheme="https://leihao0.github.io/ja/tags/swift/"/>
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ja/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCodeバイナリ検索ツリー</title>
    <link href="https://leihao0.github.io/ja/LeetCode-Binary-Search-Tree/"/>
    <id>https://leihao0.github.io/ja/LeetCode-Binary-Search-Tree/</id>
    <published>2020-01-09T16:00:00.000Z</published>
    <updated>2020-12-20T23:53:08.320Z</updated>
    
    <content type="html"><![CDATA[<h2 id="バイナリ検索ツリーを確認する"><a href="#バイナリ検索ツリーを確認する" class="headerlink" title="バイナリ検索ツリーを確認する"></a>バイナリ検索ツリーを確認する</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidBST</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">max</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> node: TreeNode?, <span class="number">_</span> lower: Int, <span class="number">_</span> upper: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> n = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> n.val &lt;= lower || n.val &gt;= upper &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper(n.<span class="keyword">left</span>, lower, n.val) &amp;&amp; helper(n.<span class="keyword">right</span>, n.val, upper)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="バイナリ検索ツリーイテレータ"><a href="#バイナリ検索ツリーイテレータ" class="headerlink" title="バイナリ検索ツリーイテレータ"></a>バイナリ検索ツリーイテレータ</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BSTIterator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> queue = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        helper(root.<span class="keyword">left</span>)</span><br><span class="line">        queue.append(root.val)</span><br><span class="line">        helper(root.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> root: <span class="type">TreeNode?</span>) &#123;</span><br><span class="line">        helper(root)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">next</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> queue.removeFirst()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasNext</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !queue.isEmpty</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="バイナリ検索ツリーで検索"><a href="#バイナリ検索ツリーで検索" class="headerlink" title="バイナリ検索ツリーで検索"></a>バイナリ検索ツリーで検索</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == val &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">left</span>, val)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">right</span>, val)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="バイナリ検索ツリーに操作を挿入します"><a href="#バイナリ検索ツリーに操作を挿入します" class="headerlink" title="バイナリ検索ツリーに操作を挿入します"></a>バイナリ検索ツリーに操作を挿入します</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insertIntoBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> root: TreeNode? = root, <span class="number">_</span> val: Int = val)</span></span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> l = root.<span class="keyword">left</span> &#123;</span><br><span class="line">                    insert(l, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">left</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> r = root.<span class="keyword">right</span> &#123;</span><br><span class="line">                    insert(r, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">right</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        insert()</span><br><span class="line">        <span class="keyword">return</span> root ?? <span class="type">TreeNode</span>(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="バイナリ検索ツリーのノードを削除します"><a href="#バイナリ検索ツリーのノードを削除します" class="headerlink" title="バイナリ検索ツリーのノードを削除します"></a>バイナリ検索ツリーのノードを削除します</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deleteNode</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == key &#123;</span><br><span class="line">            <span class="keyword">if</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> != <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> p = root.<span class="keyword">right</span></span><br><span class="line">                <span class="keyword">while</span> p?.<span class="keyword">left</span> != <span class="literal">nil</span> &#123;  p = p?.<span class="keyword">left</span> &#125;</span><br><span class="line">                p?.<span class="keyword">left</span> = root.<span class="keyword">left</span></span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">right</span></span><br><span class="line">            &#125; <span class="keyword">else</span>  &#123;</span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> ? root.<span class="keyword">left</span> : root.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> key &lt; root.val &#123;</span><br><span class="line">            root.<span class="keyword">left</span> = deleteNode(root.<span class="keyword">left</span>, key)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            root.<span class="keyword">right</span> = deleteNode(root.<span class="keyword">right</span>, key)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="データストリームのK番目に大きい要素"><a href="#データストリームのK番目に大きい要素" class="headerlink" title="データストリームのK番目に大きい要素"></a>データストリームのK番目に大きい要素</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KthLargest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">var</span> k = <span class="number">0</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> k: <span class="type">Int</span>, <span class="number">_</span> nums: [<span class="type">Int</span>]) &#123;</span><br><span class="line">        <span class="keyword">self</span>.k = k</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123; add(i) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.<span class="built_in">count</span> &lt; k || val &gt; arr.first! &#123;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> i &lt; arr.<span class="built_in">count</span>, val &gt; arr[i] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            arr.insert(val, at: i)</span><br><span class="line">            <span class="keyword">if</span> arr.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">                arr.removeFirst()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr.first!</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="バイナリ検索ツリーの最も近い共通の祖先"><a href="#バイナリ検索ツリーの最も近い共通の祖先" class="headerlink" title="バイナリ検索ツリーの最も近い共通の祖先"></a>バイナリ検索ツリーの最も近い共通の祖先</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">lowestCommonAncestor</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root, <span class="keyword">let</span> pv = p?.val, <span class="keyword">let</span> qv = q?.val <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val &gt;= <span class="built_in">min</span>(pv, qv) &amp;&amp; root.val &lt;= <span class="built_in">max</span>(pv, qv) &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">return</span> root.val &gt; <span class="built_in">max</span>(pv, qv) ? lowestCommonAncestor(root.<span class="keyword">left</span>, p, q) : lowestCommonAncestor(root.<span class="keyword">right</span>, p, q)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重複する要素がありますIII"><a href="#重複する要素がありますIII" class="headerlink" title="重複する要素がありますIII"></a>重複する要素がありますIII</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="バランスの取れたバイナリツリー"><a href="#バランスの取れたバイナリツリー" class="headerlink" title="バランスの取れたバイナリツリー"></a>バランスの取れたバイナリツリー</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isBalanced</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root).<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; (<span class="type">Int</span>, <span class="type">Bool</span>) &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> r = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> (<span class="number">0</span>, <span class="literal">true</span>) &#125;</span><br><span class="line">        <span class="keyword">let</span> rl = helper(r.<span class="keyword">left</span>), rr = helper(r.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span> + <span class="built_in">max</span>(rl.<span class="number">0</span>, rr.<span class="number">0</span>), rl.<span class="number">1</span> &amp;&amp; rr.<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(rl.<span class="number">0</span> - rr.<span class="number">0</span>) &lt;= <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="順序付けられた配列をバイナリ検索ツリーに変換します"><a href="#順序付けられた配列をバイナリ検索ツリーに変換します" class="headerlink" title="順序付けられた配列をバイナリ検索ツリーに変換します"></a>順序付けられた配列をバイナリ検索ツリーに変換します</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortedArrayToBST</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = nums.<span class="built_in">count</span>, h = n/<span class="number">2</span>, h1 = h+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> r = <span class="type">TreeNode</span>(nums[n/<span class="number">2</span>])</span><br><span class="line">        r.<span class="keyword">left</span> = sortedArrayToBST(<span class="type">Array</span>(nums[<span class="number">0</span>..&lt;h]))</span><br><span class="line">        r.<span class="keyword">right</span> = sortedArrayToBST(<span class="type">Array</span>(nums[h1...]))</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;バイナリ検索ツリーを確認する&quot;&gt;&lt;a href=&quot;#バイナリ検索ツリーを確認する&quot; class=&quot;headerlink&quot; title=&quot;バイナリ検索ツリーを確認する&quot;&gt;&lt;/a&gt;バイナリ検索ツリーを確認する&lt;/h2&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
    
      <category term="Swift" scheme="https://leihao0.github.io/ja/tags/swift/"/>
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ja/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCodeN-aryツリー</title>
    <link href="https://leihao0.github.io/ja/leetcode-n-ary-tree/"/>
    <id>https://leihao0.github.io/ja/leetcode-n-ary-tree/</id>
    <published>2020-01-08T16:00:00.000Z</published>
    <updated>2020-12-20T23:53:08.319Z</updated>
    
    <content type="html"><![CDATA[<h2 id="N-aryツリープレオーダートラバーサル"><a href="#N-aryツリープレオーダートラバーサル" class="headerlink" title="N-aryツリープレオーダートラバーサル"></a>N-aryツリープレオーダートラバーサル</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children.reversed()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="N-およびツリーポストオーダートラバーサル"><a href="#N-およびツリーポストオーダートラバーサル" class="headerlink" title="N-およびツリーポストオーダートラバーサル"></a>N-およびツリーポストオーダートラバーサル</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">postorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans.reversed()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="N-aryツリーレベルの順序走査"><a href="#N-aryツリーレベルの順序走査" class="headerlink" title="N-aryツリーレベルの順序走査"></a>N-aryツリーレベルの順序走査</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> cur = [root], ans = [[root.val]]</span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            <span class="keyword">let</span> children = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            <span class="keyword">if</span> !children.isEmpty &#123; ans.append( children.<span class="built_in">map</span> &#123; $<span class="number">0</span>.val &#125; ) &#125;</span><br><span class="line">            cur = children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="N-aryツリーの最大深さ"><a href="#N-aryツリーの最大深さ" class="headerlink" title="N-aryツリーの最大深さ"></a>N-aryツリーの最大深さ</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> cur = root == <span class="literal">nil</span> ? [] : [root!], depth = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            cur = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            depth += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> depth</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="N-aryツリーをバイナリツリーにエンコードする"><a href="#N-aryツリーをバイナリツリーにエンコードする" class="headerlink" title="N-aryツリーをバイナリツリーにエンコードする"></a>N-aryツリーをバイナリツリーにエンコードする</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">encode</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> tn = <span class="type">TreeNode</span>(root.val); <span class="keyword">var</span> p: <span class="type">TreeNode?</span> = tn</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> n = root.children.first &#123;</span><br><span class="line">            p?.<span class="keyword">left</span> = encode(n); p = p?.<span class="keyword">left</span></span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> root.children[<span class="number">1</span>...] &#123;</span><br><span class="line">                p?.<span class="keyword">right</span> = encode(n); p = p?.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tn</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">decode</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = <span class="type">Node</span>(root.val); <span class="keyword">var</span> p = root.<span class="keyword">left</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> l = decode(p) &#123; n.children.append(l) &#125;</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> q = p?.<span class="keyword">right</span>, <span class="keyword">let</span> r = decode(q) &#123;</span><br><span class="line">            n.children.append(r); p = q</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="N-aryツリーのシリアル化と逆シリアル化"><a href="#N-aryツリーのシリアル化と逆シリアル化" class="headerlink" title="N-aryツリーのシリアル化と逆シリアル化"></a>N-aryツリーのシリアル化と逆シリアル化</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">serialize</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="string">&quot;$&quot;</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="string">&quot;\(root.val),\(root.children.count),&quot;</span></span><br><span class="line">        <span class="keyword">for</span> child <span class="keyword">in</span> root.children &#123;</span><br><span class="line">            s += serialize(child)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">(<span class="number">_</span> data: String)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> arr = data.components(separatedBy: <span class="string">&quot;,&quot;</span>).<span class="built_in">compactMap</span> &#123; <span class="type">Int</span>($<span class="number">0</span>) &#125;; <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">()</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> i &gt;= arr.<span class="built_in">count</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">Node</span>(arr[i])</span><br><span class="line">            i += <span class="number">2</span>; <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;arr[i-<span class="number">1</span>] &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> a = deserialize() &#123; n.children.append(a) &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deserialize()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;N-aryツリープレオーダートラバーサル&quot;&gt;&lt;a href=&quot;#N-aryツリープレオーダートラバーサル&quot; class=&quot;headerlink&quot; title=&quot;N-aryツリープレオーダートラバーサル&quot;&gt;&lt;/a&gt;N-aryツリープレオーダートラバーサル&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;preorder&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; root: Node?)&lt;/span&gt;&lt;/span&gt; -&amp;gt; [&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; stack = [root], ans = [&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;]()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; node = stack.popLast(), &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; n = node &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans.append(n.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            stack += n.children.reversed()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Swift" scheme="https://leihao0.github.io/ja/tags/swift/"/>
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ja/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCodeバイナリ検索</title>
    <link href="https://leihao0.github.io/ja/LeetCode-Binary-Search/"/>
    <id>https://leihao0.github.io/ja/LeetCode-Binary-Search/</id>
    <published>2020-01-06T16:00:00.000Z</published>
    <updated>2020-12-20T23:53:08.319Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二分探索"><a href="#二分探索" class="headerlink" title="二分探索"></a>二分探索</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123; i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; j = mid-<span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Sqrt-x"><a href="#Sqrt-x" class="headerlink" title="Sqrt(x)"></a>Sqrt(x)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mySqrt</span><span class="params">(<span class="number">_</span> x: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> target = <span class="type">Int</span>(sqrt(<span class="type">Double</span>(x)))</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = x</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> mid == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            mid &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数が多いか少ないかを推測する"><a href="#数が多いか少ないかを推測する" class="headerlink" title="数が多いか少ないかを推測する"></a>数が多いか少ないかを推測する</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> : <span class="title">GuessGame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">guessNumber</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">switch</span> guess(mid) &#123;</span><br><span class="line">                <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">                    j = mid-<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    i = mid+<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> mid</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="回転したソート済み配列で検索"><a href="#回転したソート済み配列で検索" class="headerlink" title="回転したソート済み配列で検索"></a>回転したソート済み配列で検索</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j - i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &gt;= nums[i] &#123;</span><br><span class="line">                (target &gt;= nums[i] &amp;&amp; target &lt; nums[mid]) ? (j = mid-<span class="number">1</span>) : (i = mid+<span class="number">1</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                (target &lt;= nums[j] &amp;&amp; target &gt; nums[mid]) ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最初の悪いバージョン"><a href="#最初の悪いバージョン" class="headerlink" title="最初の悪いバージョン"></a>最初の悪いバージョン</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>: <span class="title">VersionControl</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">firstBadVersion</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> h = i + (j-i)/<span class="number">2</span></span><br><span class="line">            isBadVersion(h) ? (j = h-<span class="number">1</span>) : (i = h + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ピーク要素を見つける"><a href="#ピーク要素を見つける" class="headerlink" title="ピーク要素を見つける"></a>ピーク要素を見つける</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[mid+<span class="number">1</span>] ? (r = mid) : (l = mid+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> l: Int, <span class="number">_</span> r: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (l == r) &#123; <span class="keyword">return</span> l &#125;</span><br><span class="line">            <span class="keyword">let</span> mid = l + (r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> (nums[mid] &gt; nums[mid+<span class="number">1</span>]) ? search(l, mid) : search(mid+<span class="number">1</span>, r)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> search(<span class="number">0</span>, nums.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="回転したソート済み配列で最小値を見つける"><a href="#回転したソート済み配列で最小値を見つける" class="headerlink" title="回転したソート済み配列で最小値を見つける"></a>回転したソート済み配列で最小値を見つける</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="範囲を検索する"><a href="#範囲を検索する" class="headerlink" title="範囲を検索する"></a>範囲を検索する</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchRange</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> [-<span class="number">1</span>, -<span class="number">1</span>] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                i = mid; j = mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123;</span><br><span class="line">                i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                j = mid-<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i-<span class="number">1</span> &gt;= <span class="number">0</span>, nums[i-<span class="number">1</span>] == target &#123; i -= <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j+<span class="number">1</span> &lt; nums.<span class="built_in">count</span>, nums[j+<span class="number">1</span>] == target &#123; j += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i] == target ? [i, j] : [-<span class="number">1</span>, -<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="K個の最も近い要素を見つける"><a href="#K個の最も近い要素を見つける" class="headerlink" title="K個の最も近い要素を見つける"></a>K個の最も近い要素を見つける</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findClosestElements</span><span class="params">(<span class="number">_</span> arr: [Int], <span class="number">_</span> k: Int, <span class="number">_</span> x: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.isEmpty &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = arr.<span class="built_in">count</span>, ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> arr[mid] == x &#123; i = mid &#125;</span><br><span class="line">            arr[mid] &lt; x ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        j = i+k &lt; arr.<span class="built_in">count</span> ? i+k : arr.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        i = (i-k) &gt;= <span class="number">0</span> ? (i-k) : <span class="number">0</span></span><br><span class="line">        ans = <span class="type">Array</span>(arr[i...j])</span><br><span class="line">        <span class="keyword">while</span> ans.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">            <span class="built_in">abs</span>(x-ans.first!) &lt;= <span class="built_in">abs</span>(x-ans.last!) ? ans.removeLast() : ans.removeFirst()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最も近い二分探索木の値"><a href="#最も近い二分探索木の値" class="headerlink" title="最も近い二分探索木の値"></a>最も近い二分探索木の値</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">closestValue</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> target: Double)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = root, v = p!.val</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">abs</span>(<span class="type">Double</span>(p!.val)-target) &lt; <span class="built_in">abs</span>(<span class="type">Double</span>(v)-target) &#123; v = p!.val &#125;</span><br><span class="line">            p = target &lt; <span class="type">Double</span>(p!.val) ? p!.<span class="keyword">left</span> : p!.<span class="keyword">right</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="サイズ不明のソートされた配列で検索"><a href="#サイズ不明のソートされた配列で検索" class="headerlink" title="サイズ不明のソートされた配列で検索"></a>サイズ不明のソートされた配列で検索</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> reader: ArrayReader, <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> reader.<span class="keyword">get</span>(<span class="number">0</span>) == target &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> reader.<span class="keyword">get</span>(j) &lt; target &#123;</span><br><span class="line">            i = j; j &lt;&lt;= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)&gt;&gt;<span class="number">1</span>, v = reader.<span class="keyword">get</span>(mid)</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            v &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Pow-x、n"><a href="#Pow-x、n" class="headerlink" title="Pow(x、n)"></a>Pow(x、n)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">myPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="number">0</span>: <span class="number">1.0</span>, <span class="number">1</span>: x]</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">fastPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n] &#123; <span class="keyword">return</span> v &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> h = fastPow(x, n/<span class="number">2</span>), v = n&amp;<span class="number">1</span> == <span class="number">0</span> ? h*h : x*h*h</span><br><span class="line">            dict[n] = v</span><br><span class="line">            <span class="keyword">return</span> v</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> v = fastPow(x, <span class="built_in">abs</span>(n))</span><br><span class="line">        <span class="keyword">return</span> n &lt; <span class="number">0</span> ? <span class="number">1</span>/v : v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="有効なパーフェクトスクエア"><a href="#有効なパーフェクトスクエア" class="headerlink" title="有効なパーフェクトスクエア"></a>有効なパーフェクトスクエア</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isPerfectSquare</span><span class="params">(<span class="number">_</span> num: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> x = (num+<span class="number">1</span>)/<span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> x*x &gt; num &#123;</span><br><span class="line">            x = (x + num/x) / <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> x*x == num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ターゲットよりも大きい最小の文字を見つける"><a href="#ターゲットよりも大きい最小の文字を見つける" class="headerlink" title="ターゲットよりも大きい最小の文字を見つける"></a>ターゲットよりも大きい最小の文字を見つける</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">nextGreatestLetter</span><span class="params">(<span class="number">_</span> letters: [Character], <span class="number">_</span> target: Character)</span></span> -&gt; <span class="type">Character</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">c</span> <span class="keyword">in</span> letters &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">c</span> &gt; target &#123; <span class="keyword">return</span> <span class="built_in">c</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> letters.first!</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="回転したソート済み配列で最小値を見つける-1"><a href="#回転したソート済み配列で最小値を見つける-1" class="headerlink" title="回転したソート済み配列で最小値を見つける"></a>回転したソート済み配列で最小値を見つける</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            nums[mid] &gt;= nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="回転ソートされた配列IIで最小値を見つける"><a href="#回転ソートされた配列IIで最小値を見つける" class="headerlink" title="回転ソートされた配列IIで最小値を見つける"></a>回転ソートされた配列IIで最小値を見つける</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] &gt; nums[r] &#123; l = mid+<span class="number">1</span> &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; nums[r]  &#123; r = mid &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123; r -= <span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2つのアレイの交差"><a href="#2つのアレイの交差" class="headerlink" title="2つのアレイの交差"></a>2つのアレイの交差</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2つのアレイの交差点II"><a href="#2つのアレイの交差点II" class="headerlink" title="2つのアレイの交差点II"></a>2つのアレイの交差点II</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Two-SumII-入力配列がソートされます"><a href="#Two-SumII-入力配列がソートされます" class="headerlink" title="Two SumII-入力配列がソートされます"></a>Two SumII-入力配列がソートされます</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(<span class="number">_</span> numbers: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = numbers.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> v =  numbers[i]+numbers[j]</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            v &lt; target ? (i+=<span class="number">1</span>) : (j-=<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> [i+<span class="number">1</span>, j+<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重複する番号を見つける"><a href="#重複する番号を見つける" class="headerlink" title="重複する番号を見つける"></a>重複する番号を見つける</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;(), i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(nums[i]) &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(nums[i]); i+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2つのソートされた配列の中央値"><a href="#2つのソートされた配列の中央値" class="headerlink" title="2つのソートされた配列の中央値"></a>2つのソートされた配列の中央値</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> nums = nums1+nums2</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span>, j &lt; nums2.<span class="built_in">count</span> &#123;</span><br><span class="line">            nums1[i] &lt; nums2[j] ? (nums[k] = nums1[i], i+=<span class="number">1</span>) : (nums[k] = nums2[j], j+=<span class="number">1</span>); k+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span> &#123; nums[k] = nums1[i]; i+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j &lt; nums2.<span class="built_in">count</span> &#123; nums[k] = nums2[j]; j+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> h = nums.<span class="built_in">count</span>/<span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">count</span>&amp;<span class="number">1</span> == <span class="number">1</span> ? <span class="type">Double</span>(nums[h]) : <span class="type">Double</span>(nums[h-<span class="number">1</span>]+nums[h])/<span class="number">2.0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="K番目に小さいペア距離を見つける"><a href="#K番目に小さいペア距離を見つける" class="headerlink" title="K番目に小さいペア距離を見つける"></a>K番目に小さいペア距離を見つける</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">smallestDistancePair</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> nums = nums.sorted()</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, h = nums.last!-nums.first!</span><br><span class="line">        <span class="keyword">while</span> l &lt; h &#123;</span><br><span class="line">            <span class="keyword">let</span> m = (l+h)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span>, l1 = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> r1 <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (nums[r1]-nums[l1]) &gt; m &#123; l1 += <span class="number">1</span> &#125;</span><br><span class="line">                <span class="built_in">count</span> += r1-l1</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">count</span> &gt;= k ? (h = m): (l = m+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分割配列の最大合計"><a href="#分割配列の最大合計" class="headerlink" title="分割配列の最大合計"></a>分割配列の最大合計</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;二分探索&quot;&gt;&lt;a href=&quot;#二分探索&quot; class=&quot;headerlink&quot; title=&quot;二分探索&quot;&gt;&lt;/a&gt;二分探索&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; nums: [Int], &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; target: Int)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, j = nums.&lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt;= j &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; mid = i + (j-i)/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; nums[mid] == target &amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mid &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; nums[mid] &amp;lt; target &amp;#123; i = mid+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123; j = mid-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Swift" scheme="https://leihao0.github.io/ja/tags/swift/"/>
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ja/tags/leetcode/"/>
    
  </entry>
  
</feed>
