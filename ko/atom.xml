<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeiHao&#39;s Blog</title>
  
  
  <link href="/ko/atom.xml" rel="self"/>
  
  <link href="https://leihao0.github.io/ko/"/>
  <updated>2017-12-08T16:00:00.000Z</updated>
  <id>https://leihao0.github.io/ko/</id>
  
  <author>
    <name>LeiHao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>베이징 - 1.</title>
    <link href="https://leihao0.github.io/ko/bejing-1/"/>
    <id>https://leihao0.github.io/ko/bejing-1/</id>
    <published>2021-08-11T16:00:00.000Z</published>
    <updated>2017-12-08T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2014-2018"><a href="#2014-2018" class="headerlink" title="2014-2018."></a>2014-2018.</h2><p>작은 마법사는 여러 봄과 가을 황제에 살았습니다. </p><p>그냥 황제에 도착하고, 경험이 풍부했습니다<br>심장 준비가 있지만 매일 숨을 쉬기 위해 충격을받습니다. </p><a id="more"></a><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-12.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-13.webp" alt=""></div></div></div><p>지난 몇 년 동안<br>earmily running<br>도중에<br>그것은 실행할 준비가되었습니다 </p><p>물론, 푸른 하늘과 흰 구름도 있습니다.<br>심지어 DIESIDER 효과가있는 Shengguang </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-00.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-11.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-05.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-07.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-14.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-16.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-17.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-20.webp" alt=""></div></div></div><p>마지막으로 일본에서 돌아 왔을 때, 작은 마법사가 갑자기 생각했습니다.<br>자연 경관 외에도 여행, 다양한 장소를 방문하는 것입니다. 국내 거기에 있습니까?<br>그래서 나는 그것을 확인했다, 나는 거의 황제가 거의 혈액을 앓고 있다는 것을 발견했다. </p><h2 id="천문학적-인"><a href="#천문학적-인" class="headerlink" title="천문학적 인"></a>천문학적 인</h2><p>이번에는 일본어 텍스트와 다른 이번에는 마침내 이해할 수 있습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-30.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-32.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-33.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-36.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-37.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-39.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-41.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-42.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-43.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-44.webp" alt=""></div></div></div><h2 id="바다-홀"><a href="#바다-홀" class="headerlink" title="바다 홀"></a>바다 홀</h2><p>도로 휴대폰이나 디자인에 문제가 있는지 모르겠습니다.<br>도로 표지판을 따라 나오면 중간 거대한 돌고래 홀이 보지 못했음을 발견했습니다 … </p><p>그러나, 유리 오일의 대부분은 여전히 ​​오랜 시간이나 스타일인지 모르겠습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-47.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-49.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-50.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-53.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-54.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-56.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-57.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-59.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-60.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-62.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-63.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-65.webp" alt=""></div></div></div><h2 id="동물원"><a href="#동물원" class="headerlink" title="동물원"></a>동물원</h2><p>오사카 동물원과 절묘한 차이점<br>다음은 큰 목표입니다<br>유일한 나쁜 것은 너무 피곤합니다<br>옛날을 볼 수있는 생물을 바꾸십시오 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-67.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-68.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-69.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-70.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-71.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-73.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-75.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-76.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-78.webp" alt=""></div></div></div><h2 id="달"><a href="#달" class="headerlink" title="달"></a>달</h2><p>마법<br>달은 종종 많지 만<br>그러나 실제 장면은 여전히 ​​처음입니다. </p><p>그 당시에는 아이폰이 밤 장면이 없었고 붙여 넣기가 아닙니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-79.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-80.webp" alt=""></div></div></div><h2 id="시장-조사"><a href="#시장-조사" class="headerlink" title="시장 조사"></a>시장 조사</h2><p>소프트 모션이 시장 조사를 위해 오프라인으로 운영하도록하십시오. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-81.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-82.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-84.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-85.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-86.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-87.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-88.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-89.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-90.webp" alt=""></div></div></div><h2 id="맛있는"><a href="#맛있는" class="headerlink" title="맛있는"></a>맛있는</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-24.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-25.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-91.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-92.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-94.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-95.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-98.webp" alt=""></div></div></div><h2 id="재미있는"><a href="#재미있는" class="headerlink" title="재미있는"></a>재미있는</h2><p>· · 🎬, 🎭, 👨💻 </p><p>레이싱, 영화, 크로스 토크, 녹 파티 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-27.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-93.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-96.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-97.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-03.webp" alt=""></div></div></div><p>마지막으로, 연말은 황제에서 끝났습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-22.webp" alt=""></div></div></div><ul><li>월든 </li></ul><hr><p>Translated by Google</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2014-2018&quot;&gt;&lt;a href=&quot;#2014-2018&quot; class=&quot;headerlink&quot; title=&quot;2014-2018.&quot;&gt;&lt;/a&gt;2014-2018.&lt;/h2&gt;&lt;p&gt;작은 마법사는 여러 봄과 가을 황제에 살았습니다. &lt;/p&gt;
&lt;p&gt;그냥 황제에 도착하고, 경험이 풍부했습니다&lt;br&gt;심장 준비가 있지만 매일 숨을 쉬기 위해 충격을받습니다. &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ko/tags/travel/"/>
    
      <category term="Beijing" scheme="https://leihao0.github.io/ko/tags/beijing/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ko/tags/littlemaster/"/>
    
      <category term="🇨🇳" scheme="https://leihao0.github.io/ko/tags/%F0%9F%87%A8%F0%9F%87%B3/"/>
    
  </entry>
  
  <entry>
    <title>Ⅳ-1-3.</title>
    <link href="https://leihao0.github.io/ko/japan-1-3/"/>
    <id>https://leihao0.github.io/ko/japan-1-3/</id>
    <published>2021-05-13T13:58:00.000Z</published>
    <updated>2017-12-08T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="오사카"><a href="#오사카" class="headerlink" title="오사카"></a>오사카</h1><p>나는 두 번째 날을 샀다, 나는 오사카에서 2 일간의 여행 쿠폰을 샀다.<br>따라서 모든 다음 항목은 모두입니다<br>비어 있는<br>비어 있는<br>비어 있는 </p><a id="more"></a><h2 id="관람차"><a href="#관람차" class="headerlink" title="관람차"></a>관람차</h2><p>redhorse osaka 휠을 두 개의 상자로 나누었습니다<br>흰색은 전체 투명 상자입니다<br>빨간색과 파란색은 바닥에 불투명합니다 </p><p>그 후, 어제의 롤러 코스터가 있습니다<br>작은 마법사는 자연스럽게 투명합니다. </p><p>그리고 싱가포르는 항상 관람차를 닫아야했습니다.<br>이것은 내부에서 먹을 수 없습니다 </p><p>약 30 분 동안 원을 돌리십시오<br>나는 다른 사람들과 나누고 싶다고 생각했다.<br>나는 모든 사람들이 혼자 서기를 기대하지 않았습니다. </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-01.webp" alt=""></p><h2 id="선장-라인"><a href="#선장-라인" class="headerlink" title="선장 라인"></a>선장 라인</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-03.webp" alt=""></div></div></div><p>보트에 서서 관람차를 계속 지켜보세요. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-05.webp" alt=""></div></div></div><h2 id="산타-마리아"><a href="#산타-마리아" class="headerlink" title="산타 마리아"></a>산타 마리아</h2><p>매시간, 번갈아, 약 50 분 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-08.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-07.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-09.webp" alt=""></div></div></div><h2 id="바다-홀"><a href="#바다-홀" class="headerlink" title="바다 홀"></a>바다 홀</h2><p>바다 홀 밖에서 벽 밖에있는 거대한 고래 상어 모델이 있습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-10.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-11.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-12.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-16.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-17.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-19.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-20.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-21.webp" alt=""></div></div></div><h3 id="물고기를-터치하십시오"><a href="#물고기를-터치하십시오" class="headerlink" title="물고기를 터치하십시오"></a>물고기를 터치하십시오</h3><p>손을 씻을 필요가 있지만, 당신은 단독을 사용할 수 없습니다.<br>그것은 물고기 피부의 피부를 파괴 할 것이기 때문입니다. </p><p>작은 주인이 전에 물고기를 만지지 않았다고 말합니다.<br>처음으로, 나는 상어를 만졌다. </p><p>상상의 얼음과는 다르다<br>온도는 내가 소녀를 만졌던 송아지처럼 부드럽고 부드럽습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-24.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-27.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-30.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-32.webp" alt=""></div></div></div><p>Haofu 독특한 음료 🥤.<br>파란색, 슈퍼 좋은 음료<br>나는 나오면 철분 화상을 먹었습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-33.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-35.webp" alt=""></div></div></div><h2 id="Hep-5-Ferris-Wheel"><a href="#Hep-5-Ferris-Wheel" class="headerlink" title="Hep 5 Ferris Wheel."></a>Hep 5 Ferris Wheel.</h2><p>이 기능은 쇼핑몰의 바닥이 특징입니다.<br>나는 높은 도달 모델과 운명을 보았습니다 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-36.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-37.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-39.webp" alt=""></div></div></div><p>로마 후 로마에서 살았던 마지막 시간.<br>당연히, 나는 알게 될 것이고 힐튼을 할 것입니다 </p><p>관람차를 말해야합니다<br>조명의 조명 중 하나<br>힐튼 몇 가지 큰 단어 반짝임 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-41.webp" alt=""></div></div></div><h2 id="Tianshuge-시간과-우주-캡슐"><a href="#Tianshuge-시간과-우주-캡슐" class="headerlink" title="Tianshuge 시간과 우주 캡슐"></a>Tianshuge 시간과 우주 캡슐</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-43.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-44.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-45.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-47.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-48.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-49.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-51.webp" alt=""></div></div></div><h2 id="톈유-사원-동물원"><a href="#톈유-사원-동물원" class="headerlink" title="톈유 사원 동물원"></a>톈유 사원 동물원</h2><p>나는 Naxim Niklas Tarebo “유모차”에서 검은 백조 씨를 보았습니다. </p><ul><li>흑곰 </li><li>조상 조류 </li><li>KOAH (骷髅) </li><li>코끼리 </li><li>올빼미 </li><li>까마귀 </li><li>코뿔소 </li><li>하마 </li><li>낙타 </li><li>너구리 </li><li>염소 (가축) </li><li>악어 🐊 (骷髅) </li><li>사자 </li><li>기린 </li><li>팬더 (인형) </li><li>어린이에는 작은 말이 없습니다. </li></ul><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-54.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-57.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-59.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-60.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-62.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-63.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-65.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-66.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-71.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-68.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-69.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-70.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-73.webp" alt=""></div></div></div><h2 id="괴상한"><a href="#괴상한" class="headerlink" title="괴상한"></a>괴상한</h2><p>내일 때문에 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-75.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-78.webp" alt=""></div></div></div><h2 id="공항"><a href="#공항" class="headerlink" title="공항"></a>공항</h2><p>티켓이 점검되면, 여동생이 작은 주인에게 물었습니다. 사람이십니까?<br>작은 마법사는 그가 물론 그 사람이라고 말합니다. </p><p>그런 다음 여동생의 일련의 작업을 참조하십시오.<br>그에게 약간의 마법사에게 축하해 주셔서 부스트를주십시오. </p><p>그 당시, 나는 저술하게했고, 나는 티켓에 무관심했다.<br>여동생은 작은 마법사가 표현이 없었습니다. </p><p>그러나 업그레이드 티켓과 자체 비용과는 아직 다릅니다.<br>처음으로 일본과 다릅니다<br>업그레이드 티켓은 VIP REST를 입력 할 수 없습니다 </p><p>이번에는 목욕을 할 수 없습니다.<br>그러나 평면 이후에 즐기는 서비스는 정확히 동일합니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-79.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-80.webp" alt=""></div></div></div><p>돌아 오면, 나는 세계의 힘에서 배웠습니다. 공항은 잠재 고객의 무료 업그레이드를 제공합니다. </p><p>원래 싱글,이 혜택<br>작은 주인은 슬프다 </p><hr><p>Translated by Google</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;오사카&quot;&gt;&lt;a href=&quot;#오사카&quot; class=&quot;headerlink&quot; title=&quot;오사카&quot;&gt;&lt;/a&gt;오사카&lt;/h1&gt;&lt;p&gt;나는 두 번째 날을 샀다, 나는 오사카에서 2 일간의 여행 쿠폰을 샀다.&lt;br&gt;따라서 모든 다음 항목은 모두입니다&lt;br&gt;비어 있는&lt;br&gt;비어 있는&lt;br&gt;비어 있는 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ko/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ko/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/ko/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/ko/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>Ⅳ-1-2.</title>
    <link href="https://leihao0.github.io/ko/japan-1-2/"/>
    <id>https://leihao0.github.io/ko/japan-1-2/</id>
    <published>2021-05-12T01:58:00.000Z</published>
    <updated>2017-12-06T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="오사카-Huanshi시"><a href="#오사카-Huanshi시" class="headerlink" title="오사카 Huanshi시"></a>오사카 Huanshi시</h1><p>그 다음날 JR을 가져 가서 나라에 가서 작은 사슴을 보아라. </p><a id="more"></a><h2 id="나라"><a href="#나라" class="headerlink" title="나라"></a>나라</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-02.webp" alt=""></div></div></div><p>Conan을 참조하십시오 </p><p>충격적인 것은 작은 사슴이 차와가는 lapie와 섞여 있다는 것입니다. </p><p>나는 그것이 나쁜 위장을 먹는다면, 공공 공간에서 욕실에 가야합니다.<br>놀란 발견은 또한 화장실을 택했습니다.이 작은 마법사는 일본에서 걱정하지 않습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-05.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-07.webp" alt=""></div></div></div><p>나간 후 작은 사슴을 받으십시오<br>실수로 탭을 찍었습니다<br>작은 마법사의 가방이 열리고 여행 브로셔가 떨어졌습니다. </p><p>그때… </p><p>내가 양이 종이를 먹을 수 있다고 말했을 때.<br>나는 그것을 볼 것으로 기대하지 않았다. </p><p>작은 사슴의 다양한 공격 패턴으로 인해<br>나는 직원을 돕어야하지만, 나는 그것을 오랫동안 보지 못했습니다.<br>어리석은 사슴은 축복보다 더 많은 것을 묻고 설사를하지 마십시오. </p><h2 id="우지-🍦"><a href="#우지-🍦" class="headerlink" title="우지 🍦"></a>우지 🍦</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-08.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-09.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-13.webp" alt=""></div></div></div><p>매일 이름이있는 경우 기대를 초과 할 것으로 기대하지 않았습니다.<br>일본 정형 외과를 통과합니다<br>그런 다음 Yutu에 가서 차 아이스크림과 Tat Tea를 먹습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-16.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-17.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-18.webp" alt=""></div></div></div><p>나는 방금 먹을 때 오사카로 돌아왔다.<br>Yuji가 아이스크림을위한 것이라고 밝혀졌습니다 … </p><h2 id="오사카-Huanshi시-1"><a href="#오사카-Huanshi시-1" class="headerlink" title="오사카 Huanshi시"></a>오사카 Huanshi시</h2><p>다음날 아침에 글로벌 스튜디오까지 이른 아침 </p><p>일부 영화에 자주 나타나는 지구체가 있습니다. </p><p>그런 다음 작은 마법사가 놀랍게 발견되었습니다<br>Xiao Huang, Spider-Man, Meng, 나는 글로벌 스튜디오의 IP입니다. </p><p>글로벌 스튜디오가 특히 큰이기 때문에 테마는 특히 테마입니다.<br>당신이 놀고 싶다면, 당신은 적어도 밤에 살아야합니다.<br>그러나 나중에 며칠 동안 캘리포니아에서 가장 큰 로스 앤젤레스를 배웠습니다.<br>싱가포르는 매우 작습니다. 하루를 초과 할 수 있습니다.<br>물론 이것은 나중에 단어이며, 나는 그것을 언급하지 않을 것입니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-20.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-21.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-24.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-27.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-30.webp" alt=""></div></div></div><h3 id="할리우드-꿈"><a href="#할리우드-꿈" class="headerlink" title="할리우드 꿈"></a>할리우드 꿈</h3><p>나는 멀리 비명을 지르고 들었다.<br>반복적으로 산들의 조각에 대한 신들의 죽음을 반복적으로 상기시킨다.<br>그러나이 차의 사람들을보고 있습니다.<br>나는오고 싶다. 아무것도 없다.<br>나는 내가 자신을 조정할 것이라는 것을 두려워한다. </p><p>마찬가지로 사실입니다.<br>나는 익숙한 티켓을 샀다<br>작은 주인은 버스에 직접 긴 남자 용을 통과했습니다. </p><p>할리우드 꿈은 할 수 있습니다<br>직원들은 그들이 그렇게 두려워하지 않았다고 말했다.<br>자연적으로 선택하는 것은 그렇게합니다 </p><p>수직 가을을 제외하고는 과정이 괜찮습니다. 그것은 더 과장된 느낌입니다.<br>그런 다음 몇 가지 연속 회전은 거대한 느낌을줍니다<br>나는 항상 레일이 스티어링을 지원하기에 충분하지 않다는 것을 느낍니다. 영화처럼 박살 질 것입니다. </p><p>그러나, 아니오가 없거나 보안이 끝났습니다. </p><p>그러므로, 🎢은 또한 사람과 다르다.<br>나는 그것을 놀라게 할 수 없다, 나는 모든 길을 비명을 지르고, 나는 앉아 있어야한다는 것을 안다. 그러나 나는 비행 드래곤을위한 빠른 티켓이 없다. </p><p>그리고 작은 마법사가 여전히 느꼈다, 전체 여행과 통행인들 -<br>작은 마법사가 매달려있는 다리 효과에 따르면, 자매 종이는 이미 자신과 사랑에 빠져 있습니다. </p><h3 id="쥬라기-공원"><a href="#쥬라기-공원" class="headerlink" title="쥬라기 공원"></a>쥬라기 공원</h3><p>나는 침입자를 확인하고 비옷을 던졌다.<br>중간에 나는 거짓 공룡을 보았고, 대단한 드래곤에서 갑작스럽고 그림이 무서워졌습니다.<br>모든 방식은 검은 방에 무관심하고 천천히 오릅니다.<br>갑작스런 배가 떨어졌고 관광객의 첫 번째 줄이 튀었습니다.<br>글쎄, 그것은 그와 같지 않습니다. </p><h3 id="비행-Tianyi-Dragon"><a href="#비행-Tianyi-Dragon" class="headerlink" title="비행 Tianyi Dragon."></a>비행 Tianyi Dragon.</h3><p>그리고 할리우드 꿈<br>플라잉 플라스크 플레이어가 좌석에 고정되고 90도 회전, 지구를 향해 천천히 오릅니다. </p><p>그러나이 작은 주인은 너무 많지 않습니다.<br>자매 종이가 아니라, 두 사람은 늦었습니다. 당신은 그것을 볼 수 없습니다.<br>나는 내가 어색했고 나는 몇 번의 회전이 났다고 느꼈다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-36.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-33.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-37.webp" alt=""></div></div></div><h3 id="해리-포터"><a href="#해리-포터" class="headerlink" title="해리 포터"></a>해리 포터</h3><p>긴 숲 도로 후, 🦉 咕 🦉 咕, 境 </p><p>버터 맥주가 있고, Azkan의 원하는 것들이 있습니다. </p><h4 id="Olifan-de-Cane-Shop"><a href="#Olifan-de-Cane-Shop" class="headerlink" title="Olifan de Cane Shop."></a>Olifan de Cane Shop.</h4><p>NPC는 임의로 아이를 선택하고 해리가 처음으로 마술 지팡이를 선택할 때 음모를 가져갈 것입니다.<br>다른 사람들은 아래층 아래에 ​​있습니다 </p><p>나오면 지팡이를 사용할 수 있습니다. 주문을 볼 수 있습니다. </p><h4 id="호그-가즈-마법과-마법사-대학"><a href="#호그-가즈-마법과-마법사-대학" class="headerlink" title="호그 가즈 마법과 마법사 대학"></a>호그 가즈 마법과 마법사 대학</h4><p>3D 영화를 볼 수있는 작은 차를 타십시오<br>Harry Ronggen이 Quyli 경쟁에 참여하기 위해 뒤따라 왔습니다. </p><p>와우, 정말 재미있어. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-39.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-40.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-41.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-42.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-43.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-44.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-46.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-47.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-49.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-52.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-54.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-55.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-57.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-58.webp" alt=""></div></div></div><h2 id="친구"><a href="#친구" class="headerlink" title="친구"></a>친구</h2><p>글로벌 스튜디오에서 오는 후 늦었습니다.<br>연주, 나는 작고 성령, 친구, 모두를 보낼 것으로 기대하지 않았습니다. 화장실, 쌀 밥솥, 전기 가전 제품 더미를 구입 … </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-59.webp" alt=""></p><hr><p>Translated by Google</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;오사카-Huanshi시&quot;&gt;&lt;a href=&quot;#오사카-Huanshi시&quot; class=&quot;headerlink&quot; title=&quot;오사카 Huanshi시&quot;&gt;&lt;/a&gt;오사카 Huanshi시&lt;/h1&gt;&lt;p&gt;그 다음날 JR을 가져 가서 나라에 가서 작은 사슴을 보아라. &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ko/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ko/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/ko/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/ko/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>Ⅱ-1-1.</title>
    <link href="https://leihao0.github.io/ko/japan-1-1/"/>
    <id>https://leihao0.github.io/ko/japan-1-1/</id>
    <published>2021-03-15T16:24:10.000Z</published>
    <updated>2021-03-22T16:00:09.180Z</updated>
    
    <content type="html"><![CDATA[<h2 id="천-새들"><a href="#천-새들" class="headerlink" title="천 새들"></a>천 새들</h2><p>이것이 수천 개의 새라고 불리는 것을 밝혀줍니다. </p><p>상승<br>작은 마법사가 아직오고 있다고 말했다. 산 꼭대기에 올라가는 것이 낫다.<br>그러나 그것은 작지 않습니다.<br>지도를 내려다 보았습니다. 천 새들은 거의 작았습니다. 작은 마법사가 많은 이미지를 느꼈습니다.<br>그것은 아직도 산의 한가운데있는 것처럼 보입니다. 나머지 여정을 지연시키는 것이 필요하다는 것을 두려워합니다.<br>그래서 그냥 산 아래로 가라. </p><p>나는 나중에 돌아 왔고, 나는 거리가 아님을 배웠다.<br>새가 정말로, 그것이 덜 </p><a id="more"></a><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-04.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-11.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-10.webp" alt=""></div></div></div><p>누구나 Qingquan에 의해 손을 씻고 있습니다<br>작은 마스터가 휴대 전화로 씻어 냈습니다.<br>나는 내가 올 때 두려워한다.<br>나는 행복이 있는지 모르겠다<br>사람들 주위에 사람들이 아직도 버스트가 아닙니다 </p><p>대나무 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-17.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-16.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-15.webp" alt=""></div></div></div><p>저녁 식사, 와인 하우스는 현지인이 채팅하고 휴식을 취하고있는 곳입니다.<br>와인과 비교하여 여전히 좋은 음료입니다.<br>슈퍼마켓 옆에 다양한 만화 잡지를 함께 판매 할 수 있습니다. </p><h2 id="기노-사키-온천-♨️"><a href="#기노-사키-온천-♨️" class="headerlink" title="기노 사키 온천 ♨️"></a>기노 사키 온천 ♨️</h2><p>다음날, 도시의 도시에 가기 위해 작은 기차를하십시오.<br>작은 주인은 온천을 괴롭히지 않았습니다.<br>그러나 북쪽으로서, 나는 와서 큰 욕실이 너무 많지 않다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-20.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-21.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-22.webp" alt=""></div></div></div><h2 id="진정-으로-온천-♨️"><a href="#진정-으로-온천-♨️" class="headerlink" title="진정 으로 온천 ♨️"></a>진정 으로 온천 ♨️</h2><p>그러나 사실은 상상을 초월한 것입니다 </p><p>우선, 온천은 열린 공기를 가지고 있으며, 연못, 가을 바람 잎, 눈과 눈이 있습니다.<br>따뜻한 봄 물에 거품이 너무 행복하지 마십시오. </p><p>작은 마법사는 작은 마법사가 도착하기 전에 수천 마리의 새들을 강요했습니다.<br>절지 동물 통증은 다다미 만 크롤링 할 수 있습니다 </p><p>온천 후에, 그것은 마술 적으로 밝혀졌습니다. </p><p>한숨뿐만 아니라<br>거짓 보일러 물만 샤워 할 수 있습니다<br>진짜 스파는 피를 돌려 줄 수 있습니다 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-26.webp" alt=""></div></div></div><p>11 월 때문에 봄, 증기에 가깝습니다.<br>도로의 측면에 온천 계란도 있으며, 20 분 안에 온천에서 구입할 수도 있습니다.<br>표준 설탕 심장 달걀을 꺼내십시오 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-55.webp" alt=""></div></div></div><p>물은 분명하거나 물고기입니다<br>다양한 큰 게가 있습니다<br>여기 버스는 싱가포르와 같습니다<br>버스를 타기 전에 버스에서 내리기 전에 작은 버튼을 누릅니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-24.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-27.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-28.webp" alt=""></div></div></div><h2 id="일과-산-해안"><a href="#일과-산-해안" class="headerlink" title="일과 산 해안"></a>일과 산 해안</h2><p>샌프란시스와 달리 그것은 다르며, 바다는 깨끗하고 냄새가 없습니다.<br>그러나 날씨는 즉시 변화하고 아직도 바람과 아름답고 갑자기 비, 슈퍼 추위<br>옆에 수족관을 숨기고 뜨거운 커피 한잔을하고 비를 듣는 것은 따뜻합니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-30.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-33.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-32.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-49.webp" alt=""></div></div></div><h2 id="무지개"><a href="#무지개" class="headerlink" title="무지개"></a>무지개</h2><p>인생은 먼저 무지개를 보았습니다<br>Zhang Da Tu에 오십시오 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-37.webp" alt=""></p><h2 id="수족관"><a href="#수족관" class="headerlink" title="수족관"></a>수족관</h2><p>나는 그것을 살 수 없다.<br>100 위안 이상, 7 개의 테마를 볼 수 있습니다.<br>전에 도쿄의 수족관 이상<br>바다 때문에, 그 장소는 크다<br>나는 거대한 해마를 보았다<br>또한 체중을 측정 할 수도 있습니다, 21 Little Mage ==이 해마<br>마지막으로, 작은 돌고래의 작은 물 성능이 있습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-39.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-41.webp" alt=""></div></div></div><h2 id="温泉寺"><a href="#温泉寺" class="headerlink" title="温泉寺"></a>温泉寺</h2><p>옆에 언덕이 있으며, 케이블카를 할 수 있습니다.<br>산은 높지 않지만 이미 눈이 내리고 있습니다.<br>처마의 디자인은 매우 좋으며 눈이 튀지 않을 것입니다. </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-57.webp" alt=""></p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-68.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-59.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-67.webp" alt=""></div></div></div><p>타일에 타일<br>내가 호텔로 돌아 가면 나는 스프링클러의 도로 센터를 발견했다.<br>매우 마술적이고, 왜 이것을 디자인하고 싶은지 이해하지 못합니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-71.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-73.webp" alt=""></div></div></div><p>오사카로 돌아가는 수하물을 포장했습니다 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-75.webp" alt=""></div></div></div><h2 id="크랩-레비아"><a href="#크랩-레비아" class="headerlink" title="크랩 레비아"></a>크랩 레비아</h2><h2 id="하나의-Bluelavan"><a href="#하나의-Bluelavan" class="headerlink" title="하나의 Bluelavan."></a>하나의 Bluelavan.</h2><p>미식가 거리<br>게 음악, 사전에 약속을 낼 필요가 있거나 상점은 좌석이 아닙니다.<br>그것은 그것을 재생할 수 있지만, 이런 종류의 어려움은 매우 어렵습니다. 그래서 Tatami 척에 척하기 위해 비틀린 자리가 있습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-78.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-82.webp" alt=""></div></div></div><hr><p><a href="https://twitter.com/leihao0">Twitter에서 나를 따르십시오</a> </p><hr><p>Translated by Google</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;천-새들&quot;&gt;&lt;a href=&quot;#천-새들&quot; class=&quot;headerlink&quot; title=&quot;천 새들&quot;&gt;&lt;/a&gt;천 새들&lt;/h2&gt;&lt;p&gt;이것이 수천 개의 새라고 불리는 것을 밝혀줍니다. &lt;/p&gt;
&lt;p&gt;상승&lt;br&gt;작은 마법사가 아직오고 있다고 말했다. 산 꼭대기에 올라가는 것이 낫다.&lt;br&gt;그러나 그것은 작지 않습니다.&lt;br&gt;지도를 내려다 보았습니다. 천 새들은 거의 작았습니다. 작은 마법사가 많은 이미지를 느꼈습니다.&lt;br&gt;그것은 아직도 산의 한가운데있는 것처럼 보입니다. 나머지 여정을 지연시키는 것이 필요하다는 것을 두려워합니다.&lt;br&gt;그래서 그냥 산 아래로 가라. &lt;/p&gt;
&lt;p&gt;나는 나중에 돌아 왔고, 나는 거리가 아님을 배웠다.&lt;br&gt;새가 정말로, 그것이 덜 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ko/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ko/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/ko/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/ko/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>Ⅱ-1-0.</title>
    <link href="https://leihao0.github.io/ko/japan-1-0/"/>
    <id>https://leihao0.github.io/ko/japan-1-0/</id>
    <published>2021-03-14T02:38:19.000Z</published>
    <updated>2021-03-14T11:21:52.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="교토"><a href="#교토" class="headerlink" title="교토"></a>교토</h1><p>11 개의 휴일이 🇮🇹에서 돌아 왔습니다<br>아마도 신용 카드가 닦아 졌기 때문에 중국 상인 은행은 장 프리미엄으로 보냈습니다. </p><p>한 달 반 후에 하루를 보내면 작은 마법사가 일본으로 보내서 메이플 리프를 보게됩니다.<br>경로 계획이 완료되었음을 나타냅니다<br>교토 - &gt; 나라 - &gt; 기노 사키 - &gt; 오사카<br>시스템에서 좋지 않다면 가짜로 가짜로, 11 월 초 티켓을 주문할 수 있습니다. 단풍 나무 잎 시즌의 꼬리를 잡기를 바랍니다. </p><p>리틀 마스터가 간사이 지역을보고 있습니다. 나는 거기에 없었습니다.<br>즉시 6 월은 3 년 왕복 비자입니다.<br>당신은 또한 함께 갈 수 있습니다 </p><p>그것은 단지 2 주이지만 시간은 더 긴급합니다.<br>다행히도, 티켓을 사고, 미친, 2 주, 사전에 일을 완성하십시오.<br>조직에 코드를 제출 한 후, 두 번째 일본어를 시작했습니다. </p><p>나는 아직도 그것을 보는 방법을 모른다.<br>내가 공항에 도착했을 때, 나는이 작은 비행기를 보았을 때 어리 석다.<br>그것은 단지 보잉 737입니다<br>최대 이벤트가 아직 발생하지 않았지만<br>그러나 그것은 아직도 그것이 바다에 떨어질 곳이 어디에서 날아갈 것으로 걱정하고 있습니다.<br>잃어버린 메인 라인을 엽니 다 </p><a id="more"></a><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-02.webp" alt=""></div></div></div><h2 id="교토-지하철역"><a href="#교토-지하철역" class="headerlink" title="교토 지하철역"></a>교토 지하철역</h2><p>동일한 플랫폼에서 지난 번 도쿄에서 🚉 등 </p><p>작은 마법사는 여전히 처음으로 지하철역이 거대한 쇼핑몰입니다.<br>총 7 층, 점점 더 많이 먹는다.<br>11 월 초 불만이지만 크리스마스로 가득 차 있습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-05.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-08.webp" alt=""></div></div></div><h2 id="황금-파빌리온-사원"><a href="#황금-파빌리온-사원" class="headerlink" title="황금 파빌리온 사원"></a>황금 파빌리온 사원</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-12.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-10.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-11.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-15.webp" alt=""></div></div></div><h2 id="교토-교엔"><a href="#교토-교엔" class="headerlink" title="교토 교엔"></a>교토 교엔</h2><p>붉은 녹색 사이에 특별한 노란 잎 나무가 있습니다. </p><blockquote><p>목이 없는 </p></blockquote><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-23.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-24.webp" alt=""></div></div></div><p>오는 시간, 아무도 없어 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-20.webp" alt=""></div></div></div><h2 id="기요-미즈-데라"><a href="#기요-미즈-데라" class="headerlink" title="기요 미즈 데라"></a>기요 미즈 데라</h2><p>기모노 여동생을 보아라 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-28.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-32.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-33.webp" alt=""></div></div></div><h2 id="高台寺"><a href="#高台寺" class="headerlink" title="高台寺"></a>高台寺</h2><p>슈팅 결혼식에서 가족을 만지고 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-35.webp" alt=""></div></div></div><p>일몰과 이상한 수도꼭지 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-36.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-38.webp" alt=""></div></div></div><p>많은 사람들이 예배당의 하나님을 찾고 있음을 알고 있습니다.<br>작은 마법사도 동전 암석을 던질 것입니다.<br>앱이 온라인 상태가되기를 바랍니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-41.webp" alt=""></div></div></div><h2 id="Lushan-작은-기차"><a href="#Lushan-작은-기차" class="headerlink" title="Lushan 작은 기차"></a>Lushan 작은 기차</h2><p>다음날 아침에, 나는 이른 아침에 Lushan 작은 기차에 갔다. 풍경은 그림 같은 것 같습니다.<br>그러나, 산의 측면을 사려고, 그렇지 않으면 나는 다른 관광객들 “와우”를 듣게 될 것입니다. 나는 아무것도 볼 수 없습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-47.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-49.webp" alt=""></div></div></div><h2 id="사가-노-죽림-소경"><a href="#사가-노-죽림-소경" class="headerlink" title="사가 노 죽림 소경"></a>사가 노 죽림 소경</h2><p>기절했다 </p><p>이것은 교토 브로셔에서 자주 보는 대나무 숲입니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-57.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-52.webp" alt=""></div></div></div><blockquote><p>깊은 숲으로 배경, 이끼를 복사 </p></blockquote><p>여기에 이끼는 훌륭합니다. 한 번 작은 마법사의 휴대 전화 벽지 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-92.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-93.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-54.webp" alt=""></div></div></div><p>시프트 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-62.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-63.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-64.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-65.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-67.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-68.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-69.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-70.webp" alt=""></div></div></div><p>Zhou Enlister ‘s Poem. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-73.webp" alt=""></div></div></div><p>당신은 또한 인간의 차를 할 수 있습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-78.webp" alt=""></div></div></div><p>그것은 많은 시든이지만<br>이게 붉은 색이 아름답다고해도 이길 수 없습니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-76.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-81.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-82.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-83.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-84.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-85.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-86.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-87.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-88.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-89.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-90.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-91.webp" alt=""></div></div></div><p>도쿄의 도시 풍경과 달리 </p><p>교토의 풍경은 폭발성이 있습니다. </p><p>다음 번엔 자매 종이를 함께 가져갈 것입니다.<br>작은 주인이 생각하고 있습니다 </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;교토&quot;&gt;&lt;a href=&quot;#교토&quot; class=&quot;headerlink&quot; title=&quot;교토&quot;&gt;&lt;/a&gt;교토&lt;/h1&gt;&lt;p&gt;11 개의 휴일이 🇮🇹에서 돌아 왔습니다&lt;br&gt;아마도 신용 카드가 닦아 졌기 때문에 중국 상인 은행은 장 프리미엄으로 보냈습니다. &lt;/p&gt;
&lt;p&gt;한 달 반 후에 하루를 보내면 작은 마법사가 일본으로 보내서 메이플 리프를 보게됩니다.&lt;br&gt;경로 계획이 완료되었음을 나타냅니다&lt;br&gt;교토 - &amp;gt; 나라 - &amp;gt; 기노 사키 - &amp;gt; 오사카&lt;br&gt;시스템에서 좋지 않다면 가짜로 가짜로, 11 월 초 티켓을 주문할 수 있습니다. 단풍 나무 잎 시즌의 꼬리를 잡기를 바랍니다. &lt;/p&gt;
&lt;p&gt;리틀 마스터가 간사이 지역을보고 있습니다. 나는 거기에 없었습니다.&lt;br&gt;즉시 6 월은 3 년 왕복 비자입니다.&lt;br&gt;당신은 또한 함께 갈 수 있습니다 &lt;/p&gt;
&lt;p&gt;그것은 단지 2 주이지만 시간은 더 긴급합니다.&lt;br&gt;다행히도, 티켓을 사고, 미친, 2 주, 사전에 일을 완성하십시오.&lt;br&gt;조직에 코드를 제출 한 후, 두 번째 일본어를 시작했습니다. &lt;/p&gt;
&lt;p&gt;나는 아직도 그것을 보는 방법을 모른다.&lt;br&gt;내가 공항에 도착했을 때, 나는이 작은 비행기를 보았을 때 어리 석다.&lt;br&gt;그것은 단지 보잉 737입니다&lt;br&gt;최대 이벤트가 아직 발생하지 않았지만&lt;br&gt;그러나 그것은 아직도 그것이 바다에 떨어질 곳이 어디에서 날아갈 것으로 걱정하고 있습니다.&lt;br&gt;잃어버린 메인 라인을 엽니 다 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ko/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ko/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/ko/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/ko/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>Ⅳ-0-2.</title>
    <link href="https://leihao0.github.io/ko/italy-0-2/"/>
    <id>https://leihao0.github.io/ko/italy-0-2/</id>
    <published>2021-02-12T16:00:00.000Z</published>
    <updated>2017-09-30T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="바티칸-궁전"><a href="#바티칸-궁전" class="headerlink" title="바티칸 궁전"></a>바티칸 궁전</h2><p>이탈리아의 원래 바티칸<br>이 지역은 국내 대학 및 대학보다 적습니다.<br>영토가 열려 있지 않습니다<br>박물관 외에도 </p><a id="more"></a><h3 id="이집트-사람"><a href="#이집트-사람" class="headerlink" title="이집트 사람"></a>이집트 사람</h3><p>나는 미라가 더 끔찍한 느낌을 보았다는 것을 보았습니다.<br>감히 사진을 찍어<br>나는 쫓아가는 것을 두려워합니다 </p><p>또한 Nosbis가 있습니다 </p><p>Assassin ‘s Creed : Origin.<br>친숙한 요소를 많이 볼 것입니다 </p><h3 id="신화의-영웅"><a href="#신화의-영웅" class="headerlink" title="신화의 영웅"></a>신화의 영웅</h3><p>불행하게도, 작은 마법사는 미술 재배의 해당 수준에 도달하지 못했습니다.<br>나는이 교과서의 예술을 보았고 결과는 누가 누가 알지 못했습니다.<br>부끄러워하다 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-06.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-10.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-14.jpg" alt=""></div></div></div><h3 id="소나무-아트-정원-및-깨진-지구"><a href="#소나무-아트-정원-및-깨진-지구" class="headerlink" title="소나무 아트 정원 및 깨진 지구"></a>소나무 아트 정원 및 깨진 지구</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-17.jpg" alt=""></div></div></div><h3 id="리오-홀과-그의-아들"><a href="#리오-홀과-그의-아들" class="headerlink" title="리오 홀과 그의 아들"></a>리오 홀과 그의 아들</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-28.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-25.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-27.jpg" alt=""></div></div></div><h3 id="원형-전시관"><a href="#원형-전시관" class="headerlink" title="원형 전시관"></a>원형 전시관</h3><p>중앙 센터는 Nero, Nero에서 사용하는 비데입니다. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-29.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-31.jpg" alt=""></div></div></div><h3 id="벽화"><a href="#벽화" class="headerlink" title="벽화"></a>벽화</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-37.jpg" alt=""></div></div></div><h3 id="라파엘-회화-방"><a href="#라파엘-회화-방" class="headerlink" title="라파엘 회화 방"></a>라파엘 회화 방</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-39.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-40.jpg" alt=""></div></div></div><h3 id="Sistin-Chapel"><a href="#Sistin-Chapel" class="headerlink" title="Sistin Chapel."></a>Sistin Chapel.</h3><p>미켈란젤로의 최종 재판과 창세기<br>사진을 찍을 수 없습니다<br>1 인당 15 분간만 머물 수 있습니다. </p><p>원래 세기는 보통 보통 보는 것이 실제로 가장 중급적이며 실제로 총 9 장의 장이 있습니다.<br>어둠, 창조적 인 날, 월, 잔디, 세미 랜드, 아담, 이브 만들기, 원래의 죄 - 확장 에덴, 노아 헌신, 그레이트 홍수, Noahirun </p><h3 id="나선형-계단"><a href="#나선형-계단" class="headerlink" title="나선형 계단"></a>나선형 계단</h3><p>수출은 계속 충격을받습니다<br>그것은 여기서 밝혀졌습니다 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-41.jpg" alt=""></div></div></div><h3 id="거룩한-컵"><a href="#거룩한-컵" class="headerlink" title="거룩한 컵"></a>거룩한 컵</h3><p>페이트 스테이 나이트 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-44.jpg" alt=""></div></div></div><h2 id="세인트-피터-스퀘어"><a href="#세인트-피터-스퀘어" class="headerlink" title="세인트 피터 스퀘어"></a>세인트 피터 스퀘어</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-45.jpg" alt=""></div></div></div><h2 id="천사-요새"><a href="#천사-요새" class="headerlink" title="천사 요새"></a>천사 요새</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-47.jpg" alt=""></div></div></div><p>갑자기 암살자의 신조 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-53.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-54.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-55.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-56.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-57.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-58.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-59.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-60.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-61.jpg" alt=""></div></div></div><h2 id="일몰"><a href="#일몰" class="headerlink" title="일몰"></a>일몰</h2><p>처음으로 일몰을보고 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-62.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-66.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-67.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-69.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-68.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-70.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-71.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-73.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-74.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-76.jpg" alt=""></div></div></div><h2 id="다음날"><a href="#다음날" class="headerlink" title="다음날"></a>다음날</h2><p>도로에서는 한 동생이 하루 여행 버스를 추천합니다.<br>티켓을 얻기 위해 돈을받은 다음 사람들이 사라졌습니다.<br>내가 거짓말 쟁이라고 생각했을 때, 동생이 두 투표로 돌아 왔습니다.<br>루프, 항상 버스에서 내릴 수 있거나, 아주 좋은 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-78.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-79.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-82.jpg" alt=""></div></div></div><h2 id="판테온"><a href="#판테온" class="headerlink" title="판테온"></a>판테온</h2><p>너무 많은 사람들이 있으며, 나는 외부의 눈을 보았습니다. </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-80.jpg" alt=""></p><h2 id="로마-싸우는-짐승"><a href="#로마-싸우는-짐승" class="headerlink" title="로마 싸우는 짐승"></a>로마 싸우는 짐승</h2><p>Scorpio, 마지막으로 짐승을 보았을 때, 작은 마법사는 암살자의 신조 : 계시<br>짐승을 오르고, 일몰을 보아라<br>나는 오랫동안 충격을 받았다.<br>나는 3 차원 세계에서 그것을 볼 것으로 기대하지 않았다.<br>그것은 믿을 수 없습니까? </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-92.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-86.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-91.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-89.jpg" alt=""></div></div></div><h2 id="개선문"><a href="#개선문" class="headerlink" title="개선문"></a>개선문</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-87.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-88.jpg" alt=""></div></div></div><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-90.jpg" alt=""></p><h2 id="헤르메스-작은-지갑"><a href="#헤르메스-작은-지갑" class="headerlink" title="헤르메스 작은 지갑"></a>헤르메스 작은 지갑</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-94.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-95.jpg" alt=""></div></div></div><p>CBD 럭셔리 건물 거리로 돌아 가기<br>Love Ma Shi Bag을 사기 위해 허브가있는 것을 권장했습니다<br>고급 스러움을 뭐라고 말하면서도 최고의 존재이기도합니다. </p><p>작은 마법사는 애플이 스트랩을 시작하기 전에 Hermès를 듣지 못했습니다.<br>당연히 믿지 마라<br>나는 덜 읽고 싶다. 나에게 거짓말을하지 마라.<br>구글에가는 “헤르메스는 사치가 아닙니다”<br>그럴 수있는 것임을 찾으려는 놀랐습니다 </p><p>그것을 닦아 내고, 나는 강아지 팩을 샀다.<br>빈 상자를 조심하십시오<br>그 옆에 쓰레기 더미에 거대한 비교할 수없는 상자를 보려면 체크 아웃하십시오. </p><h2 id="공항"><a href="#공항" class="headerlink" title="공항"></a>공항</h2><p>모든 길을 불어 넣고 마침내 돌아 왔습니다.<br>일본과 달리 유럽은 공항에서 환불을 할 수 있습니다<br>완전한 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-97.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-98.jpg" alt=""></div></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;바티칸-궁전&quot;&gt;&lt;a href=&quot;#바티칸-궁전&quot; class=&quot;headerlink&quot; title=&quot;바티칸 궁전&quot;&gt;&lt;/a&gt;바티칸 궁전&lt;/h2&gt;&lt;p&gt;이탈리아의 원래 바티칸&lt;br&gt;이 지역은 국내 대학 및 대학보다 적습니다.&lt;br&gt;영토가 열려 있지 않습니다&lt;br&gt;박물관 외에도 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ko/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ko/tags/littlemaster/"/>
    
      <category term="Italy" scheme="https://leihao0.github.io/ko/tags/italy/"/>
    
      <category term="🇮🇹" scheme="https://leihao0.github.io/ko/tags/%F0%9F%87%AE%F0%9F%87%B9/"/>
    
  </entry>
  
  <entry>
    <title>코로나 바이러스의 그늘에서 중국으로 돌아가십시오.</title>
    <link href="https://leihao0.github.io/ko/fly-back-to-china-under-covid-19/"/>
    <id>https://leihao0.github.io/ko/fly-back-to-china-under-covid-19/</id>
    <published>2020-12-20T07:52:43.000Z</published>
    <updated>2020-12-20T23:56:39.372Z</updated>
    
    <content type="html"><![CDATA[<p>새로운 박물관의 글로벌 전염병 상황은 2020 년 말에 개선되지 않습니다<br>그리고 겨울이 도래함에 따라 점차적으로 또 다른 발병의 징후가 있습니다.<br>하지만 최근에 작은 마법사는 집에 가야합니다<br>전 세계적으로 다양한 백신이 접종되었지만 </p><table><thead><tr><th>회사 소개</th><th>종류</th><th>투여 량</th><th>효능</th><th>보관 ℃</th></tr></thead><tbody><tr><td>BioNTech / Pfizer</td><td>mRNA</td><td>x2</td><td>95 %</td><td>-70</td></tr><tr><td>현대</td><td>mRNA</td><td>x2</td><td>95 %</td><td>-20</td></tr><tr><td>Oxford / AstraZeneca</td><td>아데노 바이러스 벡터</td><td>x2</td><td>62-90 %</td><td>0</td></tr></tbody></table><p>하지만 집으로 돌아가려면 여전히 14 일의 격리가 필요합니다. </p><a id="more"></a><h2 id="준비된"><a href="#준비된" class="headerlink" title="준비된"></a>준비된</h2><p>입국 정보를 얻으려면 현지 대사관을 방문하십시오.<br><a href="http://www.chinaembassy.org.sg/chn/lsfw/zytzs/t1838128.htm">뉴질랜드 대사관</a>에 따르면 싱가포르를 예로 들어 보겠습니다. </p><p>10 월 이후 탑승은 아마도 여러 단계를 거쳐 단계적으로 강화 될 것입니다. </p><ol><li>핵산 증폭 테스트 </li><li>핵산 + 혈청 IgM 이중 음성 인증서 </li><li>WeChat 미니 프로그램에서 전염병 예방 건강 코드를 신청해야합니다. </li></ol><h2 id="핵산-증폭-테스트"><a href="#핵산-증폭-테스트" class="headerlink" title="핵산 증폭 테스트"></a>핵산 증폭 테스트</h2><p>11 월에 검사 예약을해야하며 12 월에 예약을 할 필요가 없습니다. 승인 된 병원을 찾으면 직접 검사를 할 수 있습니다.<br>작은 마법사가 사는 아파트 바로 옆에 진료소가 있습니다. 도보 5 분<br>약속이 없어서 사람이 너무 많아서 한 시간 정도 기다렸어요<br>피를 흘리고 코를 찔렀다<br>전에는이 검사가 두려웠지만 싱가포르 의사들은 더 부드럽고 불편하지 않습니다. </p><p>피를 뽑은 후 잠시 눌러야한다는 점을 알려드립니다. 피를 뽑은 동생이 피를 뽑고 반창고를 조심스럽게 사용하지 않았습니다 🩹<br>결과적으로 피가 강으로 흘러 들어가고 땅의 옷이 피로 뒤덮여 서 끔찍했습니다 😨 </p><h2 id="건강-코드"><a href="#건강-코드" class="headerlink" title="건강 코드"></a>건강 코드</h2><p>다음날 아침 SMS 및 이메일로 이중 음 증명 수신<br>그러나 WeChat 애플릿은 문서를 제출할 수 없습니다.<br>마법사로서 작은 마법사는 그것이 DNS 해결 문제라고 대담하게 추측했습니다.<br>Cloudflare가 애플릿의 서버 IP를 올바르게 반환하지 않았습니다.<br>전화 📱 DNS를 114.114.114.114로 변경하면 놀랍습니다.<br>머글로 무엇을할지 한숨을 쉬지 않고 </p><p>약 한 시간 후에 건강 코드를 받았습니다.<br>혹시라도 스크린 샷 저장 </p><h2 id="생화학-슈트"><a href="#생화학-슈트" class="headerlink" title="생화학 슈트"></a>생화학 슈트</h2><p>공항에서 생화학 복을 입고 집으로 돌아 오는 사람들이 무서웠습니다.<br>꼬마 마법사가 흔들리고 있었고 + 성인용 기저귀 세트를 샀습니다.<br>몰래 입어 보는 게 불편 했어<br>연말에 북반구가 겨울이라는 점을 감안하면 트로피컬 티셔츠를 입고 비행기를 타고 옷없이 비행기에서 내리면 그 자리에서 확실히 감기에 걸릴 것입니다. </p><p>생화학 양복을 입고 옷을 더하는 것이 큰 문제가된다 </p><p>CDC의 <a href="https://chinese.cdc.gov/coronavirus/2019-ncov/travelers/travel-during-covid19.html">COVID-19 전염병 중 국내 여행</a>을 반복해서 읽은 후 꼬마 주인은 결론을 내 렸습니다. </p><ul><li>비행기에 신선한 공기가 있습니다. </li><li>마스크 착용 </li><li>부드러운 눈과 코가 아닙니다. </li></ul><p>새로운 크라운의 주요 감염 경로는 호흡기입니다. 작은 마법사는 ** N95 + 수술 용 마스크 + 고글 **을 착용하는 것이 편안해야한다고 느낍니다. </p><h2 id="귀국-항공편"><a href="#귀국-항공편" class="headerlink" title="귀국 항공편"></a>귀국 항공편</h2><p>현재 싱가포르 발 베이징 행 직항편이 없습니다.<br>먼저 상하이로 이동 한 다음 14 번 격리 후 환승 할 수 있습니다. </p><p>일주일에 싱가포르에서 상하이까지 직항편이 3 편 밖에 없습니다.<br>월요일 싱가포르 항공, 목요일 동부 항공, 금요일 밤 준 야오 항공 </p><p>동방 항공은 수하물 1 개만 위탁 할 수 있으며 초과 금액은 추가로 구매해야하며 1 개는 500 위안입니다.<br>앱 사전 구매시 20 % 할인 </p><p>탑승 직전 건강 코드 외에 세관 승객 미니 프로그램을 사용하여 입국 정보를 입력해야합니다. </p><h2 id="이스턴-항공"><a href="#이스턴-항공" class="headerlink" title="이스턴 항공"></a>이스턴 항공</h2><p>오후 3:00 </p><p>탑승구를 기다리며 절반 가량의 사람들이 생화학 옷을 입고 단단히 덮었습니다.<br>사실, 전면 보안 검색 중 일부 사람들은 벨트 및 기타 이유로 생화학 서비스의 절반을 가져야했기 때문에 매우 당황했습니다.<br>이 경우 작업이 중단되지 않습니까? 어떤 보호 효과가 있습니까? </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-02.jpg" alt=""></div></div></div><p>승무원은 또한 이중 마스크 + 고글을 착용합니다. </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-03.jpg" alt=""></p><p>비행기가 올라간 후 작은 마법사는 위성 Wi-Fi에 연결하고 가족이 걱정할 필요가 없도록 뉴스 업데이트로 가족을 계속 업데이트했습니다. </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-05.jpg" alt=""></p><p>전염병이 있지만 여전히 식사가 제공됩니다.<br>승객이 많지 않고 작은 마법사가 가운데에 있고 양쪽에 아무도 없습니다.<br>그래서 잘못된 봉우리가 먹을 때까지 기다리지 않았고, 간식을받은 후 먹을 때까지 기다릴 수 없었습니다. </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-04.jpg" alt=""></p><p>창가 왼쪽에있는 언니가 꽉 싸서 여행 내내 먹거나 마시거나 화장실에 가지 않았다.<br>또한 좋습니다 </p><h2 id="경질-핵산-검출"><a href="#경질-핵산-검출" class="headerlink" title="경질 핵산 검출"></a>경질 핵산 검출</h2><p>오후 21시 30 분 </p><p>하차 전 QR 코드 확인<br>그런 다음 핵산 검사를 위해 다시 콧 구멍을 찔러<br>작은 마법사는 이미 경험이 있다고 말했습니다.<br>미스 언니가 중국이 더 엄격하다고 말했어 더 가벼워 지려고 </p><p>그런 다음 싱가포르보다 훨씬 더 깊게 찔러서 면봉을 몇 번 돌 렸습니다<br>꼬마 마법사는 끝났다고 생각하고 OK 제스처를 취했습니다.<br>뜻밖에도 몇 초 기다린 후 여동생이 몇 번 돌아 섰다<br>그런 다음 면봉을 부수고 시험관에 넣으십시오.<br>작은 마법사가 말을하려고했고, 여동생은 면봉을 하나 더 꺼 냈습니다.<br>오른쪽 콧 구멍을 시계 방향으로 향하고, 정지, 시계 반대 방향으로 똑같이하십시오 </p><p>작은 마법사는 눈물을 참으며 고맙다고 말했습니다 .🙏<br>결국 밤 늦게 다들 열심히 일해 </p><h2 id="기입"><a href="#기입" class="headerlink" title="기입"></a>기입</h2><p>오후 22:10 </p><p>입국 양식, 여권 확인 </p><p>국경에있는 동생은 작은 마법사의 비자를 넘겨서 장을 바꿨습니다.<br>그러면 자기가 없어 질 수 있으므로 ID 카드를 여권과 함께 넣지 말 것을 알려드립니다. </p><p>오후 22:20 </p><p>보안 검색 중 트롤리를 잊지 마세요 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-07.jpg" alt=""></div></div></div><p>저녁 22:30 </p><p>상하이 현지 및 해외 전환 및 격리 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-08.jpg" alt=""></div></div></div><h2 id="악몽"><a href="#악몽" class="headerlink" title="악몽"></a>악몽</h2><p>이것은 전체 여행의 악몽입니다<br>오늘은 항공편이 너무 많아서 버스가 고립되어 있습니다 🚌 준비가 부족합니다<br>긴 기다림 시작 ⌛️ </p><p>오전 00:40<br>여권 등록 </p><p>기다려 봐, 상하이는 늦은 밤 추워<br>다행히도 떠나기 전에 싱가포르 국립 대학교의 친구가 따뜻한 장비 세트를 구입하는 것을 도왔습니다.<br>작은 마법사는 따뜻한 옷을 입고 일어 서서 잠들었습니다. </p><p>오전 2:33<br>잠깐, 버스에 타면 직원이 여권이 호텔에서 반환된다는 것을 알려줍니다. </p><p>고속으로 차 안에서 흔들리고 흔들어<br>히터로 잠 들었다<br>초고속 차에서 내리고 멈춰서 깨어나서 밤늦게까지 기다려야하는 빨간불 1 만개라는 걸 알았습니다 </p><p>멈춰서 고생 해 </p><p>격리 호텔은 무작위로 배정되기 때문에 좋은 비싼 호텔은 저렴합니다.<br>하지만 이번에는 작은 마법사가 더 이상 돈을 절약 할 수 없습니다. </p><p>하나님, 더 나은 호텔을 지정 해주세요 🏨 </p><h2 id="국제-스파"><a href="#국제-스파" class="headerlink" title="국제 스파"></a>국제 스파</h2><p>오전 4:50 </p><p>드디어 격리 호텔에 도착<br>작은 마법사가 고개를 들어 고층 건물 인 것을 보았습니다. 직관적으로이 호텔은 좋습니다. </p><p>지도를 열었 더니 별 다섯 개라는 걸 알았습니다<br>상하이의 국제 스파 </p><p>비밀리에 행복<br>극 꼬리 없음 </p><p>하지만 거위는 여전히 내릴 수 없어<br>체크인을 위해 처음 몇 대의 버스를 기다려야합니다. </p><p>오전 5:50 </p><p>드디어 하차<br>여권 ID 등록 </p><ul><li>호텔 350 하루에 Alipay, WeChat, UnionPay 및 기타 방법을 사용하여 송금 할 수 있습니다. </li><li>하루에 세 끼 식사를 100 일하지만 호텔 케이터링이 아닌 아웃소싱 도시락 </li><li>테이크 아웃은 직접 주문할 수 있으며 매일 12시와 6시에 음식을 배달 할 수 있습니다. </li><li>택배는 우편 만받을 수 있지만 우편물은받을 수 없습니다. </li><li>하루에 두 번 체온 측정 </li><li>쓰레기 봉투는 봉인되어 문 밖에 배치되며 전신 생화학 슈트를 입은 직원은 정기적으로 청소합니다. </li></ul><h2 id="체크인"><a href="#체크인" class="headerlink" title="체크인"></a>체크인</h2><p>오전 6:10 </p><p>그런 다음 작은 마법사는 14 일 격리 생활을 시작했습니다.<br>엄마는 작은 마법사가 나가지 못하면 지루 할까 봐<br>하지만이 작은 마법사는 원래 집이었는데 이제는 법에 따라 사람을 만날 필요가없고 매우 행복합니다<br>게다가 싱가포르에 처음 갔을 때 묵었던 M 호텔 인 것 같아요 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-12.jpg" alt=""></div></div></div><h2 id="14-일-격리"><a href="#14-일-격리" class="headerlink" title="14 일 격리"></a>14 일 격리</h2><p>물론 격리 중에는 가볍게 받아 들일 수 없습니다<br>같은 나라에서 온 관광객들과 이중 음 증명서로 비교<br>고립 된 호텔에서 여러 나라에서 온 사람들을 만나게됩니다. </p><ul><li>예를 들어, 12 월 20 일 <a href="https://www.zaobao.com.sg/znews/singapore/story20201220-1110087">13 명이 격리 및 관상 동맥 질환 확인</a> </li><li>격리 종료 후 16 일에 병에 걸린 사람도 14 명 </li><li>베이징 14 + 7 의료 관찰 </li><li>영국 코로나 바이러스의 새로운 변종 감염률 70 % 증가 </li><li>… </li></ul><p>따라서 한편으로는 창문 🪟 환기를 열어 공기 순환을 보장하고 바이러스 농도를 줄입니다.<br>반면에 손을 자주 씻고 🧽 눈과 코를 부드럽게하지 마세요 👀👃 솔직히 마스크를 쓰세요 😷 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;새로운 박물관의 글로벌 전염병 상황은 2020 년 말에 개선되지 않습니다&lt;br&gt;그리고 겨울이 도래함에 따라 점차적으로 또 다른 발병의 징후가 있습니다.&lt;br&gt;하지만 최근에 작은 마법사는 집에 가야합니다&lt;br&gt;전 세계적으로 다양한 백신이 접종되었지만 &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;회사 소개&lt;/th&gt;
&lt;th&gt;종류&lt;/th&gt;
&lt;th&gt;투여 량&lt;/th&gt;
&lt;th&gt;효능&lt;/th&gt;
&lt;th&gt;보관 ℃&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;BioNTech / Pfizer&lt;/td&gt;
&lt;td&gt;mRNA&lt;/td&gt;
&lt;td&gt;x2&lt;/td&gt;
&lt;td&gt;95 %&lt;/td&gt;
&lt;td&gt;-70&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;현대&lt;/td&gt;
&lt;td&gt;mRNA&lt;/td&gt;
&lt;td&gt;x2&lt;/td&gt;
&lt;td&gt;95 %&lt;/td&gt;
&lt;td&gt;-20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Oxford / AstraZeneca&lt;/td&gt;
&lt;td&gt;아데노 바이러스 벡터&lt;/td&gt;
&lt;td&gt;x2&lt;/td&gt;
&lt;td&gt;62-90 %&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;하지만 집으로 돌아가려면 여전히 14 일의 격리가 필요합니다. &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Covid" scheme="https://leihao0.github.io/ko/tags/covid/"/>
    
  </entry>
  
  <entry>
    <title>미국 주식으로 계좌를 개설하는 방법</title>
    <link href="https://leihao0.github.io/ko/how-to-buy-us-stocks/"/>
    <id>https://leihao0.github.io/ko/how-to-buy-us-stocks/</id>
    <published>2020-11-05T15:00:03.000Z</published>
    <updated>2020-12-20T23:53:08.366Z</updated>
    
    <content type="html"><![CDATA[<p>참조 코드<code>0CM1QE</code> </p><p>이틀간의 미국 선거<br>부추처럼 시차 때문에 나누지 마세요.<br>일어나서 고기를 잘라<br>이제 🚀 일반적으로 상승하는 것을 보지만 감히 시장에 당황하지 않습니다. </p><p>그 당시 계좌 개설의 슬픈 여정을 공유하십시오. </p><a id="more"></a><h2 id="미국-중개"><a href="#미국-중개" class="headerlink" title="미국 중개"></a>미국 중개</h2><p>많은 미국 중개 회사는 수수료가 면제되므로 먼저 살펴보십시오. </p><ul><li>Robinhood (더 나은 사용자 인터페이스) </li><li>TD Ameritrade (구 브랜드) </li><li>Firstrade (중국 고객 서비스) </li></ul><p>Robinhood 초대를 받으면 양 당사자가 주식을 보낼 수 있기 때문에 미국에있는 친구에게 코드를 요청한 다음 공식 웹 사이트로 이동하여 미국 내에서만 제출할 수 있음을 알았습니다.<br>TD Ameritrade에는 SG와 웹 사이트가 있지만 정보를 제출 한 후 마지막 단계에서 멈춰서는 방법을 모르겠습니다. 과거에 이메일을 검토 한 사람이 없습니다.<br>Firstrade, 미국인이 아닌 사람들은 자동으로 면세 양식 제출을 도왔습니다. 정보를 제출 한 후, 영업일 기준 며칠 후에 계좌가 마침내 개설되었으며 입금은 ACH, Check, Wire Trannsfer로만 가능함을 확인했습니다. </p><p>ACH와 수표는 모두 내 미국 은행 계좌로 돈을 이체해야합니다.<br>Wire Trannsfer에는 또 다른 수수료가 있습니다. </p><h2 id="싱가포르-중개"><a href="#싱가포르-중개" class="headerlink" title="싱가포르 중개"></a>싱가포르 중개</h2><p>그런 다음 싱가포르를 조사한 결과이 사람들이 실제로 UOB 또는 DBS Bank의 거래 계좌로 갔다는 것을 알았습니다.<br>취급 수수료가 너무 비싸고 가치가 없다고 들었습니다. </p><h2 id="국내-중개"><a href="#국내-중개" class="headerlink" title="국내 중개"></a>국내 중개</h2><p>좋아, 돌아갔다가 돌아 왔어 … </p><ul><li>샤오 미의 호랑이 </li><li>Tencent의 Futu </li><li>스노볼 </li></ul><p>I ‘m happy 🐯 싱가포르 계좌 개설 지원, 예 </p><ul><li>미국 주식, 홍콩 주식, 싱가포르 주식, 호주 주식 … </li><li>사전 시장, 선물 지원 </li><li>지렛대 </li></ul><p>원래 여권과 기타 정보를 업로드 할 계획이었는데, 어쨌든 전에 준비했습니다<br>Singpass 인증이 지원되는 것으로 밝혀졌고, 클릭하고 앞뒤로 점프했고 인증되었습니다 … </p><p>신은 그것이 너무 쉽다는 것을 알고 있었다<br>작년에 열었나요? </p><p>그렇지 않으면 이미 여러 번<br>아니면 이미 지붕에서 뛰어 내렸어 </p><h2 id="거래-수수료"><a href="#거래-수수료" class="headerlink" title="거래 수수료"></a>거래 수수료</h2><p>난 옵션을 사지 않기 때문에<br>일반 거래에는 세 가지 추가 비용이 있습니다. </p><ul><li>2 \ $ 구매 </li><li>총 주식의 0.1 % </li><li>2 \ $ 매도 </li></ul><p>그러니 속옷을 다 동행해도 🐯 배가 </p><h2 id="참조-코드"><a href="#참조-코드" class="headerlink" title="참조 코드"></a>참조 코드</h2><p>내 코드<code>0CM1QE</code>를 사용할 수 있습니다. </p><p>현재 활동은 양쪽 모두 인 것 같아요 </p><ul><li>무료 5 커미션 </li><li>30SGD를 얻으려면 2000SGD를 충전하고 100SGD를 얻으려면 3W를 충전하십시오. </li></ul><p>글쎄, 전혀 언급하려는 욕망이 없습니다.<br>알리의 주식을 나눠 주곤했던 기억이나요. 지금 너무 높을까요? </p><h2 id="성적-증명서"><a href="#성적-증명서" class="headerlink" title="성적 증명서"></a>성적 증명서</h2><p>지난 이틀 동안의 글로벌 주식 시장 붐을 살펴 보겠습니다. 밤에 잠들 수 없을 까봐 두려웠 고 치열한 영업 끝에 성적표를 받았습니다. </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/how-to-buy-us-stocks.jpeg" alt=""></p><p>그래서 당신은 무엇을 기다리고 있습니까, 가입 </p><p>옥상에서 기다리고 있어요 <del>~</del> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;참조 코드&lt;code&gt;0CM1QE&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;이틀간의 미국 선거&lt;br&gt;부추처럼 시차 때문에 나누지 마세요.&lt;br&gt;일어나서 고기를 잘라&lt;br&gt;이제 🚀 일반적으로 상승하는 것을 보지만 감히 시장에 당황하지 않습니다. &lt;/p&gt;
&lt;p&gt;그 당시 계좌 개설의 슬픈 여정을 공유하십시오. &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Stock" scheme="https://leihao0.github.io/ko/tags/stock/"/>
    
      <category term="Broker" scheme="https://leihao0.github.io/ko/tags/broker/"/>
    
  </entry>
  
  <entry>
    <title>파이썬의 목적은 무엇입니까</title>
    <link href="https://leihao0.github.io/ko/What-is-Python-Used-for/"/>
    <id>https://leihao0.github.io/ko/What-is-Python-Used-for/</id>
    <published>2020-09-15T03:17:56.000Z</published>
    <updated>2020-12-20T23:53:08.365Z</updated>
    
    <content type="html"><![CDATA[<h1 id="실제-세계에서-Python을-사용하는-방법"><a href="#실제-세계에서-Python을-사용하는-방법" class="headerlink" title="실제 세계에서 Python을 사용하는 방법"></a>실제 세계에서 Python을 사용하는 방법</h1><p>** Python **은 세계에서 가장 인기있는 코딩 언어 중 하나입니다. </p><p>대부분의 미국 최고의 대학은 입문 코딩 과정에서도 Python을 사용합니다. 학생들에게 Python을 사용하여 간단한 게임을 만들고, 웹 페이지에서 정보를 구문 분석하고, 언어 처리를 수행하도록 가르칩니다! </p><p>그럼에도 불구하고 많은 학부모와 학생들이 Python이 실제로 회사 또는 다양한 분야에서 사용되는 노하우를 원합니까? </p><p>** Python *<em>이 어떻게 오늘날의 선도적 인 산업을 주도하고 *</em> 많은 컴퓨터 과학 분야에서 중요한 역할을 수행하는지 알아 보려면 계속 읽어보세요. ** </p><a id="more"></a><h2 id="왜-파이썬을-선택합니까"><a href="#왜-파이썬을-선택합니까" class="headerlink" title="왜 파이썬을 선택합니까?"></a>왜 파이썬을 선택합니까?</h2><p>[Python](<a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utium_m_source=gout_mxTc?utm_source=gout_mxTc?utm_source=gout_mxTc?utm_source=gout_mxTc">https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utium_m_source=gout_mxTc?utm_source=gout_mxTc?utm_source=gout_mxTc?utm_source=gout_mxTc</a>? ** 및 ** 유니버설 코딩 언어 **-이해하기 쉽고 다양한 문제를 해결하는 데 사용할 수 있습니다! </p><p>간단한 구문, 높은 가독성 및 전체 운영 체제에서 사용되는 Python은 다양한 응용 프로그램에서 학습하고 사용할 수있는 귀중한 언어입니다. </p><p>! <a href="https://images.ctfassets.net/mrop88jh71hl/70P7f6p7J1Bk4VY8GDzm95/58d544a1044609e94a001523d9583f22/python-code-application.jpeg">화면의 Python 코드. </a> </p><p>엔지니어 화면의 Python 코드 예제. </p><p>따라서 Python이 오늘날의 취업 시장뿐만 아니라 우리가 매일 사용하는 일반적인 기술에서도 널리 사용되고 있다는 것은 놀라운 일이 아닙니다. </p><p>** Python 프로그래밍 *<em>은 거의 모든 산업에서 사용할 수있는 기술이며 그 역할은 소프트웨어 개발을 훨씬 뛰어 넘습니다. *</em> 금융, 의료, ** 및 ** 보험 *<em>과 같은 산업에서 *</em> 항공 우주 *<em>와 같은 산업에서 *</em> 엔터테인먼트 *<em>-[Python 기반 기술](<a href="https://appdevelopermagazine.com/ten">https://appdevelopermagazine.com/ten</a> -industries-using-python-programming /)은 *</em> 혁신과 새로운 솔루션 **을 촉진하는 것입니다. </p><p>“<a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjut_mx9ACqjMEHBXfCjut_BXfCjut_mx9ACqjMEHBXfCjut">What is Python 101”가이드</a>, Python 및 ** 기술 *<em>, *</em> 금융 ** 및 ** 생명 공학 **과 같이 Python에서 사용되는 일부 영역을 소개했습니다. 그러나이 기사에서는 특히 다음 영역에서 Python의 광범위한 사용에 대해 더 깊이 탐구 할 것입니다. </p><ul><li>** 웹 개발 ** </li><li><strong>데이터 과학</strong> </li><li>** 머신 러닝 ** </li><li>** 인공 지능 ** </li></ul><h2 id="Python-애플리케이션"><a href="#Python-애플리케이션" class="headerlink" title="Python 애플리케이션"></a>Python 애플리케이션</h2><h3 id="웹-개발"><a href="#웹-개발" class="headerlink" title="웹 개발"></a>웹 개발</h3><p>HTML, CSS 및 자바 스크립트가 ** 웹 개발 **을위한 일반적인 도구 일 수 있지만 Python도 좋은 선택입니다. </p><p>[웹 개발](<a href="https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before">https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before</a> -getting-started /)는 정적 일반 텍스트 페이지에서 동적 전자 상거래 웹 사이트 및 대화 형 인터넷 응용 프로그램에 이르는 인터넷상의 웹 사이트 구성을 나타냅니다. </p><p>코딩은 웹 개발에서 사이트 기능을 구축하고 사용자 경험을 최적화하며 정보가 적절하게 구성되도록하는 데 필수적입니다. Python의 ** Django ** 및 ** Flask **와 같은 웹 프레임 워크는 웹 사이트 개발을위한 인기있는 선택이되었습니다. </p><p>! <a href="https://images.ctfassets.net/mrop88jh71hl/6prH9NRKgybllrNcEqeCBy/c7fbc7b6960e8f94efb9eaa0b70a97d2/python-web-development-applications.png">Python은 웹 페이지를 만드는 데 사용됩니다. </a> </p><p>Python은 백엔드 웹 개발을위한 탁월한 선택이며 현재 많은 회사에서 사용됩니다. </p><p>이러한 오픈 소스 프레임 워크를 사용하면 Python이 많은 양의 데이터를 처리하고 작업을 자동화 할 수 있기 때문에 사용자가 웹 애플리케이션을보다 효율적으로 구축 할 수 있습니다. 실제로 ** Instagram *<em>, *</em> Pinterest ** 및 ** Google **은 모두 [백엔드 웹 개발](<a href="https://learn.onemonth.com/10-famous-websites-built">https://learn.onemonth.com/10-famous-websites-built</a> -using-python /)은 Python을 사용합니다. </p><h3 id="데이터-과학"><a href="#데이터-과학" class="headerlink" title="데이터 과학"></a>데이터 과학</h3><p>[데이터 과학](<a href="https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_reach=">https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_reach=</a> [campaign] ** 데이터 분석 및 ](<a href="https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_outm_reach_campaign=Python">https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_outm_reach_campaign=Python</a> 또는 기본 언어 선택) </p><p>** 빅 데이터 ** 시대에 우리는 내비게이션 (GPS), 온라인 쇼핑, 에너지 사용, 스마트 워치와 같은 웨어러블 기기를 통해 일상 생활의 데이터와 자주 접촉합니다. </p><p>평균적으로 각 가족은 약 [11 개의 기기](<a href="https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should">https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should</a> -push-that-even-higher-1203431225 /) 그리고이 숫자는 앞으로 증가 할 수 있습니다! 장치가 너무 많아서 회사는 서비스를 제공하기 위해 많은 양의 데이터를 처리해야합니다. </p><p>! <a href="https://images.ctfassets.net/mrop88jh71hl/3XS43f9pqDhRuft9GdnvZq/2d0513d9f0079c572923a49cd214add5/python-data-analysis-applications.png">데이터 분석을위한 Python의 프로세스 설명</a> </p><p>Python 기반 도구는 많은 양의 데이터를 시각화, 처리 및 분석하는 데 자주 사용됩니다. </p><p>** 데이터 과학 *<em>에는 데이터 처리 및 추세 추론이 포함됩니다 *</em>-Python *<em>은 *</em> scipy *<em>, *</em> numpy ** 및 ** pandas **와 같은 밀집된 패키지를 포함하기 때문에이 분야에서 매우 유용합니다. </p><p>또한 ** matplotlib ** 소프트웨어 패키지를 사용하여 데이터 시각화를 구축 할 수 있습니다. 따라서 Python은 많은 양의 데이터와 모델링을 포함하는 ** 생물 정보학 **과 같은 분야에서 인기있는 선택입니다. </p><p>이러한 Python 기반 도구는 사용의 용이성과 확장 성으로 인해 인기를 얻었습니다. 예를 들어 <a href="https://www.edureka.co/blog/how-netflix-uses-python/#hownetflixusespython">Netflix</a>는 수치 계산에 ** scipy ** 및 ** numpy **를 사용하여 교차 플랫폼 사용자를 관리합니다. 흐름. </p><p>▶ ** 시도 : ** [고급 데이터 과학 및 Python 자습서](<a href="https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMT9Cutj_HBXf">https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMT9Cutj_HBXf</a> = gf &amp; utm_medium = what_is_python_used_for &amp; utm_campaign = outreach) </p><h3 id="기계-학습"><a href="#기계-학습" class="headerlink" title="기계 학습"></a>기계 학습</h3><p>많은 양의 데이터를 분석하여 ** 머신 러닝 ** [알고리즘](<a href="https://junilearning.com/blog/guide/what-are-algorithms/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTium을">https://junilearning.com/blog/guide/what-are-algorithms/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTium을</a> 찾을 수 있습니까? 패턴을 만들고 미래의 행동에 적용하십시오. </p><p>제품에서 머신 러닝을 가장 잘 사용하는 것은 추천 시스템입니다. ** Netflix *<em>, *</em> Spotify *<em>, *</em> Youtube **와 같은 회사는 사용자 행동을 수집하여 재생 목록과 동영상을 예측하고 제안합니다. </p><p>** Scikit-learn ** 및 ** tensorflow **는 대규모 데이터 세트의 분류, 클러스터링 및 회귀를위한 알고리즘에 사용할 수있는 Python 라이브러리입니다. 이러한 라이브러리의 고성능 및 광범위한 기능은 모든 기계 학습 탐색에 필수적입니다. </p><p>▶ ** 자세히 알아보기 : ** [어린이 알고리즘의 중요성](<a href="https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTcium">https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTcium</a> what_is_python_used_for &amp; utm_campaign = outreach) </p><h3 id="인공-지능"><a href="#인공-지능" class="headerlink" title="인공 지능"></a>인공 지능</h3><p>기계 학습은 실제로 ** 인공 지능 **의 한 측면 일뿐입니다. AI는 기계의 지능과 인식 또는 의사 결정과 같은 인간 중심의 작업을 수행하는 컴퓨터 시스템의 개발을 말합니다. </p><p>인공 지능의 뛰어난 예는 ** Uber ** 및 ** Lyft **와 같은 승차 요청 애플리케이션입니다. </p><p>! <a href="https://images.ctfassets.net/mrop88jh71hl/dlvfPv6HAIV4YaMb1TRCl/88739612a93476c94733255a94a567d7/python-artificial-intelligence-in-ride-sharing.png">카풀 링 애플리케이션에 사용되는 인공 지능의 Python 그림. </a> </p><p>Python은 Lyft 또는 Uber와 같은 애플리케이션의 인공 지능에 사용됩니다. 그런 다음 AI 시스템은 사용자 요구 사항 및 예상 도착 시간과 같은 것을 예측할 수 있습니다. </p><p>Uber는 AI를 사용하여 ** 사용자 요구 사항을 예측 *<em>하고 *</em> 예상 도착 시간 ** (및 기타 기능)을 사용하며 대부분은 <a href="https://eng.uber.com/uber-ai-blog">Python</a>을 통해 이루어집니다. -2019 /) 완성. </p><p>앞서 언급 한 Python 라이브러리 중 일부 외에도 ** keras ** 및 ** pytorch **와 같은 다른 라이브러리를 사용하여 AI 함수 (예 : 예측 모델 및 신경망)를 만들 수도 있습니다. </p><h2 id="파이썬은-어디에나-있습니다"><a href="#파이썬은-어디에나-있습니다" class="headerlink" title="파이썬은 어디에나 있습니다!"></a>파이썬은 어디에나 있습니다!</h2><p>인기있는 프로그래밍 언어 중에서 Python은 애플리케이션에서 가장 다양한 언어 중 하나입니다. 또한 당사 및 오늘날의 선도 기업과 깊이 통합되었습니다. </p><p>Python과 관련된 직업에는 ** 소프트웨어 엔지니어, 웹 개발자, 데이터 과학자, 제품 관리자, 비즈니스 분석가 ** 등이 포함됩니다. 산업에 관계없이이 기술 시대의 기업은 데이터 기반 의사 결정에 의존하며 Python은이를위한 완벽한 도구입니다. </p><p>귀하 또는 귀하의 자녀가 위에 나열된 분야 또는 역할에 관심이 있다면 Python을 배우는 것이 좋은 선택입니다! </p><h2 id="파이썬-프로그래머가되고-싶습니까"><a href="#파이썬-프로그래머가되고-싶습니까" class="headerlink" title="파이썬 프로그래머가되고 싶습니까?"></a>파이썬 프로그래머가되고 싶습니까?</h2><p>Python의 가장 큰 장점 중 하나는 새로운 코더가 기본 개념을 배우고 프로그래밍에 익숙해 질 수 있도록 돕는 것입니다! 모든 연령대의 새로운 프로그래머를 위해 Python을 광범위하게 학습 할 수있는 많은 리소스도 있습니다. </p><h3 id="어린이를위한-Python-클래스"><a href="#어린이를위한-Python-클래스" class="headerlink" title="어린이를위한 Python 클래스"></a>어린이를위한 Python 클래스</h3><p>! <a href="https://images.ctfassets.net/mrop88jh71hl/2dK37wFC5SF8HNKm4nGmqr/c256e7002d196ea54e4c10817a68f8a7/learning-python-with-juni.png">Python을 사용하는 Juni 강사. </a> </p><p>강사 Juni는 어린 학생에게 기본적인 Python을 가르칩니다. </p><p>Juni Learning에서는 숙련 된 코딩 교사의 도움으로 어린 코더 <a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACutjMEHBXfCjJMxT=c">Python 교육</a>를 가르칩니다. gf &amp; utm_medium = what_is_python_used_for &amp; utm_campaign = outreach). ** 코딩 기반 강화부터 알고리즘 구축 및 데이터 세트 분석 **까지이 과정은 Python의 다양한 애플리케이션을 탐색하고 학생들에게 코딩 프로젝트를 구축하는 방법을 가르칩니다. </p><p>[: // 캠페인 HTTPS] [<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc</a> 도달에 우리의 [코딩 과정 (<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_medium=ed_is=_python_us">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_medium=ed_is=_python_us</a> 및 자세한 내용에 대한 자세한 읽어? join.junilearning.com/) 입학 팀과 함께 자녀의 코딩 여정에 가장 적합한 과정을 알아보십시오. </p><hr><p><em>This</em> <a href="https://junilearning.com/blog/guide/what-is-python-used-for-major-industries/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfwhat_utm_campaign_outdium_forCjJ_campaign_outdium_forCjJ_campaign_outdium_forCjJMxTc?utm_source="><em>article</em></a> _junilearning.com_](<a href="https://junilearning.com/?utm_source=gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach">https://junilearning.com/?utm_source=gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach</a>). </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;실제-세계에서-Python을-사용하는-방법&quot;&gt;&lt;a href=&quot;#실제-세계에서-Python을-사용하는-방법&quot; class=&quot;headerlink&quot; title=&quot;실제 세계에서 Python을 사용하는 방법&quot;&gt;&lt;/a&gt;실제 세계에서 Python을 사용하는 방법&lt;/h1&gt;&lt;p&gt;** Python **은 세계에서 가장 인기있는 코딩 언어 중 하나입니다. &lt;/p&gt;
&lt;p&gt;대부분의 미국 최고의 대학은 입문 코딩 과정에서도 Python을 사용합니다. 학생들에게 Python을 사용하여 간단한 게임을 만들고, 웹 페이지에서 정보를 구문 분석하고, 언어 처리를 수행하도록 가르칩니다! &lt;/p&gt;
&lt;p&gt;그럼에도 불구하고 많은 학부모와 학생들이 Python이 실제로 회사 또는 다양한 분야에서 사용되는 노하우를 원합니까? &lt;/p&gt;
&lt;p&gt;** Python *&lt;em&gt;이 어떻게 오늘날의 선도적 인 산업을 주도하고 *&lt;/em&gt; 많은 컴퓨터 과학 분야에서 중요한 역할을 수행하는지 알아 보려면 계속 읽어보세요. ** &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://leihao0.github.io/ko/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>MacBook 먼지와 팬을 청소하는 방법</title>
    <link href="https://leihao0.github.io/ko/How-to-Clean-MacBook-Dust-Fan/"/>
    <id>https://leihao0.github.io/ko/How-to-Clean-MacBook-Dust-Fan/</id>
    <published>2020-09-10T08:46:44.000Z</published>
    <updated>2020-12-20T23:53:08.365Z</updated>
    
    <content type="html"><![CDATA[<h2 id="kernel-task가-Mac-CPU를-많이-사용하는-경우"><a href="#kernel-task가-Mac-CPU를-많이-사용하는-경우" class="headerlink" title="kernel_task가 Mac CPU를 많이 사용하는 경우"></a>kernel_task가 Mac CPU를 많이 사용하는 경우</h2><p>나는<code>kernel_task</code>가 매 턴마다 100 % 멈출 것이라는 것을 알아 챘지만, 그것은<code>시스템</code>프로세스이고, 아무것도 없다 </p><p>根据  的 文档 <a href="https://support.apple.com/en-us/HT207359">kernel_task가 Mac CPU를 많이 사용하는 경우</a> </p><blockquote><p>즉, kernel_task는 Mac이 뜨거워지지 않더라도 ** CPU가 너무 뜨거워지는 ** 조건에 응답합니다. 자체적으로 이러한 조건을 유발하지는 않습니다. CPU 온도가 낮아지면 kernel_task는 자동으로 활동을 줄입니다. </p></blockquote><p>CPU가 너무 뜨겁기 때문입니다 🔥 뜨겁지 않다고 생각하더라도 🥶 … </p><p>또한<code>kernel_task</code>는 범인이 아닙니다 .CPU가 뜨겁지 않으면 점유율이 자동으로 내려갑니다. </p><a id="more"></a><p>왼쪽에 있으면 안된다는 걸 알았어요 👈 충전 🔋, 믿습니다 </p><h3 id="왼쪽에서-MacBook-Pro를-충전하면-안되는-이유-https-www-digitaltrends-com-computing-why-you-shouldnt-charge-macbook-pro-left-side-text-20charging-20the-20MacBook-20Pro-use-20the-20right-2Dhand-20ports"><a href="#왼쪽에서-MacBook-Pro를-충전하면-안되는-이유-https-www-digitaltrends-com-computing-why-you-shouldnt-charge-macbook-pro-left-side-text-20charging-20the-20MacBook-20Pro-use-20the-20right-2Dhand-20ports" class="headerlink" title="[왼쪽에서 MacBook Pro를 충전하면 안되는 이유](https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text = % 20charging % 20the % 20MacBook % 20Pro, use % 20the % 20right % 2Dhand % 20ports.)"></a>[왼쪽에서 MacBook Pro를 충전하면 안되는 이유](<a href="https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text">https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text</a> = % 20charging % 20the % 20MacBook % 20Pro, use % 20the % 20right % 2Dhand % 20ports.)</h3><blockquote><p>MacBook Pro를 충전하고 주변 장치를 왼쪽 포트에 연결하는 동안 기기의 포트가 뜨거워 질 수 있습니다. 어떤 이유로 이로 인해 kernel_task가 약간 혼란스럽고 전체 시스템 리소스를 사용하게 될 수 있습니다. </p></blockquote><p>하지만 오른쪽으로 전환 👉 며칠 후 🔋 충전 🔋 잠시 후 100 % </p><p>절망… </p><p>청소가 필요하기 때문인지 갑자기 궁금해 </p><h2 id="MacBook-먼지-및-팬-청소-방법"><a href="#MacBook-먼지-및-팬-청소-방법" class="headerlink" title="MacBook 먼지 및 팬 청소 방법"></a>MacBook 먼지 및 팬 청소 방법</h2><p>직접 분해 할 수 있다는 사실을 Google이 알고있었습니다.<br>Mine은 보증 된 16 년 노트북입니다.<br>不然 根据 <a href="https://www.apple.com/legal/warranty/products/embedded-mac-warranty-rest-of-apac-english.html">Mac 보증</a><br>직접 해체하면 잃어 버려 </p><blockquote><p>이 보증은 적용되지 않습니다. </p><p>-(c) Apple 제품의 사양을 충족하지 않는 타사 구성 요소 또는 제품을 사용하여 발생한 손상 </p></blockquote><h3 id="도구-🔧"><a href="#도구-🔧" class="headerlink" title="도구 🔧"></a>도구 🔧</h3><ul><li>Penta Screw 🔩 칼 </li><li>그을음 공, 작은 브러시 </li><li>버려진 신용 카드 💳 </li></ul><h3 id="단계"><a href="#단계" class="headerlink" title="단계"></a>단계</h3><ol><li>돌려서 빼다 </li><li>측면에 작은 슬릿을 만드십시오 </li><li>사용하지 않은 신용 카드 💳를 삽입하고 파란색 화살표 방향으로 미십시오. <ol><li>클릭이 들립니다 </li><li>그림 2에서 가운데 ​​수평선에 네 개의 버클이 있음을 알 수 있습니다. </li><li>무언가를 부수는 대신 (나는 그렇게 희망한다 😓) </li></ol></li><li>오른쪽 💳을 대칭으로 사용하여 슬라이드 </li><li>그런 다음 빨간색 화살표를 눌러 수평으로 당깁니다. <ol><li>그림 2 팬 위에 카드 슬롯이 보입니다. </li><li>좌우로 힘을 주어 좌우로 ↔️ 약간 대칭으로 당기세요 </li></ol></li><li>뒷 표지가 열립니다 </li></ol><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-3.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-0.jpg" alt=""></div></div></div><p>정말 더러운 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-1.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-2.jpg" alt=""></div></div></div><p>먼지를 치운 후<code>kernel_task</code>가 많이 나타나지 않고 💻도 부활<br>나는 즉시 16 년 동안 노트북이 💻 5 년 동안 사용될 수 있다고 느낀다 👨‍💻 </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;kernel-task가-Mac-CPU를-많이-사용하는-경우&quot;&gt;&lt;a href=&quot;#kernel-task가-Mac-CPU를-많이-사용하는-경우&quot; class=&quot;headerlink&quot; title=&quot;kernel_task가 Mac CPU를 많이 사용하는 경우&quot;&gt;&lt;/a&gt;kernel_task가 Mac CPU를 많이 사용하는 경우&lt;/h2&gt;&lt;p&gt;나는&lt;code&gt;kernel_task&lt;/code&gt;가 매 턴마다 100 % 멈출 것이라는 것을 알아 챘지만, 그것은&lt;code&gt;시스템&lt;/code&gt;프로세스이고, 아무것도 없다 &lt;/p&gt;
&lt;p&gt;根据  的 文档 &lt;a href=&quot;https://support.apple.com/en-us/HT207359&quot;&gt;kernel_task가 Mac CPU를 많이 사용하는 경우&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;즉, kernel_task는 Mac이 뜨거워지지 않더라도 ** CPU가 너무 뜨거워지는 ** 조건에 응답합니다. 자체적으로 이러한 조건을 유발하지는 않습니다. CPU 온도가 낮아지면 kernel_task는 자동으로 활동을 줄입니다. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;CPU가 너무 뜨겁기 때문입니다 🔥 뜨겁지 않다고 생각하더라도 🥶 … &lt;/p&gt;
&lt;p&gt;또한&lt;code&gt;kernel_task&lt;/code&gt;는 범인이 아닙니다 .CPU가 뜨겁지 않으면 점유율이 자동으로 내려갑니다. &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Macbook" scheme="https://leihao0.github.io/ko/tags/macbook/"/>
    
  </entry>
  
  <entry>
    <title>어린이를위한 Python 대 Java</title>
    <link href="https://leihao0.github.io/ko/Python-vs-Java-for-Kids/"/>
    <id>https://leihao0.github.io/ko/Python-vs-Java-for-Kids/</id>
    <published>2020-08-12T05:33:04.000Z</published>
    <updated>2020-12-20T23:53:08.365Z</updated>
    
    <content type="html"><![CDATA[<p><em>This</em> <a href="https://junilearning.com/blog/guide/python-vs-java/"><em>article</em></a> _ 원래 등장 _ <a href="https://junilearning.com/"><em>junilearning.com</em></a> </p><h1 id="Python-및-Java-사용-성능-학습"><a href="#Python-및-Java-사용-성능-학습" class="headerlink" title="Python 및 Java : 사용, 성능, 학습"></a>Python 및 Java : 사용, 성능, 학습</h1><p>컴퓨터 과학 분야에는 많은 프로그래밍 언어가 있으며 어느 누구도 다른 언어보다 우월하지 않습니다. 즉, ** 각 언어는 특정 문제를 해결하는 데 가장 적합합니다 *<em>. 사실 주어진 프로그래밍 프로젝트에 대해 일반적으로 선택할 수있는 가장 좋은 언어는 없습니다. 따라서 소프트웨어를 개발하거나 코드를 통해 흥미로운 문제를 해결하고자하는 학생들에게는 모든 프로그래밍 언어에 적용 할 수있는 *</em> 컴퓨터 과학에 대한 강력한 기반을 갖추는 것이 매우 중요합니다 **. </p><a id="more"></a><p>프로그래밍 언어는 작동 방식에서 특정 특성을 공유하는 경향이 있습니다 (예 : 메모리 사용 또는 객체 사용 강도). 학생들이 더 많은 언어에 노출되면 이러한 패턴을 보게 될 것입니다. 이 기사에서는 세계에서 가장 널리 사용되는 프로그래밍 언어 인 Python과 Java에 중점을 둡니다. 각 프로그래밍 언어의 성장률을 정확하게 측정하기는 어렵지만 ** 오늘날 업계에서 가장 많이 사용되는 두 가지 프로그래밍 언어 **입니다. </p><p>Python과 Java의 주요 차이점은 Python은 ** 동적 형식 *<em>이고 Java는 *</em> 정적 형식 *<em>이라는 것입니다. 간단히 말해서 Java는 코드에서 변수를 정의하고 사용하는 방법이 더 엄격하다는 것을 의미합니다. *</em> 그 결과 Java의 구문이 장황 해지는 경향이 있으며, 이것이 초보자가 Java보다 먼저 Python을 배우도록 권장하는 이유 중 하나입니다. ** 예를 들어<code>numbers</code>가 Python에서 0에서 9까지의 숫자를 포함하는 이름 변수를 만드는 방법입니다. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">numbers = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">numbers.append(i)</span><br></pre></td></tr></table></figure><p>Java에서 동일한 작업을 수행하는 방법은 다음과 같습니다. </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ArrayList numbers = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    numbers.add(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>또 다른 주요 차이점은 Java가 ** 컴파일 된 언어 *<em>이므로 일반적으로 Python보다 더 빠르게 프로그램을 실행한다는 것입니다. 이것은 컴파일러가 실제로 프로그램을 실행하기 전에 Java 코드를 기계 수준 코드로 변환한다는 것을 의미합니다. 반면 Python은 *</em> 해석 ** 언어이므로 컴파일 단계가 없습니다. </p><h2 id="사용법과-실용성"><a href="#사용법과-실용성" class="headerlink" title="사용법과 실용성"></a>사용법과 실용성</h2><p>역사적으로 Java는 오랜 역사 때문에 부분적으로 더 인기있는 언어가되었습니다. 그러나 Python은 빠르게 인기를 얻고 있습니다. <a href="https://octoverse.github.com/">Github의 10 월 현황 보고서</a>에 따르면 최근 가장 널리 사용되는 프로그래밍 언어로 Java를 능가했습니다. 2018 년 개발자 설문 조사에 따르면 ** Python은 이제 가장 빠르게 성장하는 컴퓨터 프로그래밍 언어 **입니다. </p><p>Python과 Java 모두 대규모 개발자 커뮤니티가 있으며 <a href="https://stackoverflow.com/">Stack Overflow</a> 웹 사이트에서 질문에 답변 할 수 있습니다. <a href="https://insights.stackoverflow.com/trends?tags=python%2Cjava">Stack Overflow Trends</a>에서 2017 년 Stack Overflow에서 Python이 질문 한 비율이 Java **를 초과하는 것을 확인할 수 있습니다. 글을 쓰는 시점에서 Stack Overflow의 질문 중 약 13 %가 Python으로 표시되고 약 8 %가 Java로 표시됩니다! </p><h2 id="웹-개발"><a href="#웹-개발" class="headerlink" title="웹 개발"></a>웹 개발</h2><p>** Python과 Java 모두 백엔드 웹 개발에 사용할 수 있습니다 **. 일반적으로 개발자는 Python 용 <a href="https://stackify.com/python-frameworks/">Django 및 Flask</a> 프레임 워크를 사용하고 자바 용으로는 <a href="https://spring.io/">Spring</a>을 사용합니다. Python은 코드의 가독성으로 유명합니다. 즉, Python 코드가 깨끗하고 읽기 쉽고 간결합니다. Python에는 또한 포괄적 인 모듈, 패키지 및 라이브러리가 많이 있습니다. 이러한 모듈, 패키지 및 라이브러리는 표준 라이브러리 외에도 Python 애호가 커뮤니티에서 개발합니다. 자바는 그 정도는 아니지만 비슷한 생태계를 가지고 있습니다. </p><h2 id="모바일-애플리케이션-개발"><a href="#모바일-애플리케이션-개발" class="headerlink" title="모바일 애플리케이션 개발"></a>모바일 애플리케이션 개발</h2><p>** Java *<em>는 Android 애플리케이션 및 게임을 빌드하는 데 사용되는 기본 언어이기 때문에 *</em> 자바가 모바일 애플리케이션 개발을 지배합니다 **. 위에서 언급 한 맞춤형 라이브러리를 통해 개발자는 운영 체제를 위해 특별히 구축 된 강력한 프레임 워크 및 개발 도구를 사용하여 Android 애플리케이션을 작성하도록 선택할 수 있습니다. 현재는 <a href="https://kivy.org/">Kivy</a>, <a href="https://beeware.org/">BeeWare 之</a>와 같은 도구를 사용하여 한 번만 코드를 작성하여 Windows, OS X, iOS 및 Android에 애플리케이션을 배포하지만 Python은 모바일 개발에 자주 사용되지 않습니다. </p><h2 id="기계-학습-및-빅-데이터"><a href="#기계-학습-및-빅-데이터" class="headerlink" title="기계 학습 및 빅 데이터"></a>기계 학습 및 빅 데이터</h2><p>반대로 머신 러닝과 <a href="https://junilearning.com/blog/coding-and-data-science">데이터 과학</a>에서는 Python이 가장 많이 사용되는 언어입니다. Python은 일반적으로 빅 데이터, 과학 컴퓨팅 및 인공 지능 (AI) 프로젝트에 사용됩니다. ** 감정 분석과 관련된 프로젝트를 작업 할 때 대부분의 데이터 과학자와 기계 학습 프로그래머는 자바 대신 Python을 사용합니다 **. 동시에 많은 기계 학습 프로그래머가 네트워크 보안, 네트워크 공격 방지 및 사기 탐지와 관련된 프로젝트를 작업 할 때 Java를 사용할 수 있다는 점에 주목할 가치가 있습니다. </p><h2 id="어디서-시작하나요"><a href="#어디서-시작하나요" class="headerlink" title="어디서 시작하나요"></a>어디서 시작하나요</h2><p>프로그래밍의 기초를 배울 때 ** 많은 연구가 결론에 도달했습니다 <strong>. Python의 단순하고 직관적 인 구문으로 인해 ** Java보다 더 쉽습니다 ** ** \ * \ *</strong> [Python 학습](https : //junilearning.com/coding) ** (이전 예에 표시된대로). Python과 비교하여 Java 프로그램에는 일반적으로 더 많은 상용구 코드가 있습니다. 코드의 일부를 포함해야하며 여러 위치에서 거의 또는 전혀 변경하지 않아야합니다. 그렇긴하지만 Java는 몇 가지 중요한 이점, 특히 컴파일 된 언어로서의 속도가 있습니다. ** Python과 Java를 배우면 학생들은 비슷한 컴퓨터 과학 개념을 기반으로하지만 교육 수준이 다른 두 가지 언어를 접하게됩니다. \ * \ * </p><p>전반적으로 Python과 Java가 실제로 강력한 프로그래밍 언어라는 것이 분명하므로, 야심 찬 소프트웨어 개발자에게는 두 언어를 능숙하게 배우는 것이 가장 좋습니다. 프로그래머는 단순히 좋아하는 언어를 배우는 것이 아니라 각 소프트웨어 개발 프로젝트의 특정 요구 사항에 따라 Python과 Java를 비교해야합니다. 간단히 말해서 ** 한 언어가 다른 언어보다 우월하지 않으므로 프로그래머는 두 가지 인코딩 모두에서 두 언어를 모두 사용하도록 노력해야합니다 **. </p><table><thead><tr><th></th><th>파이썬</th><th>자바</th></tr></thead><tbody><tr><td>런타임 성능</td><td></td><td>우승자</td></tr><tr><td>학습 용이성</td><td>우승자</td><td></td></tr><tr><td>실용적인 민첩성</td><td>넥타이</td><td>넥타이</td></tr><tr><td>모바일 앱 개발</td><td></td><td>우승자</td></tr><tr><td>빅 데이터</td><td>우승자</td><td></td></tr></tbody></table><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;This&lt;/em&gt; &lt;a href=&quot;https://junilearning.com/blog/guide/python-vs-java/&quot;&gt;&lt;em&gt;article&lt;/em&gt;&lt;/a&gt; _ 원래 등장 _ &lt;a href=&quot;https://junilearning.com/&quot;&gt;&lt;em&gt;junilearning.com&lt;/em&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h1 id=&quot;Python-및-Java-사용-성능-학습&quot;&gt;&lt;a href=&quot;#Python-및-Java-사용-성능-학습&quot; class=&quot;headerlink&quot; title=&quot;Python 및 Java : 사용, 성능, 학습&quot;&gt;&lt;/a&gt;Python 및 Java : 사용, 성능, 학습&lt;/h1&gt;&lt;p&gt;컴퓨터 과학 분야에는 많은 프로그래밍 언어가 있으며 어느 누구도 다른 언어보다 우월하지 않습니다. 즉, ** 각 언어는 특정 문제를 해결하는 데 가장 적합합니다 *&lt;em&gt;. 사실 주어진 프로그래밍 프로젝트에 대해 일반적으로 선택할 수있는 가장 좋은 언어는 없습니다. 따라서 소프트웨어를 개발하거나 코드를 통해 흥미로운 문제를 해결하고자하는 학생들에게는 모든 프로그래밍 언어에 적용 할 수있는 *&lt;/em&gt; 컴퓨터 과학에 대한 강력한 기반을 갖추는 것이 매우 중요합니다 **. &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://leihao0.github.io/ko/tags/python/"/>
    
      <category term="Java" scheme="https://leihao0.github.io/ko/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>라스베리 4.</title>
    <link href="https://leihao0.github.io/ko/Raspberry-Pi-4/"/>
    <id>https://leihao0.github.io/ko/Raspberry-Pi-4/</id>
    <published>2020-06-11T15:14:06.000Z</published>
    <updated>2021-03-08T16:29:05.868Z</updated>
    
    <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Pi-Hole.png" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Raspberrypi.png" alt=""></div></div></div><a id="more"></a><h2 id="모니터없이-부팅하십시오"><a href="#모니터없이-부팅하십시오" class="headerlink" title="모니터없이 부팅하십시오"></a>모니터없이 부팅하십시오</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span></span><br><span class="line"><span class="string">update_config=1</span></span><br><span class="line"><span class="string">country=CN</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">network=&#123;</span></span><br><span class="line"><span class="string"> ssid=&quot;xxx&quot;</span></span><br><span class="line"><span class="string"> psk=&quot;xxx&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; wpa_supplicant.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># SD 카드의 루트에 WPA_SUPPLICANT, SSH 또는 SSH.TXT를 복사하십시오. </span></span><br><span class="line"></span><br><span class="line">sudo raspi-config</span><br><span class="line"></span><br><span class="line"><span class="comment"># crontab -e. </span></span><br><span class="line"><span class="comment"># @reboot sudo ifdown wlan1. </span></span><br><span class="line">sudo iwconfig wlan1 txpower off</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># eeprom. </span></span><br><span class="line">sudo apt -y update</span><br><span class="line">sudo apt -y upgrade</span><br><span class="line">sudo apt -y install rpi-eeprom</span><br><span class="line">sudo rpi-eeprom-update</span><br><span class="line">sudo rpi-eeprom-update -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 오 - 내 zsh. </span></span><br><span class="line">sudo apt-get install zsh</span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line">sudo apt -y install vim</span><br><span class="line"></span><br><span class="line">sudo chsh -s /bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># PI-Hole. </span></span><br><span class="line">curl -sSL https://install.pi-hole.net | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># pivpn </span></span><br><span class="line">curl -L https://install.pivpn.io | bash</span><br><span class="line">pivpn add</span><br><span class="line">pivpn remove</span><br><span class="line">pivpn list</span><br><span class="line">pivpn -qr</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="암호없는-SSH-액세스"><a href="#암호없는-SSH-액세스" class="headerlink" title="암호없는 SSH 액세스"></a>암호없는 SSH 액세스</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="comment"># 라즈베리 파이 </span></span><br><span class="line">cat raspberrypi.pub</span><br><span class="line">cat ~/.ssh/raspberrypi.pub | ssh pi@192.168.2.2 <span class="string">&#x27;mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="고정-IP-주소"><a href="#고정-IP-주소" class="headerlink" title="고정 IP 주소"></a>고정 IP 주소</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Vim /etc/dhcpcd.conf. </span></span><br><span class="line"></span><br><span class="line">interface eth0</span><br><span class="line">static ip_address=192.168.0.4/24</span><br><span class="line">static routers=192.168.0.254</span><br><span class="line">static domain_name_servers=192.168.0.254 8.8.8.8</span><br></pre></td></tr></table></figure><h2 id="vnc"><a href="#vnc" class="headerlink" title="vnc."></a>vnc.</h2><p>https : // 马 果. .raspberry 피부 .org / 기사 / Vnc- 라스베리 - 피부 </p><h2 id="rclone-amp-Google-드라이브"><a href="#rclone-amp-Google-드라이브" class="headerlink" title="rclone &amp; Google 드라이브"></a>rclone &amp; Google 드라이브</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install fuse</span><br><span class="line"></span><br><span class="line">curl -L https://raw.github.com/pageauc/rclone4pi/master/rclone-install.sh | bash</span><br><span class="line">rclone config</span><br><span class="line"></span><br><span class="line">mkdir -p /tmp/gdrive</span><br><span class="line">fusermount -u /tmp/gdrive</span><br><span class="line"></span><br><span class="line">sudo vim /etc/fuse.conf</span><br><span class="line"><span class="comment"># user_allow_other. </span></span><br></pre></td></tr></table></figure><h2 id="이-마음"><a href="#이-마음" class="headerlink" title="이 마음"></a>이 마음</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo blkid</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo vim / etc / fstab. </span></span><br><span class="line"></span><br><span class="line">UUID=633a8bc8 /media/3T ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=d271d018 /media/TM ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=53f3ce6b /media/8G ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo chown -R pi:pi /media/3T /media/TM</span><br></pre></td></tr></table></figure><h2 id="램-디스크-및-로그"><a href="#램-디스크-및-로그" class="headerlink" title="램 디스크 및 로그"></a>램 디스크 및 로그</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sudo Service Rsyslog Stop. </span></span><br><span class="line"><span class="comment"># sudo systemctl rsyslog를 비활성화합니다 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo vim / etc / fstab. </span></span><br><span class="line"></span><br><span class="line">tmpfs /var/lib/plexmediaserver tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /home/pi./cache tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /tmp tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /var/<span class="built_in">log</span> tmpfs defaults,noatime 0 0</span><br></pre></td></tr></table></figure><h2 id="수정-ext4"><a href="#수정-ext4" class="headerlink" title="수정 ext4."></a>수정 ext4.</h2><p><code>sudo fsck.ext4 -vfy / dev / sda2</code>. </p><h2 id="외장-하드-드라이브의-스왑-공간"><a href="#외장-하드-드라이브의-스왑-공간" class="headerlink" title="외장 하드 드라이브의 스왑 공간"></a>외장 하드 드라이브의 스왑 공간</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/dphys-swapfile</span><br><span class="line"></span><br><span class="line">CONF_SWAPFILE=/media/3T/swapfile</span><br><span class="line">CONF_SWAPSIZE=8192</span><br></pre></td></tr></table></figure><h2 id="AFP-amp-타임-머신"><a href="#AFP-amp-타임-머신" class="headerlink" title="AFP &amp; 타임 머신"></a>AFP &amp; 타임 머신</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install netatalk gparted</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo mkfs.ext4 / dev / sda2. </span></span><br><span class="line"><span class="comment"># SUDA - 4 / 게스트 / 두통 </span></span><br><span class="line"><span class="comment"># sudo mkdir / media / tm. </span></span><br><span class="line"><span class="comment"># 수다 몬테 / 게스트 / 두통 / 미디어 / 완료 </span></span><br><span class="line"><span class="comment"># SUDDO POON -R PI : PI / 미디어 / ZT </span></span><br><span class="line"><span class="comment"># Sudo Cheng -rpi : 스킨 / 미디어 / TM. </span></span><br><span class="line"></span><br><span class="line">sudo vim /etc/netatalk/afp.conf</span><br><span class="line"><span class="comment"># 3T </span></span><br><span class="line"><span class="comment"># ; patish = / media / dt / </span></span><br><span class="line"><span class="comment"># ; [TMP] </span></span><br><span class="line"><span class="comment"># ; 경로 = / tmp / </span></span><br><span class="line"><span class="comment"># [TM] </span></span><br><span class="line"><span class="comment"># 경로 = / 미디어 / TUM / </span></span><br><span class="line"><span class="comment"># 시간 기계 = 예 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo systemctl restart netatalk</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="삼바"><a href="#삼바" class="headerlink" title="삼바"></a>삼바</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install samba samba-common-bin</span><br><span class="line"></span><br><span class="line">sudo vim /etc/samba/smb.conf</span><br><span class="line"><span class="comment"># [Pimylifeup Share] </span></span><br><span class="line"><span class="comment"># patish = / media / dt / </span></span><br><span class="line"><span class="comment"># 쓰기 가능 = 예 </span></span><br><span class="line"><span class="comment"># 마스크 만들기 = 0777. </span></span><br><span class="line"><span class="comment"># 디렉토리 마스크 = 0777. </span></span><br><span class="line"><span class="comment"># public = no. </span></span><br><span class="line"><span class="comment"># [TMP] </span></span><br><span class="line"><span class="comment"># 경로 = / tmp / </span></span><br><span class="line"><span class="comment"># 쓰기 가능 = 예 </span></span><br><span class="line"><span class="comment"># 마스크 만들기 = 0777. </span></span><br><span class="line"><span class="comment"># 디렉토리 마스크 = 0777. </span></span><br><span class="line"><span class="comment"># public = no. </span></span><br><span class="line">sudo smbpasswd -a pi</span><br><span class="line">sudo systemctl restart smbd</span><br></pre></td></tr></table></figure><h2 id="Plex-Server"><a href="#Plex-Server" class="headerlink" title="Plex Server."></a>Plex Server.</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="string">&quot;/tmp/plexmediaserver&quot;</span></span><br><span class="line">sudo mount -t tmpfs -o size=1000M tmpfs /tmp/plexmediaserver</span><br><span class="line">sudo chown -R pi:pi /var/lib/plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo apt -y install apt-transport-https</span><br><span class="line">curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list</span><br><span class="line">sudo apt -y install plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo vim /etc/default/plexmediaserver</span><br><span class="line"><span class="comment"># export plex_media_server_user = pi. </span></span><br><span class="line"></span><br><span class="line">hostname -I</span><br><span class="line">sudo vim /boot/cmdline.txt</span><br><span class="line"><span class="comment"># IP = ipaddress. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo apt -y install pmount. </span></span><br><span class="line"><span class="comment"># sudo apt-get ntfs-3g exfat-fuse exfat-utils pmount </span></span><br><span class="line"><span class="comment"># sudo apt-get 설치 hfsplus hfsutils hfsprogs gdisk. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lsblk. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># / 주 / 시스템 / 시스템 / 사진 X 미디어 서버 .Service </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 사용자 플렉스에서 PI. </span></span><br><span class="line">sudo mkdir -p /etc/systemd/system/plexmediaserver.service.d</span><br><span class="line">sudo vim /etc/systemd/system/plexmediaserver.service.d/override.conf</span><br><span class="line"><span class="comment"># [서비스] </span></span><br><span class="line"><span class="comment"># 사용자 = PI. </span></span><br><span class="line"><span class="comment"># 그룹 = 피부 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [서비스] </span></span><br><span class="line"><span class="comment"># execStartPRE = / bin / sleep 120; / bin / sh -c &#x27;/ usr / bin / test -d &quot;$ &#123;plex_media_server_application_support_dir&#125;&quot;|| / bin / mkdir -p &quot;$ &#123;plex_media_server_application_support_dir&#125;&quot; &#x27; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 데이터 폴더 </span></span><br><span class="line"></span><br><span class="line">sudo systemctl stop plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo service plexmediaserver stop</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> plexmediaserver.service</span><br><span class="line">sudo systemctl restart plexmediaserver.service</span><br></pre></td></tr></table></figure><h2 id="crontab-e"><a href="#crontab-e" class="headerlink" title="crontab -e."></a>crontab -e.</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install php php-curl</span><br></pre></td></tr></table></figure><p><code>crontab -e</code>. </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># rclone. </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;mkdir -p /tmp/gdrive</span></span><br><span class="line"><span class="string">fusermount -u /tmp/gdrive</span></span><br><span class="line"><span class="string">/usr/bin/rclone mount Plex:Plex /tmp/gdrive --umask 0000 --default-permissions --allow-non-empty --allow-other --buffer-size 64M --dir-cache-time 48h --vfs-read-chunk-size 128M --vfs-read-chunk-size-limit 1500M &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; rclone.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 지원 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tar --exclude = &quot;$ plexpath / logs&quot;- exclude = &quot;$ plexpath / cache&quot;- exclude = &quot;$ plexpath / crash reports&quot;-czf /tmp/gdrive/backup/plex.tar.gz / var / lib / PlexMediaserver. </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">mkdir -p /tmp/gdrive/backup/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">tar cf - --exclude=&quot;$PlexPath/Logs&quot; --exclude=&quot;$PlexPath/Cache&quot; --exclude=&quot;$PlexPath/Crash Reports&quot; /var/lib/plexmediaserver | lz4 -f - /tmp/gdrive/backup/plex.tar.lz4</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; backup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 복원 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">lz4 -d /tmp/gdrive/backup/plex.tar.lz4 | tar -xC /</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">mkdir -p &quot;$PlexPath/Logs&quot; &quot;$PlexPath/Cache&quot; &quot;$PlexPath/Crash Reports&quot;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; restore.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chmod a+x backup.sh restore.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 최신 정보 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">sudo apt update &amp;&amp; sudo apt upgrade &amp;&amp; sudo apt autoremove &amp;&amp; sudo apt clean</span></span><br><span class="line"><span class="string">pihole -up &amp;&amp; pihole -g</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; update.sh</span><br><span class="line"></span><br><span class="line">chmod a+x update.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@reboot vncserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># @ rickwite pmots2 zt. </span></span><br><span class="line"><span class="comment"># @ 두통이있는 rabwa </span></span><br><span class="line"></span><br><span class="line">@reboot /home/pi/rclone.sh</span><br><span class="line">@reboot sleep 30 &amp;&amp; /home/pi/restore.sh</span><br><span class="line"></span><br><span class="line">*/30 * * * * /home/pi/backup.sh</span><br><span class="line">0 3 * * * /home/pi/update.sh</span><br><span class="line"></span><br><span class="line">0 22 * * * <span class="built_in">cd</span> ~/Bot;python3 autoPill.py</span><br><span class="line">0 9 * * * php ~/Bot/bilibiliRun.ph</span><br></pre></td></tr></table></figure><p><code>sudo crontab -e</code>. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 0 4 * * * &#x2F; sbin &#x2F; shutdown -r </span><br><span class="line">@reboot sleep 90 &amp;&amp; sudo service plexmediaserver start</span><br></pre></td></tr></table></figure><h2 id="jellyfin"><a href="#jellyfin" class="headerlink" title="~ jellyfin ~"></a><del>~ jellyfin ~</del></h2><p>https : // jelly fat.org/ </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install apt-transport-https</span><br><span class="line">wget -O - https://repo.jellyfin.org/jellyfin_team.gpg.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$( dpkg --print-architecture )</span>] https://repo.jellyfin.org/<span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^ID=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> <span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^VERSION_CODENAME=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> main&quot;</span> | sudo tee /etc/apt/sources.list.d/jellyfin.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 서비스 Jellyfin 상태 </span></span><br><span class="line"><span class="comment"># systemctl jellyfin을 다시 시작합니다 </span></span><br><span class="line"><span class="comment"># sudo /etc/init.d/jellyfin stop. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># .local / share / jellyfin. </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;#!/bin/zsh</span></span><br><span class="line"><span class="string">JELLYFINTMP=&quot;/tmp/jellyfin&quot;</span></span><br><span class="line"><span class="string">USRBIN=&quot;/usr/bin&quot;</span></span><br><span class="line"><span class="string">mkdir -p $JELLYFINTMP/log $JELLYFINTMP/cache $JELLYFINTMP/transcodes \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/data \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/metadata \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/config</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$USRBIN/jellyfin \</span></span><br><span class="line"><span class="string"> -C $JELLYFINTMP/cache \</span></span><br><span class="line"><span class="string"> -l $JELLYFINTMP/log \</span></span><br><span class="line"><span class="string"> -d $JELLYFINTMP/data \</span></span><br><span class="line"><span class="string"> -c $JELLYFINTMP/config \</span></span><br><span class="line"><span class="string"> --ffmpeg $USRBIN/ffmpeg &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; jellyfin.sh</span><br><span class="line"></span><br><span class="line">chmod a+x jellyfin.sh</span><br><span class="line">nohup ./jellyfin.sh &lt;/dev/null &amp;</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># https : // jelly fin.org/docs/general/administration/hardware-acceleration.html. </span></span><br><span class="line">sudo usermod -aG video jellyfin</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;group-picture&quot;&gt;&lt;div class=&quot;group-picture-row&quot;&gt;&lt;div class=&quot;group-picture-column&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Pi-Hole.png&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;group-picture-column&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Raspberrypi.png&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
    
    </summary>
    
    
    
      <category term="Raspberry" scheme="https://leihao0.github.io/ko/tags/raspberry/"/>
    
  </entry>
  
  <entry>
    <title>iOS 토큰 기반 APN</title>
    <link href="https://leihao0.github.io/ko/iOS-Token-Based-APNs/"/>
    <id>https://leihao0.github.io/ko/iOS-Token-Based-APNs/</id>
    <published>2020-05-29T09:23:18.000Z</published>
    <updated>2020-12-20T23:53:08.364Z</updated>
    
    <content type="html"><![CDATA[<p>Apple은 APN을 수행하는 새로운 방법 (인증 토큰)을 제공합니다. </p><p>이전 방법 (제공자 인증서)과 비교하여 ‘* .p12’인증서는 매년 만료됩니다. </p><p>토큰 기반<code>* .p8</code> ** 만료 없음 ** </p><a id="more"></a><ul><li><a href="https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/establishing_a_token-based_connection_to_apns">APN과 토큰 기반 연결 설정</a> </li><li><a href="https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html">APN과의 통신</a> </li></ul><h2 id="고객을-위해"><a href="#고객을-위해" class="headerlink" title="고객을 위해"></a>고객을 위해</h2><p>클라이언트의 유일한 차이점은 </p><ol><li><a href="https://developer.apple.com/에서">https://developer.apple.com/에서</a> 인증 토큰 서명 키를 만듭니다. </li><li><code>* .p8</code>을 다운로드하여 백엔드 엔지니어에게 보냅니다. </li></ol><h2 id="백엔드-용"><a href="#백엔드-용" class="headerlink" title="백엔드 용"></a>백엔드 용</h2><p>많은 프레임 워크가<code>* .p8</code>을 지원합니다. </p><p>예 : </p><p><a href="https://firebase.google.com/docs/cloud-messaging/ios/certs">Firebase</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Apple은 APN을 수행하는 새로운 방법 (인증 토큰)을 제공합니다. &lt;/p&gt;
&lt;p&gt;이전 방법 (제공자 인증서)과 비교하여 ‘* .p12’인증서는 매년 만료됩니다. &lt;/p&gt;
&lt;p&gt;토큰 기반&lt;code&gt;* .p8&lt;/code&gt; ** 만료 없음 ** &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="iOS" scheme="https://leihao0.github.io/ko/tags/ios/"/>
    
      <category term="APNs" scheme="https://leihao0.github.io/ko/tags/apns/"/>
    
  </entry>
  
  <entry>
    <title>묘지 책</title>
    <link href="https://leihao0.github.io/ko/The-Graveyard-Book/"/>
    <id>https://leihao0.github.io/ko/The-Graveyard-Book/</id>
    <published>2020-05-07T00:55:21.000Z</published>
    <updated>2020-12-20T23:53:08.364Z</updated>
    
    <content type="html"><![CDATA[<h1 id="놀이-공원-🎠-책"><a href="#놀이-공원-🎠-책" class="headerlink" title="놀이 공원 🎠 책"></a>놀이 공원 🎠 책</h1><div style="width: 300px"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/The%20Graveyard%20Book.jpg" /></div><p>아이들은 삶과 죽음에 대한 개념이 없으며 묘지는 그들에게 더 많은 놀이 공원과 같습니다. </p><a id="more"></a><hr><p>다른 책을 보내 주셔서 감사합니다 🙏 🐼 독자 </p><p>부끄러워, 해외로 나간 후 독서 수가 급감했다<br>매년 수백 권의 책에서 갑자기 한 자릿수로 </p><p>독서는 실용적이어서는 안되지만 관심에 따라 이루어져야한다는 옛 속담을 생각해보십시오.<br>이제 정말 얼굴을 때리고 </p><p>그러나 객관적인 이유도 있습니다. </p><p>하나는 제가 지금 읽고 싶은 책 대부분이 오리지널 에디션이라는 것입니다.<br>원본이 있으니까 번역본을보고 싶지 않아요 </p><p>둘째, 저는 전화를 받았고 싱가포르 국립 대학교의 친구에게 들었습니다.<br>그 후 그녀는 반복해서 “Your Plastic English”를 경멸했습니다. </p><p>하지만 완고함이 있고 느림은 느리지 만 원래 버전을 고수합니다<br>언젠가 내가 중국 책만큼 빨리 일어날 수있을거야 </p><p>세 번째는 포현은 섬이고 해외에는 좋은 산과 강 같은 것이 없어서 위대한 신들이 말한 것처럼 외롭다는 것입니다.<br>그리고 전염병이 시작될 때 이곳이 선진국이라고 생각한 적이 있습니다.<br>또한 더운 것을 제외하고는 일년 내내 여름입니다.<br>푸른 하늘과 흰 구름 폭우 천둥 시간이 꽁꽁 얼어 붙은 기분 It ‘s good </p><p>공리주의가 없으면 당연히 읽을 동기도 없다 </p><p>Circuit Breaker는 지금 이니까 시간과 분위기가 </p><hr><p>이 책을 먼저 받았습니다<br>처음에는 SF 인 줄 알았는데<br>투명해질 수 있다는 말을 듣고 환상이라고 생각 했어<br>언니 페이퍼 만났을 때 사랑 인 줄 알았는데<br>학교에 갔고 캠퍼스라고 생각 했어<br>아빠가 게임에 와서 부모 자식이라고 생각했습니다<br>온 가족이 살해 당하고 서스펜스라고 생각했습니다<br>결국 저는 성장에 대해 이야기했습니다 </p><p>마지막 저자는 다음과 같이 썼습니다. </p><blockquote><p>저는 뉴 올리언스의 허름한 호텔에서 여섯 번째 챕터 “버티의 스쿨 데이”를 마쳤습니다. 나는 글을 쓰면서 눈물을 참으며 정원에있는 파빌리온의 마지막 페이지를 마쳤다. 그 순간에야 내가 아버지 였을 때 왜이 책을 쓰지 않았는지 알았다. 만들기 전에 아이들의 성장 과정을 함께하고, 양육하고, 사랑하고, 마침내 놓아주는 법을 배워야합니다. </p></blockquote><hr><p>또한 읽기에 참여하기가 어렵습니다.<br>책 전체가 해리포터 같은 느낌을 자꾸 </p><p>하지만 이번 독서에는 상당한 차이가 있습니다<br>예전에는 그런 소설을 읽을 때 주인공의 입장에서 책에 들어간 적이 많았어요<br>나이와 함께<br>이번에는 Silas의 관점에서 </p><p>이 책이 중국에서 일반적인 판타지 루틴이라면<br>Bod는 분명히 여동생 Scarlett을 데리러 Sleer를 길들여 Master가되고 Jack을 찢고 Brotherhood의 보스로 앉을 것입니다. </p><p>그러나이 모든 것이 미국 신들에 대해 쓴 닐에서는 일어나지 않았습니다.<br>Bod가 몬스터를 연기 한 후 👾 자매 페이퍼가 무서워졌습니다. Bod는 그냥 평범한 ** 세상이 너무 커서보고 싶어요 ** </p><p>아버지로서, 당신은 당신의 몸이 나라에있는 사람이되는 것을보고 싶습니까, 아니면 책에 나오는 사람이되는 것을보고 싶습니까? 📖? </p><hr><p>때때로 반항적 인시기에 부모가 지불해야하는 어리석은 일이 있습니다.<br>이제 나이가 들어서 부모님의 다양한 금지의 어려움을 이해합니다. </p><p>하지만 나는 그것에 대해 생각하는 것을 도울 수 없습니다<br>지금 내가 뭘 아는지 몰랐어 </p><p>지금의 자아와 자아가<br>나는 그 당시 확실히 순종하지 않을 것입니다<br>당신은 깨어나 기 위해 사회의 철권에 얼굴을 두 드려야합니다<br>단호하게 무언가를하십시오 </p><hr><p>총무를 다한 뒤 언젠가는 동화의 세계에서 나와 삶에 들어간다. </p><blockquote><p>“안녕, 그럼 실라스.” 보드는 어렸을 때처럼 손을 내밀었고 실라스는 차가운 손에 낡은 상아색의 손을 잡고 심하게 흔들었다.<br>“안녕, 아무도 Owens.”<br>Bod는 작은 여행 가방을 집어 들었습니다. 그는 문을 열고 지하실에서 빠져 나와 뒤돌아 보지 않고 완만 한 비탈길을 따라 걸어갔습니다.” </p></blockquote><p>나왔을 때 비참 했어 아무도 날 포기하지 않았어 안녕도<br>베이징의 집세가 환불되었고 편도 티켓을 샀습니다<br>모든 소지품은 세 개의 가방에 포장되어 있습니다.<br>오전 4시에 공항까지 택시를 타십시오.<br>위탁, 탑승, 퇴장 후 </p><blockquote><p>뒤돌아 보지 않고 </p></blockquote><p>내가 Bod의 청각 환각도 들었 으면 좋겠어요. </p><blockquote><p>그는 한 걸음 앞으로 나아갔습니다.“아들 아, 당신이 너무 자랑 스러워요.”라는 목소리가 들렸다. </p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;놀이-공원-🎠-책&quot;&gt;&lt;a href=&quot;#놀이-공원-🎠-책&quot; class=&quot;headerlink&quot; title=&quot;놀이 공원 🎠 책&quot;&gt;&lt;/a&gt;놀이 공원 🎠 책&lt;/h1&gt;&lt;div style=&quot;width: 300px&quot;&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/The%20Graveyard%20Book.jpg&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;아이들은 삶과 죽음에 대한 개념이 없으며 묘지는 그들에게 더 많은 놀이 공원과 같습니다. &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Reading" scheme="https://leihao0.github.io/ko/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>SwiftUI 팁</title>
    <link href="https://leihao0.github.io/ko/SwiftUI-Tips/"/>
    <id>https://leihao0.github.io/ko/SwiftUI-Tips/</id>
    <published>2020-04-24T11:49:41.000Z</published>
    <updated>2020-12-20T23:53:08.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="UserDefaults에-바인딩"><a href="#UserDefaults에-바인딩" class="headerlink" title="UserDefaults에 바인딩"></a>UserDefaults에 바인딩</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UD</span>: <span class="title">ObservableObject</span> </span>&#123;</span><br><span class="line">    @<span class="type">Published</span> <span class="keyword">var</span> date: <span class="type">Date</span> = <span class="type">UserDefaults</span>.standard.value(forKey: <span class="string">&quot;date&quot;</span>) <span class="keyword">as</span>? <span class="type">Date</span> ?? <span class="type">Date</span>() &#123;</span><br><span class="line">        <span class="keyword">didSet</span> &#123;</span><br><span class="line">            <span class="type">UserDefaults</span>.standard.<span class="keyword">set</span>(<span class="keyword">self</span>.date, forKey: <span class="string">&quot;date&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="AppDelegate-gt-SceneDelegate"><a href="#AppDelegate-gt-SceneDelegate" class="headerlink" title="AppDelegate-&gt; SceneDelegate"></a>AppDelegate-&gt; SceneDelegate</h2><p>많은 델리게이트가<code>AppDelegate.swift</code>에서<code>SceneDelegate.swift</code>로 이동했습니다. </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> app: UIApplication, <span class="keyword">open</span> url: URL, options: [UIApplication.OpenURLOptionsKey : <span class="keyword">Any</span>] = [:])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// to</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">scene</span><span class="params">(<span class="number">_</span> scene: UIScene, openURLContexts URLContexts: Set&lt;UIOpenURLContext&gt;)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="NavigationView-NavigationBarItems-NavigationLink"><a href="#NavigationView-NavigationBarItems-NavigationLink" class="headerlink" title="NavigationView, NavigationBarItems, NavigationLink"></a>NavigationView, NavigationBarItems, NavigationLink</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ContentView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">EnvironmentObject</span> <span class="keyword">var</span> ud: <span class="type">UD</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> url = <span class="string">&quot;Title:status?date=\(String(ud.firstDate.timeIntervalSince1970))&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                qrCodeImage(<span class="keyword">for</span>: url)!</span><br><span class="line"></span><br><span class="line">                <span class="type">Spacer</span>().frame(height: <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">                <span class="type">Text</span>(<span class="string">&quot;\(ud.firstDate)&quot;</span>)</span><br><span class="line">            &#125;.navigationBarTitle(<span class="string">&quot;Title&quot;</span>)</span><br><span class="line">                .navigationBarItems(trailing:</span><br><span class="line">                    <span class="type">HStack</span> &#123;</span><br><span class="line">                        <span class="type">NavigationLink</span>(destination: <span class="type">PickerView</span>(firstDate: $ud.firstDate)) &#123;</span><br><span class="line">                            <span class="type">Image</span>(systemName: <span class="string">&quot;gear&quot;</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="PickerView-바인딩"><a href="#PickerView-바인딩" class="headerlink" title="PickerView 바인딩"></a>PickerView 바인딩</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PickerView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">Binding</span> <span class="keyword">var</span> date: <span class="type">Date</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                <span class="type">DatePicker</span>(selection: $date, <span class="keyword">in</span>: ...<span class="type">Date</span>(), displayedComponents: .date) &#123;</span><br><span class="line">                    <span class="type">Text</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SwiftUI-이미지-빈보기-수정"><a href="#SwiftUI-이미지-빈보기-수정" class="headerlink" title="SwiftUI 이미지 빈보기 수정"></a>SwiftUI 이미지 빈보기 수정</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ciContext = <span class="type">CIContext</span>()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">qrCodeImage</span><span class="params">(<span class="keyword">for</span> string: String)</span></span> -&gt; <span class="type">Image?</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> data = string.data(using: <span class="type">String</span>.<span class="type">Encoding</span>.utf8)</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> qrFilter = <span class="type">CIFilter</span>(name: <span class="string">&quot;CIQRCodeGenerator&quot;</span>) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">    qrFilter.setValue(data, forKey: <span class="string">&quot;inputMessage&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">10</span>, y: <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> ciImage = qrFilter.outputImage?.transformed(by: transform) <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cgImage = ciContext.createCGImage(ciImage, from: ciImage.extent)</span><br><span class="line">    <span class="comment">// convert to UIImage</span></span><br><span class="line">    <span class="keyword">let</span> uiImage = <span class="type">UIImage</span>(cgImage: cgImage!)</span><br><span class="line">    <span class="keyword">let</span> image = <span class="type">Image</span>(uiImage: uiImage)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> image</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;UserDefaults에-바인딩&quot;&gt;&lt;a href=&quot;#UserDefaults에-바인딩&quot; class=&quot;headerlink&quot; title=&quot;UserDefaults에 바인딩&quot;&gt;&lt;/a&gt;UserDefaults에 바인딩&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UD&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;ObservableObject&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @&lt;span class=&quot;type&quot;&gt;Published&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; date: &lt;span class=&quot;type&quot;&gt;Date&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;UserDefaults&lt;/span&gt;.standard.value(forKey: &lt;span class=&quot;string&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;Date&lt;/span&gt; ?? &lt;span class=&quot;type&quot;&gt;Date&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;didSet&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;UserDefaults&lt;/span&gt;.standard.&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.date, forKey: &lt;span class=&quot;string&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="SwiftUI" scheme="https://leihao0.github.io/ko/tags/swiftui/"/>
    
  </entry>
  
  <entry>
    <title>비디오를 축소하여 iCloud 저장 공간을 줄이는 방법</title>
    <link href="https://leihao0.github.io/ko/How-to-reduce-iCloud-storage-by-shrink-videos/"/>
    <id>https://leihao0.github.io/ko/How-to-reduce-iCloud-storage-by-shrink-videos/</id>
    <published>2020-03-29T16:04:51.000Z</published>
    <updated>2020-12-20T23:53:08.364Z</updated>
    
    <content type="html"><![CDATA[<p>실제로 4k 비디오에서 불필요한 클립을 빼면 공간을보다 효과적으로 절약 할 수 있습니다. </p><hr><p>“사진”에 ​​동영상을 갤러리에 넣으면 내가 찍은 시간과 장소가 표시됩니다. </p><p>내 기억을 떠올리게하는 멋진 기능<br>그러나 원래 4k는 iCloud에서 너무 많은 공간을 차지합니다. </p><p>예를 들어 HEVC (고효율 비디오 코딩)를 사용해도 2:30 비디오는 1GB의 공간을 차지합니다.<br>내 200G iCloud 요금제가 거의 가득 찼습니다 </p><p>따라서 공간을 절약하기 위해 비디오를 약간 압축 할 계획입니다. </p><a id="more"></a><p>그러나, </p><h2 id="FFmpeg는-메타-데이터가-있어도-비디오를-변환하고-GPS가-손실됩니다"><a href="#FFmpeg는-메타-데이터가-있어도-비디오를-변환하고-GPS가-손실됩니다" class="headerlink" title="FFmpeg는 메타 데이터가 있어도 비디오를 변환하고 GPS가 손실됩니다."></a>FFmpeg는 메타 데이터가 있어도 비디오를 변환하고 GPS가 손실됩니다.</h2><p>다행히도 방법을 찾았습니다 </p><h3 id="도구"><a href="#도구" class="headerlink" title="도구"></a>도구</h3><ul><li>FFmpeg </li><li>Exiftool </li></ul><h4 id="원본-비디오를-폴더로-내보내기"><a href="#원본-비디오를-폴더로-내보내기" class="headerlink" title="원본 비디오를 폴더로 내보내기"></a>원본 비디오를 폴더로 내보내기</h4><p>“사진”에서 폴더로 비디오를 드래그하는 일반적인 방법은 “사진”이 비디오를 변환하도록하는 것입니다. </p><p>따라서 내보낼 비디오를 모두 선택해야합니다. </p><p><code>파일-&gt; 내보내기-&gt; 수정되지 않은 원본 내보내기 ...</code> </p><h4 id="각-비디오-축소"><a href="#각-비디오-축소" class="headerlink" title="각 비디오 축소"></a>각 비디오 축소</h4><p>iPhone 기본 스트림은 </p><h1 id="0-0-및-비디오-hevc-메인-hvc1-0x31637668-yuv420p-tv-bt709"><a href="#0-0-및-비디오-hevc-메인-hvc1-0x31637668-yuv420p-tv-bt709" class="headerlink" title="0 : 0 (및) : 비디오 : hevc (메인) (hvc1 / 0x31637668), yuv420p (tv, bt709)`"></a>0 : 0 (및) : 비디오 : hevc (메인) (hvc1 / 0x31637668), yuv420p (tv, bt709)`</h1><p>따라서<code>-pix_fmt yuv420p10le</code>을 사용하여 10 비트로 다시 인코딩하면 도움이되지 않습니다. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">ffmov</span></span>() &#123;</span><br><span class="line">    mkdir -p shrunk</span><br><span class="line"></span><br><span class="line">    <span class="comment"># h265가있는 ffmpeg </span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v libx265 -crf 28 -c:a copy -c:s copy -tag:v hvc1 shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    overwriteExif <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 원본 비디오의 Exif 정보를 축소 된 * .mov로 복사합니다. </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## 모든 * .mov 살펴보기 </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$f</span></span><br><span class="line">        ffmov <span class="variable">$f</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>그런 다음이 코드를 복사하여<code>Terminal</code>과<code>cd VideoFolder</code>에 붙여 넣은 다음<code>shrinkVideos</code>를 붙여 넣을 수 있습니다. </p><p>수축은 시간이 오래 걸립니다 </p><p>내 MacBook Pro (15 인치, 2018)에서는 0.3 번만<br>그러나 일반적으로 비디오는 너무 많은 품질을 잃지 않고 5 배 감소됩니다. </p><p>모두 완료되면 축소 된 비디오가<code>shrunk /</code>폴더 아래에 위치합니다. </p><p>그런 다음 축소 된 비디오를 가져 오기 전에 비교하고 원본 비디오를 삭제할 수 있습니다. </p><p>좋아, 결국 나는 매우 느린 속도를 견딜 수 없기 때문에 가속을 위해 Nvidia 1080 GPU를 사용하여 자세히 알아 보겠습니다. [CUDA GPU Accelerated h264 / h265 / HEVC Video Encoding with Staxrip](<a href="https://leihao0.github.io">https://leihao0.github.io</a> / CUDA-GPU- 가속 -h264-h265-HEVC- 비디오 인코딩-스탁스 립 /) </p><p>다음 단계는 변환 된 비디오를<code>hvc1</code>로 표시하는 것입니다. 그렇지 않으면 사진을 가져올 때 오류가 발생합니다. </p><p>** 유효하지 않음 : 작업을 완료 할 수 없습니다. (PHPhotosErrorDomain 오류 -1.) ** </p><p>그래서 전체 단계는 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">ffhvc1</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> -&gt; <span class="variable">$1</span>.mov&quot;</span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v copy -c:a copy -c:s copy -tag:v hvc1 <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>.mov -&gt; <span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm <span class="string">&quot;<span class="variable">$1</span>&quot;</span>; mv <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line">    <span class="comment"># 원본 비디오의 Exif 정보를 축소 된 * .mov로 복사합니다. </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## 모든 * .mov 살펴보기 </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">        ffhvc1 <span class="string">&quot;shrunk/<span class="variable">$f</span>&quot;</span></span><br><span class="line">        overwriteExif <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Staxrip을 사용하여 모든 비디오를 축소 / </span></span><br><span class="line"><span class="comment"># 그런 다음`shrinkVideos`를 실행하십시오. </span></span><br></pre></td></tr></table></figure><hr><p>도움이 되길 바랍니다 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;실제로 4k 비디오에서 불필요한 클립을 빼면 공간을보다 효과적으로 절약 할 수 있습니다. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“사진”에 ​​동영상을 갤러리에 넣으면 내가 찍은 시간과 장소가 표시됩니다. &lt;/p&gt;
&lt;p&gt;내 기억을 떠올리게하는 멋진 기능&lt;br&gt;그러나 원래 4k는 iCloud에서 너무 많은 공간을 차지합니다. &lt;/p&gt;
&lt;p&gt;예를 들어 HEVC (고효율 비디오 코딩)를 사용해도 2:30 비디오는 1GB의 공간을 차지합니다.&lt;br&gt;내 200G iCloud 요금제가 거의 가득 찼습니다 &lt;/p&gt;
&lt;p&gt;따라서 공간을 절약하기 위해 비디오를 약간 압축 할 계획입니다. &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="FFmpeg" scheme="https://leihao0.github.io/ko/tags/ffmpeg/"/>
    
      <category term="Exiftool" scheme="https://leihao0.github.io/ko/tags/exiftool/"/>
    
      <category term="iCloud" scheme="https://leihao0.github.io/ko/tags/icloud/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 해시 테이블</title>
    <link href="https://leihao0.github.io/ko/LeetCode-Hash-Table/"/>
    <id>https://leihao0.github.io/ko/LeetCode-Hash-Table/</id>
    <published>2020-01-11T16:00:00.000Z</published>
    <updated>2020-12-20T23:53:08.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="디자인-해시-세트"><a href="#디자인-해시-세트" class="headerlink" title="디자인 해시 세트"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashSet">디자인 해시 세트</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: <span class="literal">false</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">         bucket[key] = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">contains</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="디자인-해시-맵"><a href="#디자인-해시-맵" class="headerlink" title="디자인 해시 맵"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashMap">디자인 해시 맵</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashMap</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: -<span class="number">1</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> key: Int, <span class="number">_</span> value: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">get</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="중복-포함"><a href="#중복-포함" class="headerlink" title="중복 포함"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate">중복 포함</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(i) &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(i)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="단일-번호"><a href="#단일-번호" class="headerlink" title="단일 번호"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Single-Number">단일 번호</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">singleNumber</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> ^ $<span class="number">1</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="두-배열의-교차점"><a href="#두-배열의-교차점" class="headerlink" title="두 배열의 교차점"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-Arrays">두 배열의 교차점</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="해피-넘버"><a href="#해피-넘버" class="headerlink" title="해피 넘버"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Happy-Number">해피 넘버</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> setI = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isHappy</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = n, r = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &gt; <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> t = i%<span class="number">10</span></span><br><span class="line">            r += t*t</span><br><span class="line">            i /= <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> setI.<span class="built_in">contains</span>(r) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        setI.insert(r)</span><br><span class="line">        <span class="keyword">return</span> isHappy(r)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="두-목록의-최소-인덱스-합계"><a href="#두-목록의-최소-인덱스-합계" class="headerlink" title="두 목록의 최소 인덱스 합계"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Minimum-Index-Sum-of-Two-Lists">두 목록의 최소 인덱스 합계</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 452 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict2 = [<span class="type">String</span>: <span class="type">Int</span>](), least = <span class="type">Int</span>.<span class="built_in">max</span>, arr = [<span class="type">String</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list2.<span class="built_in">count</span> &#123;</span><br><span class="line">            dict2[ list2[i] ] = i</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list1.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> j = dict2[ list1[i] ] &#123;</span><br><span class="line">                <span class="keyword">let</span> n = i+j</span><br><span class="line">                <span class="keyword">if</span> n &lt; least &#123;</span><br><span class="line">                    arr = [list1[i]]</span><br><span class="line">                    least = n</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> n == least &#123;</span><br><span class="line">                    arr.append(list1[i])</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2104 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> dict1 = list1.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict2 = list2.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict = <span class="type">Set</span>(dict1.keys).intersection(dict2.keys).<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>] = dict1[$<span class="number">1</span>]! + dict2[$<span class="number">1</span>]! &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value == dict.<span class="built_in">map</span>(&#123; $<span class="number">0</span>.value &#125;).<span class="built_in">min</span>()  &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.key &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="두-배열의-교차점-II"><a href="#두-배열의-교차점-II" class="headerlink" title="두 배열의 교차점 II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-Arrays-II">두 배열의 교차점 II</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span>](), ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="중복-II-포함"><a href="#중복-II-포함" class="headerlink" title="중복 II 포함"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate-II">중복 II 포함</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsNearbyDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: [<span class="type">Int</span>]]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> n = nums[i]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> arr = dict[n] &#123;</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> arr &#123;</span><br><span class="line">                    <span class="keyword">if</span> i-j &lt;= k &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                dict[n] = arr + [i]</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dict[n] = [i]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Logger-Rate-Limiter"><a href="#Logger-Rate-Limiter" class="headerlink" title="Logger Rate Limiter"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Logger-Rate-Limiter">Logger Rate Limiter</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> logs = [<span class="type">String</span>: <span class="type">Int</span>]()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">shouldPrintMessage</span><span class="params">(<span class="number">_</span> timestamp: Int, <span class="number">_</span> message: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> lastTimestamp = logs[message], timestamp - lastTimestamp &lt; <span class="number">10</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        logs[message] = timestamp</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="그룹-이동-문자열"><a href="#그룹-이동-문자열" class="headerlink" title="그룹 이동 문자열"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Group-Shifted-Strings">그룹 이동 문자열</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">groupStrings</span><span class="params">(<span class="number">_</span> strings: [String])</span></span> -&gt; [[<span class="type">String</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [[<span class="type">Int</span>]: [<span class="type">String</span>]]()</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> strings &#123;</span><br><span class="line">            <span class="keyword">let</span> arrS = <span class="type">Array</span>(s)</span><br><span class="line">            <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">1</span>..&lt;arrS.<span class="built_in">count</span>) &#123;</span><br><span class="line">                arr.append((<span class="type">Int</span>(arrS[i].asciiValue!)-<span class="type">Int</span>(arrS[i-<span class="number">1</span>].asciiValue!)+<span class="number">26</span>)%<span class="number">26</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            dict[arr, <span class="keyword">default</span>: []] += [s]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="유효한-스도쿠"><a href="#유효한-스도쿠" class="headerlink" title="유효한 스도쿠"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Valid-Sudoku">유효한 스도쿠</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidSudoku</span><span class="params">(<span class="number">_</span> board: [[Character]])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[i].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[i].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[j].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[j].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> setC = <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;()</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                        <span class="keyword">let</span> <span class="built_in">c</span> = board[i*<span class="number">3</span>+k][j*<span class="number">3</span>+l]</span><br><span class="line">                        <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                        <span class="keyword">if</span> setC.<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            setC.insert(<span class="built_in">c</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="중복-하위-트리-찾기"><a href="#중복-하위-트리-찾기" class="headerlink" title="중복 하위 트리 찾기"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Find-Duplicate-Subtrees">중복 하위 트리 찾기</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicateSubtrees</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        dfs(root)</span><br><span class="line">        <span class="keyword">return</span> nodeDict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value.<span class="number">1</span> &gt; <span class="number">1</span> &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value.<span class="number">0</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> nodeDict = [[<span class="type">Int?</span>]: (<span class="type">TreeNode</span>, <span class="type">Int</span>)]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">dfs</span><span class="params">(<span class="number">_</span> node: TreeNode?)</span></span> -&gt; [<span class="type">Int?</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> node = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> [<span class="literal">nil</span>] &#125;</span><br><span class="line">        <span class="keyword">let</span> key: [<span class="type">Int?</span>] = [node.val] + dfs(node.<span class="keyword">left</span>) + dfs(node.<span class="keyword">right</span>)</span><br><span class="line">        nodeDict[key, <span class="keyword">default</span>: (node, <span class="number">0</span>)].<span class="number">1</span> += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> key</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="보석과-돌"><a href="#보석과-돌" class="headerlink" title="보석과 돌"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Jewels-and-Stones">보석과 돌</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">numJewelsInStones</span><span class="params">(<span class="number">_</span> J: String, <span class="number">_</span> S: String)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> j = <span class="type">Set</span>(<span class="type">J</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">S</span>.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + (j.<span class="built_in">contains</span>($<span class="number">1</span>) ? <span class="number">1</span> : <span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="반복-문자가없는-가장-긴-부분-문자열"><a href="#반복-문자가없는-가장-긴-부분-문자열" class="headerlink" title="반복 문자가없는 가장 긴 부분 문자열"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Longest-Substring-Without-Repeating-Characters">반복 문자가없는 가장 긴 부분 문자열</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="투섬-III-데이터-구조-설계"><a href="#투섬-III-데이터-구조-설계" class="headerlink" title="투섬 III-데이터 구조 설계"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Two-Sum-III---Data-structure-design">투섬 III-데이터 구조 설계</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TwoSum</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> numbers = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> number: Int)</span></span> &#123;</span><br><span class="line">        numbers[number, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">find</span><span class="params">(<span class="number">_</span> value: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (k, v) <span class="keyword">in</span> numbers &#123;</span><br><span class="line">            <span class="keyword">let</span> rest = value-k</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> num = numbers[rest], (num &gt; ((rest == k) ? <span class="number">1</span> : <span class="number">0</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4Sum-II"><a href="#4Sum-II" class="headerlink" title="4Sum II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#4Sum-II">4Sum II</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fourSumCount</span><span class="params">(<span class="number">_</span> A: [Int], <span class="number">_</span> B: [Int], <span class="number">_</span> C: [Int], <span class="number">_</span> D: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">0</span>, ab = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">A</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">B</span> &#123;</span><br><span class="line">                ab[i+j, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">C</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">D</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> v = ab[-i-j] &#123; num += v &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="상위-K-자주-사용하는-요소"><a href="#상위-K-자주-사용하는-요소" class="headerlink" title="상위 K 자주 사용하는 요소"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Top-K-Frequent-Elements">상위 K 자주 사용하는 요소</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">topKFrequent</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(into: [<span class="type">Int</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span> &#125;.sorted(by: &#123;$<span class="number">0</span>.value &gt; $<span class="number">1</span>.value&#125;)[..&lt;k].<span class="built_in">map</span>&#123;$<span class="number">0</span>.key&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="고유-단어-약어"><a href="#고유-단어-약어" class="headerlink" title="고유 단어 약어"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Unique-Word-Abbreviation">고유 단어 약어</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ValidWordAbbr</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> abbrDict = [<span class="type">String</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;]()</span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> dictionary: [<span class="type">String</span>]) &#123;</span><br><span class="line">        dictionary.forEach &#123; abbrDict[abbreviate($<span class="number">0</span>), <span class="keyword">default</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;()].insert($<span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isUnique</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> abbrSet = abbrDict[abbreviate(word)] &#123;</span><br><span class="line">            <span class="keyword">return</span> abbrSet.<span class="built_in">contains</span>(word) &amp;&amp; abbrSet.<span class="built_in">count</span> == <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">abbreviate</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> word.<span class="built_in">count</span> &lt; <span class="number">3</span> ? word : (<span class="type">String</span>(word.first!) + <span class="type">String</span>(word.<span class="built_in">count</span>-<span class="number">2</span>) + <span class="type">String</span>(word.last!))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="GetRandom-O-1-삭제-삽입-lt-https-leihao0-github-io-LeetCode-Hash-Table-Insert-Delete-GetRandom-O-1-gt"><a href="#GetRandom-O-1-삭제-삽입-lt-https-leihao0-github-io-LeetCode-Hash-Table-Insert-Delete-GetRandom-O-1-gt" class="headerlink" title="[GetRandom O (1) 삭제 삽입](&lt;https://leihao0.github.io/LeetCode-Hash-Table/#Insert-Delete-GetRandom-O (1)&gt;)"></a>[GetRandom O (1) 삭제 삽입](&lt;<a href="https://leihao0.github.io/LeetCode-Hash-Table/#Insert-Delete-GetRandom-O">https://leihao0.github.io/LeetCode-Hash-Table/#Insert-Delete-GetRandom-O</a> (1)&gt;)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 220 ms, 30.27%</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RandomizedSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> vals = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.insert(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> !vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.remove(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getRandom</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> vals.randomElement() ?? <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;디자인-해시-세트&quot;&gt;&lt;a href=&quot;#디자인-해시-세트&quot; class=&quot;headerlink&quot; title=&quot;디자인 해시 세트&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashSet&quot;&gt;디자인 해시 세트&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyHashSet&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bucket = &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;(repeating: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1000001&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; key: Int)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bucket[key] = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; key: Int)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         bucket[key] = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; key: Int)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bucket[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Swift" scheme="https://leihao0.github.io/ko/tags/swift/"/>
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ko/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 이진 검색 트리</title>
    <link href="https://leihao0.github.io/ko/LeetCode-Binary-Search-Tree/"/>
    <id>https://leihao0.github.io/ko/LeetCode-Binary-Search-Tree/</id>
    <published>2020-01-09T16:00:00.000Z</published>
    <updated>2020-12-20T23:53:08.363Z</updated>
    
    <content type="html"><![CDATA[<h2 id="이진-검색-트리-확인"><a href="#이진-검색-트리-확인" class="headerlink" title="이진 검색 트리 확인"></a>이진 검색 트리 확인</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidBST</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">max</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> node: TreeNode?, <span class="number">_</span> lower: Int, <span class="number">_</span> upper: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> n = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> n.val &lt;= lower || n.val &gt;= upper &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper(n.<span class="keyword">left</span>, lower, n.val) &amp;&amp; helper(n.<span class="keyword">right</span>, n.val, upper)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="이진-검색-트리-반복기"><a href="#이진-검색-트리-반복기" class="headerlink" title="이진 검색 트리 반복기"></a>이진 검색 트리 반복기</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BSTIterator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> queue = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        helper(root.<span class="keyword">left</span>)</span><br><span class="line">        queue.append(root.val)</span><br><span class="line">        helper(root.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> root: <span class="type">TreeNode?</span>) &#123;</span><br><span class="line">        helper(root)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">next</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> queue.removeFirst()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasNext</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !queue.isEmpty</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="이진-검색-트리에서-검색"><a href="#이진-검색-트리에서-검색" class="headerlink" title="이진 검색 트리에서 검색"></a>이진 검색 트리에서 검색</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == val &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">left</span>, val)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">right</span>, val)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="이진-검색-트리에-작업-삽입"><a href="#이진-검색-트리에-작업-삽입" class="headerlink" title="이진 검색 트리에 작업 삽입"></a>이진 검색 트리에 작업 삽입</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insertIntoBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> root: TreeNode? = root, <span class="number">_</span> val: Int = val)</span></span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> l = root.<span class="keyword">left</span> &#123;</span><br><span class="line">                    insert(l, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">left</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> r = root.<span class="keyword">right</span> &#123;</span><br><span class="line">                    insert(r, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">right</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        insert()</span><br><span class="line">        <span class="keyword">return</span> root ?? <span class="type">TreeNode</span>(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="이진-검색-트리에서-노드-삭제"><a href="#이진-검색-트리에서-노드-삭제" class="headerlink" title="이진 검색 트리에서 노드 삭제"></a>이진 검색 트리에서 노드 삭제</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deleteNode</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == key &#123;</span><br><span class="line">            <span class="keyword">if</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> != <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> p = root.<span class="keyword">right</span></span><br><span class="line">                <span class="keyword">while</span> p?.<span class="keyword">left</span> != <span class="literal">nil</span> &#123;  p = p?.<span class="keyword">left</span> &#125;</span><br><span class="line">                p?.<span class="keyword">left</span> = root.<span class="keyword">left</span></span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">right</span></span><br><span class="line">            &#125; <span class="keyword">else</span>  &#123;</span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> ? root.<span class="keyword">left</span> : root.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> key &lt; root.val &#123;</span><br><span class="line">            root.<span class="keyword">left</span> = deleteNode(root.<span class="keyword">left</span>, key)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            root.<span class="keyword">right</span> = deleteNode(root.<span class="keyword">right</span>, key)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="데이터-스트림에서-K-번째로-큰-요소"><a href="#데이터-스트림에서-K-번째로-큰-요소" class="headerlink" title="데이터 스트림에서 K 번째로 큰 요소"></a>데이터 스트림에서 K 번째로 큰 요소</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KthLargest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">var</span> k = <span class="number">0</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> k: <span class="type">Int</span>, <span class="number">_</span> nums: [<span class="type">Int</span>]) &#123;</span><br><span class="line">        <span class="keyword">self</span>.k = k</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123; add(i) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.<span class="built_in">count</span> &lt; k || val &gt; arr.first! &#123;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> i &lt; arr.<span class="built_in">count</span>, val &gt; arr[i] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            arr.insert(val, at: i)</span><br><span class="line">            <span class="keyword">if</span> arr.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">                arr.removeFirst()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr.first!</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="이진-검색-트리의-가장-가까운-공통-조상"><a href="#이진-검색-트리의-가장-가까운-공통-조상" class="headerlink" title="이진 검색 트리의 가장 가까운 공통 조상"></a>이진 검색 트리의 가장 가까운 공통 조상</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">lowestCommonAncestor</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root, <span class="keyword">let</span> pv = p?.val, <span class="keyword">let</span> qv = q?.val <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val &gt;= <span class="built_in">min</span>(pv, qv) &amp;&amp; root.val &lt;= <span class="built_in">max</span>(pv, qv) &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">return</span> root.val &gt; <span class="built_in">max</span>(pv, qv) ? lowestCommonAncestor(root.<span class="keyword">left</span>, p, q) : lowestCommonAncestor(root.<span class="keyword">right</span>, p, q)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="중복-요소가-있습니다-III"><a href="#중복-요소가-있습니다-III" class="headerlink" title="중복 요소가 있습니다 III"></a>중복 요소가 있습니다 III</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="균형-잡힌-이진-트리"><a href="#균형-잡힌-이진-트리" class="headerlink" title="균형 잡힌 이진 트리"></a>균형 잡힌 이진 트리</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isBalanced</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root).<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; (<span class="type">Int</span>, <span class="type">Bool</span>) &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> r = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> (<span class="number">0</span>, <span class="literal">true</span>) &#125;</span><br><span class="line">        <span class="keyword">let</span> rl = helper(r.<span class="keyword">left</span>), rr = helper(r.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span> + <span class="built_in">max</span>(rl.<span class="number">0</span>, rr.<span class="number">0</span>), rl.<span class="number">1</span> &amp;&amp; rr.<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(rl.<span class="number">0</span> - rr.<span class="number">0</span>) &lt;= <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="정렬-된-배열을-이진-검색-트리로-변환"><a href="#정렬-된-배열을-이진-검색-트리로-변환" class="headerlink" title="정렬 된 배열을 이진 검색 트리로 변환"></a>정렬 된 배열을 이진 검색 트리로 변환</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortedArrayToBST</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = nums.<span class="built_in">count</span>, h = n/<span class="number">2</span>, h1 = h+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> r = <span class="type">TreeNode</span>(nums[n/<span class="number">2</span>])</span><br><span class="line">        r.<span class="keyword">left</span> = sortedArrayToBST(<span class="type">Array</span>(nums[<span class="number">0</span>..&lt;h]))</span><br><span class="line">        r.<span class="keyword">right</span> = sortedArrayToBST(<span class="type">Array</span>(nums[h1...]))</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;이진-검색-트리-확인&quot;&gt;&lt;a href=&quot;#이진-검색-트리-확인&quot; class=&quot;headerlink&quot; title=&quot;이진 검색 트리 확인&quot;&gt;&lt;/a&gt;이진 검색 트리 확인&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;tabl
      
    
    </summary>
    
    
    
      <category term="Swift" scheme="https://leihao0.github.io/ko/tags/swift/"/>
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ko/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode N-ary 트리</title>
    <link href="https://leihao0.github.io/ko/leetcode-n-ary-tree/"/>
    <id>https://leihao0.github.io/ko/leetcode-n-ary-tree/</id>
    <published>2020-01-08T16:00:00.000Z</published>
    <updated>2020-12-20T23:53:08.363Z</updated>
    
    <content type="html"><![CDATA[<h2 id="N-ary-Tree-Preorder-Traversal"><a href="#N-ary-Tree-Preorder-Traversal" class="headerlink" title="N-ary Tree Preorder Traversal"></a>N-ary Tree Preorder Traversal</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children.reversed()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="N-및-트리-포스트-오더-순회"><a href="#N-및-트리-포스트-오더-순회" class="headerlink" title="N 및 트리 포스트 오더 순회"></a>N 및 트리 포스트 오더 순회</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">postorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans.reversed()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="N-항-트리-수준-순서-순회"><a href="#N-항-트리-수준-순서-순회" class="headerlink" title="N 항 트리 수준 순서 순회"></a>N 항 트리 수준 순서 순회</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> cur = [root], ans = [[root.val]]</span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            <span class="keyword">let</span> children = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            <span class="keyword">if</span> !children.isEmpty &#123; ans.append( children.<span class="built_in">map</span> &#123; $<span class="number">0</span>.val &#125; ) &#125;</span><br><span class="line">            cur = children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="N-항-트리의-최대-깊이"><a href="#N-항-트리의-최대-깊이" class="headerlink" title="N 항 트리의 최대 깊이"></a>N 항 트리의 최대 깊이</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> cur = root == <span class="literal">nil</span> ? [] : [root!], depth = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            cur = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            depth += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> depth</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="N-진-트리를-이진-트리로-인코딩"><a href="#N-진-트리를-이진-트리로-인코딩" class="headerlink" title="N 진 트리를 이진 트리로 인코딩"></a>N 진 트리를 이진 트리로 인코딩</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">encode</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> tn = <span class="type">TreeNode</span>(root.val); <span class="keyword">var</span> p: <span class="type">TreeNode?</span> = tn</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> n = root.children.first &#123;</span><br><span class="line">            p?.<span class="keyword">left</span> = encode(n); p = p?.<span class="keyword">left</span></span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> root.children[<span class="number">1</span>...] &#123;</span><br><span class="line">                p?.<span class="keyword">right</span> = encode(n); p = p?.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tn</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">decode</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = <span class="type">Node</span>(root.val); <span class="keyword">var</span> p = root.<span class="keyword">left</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> l = decode(p) &#123; n.children.append(l) &#125;</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> q = p?.<span class="keyword">right</span>, <span class="keyword">let</span> r = decode(q) &#123;</span><br><span class="line">            n.children.append(r); p = q</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="N-항-트리-직렬화-및-역-직렬화"><a href="#N-항-트리-직렬화-및-역-직렬화" class="headerlink" title="N 항 트리 직렬화 및 역 직렬화"></a>N 항 트리 직렬화 및 역 직렬화</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">serialize</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="string">&quot;$&quot;</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="string">&quot;\(root.val),\(root.children.count),&quot;</span></span><br><span class="line">        <span class="keyword">for</span> child <span class="keyword">in</span> root.children &#123;</span><br><span class="line">            s += serialize(child)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">(<span class="number">_</span> data: String)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> arr = data.components(separatedBy: <span class="string">&quot;,&quot;</span>).<span class="built_in">compactMap</span> &#123; <span class="type">Int</span>($<span class="number">0</span>) &#125;; <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">()</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> i &gt;= arr.<span class="built_in">count</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">Node</span>(arr[i])</span><br><span class="line">            i += <span class="number">2</span>; <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;arr[i-<span class="number">1</span>] &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> a = deserialize() &#123; n.children.append(a) &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deserialize()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;N-ary-Tree-Preorder-Traversal&quot;&gt;&lt;a href=&quot;#N-ary-Tree-Preorder-Traversal&quot; class=&quot;headerlink&quot; title=&quot;N-ary Tree Preorder Traversal&quot;&gt;&lt;/a&gt;N-ary Tree Preorder Traversal&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;preorder&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; root: Node?)&lt;/span&gt;&lt;/span&gt; -&amp;gt; [&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; stack = [root], ans = [&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;]()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; node = stack.popLast(), &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; n = node &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans.append(n.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            stack += n.children.reversed()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Swift" scheme="https://leihao0.github.io/ko/tags/swift/"/>
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ko/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 바이너리 검색</title>
    <link href="https://leihao0.github.io/ko/LeetCode-Binary-Search/"/>
    <id>https://leihao0.github.io/ko/LeetCode-Binary-Search/</id>
    <published>2020-01-06T16:00:00.000Z</published>
    <updated>2020-12-20T23:53:08.363Z</updated>
    
    <content type="html"><![CDATA[<h2 id="이진-검색"><a href="#이진-검색" class="headerlink" title="이진 검색"></a>이진 검색</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123; i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; j = mid-<span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Sqrt-x"><a href="#Sqrt-x" class="headerlink" title="Sqrt (x)"></a>Sqrt (x)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mySqrt</span><span class="params">(<span class="number">_</span> x: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> target = <span class="type">Int</span>(sqrt(<span class="type">Double</span>(x)))</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = x</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> mid == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            mid &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="더-높거나-낮은-숫자-추측"><a href="#더-높거나-낮은-숫자-추측" class="headerlink" title="더 높거나 낮은 숫자 추측"></a>더 높거나 낮은 숫자 추측</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> : <span class="title">GuessGame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">guessNumber</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">switch</span> guess(mid) &#123;</span><br><span class="line">                <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">                    j = mid-<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    i = mid+<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> mid</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="회전-정렬-된-배열에서-검색"><a href="#회전-정렬-된-배열에서-검색" class="headerlink" title="회전 정렬 된 배열에서 검색"></a>회전 정렬 된 배열에서 검색</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j - i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &gt;= nums[i] &#123;</span><br><span class="line">                (target &gt;= nums[i] &amp;&amp; target &lt; nums[mid]) ? (j = mid-<span class="number">1</span>) : (i = mid+<span class="number">1</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                (target &lt;= nums[j] &amp;&amp; target &gt; nums[mid]) ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="첫-번째-잘못된-버전"><a href="#첫-번째-잘못된-버전" class="headerlink" title="첫 번째 잘못된 버전"></a>첫 번째 잘못된 버전</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>: <span class="title">VersionControl</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">firstBadVersion</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> h = i + (j-i)/<span class="number">2</span></span><br><span class="line">            isBadVersion(h) ? (j = h-<span class="number">1</span>) : (i = h + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="피크-요소-찾기"><a href="#피크-요소-찾기" class="headerlink" title="피크 요소 찾기"></a>피크 요소 찾기</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[mid+<span class="number">1</span>] ? (r = mid) : (l = mid+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> l: Int, <span class="number">_</span> r: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (l == r) &#123; <span class="keyword">return</span> l &#125;</span><br><span class="line">            <span class="keyword">let</span> mid = l + (r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> (nums[mid] &gt; nums[mid+<span class="number">1</span>]) ? search(l, mid) : search(mid+<span class="number">1</span>, r)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> search(<span class="number">0</span>, nums.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="회전-정렬-된-배열에서-최소값-찾기"><a href="#회전-정렬-된-배열에서-최소값-찾기" class="headerlink" title="회전 정렬 된 배열에서 최소값 찾기"></a>회전 정렬 된 배열에서 최소값 찾기</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="범위-검색"><a href="#범위-검색" class="headerlink" title="범위 검색"></a>범위 검색</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchRange</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> [-<span class="number">1</span>, -<span class="number">1</span>] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                i = mid; j = mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123;</span><br><span class="line">                i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                j = mid-<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i-<span class="number">1</span> &gt;= <span class="number">0</span>, nums[i-<span class="number">1</span>] == target &#123; i -= <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j+<span class="number">1</span> &lt; nums.<span class="built_in">count</span>, nums[j+<span class="number">1</span>] == target &#123; j += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i] == target ? [i, j] : [-<span class="number">1</span>, -<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="K-개의-가장-가까운-요소-찾기"><a href="#K-개의-가장-가까운-요소-찾기" class="headerlink" title="K 개의 가장 가까운 요소 찾기"></a>K 개의 가장 가까운 요소 찾기</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findClosestElements</span><span class="params">(<span class="number">_</span> arr: [Int], <span class="number">_</span> k: Int, <span class="number">_</span> x: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.isEmpty &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = arr.<span class="built_in">count</span>, ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> arr[mid] == x &#123; i = mid &#125;</span><br><span class="line">            arr[mid] &lt; x ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        j = i+k &lt; arr.<span class="built_in">count</span> ? i+k : arr.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        i = (i-k) &gt;= <span class="number">0</span> ? (i-k) : <span class="number">0</span></span><br><span class="line">        ans = <span class="type">Array</span>(arr[i...j])</span><br><span class="line">        <span class="keyword">while</span> ans.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">            <span class="built_in">abs</span>(x-ans.first!) &lt;= <span class="built_in">abs</span>(x-ans.last!) ? ans.removeLast() : ans.removeFirst()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="가장-가까운-이진-검색-트리-값"><a href="#가장-가까운-이진-검색-트리-값" class="headerlink" title="가장 가까운 이진 검색 트리 값"></a>가장 가까운 이진 검색 트리 값</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">closestValue</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> target: Double)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = root, v = p!.val</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">abs</span>(<span class="type">Double</span>(p!.val)-target) &lt; <span class="built_in">abs</span>(<span class="type">Double</span>(v)-target) &#123; v = p!.val &#125;</span><br><span class="line">            p = target &lt; <span class="type">Double</span>(p!.val) ? p!.<span class="keyword">left</span> : p!.<span class="keyword">right</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="알-수없는-크기의-정렬-된-배열에서-검색"><a href="#알-수없는-크기의-정렬-된-배열에서-검색" class="headerlink" title="알 수없는 크기의 정렬 된 배열에서 검색"></a>알 수없는 크기의 정렬 된 배열에서 검색</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> reader: ArrayReader, <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> reader.<span class="keyword">get</span>(<span class="number">0</span>) == target &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> reader.<span class="keyword">get</span>(j) &lt; target &#123;</span><br><span class="line">            i = j; j &lt;&lt;= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)&gt;&gt;<span class="number">1</span>, v = reader.<span class="keyword">get</span>(mid)</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            v &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Pow-x-n"><a href="#Pow-x-n" class="headerlink" title="Pow (x, n)"></a>Pow (x, n)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">myPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="number">0</span>: <span class="number">1.0</span>, <span class="number">1</span>: x]</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">fastPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n] &#123; <span class="keyword">return</span> v &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> h = fastPow(x, n/<span class="number">2</span>), v = n&amp;<span class="number">1</span> == <span class="number">0</span> ? h*h : x*h*h</span><br><span class="line">            dict[n] = v</span><br><span class="line">            <span class="keyword">return</span> v</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> v = fastPow(x, <span class="built_in">abs</span>(n))</span><br><span class="line">        <span class="keyword">return</span> n &lt; <span class="number">0</span> ? <span class="number">1</span>/v : v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="유효한-완벽한-제곱"><a href="#유효한-완벽한-제곱" class="headerlink" title="유효한 완벽한 제곱"></a>유효한 완벽한 제곱</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isPerfectSquare</span><span class="params">(<span class="number">_</span> num: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> x = (num+<span class="number">1</span>)/<span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> x*x &gt; num &#123;</span><br><span class="line">            x = (x + num/x) / <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> x*x == num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="대상보다-큰-가장-작은-문자-찾기"><a href="#대상보다-큰-가장-작은-문자-찾기" class="headerlink" title="대상보다 큰 가장 작은 문자 찾기"></a>대상보다 큰 가장 작은 문자 찾기</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">nextGreatestLetter</span><span class="params">(<span class="number">_</span> letters: [Character], <span class="number">_</span> target: Character)</span></span> -&gt; <span class="type">Character</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">c</span> <span class="keyword">in</span> letters &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">c</span> &gt; target &#123; <span class="keyword">return</span> <span class="built_in">c</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> letters.first!</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="회전-정렬-된-배열에서-최소값-찾기-1"><a href="#회전-정렬-된-배열에서-최소값-찾기-1" class="headerlink" title="회전 정렬 된 배열에서 최소값 찾기"></a>회전 정렬 된 배열에서 최소값 찾기</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            nums[mid] &gt;= nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="회전-정렬-배열-II에서-최소값-찾기"><a href="#회전-정렬-배열-II에서-최소값-찾기" class="headerlink" title="회전 정렬 배열 II에서 최소값 찾기"></a>회전 정렬 배열 II에서 최소값 찾기</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] &gt; nums[r] &#123; l = mid+<span class="number">1</span> &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; nums[r]  &#123; r = mid &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123; r -= <span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="두-배열의-교차점"><a href="#두-배열의-교차점" class="headerlink" title="두 배열의 교차점"></a>두 배열의 교차점</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="두-배열의-교차-II"><a href="#두-배열의-교차-II" class="headerlink" title="두 배열의 교차 II"></a>두 배열의 교차 II</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Two-Sum-II-입력-배열이-정렬-됨"><a href="#Two-Sum-II-입력-배열이-정렬-됨" class="headerlink" title="Two Sum II-입력 배열이 정렬 됨"></a>Two Sum II-입력 배열이 정렬 됨</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(<span class="number">_</span> numbers: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = numbers.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> v =  numbers[i]+numbers[j]</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            v &lt; target ? (i+=<span class="number">1</span>) : (j-=<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> [i+<span class="number">1</span>, j+<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="중복-번호-찾기"><a href="#중복-번호-찾기" class="headerlink" title="중복 번호 찾기"></a>중복 번호 찾기</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;(), i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(nums[i]) &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(nums[i]); i+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="정렬-된-두-배열의-중앙값"><a href="#정렬-된-두-배열의-중앙값" class="headerlink" title="정렬 된 두 배열의 중앙값"></a>정렬 된 두 배열의 중앙값</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> nums = nums1+nums2</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span>, j &lt; nums2.<span class="built_in">count</span> &#123;</span><br><span class="line">            nums1[i] &lt; nums2[j] ? (nums[k] = nums1[i], i+=<span class="number">1</span>) : (nums[k] = nums2[j], j+=<span class="number">1</span>); k+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span> &#123; nums[k] = nums1[i]; i+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j &lt; nums2.<span class="built_in">count</span> &#123; nums[k] = nums2[j]; j+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> h = nums.<span class="built_in">count</span>/<span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">count</span>&amp;<span class="number">1</span> == <span class="number">1</span> ? <span class="type">Double</span>(nums[h]) : <span class="type">Double</span>(nums[h-<span class="number">1</span>]+nums[h])/<span class="number">2.0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="K-번째-가장-작은-쌍-거리-구하기"><a href="#K-번째-가장-작은-쌍-거리-구하기" class="headerlink" title="K 번째 가장 작은 쌍 거리 구하기"></a>K 번째 가장 작은 쌍 거리 구하기</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">smallestDistancePair</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> nums = nums.sorted()</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, h = nums.last!-nums.first!</span><br><span class="line">        <span class="keyword">while</span> l &lt; h &#123;</span><br><span class="line">            <span class="keyword">let</span> m = (l+h)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span>, l1 = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> r1 <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (nums[r1]-nums[l1]) &gt; m &#123; l1 += <span class="number">1</span> &#125;</span><br><span class="line">                <span class="built_in">count</span> += r1-l1</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">count</span> &gt;= k ? (h = m): (l = m+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="분할-배열-최대-합계"><a href="#분할-배열-최대-합계" class="headerlink" title="분할 배열 최대 합계"></a>분할 배열 최대 합계</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;이진-검색&quot;&gt;&lt;a href=&quot;#이진-검색&quot; class=&quot;headerlink&quot; title=&quot;이진 검색&quot;&gt;&lt;/a&gt;이진 검색&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; nums: [Int], &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; target: Int)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, j = nums.&lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt;= j &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; mid = i + (j-i)/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; nums[mid] == target &amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mid &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; nums[mid] &amp;lt; target &amp;#123; i = mid+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123; j = mid-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Swift" scheme="https://leihao0.github.io/ko/tags/swift/"/>
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ko/tags/leetcode/"/>
    
  </entry>
  
</feed>
