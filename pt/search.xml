<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Mais de dez dias antes da formatura</title>
    <url>/pt/Before-graduation/</url>
    <content><![CDATA[<p>Eu tinha pensamentos em minha mente há um tempo, mas não tive tempo de escrever.<br>Todos os tipos de reuniões, reserva de ingressos, verificação de informações de aluguel, nível 6 e, em seguida, correr para ver o proprietário naquela noite, correndo em cada distrito, verificando o papel do quarto<br>Quando o papel do quarto está para ser resolvido, no hotel, acariciando os livros, posso finalmente relaxar. </p>
<a id="more"></a>

<h2 id="Juntar"><a href="#Juntar" class="headerlink" title="Juntar"></a>Juntar</h2><p>Este sempre foi o meu menos favorito para participar. “Ou Vulgar or Lonely” de Schopenhauer é um pouco extremo, mas tem alguma verdade.<br>Além disso, tem algo a ver com minha introversão.No teste MBTI, a introversão realmente quebrou 85. Eu sempre gosto de ficar quieto em vez de lugares lotados e barulhentos.<br>E não gosto muito de fotografia. Não sei se é um fragmento de “Alma aprisionada” que vi quando era criança: a fotografia vai sugar minha alma e prendê-la em um pequeno pedaço de papel, implantando o subconsciente como o início.<br>Depois de me formar no ensino fundamental e médio, saí com pressa, lembro que nas fotos do grupo do ensino médio, os copos d’água da minha mesa estavam todos lá, mas as pessoas não estavam.<br>Desta vez, me formei, mas tirei muitas fotos, é claro, a maioria delas foi misturada com a irmã Orange e o grande time. </p>
<p>Juventude, é realmente incrível, com tanta aura inata, tantas possibilidades<br>Lembro-me de ir ao pacote noturno uma vez por semana no primeiro ano, e ir para a cama às 3 ~ 4 horas todos os dias durante as férias de inverno. Após o primeiro ano, é óbvio que o corpo não é bom o suficiente, e o último ano é ainda mais óbvio. Uma vez em um hotel, não dormi até as 3 horas. Quando me olhei no espelho no dia seguinte, fiquei surpreso ao encontrar as lendárias olheiras. Antes, eu me perguntava como a heroína do romance dizia que tinha olheiras. Eu nunca soube o que eram. Rindo secretamente de que não conseguem se ajustar, não entendem de saúde … </p>
<p>No passado, eu vinha registrando as partes do ano por meio de palavras. Agora acho que o único resultado de fazer isso é relembrar os anos da juventude do ano à moda antiga, o tempo de cometer 2 e o clima de cometer 2 naquela época. Não sei como era naquela época. </p>
<h2 id="Sair-da-escola"><a href="#Sair-da-escola" class="headerlink" title="Sair da escola"></a>Sair da escola</h2><p>Arrume as coisas e espere meu irmão sair do trabalho<br>Quase na hora, um grupo de pessoas no quarto saiu decididamente para comer …<br>Cui Wei, meu ex-colega de classe do No. 1 Middle School, me ajudou a pegar o pacote, Viagra, obrigado! Quando liguei, peguei meu telefone para verificar o destino e descobri que quando me esqueci de descer para procurar por você no quarto, você não estava em lugar nenhum<br>Embora você corra tão rápido, mas ainda tenho que agradecer </p>
<p>Quando cheguei na casa do meu irmão e vi sua nova casa, eu sabia que tinha que comprar papel para Shenma. Sempre quis alugar … </p>
<h2 id="Nivel-6"><a href="#Nivel-6" class="headerlink" title="Nível 6"></a>Nível 6</h2><p>Acabado de chegar na sala de exames e sentando-se, um menino se aproximou, alegando ser “Ming Ji”, que originalmente era integrante do grupo Lige<br>Achei que ele fosse um estudante do segundo ano, surpreso! Descobri que a esquerda é só do segundo ano, suspiro …<br>Não admira que tantos sapatos de crianças do último ano tenham perdido o exame, mas felizmente o monitor estava com Orange. Perseverando em sentar pela última vez, o resultado não importa mais </p>
<h2 id="Hangzhou"><a href="#Hangzhou" class="headerlink" title="Hangzhou"></a>Hangzhou</h2><p>Mais de dez dias atrás, comecei a encontrar informações online, vários materiais e um resumo do mapa mental<br>Na noite após o teste da sexta série, tive uma pequena reunião com eles, Kawaii comeu o macarrão mais caro da minha vida, e então embarquei no trem<br>O alarme das 6h20 foi acionado e a bandeirinha tocou para que eu prestasse atenção no cavalo mágico e disse que eu mal conseguia dormir à noite. E realmente acordar basicamente uma vez por hora<br>Fui ao banheiro às 5 horas da manhã e voltei a dormir. De repente, acordei às 6 horas e bebi um pouco do Nutrition Express. Encontrei no Google Maps e descobri que estava no distrito de Yuhang!<br>Não são 6,40? Então eu ouvi “Eu desci em Hangzhou”, O \ _ \ _ O “… </p>
<p>Depois de sair da estação de trem, não há nada de chocante. Parece que a estação da minha cidade natal é linda.<br>google map, procure a rota 49, veja o ponto de ônibus ali, caminhe, dê a volta e descubra que não há nada </p>
<p>k49 7:30 para o Union Building, vá para casa e aprenda que você pode entrar na sala às 8 horas, guardar suas mochilas e descer para a empresa<br>Eu fui da AB e descobri que alguém estava praticando Taijiquan, enfim, Dai Yingdu veio, depois de assistir um pouco, ele subiu e falou sobre praticar boxe de Chen. Quando questionado sobre a sensação de ar, eu disse que meus dedos incharam um pouco quando eu abri, e então puxei os sentimentos de outras pessoas, e disseram que estava errado o (╯ □ ╰) o </p>
<p>Bem na hora da chuva, é comum encontrar casas na chuva<br>Mas depois que paguei o depósito de Shenma, a casa começou e a chuva parou … </p>
<p>Eu sei que é muito limpo e me sinto assim quando saio do trem.<br>Mas parece tão<br>Até que vi duas meninas andando descalças na estrada …<br>Se você está em Hefei, o sangue pingando é obrigatório … </p>
<p>Kawaii disse uma vez para comprar sandálias, mas nunca sentiu<br>Os sapatos de rede estavam todos ensopados quando saí uma manhã<br>Eu vi as duas garotas naquela época<br>De repente, minha mente mudou e, mais tarde, descobri que muitas pessoas usam chinelos<br>Parece que as calças de praia + chinelos dos programadores de nível tio não são falsas. </p>
<p>Não consigo usar o banco on-line no meu computador para comprar passagens de trem<br>Este fenômeno ocorre na casa do irmão Hao. Naquela época, ele a comprou sem problemas depois de mudar para seu computador.<br>Achei que fosse um problema com o IE9, redefinindo para redefinir o estado inicial, não<br>Incapaz de reinstalar o sistema<br>Mas parece que o espelhamento está errado, e a tela azul está diretamente …<br>E o sistema de cinto de madeira restaura a unidade flash USB, então não posso deixar de pedir a JS pela unidade do sistema<br>Originalmente, pensei que a empresa era originalmente TI e que o disco do sistema era uma obrigação.Pensei que havia um pequeno departamento de TI dentro. </p>
<p>Desta vez, comprar passagens para Jiaxing me atrasou a maior parte do dia, mas minha irmã acabou comprando para mim.<br>Este tipo de banco regional não funciona bem quando sai da região. Claro, enquanto eu ficar em Anhui em paz, o Banco Huixing pode confortavelmente dizer que não o culpo ou o culpo. </p>
<p>É estranho sair pela primeira vez<br>À tarde, eu ainda estava fazendo os exames de nível 6, estava em Hangzhou depois que dormi à noite e estou indo para Jiaxing novamente hoje.<br>Para lugares que não visitei, sempre parece um mapa inexplorado em um jogo de estratégia em tempo real. Está escuro e o mapa só pode ser iluminado quando eu passo. </p>
<p>Correu para muitos lugares para ver o jornal da casa<br>Gostaria de agradecer a Ying Children’s Shoes e Wearing Children’s Shoes por me ajudar a encontrar papelaria em Hangzhou, onde não conheço. Principalmente quando eu estava calçando sapatos de criança, o papel do quarto já estava colocado, e eu continuei me acompanhando na estrada.Com a insistência constante da minha namorada, cheguei ao penúltimo papel do quarto. </p>
<p>No final, pelo alto preço de 1100, aluguei um quarto com TV, sinal, piso de madeira, telão, colchão, mesa e cadeira, sala e sala longe da empresa … </p>
]]></content>
      <tags>
        <tag>AAU</tag>
      </tags>
  </entry>
  <entry>
    <title>Treinamento FEEL</title>
    <url>/pt/FEEL-Training/</url>
    <content><![CDATA[<h2 id="primeiro-dia"><a href="#primeiro-dia" class="headerlink" title="primeiro dia"></a>primeiro dia</h2><p>No primeiro dia do treinamento, os executivos se revezaram para apresentá-los.<br>Primeira vez que vi um verdadeiro CEO COO CTO CFO<br>É bastante constrangedor almoçar ao meio-dia e parece uma sala privada reservada para executivos. Como resultado, todos os executivos voltaram e algumas pessoas entraram. Felizmente, alguns colegas vieram um após o outro.<br>Depois de assinar o contrato à tarde, fui para minha casa.<br>Ao lado da janela, há um grande vão entre as cortinas. O sol escaldante se espalha pelo meu monitor LCD sem nenhum obstáculo e não consigo ver nada …<br>Claro, depois descobri que eu não era o pior. O pior era o nosso chefe. Outro colega disse diretamente que estava aqui para tomar sol … </p>
<a id="more"></a>

<p>Instale o computador, remova o antivírus tyrant e configure-o para seu ambiente normal.<br>Claro, a velocidade da Internet da empresa é muito lenta … Volte e copie algum software grande.<br>Então, eu vi irmã You. Mu pensou em me conhecer.Depois de conversar um pouco, todo o departamento de navegadores teve uma pequena reunião. </p>
<p>Infelizmente, esta frase é muito espirituosa. Todo mundo é técnico, tão silencioso, estou sem palavras.<br>Voltei para o chefe e designei uma tarefa. Depois de um tempo, vi que já passava das 6 horas. Não está fora do trabalho? Porque não há movimento em torno de Shenma? Questionado no grupo, descobriu-se que todos estavam lutando para sair do trabalho.<br>Eu não tive escolha a não ser ficar parado. Aos 20 anos, vi o instrutor brilhar. O mentor, eu tive que seguir seus passos, disse olá para o chefe e voltou correndo ~ </p>
<h2 id="O-proximo-dia"><a href="#O-proximo-dia" class="headerlink" title="O próximo dia"></a>O próximo dia</h2><p>Dividido aleatoriamente em equipes, com nomes de equipes e slogans<br>Como resumir suas opiniões quando contatado pela primeira vez<br>No final, decidimos por Bubble Fish / I am Bubble Fish, adoro Bubble Fish como nome e slogan da equipe<br>(No terceiro dia vi um peixe palhaço fofo, trouxe para brincar e dei uma olhada mais de perto no “peixe borbulhante”, estúpido, que coincidência?)<br>Cartaz: Y + para IU é uma vaca. As pinturas de alguns peixes borbulhantes são vivas, muito Q </p>
<p>Os vários processos são intrincados e complicados. Acho que o que posso usar no momento é o departamento de administração - só há uma chave de gaveta. O sol está forte. </p>
<p>No final das contas, a imitação foi demais. Eu sinto que não é um problema de observação, mas um mal-entendido de pensamento. Eu li muitos livros sobre pensamento, mas ainda vejo.<br>Ou onde xi é bom nesse tipo de problema, é o primeiro a resolvê-lo. </p>
<h2 id="Terceiro-dia"><a href="#Terceiro-dia" class="headerlink" title="Terceiro dia"></a>Terceiro dia</h2><p>O tempo está cada vez mais apertado. Ontem ainda havia algum tempo livre. Voltei correndo para configurar o ambiente de desenvolvimento e hoje acabou.<br>Vamos desenhar o logotipo da SKY, todos irão<br>O objetivo original é permitir que todos saibam que devem cumprir as normas </p>
<p>Então eu dei algumas fotos aleatórias e escrevi um jornal<br>Pensei em comprar Apple. Felizmente, nosso grupo não iniciou a discussão. Depois de descobrir que outros grupos também usavam isso, decidimos desistir<br>Existem algumas questões delicadas, Xiaodong disse, não mencione, então esqueça </p>
<p>A irmã Yang Yang postou 10 perguntas, que serão transformadas em um esboço a ser apresentado à noite, e então as perguntas serão inseridas.<br>Faça uma refeição rápida ao meio-dia e colete as respostas às perguntas<br>Não demorou muito para o treinamento da tarde<br>Afirmando ser um treinamento de lavagem cerebral, entre os quais o vídeo YY na Internet móvel, eu realmente quero nascer cem anos depois<br>O grupo foi designado para atuar de forma inovadora e adotamos a opinião de Yuan.<br>Embora o irmão Yuan seja um pequeno MM, ele é muito aberto e apaixonado.<br>Zhao Yang é realmente talentoso como apresentador, ele usou um monte de besteiras para preencher a cena durante todo o processo.<br>Xiaodong vive dizendo que ele não pode fazer bem, mas ele se saiu bem na hora<br>Eu sou o árbitro, é puro molho de soja ~ </p>
<p>Então temos apenas uma hora para discutir o esboço da noite<br>O irmão Yuan sempre foi uma pessoa de pensamento mais ativo. Mais tarde, no processo de discussão, finalmente descobri que não era realmente um pós-90, não tinha morte cerebral. </p>
<p>Até o primeiro grupo entrar em campo, ainda não definimos o final final, este é o lugar para prestar atenção a seguir.<br>O desempenho geral do esboço é muito bom, logo abaixo do cartão do meio. </p>
<p>Nessa altura, vi “Não viva no mundo dos outros”. Saí e bebi um pouco de água. Acabei de encontrar dois recrutas da escola que estavam internos há muito tempo. O outro ficava me perguntando sobre a situação em Hefei e qual universidade.<br>Claro que é a China Other University. Depois de dizer isso duas vezes, os dois pareceram confusos, o que fez minha confiança cair drasticamente, e meu inglês oral ainda falhou …<br>O que me surpreendeu foi que Hang Dian também era um COU (pesquisei, e não era. Claro, essas escolas NB não precisam dessas coisas, que é fundamentalmente diferente da minha).<br>Eu disse que a maioria de nossas escolas encontram empregos localmente, geralmente cerca de 2 mil ou mais. Ele torceu os lábios. Depois que pensei sobre isso, ele provavelmente se esqueceu dos preços baixos em Hefei.<br>Então JS veio e soube que a biblioteca do Baidi poderia pegar livros emprestados na sexta-feira.<br>Depois de jogar Wii, voltei para a sala de aula tonto, acabou o show … </p>
<p>Depois que tudo acabou, a irmã Yang Yang disse …<br>…<br>Bem, o tempo está mais apertado como o esperado. Vamos falar mais ou menos sobre a distribuição do planejamento de marketing. Afinal, era muito tarde e se desfez. </p>
<p>Quando cheguei ao portão, encontrei o irmão Yuan e disse que ele queria levar um pacote. Enfim, já é muito tarde, e no jardim da mansão, vou acompanhar e dar uma olhada.<br>Andar com esse tipo de papel feminino me faz sentir mais perigoso.<br>Depois de caminhar por um longo tempo, ela finalmente encontrou Yunda Point e soube que tinha sido levada por alguém que ela conhecia.<br>Agora o que aconteceu comigo, flash. </p>
<p>O primeiro táxi nunca parou! Irmã, depois de entrar no segundo carro, disse ao motorista que a frente foi recusada? Vendo meu rosto silencioso, ele também explicou longamente o anterior, para que eu parasse de reclamar. Estou realmente cansado, então coloque desta forma, como posso fazer uma reclamação? </p>
<p>Tenho que lavar roupa quando voltar. São tantas coisas triviais … </p>
<h2 id="Quarto-dia"><a href="#Quarto-dia" class="headerlink" title="Quarto dia"></a>Quarto dia</h2><p>O irmão Hao pode realmente dizer, apenas algumas horas de cada vez, se minha garganta fica rouca prematuramente<br>Mais tarde, soube que já havia sido conferencista e praticava antes, não é de admirar<br>Há uma tempestade de pensamentos, o uso de cabideiros de ferro. O equilíbrio não está muito bom, você pode usar o algoritmo score = total / 10 para voltar ao equilíbrio<br>É claro que o mercado não é justo. Sempre há empresas monopolistas que dão a palavra final. Eu disse ao grupo que vocês não deveriam se preocupar muito com os outros.<br>Agachado, infelizmente, o tai chi só esquece isso<br>O agachamento é estimado em menos de dois minutos, então é azedo.<br>Há uma vozinha no meu coração, sou um herói intelectual, que não consegue reconhecer a posição, e sempre me esforço ao máximo. Se você cair, a equipe ficará incompleta amanhã.<br>Eu percebi isso e pulei imediatamente (ainda tenho força para pular …)<br>Antes do jogo de tabuleiro à noite, encontrei a irmã Yang Yang durante o jantar e a ajudei a mexer em algo no departamento administrativo.<br>Em seguida, correu para o tênis de mesa e esfregou duas bolas<br>O jogo de tabuleiro é um jogo de matar, todos jogam bem oi<br>O irmão Yuan fala muito, Barabara confundiu a todos<br>Ajude Y + a consertar a conexão sem fio à noite, lavar e dormir </p>
<h2 id="Quinto-dia"><a href="#Quinto-dia" class="headerlink" title="Quinto dia"></a>Quinto dia</h2><p>Após o treinamento de hoje, eu com cautela comentei com o chefe, sentado e sem fazer nada, não há nada que eu possa fazer<br>O chefe imediatamente disse que Seng já havia preparado a tarefa, mas não disse nada.<br>(Acontece que era assim, T.T)<br>… </p>
<h2 id="Sexto-dia"><a href="#Sexto-dia" class="headerlink" title="Sexto dia"></a>Sexto dia</h2><p>Orientação do Lago Oeste<br>Partimos às 6h50 e leva cerca de uma hora e meia para chegar à Ponte Quebrada.<br>Eu também conheci o capitão no ônibus, e Yanjiao também estava neste ônibus … </p>
<p>O Lago Oeste está muito quente, a equipe comprou alguns fãs<br>Pegue a tarefa e comece </p>
<p>O fragmento clássico da lenda da nova senhora branca, bela, bela, deliciosa comida para turistas estrangeiros para escrever “Olá, Hangzhou …” e outras tarefas<br>Um grande grupo de pessoas nos cumprimentou, o irmão Yuan Yijia correu imediatamente<br>Bem, o inglês é realmente intermitente, e ainda conto com o guia turístico para traduzir …<br>O diálogo entre eles ainda pode ser entendido, mas deixe-me apenas dizer …<br>Havia uma senhora baixinha ao meu lado, que parecia ser da raça amarela, e quantos anos eu tinha. Ela estava lutando na época e finalmente conversou com um estrangeiro pela primeira vez e fez uma pergunta comparativamente 2 “Onde está você” de?”<br>EUA Austrália ou algo assim<br>Então eu não sei o que dizer … É realmente um inglês idiota … </p>
<p>A primeira tarefa foi vendada, a equipe esticou a corda de 10 metros em um pentágono regular. </p>
<p>Comecei a usar Xiaodong 1,78 com o mesmo comprimento e comprimento lateral, deixando muita corda<br>Na verdade, o instrutor não deixou isso claro, então não pode haver mais<br>Claro que todos nós admitimos nossos próprios erros, e essa negligência não mencionou </p>
<p>A princípio pensei em medir o ângulo manualmente, 108.<br>Mais tarde descobri que eles estão medindo a distância até os cantos, o que é mais conveniente e preciso </p>
<p>Depois que todos pensamos que é um pentágono regular, ele termina<br>Antes de tirar a venda, eu ainda estava ansioso, afinal, eu fiz isso por sentimento.<br>Depois de ver os gráficos, suspirei de alívio e suspirei que a cooperação é realmente incrível.<br>Finalmente concluímos o primeiro item com notas completas </p>
<p>Quando eu chegar ao museu, recomendo fortemente entrar e soprar o ar condicionado e o resfriamento, mas algumas pessoas temem que não haja tempo suficiente e possam não conseguir sair (囧), então todos continuam na estrada </p>
<p>A segunda tarefa adivinha a palavra </p>
<p>Eu não reagi ainda, o irmão Yuan já fez as duas coisas …<br>Ο \ _ \ _ Ο “…<br>Minha única contribuição é: deixá-los colocar o que está preso de lado, passar para o próximo e, finalmente, usar o método de eliminação para ver se há um avanço<br>No final, terminamos em mais de 3 minutos, mas infelizmente cometemos dois erros (aprendemos depois que temos a maior taxa de acertos e o menor tempo) </p>
<p>A terceira tarefa: superar as ogivas nucleares </p>
<p>Uma área quadrada com comprimento lateral de quatro metros, há um copo dentro. Use corda, elástico, pauzinhos e canudos para colocar uma garrafa de água e tirar o copo. Durante todo o processo, as pessoas não podem entrar na área e cordas e outros objetos não podem cair no chão. </p>
<p>Minha sugestão é fazer dois furos para que você só precise levantar a garrafa acima do copo, embora um pouco de água possa derramar na estrada<br>Mas eles temem que seja mais lento<br>Mais tarde, eu aprendi que o grupo Qianjiang No. 7 de Fanxi usava esse método, agora pense nisso, isso pode ser mais lento, mas pode economizar o tempo de amarrar corda + despejar água.<br>Por fim, usamos o método mais tradicional, despejar água </p>
<p>Tira o copo<br>Quero dar mais corda, dar corda na direção oposta e depois puxar. Quando assisto ao vídeo, outro grupo desse método falhou. Felizmente, eles disseram que era instável. Use um nó corrediço e rejeitou o plano.<br>Então eu vi o capitão brincando com os hashis e elásticos novamente, então fui até lá e perguntei o que ele pensava (eu não vou errar, não posso ajudá-lo aí)<br>Mais tarde, imaginei que fui vista pelo irmão Yuan segurando o elástico, ela de repente saltou e gritou: “Eu sei, eu sei” </p>
<p>Dobre os elásticos N juntos, separe-os com quatro cordas e, em seguida, enrole a colcha, afrouxe-a, espere que os elásticos envolvam o copo e levante-o lentamente<br>Vamos ouvir! ! !<br>Aí pensei imediatamente em alguns pontos para prestar atenção. Afinal, o elástico tem mais elasticidade. Se a copa do bastidor não combinar bem, é mais provável que ela caia.<br>Então começou<br>Desta vez, estou encarregado de observar<br>Jepen parece um pouco nervoso, a corda não consegue relaxar, a xícara balançou<br>Nossas vozes se coordenaram e, finalmente, encerrou este último evento com uma pontuação completa </p>
<p>Pegar o ônibus<br>Jepen disse que os outros grupos foram concluídos e não há tempo suficiente (sem esses incentivos, ainda há muitos grupos que não chegaram depois que voltamos)<br>Voltamos, mas felizmente não voltamos …<br>De repente, o ônibus chegou e todos correram para o lado oposto da estrada (Xiaodong e eu sentimos que a vida ainda é importante, é o mais lento atravessar a estrada)<br>O capitão do ônibus de repente viu o número de telefone de uma pessoa de contato no último ponto de ônibus, ainda sinto que é necessário dizer algo, caso ainda esteja lá nos esperando.<br>Após a ligação, eu sabia que tinha voltado … </p>
<p>seu<br>Eu não esperava que a irmã Bobo aceitasse. Foi muito interessante na época.<br>Eu me vi vendado, parado ali, OK 2 Ah, não vamos dizer …<br>O grupo de Yanjiao usou o método de apertar uma garrafa para derramar água em um copo a dois metros de distância em “Smart Nuclear Warhead” e, mais tarde, quis subir em uma árvore.<br>Alguns querem amarrar as pessoas e enforcá-las<br>Muito NB </p>
<p>Finalmente<br>Não tenho pressentimento para o ranking, desde que não seja o último<br>Claro que ganhamos o primeiro lugar sem dúvida<br>Vai pra casa da vovó à noite, primeira reunião grupal do grupo, tão feliz<br>Eu vi o jornal do irmão Yuan </p>
<p>Pensamentos<br>A universidade sempre esteve sozinha. Embora eu saiba que o trabalho em equipe é muito importante, nunca o senti. A entrevista do ano passado disse que a equipe era infundada. Neste treinamento, eu pessoalmente experimentei a magia do trabalho em equipe, é realmente incrível … </p>
<p>O treinamento FEEL está prestes a terminar. Embora eu esteja cansado todos os dias, eu realmente aprecio a todos do Bubble Fish, O (∩_∩) O Obrigado </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>Adeus minha universidade</title>
    <url>/pt/Bye-my-college/</url>
    <content><![CDATA[<p>Lembro-me que quando cheguei em Hangzhou da última vez, vi esta bela cidade com muita vegetação e parecia expressar uma vez …<br>Esse tipo de lugar que levou quatro anos e me senti livre pela primeira vez na vida, não basta me encontrar de novo …<br>Claro, eu não tenho nenhuma experiência incrível sobre a qual valha a pena escrever. Passei por isso claramente, apenas expresse meus sentimentos. </p>
<a id="more"></a>

<p>Depois de descer para o nível 6 há dois dias, terminei essa coisa que se arrasta por 3,5 anos.<br>Acho que os dias de faculdade, na minha vida, realmente passaram </p>
<p>Lembro-me de uma noite, sonhei com muitos mosquitos, que me davam comichão. Pensei comigo mesmo, este cavalo mágico quebra o meu sonho, é mais incômodo que um osso<br>Então eu fiquei na sepultura …<br>Embora eu me avise para não ter medo, sonhar, apenas sentir, provar.<br>Ok, fui persuadido e depois quis correr, para onde devo ir?<br>Hmm, meus pais estão bem ao lado, apenas corra para eles<br>Os pais e a casa sempre foram nosso abrigo do vento após nossos ferimentos. </p>
<p>É uma pena. Então, acordei e me encontrei sozinho. Na casa alugada, a porta ao lado era um estranho que eu nunca tinha conhecido antes.<br>Saiu realmente e cresci<br>Lembre-se de uma frase: </p>
<blockquote>
<p>Independência significa maior responsabilidade social, liberdade significa mais tolerância, libertação significa mais autogestão e crescer significa mais esforço.<br>Não posso deixar de pensar na frase “A grande habilidade vem com uma grande responsabilidade.” </p>
</blockquote>
<p>Apesar de sempre ter desejado independência e liberdade, mas quando cheguei mesmo aqui, num determinado momento, ainda havia uma espécie de “leve tristeza” como o patrão descreveu. </p>
<p>Volte para o tópico<br>Minha universidade é mais divertida<br>Quando entrei na escola, foi a segunda escola que sempre desprezei no ensino médio<br>Sério, depois de meio ano, nada mudou<br>Eu matei aulas no meu segundo ano e tirei uma importante<br>Quando o terceiro ano nunca mais vai para a aula, toda a escola é um livro </p>
<h2 id="Nivel-6"><a href="#Nivel-6" class="headerlink" title="Nível 6"></a>Nível 6</h2><p>Na verdade, não existe aprovação ou reprovação<br>E, após a formatura, meu sentimento pessoal é que todos os certificados se foram<br>No entanto, é um conforto para os pais. (Originalmente, pensei que da última vez que meu pai veio, foi a última vez que ele me deu $. Desta vez, parece que posso chantageá-los novamente O (∩_∩) O)<br>Além disso, pode ser considerado um empate para o fim de sua carreira universitária. </p>
<p>claro……<br>Se eles soubessem … </p>
<p>Lembre-se de que J.K. Rowling disse em um discurso na cerimônia de formatura da Universidade de Harvard: </p>
<blockquote>
<p>Não me lembro de ter dito a meus pais que estava estudando Clássicos; eles podem muito bem ter descoberto pela primeira vez no dia da formatura. </p>
</blockquote>
<p>Na faculdade, cheguei tarde, me aposentei muito cedo, faltei às aulas, trapaceei, perdi um curso, retomei e confessei minha culpa.<br>Contando a contagem regressiva, parece que, exceto para bolsas de estudo e bolsas, eu não tive uma briga, e todo o resto é basicamente satisfatório </p>
<p>Claro, trapacear sempre foi algo que desprezo e até mesmo nojento. Posso seguir o princípio de 60.<br>O mais interessante é que ele também praticou os “dois exércitos em guerra, o coração é o melhor” no “Sun Tzu Art of War” e, finalmente, “o soldado que não consegue lutar”<br>Então, quando estou lutando contra isso, eu realmente não sei o que está acontecendo. O princípio é “Se as pessoas não me ofendem, eu não ofendo as pessoas; se as pessoas me ofendem, depende da situação. </p>
<p>Outras coisas que pareciam impossíveis no primeiro ano foram gradualmente concluídas no último período de tempo. </p>
<p>Também há arrependimentos: a marca não soa, a procura de empregos e o desenvolvimento futuro não podem ser usados ​​como um trampolim; o planejamento estratégico não é tão perfeito devido a restrições de visão horizontal, etc. </p>
<p>Oh, sim, há um que devo completar:<br>Vá para a China University of Science and Technology </p>
<p>Embora minha escola (omitido), mas a localização geográfica é única<br>Existem duas escolas de medicina e dois grandes centros comerciais nas proximidades<br>É muito conveniente ir às compras e ir às compras<br>Então, toda vez que me encontro, outros vêm até mim </p>
<p>O mais importante não está longe da Universidade de Ciência e Tecnologia da China<br>É uma pena que eu não usei, ou nunca pensei nisso </p>
<p>Sempre me sinto bem comigo mesmo<br>Ao mesmo tempo, parece que sempre houve um profundo complexo de inferioridade<br>Lembro-me nos primeiros dias, nem me atrevia a entrar em outras escolas<br>Mantenha a cabeça baixa ao passar, ao passar </p>
<p>Até o último ano, quando corria por aí por um salário mesquinho, tive que enfrentar esse fato.<br>Todos os dias eu dirijo as feiras de empregos da HKUST, todos os tipos de trabalho duro </p>
<p>Mas de repente descobri que, na verdade, a maioria deles são semelhantes (pessoas comuns), o mesmo sendo cortado do cavalo, o mesmo sendo rejeitado<br>Mas o incrível é diferente.Em minha opinião, para uma empresa divina, a oferta é fácil de encontrar e não é pena rejeitá-la. </p>
<p>Não existe um ditado que diz que a força de um indivíduo nada tem a ver com o grupo.<br>E no grupo, o QI médio cai. </p>
<p>… </p>
<p>Eu pensei que realmente iria embora no futuro, e nunca fui para casa por mais de uma semana<br>Decidi não procurar um estágio e fiquei com meus pais em silêncio por um período de tempo<br>Nos últimos dois meses, deixei eu sair todos os dias (Sang Xin)<br>Mamãe e papai disseram que eu ficava em casa todos os dias, não saía, não ajudava nas tarefas domésticas e não fazia nada, então eu jogava e ia para a cama atordoado.<br>Na verdade, durante esse tempo, senti que sabia mais do que nos três anos anteriores<br>O mais importante é o crescimento mental<br>Estou muito feliz em ver este mundo mágico no final da universidade<br>É uma pena que tenha passado em um piscar de olhos, e agora não tenho tempo para me acalmar e passar muito tempo estudando. </p>
<p>Finalmente de volta a Hefei, nada mais, apenas para responder<br>Nós nos encontramos uma última vez, antes de me despedir de Hefei </p>
<p>Olhando para aquela época agora, estou muito emocionado<br>Não sozinho quando eu saí </p>
<h2 id="em-caso"><a href="#em-caso" class="headerlink" title="em caso"></a>em caso</h2><p>Eu sei que “se” é inútil. É repetidamente enfatizado nos livros mentais. É uma perda de tempo. É melhor se concentrar no presente<br>Li Zongren disse que se as pessoas não viverem de 1 a 80 anos, mas de 80 a 1 ano, 2/3 das pessoas se tornarão grandes homens. </p>
<p>Assim como em “The Gang of Men”, se o tempo puder ser devolvido, acho que será outro final </p>
<p>Então, embora eu não tenha grandes arrependimentos<br>Mas se eu fosse estar na última universidade, encurtaria o tempo e adiantaria meio ano<br>Afinal, quanto mais alto o nível, mais apertado é o tempo<br>Basta ir para a faculdade, de repente liberado, a loucura é obrigatória<br>O jogo Warcraft que eu joguei louco por um ano, na verdade, deveria ser comprimido para meio ano, no primeiro ano, eu joguei louco<br>Em seguida, entre em programação, algo mais interessante do que Warcraft<br>Obtenha C no segundo ano, olhe para a estrutura de dados<br>O terceiro encontra uma casa e sai da escola. Ir para o estágio<br>Organize uma feira de empregos dois meses antes do último ano<br>Fique com seus pais na próxima vez<br>Saia no meio, divertido, bonito, tire a carteira de motorista<br>Você pode pedir a seus pais um empréstimo (observe que é um “empréstimo”) </p>
<p>Claro, existe outra possibilidade. Se aquele cara fosse eu agora, seria completamente diferente hoje …<br>A cognição das pessoas está sempre confinada ao presente, e olhar para trás alguns anos depois só parecerá ingênuo e falta de pensamento na época. </p>
<p>Claro, claro, não se … </p>
<p>Existe uma teoria da dependência do caminho na economia. Ela diz que uma vez que as pessoas fazem uma certa escolha, é como embarcar em um caminho sem volta. A força da inércia fará com que essa escolha se auto-reforce constantemente e evite que você ande facilmente. Saia. </p>
<p>Independentemente da escolha original, é uma decisão feita por você mesmo e você é responsável por si mesmo </p>
<p>Depois de me formar, de repente senti que a possibilidade havia caído muito, afinal tem certas coisas que se tornaram fatos estabelecidos e não posso fazer de novo.<br>Então de repente eu vi o velho A em “Soldier Assault” e disse </p>
<blockquote>
<p>vinte e dois? Vejo que você gosta de 70! … Se eu fosse você, com certeza participaria, sabe por quê? Porque tenho apenas 30 anos, é uma coisa tão divertida, ainda não fiz o suficiente<br>Sim, tenho apenas 22 anos, que bom número 22, uma idade estúpida </p>
</blockquote>
<p>Então, não trabalhe, seja odiado, ame alguém. </p>
<p>Espero que depois de alguns anos, eu olhe para trás novamente,<br>Não é “Qualquer coisa que não seja forte agora tem um momento em que não funciona muito”<br>É “um pequeno sonho que se constrói e, no futuro, você será grato por seu árduo trabalho agora!” </p>
<p>Milhares de palavras, não posso dizer o suficiente, mas há um tempo para acabar </p>
<p>Adeus, minha universidade. </p>
<p>17 de setembro de 2012 0:00:52<br>Em Hangzhou Xixi Wetland </p>
<hr>
<p>PS:<br>Os corações estão misturados, amassados ​​em pedaços </p>
<p>Escreva e apague, apague e escreva<br>Salve o rascunho, várias vezes de forma intermitente<br>Ainda fora do lugar </p>
<p>Eu quero chorar, mas sinto que não sou mais uma criança </p>
<p>Quantos quatro anos de vida<br>Ainda tenho tempo livre suficiente, quatro anos de alimentação e roupas sem preocupações </p>
<p>Depois disso, devemos constantemente comprometer entre o ideal e a realidade<br>À medida que envelhecemos, temos uma compreensão mais profunda da sociedade, pois a sensação de impotência e palidez aumenta dia a dia e desaparece gradualmente </p>
<p>No entanto, o que vi é um conforto para mim: </p>
<blockquote>
<p>Eu sei que neste ambiente radiante e em rápida mudança, cada um tem sua própria escolha. Minha ideia é muito simples. Não preciso usar roupas bonitas e não preciso usar pó de ruge. A vida mais séria, simples e ativa é para mim. Fascinado pela verdade. </p>
</blockquote>
]]></content>
      <tags>
        <tag>AAU</tag>
      </tags>
  </entry>
  <entry>
    <title>Sobre os selecionados</title>
    <url>/pt/About-choice/</url>
    <content><![CDATA[<p>A educação na China pertence ao ateísmo e acredita na ciência<br>Mas a ciência não pode explicar isso no momento, de onde vem a realização? É apenas a atividade da matéria cerebral? Por que outros animais não têm vontade, mas apenas os humanos? Pode existir sem matéria? Está tudo realmente vazio quando você morre? o que você está fazendo aqui? </p>
<a id="more"></a>

<p>A realidade é cruel. Se a profundidade for usada primeiro, o pré-requisito é “Modo Deus”<br>Caso contrário, muitas vezes está quebrado e não há chance de voltar por causa da flecha do tempo </p>
<p>Ler, estudar, saber mais informações e, em seguida, usar a amplitude primeiro </p>
<p>Mas primeiro determine o propósito e pergunte a si mesmo o que a alma quer<br>Diz em “Um Diálogo com Deus” </p>
<blockquote>
<p>A alma, o corpo e o cérebro são separados, e a alma é independente da existência dos outros dois.Todo sofrimento é causado pelo propósito inconsistente dos dois. </p>
</blockquote>
<p>Eu acho que a alma mencionada aqui é o livre arbítrio </p>
<h2 id="Vontade-livre"><a href="#Vontade-livre" class="headerlink" title="Vontade livre"></a>Vontade livre</h2><p>Na verdade, mais curioso sobre o livre arbítrio<br>Se a hipótese do universo paralelo de Everett for verdadeira, então o livre arbítrio é uma piada<br>Porque não importa a escolha que você faça, no momento em que você escolhe, o mundo se divide em dois, ou seja, a escolha, não há escolha.<br>Até mesmo nascimento e morte<br>Em uma escala macro, não há diferença </p>
<p>No entanto, para o indivíduo, uma escolha foi feita. Aqui está uma citação: </p>
<blockquote>
<p>“Por que gostamos de moedas, porque no momento em que são jogadas no espaço, a resposta já é óbvia.” Exceto pela resposta autoritária óbvia, a resposta muitas vezes está em si mesmo, mas o corpo, a psicologia e o insight ainda não são fortes o suficiente para serem desnecessários. Razão / cognição, pode seguir puramente o coração. </p>
</blockquote>
<p>Eu acredito no livre arbítrio, pelo menos, depois que você escolher, este mundo continuará para você, e sua escolha afetará sua jornada neste mundo. </p>
<p>Então, como escolher uma solução ideal </p>
<h2 id="Solucao-otima"><a href="#Solucao-otima" class="headerlink" title="Solução ótima"></a>Solução ótima</h2><p>A solução ótima é outro problema<br>Qual é a solução ideal?<br>Isso é inseparável da visão de mundo, visão da vida e valores de uma pessoa </p>
<p>Há um artigo sobre Fai Mo: nove etapas para determinar seu objetivo de vida e fazer um plano para alcançá-lo<br>Mas a chave é que a perspectiva de mundo, a perspectiva de vida e os valores também mudarão …<br>O navio de Teseu pode ilustrar isso muito bem </p>
<h2 id="O-navio-de-Teseu"><a href="#O-navio-de-Teseu" class="headerlink" title="O navio de Teseu"></a>O navio de Teseu</h2><ol>
<li>Se você olhar para os diferentes tipos de células no corpo humano, a idade média das células em todo o corpo humano é de cerca de 7 a 10 anos. (Isso é mudar tudo) </li>
<li>Se um navio viaja uma longa distância no mar, ele será inevitavelmente danificado, de modo que os artesãos qualificados substituem regularmente parte do navio para manter a navegação normal do navio. Alguns anos depois, todas as partes de todo o navio foram substituídas, então este navio ainda é o mesmo quando começou? Se sim, então se as peças descartadas são coletadas e remontadas em um navio, qual é a relação entre os dois navios e o navio original quando eles partem? Se não, quando este navio se tornou diferente do original? </li>
</ol>
<p>Esta pergunta é muito fascinante. Se você contar assim, são quase 3 rodadas. </p>
<p>O texto acima só fala sobre a situação física, se você adicionar a educação, o ambiente e a experiência anterior </p>
<p>Portanto, em cada estágio, a busca é diferente<br>Eu admiro aqueles que têm “uma espada em dez anos”<br>“Ten Thousand Hours of Genius Theory” é quase dez anos após 3 horas por dia. </p>
<p>Dez anos afiando uma espada ]Fonte】<br>Poema “Espadachim” de Tang Jiadao: “Dez anos para afiar uma espada, mas a lâmina de gelo nunca tentou. Hoje é como um rei, quem é a injustiça?” (Dez anos? Coincidência?) </p>
<p>Existe alguma maneira de esse tipo de propósito mudar de tempos em tempos e não puder ser revertido? </p>
<h2 id="como-voce-esta"><a href="#como-voce-esta" class="headerlink" title="como você está"></a>como você está</h2><p>O algoritmo Greedy é uma técnica de design mais simples e rápida para alguns problemas de solução ideal. A característica de usar o método guloso para projetar um algoritmo é proceder passo a passo. Muitas vezes, é baseado na situação atual para fazer uma escolha ótima de acordo com uma medida de otimização, sem considerar todas as situações gerais possíveis, evitando a necessidade de encontrar a solução ótima. Tudo possível e deve gastar muito tempo, adota método top-down e iterativo para fazer escolhas gananciosas sucessivas, cada vez que uma escolha gananciosa é feita, o problema é reduzido a um subproblema menor, e a cada etapa A seleção gananciosa pode obter uma solução ótima para o problema. Embora cada etapa deva garantir que uma solução ótima local possa ser obtida, a solução global resultante às vezes não é necessariamente ótima, portanto, não volte ao método guloso. </p>
<h2 id="Finalmente"><a href="#Finalmente" class="headerlink" title="Finalmente"></a>Finalmente</h2><p>Uma frase favorita, que também é sobre escolha: </p>
<blockquote>
<p>Não somos apenas uma pessoa ao acaso encontrando outra, estamos todos através de montanhas e rios, caminho lento e longo para nos encontrarmos, em nosso rio de crescimento humano, neste breve momento de causa e destino, não é acidental, é nosso selecione. </p>
</blockquote>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>o grande mestre</title>
    <url>/pt/The-Grandmaster/</url>
    <content><![CDATA[<blockquote>
<p>O que podemos fazer agora é encontrar um lugar sossegado, permitir-nos pensar com calma e entender como fazê-lo, para que possamos evitar que coisas preciosas e pessoas importantes voltem a perder, e entender como fazê-lo. Os mesmos erros não acontecerão. Aconteceu denovo. Aprenda com ele, extraia forças, continue a seguir em frente com firmeza, encontre coisas de que gosta, encontre pessoas que você realmente ama e faça a coisa certa. —— Xi Murong </p>
</blockquote>
<a id="more"></a>

<p>Nas primeiras duas semanas, levantei-me às 6 horas e fui para a cama às 11 horas todos os dias. Sentia-me com muita energia. Trabalhar 16 horas por dia não é um problema.<br>Os efeitos colaterais surgiram<br>Não trabalhei horas extras nestes dois dias, fiquei aninhada em minha casa sem internet e percebi profundamente a terrível solidão.<br>Torne-se inexplicavelmente irritado, infelizmente o celular pode ser conectado à Internet, portanto, assédio em todos os lugares<br>O mais comum é “Tão chato, tão chato” de Gu Xiaobai em “Gangue de Homens”<br>Desculpe por causar problemas a algumas pessoas. Quanto a quando vai se estabilizar, não sei </p>
<h2 id="007-e-o-Grande-Mestre"><a href="#007-e-o-Grande-Mestre" class="headerlink" title="007 e o Grande Mestre"></a>007 e o Grande Mestre</h2><p>Na faculdade, de vez em quando, eu ia ao teatro para assistir a grandes filmes<br>Eu não tinha dinheiro na época e só estava disposto a ir uma vez porque era um blockbuster internacional + 3D<br>Trabalho, mas deixou esses entretenimentos para trás </p>
<p>Eu fui assistir “007” outra noite<br>Muito preocupado </p>
<p>Eu saí e lembrei do comentário do verycd “Assassin’s Creed”: </p>
<blockquote>
<p>Depois de entrar um pouco, senti uma sensação de desolação. Embora a cidade seja mais próspera e os personagens sejam mais lindos, mas diante de Ezio, que tem mais de meio século, é uma época desoladora. Do início da segunda geração, o jovem e o jovem garoto peludo até esta. O velho de rosto grisalho e barba subindo na parede tem muitos pensamentos. Alguns dias atrás, aconteceu que eu também comemorei meu aniversário. Parece que este jogo está melhorando a cada ano. Quando me olho em um piscar de olhos.<br>A vida de uma pessoa é vividamente revelada nesta trilogia de assassinos </p>
</blockquote>
<p>“O Grande Mestre” tem muitos toques, então não vou falar sobre eles um por um.<br>O ponto mais tocante:<br>Ip Man foi quebrar o bolo nas mãos de Haneda e não conseguiu lidar com isso.<br>O Sr. Contador comentou que Tai Chi Yang Luchan tem o truque de “o pássaro não voa”. O pássaro parou na palma da mão de Yang Luchan e não podia voar, porque os truques de Yang Luchan faziam com que o pássaro não ficasse em lugar nenhum. Estava trancado em uma jaula invisível. </p>
<p>Eu verifiquei especificamente esta história, aqui </p>
<blockquote>
<p>“O pequeno pardal estava vivo e chutando, mas parecia uma perna doente na palma da mão do mestre de artes marciais Yang Luchan. Embora ele continuasse batendo as asas, foi pego por magnetismo, chiando e incapaz de voar. Se você quiser voar, seus pés devem estar equilibrados no ponto de esforço e você pode usar a força de rebote para levantar suas asas e voar. O kung fu de Yang Luchan atingiu o auge da perfeição, e a palma da mão pode sentir o impulso momentâneo das pernas do pardal, sempre que um pardal Quando ele chutou as pernas para voar, ele afundou as palmas das mãos e a força de chute do pássaro foi eliminada! Portanto, o pequeno pardal só podia bater as asas e lutar, e não poderia passar sem a palma de Yang Luchan. “ </p>
</blockquote>
<p>Esta história pode ser exagerada, mas seja verdade ou não, ela desperta meu interesse em continuar Tai Chi </p>
<p>Em parques, pessoas de meia-idade e idosos geralmente praticam os 24 estilos do padrão nacional, que evoluiu da família Yang e é na verdade Tai Chi.<br>Há um pedaço de história aqui, é mais sensível, então não vou falar sobre isso. Você pode adaptá-lo no Google Tai Chi você mesmo </p>
<p>Vendo tanta suavidade + fraqueza no meu primeiro ano, de repente perdi a cabeça<br>Mais tarde, foi descoberto que a família Yang na verdade evoluiu da família Chen, e a família Chen pode ser vocal durante as lutas. É muito adequada para jovens e minha preparação física tem sido fraca. </p>
<p>No entanto, desde a solidez inicial até a atual lentidão, percebi quão poderosa a “rigidez e suavidade de Yang é contida, mas profundamente oculta”.<br>Meu entendimento é que Yang já externalizou e incorporou Wangsijin de fora, e não há nenhum sinal de fora. Jin circula e se vira para dentro, e termina quando você coloca suas mãos sobre ele … </p>
<p>Eu costumava sentar no poço e olhar o céu novamente </p>
<h2 id="Levei-dezoito-anos-para-sentar-com-voce-e-beber-cafe"><a href="#Levei-dezoito-anos-para-sentar-com-voce-e-beber-cafe" class="headerlink" title="Levei dezoito anos para sentar com você e beber café"></a>Levei dezoito anos para sentar com você e beber café</h2><p>Cada vez que vejo Xue Yuan, conto quanto dinheiro peguei e quanto economizei agora, e cada vez que conta muito, me faz pensar que realizei meu sonho em alguns anos. </p>
<p>Isso é totalmente sem palavras e apenas um pouco mais. Qual é a utilidade? A vida é uma bagunça, vagando à beira do pessimismo e da ansiedade<br>Na verdade, o que quero dizer é: por que existem tantos mais sem motivo? Quanto você precisa pagar por isso<br>Um artigo que me impressionou muito até agora:<br>“Levei dezoito anos para sentar e beber café com você” </p>
<p>Minha universidade é a China, outra universidade, que já é fraca<br>Na fase de recrutamento escolar, foi a primeira vez que enfrentou os alunos das outras duas escolas, e sentiu-se impotente. </p>
<p>O discurso de J.K. Rowling na cerimônia de graduação da Universidade de Harvard:<br>Os benefícios marginais do fracasso e a importância da imaginação (“Os benefícios do fracasso e a importância da imaginação”)<br>Existe uma frase: </p>
<blockquote>
<p>Na verdade, sua concepção de fracasso pode não estar muito longe da ideia de sucesso de uma pessoa comum, de tão alto que você já voou academicamente. </p>
</blockquote>
<p>Por isso, sempre invejei esses alunos de escolas de prestígio, invejo o ponto de partida, que já é tão alto.<br>Quantas vezes leva para alcançá-los, e é simplesmente possível </p>
<p>Cada estágio tem problemas em cada estágio<br>Não sei se vi um pouco mais, mas por causa disso, me deixou miserável<br>Por causa disso, sei quão grande é a lacuna e me sinto impotente diante de meu eu fraco.<br>Cada coisa, cada direção, leva tempo para fazer </p>
<p>Eu não me quero como um Weibo reclamou: </p>
<blockquote>
<p>Tarde demais para descobrir o que quero, os templos começaram a ficar brancos; tarde demais para ter certeza de seu amor, o outro lado já está casado; tarde demais para amar o filho, ele cresceu e te deixou; tarde demais para ficar famoso, estamos prestes a entrar O túmulo se foi. Temos medo de que seja tarde demais </p>
</blockquote>
<p>Infelizmente, o segundo já foi cumprido </p>
<p>Torne-se o tipo de pessoa que você mais odiava quando era jovem<br>Quando uma pessoa escolhe crescer, muitas vezes opta por não ser compreendida, porque você tem que seguir o caminho que escolheu, não o caminho que eles acham que você deve escolher.<br>Não sei se, neste estágio, mamãe e papai não sabem mais o que estou pensando<br>Na verdade, eu não sei o que estou pensando, muito menos outros<br>E, um tempo atrás, descobri que estava me tornando alguém de quem não gosto<br>Tudo é cauteloso, não ouse expor quem você é<br>Como uma frase: </p>
<blockquote>
<p>A perda de muitas pessoas vai contra suas aspirações quando eram jovens. Eu acho que sou maduro, habilidoso, astuto, ingênuo no passado, e eu finalmente consigo ver e quero usar. Então, nos tornamos o tipo de pessoa que mais odiava quando éramos jovens </p>
</blockquote>
<p>coisas não felizes<br>Quando estou triste, ninguém liga para mim<br>Eu fico tonto quando vejo uma tela inteira de inglês<br>O número de livros que você deseja ler é igual ao da lista PM da capital imperial </p>
<p>A teoria sabe:<br>Não tenha pressa, já é tarde demais<br>Onde está fraco, onde está<br>Faça apenas uma coisa de cada vez<br>Poder do momento<br>Tarefa atribuída, a coisa mais difícil do mundo </p>
<p>Parece estar no caminho da auto-salvação<br>No entanto, os fracos invadem dessa forma, e às vezes eu realmente me sinto sem esperança </p>
<p>Meio ano após a formatura<br>Já faz meio ano<br>O fim do mundo acabou </p>
<p>Falando objetivamente, parece haver progresso<br>Mas a curva está desenhada, está infinitamente perto da linha horizontal </p>
<p>Chao Wendao </p>
<p>Tem outro lugar que me deixa muito deprimido </p>
<p>Na ficção científica de Da Liu, há um artigo chamado “O Caminho do Caos”,<br>Citando “The Analects of Confucius Liren”<br>Ele fornece uma descrição detalhada dos cientistas dispostos a dar suas vidas para compreender os mistérios do universo. </p>
<p>Embora haja uma sequência de audiências, não passa de um grande problema. </p>
<p>Mas há uma frase no Tao Te Ching: </p>
<blockquote>
<p>O sargento ouve o Tao e caminha com diligência; o sargento ouve o Tao, se ele sobreviver; o cabo ri ao ouvir o Tao. Não sorrir não é suficiente. </p>
</blockquote>
<p>Não sorrindo, não o suficiente<br>A sensação óbvia é que vi o livro “Pobre pai” no meu segundo ano na biblioteca. Folheei-o na época. Quando se tratou da seção de cunhagem, me senti entediante. Pensei que não faria negócios sozinho de qualquer maneira No futuro, vou usar a programação como minha carreira para estreitar meus objetivos, então não perco tempo olhando para isso </p>
<p>Agora parece ridículo o quão estúpido era naquela época, pode-se dizer que o Tao está bem na minha frente, mas eu faço ouvidos moucos a ele </p>
<h2 id="Superego-ego-e-id"><a href="#Superego-ego-e-id" class="headerlink" title="Superego, ego e id"></a>Superego, ego e id</h2><p>Todo mundo vive em três estados de si mesmo: pai, adulto e filho.<br>Eles correspondem à estrutura da personalidade de Freud: o superego, o ego e o id.<br>O superego representa a lei, a moralidade, a consciência, a autoridade, o defensor da ordem, o promotor estrito, o deus, o deus, o mestre zen iluminado e o princípio da perfeição.<br>O id segue o princípio da felicidade: todos os impulsos, instintos e desejos primitivos, obstinados, fazem o que querem e são egocêntricos.<br>O ego segue os princípios da realidade, o coordenador e o equilibrador, ele está no meio, não só para satisfazer o desejo do eu, mas também para escapar aos olhos do promotor, e não pode violar completamente a vontade do superego. O ego é como um homem de negócios e pode ser negociado; o id e o superego estão nas duas extremidades da gangorra e o ego está no meio, portanto, eles precisam estar equilibrados. O self é racional e segue os princípios da realidade. </p>
<p>Por que estou tão triste, tudo, eu acho, talvez o superego seja demais </p>
<p>Sempre tive uma sombra em meu coração, ou seja, em todas as áreas que conheço, programação, Tai Chi, meridiano, psicologia, mente e, recentemente, finanças obteve grande sucesso.<br>Nunca conversei diretamente com ele, sempre há apenas uma sombra<br>Como dito em “Deus, Xueba, Homem”, “Deus não é um pássaro nosso”<br>Mas tenho tentado controlar meu desejo com cuidado, perseguindo a sombra </p>
<p>Há muitas coisas triviais e não tenho tempo para ouvir minha voz interior<br>E na maioria das vezes, fico satisfeito com minha escolha<br>Mas uma pessoa, em casa, fecha portas e janelas, e cercada de solidão, quieta, quando está sozinha<br>Enfrentará o oponente divino do superego e o aliado porco do self </p>
<p>Só para perceber que estava tão frágil, até covarde e chorando<br>Sem dor sem ganho, mas às vezes me pergunto se o preço é muito alto, o que é isso para jogar? É melhor viver uma vida pequena em paz, por que não ser feliz </p>
<p>Como equilibrar a lacuna<br>Eu acho que toda a impotência e tristeza vêm disso </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>Para os mortos 2012</title>
    <url>/pt/For-2012/</url>
    <content><![CDATA[<p>Ainda estou em retrospecto. Originalmente, era um resumo do Dia de Ano Novo. Foi adiado até o Festival da Primavera e depois hoje. </p>
<h2 id="Escrito-em-2012"><a href="#Escrito-em-2012" class="headerlink" title="Escrito em 2012"></a>Escrito em 2012</h2><p>Eu estava inquieto um mês antes do Festival da Primavera<br>Não sei se tem a ver com uma pessoa de fora<br>Quando fui para casa durante o Ano Novo Chinês, olhei para a neve voando no céu e a terra envolta em prata no ônibus, e meu coração voltou à paz. </p>
<a id="more"></a>

<p>2012 foi o ano em que mais cresci<br>Deixando de lado as mudanças no ambiente externo, não podemos mais usar os padrões dos alunos para nos exigir </p>
<p>Na primeira metade do ano não tive o que fazer, li livros e joguei em casa<br>Lembre-se da obra divina “Reserve um tempo como um amigo”<br>O coração está ansioso e eu o li intermitentemente por um mês<br>Depois disso, o mundo parece diferente<br>Provavelmente desde então, apaixonou-se pela leitura </p>
<h2 id="Exagero"><a href="#Exagero" class="headerlink" title="Exagero"></a>Exagero</h2><p>Ainda me lembro do processo de Tai Chi de rígido para suave no meu segundo ano. Conversei com meu professor uma vez<br>Ele disse que eu estava tremendo muito e pediu aos meus colegas que fizessem um vídeo com seus celulares, e eu entenderia olhando para eles.<br>Naquela época, fiquei chocado e disse: Achei que esse fosse o único caminho a percorrer. </p>
<p>Sim, isso é um exagero </p>
<p>Eu também senti dores nas costas quando estava no colégio<br>Eu fui exposto à medicina tradicional desde então<br>Mas recentemente eu senti dor em meus membros e travesseiro de pescoço<br>Eu ouvi uma frase na Teoria da Relatividade de Dongwu: “Quando você perceber a existência dele, pode ser um problema.”<br>Eu pensei que era mais sério e me perguntei se eu iria morrer<br>Mas recentemente eu vi isso em “The Art of Learning”, também pode ser uma introdução ao Tai Chi, e eu senti algo que não sentia antes<br>Enfim, tudo segue e fica tranquilo </p>
<h2 id="Num-relance"><a href="#Num-relance" class="headerlink" title="Num relance"></a>Num relance</h2><p>Às vezes é tão estranho que você pode notá-la de relance quando está no meio da multidão<br>Mesmo que não seja a primeira vista, depois de um tempo, na vasta multidão, você notará essa pessoa<br>Só de ver isso pode distingui-la das pessoas ao seu redor<br>Histórico, personalidade, ocupação, hobbies são desconhecidos, mas você ainda pode senti-la especial </p>
<p>Ir para o Westside Ice Rink no sábado, esta é a segunda vez na minha vida patinando<br>Como patinar<br>Uma é fazer-se sentir as dificuldades de ser um animal ereto novamente e treinar seu cerebelo<br>A segunda é re-compreender o equilíbrio, isso e o tai chi devem ter um efeito complementar<br>Então decidi torná-lo uma constante para esportes de fim de semana<br>No momento, o atrito ainda é usado para direcionar, e espero usar a força centrípeta da próxima vez </p>
<h2 id="impetuoso"><a href="#impetuoso" class="headerlink" title="impetuoso"></a>impetuoso</h2><p>Todo mundo está dizendo que esta é uma sociedade impetuosa </p>
<p>Sim, a tendência geral<br>Há um ditado que diz: se você vive em um lugar anormal por muito tempo, considerará a anormalidade justificada. </p>
<p>Eu não nego que sou impetuoso<br>Eu quero fazer tudo, não fui a fundo em nada<br>Mas me sinto impotente. A extensa leitura e atenção só começou no último ano.<br>Conhecendo GTD, de que adianta<br>A chave é a qualidade do uso do tempo, não a quantidade<br>fluxo - fluxo cardíaco, o tempo pára para você </p>
<p>O mesmo vale para a impetuosidade, sinto vontade de como lidar com uma relação profunda e ampla<br>Primeiro amplo, como disse Qiao, continue tentando descobrir e, eventualmente, você encontrará o seu interesse<br>Tenho lutado com programação há dois anos na universidade e, ingenuamente, pensei que fosse algo para a vida toda.<br>E pensei que enquanto você for chamado de mestre ou uma grande pessoa, você não precisa se preocupar com dinheiro<br>E alegar trabalhar por juros, não por dinheiro<br>Olha agora, era tão bobo e ingênuo<br>Nos despreocupados quatro anos de faculdade, não fui muito longe. Embora seja um pouco tarde agora, ainda tenho que continuar fazendo isso. </p>
<h2 id="Em-movimento"><a href="#Em-movimento" class="headerlink" title="Em movimento"></a>Em movimento</h2><p>Obrigado a esses amigos de Hefei (fiquei enojado com essa palavra, mas depois descobri que tem outro significado, a cultura chinesa é muito ampla e profunda), costumava puxar vocês para fora toda vez que estava triste.<br>E fica comigo um pouco<br>Quem mais, quando soube que tinha cinco disciplinas e retomei uma, não obteve o bacharelado em psicologia, não entrou na pós-graduação, por desespero por um salário humilde e correu, e se preparou na véspera do meu aniversário Quando você é atingido, triste e confuso, não há nojo, mas conforto </p>
<h2 id="Sanshengshi"><a href="#Sanshengshi" class="headerlink" title="Sanshengshi"></a>Sanshengshi</h2><p>Só ouvir o nome é demais </p>
<p>O primeiro contato foi no “Sou Shen Ji”: </p>
<blockquote>
<p>Deite-se na pedra das três vidas, perceba a vida passada e a próxima, beba a água da fonte sem preocupações e esqueça os ressentimentos </p>
</blockquote>
<p>A última vez que visitei Hangzhou e pesquisei atrações de Hangzhou no Google, encontrei três palavras “Sanshengshi” </p>
<p>No final dos meus 22 anos, muitas coisas se desviaram da minha visão<br>E descobri que tudo o que fazia provavelmente estava evitando (o que evitar?) </p>
<p>O mais deprimente é que depois de um sono, o cérebro recompila e roda tudo de acordo com o que deseja. </p>
<p>Quando acordei, me peguei dormindo profundamente e relaxado, assim como na vez em que ouvi Zhao me dizer que tenho BL no primeiro ano. </p>
<p>Depois fui ver o Sanshengshi, por nada mais, afinal, é meu nome tirar a vida. </p>
<h2 id="Utilidade-e-liberdade"><a href="#Utilidade-e-liberdade" class="headerlink" title="Utilidade e liberdade"></a>Utilidade e liberdade</h2><p>Entenda o verdadeiro liberalismo, entenda o papel do imposto sobre herança, </p>
<p>Eu entendo, posso não ter pontos de vista independentes e há uma enorme lacuna entre o pensamento crítico e o pensamento crítico. </p>
<p>Eu entendo que desde “Aula de Felicidade”, me sinto tão bem comigo mesmo, e até corrigido demais </p>
<p>Entenda que você ainda não pode fazer promessas aos outros, não importa quem seja essa pessoa </p>
<p>Eu entendo que, para não decepcionar a mim mesmo ou aos outros, frequentemente escolho não agir </p>
<p>Entenda que às vezes as oportunidades são usadas para esperar e mudar, o resultado final é perdido </p>
<p>Eu entendo que quando fico frustrado, ainda me sinto triste </p>
<p>Mas eu ainda não entendo, e quando onde, por que como </p>
<p>Às vezes sinto que tudo o que faço é apenas uma pequena bagunça, então o que acontece se eu mudar isso, ainda sinto uma sensação de impotência </p>
<p>Pinheiro do fundo do riacho Yuyu, mudas da montanha<br>No diâmetro do caule, sombreie esta centena de metros </p>
<p>Wan disse que descobriu recentemente que, enquanto trabalhar duro, ela alcançará </p>
<p>Mas meu modelo é, pode não ser percebido, pelo menos haverá muitas lacunas entre o resultado real e minha própria modelagem </p>
<h2 id="esperanca"><a href="#esperanca" class="headerlink" title="esperança"></a>esperança</h2><p>Claro, eu acho, talvez eles estejam apenas tentando se desculpar e encontrar um motivo que soe bem para eles<br>Claro, mais provavelmente, o que eu disse está errado<br>Mas, em qualquer caso, não importa o quanto você suspire, o maravilhoso 22 já passou.<br>Às vezes parece que há um relógio tocando o despertador<br>É uma observação do tempo interior, mas também a experiência da passagem do tempo<br>É verdade, os mortos são como maridos </p>
<p>Eu também sei que a esperança não importa se há ou nada<br>Mas não posso deixar de esperar estar no meu caminho para o final do terceiro ciclo.<br>Posso fazer uma descoberta, assim como o nome de um jogo da Microsoft: The Rise of the Country </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>Tão jovem</title>
    <url>/pt/So-Young/</url>
    <content><![CDATA[<p>Eu quero escrever algo, mas não sei por onde começar </p>
<p>Provavelmente entrando no período de gargalo, não consigo sentir nenhuma mudança óbvia </p>
<a id="more"></a>

<p>E não é de admirar que haja uma mudança de blog para Weibo<br>Não há tempo para codificar um parágrafo inteiro<br>O tempo está completamente fragmentado </p>
<p>E Shuangpin está finalmente ficando mais suave, exceto para tyu e outras letras. Às vezes eu não sei e preciso tentar. Na maioria das vezes, não tem barreiras<br>Quando uso o Quanpin na biblioteca, obviamente sinto que há legendas demais para serem exploradas. </p>
<hr>
<h2 id="Hangtu"><a href="#Hangtu" class="headerlink" title="Hangtu"></a>Hangtu</h2><p>A primeira vez que fui com Yiya em Lu’an<br>Naquela hora, fiquei chocado.A estante chegou ao teto e eu tive que escalar a estante enquanto segurava o livro.Parecia um filme de Harry Potter.<br>Eu queria vir frequentemente<br>No último dia de maio, finalmente fiquei por mais de um longo tempo e tentei a leitura do tópico (na verdade, a leitura paralela não é considerada a melhor das hipóteses)<br>Não vamos falar sobre o efeito da leitura, apenas pegue os livros relevantes e descarte N deles. É muito gratificante, não seja muito legal. </p>
<hr>
<h2 id="final-de-semana"><a href="#final-de-semana" class="headerlink" title="final de semana"></a>final de semana</h2><p>Não sabemos o que as mudanças podem nos trazer, mas sabemos exatamente o que vamos perder<br>Não é de admirar que sempre evite e evite<br>Corri para Xangai e Hefei no mês passado, sem falar no efeito de relaxamento, é verdade que o cartão estourou </p>
<p>Eu costumava ser governanta nos fins de semana e me senti exagerada de novo, como se estivesse sempre me pressionando.<br>A programação de tempo está cheia, como um sistema operacional multitarefa em tempo real, sem parar, a CPU está sempre totalmente carregada<br>O resultado é cansaço e não me sinto como se fosse um fim de semana. O mais deprimente é que é muito divergente. Não fiz tudo bem. Quando estou livre, não sei por onde começar. </p>
<p>Se eu sentir uma semana desta vez<br>Parece que um dia teremos de ficar em casa sem abrir a porta;<br>Deve ser atrasado na sexta ou sábado até uma ou duas da manhã<br>Para encontrar um pouco de descanso </p>
<p>Mas hoje eu corri por outro dia<br>Eu vi o Mechanic3 de manhã, e foi feito por uma pessoa novamente, ha ha </p>
<p>Acho que Tony também deve estar pensando, tire essa armadura, o que ele é, “Homem de Ferro”? E quanto a outras pessoas usando armadura?<br>Ele sempre se autodenominou mecânico, mas depois parecia ter encontrado a resposta. Ele ficou mais determinado e sua ansiedade se curou. No final, ele disse “Eu sou o homem de ferro” </p>
<p>À tarde, fui a um lugar semelhante ao English corner e li a “arte de aprender” original<br>Já escovei chinês antes, mas o resultado ainda é cheio de obstáculos e tragédias </p>
<p>Ficar acordado até tarde, com sono e sem dormir, sem moral<br>Mas a noite está quieta, tudo desaparece durante o dia e a sensação de impotência ocorre de repente. Essa pessoa sou eu? </p>
<p>Wang Xiaobo disse que todo sofrimento humano é essencialmente raiva contra sua incompetência. </p>
<p>É certo ficar com raiva, não é certo ficar nervoso para assediar os outros, então quem se desculpa?<br>Vou amanhã à tarde para consulta psicológica, já marquei consulta. </p>
<hr>
<h3 id="Dia-Mundial-do-Livro"><a href="#Dia-Mundial-do-Livro" class="headerlink" title="Dia Mundial do Livro"></a>Dia Mundial do Livro</h3><p>4.23 Depois de entregar o grupo Douban, eu sabia que era o Dia Mundial do Livro<br>Impotente para ressuscitar tarde demais, é a primeira vez na vida para saber<br>Lembre-se daquela frase </p>
<blockquote>
<p>Eu renasci por causa de 200 livros e nasci de novo por causa de 1000 livros </p>
</blockquote>
<p>Eu pensei que o falcão lutador ao qual tenho prestado atenção, mais de 1000 é bom o suficiente<br>Acabei de ver um 8k + quebrado em Zhihu<br>Por um momento, pensei que estava deslumbrado<br>Então pensei que era uma leitura extensa e, depois de ver o número de notas, travou<br>Arruinar três visualizações<br>Poderia ser o monge arrebatador em “Dragon Babu”? </p>
<p>No começo pensei que fosse um caso, não é universal<br>Mas a realidade é cruel<br>É triste descobrir que o k quebrado é calculado por heap<br>Essas pessoas são pervertidas? . . </p>
<p>Em um instante, não acalmei, virei as caixas e virei os armários e marquei todos os livros que havia lido antes, contanto que fossem livros.<br>Graças à contribuição das artes marciais + fantasia, ele dobrou instantaneamente, ultrapassando mais de 200, mas infelizmente nada mudou, e eu tenho sido um transeunte desde então.<br>Dedicado a hoje </p>
<hr>
<h3 id="Coracao-a-coracao-mas-independente"><a href="#Coracao-a-coracao-mas-independente" class="headerlink" title="Coração a coração, mas independente"></a>Coração a coração, mas independente</h3><p>Existe um ditado em “Canghai”: </p>
<blockquote>
<p>Se não houver um namorado ao seu lado, mesmo que haja uma luz incomparável, de que serve? </p>
</blockquote>
<p>Comparado com Yingying em “Kunlun”, eu prefiro Hua Xiaoshuang, uma mulher tão independente<br>Embora eu não saiba muito sobre artes marciais, sei exatamente o que quero e o que posso fazer, gentil, caloroso e otimista. </p>
<p>Como “To the Oak” de Shu Ting </p>
<blockquote>
<p>Coração a coração, mas independente </p>
</blockquote>
<p>mas </p>
<blockquote>
<p>Às vezes, quando me apaixonei por alguém, já estava apaixonado. Não há confissão, nem de mãos dadas, nem abraços, nada, mas sinto que estou apaixonado há muito tempo, como se tivesse amado essa pessoa que não tem interseção desde que nasci. </p>
</blockquote>
<p>Agora eu sei um pouco mais do que antes<br>Nunca atravessei a montanha, não sei, meus horizontes estão um pouco ampliados<br>Mas quando eu bebi com o capitão daquela vez, eu disse, sei um pouco mais, mas é útil? </p>
<p>gostar </p>
<blockquote>
<p>Quanto à história posterior, perdi a hora certa de reencontrar a pessoa certa, para mim é triste, para ela é magoada. </p>
</blockquote>
<p>Sou mais liberal. Acho que o respeito é uma preparação para o amor verdadeiro. Assim que essa pessoa aparecer, farei o máximo<br>Mas quando você pensa sobre isso, por que não se enganar<br>Mas em que posso acreditar se não acredito, só posso escolher um, a vida é tão indefesa </p>
<hr>
<h3 id="Para-nossos-jovens-moribundos"><a href="#Para-nossos-jovens-moribundos" class="headerlink" title="Para nossos jovens moribundos"></a>Para nossos jovens moribundos</h3><p>Todo o artigo está cheio de uma leve tristeza, e também fico muito triste quando o leio. Infelizmente, a universidade nunca experimentou este medicamento<br>Quando li, já me formei. Tragédia. Ouvi dizer que o filme não fez o gosto como deveria. Não assisti e não quero ser afundado de novo.<br>Quando voltei para a escola após o Festival Qingming da última vez, fiquei com um pouco de inveja daqueles alunos<br>Eu planejava originalmente descer para o dormitório # 14 para queimar papel para o serviço fúnebre, mas desisti mais tarde<br>Uma passagem que vi muito cedo deve ser muito geral: </p>
<blockquote>
<p>Na verdade, tenho bastante inveja desses nerds da tecnologia, principalmente por causa de seu estilo de vida e união. Eles podem jogar World of Warcraft juntos, jogar Dungeons and Dragons, discutir mulheres, jogar anime juntos e experimentar todos os tipos de alegrias no mundo dos homens. Acontecimentos, uma festa tão feliz, temo que só seja possível quando você estiver na faculdade. Depois de ir para o trabalho, você faz uma carreira, ou seja, beber e bater um papo, todos os seus hobbies podem ser renovados, porque definitivamente atrasará o seu trabalho. E a vida, então quando você estiver feliz, não pisque, são 30 anos. </p>
</blockquote>
]]></content>
      <tags>
        <tag>Reading</tag>
      </tags>
  </entry>
  <entry>
    <title>Sentimentos após ingressar na empresa por quase um ano</title>
    <url>/pt/Thinking-in-one-year-of-working/</url>
    <content><![CDATA[<p>APENAS FAÇA<br>Apenas faça isso, ha ha </p>
<a id="more"></a>

<p>É um ano inteiro após a formatura em um mês, então escreva um pouco </p>
<p>Ir para a escola era fácil na época e achei que gostava de programar<br>Mas eu gostava muito naquela época, não tinha ninguém responsável pela universidade e eu ia assistir espontaneamente.<br>Provavelmente por causa da influência do livro “Be the Best of You”, considerei a estrutura de dados e o algoritmo muito importante.Eu estupidamente pensei que os trainees eram todos nuvens flutuantes, e até sofreram muitas perdas depois. </p>
<p>Analisando agora, percebeu-se também que a visão era muito estreita naquela época.<br>As pessoas têm que ser um pequeno hobby, caso contrário, é tão vazio<br>Naquela época, eu só conhecia programação, e deveria ser um sustento. Se você nem gosta disso e não tem namorada, esse tipo de vida é terrível </p>
<p>Depois que a oferta foi assinada, fui imediatamente removido da escola<br>Durante aquele ano, eu não tive nada para fazer, olhei em volta e encontrei um monte de coisas maravilhosas<br>Descubra que o mundo é tão mágico e descubra que existem muitas possibilidades<br>Por que eu me defino como um macaco de cerco do programa? </p>
<p>Entrei na empresa mais tarde, de modo geral, está tudo bem<br>Dia após dia, é como água fervida pura </p>
<p>No começo eu morava longe. “O tempo é como a água na esponja. Enquanto você quiser espremer, você sempre pode entrar no ônibus.”<br>Obviamente o balde de esterco das formigas, fico triste em pensar nisso<br>Mais tarde mudou-se para a empresa, a fim de economizar dinheiro, o papel é relativamente antigo<br>Eu vi Daqiang pela primeira vez na minha vida. </p>
<p>Em termos de trabalho, de um modo geral, a maior parte do tempo não é muito ocupado.No início, olhei para o desenvolvimento para iOS nas minhas horas vagas.<br>Fiquei ocupado mais tarde, meu tempo pessoal foi espremido infinitamente </p>
<p>Não sei se é minha Jiangzi ou se a indústria é Jiangzi<br>Me sinto um pouco como um bombeiro, onde houver fogo eu serei pego<br>No começo era Android, mas o chefe me pediu para dar uma olhada no iOS<br>(Insert: Acho que todo mundo que está acostumado a ganhar, entrando em contato com a Apple, vai ficar chocado com seu design, por isso sempre quero comprar um air ou pro)<br>Ok, assisti por cerca de duas semanas e disse que o lado Android está muito ocupado. Vamos ver o Android.<br>Mais tarde, ele foi pego para compilar o projeto android<br>Agora vou ser pego escrevendo uma página da web novamente </p>
<p>Claro, eu só vomito, de qualquer maneira, não estou mais interessado nisso, não importa o que eu faça.<br>Tudo o que você precisa, basta dar uma olhada no que você precisa, e o que você pode fazer no trabalho se torna<br>Algumas pessoas deveriam dizer que não pode ser profundo<br>Sim, eu não sei, mas eu realmente não quero ver isso<br>Tenho muita inveja quando vejo um colega roendo o jvm </p>
<p>Não tenho crenças no idioma, apenas ri daquela classificação<br>Parece razoável existir, e cada idioma nasce para lidar com problemas específicos<br>Nenhuma linguagem é particularmente boa, essa linguagem é particularmente ruim </p>
<p>Claro, sempre há um problema de hábito. Sempre usei C para aprender programação. Fortalei o Java e descobri que era muito bom. Era uma linguagem para as pessoas olharem. O Eclipse também é mais confortável de usar do que VS + VA. O prompt automático é realmente muito poderoso. Acima<br>Mas, há dois dias, pesquisei o Bisset do ano e não o conheço. É algo que escrevi naquele ano?<br>Existe também o kernel Linux, versão 0.11, e o código 2w está implementado. É curto e conciso, o que é incrível </p>
<p>Sim, o tempo é como um decote, sempre há um aperto<br>Mas todos aqueles que fazem isso devem entender. Mal posso esperar para adormecer quando chegar em casa. Nem quero me preocupar com minha namorada. Onde posso obter energia para fazer outras coisas, e isso vem acompanhado de atrasos.<br>Sim, ** “Costumo me preocupar por não ter tempo suficiente, mas desperdiço o pouco tempo que tenho. </p>
<p>Depois de uma grande dispensa, cerca da metade das pessoas que saíram, muitos compatriotas que ingressaram no trabalho na época recrutaram<br>Tornei-me uma maioria silenciosa, entrando e saindo do trabalho, sem fofocar e sem me comunicar muito com as pessoas ao meu redor.<br>As perspectivas do projeto não são otimistas. TL já apareceu, o novo TL está muito ansioso e o Yali está ficando cada vez maior<br>Eu achava que havia muitas oportunidades aqui e queria entrar em uma empresa melhor em dois anos. Agora olhe para qual empresa ir, na verdade não faz muita diferença </p>
<p>Estou muito cansada agora, quero desistir, encontrar um lugar para descansar<br>Mas não é tão bom quanto ir à escola, com os pais cobrindo </p>
<p>Se você quiser mudar de carreira o mais rápido possível, para onde deve ir? </p>
]]></content>
      <tags>
        <tag>Career</tag>
      </tags>
  </entry>
  <entry>
    <title>Como aprender Shuangpin</title>
    <url>/pt/How-to-Learn-Shuangpin/</url>
    <content><![CDATA[<p>O primeiro a saber que Shuangpin é a era do ABC inteligente<br>Naquela época, a barra de status de entrada no canto inferior direito tinha um “Quan Pin”. Toque nele e ele se tornou Shuang Pin. Tente algumas letras, mas não sei o que aconteceu.<br>Mais tarde, quando o método de entrada Sogou estava em pleno andamento, a entrada pinyin evoluiu para a segunda geração, o que acelerou muito a velocidade de entrada do pinyin, e Wubi foi ignorado. </p>
<p>Normalmente, quando pensamos sobre algo, o que vem de nossa mente é “som” em vez de caracteres chineses.<br>Então, Pinyin está mais alinhado com o processo de fala do que Wubi </p>
<a id="more"></a>

<p>Mais tarde, tentei Shuangpin, principalmente porque vi uma passagem de “Take Time as a Friend” do professor Li Xiaolai: </p>
<blockquote>
<p>Quando eu realmente percebi os benefícios de fazer anotações durante a leitura, ou mesmo fazer muitas anotações, fiquei surpreso por estar apavorado e suando frio sozinho. De repente, entendi como era absurdo me recusar a praticar datilografia às cegas no passado. Naquela época, mesmo que não houvesse estímulo do sexo oposto, demorava no máximo uma semana para fazer as coisas, mas acabei me recusando a estudar e praticar por preguiça. Se esse pensamento me deu arrepios, mesmo que eu passei uma semana aprendendo datilografia há cinco anos, quantas notas de leitura e palavras mais posso acumular? —— Sem falar que quase 15 anos atrás, eu tive a oportunidade e era perfeitamente possível aprender a digitar às cegas. Meu Deus, quanto tempo eu perdi? Não ouso pensar mais nisso. </p>
</blockquote>
<p>Então comecei a verificar as informações. Não é difícil. Você pode entender depois de ler o Baidu<br>Afinal, eles estão todos no sistema Pinyin, assim como quando eu era criança, eu falava o dialeto da minha cidade, mas basicamente não há obstáculo para aprender mandarim. </p>
<p>Enfrentando vários problemas: </p>
<h2 id="1-Velocidade"><a href="#1-Velocidade" class="headerlink" title="1. Velocidade"></a>1. Velocidade</h2><p>Se não for pela velocidade, os ovos bobos serão substituídos por Shuangpin </p>
<p>Então, onde está o Shuangpin rápido?<br>por exemplo:<br>Eu quero bater “Hello, Double Fight World”<br>A grafia completa é <code>nihao, shuangpinshijie</code><br>Shuangpin é <code>nihk, udpnuijx</code> (o código natural que usei)<br>São apenas seis caracteres, o que reduz o número de pressionamentos de tecla em 8 vezes. Se você contar 3k por dia, também é 4k vezes menos. Também é benéfico para proteger os dedos.<br>Claro que você pode dizer “eu tenho uma grafia super simples”, <code>nh, spsj</code><br>Então eu não vou falar sobre o código duplicado, você pode virar a página para encontrá-lo lentamente<br>E Shuangpin também é Pinyin, então não faz sentido não suportar o Super Jianpin. </p>
<h2 id="2-Metodo-de-entrada-cruzada"><a href="#2-Metodo-de-entrada-cruzada" class="headerlink" title="2. Método de entrada cruzada"></a>2. Método de entrada cruzada</h2><p>Quanpin, não importa qual método de entrada é usado, as chaves são exatamente as mesmas<br>Existem vários esquemas para Shuangpin, os mais comuns são os seguintes (você pode ver isso nas configurações do Sogou)<br>Sogou também tem um plano Sogou </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Shuangpin.jpg" alt=""></p>
<p>Eu verifiquei antes qual esquema é mais eficiente<br>Você não precisa se enroscar em sapatos infantis que nunca tenha tocado antes.<br>Se você quer dizer que existe uma lacuna real, você só está familiarizado com ela </p>
<p>Além disso, se você não for um programador, aquele que está familiarizado com a Microsoft está OK. Afinal, a reputação da Microsoft e os métodos de entrada comuns, como QQ e Shenma, dão suporte a isso. </p>
<p>Se você usa  Family Bucket e não deseja instalar um método de entrada de terceiros, use a solução da Sogou<br>Este é o único que suporta iPhone e Mac sem jailbreak<br>O primeiro código natural que usei, mas não tenho escolha a não ser alterá-lo para a solução Sogou 🤷‍♂️<br>Felizmente, as chaves são quase as mesmas, você se familiarizará com elas em alguns cliques </p>
<p>Por favor continue </p>
<h2 id="3-Plataforma-cruzada"><a href="#3-Plataforma-cruzada" class="headerlink" title="3. Plataforma cruzada"></a>3. Plataforma cruzada</h2><p>Já toquei o teclado dvorak antes, e depois de um mês de familiarização com as teclas (o teclado qwerty só pode ser digitado às cegas depois de alguns meses), não sei se é um efeito psicológico e sinto que a velocidade realmente ficou mais rápida, dos 160 para 220 originais </p>
<p>O Windows pode implementar o mapeamento de teclas qwerty-&gt; dvorak modificando o registro, mas o ubuntu não. Além disso, os telefones celulares se tornaram populares depois do segundo ano. É muito doloroso para os dois teclados mudarem diretamente. Não tenho escolha a não ser retornar ao qwerty. </p>
<p>Com as lições aprendidas do passado, devemos ter muito cuidado ao escolher um plano, caso algum deles não o apoie. </p>
<p>No final, o código natural foi selecionado, seja ubuntu, mac, ou mesmo o QQ pinyin do android, existe esse “código natural” </p>
<h2 id="Exercicio"><a href="#Exercicio" class="headerlink" title="Exercício:"></a>Exercício:</h2><p>Pratica boxe, mas não pratica kung fu<br>Eu descobri o princípio, plano e tudo, e finalmente cheguei à última etapa<br>Também é a etapa mais fácil </p>
<p>Sim, você leu certo, é a etapa mais fácil<br>Como eu disse antes, se Quanpin para Wubi é como aprender inglês, então Quanpin para Shuangpin é tão simples quanto aprender mandarim.<br>Portanto, os alunos que experimentaram o Wubi e desistiram não têm uma sombra psicológica. </p>
<p>É a coisa mais fácil de dizer, porque você só precisa imprimir essa posição-chave, colocá-la ao lado do computador, abrir o QQ e conversar com outras pessoas todos os dias, como de costume, e está tudo bem. </p>
<h2 id="Auto-pratica"><a href="#Auto-pratica" class="headerlink" title="Auto-prática"></a>Auto-prática</h2><ul>
<li>Dois dias atrás: É estranho. (Neste momento, você vai querer mudar constantemente de volta para ShuangPin, especialmente quando MM diz que você é tão lento ao digitar. Você está ocupado com outras coisas? Isso é um pouco de autoestima.) </li>
<li>Os próximos dois dias: acostume-se (a velocidade aumenta gradualmente, exceto para vogais individuais que precisam de uma olhada na mesa principal, e a auto-estima se recupera lentamente)<br>Uma semana depois: Naturalmente, a partir de agora, todas as pessoas serão transeuntes </li>
</ul>
<p>Parabéns, há mais uma habilidade necessária para o traje de viagem para casa B!<br>Especialmente quando alguém usa seu computador para digitar uma série de palavras inexplicáveis </p>
]]></content>
      <tags>
        <tag>Shuangpin</tag>
      </tags>
  </entry>
  <entry>
    <title>Kindle Paperwhite usar exame físico</title>
    <url>/pt/UX-of-Kindle-Paperwhite/</url>
    <content><![CDATA[<p>Na versão japonesa Haitao, após alguns minutos, linhas verticais aparecem inexplicavelmente no meio da tela, e cada vez mais deprimidas<br>Mais tarde, no Google, foi dito que a tinta eletrônica não deveria estar perto do campo magnético, poderia ser causada pelo alto-falante do celular?<br>No momento, posso me contentar com isso, realmente afeta a palavra de reconhecimento e, em seguida, contatar o atendimento ao cliente<br>A versão japonesa não pode ser reparada no continente. </p>
<a id="more"></a>

<p>Já vi o kindle5 do meu colega antes, ele pisca quando viro a página<br>Para mim, que estou acostumado com a velocidade de atualização de telefones celulares, etc., de repente parece inaceitável<br>Já se passaram alguns meses desde que comprei isso. O mini2 ainda não foi lançado e a biblioteca aqui em Hefei não é forte </p>
<p>Depois de realmente usá-lo, sinto por que é chamado de artefato de leitura<br>Em primeiro lugar, a tinta eletrônica protege os olhos, não é tão pesada quanto um telefone celular, e tem uma única função para reduzir a interferência </p>
<p>E houve muitos problemas com a leitura em celulares antes<br>Pixels mortos da tela inaceitáveis, formato insatisfatório após a conversão de PDF, fontes personalizadas, bate-papo online, jogos, etc. </p>
<p>Um dia, observei e descobri de repente que havia ignorado inconscientemente as questões acima e me concentrei inteiramente na aquisição de conteúdo. </p>
<p>Só posso suspirar que esta experiência Dongdong é tão incrível - eu nem percebi que era desconfortável, é realmente super valor </p>
<h2 id="Como-usar-o-push"><a href="#Como-usar-o-push" class="headerlink" title="Como usar o push:"></a>Como usar o push:</h2><p>Procure por um pedaço do tutorial, basta fazê-lo passo a passo, use o vermelho para você </p>
<h3 id="1-Livro"><a href="#1-Livro" class="headerlink" title="1. Livro"></a>1. Livro</h3><p>TXT RTF e outros formatos, envie um e-mail para <a href="mailto:seunome@free.kindle.com">seunome@free.kindle.com</a> (a Amazon irá ajudá-lo a converter)<br>O PDF pode ser visualizado diretamente, mas com margens, a tela horizontal serve<br>Se você tiver que transferir, você pode usar calibre para converter para mobi e-mail para <a href="mailto:seunome@kindle.com">seunome@kindle.com</a> (embora este efeito não seja muito bom, mas eu tentei alguns outros softwares de conversão e comparei, nada disso é bom) </p>
<h3 id="2-Noticias-rss-do-blog"><a href="#2-Noticias-rss-do-blog" class="headerlink" title="2. Notícias, rss do blog"></a>2. Notícias, rss do blog</h3><ul>
<li>Os Kindle4rss estão todos configurados e descobri que apenas usuários pagantes podem implementá-lo automaticamente, trapaceando! ! ! </li>
<li>Aikandou parece estar atualizando o servidor, pare o registro </li>
<li>Não gosto do nome de orelhas de cachorro. Só experimentei com este. Não quero ficar satisfeito. </li>
</ul>
<h2 id="Sistema-de-escova"><a href="#Sistema-de-escova" class="headerlink" title="Sistema de escova:"></a>Sistema de escova:</h2><p>O Kindle pode ser transformado em um sistema multi-view<br>Existem dois recursos que eu gosto muito, mas o sistema nativo do Kindle não tem: </p>
<ul>
<li>Sincronização multiplataforma </li>
<li>Lendo estatísticas de tempo </li>
</ul>
<p>Ao obtê-lo, o sistema kindle pw foi atualizado para suportar pdf, e pode ficar bloqueado e consertado, então não preciso me preocupar com isso. </p>
]]></content>
      <tags>
        <tag>Kindle</tag>
      </tags>
  </entry>
  <entry>
    <title>Tour pela Cidade Imperial</title>
    <url>/pt/Travel-to-Beijing/</url>
    <content><![CDATA[<p>Por falar na capital imperial, esta imagem surgiu na minha mente: a areia amarela está cheia de céu, os transeuntes com máscaras grossas, a capital imperial pode ver o mar e o barco quando chove. </p>
<p>Não quero sair do carro e descobrir que o céu está muito fraco, azul e azul. Mal posso esperar para digitar algumas palavras nele para declarar “Sou azul celeste”<br>Depois de chegar ao hotel providenciado pelo guia turístico, meu amiguinho e eu ficamos chocados: há fileiras de casas de azulejos e casas de azulejos. </p>
<a id="more"></a>

<h2 id="primeiro-dia"><a href="#primeiro-dia" class="headerlink" title="primeiro dia"></a>primeiro dia</h2><p>Mais cedo, encontrei sacos plásticos no chão e sujos, bagunçados, como a cena da rua atrás das barracas de comida na cidade de Yingnan, onde moro<br>Mais tarde, sob a liderança do Diretor Ma, senti que a vida na capital imperial era tão difícil<br>Nesse ínterim, o guia de cavalos está na estrada sem parar, como se quisesse terminar rapidamente a jornada do dia<br>Parece que o microstep de Lingbo foi pequeno e não há grande movimento, mas ele foge rapidamente, nos jogando fora.<br>Em meio dia, corremos para a Praça Tiananmen, Museu Nacional, Museu Militar e, em seguida, para o Cubo d’Água / Ninho de Pássaro </p>
<p>KFC mencionou o pequeno quatro ao meio-dia. Eu sei que é a pequena era que obteve um incrível 0,9 ponto no verycd. A pontuação mais baixa parece ser 1 ponto. Como surgiu o 0,9? Inconscientemente<br>Então fui forçado a assistir a uma performance acrobática<br>Os resultados do teste noturno foram gratificantes, depois de um ano de muito trabalho, peguei um bronzeado na hora. </p>
<p>Felizmente, as passagens do casal que viajam juntos são depois de amanhã, caso contrário é difícil garantir que voltarão no dia seguinte<br>Experienciou profundamente a luta da tribo de formigas da família Xiabei Piao e o sonho chinês promovido em todos os lugares </p>
<p>À noite, eu tinha uma grande casa de tigela em uma rua dourada, e um amigo que ouviu o guia de cavalos balbuciava como é difícil estar na capital imperial, eu poderia estar em uma unidade de negócios ou na capital imperial.<br>Eu estava bebendo água e pensando, caramba, é como se você fosse o único no mundo sofrendo<br>Mas, afinal, é um prazer e você tem que fingir que é solidário. Felizmente, não há riso.<br>Não querendo ser o último, o casal quis encarar e correu para acertar a conta, e o guia turístico felizmente pegou de volta e reembolsou<br>Quando saí, imitei o que Gandalf disse a Bilbo Bolseiro no filme O Hobbit: </p>
<blockquote>
<p>O mundo não está em seus mapas e livros … Quando você voltar, você não será o mesmo.<br>O mundo não está em seus mapas e notas … Quando você volta, você é diferente dos outros. </p>
</blockquote>
<p>PS1: A casinha que foi comida e fechou no primeiro ano do ensino médio?<br>PS2: Wangfujing, ao mesmo tempo @ 新华 视点: Por volta das 20:42 da noite do dia 30, um homem esfaqueou uma garota com uma faca em frente ao portão do Mercado de Xindongan em Wangfujing, Pequim </p>
<h2 id="O-proximo-dia"><a href="#O-proximo-dia" class="headerlink" title="O próximo dia"></a>O próximo dia</h2><p>Fui até a Cidade Proibida e dei uma olhada. Não sei por quê, cada tijolo e cada azulejo revelam uma forte ignorância feudal.<br>O guia está em Balabala, onde não há mais ninguém Feng Shui, Yin e Yang, mas dois transeuntes tornaram-se espectadores livres. </p>
<p>PS: Um deles ainda é o criador de códigos da Huawei </p>
<p>Nesse ínterim, vi uma estrangeira de cabelos compridos, de cabeça baixa, recostada no parapeito silenciosamente, com lindas sardas no rosto. </p>
<p>PS: Não admira que algumas pessoas brancas curtam a pele como trigo<br>PS: Depois de ver esse tipo de pessoa, sinto que o mundo se acalmou, já vi várias vezes no total. Nesta sociedade impetuosa e barulhenta, dá tranquilidade às pessoas, e não sei quando poderei alcançar tal reino sem usar objetos estranhos. </p>
<p>À noite, o guia de cavalos mudou para um hotel cinco estrelas, não, o Express Hotel fora do Quinto Anel Viário<br>Houve um desacordo sobre como levar o corpo ao destino<br>Depois de fazer uma longa viagem de metrô, descobri que alguns jovens estavam lendo telefones / livros móveis e cobrando-os a cada minuto, incluindo nosso guia a cavalo. </p>
<p>Isso me lembra o volume de leitura da nação russa, e a grande dinastia está finalmente ficando melhor<br>Mas isso vai continuar acontecendo? Lágrimas de homens e mulheres </p>
<p>PS: Eu geralmente não saio com garotas e me torno notado </p>
<p>Tenho uma mentalidade de inação e não quero deitar com a arma, e a situação está piorando<br>No primeiro dia, eu cuspi o guia de cavalos de vez em quando, mas agora não tenho força<br>Pessoas são difíceis de desmontar, omitido aqui </p>
<h2 id="Terceiro-dia"><a href="#Terceiro-dia" class="headerlink" title="Terceiro dia"></a>Terceiro dia</h2><p>Originalmente, eu queria ir para a Universidade de Pequim e outras universidades e Zhongguancun<br>Mas ouvi dizer que os novos alunos estão começando a escola recentemente, eles podem não ser admitidos<br>Juntamente com os pequenos pensamentos de Tai Ji no outro dia </p>
<p>Olhe a hora e cavalgue sozinho por milhares de milhas.<br>Bebendo uma garrafa de água do Planalto Ocidental de Qinghai-Tibete da nação chinesa na Estação Sul, ela ficou imediatamente cheia de energia positiva<br>Depois de ler um livro no carro por um tempo, desci e comprei um sorvete<br>Super Plus aproveite </p>
<p>Claro que o desenho de Tucson está quebrado<br>Só então recebi uma mensagem de texto e fui convidado a convidar para jantar<br>Tonto, você não sabe se está cansado?<br>Acabei de voltar da capital imperial, tão cansada e meio morta, também convidei para comer, vamos falar do meu namorado<br>Então, a força de vontade que observei nos últimos dois dias fez efeito. Lembrei-me do exercício verde, respirei fundo algumas vezes, perguntei por que e respondi que não comia.<br>Também penso em ser rejeitado por Dez Ações naquela época, e todos os tipos de trapaças e incidentes com sangue de cachorro depois. Olhando para trás, parece um romance vulgar do local ao nojento.<br>Comprei um relógio no ano passado e cometi um erro se não acertasse a conta. </p>
<p>Depois que cheguei em casa, fiquei mais de uma hora online e descobri que não havia água<br>De repente, os níveis revisados ​​de necessidades de Maslow são muito precisos </p>
<p>Quando corri para pagar a conta da água, o vendedor pareceu surpreso e não devia a conta.<br>Na dúvida, o locador enviou uma mensagem de texto dizendo que fechou o portão principal </p>
<p>Droga, sua irmã! ! ! Eu acho que eles ainda estão sentados no trem vermelho </p>
<p>Mais tarde, ouvi da esposa do proprietário que a carruagem pegou fogo devido ao envelhecimento da linha, e então eles foram chamados pela polícia para registrar as transcrições. Pode ser considerado como naquela época. </p>
<p>Então, você não pode falar muito áspero, e você não pode ser um homem. São Nian </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>Beijing</tag>
      </tags>
  </entry>
  <entry>
    <title>Acupuntura quente</title>
    <url>/pt/Warm-Acupuncture-Therapy/</url>
    <content><![CDATA[<p>Hoje, Zha Chengshan parece ter encontrado a posição certa e não dói muito. É amargo depois de alguns centímetros.<br>Coloque o Ai Zhu no cabo da agulha e acenda </p>
<p>Está tudo bem no início, Marte queima lentamente<br>Uma única faísca pode iniciar um incêndio na pradaria, e a fumaça está ficando cada vez maior, provavelmente com medo<br>O desconforto está ficando cada vez mais forte, de modo que tenho uma alucinação forte: os pontos de acupuntura estão queimados. </p>
<a id="more"></a>

<p>Apresse-se e despeje a água, ouvi um guincho, e depois saiu muita fumaça, como se batesse em ferro<br>Ai Yiran, que não queria acender, era teimosa e teve que tomar um copo d’água<br>Embora finalmente tenha se apagado como fumaça não queimada<br>Mas Ai Zhu e Needle parecem estar morrendo juntos, eles são inseparáveis ​​do inchaço<br>Não me atrevo a fazer grandes movimentos, afinal, a outra ponta está presa na minha carne o (╯ □ ╰) o </p>
<p>Como havia uma pilha de bastões de moxa nele, tive que puxá-lo com força e parecia que 101 estava grudado nele. Foi muito doloroso. </p>
<p>Estou suado, mas quando lavo o rosto me sinto bem nas panturrilhas </p>
<p>Lembre-se da análise:<br>Deveria ter usado hit run hit<br>Juntamente com a defesa auxiliar sem atrito lateral, o valor do dano é bastante aumentado<br>Muito quente pode ser uma ilusão, o movimento da ponta da agulha puxa a fibra nervosa é o motivo </p>
<p>Claro, o mais provável é que eu seja neurótico </p>
]]></content>
      <tags>
        <tag>Acupuncture</tag>
      </tags>
  </entry>
  <entry>
    <title>Use a página do Github como blog</title>
    <url>/pt/use-github-pages-as-a-blog/</url>
    <content><![CDATA[<p>Finalmente, encontrei este lugar porque queria ter meu próprio blog há alguns meses </p>
<p>Existem muitos blogs públicos, como Douban e Sina, mas nenhum deles é meu favorito </p>
<p>Eu só quero encontrar um lugar onde ninguém me conheça, possa registrar algumas das minhas ** experiências ** ou ** ideias ** </p>
<a id="more"></a>

<p>Qzone é um blog que utilizo há muito tempo, mas as pessoas nele são todos meus amigos ou colegas. Não quero ser considerado um ** psiquiátrico **. ^ \ _ ^ </p>
<p>Segui o método do <a href="http://jekyllrb.com/">jekyllrb</a>, passo a passo, parece que deu certo, a página está online! Existe um “** Hexo **” no meu site. </p>
<p>(Agora, eu uso ** Hexo ** em vez de jekyll) </p>
<p>Na verdade, já há um ano, ouvi de um colega que o <a href="http://github.com/">github</a> pode ser usado como um blog. Mas essa tarefa foi atrasada dia a dia. Acho que deve haver muitas definições de configuração. Não só não gosto de ** coisas complicadas *<em>, mas também como *</em> procrastinador **. </p>
<hr>
<p><a href="http://www.englishiskillingme.com/">Inglês está me deixando louco</a>, eu não tenho habilidade suficiente para fazer isso </p>
]]></content>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>O assassinato provocado por duas garrafas de Jiaduobao</title>
    <url>/pt/Two-bottles-of-blood-caused-by-Jiaduobao/</url>
    <content><![CDATA[<p>Dois pequenos parceiros, um bom relacionamento<br>Um deles é da escola de polícia e o outro é da medicina chinesa </p>
<p>Um amigo de um médico chinês veio como convidado e brigou quando ele saiu, sendo multado em 5 yuans para comprar uma garrafa de Jiaduobao que acabara de beber.<br>Por ser quase 43% superior ao preço de mercado, pode ter causado um desequilíbrio psicológico no parceiro da medicina chinesa, que até arriscou e tentou pegar outro frasco de Jiaduobao.<br>Depois de ser descoberto, a natureza do incidente natural aumentou e os amigos da escola de polícia ficaram mentalmente insultados<br>E os amigos da MTC resistiram teimosamente e, ao mesmo tempo, trouxeram habilidades de provocação inconscientemente<br>No final, ele tentou resolver o incidente com RMB e foi socado em seguida. </p>
<a id="more"></a>

<p>Achei que o amiguinho que estudou medicina chinesa era como eu. Ele nunca usava as mãos desde criança e nem mesmo via as pessoas fazerem as mãos. Ele tem pouca experiência no local, então foi espancado passivamente, não evasivo e estúpido o suficiente para ser fisicamente atraído. dps<br>Mais tarde descobri que meu desenho Tucson estava quebrado </p>
<p>Quando reagi e pensei em puxar, a batalha acabou<br>O incidente foi tão repentino, eu não reagi, e meu colega praticante de medicina chinesa foi atingido<br>O golpe final é um chute voador + faca para trás na cabeça<br>Eu não sei como fazer um combo 2x no arcade<br>Provavelmente não esperava que meu colega da academia de polícia fosse realmente fazer isso. Fiquei chocado! </p>
<p>Depois, um amigo da academia de polícia bloqueou a porta e impediu que o parceiro da medicina chinesa saísse. Não entendi na hora, mas agora me lembro<br>Muitas vezes aparece nos romances de artes marciais que depois de receber uma palma, não houve problema na hora e, após alguns passos para fora do portão, ele vomitou sangue e caiu no chão.<br>Claro, depois de um consenso, os amigos TCM ainda deixaram </p>
<p>Sentindo-se aliviado, pergunte como ele foi ferido, se ele sofreu ferimentos internos quando foi chutado e se ele tinha hematomas no estômago<br>Eu não quero sair ileso e ter sido ativo na cena do namoro com seu GL </p>
<ul>
<li>\ _- ||| </li>
</ul>
<p>O amiguinho da academia de polícia daqui disse que o tecido mole da mão parecia machucado e dói quando ele se mexia. </p>
<ul>
<li>\ _- ||| </li>
</ul>
<p>No passado, perguntei a meus amigos que têm médicos de medicina chinesa se eles não praticavam força interna.<br>O resultado ainda foi prometido </p>
<p>Dado seu sobrenome Zhang GL, será que o seguinte episódio aconteceu naquele momento: </p>
<blockquote>
<p>Nesse momento de silêncio, o amiguinho da medicina chinesa lembrou-se de repente de algumas palavras do livro didático: “Ele é forte por ele, e a brisa sopra nas montanhas. Ele está na horizontal e a lua brilha no rio.” Ele estava lá. Quando li esses poucos textos na sala de estudo, ainda não entendia o motivo. Nesse momento, de repente me lembrei que, com a tirania e a maldade dos alunos da academia de polícia, você mesmo não é um inimigo. De acordo com o ponto principal do livro, parece que não importa o quão forte o inimigo seja, Por mais feroz que seja, ele pode ser considerado como a brisa soprando na montanha e a lua brilhante brilhando no rio. Embora possa ser aplicado a mim, não pode ser danificado. Mas como posso não prejudicar meu corpo? O texto abaixo dizia: “Ele é cruel e se odeia, estou com muita raiva”. </p>
</blockquote>
<p>T M D isso está me jogando </p>
<p>Dado que esses dois terroristas muitas vezes se movem a menos de um metro e meio de nosso raio<br>Decidi completar Chum kiu tanto quanto possível neste fim de semana, apenas no caso </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>Jogos</title>
    <url>/pt/Games/</url>
    <content><![CDATA[<h1 id="Jogos-jogados-naqueles-anos"><a href="#Jogos-jogados-naqueles-anos" class="headerlink" title="Jogos jogados naqueles anos"></a>Jogos jogados naqueles anos</h1><h2 id="Monopolio"><a href="#Monopolio" class="headerlink" title="Monopólio"></a>Monopólio</h2><p>O mercado de ações vai para a soma deles </p>
<p>Como resultado, um incidente repentino, falência. . . </p>
<p>Compre seguro na próxima vez </p>
<a id="more"></a>

<h2 id="defesa-radiante"><a href="#defesa-radiante" class="headerlink" title="defesa radiante"></a>defesa radiante</h2><p>Depois de não querer me afastar dos jogos de PC, fiquei obcecado por jogos para celular<br>Plants vs. Zombies 2 Depois de passar de nível em alta velocidade, o significado ainda não é suficiente<br>Eu queria ver outras defesas da torre e descobri </p>
<p>defesa radiante, chamada chinesa de defesa deslumbrante<br>Como o nome sugere, a foto é muito bonita, gostei na hora<br>Mas não quero ser o jogo mais difícil </p>
<p>Depois de jogar, também senti a situação miserável no estágio inicial. Se a tecnologia for atualizada, o estágio posterior será mais suave.<br>Pelo contrário, se a fase inicial for relativamente lisa, a parede leste será inevitavelmente demolida mais tarde. </p>
<p>Hoje, depois do décimo nível, sempre tive essa música dinâmica em minha mente. </p>
<p>Depois disso, vi a resposta do TOP em Zhihu. Porra, </p>
<p>Depois de um tempo, acalme-se, pense sobre isso, compare com os outros, siga seu próprio caminho </p>
<h2 id="Anno-2070-em-alto-mar"><a href="#Anno-2070-em-alto-mar" class="headerlink" title="Anno 2070 em alto mar"></a>Anno 2070 em alto mar</h2><p>Esta simulação é muito alta e o ritmo do jogo é muito lento, como uma simulação do mundo real<br>É normal jogar por um mês. É impossível para uma batalha como Warcraft por dez minutos ou mesmo vários minutos. </p>
<h3 id="1-Preste-atencao-nas-pessoas"><a href="#1-Preste-atencao-nas-pessoas" class="headerlink" title="1. Preste atenção nas pessoas"></a>1. Preste atenção nas pessoas</h3><p>Nos jogos anteriores, as pessoas eram feitas, embora não fossem bestas, eram pelo menos bucha de canhão e eram atraídas para serem vacas e cavalos.<br>E as pessoas lá dentro parecem ter passado pelo Renascimento e embarcado no caminho da liberdade<br>O governante (eu) tornou-se um militar e quer tratar o povo como um tio<br>Completa várias instalações, hospitais, vários alimentos, agências de segurança pública, salas de concerto, etc., para atender às várias necessidades<br>Para que as pessoas estejam dispostas a vir e se estabelecer, impostos </p>
<h3 id="Relacoes-de-dois-paises"><a href="#Relacoes-de-dois-paises" class="headerlink" title="Relações de dois países"></a>Relações de dois países</h3><p>Haverá vários tipos de cooperação para alcançar uma situação ganha-ganha<br>Claro que também há um assassino: dinheiro de coisas </p>
<h3 id="Tres-recursos"><a href="#Tres-recursos" class="headerlink" title="Três recursos"></a>Três recursos</h3><p>Existem apenas algumas ilhas<br>Algumas das terras áridas deixadas por bombas nucleares e outras são as ruínas deixadas pela superindustrialização, muitas vezes acompanhada por chuva ácida<br>Alguns solos são mais amenos e maiores, ocupando tempo e lugar certos, podendo até dar sinais de tecnologia futura<br>Mercado global, você pode pegar e vender terras<br>Você também pode investir em outros países, existe na verdade um controle de risco </p>
<h3 id="Quatro-operacoes"><a href="#Quatro-operacoes" class="headerlink" title="Quatro operações"></a>Quatro operações</h3><p>Você não precisa de um teclado, um mouse ou mesmo um touchpad. A era do Warcraft APM acabou para sempre.<br>Não sei se perdi essas operações. Além do comércio marítimo, tenho que me perguntar sobre todos os outros assuntos.<br>Eu tenho que equilibrar os recursos entre as ilhas<br>Eu não consigo controlar isso.<br>Acontece que eu estava assistindo “Out of Control”, que descreve o distribuído e pequeno, mas bonito </p>
<h3 id="Cinco-guerras"><a href="#Cinco-guerras" class="headerlink" title="Cinco guerras"></a>Cinco guerras</h3><p>Ignorar Chicheng e atacar diretamente armazéns e portos, implicando em uma retirada do fundo do tanque e sem fazer nada com metade do esforço<br>Depois que o armazém explodiu, os prédios ao redor tornaram-se água sem fonte, uma árvore sem raiz, e ruíram. </p>
<p>Em termos de diplomacia, ele estendeu as mãos sem acertar as pessoas sorridentes, enfiou dinheiro em todos os lugares, assistiu às fricções nos países vizinhos, jogou feliz e se desenvolveu discretamente. </p>
<p>Lembro-me de quando estava no ensino fundamental, perguntei ao meu professor sobre a Blitz, por que alguns países europeus se renderam sem lutar.<br>O professor sorriu, centenas de tanques pressionados, como lutar<br>Naquela época, tudo que eu sabia era que quando o império se mover, cem regimentos lutarão. Não sei as dificuldades das guerras estrangeiras sobre a população<br>E a filosofia da época era que um soldado pode ser morto e não ser insultado. É melhor lutar até que reste apenas um tijolo e um ladrilho do que deixar o inimigo mesmo meio passo<br>Além do mais, as pessoas simplesmente dirigiram até a fronteira nacional e não atiraram. Por que se ajoelharam e lamberam? (Não havia tal palavra naquela época)<br>Naquela época, eu ainda não conseguia entender ou mesmo saber como estavam os soldados que vinham para a cidade sem lutar </p>
<p>Quando eu estava em plena diplomacia e distribuindo submarinos, e quase ao mesmo tempo, uma bomba nuclear estava em um depósito, e então fui declarar guerra e explodi diretamente o oponente para fora do jogo. </p>
<h2 id="Assassin’s-Creed-4"><a href="#Assassin’s-Creed-4" class="headerlink" title="Assassin’s Creed 4"></a>Assassin’s Creed 4</h2><p>Eu pensei que depois da Revelação da Fraternidade de Ezio, depois de uma vida inteira no serviço militar, não há deus </p>
<p>O que deve ser feito: escalar paredes, assassinatos, todo tipo de coisa, sem surpresas </p>
<p>Eu vi o 4 do assassino no verycd, suspirei pela hora e então vi sob a bandeira preta </p>
<p>Já assisti a um documentário, China Revolution: sob a bandeira vermelha, não há muito a dizer, autossuficiente, então o nome 4 é tão dominador. </p>
<p>Isso reproduz a grande era náutica, tornados, ondas e batalhas marítimas nas tempestades </p>
<p>Tão agradável </p>
<h2 id="Saints-Row-4"><a href="#Saints-Row-4" class="headerlink" title="Saints Row 4"></a>Saints Row 4</h2><p>Isso me deixa inchado? </p>
<p>Engraçado como sempre, com humor negro por toda parte </p>
<p>As coisas a seguir são realmente surpreendentes. </p>
<p>Aliens! ! ! </p>
<p>Então … e … </p>
<p>superpotência? ! </p>
<p>Se você já jogou o Protótipo, você deve estar familiarizado com ele desta vez<br>Se você viu The Matrix, você vai entender </p>
<p>Observe aquela ação<br>Parkour é tão bom quanto Alex<br>Saltar e acumular força são iguais a Neo<br>Vindo do céu, como o Superman </p>
<p>Não vá ao código (๑ ′ ° ︿ ° ๑) para expor, caso contrário, é fácil fingir morte e sair à força </p>
<p>Realmente uma cidade livre </p>
<p>A única desvantagem é que o mapa é basicamente o mesmo das três gerações, o que é um pouco pequeno para o Superman </p>
]]></content>
      <tags>
        <tag>Games</tag>
      </tags>
  </entry>
  <entry>
    <title>Por que Hexo</title>
    <url>/pt/why-hexo/</url>
    <content><![CDATA[<p>Usei Jekyll quando o construí, Octopress nunca tentei<br>O design da estrutura de Jekyll é dividido em duas partes: código + página da web gerada<br>Ao enviar para o github, a parte do código é empurrada para cima e hexo é uma página da web gerada localmente, que deve ter certas vantagens na velocidade<br>Eu vi que o modelo padrão também é bonito, então mudei para hexo ontem </p>
<a id="more"></a>

<p>Acho que a maior característica do hexo é que ele oculta todos os tipos de comandos complicados<br>Nas palavras de Jekyll, pelo menos uma dúzia de itens desde a construção até a conclusão<br>E escrever um novo artigo requer pelo menos </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jekyll new post xxx</span><br><span class="line">vim _post/<span class="variable">$time</span>-xxx</span><br><span class="line">git commit -a -m xxx</span><br><span class="line">git push remote master</span><br></pre></td></tr></table></figure>

<p>Talvez aos olhos de muita gente já seja muito simples </p>
<p>Mas saiba que algumas pessoas ** não são leões de cerco *<em>, elas apenas querem começar um blog sem pensar e o foco está em *</em> escrever **<br>E antes de escrever, você tem que fazer tantos comandos do Parapara, se você esquecer um, ou perder um parâmetro, você tem que -h, se o seu inglês não é bom, você tem que procurar no Google, ficar parado, tem que baidu, espera até o real Ao escrever, não sei quantos Pomodoros são.<br>E jekyll tem pelo menos um pouco do conceito git, se você escreve um blog chinês, você tem que mudar o ruby ​​(utf-8)<br>Todos os dias, todos os dias, todos os dias! </p>
<p>E hexo é muito simples, você só precisa saber 8 letras em todo o processo </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n <span class="comment"># new</span></span><br><span class="line">hexo g <span class="comment"># generate</span></span><br><span class="line">hexo s <span class="comment"># server</span></span><br><span class="line">hexo d <span class="comment"># deploy</span></span><br></pre></td></tr></table></figure>

<p>Para mim e outros leões de cerco não profissionais, é tão revigorante usar isso até as lágrimas. </p>
]]></content>
      <tags>
        <tag>Blog</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Meu primeiro Macbook Pro</title>
    <url>/pt/My-First-Macbook-Pro/</url>
    <content><![CDATA[<p>rMBP ME865 8g 256g<br>Taobao, Banco de Hong Kong, começou há três dias </p>
<a id="more"></a>

<h2 id="Comece-a-atencao"><a href="#Comece-a-atencao" class="headerlink" title="Comece a atenção"></a>Comece a atenção</h2><h3 id="Se-a-caixa-chassi-ID-do-sistema-e-o-mesmo"><a href="#Se-a-caixa-chassi-ID-do-sistema-e-o-mesmo" class="headerlink" title="Se a caixa / chassi / ID do sistema é o mesmo"></a>Se a caixa / chassi / ID do sistema é o mesmo</h3><p>Se os três códigos estão em um, a diferença deve ser descompactada </p>
<h3 id="Detectar-tempos-de-ciclo-de-energia"><a href="#Detectar-tempos-de-ciclo-de-energia" class="headerlink" title="Detectar tempos de ciclo de energia"></a>Detectar tempos de ciclo de energia</h3><p>Geralmente em 5 vezes, quanto menos, melhor (o meu é o dobro) </p>
<h3 id="Verifique-a-data-de-garantia-no-site-oficial"><a href="#Verifique-a-data-de-garantia-no-site-oficial" class="headerlink" title="Verifique a data de garantia no site oficial"></a>Verifique a data de garantia no site oficial</h3><p><a href="https://selfsolve.apple.com/agreementWarrantyDynamic.do">Aqui</a> (você pode ver a data de compra do vendedor) </p>
<h3 id="Nunca-use-qualquer-otimizacao"><a href="#Nunca-use-qualquer-otimizacao" class="headerlink" title="Nunca use qualquer otimização"></a>Nunca use qualquer otimização</h3><p>Principalmente os calçados infantis que acabaram de virar para o Windows e trouxeram ** TOC ** limpo<br>Eu sei há muito tempo que o mac não precisa ser limpo e é um novo notebook, mas quando vejo a melhor limpeza de disco - CleanMyMac, ainda me sinto barato </p>
<p>Depois de limpar um pouco, descobri que a temperatura estava acima de 90 e verifiquei o problema de dissipação de calor do mac<br>Mais tarde, foi descoberto que havia um processo acelerado da CPU<br>Então descobri que muitos ícones no Dock ficaram transparentes (há uma palavra, você pode clicar nela e reiniciá-la não resolverá)<br>Um Google, muitas pessoas realmente reinstalaram o sistema </p>
<p>E o culpado é, na verdade, CleanMyMac<br>A lição do sangue é que se você não morrer, não morrerá! ! ! ** </p>
<p>A solução para a transparência do ícone: </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rm ~/Library/Application\ Support/Dock/*.db; killall Dock</span><br></pre></td></tr></table></figure>

<p>Clique no Dock para restaurá-lo; se não funcionar, mova-o primeiro para fora e arraste-o para dentro </p>
]]></content>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>A vida não deveria ser tão chata</title>
    <url>/pt/Life-Should-not-be-so-Boring/</url>
    <content><![CDATA[<p>Colega de classe, você acha que a vida é tão chata<br>Anestesiar-se no jogo todos os dias? Escovar o Weibo repetidamente?<br>Ou você está se perguntando que não tem um jornal Han / Sister para um cavalo de deus? </p>
<p>Na verdade, o mundo ainda é muito poderoso. Se você não acredita em mim, consulte: (Coletando continuamente … poste o link mais tarde) </p>
<a id="more"></a>

<h3 id="ler"><a href="#ler" class="headerlink" title="ler"></a>ler</h3><p>Não há necessidade de explicar isso, nada mais é do que: </p>
<ul>
<li>Pessoas feias podem f \ * \ * k livros apenas. </li>
<li>Leia mais se você é feio </li>
</ul>
<h3 id="Shuangpin"><a href="#Shuangpin" class="headerlink" title="Shuangpin"></a>Shuangpin</h3><p>Vocês estão todos fracos? </p>
<h2 id="Modo-de-pensar"><a href="#Modo-de-pensar" class="headerlink" title="Modo de pensar"></a>Modo de pensar</h2><h3 id="Navalha-de-Occam"><a href="#Navalha-de-Occam" class="headerlink" title="Navalha de Occam"></a>Navalha de Occam</h3><p><a href="Http://book.douban.com/subject/1467022/">Deus lança os dados?</a> </p>
<p>Simplicidade é melhor do que complexidade<br>Simples é bonito </p>
<h3 id="Pensamento-critico"><a href="#Pensamento-critico" class="headerlink" title="Pensamento crítico"></a>Pensamento crítico</h3><h3 id="independente"><a href="#independente" class="headerlink" title="independente"></a>independente</h3><ul>
<li>econômico </li>
<li>Discurso </li>
<li>pensamento </li>
</ul>
<p>Indispensável<br>Olha meu ambiente celestial, ok … </p>
<h3 id="Poor-Baba-Rich-Baba"><a href="#Poor-Baba-Rich-Baba" class="headerlink" title="Poor Baba Rich Baba"></a><a href="http://book.douban.com/subject/1033778/">Poor Baba Rich Baba</a></h3><p>Fluxo de caixa / ESBI quatro quadrantes / demonstração de resultados </p>
<p>Uma frase chocada por Douban Book Review </p>
<blockquote>
<p>As pessoas que leram este livro nos primeiros anos agora são, pelo menos, milionários </p>
</blockquote>
<h3 id="Wuhezhizhong"><a href="#Wuhezhizhong" class="headerlink" title="Wuhezhizhong"></a><a href="http://book.douban.com/subject/1012611/">Wuhezhizhong</a></h3><p>Lembro-me de que parecia haver um professor de Harvard que não entendia por que os alunos da China ficaram tão loucos da noite para o dia<br>Ele nunca deve ter lido este livro </p>
<h3 id="Jogo-hipotetico"><a href="#Jogo-hipotetico" class="headerlink" title="Jogo hipotético"></a>Jogo hipotético</h3><p>Existe apenas uma vida em uma vida, que é linear<br>Quando não há nada para fazer, observe as pessoas ao seu redor e escolha um personagem entre as pessoas ao seu redor para trazer<br>Simule uma vida completamente diferente </p>
<h3 id="Caverna-Platao"><a href="#Caverna-Platao" class="headerlink" title="Caverna Platão"></a>Caverna Platão</h3><p>Matriz? </p>
<h3 id="Fora-de-controle-uma-breve-historia-de-informacoes-genes-egoistas"><a href="#Fora-de-controle-uma-breve-historia-de-informacoes-genes-egoistas" class="headerlink" title="Fora de controle / uma breve história de informações / genes egoístas"></a>Fora de controle / uma breve história de informações / genes egoístas</h3><p>Essa quantidade de informação é demais, ela destrói as três visualizações, e você tem que prová-la você mesmo<br>Vontade livre<br>Gene-meme<br>Na verdade, não somos nada além de prata mecânica </p>
<h2 id="Cirurgia-fisica"><a href="#Cirurgia-fisica" class="headerlink" title="Cirurgia fisica"></a>Cirurgia fisica</h2><h3 id="Cambridge-Concise-History-of-Jin-Yong’s-Martial-Arts"><a href="#Cambridge-Concise-History-of-Jin-Yong’s-Martial-Arts" class="headerlink" title="Cambridge Concise History of Jin Yong’s Martial Arts"></a><a href="http://book.douban.com/subject/24324704/">Cambridge Concise History of Jin Yong’s Martial Arts</a></h3><p>Falso é verdadeiro quando verdadeiro também é falso, nada está lá e não há nada<br>Não acredite, veja abaixo </p>
<h3 id="Tai-chi"><a href="#Tai-chi" class="headerlink" title="Tai chi"></a>Tai chi</h3><p>Não é Tai Chi Radio Gymnastics<br>Chen Tai Chi, coloque o combate real de lado primeiro, não há realmente nada a dizer sobre preservação da saúde<br>Diz-se que a ioga foi introduzida no exterior, e estudos posteriores mostraram que o tai chi tem um melhor efeito de condicionamento físico ~ </p>
<p>Agora, mais do sentimento pertence à técnica de orientação, o movimento externo atinge a quietude interna e o pequeno Zhoutian é impulsionado pela abertura da grande semana. </p>
<h3 id="Ioga"><a href="#Ioga" class="headerlink" title="Ioga"></a>Ioga</h3><p>Estas não são apenas as ações habituais na TV todos os dias </p>
<p>O núcleo são os três chakras e os sete chakras (como os meridianos na medicina chinesa)<br>Chakra Sahasrara, Chakra da testa, Chakra da garganta, Chakra do coração, Chakra Manipura, Chakra do mar, Chakra Brahma </p>
<p>Parece que o efeito é tão bom quanto passar por Xiao Zhoutian </p>
<h3 id="Ren-Du-Ermai"><a href="#Ren-Du-Ermai" class="headerlink" title="Ren Du Ermai"></a>Ren Du Ermai</h3><p>Lendo romances de artes marciais quando era jovem, eu sempre imaginei que um dia eu acidentalmente abri as duas linhas de Ren e Du, e voei.<br><a href="http://news.sina.com.cn/s/2012-05-23/160624465410.shtml">Departamento de Saúde de Gansu: 41 equipes médicas aprendem a passar pelo segundo pulso de Ren e Du em 9 dias</a><br>Isso é verdade, não há nada de errado nisso! ! ! </p>
<p>Na verdade, vem do <a href="http://book.douban.com/subject/4665276/">Método de Operação Li Shaobo True Qi</a>, que tem alta credibilidade </p>
<h3 id="Primavera"><a href="#Primavera" class="headerlink" title="Primavera"></a>Primavera</h3><p>Ip Man 1 2 The Prequel The Ultimate Battle: O Grande Mestre Depois disso, todos sabiam sobre essas artes marciais<br>Conhecer o desempenho das artes marciais / combate real<br>O que mais me surpreendeu foi que Wing Chun realmente tocava na TV </p>
<p>Quando as estacas de madeira foram cravadas, houve um bunker destruído. </p>
<p>Pouco pensamento surgiu </p>
<h2 id="Poder-mental"><a href="#Poder-mental" class="headerlink" title="Poder mental"></a>Poder mental</h2><h3 id="Hipnose"><a href="#Hipnose" class="headerlink" title="Hipnose"></a>Hipnose</h3><p>Não é que você pode deixar os outros fazerem tudo o que você aprender, não pense muito, adolescente </p>
<h3 id="Qingming-Dream-espaco-dos-sonhos"><a href="#Qingming-Dream-espaco-dos-sonhos" class="headerlink" title="Qingming Dream (espaço dos sonhos)"></a>Qingming Dream (espaço dos sonhos)</h3><p>Bem como um jogo 3D em grande escala, o nível mais alto é o criador de sonhos<br>A ideia central é: ** Eu percebo que estou sonhando no meu sonho ** </p>
<p>É dito que se você controlar seus sonhos, você pode fazer qualquer coisa, qualquer coisa.<br><a href="http://tieba.baidu.com/f?kw=%C7%E5%C3%F7%C3%CE">Baidu Qingmingmeng Bar</a> </p>
<h3 id="Sono-Da-Vinci-sono-polifasico"><a href="#Sono-Da-Vinci-sono-polifasico" class="headerlink" title="Sono Da Vinci (sono polifásico)"></a>Sono Da Vinci (sono polifásico)</h3><p>Lenda (observe a lenda) Da Vinci, Einstein e outros gênios usam apenas um ciclo de sono (1,5 horas), de modo que, em um ano, eles vivem 100 dias a mais que as pessoas comuns …<br>Tentei novamente e confirmei que sou uma pessoa comum … T.T </p>
<h3 id="Tecnica-Pomodoro-O-Poder-do-Presente"><a href="#Tecnica-Pomodoro-O-Poder-do-Presente" class="headerlink" title="Técnica Pomodoro / O Poder do Presente"></a>Técnica Pomodoro / O Poder do Presente</h3><p>Quando como, estou realmente comendo?<br>Quando eu caminho, estou realmente andando?<br>Eu realmente ouço os sons ao meu redor? Eu realmente vi tudo?<br>Quando eu estudo, consigo realmente me concentrar, mesmo por 10 minutos </p>
<p>Quando realmente prestamos atenção ao “agora”, este é também o motivo da ** meditação ** </p>
<h3 id="Ljubischev-Observacao-de-tempo-interno"><a href="#Ljubischev-Observacao-de-tempo-interno" class="headerlink" title="Ljubischev / Observação de tempo interno"></a>Ljubischev / Observação de tempo interno</h3><p>Todas as nossas atividades, pensamentos, desejos e sonhos devem usar o tempo como portador<br>Os mortos são como um marido<br>Como ser amigo do tempo </p>
<h2 id="Ingles"><a href="#Ingles" class="headerlink" title="Inglês"></a>Inglês</h2><h3 id="Obtenha-palavras-GRE-em-17-dias"><a href="#Obtenha-palavras-GRE-em-17-dias" class="headerlink" title="Obtenha palavras GRE em 17 dias"></a>Obtenha palavras GRE em 17 dias</h3><p>Já se passaram mais de 20 anos e ainda não acabou, a lacuna … </p>
<h3 id="Metodo-de-leitura-SSS"><a href="#Metodo-de-leitura-SSS" class="headerlink" title="Método de leitura SSS"></a>Método de leitura SSS</h3><p>Originalmente, pensei que depois de ler mais de um milhão de palavras, poderia ler o livro de texto eletrônico original sem barreiras.<br>Agora são quase 100 W antes de saber que há um segundo, terceiro … T.T </p>
<h3 id="Nunca-aprende-ingles"><a href="#Nunca-aprende-ingles" class="headerlink" title="Nunca aprende ingles"></a>Nunca aprende ingles</h3><p>Nota! Este é um ** contra-exemplo **, ninguém conseguiu até agora<br>Não use este método </p>
<h3 id="Encontre-o-primeiro-livro-sobre-metodos-de-aprendizagem-de-ingles"><a href="#Encontre-o-primeiro-livro-sobre-metodos-de-aprendizagem-de-ingles" class="headerlink" title="Encontre o primeiro livro sobre métodos de aprendizagem de inglês"></a><a href="http://book.douban.com/subject/11522125/">Encontre o primeiro livro sobre métodos de aprendizagem de inglês</a></h3><p>Este artigo da Leaking House nasceu no céu, chocando-me à espera de novatos ingleses </p>
<h3 id="Dialise"><a href="#Dialise" class="headerlink" title="Diálise"></a>Diálise</h3><p><a href="http://book.douban.com/subject/3748247/">Use seu inglês</a><br><a href="http://site.douban.com/195274/">Dad’s English Classroom</a><br>passo a passo, eu vi o amanhecer da cova aos deuses pela primeira vez<br>No momento, ele entrou no nível médio e alto O (∩_∩) O ~ </p>
<hr>
<p>Claro, se todos os itens acima não forem de interesse, então usarei a arma mágica, e o menino a levará: </p>
<h3 id="Metodo-psiquiatrico-rapido"><a href="#Metodo-psiquiatrico-rapido" class="headerlink" title="Método psiquiátrico rápido"></a>Método psiquiátrico rápido</h3><p><a href="http://book.douban.com/subject/4242172/">O gênio está à esquerda, o lunático está à direita - a primeira entrevista doméstica com pacientes mentais</a><br><a href="http://www.guokr.com/post/378641/">Enquanto ficarmos sentados e não pensarmos em nada, uma vez por dia durante uma hora de cada vez, podemos ficar mentalmente doentes! Que incrível! </a><br><a href="http://www.douban.com/group/topic/29064241/">Funções singulares tornaram-se populares recentemente e também pareço ter alta credibilidade. Não espiritual. Falando de Haizi</a> </p>
<h2 id="Finalmente"><a href="#Finalmente" class="headerlink" title="Finalmente"></a>Finalmente</h2><p>Já joguei a maioria deles e escrevi um guia, você pode ler se estiver interessado.<br>Sério, a maioria de nós apenas caminhava por nossas vidas descuidadamente assim </p>
]]></content>
      <tags>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>Gerenciamento de tempo</title>
    <url>/pt/Time-Management/</url>
    <content><![CDATA[<p>Eu prefiro o software de lançamento. GTD não se limita a: </p>
<ul>
<li>devo </li>
<li>Comfortable.do </li>
<li>wunderlist </li>
</ul>
<p>Essas três são todas boas ferramentas que oferecem suporte à sincronização multi-plataforma (mac ios win android)<br>Cada um tem suas próprias características, independentemente da classificação, você pode experimentar por si mesmo e escolher o que quiser </p>
<p>Mas depois de usá-lo, você verá que o plano ainda não foi concluído. Ele estava originalmente no projeto “Hoje”, mas ainda é “Hoje” uma semana depois.<br>Assim como todos nós sabemos sobre a procrastinação, podemos mudá-la com raiva, mas muitas vezes é adiada até o último momento; os fumantes idosos não sabem que fumar faz mal à saúde, ou que fumar depois de uma refeição pode vencer um deus vivo<br>Portanto, se você não descobrir por si mesmo, mesmo com o melhor software, você não pode parar a perda de tempo. </p>
<a id="more"></a>

<h2 id="Como-evitar-“tempo-invalido”"><a href="#Como-evitar-“tempo-invalido”" class="headerlink" title="Como evitar “tempo inválido”"></a>Como evitar “tempo inválido”</h2><p>Em primeiro lugar, afirma-se que o tempo é equivalente e que não existe “inválido”. Eu só quero expressar que o dia anterior foi diferente do que você esperava, e você não sabe “como passou outro dia”) </p>
<p>“A Strange Life” descreve uma pessoa que é acompanhada pelo tempo - Liubischev, e apresenta seu método de estatísticas de tempo. Diz-se que essa pessoa tem uma observação inerente do tempo<br>Neste vídeo TED, Philip Sinbad apresentou <a href="http://v.163.com/movie/2011/9/I/L/M7CEB9FAL_M7CEBDOIL.html">Healthy Time Concept 
</a>, acho que deveria ser o mesmo tipo de coisas </p>
<p>A sensação de Ljubischev do tempo passar, preciso ao minuto, acho que não é difícil. (Por exemplo, eu costumava usar uma tela geral todos os dias, tantos anos, não sentia nada. Eu vi Retina e depois voltei. Não adianta, talvez eu tenha percebido esses ** detalhes **) com precisão de dez minutos, meia hora, é sempre possível </p>
<p>Então, você deve passar um mês, pelo menos uma semana, e não planeje nada primeiro. Use meia hora como uma unidade para ** verdadeiramente escrever onde seu tempo é gasto **, acumular dados brutos e dar uma olhada em si mesmo. Como você passou o dia </p>
<p>Você pode descobrir que verificou o Weibo, navegou na Internet, etc. Com esses dados, você saberá disso na próxima vez que fizer esse tipo de coisa. </p>
<h2 id="Como-fazer-bom-uso-do-Google-Agenda"><a href="#Como-fazer-bom-uso-do-Google-Agenda" class="headerlink" title="Como fazer bom uso do Google Agenda"></a>Como fazer bom uso do Google Agenda</h2><p>Eu uso o Google Agenda há dois anos. No início, parecia marcar o momento da entrevista de várias empresas. Mais tarde, lentamente comecei a gravar outras coisas. Então vi “Uma Vida Estranha”, que na verdade se encaixa nos hábitos dos grandes deuses. Feliz<br>…<br>(Estou tão exausto que escreverei mais tarde) </p>
<p>Embora eu tenha continuado gravando desde então, eu realmente não fiz um resumo até que vi este livro alguns dias atrás. </p>
<p>Ainda não li, mas ganhei muito. As notas estão [aqui](<a href="http://leihao0.github.io/2013/12/16/%E6%8A%8A%E6%97%B6%E9%97%">http://leihao0.github.io/2013/12/16/%E6%8A%8A%E6%97%B6%E9%97%</a> B4% E7% 95% 99% E7% BB% 99% E6% 9C% 80% E9% 87% 8D% E8% A6% 81% E7% 9A% 84% E4% BA% 8B /)<br>(Este autor parece ser um mestre, cobrindo todos os aspectos, desde como encontrar seus próprios interesses até como realizar seus sonhos, e assim por diante. Não quero ler esta resposta, mas é melhor ler o livro, ** fortemente recomendado * *) </p>
<p>As cores são adicionadas ao calendário no livro: </p>
<ul>
<li>Preto: carreira e conquistas </li>
<li>Vermelho: Família e comunicação social </li>
<li>Amarelo: saudável </li>
<li>Azul: o significado e o valor da vida </li>
</ul>
<p>Naquela hora, meus olhos brilharam e eu senti uma espécie de iluminação.Eu imediatamente fui ao Google Agenda e tentei marcar algumas semanas.<br><img src="https://lh3.googleusercontent.com/1fLFHiN0styGRBRNyOok0ySL0EbBIyCnXxZcfCW6UGL1Lmx6noMFn0ak7pvfGVKigDYUfyWHDcs=s640-h400-e365" alt=""><br>Com certeza, depois disso, todas as noites, todos os fins de semana, desde que você olhe para ele, você saberá o consumo geral de tempo em todos os aspectos.<br>Mas antes de não assistir a cada evento um por um, não sabia o que fazia. </p>
<p>Acho que muitas pessoas relutam em resumir e organizar seus desktops. Pode ser porque há muitas coisas tediosas e seus cérebros estão confusos. Eles acham que leva muito tempo para organizar e eles não têm uma boa estrutura. Em seguida, arraste. Este é provavelmente o motivo do desejo de buscar software (ferramentas) </p>
<p>Seguido por Google Task<br>Esta coisa parece ser uma lista e pode ser avaliada<br>Eu o uso para registrar algumas coisas recentes a fazer. Ao adicionar um evento, é conveniente copiar e colar (é esta a intenção original do Google? 囧) </p>
<h2 id="mapeamento-da-mente"><a href="#mapeamento-da-mente" class="headerlink" title="mapeamento da mente"></a>mapeamento da mente</h2><p>Mindjet mencionado acima, há mais pessoas que usam, pule<br>Deixe-me falar sobre outro tipo de mapa mental, que também é visto acidentalmente em Zhihu:<br><a href="http://www.zhihu.com/question/20176809">Quando o protagonista da TV descobre as pistas, ele conecta os materiais fixados na parede com fios e encontra a intersecção. Qual é o método? </a> </p>
<p>** TheBrain **, o artefato<br><img src="http://www.liangxiaoxiao.com/wp-content/uploads/2012/10/ScreenClip1.png" alt=""></p>
<h2 id="grafico-de-Gantt"><a href="#grafico-de-Gantt" class="headerlink" title="gráfico de Gantt"></a>gráfico de Gantt</h2><p>A vantagem disso é que você pode saber claramente o seu progresso, especialmente quando vários projetos estão em paralelo<br>Naquela época, eu estava procurando freneticamente por um bom software (a razão pela qual não preciso do ** Ganttproject ** é que a interface é muito feia, - \ _- |||)<br>Mais tarde descobri que a Mindjet realmente suporta, mas a operação é muito inconveniente<br>** OmniPlan ** no Mac é bom, mas é pago </p>
<p>mas! ! mas! ! Quando vi nosso gerente de projeto usar o ** Excel ** como um gráfico de Gantt (uma pequena grade representa um dia e pode ser codificado por cores), fiquei surpreso! ! </p>
<h2 id="de-outros"><a href="#de-outros" class="headerlink" title="de outros"></a>de outros</h2><p>Existem também alguns como: diário da manhã, Evernote, quatro quadrantes de prioridade, e falarei sobre isso mais tarde, se você tiver uma chance </p>
<p>Minha classificação de valor pessoal: </p>
<ol>
<li>Amor livre </li>
<li>Saúde </li>
<li>Independência econômica </li>
<li>Ideal </li>
</ol>
<p>Uso o Google Agenda há quase dois anos e não me lembro como começou. Implica “A Strange Life”, mas é apenas um recorde.<br>Cores foram adicionadas a este livro, o que fez meus olhos brilharem. Eu imediatamente fui ao google e tentei marcar por algumas semanas </p>
<ul>
<li>Preto: carreira e conquistas </li>
<li>Vermelho: Família e comunicação social </li>
<li>Amarelo: saudável </li>
<li>Azul: o significado e o valor da vida </li>
</ul>
<p>O calendário que era originalmente todo colorido fica imediatamente colorido e ganha vida </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/calendar.png" alt=""></p>
<p>Conforme declarado no livro: </p>
<blockquote>
<p>O pincel da vida está sempre em suas próprias mãos. Mais preto, azul ou vermelho depende inteiramente de sua decisão pessoal. Eu acredito que enquanto você completar esta pintura de acordo com suas próprias necessidades interiores, ela deve ser a mais bela em seu coração. obra-prima. </p>
</blockquote>
<p>Depois disso, passou a ser o método de todos de “Como Encontrar o Seu Sonho” </p>
<blockquote>
<p>Há mudanças sutis na sociedade o tempo todo. Transmissão de informações superdesenvolvida significa que a fronteira entre o verdadeiro e o falso está se tornando cada vez mais difusa. A ansiedade psicológica das pessoas está aumentando dia a dia, e sua autoconsciência está se tornando cada vez mais forte. O foco nos outros mudou para a auto-introspecção, e a busca por consciência e moralidade mudou com mais urgência do que em qualquer período histórico anterior. </p>
<p>Quando uma pessoa duvida do significado e valor de sua vida, ela está doente. </p>
<ul>
<li>Freud </li>
</ul>
<p>Ao contrário dos sonhos utópicos, olhar para o futuro é um comportamento estratégico da humanidade, que inclui coragem, força e uma firme determinação de colocar os ideais em prática.<br>—— Roman Herzov, ex-presidente da Alemanha<br>A diversão mais luxuosa de uma pessoa é que ela não precisa de um despertador porque é o mestre de seu tempo<br>É da natureza humana encontrar problemas, mesmo que não haja problemas na realidade, viremos automaticamente<br>Se você acha que não tem tempo, então você tem que fazer uma pausa<br>Só você mesmo pode se forçar a aceitar essas coisas desagradáveis </p>
</blockquote>
<hr>
<p>Essa coisa é como kung fu. No nível mestre, flores voando e colher folhas podem machucar as pessoas.<br>Por exemplo, um dos meus colegas de classe usou notas auto-adesivas da 3M como nota (mais tarde eu vi “Livro do céu muito estúpido” que dizia que não mais do que três de cada vez, completava um e arrancava um da tela)<br>Claro, ter um software NB quando não o somos é como um tigre.<br>O mais importante é não esquecer o propósito original do GTD e formar seu próprio sistema de gestão </p>
]]></content>
      <tags>
        <tag>GTD</tag>
      </tags>
  </entry>
  <entry>
    <title>Atalhos do Windows para Mac VS</title>
    <url>/pt/Mac-VS-windows-shortcuts/</url>
    <content><![CDATA[<p>No passado, o Windows tinha tantas teclas de atalho para eficiência e foi destruído.<br>Alguns softwares realmente ** não podem substituir **, apenas estão vazios, se por acaso você souber, por favor, deixe uma mensagem </p>
<a id="more"></a>

<ul>
<li>Ctrl + c == com + c </li>
<li>Ctrl + x / v == opt + com + v </li>
<li>Ctrl + v == com + v </li>
</ul>
<h3 id="Potplayer-MplayerX"><a href="#Potplayer-MplayerX" class="headerlink" title="Potplayer == MplayerX"></a>Potplayer == MplayerX</h3><h3 id="Foobar-iTunes"><a href="#Foobar-iTunes" class="headerlink" title="Foobar == iTunes"></a>Foobar == iTunes</h3><ul>
<li>Avançar com + opt + → </li>
<li>Converter XLD </li>
</ul>
<h3 id="Tudo-Spotlight"><a href="#Tudo-Spotlight" class="headerlink" title="Tudo == Spotlight"></a>Tudo == Spotlight</h3><h3 id="Total-Commander"><a href="#Total-Commander" class="headerlink" title="Total Commander ==?"></a>Total Commander ==?</h3><h3 id="PDF-Xchange-pro"><a href="#PDF-Xchange-pro" class="headerlink" title="PDF Xchange pro ==?"></a>PDF Xchange pro ==?</h3><p>x alterar o artefato de mesclar, aparar e editar<br>O corte só encontrou Briss </p>
<p>Já se passaram quase duas semanas desde que comecei, e estou quase terminando os ajustes. Vou resolver o software comumente usado. </p>
<h2 id="eficacia"><a href="#eficacia" class="headerlink" title="eficácia"></a>eficácia</h2><ol start="2">
<li>Mindjet </li>
<li>Evernote </li>
<li>MPlayerX </li>
<li>M Euro </li>
<li>Alfred </li>
<li>Idoce5 </li>
<li>Omni Series </li>
<li>coloursnapper </li>
<li>RescueTime </li>
</ol>
<h2 id="Programacao"><a href="#Programacao" class="headerlink" title="Programação"></a>Programação</h2><ol>
<li>PyCharm </li>
<li>WebStorm </li>
<li>rubimina </li>
<li>Texto Sublime </li>
</ol>
]]></content>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Codecademy</title>
    <url>/pt/Codecademy/</url>
    <content><![CDATA[<p>2014-01-04 23:39:28<br>总算刷完了<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/codecademy.png" alt=""></p>
<a id="more"></a>

<p>怪不得说 Ruby 给你自由，单单从语法糖方面来看，做的比 Python 好<br>之前还因为 ‘end’ 问题，不喜欢 Ruby，但整体做下来：</p>
<ol>
<li>不用像 Python 那样处处注意缩进，还能自动缩进（Python 就没见过），省心</li>
<li>：等符号减少，函数调用更自然</li>
<li>更加面向对象 （python 还是有 类型(int str …) 的概念, 传参，返回值等特别明显；Ruby 弱化了，用的时候甚至感觉不到类型的存在）</li>
</ol>
<p>整体下来，也就是实现了</p>
<ol>
<li>与算法无关代码，比 Python 又少了许多</li>
<li>写起来更加自然</li>
</ol>
<p>所以，在没了解一个东西前，最好不要带主观判断</p>
<p>PS:<br>Java 和 Android 用了将近一年，就是无爱，这个不算不了解吧</p>
<hr>
<p>2014-01-03 23:37:58<br>Python 和 Ruby 千万不要同时刷</p>
<p>Ruby 由于刷在前，end 倒是还好</p>
<p>写 Python 时就悲催了，老是忘了<strong>冒号</strong>，并且很容易忘记<strong>return</strong><br>class 要 (object)， def func(self): 处处折磨人</p>
<p>++ &amp;&amp; 这种从 C 过来的写法也是打脸了</p>
<p>这俩语言的函数也不一样 比如 :</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python.append()  ruby.add()</span><br><span class="line"></span><br><span class="line">len(python) ruby.len</span><br></pre></td></tr></table></figure>

<p>经常混用，提交了才发现错了，再加上网速…</p>
<hr>
<p>用代理卡的蛋疼，不用连进都进不去…</p>
<p>我还是那种写两句就运行看结果的人<br>大量的时间都浪费在提交后等待结果上面了<br>都说 Ruby 慢，最夸张的一个说法是 ROR 转成 GO 后，服务器由 30 降到 2<br>我还不信，结果做个题目就这么卡(当然应该是网速，或者网站服务器)<br>但这给人的赶脚是<strong>用别人的生命告诉人家 Ruby 很慢么</strong>…无语了</p>
<p>很傻逼的提示<br>大陆太卡，时间长了后，提示检查循环，拜托我一个 for/while 都没有好不好<br>特别是 Ruby 这种一种结果有 N 种做法的语言</p>
<p>感觉结果有两个判断条件:</p>
<ol>
<li>结果字符串比较</li>
<li>源代码 正则 检查</li>
</ol>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>Ruby</tag>
      </tags>
  </entry>
  <entry>
    <title>Conversas difíceis com os pais</title>
    <url>/pt/Difficult-Conversations-with-Parents/</url>
    <content><![CDATA[<p>Não está frio, mas está completamente sem palavras </p>
<p>Escolha um emprego após a formatura, deixe-me ir para a pós-graduação<br>Quando eu estava trabalhando, pedia que eu fizesse o concurso de serviço público sempre que ligasse (o que devo fazer se quiser ligar de vez em quando e entrar em contato com frequência?)<br>Gap Year (não pedi um centavo aos meus pais), ainda me despreza todos os dias </p>
<p>Em suma, sinto que você é propriedade privada deles. LZ trouxe você ao mundo, não o que eu disse?<br>de! Quando crescem, suas asas ficam duras e eles se tornam desobedientes, certo? </p>
<a id="more"></a>

<p>Então comecei a apontar o dedo para você na tentativa de mexer com sua vida: </p>
<ol>
<li>Use energia e lavagem cerebral (desde que eu era jovem, agora só preciso ligar o interruptor)<br>Afaste os injustificados “O rei quer que seu ministro morra, o ministro tem que morrer. O pai quer que o filho morra, e o filho tem que morrer.”<br>Fora do contexto “Os pais estão aqui, então não viaje para longe” (você deve ter um bom plano)<br>Piedade filial primeiro<br>… </li>
</ol>
<p>PS: Eles assistiram “1984”? Meu conhecimento é superficial. . . </p>
<p>Mas você pode ter se banhado em pensamentos de igualdade ocidentais e lido<br>“Sobre a origem da desigualdade humana” de Rousseau, “História da filosofia ocidental” de Russell, “Walden” de Thoreau e outras obras-primas<br>Rumo à independência de espírito, diferente de Confúcio e Mêncio </p>
<p>Está certo: </p>
<ol start="2">
<li>Use meios materiais para sequestrar você<br>Comum: pagamento integral, entrada, arranjo de trabalho, etc. </li>
</ol>
<p>De acordo com “Influência”, dê à outra parte um pequeno benefício, não sinta que a outra parte lhe deve, para que ela possa obter mais benefícios<br>Isto é, “Coma suavemente a boca das pessoas, suavize suas mãos” </p>
<p>Mas você pode ter lido “As coisas que você não deve pensar na vida” de Krishnamurti, “Tao De Jing” de Lao Tzu e “O poder do presente” quando estava fraco.<br>Entenda que a vida deve se libertar e buscar mais tranquilidade interior<br>E a força é relativamente impressionante, LZ pode ser autossuficiente, essas coisas não são necessárias, eles ainda vivem bem. </p>
<p>O irmão é independente financeiramente, então você não pode fazer nada comigo. </p>
<p>Não importa, o que mais existe: </p>
<ol start="3">
<li>Desculpe<br>Mesmo se você estiver em uma bagunça, mas<br>As pessoas não são vegetação, que podem ser implacáveis, afinal o sangue é mais espesso que a água<br>Eles tentaram sequestrar você com a família<br>“Eu vivo para você nesta vida”, “Não culpe seus pais, eles deram a você o melhor” </li>
</ol>
<p>Eu vou, você acha que o “melhor” é o que eu quero? </p>
<p>“Nós fizemos isso por você, você é digno de mim?”<br>Ο \ _ \ _ Ο “…<br>De onde veio essa pressa azeda? (“The Road Few People Walk” mencionou esses pais profundamente sacrificados, embaraçosos) </p>
<p>“Nós somos seus pais, é claro que devemos nos preocupar com você”<br>Por favor, isso obviamente está tentando controlar os outros, ninguém se importa<br>Que tipo de tom é usado para se preocupar com uma pessoa? ? ? </p>
<p>PS: Também existe esse problema entre os amantes </p>
<hr>
<p>As palavras acima são um pouco sérias<br>Na verdade, a maioria dos pais da geração (eles costumavam ser jovens, ok) foram vítimas da falta de educação<br>Pensamento em preto e branco, nenhum outro pensamento, nenhuma capacidade de pensar independentemente </p>
<p>Faça com que eles deixem de perceber as impropriedades de seus pensamentos, pensamentos, atitude e tom<br>Não olho para os fatos, mas acho que estou certo. Afinal, como mais sal do que papel infantil. Tenho uma postura de “o que eu digo é a verdade do universo”. O raciocínio é inútil. </p>
<p>Quando crianças, sabendo que esse não é o seu motivo, é muito triste vê-los nesse tom<br>A melhor maneira (posso pensar agora) é provavelmente apenas atender, fazer algumas “mentiras inocentes” para convencê-los a felizes<br>Mas quando se trata de grandes eventos, o papel não pode conter o fogo, e os conflitos ainda são inevitáveis </p>
<p>Devido à idade, é quase impossível para os idosos serem expostos a novas ideias. Não é mais realista pedir à geração anterior para mudar<br>Mas podemos começar com a próxima geração - eu me pergunto se você percebe que nossa geração será mãe e pai </p>
<p>Portanto, podemos fazer perguntas como: “Como se comunicar com os pais”, “Como evitar que os pais fiquem com raiva”, “Existe alguma maneira de me fazer pensar que as sugestões dos meus pais são corretas”, “Como ser uma criança obediente”, “Eu quero testar Como persuadir servidores / pesquisadores / médicos / pós-graduados a permanecerem em suas cidades e seus pais não permitirem “ </p>
<p>Em seguida, lembre-os de Shangzhihu </p>
]]></content>
      <tags>
        <tag>Parents</tag>
      </tags>
  </entry>
  <entry>
    <title>更多的了解，更少的学习</title>
    <url>/pt/Learn-more-study-less/</url>
    <content><![CDATA[<p>在我上高中的时候，我们班有一个学生。我生平第一次看到一个<strong>的智力</strong>。</p>
<p>我从来没有看到他在学习。打游戏或者看小说都是我能看到的。</p>
<p>也有一些<strong>学习狂</strong>，也就是说他们可以通过努力在分数上接近<strong>智力</strong>。</p>
<p>可惜的是 turth 是我不是他们中的一员。</p>
<a id="more"></a>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/intellect.jpeg" alt=""></p>
<p>我更加努力的学习，但分数还是没有提高。</p>
<p>你可以想象我当时有多绝望，这说明他们是天资聪颖的，而我什么都不是。我生来就是个失败者。</p>
<p>这么多年过去了，我是下了决心，这只是大脑的魔力。</p>
<p>这本书，是一个智者写的，描述了 “钢铁是怎样炼成的”。</p>
<p>感谢上帝，希望总是存在的。</p>
<p>MINDMAP:</p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Learn-More-Study-Less.png" alt=""></p>
]]></content>
      <tags>
        <tag>Reading</tag>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>Construa seu próprio blog</title>
    <url>/pt/How-to-build-your-own-blog/</url>
    <content><![CDATA[<p>O que eu sinto melhor é:<br>VPS + nome de domínio WordPress e outras estruturas de blog, de modo que a URL, o ambiente de fundo, etc. sejam controlados por você </p>
<p>Se você não gastar dinheiro, você só pode enviá-lo para alguém<br>Por exemplo, pendure-o em GAE ou SAE </p>
<p>Também é a maneira mais fácil de se conectar ao Github,<br>O processo geral é </p>
<ol>
<li>Crie um novo Repositório no Github, xxx.github.com </li>
<li>Ferramentas de geração de blog estático, como Jekyll ou Hexo </li>
<li>Não mais </li>
</ol>
<p>Sim, é simples assim, e os tutoriais online são parte por parte, então não vou repetir<br>Eu uso o Hexo, pendure-o <a href="http://leihao0.github.io/">aqui</a><br>Comparado com Jekyll, parece mais simples </p>
<a id="more"></a>

<hr>
<p>Para dizer algo irrelevante: </p>
<p>Ainda me lembro quando estava no ensino fundamental, pedia para escrever redações todos os dias.Naquela época, eu era muito maltratado.<br>Eu escrevo (chao) dever de casa todos os dias quando vou para a escola e depois da escola. Ainda tenho uma peça por dia. Só consigo gravar algo por uma semana, no máximo.<br>O que devo fazer, só posso copiar o texto de amostra </p>
<p>É uma pena que não havia orientação teórica naquela época e a cópia não era precisa. Depois que os alunos do ensino fundamental terminaram de copiar o modelo de ensaio, não havia como copiá-lo, então relutantemente comecei a ideia de um livro didático chinês.<br>Tai Sui quebrou a terra em sua cabeça, ele não morreu cedo, mas ele foi naturalmente descoberto </p>
<p>Então, o professor chinês da terceira série, conhecido como o engenheiro da alma humana, deu um tapa forte na minha cabeça na frente da classe com meu diário. </p>
<p>Oh (wocao), você não precisa ser tão cruel para matar a galinha e o macaco. </p>
<p>Naquela época, eu não aguentava e melhorei silenciosamente minhas habilidades. Afinal, o vestibular ainda tem redações de oito partes. Pelo bem de amanhã, se eu não aguentar, farei um grande plano. (Bem, eu fui estúpido na época. Nian ainda acha que o pai bate no filho assim) </p>
<p>Felizmente, faculdade, finalmente não há necessidade de escrever essas coisas nojentas<br>No meu primeiro ano, uma colega de quarto desprezou meu espaço ruim, e depois foi se arrumar, desligar mais do que N Flash, o cartão não pode ser aberto<br>Mais tarde, descobri que havia uma função de registro e escrevi algo sobre a escola casualmente, e então alguns alunos comentaram: Fiquei muito feliz e então escrevi<br>Levei mais de um ano para aprender que essa coisa se chama blog </p>
<p>Mais tarde, o material de programação foi desligado no CSDN, olhando para os milhares de quilômetros de distância no canto esquerdo inferior, silenciosamente à esquerda </p>
<p>Pesquisei coisas quando estava prestes a me formar. Vi o que Yiya escreveu e estava familiarizado com isso. Vi que o número de visitas era superior a 1W e ainda havia uma classificação. Fiquei me perguntando quem era. Analisei mais de perto. </p>
<p>Mais tarde, quis encontrar um lugar que ninguém conhecesse e gravar algo </p>
]]></content>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Por que estudar filosofia</title>
    <url>/pt/Why-we-learn-Philosophy/</url>
    <content><![CDATA[<p>Qualquer assunto tem um intervalo de teste, útil ou não é relativo<br>Se a sua vida é relativamente tranquila e o ambiente circundante é melhor, embora haja barcos, não há nada a aproveitar e, embora haja soldados, não há nada a relatar. Eu não ** refleti ** sobre nada, pode ser inútil </p>
<p>Mas se você sempre mantiver a curiosidade e continuar buscando, seja na política, na pesquisa ou nos negócios, com certeza encontrará problemas filosóficos no final<br>Porque a filosofia é sobre a origem do mundo </p>
<p>Michael J. Sandel, Professor de Ciência Política na Universidade de Harvard, em “Justice-What Should I Do?” “O parágrafo no final da primeira lição é um resumo muito, muito bom (tão bom que as pessoas assistem ao conjunto completo como se estivessem perseguindo dramas americanos): </p>
<blockquote>
<p>Ler livros de filosofia pode ser usado como um exercício de ** cognição de si mesmo *<em>.<br>A filosofia faz com que as coisas com as quais estamos familiarizados se tornem estranhas. Em vez de nos dar mais informações novas, ela nos dá *</em> outra maneira de ver as coisas *<em>. Possui dois níveis de aventura: *</em> nível pessoal e nível político *<em>. A chamada aventura pessoal é que, uma vez que as coisas familiares se tornem desconhecidas, elas nunca mais serão as mesmas. O autoconhecimento é como um viajante perdido, não importa o quão confuso ou perturbado ele esteja, você não pode mais pensar nisso. Este processo é difícil, mas você tem que se dedicar a ele. A filosofia moral e política é como uma história. Você não sabe aonde isso vai te levar, mas você sabe claramente que esta é uma história sobre você. O risco político é que, depois de ler esses livros e participar dessas discussões, você se tornará um cidadão melhor e mais responsável, examinará essas suposições sobre a esfera política pública e seu julgamento político Com exercícios, você será capaz de participar mais ativamente dos assuntos públicos, mas isso pode ser parcial e enganoso. O que você precisa admitir é que isso pode torná-lo um cidadão pior em vez de um bom cidadão, ou pelo menos irá torná-lo um mau cidadão antes de se tornar um bom cidadão. Isso por causa da filosofia, que é há muito tempo, e até um pouco destrutiva. Vamos dar uma olhada em uma conversa na era socrática. Calicole, amigo de Sócrates, esperava persuadi-lo a abandonar a filosofia. Ele disse a Sócrates: A filosofia é realmente bela. Só quando você está moderadamente envolvido nela, mas se você for muito viciado nela, ela o destruirá. Ouça-me, deixe de lado esses debates filosóficos, pense sobre o que é a verdadeira conquista da vida, não aprenda com pessoas que perdem tempo em afirmações filosóficas ambíguas, você deve olhar para a vida rica de pessoas boas que realmente vivem. Reputação e outras coisas. Ele queria dizer, amigo, seja realista. Mas uma coisa Kohler está correta: *</em> A filosofia vai nos alienar das convenções originais, suposições pré-ordenadas e idéias inerentes **. </p>
</blockquote>
<blockquote>
<p>Diante desses problemas, temos uma maneira especial de evitá-los. Seu nome é ceticismo. Isso significa que, assim, apenas começamos a aprender, e não há como resolver completamente os casos ou princípios que defendemos de uma vez. , E se Aristóteles, Kant, Locke e Muller não resolveram esses problemas por tantos anos, quem pensamos que somos? Você pode resolvê-los depois de apenas passar um semestre no salão da lixadeira? Além disso, essa pode ser apenas uma questão de cada pessoa ter seus próprios princípios diferentes, não há nada que valha a pena discutir e não está claro por que esses problemas existem. É assim que o ceticismo escapa. A respeito disso, acho que posso responder: de fato, essas questões vêm sendo discutidas há muito, muito tempo, mas é precisamente porque estão sendo constantemente discutidas que embora em certo sentido sejam ** impossíveis de serem explicadas <strong>, Mas, por outro lado, eles também ** não podem ser evitados **. O motivo é inevitável, porque as respostas a essas perguntas estão em nosso dia a dia. Portanto, o ceticismo apenas permite que você se solte e desista de pensar. Não resolverá nenhum problema moral ou filosófico. Kant tem uma descrição maravilhosa do ceticismo. Ele escreveu: “</strong> O ceticismo é apenas um lugar para as pessoas descansarem no processo de exploração. Ele nos permite vagar em alguns dogmas, mas definitivamente não podemos ficar para sempre. Onde *<em>. ”Aqui, eu quero resumir brevemente o propósito deste curso é *</em> despertar curiosidade e raciocínio sem fim para ver onde isso nos leva **. </p>
</blockquote>
]]></content>
      <tags>
        <tag>Philosophy</tag>
      </tags>
  </entry>
  <entry>
    <title>O começo da história</title>
    <url>/pt/The-Beginning-of-The-Story/</url>
    <content><![CDATA[<p>Era uma vez, havia um pequeno mago que nasceu no continente Zeya rodeado por montanhas </p>
<p>A escola onde o pequeno mago está localizado está classificada a milhares de quilômetros de distância no mundo mágico. Olhando ao redor, não há mestre mágico em toda a escola. </p>
<p>Quando o pequeno mago se formar, será apenas uma magia estática </p>
<p>Embora esse tipo de magia seja muito NB, leva muito tempo, mas leva muito tempo, e você tem que ficar parado ao lançar o feitiço </p>
<p>Até poucos dias atrás, o pequeno mago ouviu de repente que existe uma magia que pode ser cantada enquanto se caminha pelo mundo, e ficou muito curioso. </p>
<p>Depois de ler o último livro de magia, descobri que, entre toda a magia dinâmica, existe uma magia chamada Ruby on Orbit </p>
<p>A pronúncia desse tipo de magia é estranha e inexplicável, mas desde que o canto seja correto, você pode invocar a magia mais letal no menor tempo possível. </p>
<p>Então ele foi morto pela magia que convocou </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>ressurreição</title>
    <url>/pt/Resurrection/</url>
    <content><![CDATA[<p>A última vez que o pequeno mago treinou Ruby intensamente na pista, ele pagou o preço do sangue </p>
<p>O livro de magia é recomendado em conjunto por muitos mestres mágicos. É dividido em 11 capítulos. É escrito em língua élfica e parece muito NB. </p>
<a id="more"></a>

<p>Os elfos do pequeno mago eram mais ou menos, adivinhando, metade da prática, uma reação um pouco desconfortável </p>
<p>No Capítulo 9, o tempo de lançamento contínuo era muito longo e a magia mostrava sinais de reação. </p>
<p>Antes disso, os cursos do Pequeno Mago na Codecademy Academy foram removidos sem problemas. O feitiço de marcação de hipertexto, folha de estilo hierárquico, python e ruby ​​estão todos disponíveis, e existem apenas 3 capítulos restantes no livro. </p>
<p>Acontece que o Pequeno Mestre foi derramado muita canja por Moments, tais como: </p>
<blockquote>
<p>Uma pessoa, se você não se forçar, você não sabe o quão bom você é; uma pessoa, se você não se forçar, seu mundo sempre será negro </p>
</blockquote>
<p>e também: </p>
<blockquote>
<p>Se uma pessoa quer ser excelente, você deve aceitar o desafio; uma pessoa, se você quer ser excelente o mais rápido possível, deve encontrar um desafio </p>
</blockquote>
<p>É concebível que o pequeno mago esteja cheio de confiança e cheio de energia positiva </p>
<p>Ignorando que o mago não tem um corpo forte como o de um espadachim, e tem limitações profissionais, a maioria deles está com saúde insuficiente </p>
<p>Juntamente com a falta de mana, preciso usar tecnologia </p>
<p>Finalmente, no capítulo final, o vermelho e o azul estavam exaustos e ele foi espancado até a morte pelo monstro que convocou. </p>
<hr>
<p>Felizmente, o pequeno mago tem um nível inferior e um tempo de ressurreição mais curto </p>
<p>Mas desperdiçou um renascimento ankh sem motivo, o pequeno mago ainda está muito infeliz </p>
<p>Quando as pessoas ao meu redor pedem gentilmente, elas só conseguem derrubar os dentes e engolir sangue. </p>
<p>Afinal, como um mago, é vergonhoso ser morto por um feitiço que ele invocou. </p>
<p>Após esse incidente, o pequeno mago também foi forçado a formar uma restrição pavloviana, ou seja, a resposta do animal a estímulos específicos </p>
<p>Agora me sinto enjoado quando vejo élfico </p>
<p>Então o pequeno mago decidiu nunca mais tocar em magia recentemente </p>
<p>… </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>deusa</title>
    <url>/pt/Goddess/</url>
    <content><![CDATA[<p>Como mencionado anteriormente, o pequeno mago nunca mais vai assistir magia </p>
<p>Zhu Xi disse: “Basta parar, não há ganância.”<br>O plano mental do pequeno mago é bom, não posso lutar para se esconder </p>
<p>A vida é muitas vezes tão engraçada ou cruel<br>De acordo com o Tao Te Ching: “O caminho do céu danificará mais e compensará as deficiências, mas o caminho dos seres humanos não, se você danificar as deficiências, dará mais.<br>Como diz o ditado, “Quando você estiver doente, vou matá-lo” </p>
<p>Depois de ser humilhado por magia, a Lei de Murphy começou a mostrar seu poder - a deusa do pequeno mago o ignorou </p>
<a id="more"></a>

<p>A coisa é assim: </p>
<p>Poucos dias atrás, a deusa de repente chamou o pequeno mago, sem saber, os dois conversaram por mais de uma hora<br>No telefone, a deusa reclamou com o pequeno mago que ela estava cansada recentemente, e então ela apontou que ela queria um contêiner de livro mágico, que é a mais recente ferramenta mágica poderosa chamada de adesivo puro brilhante produzido pelo grupo de magia maligna. A deusa usou algumas novidades do mundo mágico para lidar com as consequências, o que é realmente preciso </p>
<p>O pequeno mago ficou lisonjeado quando recebeu o chamado e ficou ainda mais animado nos dias seguintes. Vendo que o aniversário da deusa está se aproximando novamente, dê-o. </p>
<p>Moedas de ouro são um problema, mas, felizmente, o pequeno mago geralmente economiza dinheiro, come frugalmente e mal consegue o suficiente.<br>Depois de comparar preços por um longo tempo, finalmente comprei um para a deusa em meu coração </p>
<p>Dois dias após a entrega da mercadoria, vi a deusa responder “Gostei, obrigada”<br>Antes que o pequeno mago pudesse responder, ele viu a deusa offline </p>
<p>O pequeno mago não tem dúvidas sobre os outros e está infinitamente feliz, assim como o homenzinho amarelo em “Meu Malvado Favorito 2” viu a heroína desenvolver ricas associações e imaginação </p>
<p>Mas um dia depois, a deusa ainda não respondeu<br>No início, a pequena maga simplesmente pensava que ela era uma deusa, ela deve estar muito ocupada, mas é normal que ela não responda mensagens no fórum e bate-papo no Weibo todos os dias. </p>
<p>Na noite do dia seguinte, o Pequeno Mago sentiu que algo estava errado. QQ, WeChat, Weibo, SMS, telefone e vários contatos mágicos foram usados. </p>
<p>A deusa é digna de ser uma deusa e usa a arte da guerra com flexibilidade para lidar com todas as mudanças da mesma maneira, gentil e engenhosamente:<br><code>&gt; / dev / null</code> </p>
<p>Apenas eliminou toda a magia que o pequeno mago poderia pensar, sem deixar ondulações </p>
<p>Além do coração cantado, o pequeno mago ainda tem um vislumbre de esperança em seu coração </p>
<p>Então eu vi esta pergunta cruel: </p>
<p>** Como levantar um pneu sobressalente? **<br>responda:<br>Se o pneu sobressalente tomar a iniciativa de falar com você, você pode<br>O pneu sobressalente não está mais ativo, basta perguntar o que ele está fazendo </p>
<p>O pequeno mago se lembrou de tudo antes, como se estivesse verificando essas duas frases<br>Na verdade <em>palavras são como sangue, ações são como reclamações, tristeza e excitação</em> </p>
<p>Os olhos da pequena maga estavam quentes, e finalmente ela derramou lágrimas </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Vontade livre</title>
    <url>/pt/Free-Will/</url>
    <content><![CDATA[<p>Eu não sei quando ouvi a palavra “livre arbítrio”, e parece que foi mais de um ano </p>
<p>Embora esta palavra seja usada às vezes, nunca entendi o que é ** livre arbítrio ** </p>
<a id="more"></a>

<p>Na verdade, o Google pode obter a resposta imediatamente, mas eu não fiz isso por um longo tempo. Quero entender com base em minhas próprias percepções? </p>
<p>Eu ouvi essa palavra pela primeira vez na Teoria da Relatividade de Dongwu<br>Eu posso encontrar em alguns dos próximos livros<br>Mais tarde, Luo Ji Siwei ouviu<br>No universo Hawking anterior da BBC, “Somos todos feitos de matéria interestelar” </p>
<p>Parece que as pessoas respondem racionalmente em vez de instintivamente aos estímulos externos </p>
<p>Três citações de epifania do autor de “Seven Habits”: </p>
<blockquote>
<p>Há um espaço entre o estímulo e a resposta<br>Neste espaço, temos a liberdade e capacidade de escolher nossa própria resposta<br>Nosso crescimento e felicidade dependem de nossa resposta </p>
</blockquote>
<p>Para ser honesto, não senti nada quando assisti e sou ** simplesmente conhecedor **%&gt; \ _ &lt;% </p>
<p>Então eu vi a explicação do autor, ** Liberdade de Escolha **, eu não pude deixar de respirar um pouco (no inverno) - eu percebi isso para o bem da minha iluminação.<br>Isso não é livre arbítrio? ! </p>
<p>Eu nunca entendi antes qual é a diferença entre ficar revirando quando eu era jovem e depois cair na cama quente de minha esposa e filho, e cair diretamente nela. Parece que está lá, mas eu não posso dizer a diferença. </p>
<p>Deste ponto de vista, deve ser a diferença entre o despertar do livre arbítrio, respeitando o chamado interior de cada um, ao invés de simplesmente tornar um estressante </p>
<p>Ouça o trovão no lugar silencioso </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>Estepe</title>
    <url>/pt/Spare-Tyre/</url>
    <content><![CDATA[<p>O golpe da deusa no pequeno mago excedeu em muito a imaginação do pequeno mago<br>Desta forma, a última morte foi como uma nuvem flutuante </p>
<p>O poeta Yuan Hao da Dinastia Jin perguntou a Youyun: </p>
<blockquote>
<p>Pergunte o que é o amor no mundo e ensine a vida e a morte diretamente?<br>—— “Moyuer · Yanqiu Ci” </p>
</blockquote>
<p>O pequeno mago é uma criança emocional. Quando ele ainda estava na Academia de Magos, ele gostava de uma garota e perseguiu duramente por 3 anos. Quando ele comprou um presente de aniversário da garota e esperou no andar de baixo, descobriu que a garota e um homem frustrado estavam voando juntos. </p>
<p>Todo mundo tem momentos de desilusão, e os três anos de miséria finalmente trouxeram a epifania do pequeno mago<br>Desde então, fascinado pela magia e eventualmente se tornar um mestre </p>
<a id="more"></a>

<p>Claro que aconteceu no romance<br>Naquela época, o recrutamento do campus já estava em vigor, e o jovem mestre correu para a batalha, mas acabou em um resultado embaraçoso </p>
<p>Originalmente, o pequeno mago pensava que depois de ser iluminado, ele já era invulnerável e racional, e não se confundiria mais com questões emocionais. </p>
<p>Mas ele esqueceu o famoso ditado do antigo filósofo Heráclito: </p>
<blockquote>
<p>Não se pode entrar no mesmo rio duas vezes </p>
</blockquote>
<p>Claro que o pequeno mago não o violou, ele apenas caiu em uma vala diferente. </p>
<p>Quando o dinheiro acabar, ele voltará, e a perda de dinheiro é uma questão trivial. O lugar mais penoso é: “Você trata a outra parte como uma deusa e a outra parte o trata como um tolo.” </p>
<p>Com a experiência anterior, o pequeno mago acordou mais rápido desta vez, mas a dor de cabeça é inevitável </p>
<p>De um modo geral, existem várias opções viáveis ​​para lidar com relacionamentos rompidos: </p>
<ol>
<li>Retaliação </li>
<li>Desviar a atenção </li>
<li>Sublimação </li>
</ol>
<p>O primeiro custo é muito alto, é um perde<br>A última é a solução ideal, mas o reino é muito alto, o pequeno mago não pode alcançá-lo atualmente </p>
<p>Tive que seguir o caminho do ouro: desviar a atenção </p>
<p>Depois disso, o pequeno mago tenta se manter ocupado </p>
<p>… </p>
<p>A situação ainda não melhorou, o Festival da Primavera anual no continente voltou<br>Nesta época do ano, os Pergaminhos de Retorno à Cidade esgotam cedo </p>
<p>O pequeno mago teve que usar teletransporte demorado e trabalhoso </p>
<p>Antes de entrar na casa, eu vi o par de portas vermelho-sangue em ambos os lados da porta à distância: </p>
<blockquote>
<p>Ano após ano, nós nos casamos ano após ano sem nós </p>
</blockquote>
<p>Lote horizontal: </p>
<blockquote>
<p>Espere mais um ano </p>
</blockquote>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Mamãe e papai</title>
    <url>/pt/Mon-and-Dad/</url>
    <content><![CDATA[<p>Os pais do pequeno mago são todos trouxas e não há mágicos no círculo ao redor. Em uma época, eles pensaram que o pequeno mago montava e consertava instrumentos mágicos após a graduação. </p>
<p>O pequeno mago nasceu no ambiente de Jiangzi, ╮ (￣ ▽ ￣ “) ╭, é tão terrível que é indescritível, mas pode-se ver como é difícil se comunicar com os pais </p>
<p>Desta vez, no dia de reunião anual da família, o pequeno mago voltou muito contra sua vontade </p>
<p>porque? Isso envolve dois pontos: </p>
<ol>
<li>Pais chineses </li>
<li>O pequeno mago não procurou emprego após renunciar </li>
</ol>
<a id="more"></a>

<p>Pais e mães trouxas têm um profundo senso de auto-sacrifício<br>Mesmo no ambiente econômico em que agora são totalmente prósperos, eles ainda podem dividir magicamente os pratos na mesa em três, seis ou nove graus, dando-lhes o alimento carnudo, vegetais orgânicos e alimentos ricos em fibras para eles próprios<br>“Nós fizemos isso por você, você é digno de nós assim?” É um assassino comum </p>
<p>Para isso, o pequeno mago não pode usar “Papel do menino tolo, você ainda pode morrer!” Uma maldição proibida semelhante é quebrada, caso contrário, só você vai desligar e não será capaz de viver bem após a morte, e será enforcado na inocência. A acusação de injustiça e piedade não religiosa é um exemplo negativo dos rumores de pais trouxas </p>
<p>O pequeno mago explicou inúmeras vezes a seus pais que pertence ao ano sabático tardio. É a confusão da vida que precisa de um período de silêncio … (se eu tiver a oportunidade de dizê-lo separadamente no futuro)<br>Mas mães e pais não se importam com esse tipo de retórica. Se você não tem um emprego, não é apenas um jovem na sociedade? Se pais e mães não conseguem levantar a cabeça na frente de parentes e amigos, não use um chicote para fazer você encontrar trabalho </p>
<p>O pequeno mago acredita firmemente que independência financeira pode ser trocada por liberdade, então ele não pede mais aos pais o custo de vida<br>Isso cria um fenômeno estranho: por um lado, o pequeno mago não tem emprego e, por outro lado, o padrão de vida do pequeno mago é apenas ligeiramente reduzido.<br>Mamãe e papai que são trouxas não entenderam nada, então eles se tornaram detetives e começaram seu próprio raciocínio: de onde veio o custo de vida? rMBP Como esses artefatos preciosos podem ser trocados por moedas de ouro? É difícil roubar? Por que você é diferente das pessoas comuns? Você está mentalmente doente? Devia consultar um psicólogo … </p>
<p>O magozinho está triste, odeia sangue mais grosso que água, corta o afeto constante da família e o feriado anual. O mais exagerado é que ZF também interveio neste assunto. A legislação não condenou seus pais, e ele foi preso após a execução … </p>
<p>O pequeno mago não tem coragem de lutar contra o poder público. Como cidadão P, é melhor ser autoconsciente<br>No entanto, antes de voltar para casa neste Festival da Primavera, o pequeno mago já estava familiarizado com a arte da guerra e fez os preparativos suficientes. Ele imaginou que possuía a maldição proibida de um veterano no mundo mágico que já havia viajado para o oeste do Campo de Força de Distorção Hexi-Realidade (PS: De repente, pensei na ciência Realidade pessoal na arma supereletromagnética) </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Moldura mágica</title>
    <url>/pt/Framework-of-Magic/</url>
    <content><![CDATA[<p>Os benefícios da moldura mágica são óbvios<br>Uma única magia é frequentemente limitada em poder, então os magos costumam combinar muitas pequenas magias para formar uma grande magia eficaz<br>De um modo geral, cantando Esta é uma estrutura boba …, cantando todos os dias, cantando todas as noites e cantando mais. Alguns feiticeiros descobriram os pontos comuns e os aprimoraram. Apenas envie TIASF para completar o canto mágico. Então, quase, o enquadramento está nascermos </p>
<a id="more"></a>

<hr>
<p>Após o golpe triplo, o pequeno mago tem vivido nas sombras </p>
<p>Olhando para os magistas no mundo dos magos, todos os tipos de magia estão frequentemente disponíveis.<br>Um mestre da magia do carbono, o café produzido em Java também é decente de usar, não há necessidade de começar do zero. </p>
<p>O pequeno mago pensa que, neste caso, além do malvado “ajuste razoável de emoções” - para se manter ocupado, é melhor se acalmar. </p>
<p>Depois disso, comecei a ler sem parar, Xanaduola, pólvora e outros quadros mágicos </p>
<p>(PS: A seção da planta. Cimento de polímero também está dentro do escopo do treinamento, mas infelizmente não encontrei o livro de feitiços “A seção da planta. Cimento de polímero”, além do pequeno mago comprou há pouco tempo uma ferramenta mágica Não por mim), já tinha vergonha, por isso tive que desistir) </p>
<p>O pequeno mago leu “Tao-Te Ching”, e há um ditado que diz que o soldado vencerá<br>A grosso modo, os exércitos adversários, o lado cheio de dor e raiva, certamente vencerão </p>
<p>Os dentes cerrados do pequeno mago neste momento podem ser descritos como tristeza e raiva </p>
<p>Há um livro no continente que é mais grosso do que algumas placas empilhadas. Ele é dividido em nove livros e registra essas coisas no continente há 600 anos.<br>Depois de lê-lo, o mais impressionante não são truques, mas sempre que há um bandido ou conspiração e momento, a frase é frequentemente inserida de repente: </p>
<blockquote>
<p>Devido à limitação de QI </p>
</blockquote>
<p>As falhas dos predecessores, as lições para as gerações futuras<br>O pobre magozinho só lê livros de magia todos os dias, então ele não sabe nada sobre história. </p>
<p>E por causa da complexidade de assistir mais de uma vez, gradualmente, o pequeno mago descobriu que, ao entoar magia de píton, ele frequentemente combinava o feitiço do rubi nele, e vice-versa. </p>
<p>Finalmente, o pequeno mago ficou surpreso ao descobrir que ele não conseguia nem lançar uma magia decente. </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Go Web</title>
    <url>/pt/Go-Web/</url>
    <content><![CDATA[<p>Ainda não terminei de ler, depois da idade escolar, os livros de programação só podem pegar os capítulos chave para ver, os exemplos não podem ser percorridos um a um, devo dizer que é uma pena </p>
<p>Em termos relativos, a cobertura é relativamente abrangente e os exemplos também são bastante representativos. Vale a pena comprar </p>
<p>Sem falar que o autor coloca o livro na Internet, você pode encontrá-lo pesquisando </p>
<p>Aprendendo Fazendo, escrevi um site para experimentar a água: </p>
<a id="more"></a>

<p>Http: // dirija diariamente. Uma buzina. O que / </p>
<hr>
<p>De Python a Ruby, Node.js e Golang </p>
<p>Ruby é realmente incrível. Não vamos falar sobre o grau de liberdade. Em termos de açúcar sintático, é a linguagem que considero mais próxima do pseudocódigo (se não houver fim, pode-se dizer que está escrevendo um pseudocódigo, e não precisa ser como o Python. (Atenção humana ao recuo) </p>
<p>Node.js, porque não conheço JavaScript, não sei muito sobre isso </p>
<p>Então eu vi Go. Como meu idioma de entrada é C, este tem uma intimidade e familiaridade naturais. </p>
<p>No entanto, ao mudar de Ruby para Go, a parte mais desconfortável é que você tem que declarar o tipo de variável novamente.Os dados mais complexos precisam ser convertidos pela interface, em vez de fazer o que quiser antes. </p>
<p>Lentamente, aprendi que isso é para verificar os BUGs antes de compilar.Linguagens dinâmicas só podem ser testadas com carne humana. </p>
<p>Dor de ovo </p>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>Órfão</title>
    <url>/pt/Single-Forever/</url>
    <content><![CDATA[<p>O pequeno mago não se moveu por um tempo, por que apareceu de novo? Porque esse momento é especial </p>
<p>À tarde, o pequeno mago estava se aquecendo ao sol na varanda, olhando para a multidão recomendada pela deusa há dois dias, e quando estava entediado, ele golpeou Q, e quando viu que a deusa estava online, ele foi conversar. </p>
<p>Eu não esperava que a deusa respondesse todas as frases, e a resposta foi muito rápida </p>
<a id="more"></a>

<p>Diz-se que o pequeno mago deve estar muito feliz, mas ele sente instintivamente uma espécie de frieza - muito anormal<br>Tentação cuidadosa: </p>
<p>Um aumento?<br>Não<br>Promovido? </p>
<p>Apaixonado? Quando o pequeno mago foi atingido e não o enviou<br>A deusa contou automaticamente ao pequeno mago as boas novas<br>Pequeno mago, seus olhos ficaram escuros, quase desmaiaram </p>
<p>A realidade é sempre cruel e muitas vezes dramática<br>Vendo que a lacuna estava prestes a acabar, o pequeno mago deu-lhe um tapa forte quando ele já estava fazendo um desenho do futuro.<br>E a história é sempre surpreendentemente semelhante.Nesta época do ano passado, o pequeno bruxo já havia sofrido um golpe não menos do que o desastre da extinção. </p>
<p>De acordo com o princípio (esqueci, aproximadamente as emoções vêm do cérebro reptiliano e não passam pelo neocórtex humano, então em situações sem risco de vida, o sentimento momentâneo é muitas vezes um julgamento prejudicial), o pequeno mago respira fundo por 10 segundos ,então… </p>
<p>Suportando o coração sangrando, dei um telefonema e conversei um pouco, e finalmente não esqueci de desejar felicidades a eles<br>O que realmente penso em minha mente, sem dizer uma palavra </p>
<p>Depois de desligar, olhando para o presente cuidadosamente preparado, o pequeno mago estava cheio de tristeza<br>É este o ritmo destinado a uma vida solitária? </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Complicações de amor quebrado</title>
    <url>/pt/Complications-of-Lovelorn/</url>
    <content><![CDATA[<p>De modo geral, depois que o protagonista de uma série morre, muitas vezes é o fim </p>
<p>Por exemplo, em “Fantasia de Gelo e Neve”, no final da história, a irmã mais velha conquista o amor, dois cogumelos esfriam a renda e os pés do porco macho têm que ficar com o animal (o fim da vida costuma ser triste) </p>
<p>No entanto, dado que este é um romance e há precedentes antes dele, “Rework” também mencionou que “modificar um BUG geralmente apresenta um novo BUG”<br>Em desespero, concordamos que o pequeno mago pode ser ressuscitado </p>
<p>Mas o pequeno mago sofreu tanto que rompeu o nível do tempo da ressurreição, permanecendo no altar e relutante em sair, então ele teve que conseguir um especial primeiro. </p>
<a id="more"></a>

<hr>
<p>Quando lemos alguns livros sobre história, muitas vezes notamos uma palavra: limitações históricas </p>
<p>Para indivíduos independentes, também existe<br>Por exemplo, meio ano ou um ano depois, enquanto você continuar a avançar mentalmente e olhar para trás de repente, muitas vezes você pode encontrar suas próprias limitações, como coisas que você descobriu agora, mas estava com pressa no momento. </p>
<p>Como alguém que veio, muitas vezes </p>
<p>persuadir: </p>
<blockquote>
<p>Sem realidade<br>Se a deusa se foi, encontre outra<br>O revés que experimentei é muito maior do que você, e não sobrevivi a ele. Você está completamente fraco para resistir à pressão </p>
</blockquote>
<p>Quanto às partes interessadas, não digamos que eu tenha batido neles no passado. Afinal, eles são gentis, mas não podem aliviar muita dor no meu coração. </p>
<p>Na verdade, quando nós mesmos somos festas, muitas vezes não podemos escapar desse círculo vicioso. </p>
<p>O ser humano tem a função de esquecer a dor, a mais óbvia é como um parto doloroso, depois de um ou dois anos de entorpecimento, vai nascer a ideia de regenerar uma criança. </p>
<p>Portanto, quando o tempo for longo o suficiente, a dor original será esquecida, e não é grande coisa perder o amor. </p>
<p>Neste momento, deve haver sapatos de criança quebrados por aí, e nós teremos a mesma sensação - não é apenas separação, qual é o problema, muitas vezes goto’persuade’` </p>
<hr>
<p>Ao escrever coisas, você deve prestar atenção aos altos e baixos. Autores com profundas habilidades internas irão internalizar isso na atmosfera do enredo, sem deixar vestígios, e o baixo nível frequentemente verá um tom seco de transição: </p>
<p><strong>mas</strong> </p>
<p>Na maioria das vezes, não sabemos por que estamos sofrendo, então só podemos usar o fenômeno do “amor perdido” </p>
<p>Então todos estão apaixonados, por que algumas pessoas podem imediatamente virar para perseguir outra garota (besta !!! Ok, tão invejosa), e algumas pessoas querem morrer por amor </p>
<p>Sabemos que devido à existência da mente subconsciente, o conteúdo da consciência muitas vezes é apenas a ponta do iceberg </p>
<p>A dor de perder um relacionamento não é tão simples quanto perder alguém<br>Muitas vezes inclui seu desejo de amor, fantasia sobre o futuro e até mesmo a desilusão de suas crenças pessoais </p>
<p>Na verdade, você também sabe que ela não é tão perfeita quanto você pensa, mas ela se entrega à fantasia e é negligenciada subjetivamente.<br>Como as bolhas de sabão coloridas ao sol, são infinitamente belas e tudo desaparece após ser perfurado. </p>
<p>Em muito pouco tempo, todas as partes boas da vida são tiradas (pelo menos você pensaria que é tudo)<br>Esse tipo de coisa comparável a subverter as Três Visões é naturalmente sofrimento </p>
<p>Você sente vontade de perder o oxigênio em sua vida e seu coração está vazio<br>Eu normalmente forço um sorriso na frente de todos, e só menciono isso na frente dos meus amigos próximos<br>Se você for azarado e autoconsciente, sabendo que está incomodando os outros, muitas vezes ficará em silêncio, apenas dirá algumas palavras e ficará em silêncio.<br>Quando eu estava sozinho, o vazio veio novamente de todas as direções, e não havia como escapar </p>
<p>Parabéns, porque neste momento, você encontrou o maior problema da humanidade e até do universo: a solidão </p>
<hr>
<p>Do ponto de vista econômico, sabemos que tudo o que pagamos à deusa antes já é um custo irrecuperável </p>
<p>Neste momento, a abordagem científica é: o coração é como aço para parar a perda de tempo, isto é, há uma ruptura, há um renascimento! Controle estritamente a expansão do custo de oportunidade </p>
<p>A realidade é que os deuses das ações geralmente têm apenas alguns </p>
<p>Porque as emoções humanas precedem a lógica </p>
<p>Deve ser entendido que a maioria das emoções humanas vem de cérebros de animais antigos, com caminhos curtos e reações rápidas, que pertencem ao nível central e têm autoridade superior.<br>O novo córtex, que é responsável pelo pensamento, tem um longo caminho e uma velocidade de resposta lenta, que pertence à camada de aplicação e tem a autoridade mais baixa.<br>Se você encontrar roubo de amígdala, bloqueio cingulado, etc., isso levará a permissões insuficientes na camada de aplicativo e será rejeitado </p>
<p>Neste ponto, as pessoas são completamente controladas pelas emoções </p>
<p>Então o pequeno mago não está disposto a ressuscitar, podemos entender </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Como se curar</title>
    <url>/pt/Self-Healing/</url>
    <content><![CDATA[<p>Da última vez que analisei alguns dos motivos por trás, desta vez falo sobre como lidar com isso </p>
<p>Em primeiro lugar, não há chance de redenção por omissão aqui, não que você possa se ajoelhar na frente da deusa e chorar ou fazer coisas exageradas como chorar, criar problemas e se enforcar </p>
<p>Se você realmente fez e conseguiu de volta, consulte como se apaixonar em vez do seguinte </p>
<p>Para os indivíduos, como sair da situação difícil o mais rápido possível e minimizar a perda é o que mais nos preocupa agora </p>
<a id="more"></a>

<hr>
<p>Ok, vamos primeiro lidar com o estágio de “tratamento preventivo” enfatizado no “Huang Di Nei Jing” </p>
<p>Em primeiro lugar, devemos encarar nossa identidade como estepe </p>
<p>A maioria das pessoas muitas vezes não está disposta a admitir esse fato<br>Por exemplo, nosso pequeno mago está imerso na fantasia com a deusa<br>Por exemplo, os investidores de varejo que compram na alta e vendem na baixa </p>
<p>Existe um conceito em economia chamado ** path dependence **, a explicação oficial é: </p>
<blockquote>
<p>Depois que as pessoas fazem uma determinada escolha, é como embarcar em um caminho sem volta.A força da inércia fará com que essa escolha se reforce constantemente e o impedirá de sair facilmente. </p>
</blockquote>
<p>Por exemplo, o teclado QWERTY com o qual estamos familiarizados (eu uso o Dvorak por alguns meses e é muito legal, não sei se está no meu coração) </p>
<p>“Suwen · Quatro Qi Tiao Shen Dalun” também mencionou: </p>
<blockquote>
<p>Não é tarde demais se a doença do marido se tornou uma doença e então o remédio, o caos se tornou, e então ele pode ser curado. </p>
</blockquote>
<p>Cultive um coração sensível, por meio de algumas pequenas coisas, veja as pequenas coisas, veja através desta camada de fantasia, em vez de continuamente se entregar a ela </p>
<p>Saia da ilusão, vá em direção à maturidade, corte os grilhões e rompa com o eu do passado </p>
<p>Claro, se você não foi capaz de ver o leopardo em seus olhos, e sabe o outono quando uma folha cai, não seja muito pessimista </p>
<p>Afinal, é mais difícil sair dessa ilusão por conta própria.<br>Isso é equivalente a exigir uma variável no código para verificar se há bugs, o que muitas vezes é irreal (por exemplo, nosso pequeno mago foi despertado pela violência quando encontrou uma confissão de rosto como esta) </p>
<hr>
<p>Agora vamos lidar com o “é tarde demais” </p>
<p>Alguns métodos são amplamente divulgados na Internet, como: </p>
<ol>
<li>Leia um livro que você queria ler há muito tempo </li>
<li>Sair e praticar esportes a pé </li>
<li>Turismo </li>
<li>Fique com amigos e converse </li>
<li>Desvie sua atenção </li>
</ol>
<p>Devo dizer que eles têm certo efeito, mas não podem resolver o problema fundamentalmente. </p>
<p>Ao usar esses métodos, houve conversas e risos na época, mas de outro ângulo, pode não ser outra ilusão. </p>
<p>Porque outras pessoas não podem e não podem ficar com você o tempo todo. Quando todos se vão, a sensação de solidão correndo em sua direção é como a força maior definida na lei, que é imparável (as crianças que estudam no exterior podem ter essa experiência) </p>
<p>Então o que deveríamos fazer? </p>
<p>Se você já viu <a href="http://v.163.com/movie/2012/9/P/4/M8I5TK339_M8KTJOSP4.html">Aula aberta da Universidade de Stanford: Como pensar como um psicólogo - Podemos realmente controlar as emoções</a>, deve ter algum insight </p>
<p>Conforme mencionado no artigo anterior, o cérebro humano tem vários defeitos, mas, na verdade, desde que o bug de hardware não seja acionado, ele pode continuar a funcionar sem problemas. </p>
<p>Subjetivamente, sentimos que o cérebro é de núcleo único e processo único. Forçar um grande número de simultaneidade geralmente significa que a inteligência e o julgamento são reduzidos em geral, quanto mais a computação paralela. </p>
<p>Mas muitas vezes não percebemos ou ignoramos a existência de processos do sistema, como respiração e batimento cardíaco </p>
<p>Devido à existência do kernel ou mecanismos de proteção de hardware e software, se você quiser metaprogramar você mesmo, muitas vezes não é realista ignorar o monitoramento do sistema operacional (objetos estranhos, como drogas, não são contados) </p>
<p>Com base nisso, podemos tentar <code>fork</code> para criar um novo processo, jogar em todas as emoções, como tristeza e decepção, e então executar<code>repudiar%</code>em vez de deixá-los ocupar<code>fg</code>, afetando assim as rotinas da vida diária </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Fanwai-chat</title>
    <url>/pt/Side-Story/</url>
    <content><![CDATA[<p>Originalmente, era apenas por impulso. Eu estava assistindo a ROR na época. Não sabia que o teste deveria ser feito primeiro. Além disso, eram apenas textos E. Eu não sabia o que estava fazendo. Havia pressa para jogar. </p>
<p>Além disso, assisti a um vídeo na época, que basicamente dizia que os passageiros ficavam perguntando aos comissários por que eles não podiam brincar com telefones celulares na punheta. Os comissários continuavam explicando do ponto de vista científico e finalmente enlouqueceram dizendo que vocês trouxas, as maçanetas são movidas por magia, caso contrário Como uma coisa tão grande voou para o céu? A aerodinâmica e o eletromagnetismo foram inventados por alienígenas para enganar vocês, humanos estúpidos … </p>
<p>Então, comecei a programar apressadamente e a magia é um pouco semelhante. Costumo ouvir palestras públicas e os professores costumam mencionar que não há magia aqui. Corri para o oposto, codifiquei várias letras e pude executar , Isso não é incrível </p>
<a id="more"></a>

<hr>
<p>Eu acho que, se você pode escrever 10, abra um projeto no Github<br>Bem, na verdade, eu deveria escrever 100 antes de revisar o cavalo mágico </p>
<p>Mas eu sei que sou muito preguiçoso, não sei quando sou chato e não continuo, então é melhor eu fazer isso cedo. </p>
<p>Fiquei surpreso por ter quebrado um dígito<br>Muito disso se deve ao número de palavras em um capítulo, o suficiente para eu somar 12345 </p>
<p>Felizmente, meu objetivo para mim é muito baixo e não é uma palavra-código profissional. É bom me divertir enquanto escrevo. </p>
<p>Dito isso, os codificadores são muito pressionados, e está tudo bem se você quiser gravar algo, e você não ousa mostrar seu rosto se não for fotogênico. Você só pode contar com ** texto simples **. </p>
<p>Olhando para os jovens literários e artísticos, que não é a foto da comida, remontando ao passado<br>Espaço ╮ (￣ ▽ ￣ “) ╭ </p>
<hr>
<p>De um modo geral, há poucos atores intermediários no romance que desligam esse tipo de coisa. Se, infelizmente, for um grande acontecimento. Ou o protagonista muda repentinamente e sua habilidade aumenta 100 vezes como Saiyan; ou há um ponto de viragem na trama. É a vez de a próxima geração aparecer. Por exemplo, Zhang Cuishan e Zhang Wuji em “Evening the Dragon Slayer” mudaram o protagonista; ou o autor mudou, e é hora de começar de novo (- \ _- |||) </p>
<p>Além disso, neste tipo de fantasia de artes marciais, o protagonista fica cada vez mais forte<br>O <em>Flying Snow de Jin Daxia atira no White Deer, e o Laughing Man apoiado em Bi Yuan</em> é um pináculo </p>
<p>Quando eu ainda estava assistindo “The Wilderness” na faculdade, estava curioso sobre esta questão, por que Jiangzi está?<br>Como Tuobaye, no final de “Sou Shen Ji”, ele já pode lutar contra o nível imortal. Quando “The Wilderness” estiver prestes a acabar, a mente dos três imperadores e toda a bagunça serão tudo, sem mencionar o Shi Nafang parecido com insetos no final. Hua<br>Claro, este é o fim, e não posso escrever mais </p>
<p>Claro, agora eu sei que o estilo dourado tem um forte senso de substituição e os leitores podem crescer com o crescimento do protagonista, de modo que a ** taxa de retorno, aderência e lealdade ** dos usuários são muito altas. Ainda vejo “Escultura de Deus” depois de alguns anos. O impulso de dormir e esquecer </p>
<p>Por outro lado, nas obras de Gulong, é um nível de deus, sem necessidade de lutar contra monstros, impulsionado por raciocínio de suspense, mas eu não ouvi falar de nenhum rebaixamento.<br>Parece não haver um modelo de “crescimento reverso” no mercado </p>
<p>Então perguntei a um colega de quarto que havia quebrado dez mil livros e ele disse que em toda a fantasia que tinha visto, apenas um era o mais fraco quanto mais ele praticava. </p>
<p>Posso imaginar como fiquei surpreso, então que tal perguntar? Ele disse o que mais poderia acontecer. Os pés de porco mataram primeiro o Reino dos Deuses em segundos e depois ficaram cada vez mais fracos. Ele foi humilhado por oponentes que já o haviam abusado. Por fim, ele descobriu que mesmo uma pessoa comum não poderia vencê-lo. </p>
<p>Eu me senti melancólica depois de ouvir </p>
<p>Em seguida, ele passou a dizer que o protagonista será ressuscitado e reencarnado como um XXX, começando do zero, e finalmente se tornando um soberbo, abraçando a (s) bela (s). </p>
<p>Se você não morrer, você não morrerá </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Resumo de 2013</title>
    <url>/pt/2013-Summary/</url>
    <content><![CDATA[<h3 id="31-03-2014-13-47-59"><a href="#31-03-2014-13-47-59" class="headerlink" title="31/03/2014 13:47:59"></a>31/03/2014 13:47:59</h3><p>Hmm ~ o (\ * ￣ ▽ ￣ \ *) o, eu realmente tenho que arrastá-lo para março novamente </p>
<p>A razão por trás disso deve ser o medo de entrar na próxima fase da vida<br>Você tem que esperar até que seu aniversário acabe antes de poder inserir 24 </p>
<p>A outra é também porque o “Huangdi Neijing” coloca os homens em um ciclo de 8 anos<br>Quando eu tinha 16 anos, senti que havia mudado significativamente. Desta vez, eu estava inchado e estava com medo<br>Mas 24 ainda é inevitável, e alguns dias se passaram em um piscar de olhos <del>~</del> </p>
<a id="more"></a>

<h4 id="Ano-sabatico"><a href="#Ano-sabatico" class="headerlink" title="Ano sabático"></a>Ano sabático</h4><p>A ideia mais antiga veio mais ou menos daquele posto de deus:<br>Computador completo em um ano e álgebra linear em uma semana<br>Só posso dizer que depois de assistir TM, fiquei chocado. Ainda consigo jogar assim. </p>
<p>Eu não tive escolha a não ser me vender e tilintar mal<br>Mas não tenho vontade de fazer isso, e sempre quero encontrar uma oportunidade de tirar meio ano ou um ano para me refrescar </p>
<p>Originalmente, planejei começar a planejar daqui a um ano e meio, mas pensei que a oportunidade surgiria tão cedo. </p>
<ol>
<li>Chefe saiu </li>
<li>O novo gerente de projeto se envolve na política do escritório (depois que eu tive um flash, todos deixaram mais da metade) </li>
<li>O projeto pertence ao plano de morte em “The Myth of Man-Month”, e não há pressa </li>
<li>O proprietário quer renovar o jornal do quarto, expulsar as pessoas … </li>
<li>Um pouco de dinheiro ganho com dificuldade </li>
</ol>
<p>Parecia que uma mão invisível estava me empurrando<br>Nesse caso, acompanhe o clima e recuse-se resolutamente a continuar vendendo mão de obra barata </p>
<h4 id="pais"><a href="#pais" class="headerlink" title="pais"></a>pais</h4><p>Mamãe e papai são o tipo dos antiquados, como mencionado no blog<br>Então, eles ouviram que eu deixei meu emprego ou não procurei um emprego. Eles ficaram sem palavras. </p>
<p>A este respeito, sinto que estou fazendo oito coisas erradas<br>Eu sou independente. Fiz algo que parecia uma morte cerebral para eles por um período de tempo. Não briguei com eles e nem mesmo me bati todos os dias </p>
<p>O ano novo chinês deve ser miserável em princípio. Se você não tem uma esposa, ainda não tem um emprego<br>Como resultado, fiquei até o Festival das Lanternas e depois fui embora, minha cunhada ficou chocada </p>
<h4 id="Queijo-e-poder"><a href="#Queijo-e-poder" class="headerlink" title="Queijo é poder"></a>Queijo é poder</h4><p>Embora eu tenha estudado em tempo integral, é uma pena ter lido 100 livros por meio ano. O que você está fazendo? Não estou muito satisfeito. </p>
<p>Mas dito isso, não deve ser medido por este número<br>Talvez algumas pessoas possam iluminar o caminho com apenas alguns livros, mas algumas pessoas nem mesmo lêem um livro. </p>
<h4 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h4><p>O Github finalmente está pronto, o markdown escreve coisas<br>Abri uma série de danos cerebrais, vamos codificar lentamente </p>
<p>Mas descobri que há muito pouco escrito em programação </p>
<p>Isso ￣ △ ￣ Sou realmente um programador? </p>
<p>Embora haja todo tipo de dúvidas, até enganei um garoto como aprendiz </p>
<h4 id="vida"><a href="#vida" class="headerlink" title="vida"></a>vida</h4><p>Comprei o rMBP e finalmente não uso o sistema Ghost todos os dias (o Xcode o arrastou até agora …)<br>Peguei o mini do meu amigo e me senti muito bem. Imediatamente peguei um Air. Depois de usá-lo por um mês, descobri que estava realmente lendo livros e não jogava …<br>Quando 6 for lançado, toda a linha será substituída pela Apple<br>Costumo assistir filmes com meus amigos, comer churrasco, tomar sol na varanda e ler um livro </p>
<h4 id="Finalmente"><a href="#Finalmente" class="headerlink" title="Finalmente"></a>Finalmente</h4><p>É uma pena que sempre haja um fim<br>Para citar Russell: </p>
<blockquote>
<p>Se houver uma chance, estou disposto a fazê-lo novamente </p>
</blockquote>
<h3 id="2014-01-10-23-32-33"><a href="#2014-01-10-23-32-33" class="headerlink" title="2014-01-10 23:32:33"></a>2014-01-10 23:32:33</h3><p>Eu me lembro do resumo do ano passado, eu disse, foi o ano que mais cresci, e parece que vou repetir esse ano<br>Algumas coisas inacabadas ainda estão inacabadas, e você não pode apenas olhar para o final do ano e você pode avançar com um esforço. </p>
<p>Olhando para os últimos dois anos de graduação, parece que estou vivendo de novo<br>Claro, o processo real é gradual e linear, se houver uma mudança repentina, estima-se que seja a segunda personalidade. </p>
<p>O primeiro eu não pode ser resumido como estúpido </p>
<p>Quer vir porque: </p>
<blockquote>
<p>Aqueles que são bons nos tempos antigos serão tolos </p>
</blockquote>
<p>Mais tarde, entrei em contato com muitos conceitos mágicos e estou disposto a acreditar que essas coisas são verdadeiras. </p>
<p>Não tendo nada para fazer, analisei o mapa mental, principalmente um ou seis meses atrás </p>
<p>Alguns pontos encontrados: </p>
<ol>
<li>Um problema foi levantado e nenhuma solução foi contatada diretamente </li>
<li>Algumas teorias de aprendizagem são incorretas ou inadequadas para mim </li>
<li>Metas irrealistas </li>
<li>Alguns nós foram concluídos (tão feliz O (∩_∩) O ~~) </li>
</ol>
<h3 id="31-12-2013-23-46-22"><a href="#31-12-2013-23-46-22" class="headerlink" title="31-12-2013 23:46:22"></a>31-12-2013 23:46:22</h3><p>Isso … que tal um bom resumo? ? ?<br>Tapa na cara de novo<br>A lista anterior não terminou<br>Eu escovei Ruby em Codecademy à noite, pensei que seria no próximo ano em breve. Não é 100%, é alto, não importa o EP, eu estive escovando até agora, 12 Pomodoros.<br>Mas, às vezes, não é que você pode fazer um avanço com o primeiro aço, e não é científico. </p>
<p>É dito: </p>
<blockquote>
<p>Pessoas que sabem como desistir não se preocupam abertamente com os ganhos e perdas que têm pela frente, elas têm uma mente e uma visão amplas … </p>
</blockquote>
<p>Esqueça, é inútil mentir para si mesmo<br>Não diga nada, Sang Xin, estou dormindo e tenho que pegar a passagem amanhã … </p>
<p>Isso não acabou, vamos lutar novamente em dois dias, resumir e continuar<br>Continua… </p>
<hr>
<h3 id="20-12-2013"><a href="#20-12-2013" class="headerlink" title="20/12/2013"></a>20/12/2013</h3><p>A cabeça dói muito hoje em dia, e vi que 2013 está para passar. Há alguns dias eu ia fazer o trabalho de acabamento e não adicionei mais tarefas, mas agora, só olhando os retoques, é muito comum.<br>Principalmente depois que o mac chegou, todo tipo de familiaridade, mais dois dias de atraso </p>
<p>Liste rapidamente a lista de tarefas e tire-as da sua cabeça </p>
<ul>
<li>Operação enfurecedora </li>
<li>Wing Chun: Marcação </li>
<li>Mais de dez livros inacabados </li>
<li>ESL </li>
<li>Este resumo </li>
<li>Atualizar Blog / sobre </li>
</ul>
<p>O resumo do ano passado foi adiado para março. </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>Plano de Leitura</title>
    <url>/pt/Reading-Plan/</url>
    <content><![CDATA[<p>08/04/2014 </p>
<p>Houve um erro de cálculo da última vez, que levou Luzhu a pensar que a leitura rápida foi feita<br>Após a correção, eu sei a verdade. </p>
<a id="more"></a>

<hr>
<p>Depois de comprar o Air, estupidamente passei alguns meses lendo<br>Eu descobri o Game Center há apenas dois dias, não é à toa que as pessoas dizem que o iPad é usado para jogar<br>Incobrável por dois dias<br>Então pensei sobre o mecanismo de recompensa do jogo e a irritabilidade de ler </p>
<p>Lembro-me de onde disse que ler é um processo de recompensa de longo prazo, então você não pode se sentir recompensado em uma unidade de hora.<br>Dizer às cegas que o impulso interno é um abuso de força de vontade </p>
<p>Se o subconsciente não entende isso, parece entediante e o controla para fazer outras coisas </p>
<p>Eu sinto que depois de quebrar 1k ou mais, eu internalizei isso em meu hábito. Eu não deveria me importar mais com isso, mas é particularmente desconfortável neste estágio de várias centenas (╯﹏╰) </p>
<p>Então eu me pergunto se existe um tipo de visualização<br>É semelhante ao KPI, usado puramente<br>E o número de páginas do livro é mais fácil de quantificar </p>
<p>Então usei o Omniplan e o gráfico de Gantt por um longo tempo, mas não parecia o que eu queria. </p>
<p>Eu estava com raiva e queria escrever sozinho e transformá-lo em um site ou aplicativo ios. Mais tarde, descobri que o Excel era o suficiente … </p>
<p>O modo de programador faz rodas para você a cada curva … </p>
<p>Pensando fora da caixa </p>
]]></content>
      <tags>
        <tag>Reading</tag>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>Interpretação dos sonhos</title>
    <url>/pt/The-Interpretation-of-Dreams/</url>
    <content><![CDATA[<p>O pequeno mago descobriu-se fazendo alguns truques<br>A agulha está presa nas costas da mão, dentro do tubo vermelho da agulha de sangue<br>Sem pensar, pressionei a tecla C (pausa?) </p>
<a id="more"></a>

<p>Eu respiro com dificuldade e me sinto sufocada instantaneamente. Parece que estou no vácuo e o ar do meu corpo vaza pelo orifício.<br>O pequeno mago estava apavorado e rapidamente apertou o botão de pausa novamente </p>
<p>Depois de alguns segundos, o pequeno mago deu um suspiro de alívio e finalmente sentiu que podia respirar.<br>Ele respirou fundo algumas vezes, antes de pensar: “Se você morrer em uma catástrofe, terá uma bênção.” Ele descobriu um problema sério - não há batimento cardíaco. </p>
<p>Desta vez, o pequeno mago estava com medo<br>Oh meu Deus, como isso pôde acontecer, o pequeno mago pensou consigo mesmo, há respiração, mas não há pulso, o que há de errado com o inchaço? </p>
<p>A parada cardíaca aguda é uma das causas de morte mais importantes no reino dos elfos<br>Felizmente, o pequeno mago era da dinastia celestial, não desistiu do tratamento e passou a realizar a RCP em si mesmo, nessa época já estava deitado na cama. </p>
<p>No entanto, existem vários pontos-chave para RCP de alta qualidade: </p>
<ul>
<li>A taxa de compressão é de pelo menos 100 compressões por minuto </li>
<li>Adultos comprimem pelo menos 5 cm </li>
<li>Garanta o rebote do tórax após cada compressão </li>
<li>Minimize a interrupção das compressões torácicas </li>
<li>Evite hiperventilação </li>
</ul>
<p>Desta forma, a situação atual do pequeno mago é simplesmente uma piada </p>
<p>Além disso, a ausência de circulação sanguínea significa que não há troca de energia com o oxigênio e as atividades do corpo param gradualmente.<br>Mas eu posso me mover, ainda fazendo as compressões torácicas em mim, e tenho uma vontade tão clara<br>Embora o pequeno mago estivesse confuso, ele não parou para se tratar. </p>
<p>Trabalhando duro por um tempo, depois ele acordou … </p>
<p>É tarde da noite e não há nenhum som ao redor<br>Sempre que o pequeno mago acordava com pesadelos, ele frequentemente descobria que suas mãos estavam pressionadas contra a posição do coração, mas desta vez estava à direita </p>
<hr>
<p>Acho que quando eu estava no primeiro ano da Master Academy, o pequeno mago foi exposto à hipnose e ficou muito relaxado e confortável depois de fazer isso. Mais tarde, eu ouvi uma vez antes de ir para a cama todas as noites, e a qualidade do sono aumentou. </p>
<p>Por acaso, o pequeno mago recorreu a um antigo livro <a href="http://book.douban.com/subject/1201821/">Desvende o mistério da mente humana</a><br>É uma pena que este livro seja muito grosso. Quando o prazo para devolução do livro for atingido, o pequeno mago só pode ler metade </p>
<p>Mas os truques são os truques. Por exemplo, Mei Chaofeng obteve apenas metade das Escrituras de Jiuyin, o que é suficiente para matar Qiu Chuji e outros métodos antigos em segundos. </p>
<p>O pequeno mago ficou pasmo com a teoria de Édipo de Freund, mas “o sonho é realizar um certo desejo” o inspirou<br>Alguns sonhos podem ser descobertos por eles mesmos </p>
<p>Graças à explicação aparentemente científica, juntamente com o bônus do halo de hipnose, os sonhos do pequeno mago gradualmente desaparecem </p>
<p>PS: Alguns anos depois, o pequeno mago folheou este livro novamente, leu a metade restante e viu a descrição dos sonhos controladores, embora houvesse apenas uma frase: </p>
<blockquote>
<p>Algumas pessoas podem saber claramente que estão dormindo e sonhando à noite, então parecem ter a capacidade de guiar os sonhos com sua vontade. Por exemplo, quando esse tipo de sonhador não está satisfeito com o sonho, ele pode interromper o sonho sem acordar e então partir para uma nova direção. </p>
</blockquote>
<p>O magozinho só pode suspirar que a boa sorte faz as pessoas, é muito parecido com isso, se você insistiu em passar por isso no passado, talvez não tenha feito tantos desvios.<br>Há outra coisa no mesmo sentido, falarei sobre isso mais tarde quando tiver a oportunidade </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>多项睡眠</title>
    <url>/pt/Polyphasic-Sleep/</url>
    <content><![CDATA[<p><a href="http://book.douban.com/subject/7067548/">Powerful Sleep</a> 中说过</p>
<blockquote>
<p>实际情况是他们已经睡的太多了，而且精神状态和睡眠质量一样差。之所以出现这种情况是因为他们没有意识到他们体内潜在的精力和睡眠机制（Energy and sleep mechanism）</p>
</blockquote>
<p>这句话点出了很久很久以前，小法师有时睡 10 个小时，醒来还是感到疲劳困倦精力不足的原因</p>
<p>芝士就是力量<br>之后小法师根据自己 Deep sleep 和 REM 的周期，做了适当调整，并加强光照（注意是褪黑素，而不是光合作用）</p>
<p>即使在强大的工作鸭梨下，睡眠质量还是呈线性提高</p>
<a id="more"></a>

<hr>
<p>后来小法师又了解到了神奇的 <a href="http://zh.wikipedia.org/wiki/%E5%A4%9A%E9%98%B6%E6%AE%B5%E7%9D%A1%E7%9C%A0">达芬奇睡眠</a>，又称 多项睡眠（Polyphasic sleep）</p>
<p>当时小法师比较傻，居然真去尝试了下，结果直接导致白天工作时萎靡不振<br>如果他看过 <a href="http://book.douban.com/subject/3662227/">私密的神话</a>，应该就不会做这种愚蠢的事情了</p>
<p>事实上，NREM REM 都是有其不可替代的作用的<br>首先，REM 并不是人类的专利，哺乳类和鸟类都会发生；其次，在 NREM 阶段其表达方式可能是 “感觉”，所以这时虽没有梦的产生，但不代表可以随意缩短</p>
<p>同时，有此尝试的一些勇士们，大多也是以月为单位，好像并没有出现十年如一日并且成功的栗子</p>
<p>不过，小法师受一个用此法考托福的孩纸 6 + 3 * 20′ 的启发（ 夜间 6 小时， 白天分三个时段 20 分钟的小憩），完善了自己的方法</p>
<p>以至于后来，居然一夜无梦了</p>
<hr>
<p>按说小法师应该高兴的，此时他已经可以通过 <strong>催眠</strong>[坑，后面填]，很顺利的进入深度睡眠，并且醒来后全身酥松，仿佛打通了奇经八脉[坑]</p>
<p>但小法师还是郁闷的，连续几个月没有梦相当于少了一项技能，并且这种事情以前还没出现过，很难不怀疑自己的人脑是不是出了什么 BUG</p>
<p>前面说过，小法师已经可以根据 弗洛伊德 的解梦理论，看看自己的潜意识在搞些神马了<br>但现在居然是没有梦了，这怎么解释呢，难道说小法师已无欲无求了？</p>
<p>小法师为此困惑了很长一段时间，直到他看到了 <a href="http://book.douban.com/subject/1316093/">超越自卑</a></p>
<p>阿德勒 在 个体心理学对梦的研究中提到：</p>
<blockquote>
<p>如果说梦的意义只在于留下某些感觉在生活中，我们经常会发现那种不愿意被感觉左右的人，大多时候，他们只相信科学，这种类型的人就不太会做梦，有的人甚至根本就不做梦。</p>
<p>梦中提供的任何方法其实都比你在清醒的时候所思考出的解决方式要差。换个说法，就是说，在做梦的时候，个人就等于在睡觉的过程中解决问题，这样说一点都不过分。</p>
</blockquote>
<p>小法师释怀了，连忙做笔记以加强记忆</p>
<p>可惜他不知道，这些书由于年代较早，著书者都属于在黑暗中摸象的半盲人，每个人都以为摸到了整只象，其实只摸到了象鼻、象腿、象尾。弗作为开创者也未能幸免，显然只摸到了大象的生殖器官。</p>
<p>就酱紫，小法师一直为自己是 “不愿意被感觉左右的人”而沾沾自喜<br>直到他接触了 —— 清明梦</p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Aprenda Go em 20 dias</title>
    <url>/pt/Learn-Go-in-20-days/</url>
    <content><![CDATA[<p>Eu olhei para o Log e tinha menos de 20 dias, mas o título tinha 16 e é estranho. Não há múltiplo de 10 dominador </p>
<p>Em primeiro lugar, fale sobre o tempo de aprendizagem que não pode ser separado do ambiente </p>
<p>Quando Dewdrop estava na faculdade, fiquei magoado por “aprender uma linguagem primeiro”. Quando me formei, eu só conhecia C, mas não aprendi. (Outras linguagens vão expandir seu conhecimento de programação) </p>
<p>Portanto, a lama deve ser mais rápida! ! ! </p>
<a id="more"></a>

<p>Basta dizer algumas palavras e se cansar ＞ ﹏ ＜, despacha-te e publica os passos </p>
<ol>
<li><p><a href="http://book.douban.com/subject/24316255/">Go Web Programming</a> </p>
<p>Exceto pela declaração de tipo na parte de trás, a sintaxe de Golang e C é bastante semelhante, pelo menos não tão dolorosa quanto Obj-C, e o açúcar sintático pode passar<br>Depois, há o aspecto da programação da Web. Não demorará muito para olharmos mais de perto. </p>
</li>
<li><p><a href="http://go-tour-zh.appspot.com/#1">Go Official Guide</a> </p>
<p>Isso é equivalente ao ambiente do computador, teste algum uso </p>
<p>Depois de se familiarizar com as duas etapas acima, você já pode escrever algo para se divertir<br>Por exemplo, Luzhu escreveu uma versão web da página inicial do Zhihu Daily, clique <a href="http://zhihudaily.ahorn.me/">aqui</a><br>Parte do desenvolvimento da época e o código-fonte estão aqui <a href="https://github.com/leihao0/GO-ZhihuDaily">aqui</a> </p>
<p>Claro, Github é outra habilidade </p>
</li>
<li><p>Frame, <a href="https://github.com/go-martini/martini">Martini</a> para dewdrop </p>
<p>O framework parece outra coisa, mesmo que você possa falar, o framework baseado nesta voz ainda vai levar tempo para aprender.Por exemplo, o próprio Ruby é completamente coberto pelo ROR. </p>
<p>Então, eu não esperava usar o framework quando o abri, e mais tarde foi escrito que descobri que a magia de roteamento deve ser implementada por mim mesmo, então fui </p>
</li>
</ol>
<p>Existem várias discussões sobre desempenho, então não vou falar sobre isso </p>
<p>Humanware é a coisa mais importante, portanto, do ponto de vista do programador, Golang ainda é muito bom. É uma voz estática e pode ser escrita como uma linguagem dinâmica até certo ponto, exceto pela dor da conversão Json e o checkerr constante. Lá fora (eu realmente não sou preto !!!) </p>
<p>Bem, eu vim aqui depois de usar um pouco de Ruby. Ruby é tão legal que eu me sinto desconfortável depois de me virar. </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Sonho lúcido</title>
    <url>/pt/Lucid-Dream/</url>
    <content><![CDATA[<p>Devo dizer que este mundo é realmente incrível. O que você não sabe não significa que ele não exista. </p>
<p>Depois que o pequeno mago leu o post de “Ensine a controlar os sonhos”, toda a pessoa ficou atordoada.<br>O Inception anterior era completamente considerado um filme e esqueci depois de assisti-lo. Não esperava que tivesse uma base realista.<br>Realmente um especialista observa a entrada, o leigo observa a emoção<br>Por causa da minha própria estupidez, coisas inesquecíveis como a imprensa fantasma nunca mais apareceram </p>
<a id="more"></a>

<p>PS: O protótipo do Inception parece ser Yasuhiro Tsutsui <a href="http://book.douban.com/subject/4887589/">Dream Detective</a>. Se você não tiver tempo, pode assistir ao filme de anime adaptado [Red Pepper](http: // movie.douban.com/subject/1865703/)<br>No entanto, os romances ainda são recomendados, porque descreve o problema polinomial não determinístico (NP) do mais raso ao mais profundo, e dá muitos exemplos </p>
<p>Depois disso, o pequeno mago continuou no Google, encontrou Baidu Lucid Dream Post Bar, e viu as crianças no fim do mundo, você pode “perder um mundo maravilhoso”, e depois ir para o espaço dos sonhos das formigas<br>Se nada disso pode convencê-lo, ele viu no TED, [Os sentimentos do médico do Departamento de Neurociência de Harvard após um derrame](<a href="http://v.163.com/movie/2013/3/6/B/M92INA100_M92INHT6B">http://v.163.com/movie/2013/3/6/B/M92INA100_M92INHT6B</a> .html) </p>
<p>Por que o pequeno mago está tão animado?<br>Não só porque Qingming Dream pode ser jogado como um jogo 3D em grande escala, o mais importante é: dizem que se você controlar o sonho, você pode fazer qualquer coisa e tudo no sonho (✧≖´◞౪◟≖ ｀) </p>
<p>O pequeno mago começou imediatamente o experimento, e teve sucesso várias vezes depois, todas as quais foram gravadas em detalhes, trecho </p>
<hr>
<p>a primeira vez: </p>
<blockquote>
<p>Use o retiro para dormir, abrace Benben, olhe o software, a estrela de seis pontas, três métodos de conversão (gatilho! Na verdade, ele já está dormindo, caso contrário, o caderno de algum lugar no meio da noite), bata na cama, todo o corpo tem poros dormentes, Parecia que estavam todos abertos e se levantaram imediatamente! ! !<br>Fora do corpo? É apenas o terceiro dia, eu estava animado, e me vi de volta ao meu corpo …<br>Então eu vi que eu era um Dongdong branco brilhante, com membros + corpo, sem mãos e pés, mas a extremidade era em forma de arco. Este é um estado de energia? Então eu não posso sair de qualquer jeito, o próximo passo é não abrir meus olhos<br>Então, abri os olhos e descobri que a porta da varanda estava aberta. Era um pouco assustador se houvesse cavalos zumbindo do lado de fora. Provavelmente estava com medo. Acordei realmente e descobri que a porta estava bem fechada. O lado de fora estava escuro e nada. Som<br>Continuando a tirar o caderno, todo o corpo fica entorpecido de novo …<br>A vaga lembrança abaixo é de ir ao karaokê, voltar à escola, ônibus, táxis, consertar fios elétricos, virou um sonho comum … </p>
</blockquote>
<p>A próxima vez: </p>
<blockquote>
<p>No meu sonho, eu estava na escola, pensei em segurar ctrl e podia voar, shift era acelerar, e depois joguei muito tempo sem gravidade.<br>Depois, há uma versão Q da competição de pequenos animais. Eu estava prestes a voar e, de repente, o pequeno animal verde tornou-se Makolov (Modern Warfare 3) ou T-bag (Prison Break) … Ele queria me pegar , Eu apenas me afastei … </p>
</blockquote>
<p>Existem alguns, como:<br>O “seu tempo é limitado” de Jobs ensinou ao pequeno mago uma lição pesada em seu sonho<br>E no sonho, a relação incerta para a universidade completou o ciclo fechado e pode continuar a avançar<br>E o sonho mencionado em Descobrindo o Mistério da Mente Humana, o pequeno mago frequentemente se perguntava qual é o significado de viver, então eu dei a ele um pouco no sonho e o matei para que Ya soubesse como é maravilhoso viver. </p>
<p>##método<br>Existem muitos jogos online, cada um com sua própria maneira de jogar, na verdade, você só precisa dominar as ideias centrais: ** Sonhe em um sonho, depois controle o sonho ** </p>
<ol>
<li>Ao acordar de manhã, você deve registrar seus sonhos. Mesmo que não se lembre de nenhum sonho, você deve escrever e desenhar.<br>A memória normal de curto prazo é apagada em 5 minutos, então se você não gravar o sonho imediatamente, o sonho será esquecido instantaneamente </li>
<li>Na vida diária, lembre-se: “Estou sonhando?”<br>Os hábitos podem ser transformados em sonhos. O princípio pode ser referido: <a href="http://book.douban.com/subject/20507212/">O poder do hábito - por que vivemos e trabalhamos assim? </a> </li>
</ol>
<p>Para obter detalhes, consulte o <a href="http://book.douban.com/subject/4740779/">Guia dos sonhos - Analisando o sonho misterioso de Qingming</a> </p>
<p>Também descreve um estado que pode ser mais avançado do que os sonhos lúcidos: ausência de sonhos, isto é, o estado de consciência pura. </p>
<p>PS:<br>Quem não tem sonhos aqui não é o tipo de pequeno mago que dorme até o amanhecer na ilha de Phuket depois de hipnotizar.<br>Pode ser o estado de estar completamente presente no “Poder do Presente”<br>Além disso, quando o cérebro evoluiu REM, nenhuma palavra foi produzida ainda, então nossos sonhos são frequentemente apresentados na forma de imagens </p>
<hr>
<p>Na verdade, mesmo que seja Zhimeng, ainda não consigo deixar de sentir esse tipo de medo, como a situação em que o corpo está frio, todo o corpo está transparente e um braço está quebrado<br>É ainda mais assustador se forem as cenas da sua vida diária, como sons estranhos, monstros e esqueletos.<br>Por causa da luta ou fuga enraizada nos genes humanos, é difícil para você não acordar neste momento </p>
<p>Porque - caso seja verdade! </p>
<p>Na série Don Juan <a href="http://book.douban.com/subject/4199618/">The Art of Dreaming</a>, o sonho Qingming é descrito como um outro mundo, mas nossa vida diária é ilusória<br>Parece um pouco com Avalon - o lar ideal para almas heróicas descansarem </p>
<p>Embora pareça um absurdo, mas Zhuang Shengxiao sonha com borboletas, quem sabe qual mundo é real? </p>
<h2 id="A-verdade-e-sempre-uma"><a href="#A-verdade-e-sempre-uma" class="headerlink" title="A verdade é sempre uma"></a>A verdade é sempre uma</h2><p>Tendo dito tanto, nas palavras de Conan: Há apenas uma verdade </p>
<blockquote>
<p>Para uma renda mensal de mais de 50.000, considere viagens de médio porte na Europa e na América<br>Renda mensal de 30.000 pode considerar viagens europeias de baixo custo<br>Renda mensal de 10.000 a 20.000, por favor, escolha tour sudeste da Ásia<br>A renda mensal é inferior a 10.000, escolha viagens domésticas<br>A renda mensal é inferior a cinco mil, por favor, escolha o tour da província<br>Escolha um passeio com renda mensal de 3.000<br>Por favor, escolha óleo de amendoim por menos de dois mil<br>Menos de mil, por favor, escolha o tour da trincheira<br>** Se você não tem renda, selecione ** Sonambulismo **!<br>Feliz primeiro de maio a todos! </p>
</blockquote>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Paralisia do sono</title>
    <url>/pt/Sleep-Paralysis/</url>
    <content><![CDATA[<p>Certa vez, quando o pequeno mago ainda era um aprendiz de magia na academia de magia, ele experimentou duas vezes [Ghost Press](<a href="http://zh.wikipedia.org/zh/%E7%9D%A1%E7%9C%A0%E7">http://zh.wikipedia.org/zh/%E7%9D%A1%E7%9C%A0%E7</a> % 98% AB% E7% 97% AA% E7% 97% 87 *) </p>
<p>Já se passaram quatro anos desde a primeira vez. O pequeno mago na época nem sabia que era chamado de “imprensa fantasma”, mas estava completamente perdido e o definiu como um “evento espiritual. </p>
<p>Vamos voltar a quatro anos atrás, (<em>análise usando a teoria da “Explicação dos Sonhos” entre parênteses</em>): </p>
<p>Naquela época, o pequeno mago voltava das compras ao meio-dia e foi dormir para uma soneca<br>Além disso, ele estava resfriado e estava muito desconfortável, então o pequeno mago continuou a usar a hipnoterapia<br>Como mencionado antes, depois que o pequeno mago usa esse método, ele não tem problemas para sonhar e não tem problemas por quase dois anos. </p>
<p>E desta vez ele vai comer meio quilo </p>
<a id="more"></a>

<hr>
<p>O pequeno mago relaxou lentamente e, de repente, descobriu que tinha habilidade de introspecção (<em>A prática taoísta pode ver as vísceras</em>), e quando examinou seu estômago, viu um grande tumor.<br>Tonto, pensou o magozinho, esta é uma doença terminal, e então a tela é reduzida, o anterior é o elefante que foi aumentado várias vezes (<em>Livro de Biologia do Ensino Médio em Célula de Tumor</em>) </p>
<p>… </p>
<p>Quando ele estava consciente novamente, o pequeno mago se viu na ponte de um lago (<em>um mapa de um lago local</em>)<br>De repente, a imagem de uma mão saindo da água pisca (<em>Plantas vs. Zumbis</em>)<br>Ao atravessar a metade do lago da ponte, houve um motim à direita, como se alguém tivesse caído na água.<br>Então eu vi uma criança na água (* Quando o pequeno mago passou por uma certa porta quando era pequeno, o amiguinho disse que ela estava assombrada por dentro, e ele não deve olhar para dentro (* Nunca imagine o elefante rosa *), caso contrário ele teria um fantasma. Então o pequeno mago teria Eu olhei para dentro e tive um vislumbre de uma foto inesquecível *)<br>O pequeno mago desceu um arco até um navio, e a imagem de sua mão saindo da água brilhou novamente. Então ele voou ou caiu na água? A tela está inclinada cerca de 90 graus (<em>CS morreu e caiu do andar de cima e “Eu caí na água da última vez” -Angel Beats</em>) </p>
<p>Depois disso, o pequeno mago se enredou com aquela coisa. Eu não sei quanto tempo passou, pode ser instantâneo<br>Então ele se sentiu entorpecido por todo o corpo e havia um zumbido em seu cérebro (<em>o tipo de OVNI que apareceu no filme são, na verdade, ondas cerebrais</em>) </p>
<p>O pequeno mago está apavorado, há um horror de ser possuído por um fantasma e prestes a ser ocupado<br>Ele sempre quis se livrar dele, e tentou brilhar o sol três vezes, só que da última vez saiu uma chama vermelha com uma careta (<em>Warcraft Flame Lord’s Lava Creature</em>)<br>Neste momento, o som do zumbido está ficando cada vez mais alto e todo o corpo está ficando dormente </p>
<p>Eu não sei se ele pensou nisso ou se a pessoa resgatando ao lado dele lembrou: Basta abrir os olhos.<br>Esta é, sem dúvida, uma palha para salvar vidas, o pequeno mago fez isso desesperadamente, mas ele parecia não ter controle sobre seu corpo, ele estava completamente paralisado, e ele não conseguia nem abrir os olhos.<br>Naquela época, o pequeno mago tinha apenas um sentimento: “Se você não abrir os olhos, vai ser uma planta”<br>Depois de tentar várias vezes, ele finalmente abriu o olho direito e viu o teto do dormitório. Estava apenas escuro. Os fantasmas e sons desapareceram imediatamente e ele percebeu que estava tirando uma soneca. </p>
<p>Embora houvesse “Explicação do Sonho” para resistir, alguns deles estavam além da explicação do pequeno mago, e uma série de questões foram levantadas:<br>Se tudo isso são ilusões, por que todo o corpo está paralisado?<br>Ele esperou um pouco antes de conseguir controlar o braço para tirar os fones de ouvido e não precisava pensar em como seus membros deveriam ser exercitados. Ele podia se mover de acordo com nossa consciência.<br>A atividade mental pode causar danos físicos?<br>Além disso, eram mais de 3 horas na hora. Embora pertencesse ao yin do sol em um dia, os fantasmas não escaparam.<br>E o que acontece se você não abrir os olhos? Consciência perdida? Por isso, o pequeno mago não sentiu nenhuma emoção e não teve nenhum impacto espiritual sobre ele.<br>Ainda está preso em sua mente ou ele saiu? Ou é uma parte dele? </p>
<p>Em suma, a experiência da imprensa fantasma é estranha e peculiar, principalmente na primeira vez, sem orientação científica, é difícil não fazer associações com fantasmas.<br>O pequeno mago ficou intrigado por um tempo desde então, algumas semanas depois, ele experimentou novamente<br>Com a primeira experiência, o pequeno mago abriu rapidamente os olhos e pensou que havia terminado. </p>
<p>Depois de outro período de tempo, o pequeno mago escovou o domínio Q e de repente descobriu que Tiantianfa enviou uma conta pública que ele planejava bloquear e postou um artigo:<br>Ensine como controlar sonhos [Super tecnologia] </p>
<p>Pequeno mago é completamente estúpido </p>
<hr>
<p>PS:<br>Na verdade, a resposta que realmente convence o pequeno mago está em <a href="http://book.douban.com/subject/5375620/">Fora de controle - O destino final e o fim de toda a humanidade</a>. Este livro é inconsistente com Mengbagan, no qual O capítulo de All Fools into Wisdom diz: </p>
<blockquote>
<p>Os humanos têm um cérebro, mas não é centralizado nem central<br>… A consciência emerge de uma rede distribuída de muitos circuitos neurais minúsculos e inconscientes </p>
</blockquote>
<p>Ele também citou “The Society of Mind” (The Society of Mind): Marvin Mins baseado em um parágrafo do livro Philosophy and Humanities publicado em 1988: </p>
<blockquote>
<p>As atividades mentais humanas e quaisquer sistemas de percepção naturalmente evoluídos são uma grande sociedade composta de processos individuais simples concluídos por incontáveis ​​”seres ocupados” - como agentes. Vários fenômenos mentais emergem do mecanismo de interação altamente conectado do cérebro. </p>
</blockquote>
<p>Para fazer uma analogia imprecisa, o cérebro humano é provavelmente como uma GPU, com muitas unidades de computação. Cada um está no comando de seus próprios assuntos e, juntos, eles formam o “você” atual.<br>E durante o sono, se a parte da célula da consciência estiver funcionando enquanto a parte que controla o corpo está dormente, isso provavelmente levará ao terrível fenômeno de se sentir acordado, mas incapaz de controlar o corpo (pacientes com derrame?) </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Como instalar o Reaver no Mac OS X</title>
    <url>/pt/how-to-install-reaver-on-mac-os-x/</url>
    <content><![CDATA[<p>Atualização: 24-05-2017 09:03:10 </p>
<p>Desculpe, esta postagem, eu não percebi seu \ * \ * perigo antes. </p>
<a id="more"></a>

<p>Em outubro do ano passado, minha rede estava vencida e eu cancelei o wi-fi que foi usado temporariamente durante o feriado do Dia Nacional de que a nova rede precisava. </p>
<p>Quando joguei o * Open Yale Course-Listening to Music * no NAS, descobri que minha TV (sistema Android) tinha uma legenda que dizia “Este site é apenas para meu uso pessoal. Você tem algum problema?”. </p>
<p>Fiquei surpreso com esta frase. Meu NAS tem um sistema PandoraBox. Eu o utilizo como uma ponte. Normalmente, minha TV não deveria aparecer no roteador. Obviamente, descobri que esse wi-fi era um wi-fi de pesca e minha TV foi hackeada. </p>
<p>Portanto, se alguns aplicativos estúpidos ainda estiverem usando http, todos os meus dados serão expostos. Mesmo https tem o problema de <a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">MitM</a>. ‘O produto diz que iOS e macOS têm um certificado de confiança de login no Keychain, mas o que é Android? Alguns dispositivos têm sua própria porta traseira. </p>
<p>Quanto à minha TV, acho que ela usa <code>adb connect &lt;endereço IP da TV&gt;</code> que é <em>Android Debug Bridge (adb) Wireless Debugging Over Wi-Fi</em>. </p>
<p>No entanto, posteriormente alterei a maioria das senhas. </p>
<p>Portanto, você pode tentar o reaver da exploração técnica, mas ** não pode usá-lo **. </p>
<hr>
<p>Atualização: 2015-07-27 13:14:32 </p>
<p>Eu o escrevi em 11/05/2014, mas com um ano de atraso, agora você pode instalar facilmente o Reaver com o <code>Homebrew</code>. </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install reaver</span><br></pre></td></tr></table></figure>

<p>Obrigado Rustam pela sugestão </p>
<hr>
<p>Eu sempre uso o beini no VMware, e toda vez que eu conecto um adaptador sem fio USB extra no meu computador. </p>
<p>Quando eu tinha um Mac, apenas copiava o VMX do beini do Windows para o Mac, o que significava que ainda precisava usar um adaptador wireless. </p>
<p>Na verdade, <code>minidwep</code> ou<code>inflator</code> usam a poderosa ferramenta <code>Reaver</code> … você sabe), enquanto o Mac é um sistema baseado em Unix, você pode executar<code>Reaver</code> diretamente. </p>
<ol>
<li>Baixe <a href="https://docs.google.com/file/d/0B3tHnfnS08GycG1fVENETEdvazA/edit">reaver-osx.zip</a><br>(Dicas: O reaver-1.4 original não pode usar <code>make</code> diretamente no Mac) </li>
<li>Descompacte reaver-osx.zip. </li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> reaver-wps/src/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<p>Aproveite, não faça coisas ruins :-) </p>
]]></content>
      <tags>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>Direto para o céu</title>
    <url>/pt/Highway-to-Heaven/</url>
    <content><![CDATA[<p>Charles Dickens, o maior escritor britânico da era vitoriana, disse em A Tale of Two Cities: </p>
<blockquote>
<p>Esta é a melhor e a pior era;<br>Esta é a era dos sábios, esta é a era da ignorância;<br>Esta é a era da confiança, esta é a era da dúvida;<br>Esta é a estação da luz, esta é a estação das trevas;<br>Esta é a primavera da esperança, este é o inverno da decepção;<br>Temos tudo, não temos nada;<br>Aqui vai direto para o céu, aqui vai direto para o inferno </p>
</blockquote>
<a id="more"></a>

<p>Claro que este artigo tem pouco a ver com esta passagem<br>A razão pela qual é citado aqui é apenas que essas frases são cativantes de ler, loucas e legais. </p>
<p>Mas o pequeno mago foi embora e foi para o céu </p>
<p>Eu tenho que suspirar o rápido desenvolvimento da dinastia celestial. Dois anos atrás, quando o pequeno mago foi para o céu de dois papéis gordos, havia apenas a série K.<br>Na verdade, não havia sistema G naquela época, era como a “Divina Comédia” de Dante, o percurso foi dividido em: </p>
<blockquote>
<p>Inferno (Inferno) - Purgatório (Purgatório) - Paraíso (Paraíso) </p>
</blockquote>
<p>Antes de ir para o céu, o pequeno mago tem que ir um pouco para a cidade mágica, sem falar que o preço é várias vezes mais caro, mas em termos de tempo pode ser ＞ = série K </p>
<p>De volta à cidade, o amigo comprou um assento duro para economizar dinheiro e conseguiu atrair o jovem mestre para o fosso<br>Originalmente, o pequeno mago se esforçou demais enquanto praticava magia na academia de magos, o que causou alguns problemas menores na coluna lombar.<br>Foi bom, as 6 horas de solavancos contínuos quase quebraram a cintura fina do pequeno mago.<br>A partir de então, o pequeno mago jurou deitar-se enquanto tivesse um bilhete </p>
<p>Não quero ter uma série G direta depois de um ano, silenciosa, rápida e limpa, e a viagem é encurtada para 2,5 horas </p>
<p>Mas mesmo com Jiangzi, é muito chato no trem<br>No passado, os pequenos feiticeiros sempre traziam livros ou os liam diretamente ao telefone, mas desta vez com o artefato de código, é naturalmente muito diferente </p>
<p>No entanto, o pequeno mago está ainda mais preocupado e hesitou em sacrificar o artefato. Afinal, existem alguns artefatos comuns por aí, como a peste e a morte. </p>
<p>Na verdade, o pequeno mago também usou e usou esta arma mágica comum por muito tempo, desde a antiga pele sedenta até o último tipo de praga, vamos morrer e passar mais de 1 mil dias e noites com o pequeno mago </p>
<p>Essa é realmente uma boa memória. A cintura do pequeno mago começou a se desgastar naquele momento, então vamos falar sobre isso mais tarde, se eu tiver uma chance. </p>
<p>Na verdade, a preocupação do pequeno mago é completamente redundante, porque: </p>
<p>O pequeno mago nos olhos do pequeno mago:<br>Nossa, eu peguei o artefato muito jovem, esse cara não é fácil<br>O pequeno mago aos olhos dos outros:<br>Um programador trabalhador, tenho que consertar o bug do trem </p>
<hr>
<p>Dicas: </p>
<p>Existe uma experiência:<br>Deixe que os outros vejam as coisas para reduzir a probabilidade de serem roubados<br>Não sei se é verdade ou não, mas o pequeno mago costuma usar isso<br>Os transeuntes também são muito prestativos, não houve nenhum incidente com o cisne negro </p>
<hr>
<p>Antes, o pequeno mago pediu a um pequeno parceiro para encontrar a casa de um fazendeiro em sua comunidade, temporariamente por um mês como uma transição </p>
<p>Então ele conheceu o que é chamado de luta das formigas e o que é chamado de Bei Diao </p>
<p>Esse ambiente …<br>Aquele barulho…<br>Esse cheiro … </p>
<p>Além disso, as lojas aqui, como se tivessem sido discutidas, fechavam uma após a outra, cada vez que ouvia-se um barulho alto, dando ao pequeno mago um estímulo contínuo e contínuo.<br>Um após o outro, mais do que o ronco do quarto do pequeno mago </p>
<p>Às três da manhã, a última loja foi finalmente fechada<br>Pequeno Mago pensou que ele poderia finalmente dormir desta vez<br>Apenas deitado, ouviu-se um barulho alto novamente, e o pequeno mago ficou surpreso ao descobrir que as primeiras vendas das lojas começaram a abrir as portas uma após a outra. </p>
<hr>
<p>O pequeno mago tem um bom plano mental, pensando que já leu tantos poemas e livros este ano, e um mês não é suficiente. </p>
<p>Se ele assistiu ao oitavo episódio do documentário “Why Poverty?”, Produzido pela British Broadcasting Corporation (BBC) e pela Danish Broadcasting Corporation (DR) em colaboração com diretores de documentários de vários países [“Reading to Poverty”](<a href="https://www.youtube">https://www.youtube</a> .com / watch? v = tcMzVgurk-0), não deve ser tão ingênuo </p>
<p>Com certeza, depois que o pequeno mago deu um tiro feroz, alguns dias depois, o resultado foi gratificante<br>Existem apenas dois telefonemas para a entrevista, a taxa de conversão é inferior a 20% e o entrevistador desligou<br>Este também é considerado variado, sem vantagens, chato e pensamentos vazios, e o mais importante é que ele ainda está enojado com feitiços. </p>
<p>O pequeno mago não jantou quando estava com o coração partido. Ele silenciosamente voltou para o quarto do camponês e foi ler o “Tao De Jing” de Laozi.<br>Use essa frase repetidamente: </p>
<blockquote>
<p>Infortúnio, onde está a bênção; Fortuna, onde está o infortúnio </p>
</blockquote>
<p>Venha me confortar </p>
<p>╮ (╯_╰) ╭ </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>conta de desenvolvedor iOS e como listá-la</title>
    <url>/pt/ios-developer-account-and-app-store/</url>
    <content><![CDATA[<h2 id="Aplicativo-de-conta-de-desenvolvedor"><a href="#Aplicativo-de-conta-de-desenvolvedor" class="headerlink" title="Aplicativo de conta de desenvolvedor"></a>Aplicativo de conta de desenvolvedor</h2><p>No meio, demorei o fornecimento de fotos e acompanhei a tendência do <code>Swift</code>, mas demorou apenas 4-5 dias e a eficiência ainda era muito alta. </p>
<p>No início, pensei em usar um cartão de crédito de moeda dupla.<br>Como resultado, os tempos estão avançando e agora (2014) os cartões de crédito comuns servirão, por isso é muito conveniente </p>
<p>PS:<br>99 \ $ == 688 ￥?<br>Porque tenho que pagar impostos … </p>
<p>Talvez minha conta tenha transferido o texto E e todos os e-mails retornados sejam textos E, entre eles há uma frase: </p>
<blockquote>
<p>precisaremos de uma cópia em PDF do seu documento de identidade oficial com foto. </p>
</blockquote>
<p>Demorou muito para entender que a <code>identidade emitida pelo governo</code> acabou sendo um cartão de identidade … </p>
<a id="more"></a>

<p>Não pensei muito sobre esse atraso adicional. Como resultado, fui ao site oficial da China Unicom para comprar um cartão há dois dias e o feedback por telefone sabia o motivo. </p>
<p>O motivo dessa coisa estranha é: transferência de conta …<br>China Unicom informou que não foi possível consultar as informações por meio do número de identificação (por que isso?)<br>PS: China Unicom também é muito estranho. Foi enviado para uma caixa de correio QQ. No começo eu pensei que era um mentiroso … </p>
<h2 id="Como-listar"><a href="#Como-listar" class="headerlink" title="Como listar"></a>Como listar</h2><p>Referência <a href="http://my.oschina.net/u/1245365/blog/201920">aqui</a><br>Muito detalhada, comparação básica passo a passo </p>
<p>Para mim, encontrei estes dois pontos de travamento: </p>
<h3 id="1-nenhuma-identidade-estava-disponivel"><a href="#1-nenhuma-identidade-estava-disponivel" class="headerlink" title="1. nenhuma identidade estava disponível"></a>1. nenhuma identidade estava disponível</h3><p>O xCode pergunta isso, comprei a conta, qual é o problema?<br>Principalmente se for a primeira vez, pode não ser definido automaticamente </p>
<p>Veja <a href="http://blog.csdn.net/kafeidev/article/details/8250051">aqui</a><br>A interface não é a mesma, mas depois de olhar mais de perto, passa </p>
<h3 id="2-A-validacao-do-iOS-obteve-Main-iPad-ipad-storyboardc-nao-foi-encontrado"><a href="#2-A-validacao-do-iOS-obteve-Main-iPad-ipad-storyboardc-nao-foi-encontrado" class="headerlink" title="2. A validação do iOS obteve Main_iPad ~ ipad.storyboardc não foi encontrado"></a>2. A validação do iOS obteve Main_iPad ~ ipad.storyboardc não foi encontrado</h3><p>O universal que usei quando o criei antes, embora mais tarde o tenha ajustado para iPhone em todos os lugares, não esperava que houvesse um pequeno canto escuro de <code>plist</code> O \ _ \ _ O” … </p>
<p>Participação na construção: <a href="http://stackoverflow.com/questions/19873058/ios-validation-got-main-iphoneiphone-storyboardc-was-not-found">aqui</a> </p>
<p>Então é só esperar, vai demorar mais 4-5 dias ~ Não ligue de volta (&gt; \ _ &lt;) </p>
<hr>
<p>01/07/2014<br>Esperei sete dias, depois foi rejeitado, foi uma tragédia … </p>
<blockquote>
<p>2.2: Aplicativos que apresentam bugs serão rejeitados<br>22.2: Aplicativos que contenham representações falsas, fraudulentas ou enganosas ou que usem nomes ou ícones semelhantes a outros aplicativos serão rejeitados </p>
</blockquote>
<p>Eu não tenho tempo para olhar mais de perto no momento, apenas jogue fora … </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Melhore seu estilo de vida</title>
    <url>/pt/enhance-your-lifestyle/</url>
    <content><![CDATA[<p>[Uma pessoa aluga um quarto individual em uma cidade estranha. Existe alguma maneira de tornar a vida em um espaço pequeno mais interessante?] ](<a href="http://www.zhihu.com/question/21752718">http://www.zhihu.com/question/21752718</a>)<br><a href="http://www.zhihu.com/question/23136740/answer/27439893?group_id=447934822">Um pouco caro, mas quais são os itens que vale a pena comprar? </a><br><a href="http://www.zhihu.com/question/20840874/answer/27408093?group_id=441891457">Que coisas depois de comprar farão as pessoas se sentirem mal umas com as outras por causa da melhoria de sua qualidade de vida e felicidade? </a><br><a href="http://www.zhihu.com/question/20228439/answer/27418171?group_id=444370212">Existem bons produtos ou marcas que não são conhecidos pelos estranhos? </a> </p>
<a id="more"></a>

<p>Quando trabalhei pela primeira vez, um ou dois anos atrás, fui brincar no papel do quarto alugado pelo pequeno grupo e descobri que uma garota decorava sua cabana com todos os tipos de coisas e estava muito quente </p>
<p>Naquela época, minha renda era quase o dobro da dela, e olhando para o nosso espaço de vida e maneira, realmente parece o contrário<br>Imediatamente percebi que a qualidade de vida e o coeficiente de correlação de renda não são proporcionais, ou pelo menos não como se pensava originalmente. </p>
<p>Sei que essas postagens são muito longas. Eu as li por um tempo, mas ainda não as terminei. Escolhi algumas de acordo com minhas necessidades: </p>
<h2 id="Mochila-Cote-amp-Ciel"><a href="#Mochila-Cote-amp-Ciel" class="headerlink" title="~ Mochila Cote &amp; Ciel ~"></a><del>~ Mochila Cote &amp; Ciel ~</del></h2><p>Como homem, não importa se o botão do mouse tem 1K, mas a bolsa é muito cara a esse preço.<br>Espere pelo pagamento </p>
<h2 id="Jarro-de-filtro-OKO"><a href="#Jarro-de-filtro-OKO" class="headerlink" title="~ Jarro de filtro OKO ~"></a><del>~ Jarro de filtro OKO ~</del></h2><p>Essa coisa estranha transforma a Coca em água pura, e o trovão está morto (na verdade, para beber Coca em alta concentração → _ →)<br>Mas ainda preciso fazer chá ou café, então a demanda não é forte </p>
<h2 id="Retina-MacBook-Pro-13"><a href="#Retina-MacBook-Pro-13" class="headerlink" title="~ Retina MacBook Pro 13 ~"></a><del>~ Retina MacBook Pro 13 ~</del></h2><p>Artefato de desenvolvimento + cara que come<br>Dessa forma, é mais investimento do que consumo<br>Lamento não estar no top 15 </p>
<h2 id="iPad-Air"><a href="#iPad-Air" class="headerlink" title="~ iPad Air ~"></a><del>~ iPad Air ~</del></h2><p>Eu estava enfeitiçado para comprar kindle antes, mas não consegui evitar o pad depois.<br>É legal ler o PDF, o kindle está jogado na gaveta, não se preocupe se não comprar o kindle </p>
<h2 id="iPhone-6"><a href="#iPhone-6" class="headerlink" title="~ iPhone 6 ~"></a><del>~ iPhone 6 ~</del></h2><p>Espere e espere, finalmente há uma tela grande, espere o lançamento </p>
<h2 id="BOSE-QC-20i-reducao-de-ruido-ativa"><a href="#BOSE-QC-20i-reducao-de-ruido-ativa" class="headerlink" title="~ BOSE QC 20i (redução de ruído ativa) ~"></a><del>~ BOSE QC 20i (redução de ruído ativa) ~</del></h2><p>O mundo inteiro está quieto … </p>
<blockquote>
<p>Sentir:<br>Ótimo valor, ótima recomendação </p>
</blockquote>
<h2 id="Logitech-G700s"><a href="#Logitech-G700s" class="headerlink" title="~ Logitech G700s ~"></a><del>~ Logitech G700s ~</del></h2><p>De G1 a MX518, agora é hora de mudar para wireless<br>Mas agora eu jogo menos e espero pelo meu salário </p>
<blockquote>
<p>Sentir:<br>11 teclas de atalho personalizadas, realmente não precisa …<br>1W6 PPP, como flutuante </p>
</blockquote>
<h2 id="Filco-87"><a href="#Filco-87" class="headerlink" title="~ Filco 87 ~"></a><del>~ Filco 87 ~</del></h2><p>Depois de verificar por um longo tempo, eu realmente descobri o que são os eixos verde, vermelho, chá e preto. </p>
<p>Achei que o teclado + touchpad que vem com o rMBP seriam suficientes </p>
<p>Como resultado, usei o Filco para atingir o Warcraft e codifiquei o código novamente<br>Depois de voltar ao meu notebook, a diferença apareceu imediatamente - se eu pressioná-lo rapidamente, a tecla não irá saltar suavemente (envenenada …) </p>
<p>O lendário ** teclado capacitivo estático **: HHKB ou Realforce<br>Mas o HHKB não tem F1, o Realforce é tão feio … </p>
<p>Além disso, quero que Mao fique em silêncio, o escritório é barulhento, ok? Além disso, ainda tenho QC 20<br>Além disso, gosto do teclado travando ao jogar Warcraft. O teclado de levitação magnética ainda está em conceito, naturalmente é mecânico </p>
<p>Filco parece errado<br>As 67 teclas são estranhas. O mais importante é que você não pode escolher um herói ah ah ah ah ah ah ah ah ah<br>O teclado do 104 não é necessário<br>Então, apenas 87 eu mesmo </p>
<blockquote>
<p>Sentir<br>Só posso dizer que a experiência do trackpad do Macbook está realmente funcionando<br>Ao codificar o código, use o quadro para localizar, o movimento da mão não é grande e o mouse não pode fazer isso<br>É por isso que streams puros de mouse como <code>Vim</code> e<code>Emacs</code> apareceram<br>Não há som de travamento ao jogar<br>APM medido, ainda esse número …<br>Relacionado a pessoas … </p>
</blockquote>
<h2 id="Navalha-de-gelo-Braun"><a href="#Navalha-de-gelo-Braun" class="headerlink" title="Navalha de gelo Braun"></a>Navalha de gelo Braun</h2><h2 id="Escova-de-dentes-eletrica-Oral-B-S26"><a href="#Escova-de-dentes-eletrica-Oral-B-S26" class="headerlink" title="~ Escova de dentes elétrica Oral B S26 ~"></a><del>~ Escova de dentes elétrica Oral B S26 ~</del></h2><blockquote>
<p>Sentir:<br>É verdade que estou errado e comprei uma cópia para meus pais<br>Agora escove os dentes todas as manhãs e noites </p>
</blockquote>
<h2 id="Banheira-SPA-de-madeira"><a href="#Banheira-SPA-de-madeira" class="headerlink" title="Banheira SPA de madeira"></a>Banheira SPA de madeira</h2><p>Vamos falar sobre ter seu próprio jornal </p>
<p>Bem, parece estar relacionado com a renda … </p>
]]></content>
      <tags>
        <tag>Shopping</tag>
      </tags>
  </entry>
  <entry>
    <title>Linhas de código</title>
    <url>/pt/count-lines-of-code/</url>
    <content><![CDATA[<p>Quando eu estava lendo * Receita de programação iOS 7 *, de repente pensei em quantas linhas de código Obj-c eu escrevi. </p>
<p>Antes, quando eu ainda estava no sistema operacional Windows, usei o <a href="https://code.google.com/p/boomworks/">SourceCounter</a> para fazer isso. </p>
<p>Mas <a href="https://code.google.com/p/boomworks/">SourceCounter</a> não oferece suporte a Mac OS X. </p>
<p>Então, encontrei uma linha de comando interessante: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find . -name <span class="string">&quot;*.m&quot;</span> -or -name <span class="string">&quot;*.h&quot;</span> | xargs grep -v <span class="string">&quot;^$&quot;</span> | wc -l</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>“^ \ $” Linha em branco<br>“wc -l” é o número de palavras </p>
<p>Eu recomendaria outra ferramenta escrita por <code>Perl</code>. </p>
<p><a href="http://cloc.sourceforge.net/">CLOC - Contagem de linhas de código</a> </p>
<h4 id="Instalar"><a href="#Instalar" class="headerlink" title="Instalar:"></a>Instalar:</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install cloc</span><br></pre></td></tr></table></figure>

<h4 id="Uso"><a href="#Uso" class="headerlink" title="Uso"></a>Uso</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cloc --exclude-dir=<span class="comment">#excludeDir, #dir1 #dir2 ...</span></span><br></pre></td></tr></table></figure>

<p>Aqui está o resultado dos meus códigos </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2014-08-19</span><br><span class="line"></span><br><span class="line">http://cloc.sourceforge.net v 1.60  T=20.51 s (67.8 files/s, 4427.5 lines/s)</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Language                     files          blank        comment           code</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">C++                            409           5440           4917          21968</span><br><span class="line">C/C++ Header                   250           2997           3436          10458</span><br><span class="line">Objective C                    298           3999           3720           9616</span><br><span class="line">XML                            184            408             97           6725</span><br><span class="line">HTML                            27            851             13           4743</span><br><span class="line">Java                           110            732            985           4082</span><br><span class="line">C                               54            492            533           2046</span><br><span class="line">Assembly                        23            234             16            600</span><br><span class="line">Python                          19            200            117            435</span><br><span class="line">Go                               2            109             21            303</span><br><span class="line">CSS                              2             33              7            223</span><br><span class="line">JSP                              4             10              0             66</span><br><span class="line">Javascript                       2              0              9             49</span><br><span class="line">YAML                             5             16             16             44</span><br><span class="line">Ruby                             1             13              3             11</span><br><span class="line">Bourne Shell                     1              4              1              7</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">SUM:                          1391          15538          13891          61376</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Livro de receitas de programação iOS 7</title>
    <url>/pt/ios-7-programming-cookbook/</url>
    <content><![CDATA[<h1 id="Como-ler-o-livro-de-receitas"><a href="#Como-ler-o-livro-de-receitas" class="headerlink" title="Como ler o livro de receitas"></a>Como ler o livro de receitas</h1><p>Oh meu Deus, finalmente acabou, mais de 1k páginas! ! !<br>80% do código digitado manualmente e dois bugs encontrados no código<br>Além disso, se houver erros, os calçados infantis podem <code>Pull Requests</code> no Github para <a href="https://github.com/oreillymedia/iOS7_Programming_Cookbook">oreillymedia / iOS7_Programming_Cookbook</a> </p>
<a id="more"></a>

<h2 id="Adequado-para-o-publico"><a href="#Adequado-para-o-publico" class="headerlink" title="Adequado para o público:"></a>Adequado para o público:</h2><p>De um modo geral, as séries <code>Cookbook</code> são análogas aos dicionários. Não há necessidade de percorrer tudo </p>
<p>Mas depois de escová-lo novamente, os benefícios de construir o ** sistema de conhecimento ** relevante são óbvios </p>
<p>Não apropriado: </p>
<ol>
<li>novato </li>
<li>Desenvolvedor iOS Sênior </li>
</ol>
<p>Os novatos podem ler estes dois livros primeiro:<br><a href="http://book.douban.com/subject/6959487/">Head First iPhone e iPad Development</a><br><a href="http://book.douban.com/subject/24538384/">The Big Nerd Ranch Guide</a> </p>
<h2 id="metodo"><a href="#metodo" class="headerlink" title="método:"></a>método:</h2><ol>
<li><p>Em primeiro lugar, esteja preparado para o colapso → _ →<br>Pense em quantos sapatos infantis voltaram ao dicionário do abandono e se ajoelhe </p>
</li>
<li><p>Selecione os capítulos que são ** chave *<em>, ou seja, os capítulos relacionados ao seu trabalho atual *</em> olhe para ele sem perder uma palavra **<br>Já que o que você vê pode ser usado imediatamente, o efeito é melhor<br>As partes não codificadas são os princípios e dicas, então dê uma olhada mais de perto </p>
</li>
<li><p>Quando chegar a cerca de 50%, concentre-se em ** virar para o código **<br>No momento, estou basicamente familiarizado com o método narrativo do autor. Digitalize o título e basicamente sei o que fazer. Combine o código e adivinhe com o código e apenas digitalize o texto. </p>
</li>
<li><p>Saiba como desistir<br>Memorizar o dicionário não permite que você fale inglês fluentemente, então não há necessidade de terminar este livro<br>Por exemplo, quando assisti, pensei que o iCloud e similares eram muito problemáticos. Se você simplesmente sincronizar os dados, é melhor configurar um back-end diretamente, então eu simplesmente pulo.<br>Está apenas de acordo com a 28ª regra. </p>
</li>
<li><p>Emparelhamento<br>O efeito de trabalhar sozinho não é tão alto quanto o aprendizado em grupo<br>Mas o que você pode ver é diferente. Por exemplo, meus amigos estão assistindo ao Python Cookbook. É o suficiente para conseguir uma promoção mútua.<br>PS: Quando eu assisti mais da metade, percebi que ele estava assistindo a versão traduzida … </p>
</li>
<li><p>Inglês<br>A atualização do iOS é muito rápida, os mais recentes estão todos em inglês, o 7 ainda não foi traduzido, a versão oficial do 8 será lançada …<br>Então, aprenda bem inglês, São Nian </p>
</li>
</ol>
]]></content>
      <tags>
        <tag>Books</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Catedral e Bazar</title>
    <url>/pt/the-cathedral-and-the-bazaar/</url>
    <content><![CDATA[<p>Eu sempre fui estranho<br>Aos olhos do público, os programadores são geralmente burros, agindo de maneira lógica, imersos em seu próprio mundo o dia todo, taciturnos, com QI alto e QE baixo. Há um debate interminável sobre qual linguagem de programação ou estrutura é melhor do que outra<br>Ah, e o mais importante: papel Muyoumei </p>
<p>Isso também me confunde, e por um tempo eu até discordo desse rótulo do fundo do meu coração </p>
<p>Porque olhando para algumas grandes vacas no exterior, além de seu código soberbo, eles também escrevem blogs, publicam livros, marketing, abrem empresas, levantam capital de risco, mergulho, escalada, viagens …<br>E não é apenas uma amostra, só pode ser descrito como guardando o céu<br>Este é … um programador? </p>
<p>Depois de ler este livro, percebi que o nome dessa raça é: Hacker </p>
<a id="more"></a>

<p>Quando assisti “The Hacker and the Painter” da última vez, estava muito frio<br>Ainda me lembro que quando aprendi a linguagem C pela primeira vez, disse a meu irmão que não queria ser um hacker ou me envolver em coisas relacionadas à segurança.<br>Afinal, a biblioteca da escola na época estava cheia de coisas como “prática de ataque e defesa de hackers” e “desmontagem de hackers”. </p>
<p>Depois de muitos anos, agora sei que o que eu não quero ser é um cracker </p>
<p>Para hackers, Eric dá algumas sugestões no artigo: </p>
<blockquote>
<p>Se você quer ser um hacker, continue lendo. Se você quer ser um hacker, leia o newsgroup alt.2600 (news: alt.2600) .Se você achar que não é tão inteligente quanto pensa, esteja preparado para ir para a cadeia de 5 a 10 vezes. Isso é o que quero dizer aos hackers. </p>
</blockquote>
<p>Quanto a isso, tenho dúvidas. No futuro, tenho tempo para ver que versão eram antes de 2000. </p>
<blockquote>
<p>Java também é uma boa linguagem para aprender programação. É mais difícil do que Python, mas pode gerar código mais rápido que Python, acho que pode ser usado como uma excelente segunda linguagem </p>
</blockquote>
<p>Se você ainda não leu Python, basta olhar para Ruby. Esta é uma linguagem que o torna legal. Além disso, devido ao tempo de publicação deste livro, iOS e Android ainda não apareceram </p>
<blockquote>
<p>É melhor aprender todas as cinco linguagens (Python, Java, C / C ++, Perl e LISP). Eles não são apenas a linguagem de hacker mais importante, mas também representam métodos de programação completamente diferentes, cada um dos quais o beneficiará muito. </p>
</blockquote>
<p>Reinventar a roda </p>
<blockquote>
<p>As mentes criativas são um recurso limitado extremamente precioso e não devem ser desperdiçadas em reinventar a roda, especialmente quando há tantas questões novas e fascinantes à sua espera. </p>
</blockquote>
<p>GUI </p>
<blockquote>
<p>O principal problema está no design ergonômico e na psicologia da interface. Os hackers sempre foram fracos nessas áreas. Os hackers fazem um bom trabalho no design de interfaces para outros hackers, mas geralmente não são bons em modelar o processo de pensamento dos outros 95% </p>
</blockquote>
<p>Abaixo está o trecho do livro, o apêndice é muito interessante </p>
<hr>
<h2 id="2-Catedral-e-Bazar"><a href="#2-Catedral-e-Bazar" class="headerlink" title="2. Catedral e Bazar"></a>2. Catedral e Bazar</h2><ol>
<li>Bons trabalhos de software geralmente vêm das necessidades pessoais dos desenvolvedores </li>
<li>Excelentes programadores sabem o que escrever, excelentes programadores sabem o que reescrever (e reutilizar) </li>
<li>“Planeje jogar um fora. Mais cedo ou mais tarde, você o fará.” (Fred Brooks, Capítulo 11 de The Myth of Man-Moon) </li>
<li>Se você tiver a atitude certa, coisas interessantes o encontrarão naturalmente. </li>
<li>Quando você não estiver mais interessado em um programa, sua última responsabilidade é entregá-lo a um sucessor competente </li>
<li>Trate seus usuários como colaboradores de desenvolvimento.Esta é a maneira mais despreocupada se você deseja melhorar rapidamente a qualidade do código e solucionar os erros com eficácia. </li>
<li>Publique com antecedência, publique com frequência e ouça os comentários dos usuários. </li>
<li>Se houver testadores beta e co-desenvolvedores suficientes, quase todos os problemas aparecerão rapidamente e, então, naturalmente, alguém os resolverá. </li>
</ol>
<ul>
<li>A lei de Linus conta a diferença mais crítica entre o modo de catedral e o modo de mercado: aos olhos dos construtores de catedrais, os insetos são complicados, difíceis de encontrar e estão escondidos nas profundezas. Demora vários meses de dedicação. Com uma inspeção cuidadosa, você pode ter certeza de que todos os erros foram eliminados. E quanto maior o intervalo de lançamento, se a tão esperada versão de lançamento não for perfeita, a decepção das pessoas se torna mais inevitável. </li>
<li>Para o modelo de mercado, é completamente diferente.Com milhares de co-desenvolvedores estudando ansiosamente cada nova versão, você pode assumir que os bugs são fáceis de encontrar, ou pelo menos rapidamente se tornam fáceis de encontrar. Portanto, você lançará com frequência para obter mais correções, e o efeito colateral é benigno: mesmo que haja alguns pequenos problemas na versão, você não perderá muito. </li>
</ul>
<ol start="9">
<li>Estruturas de dados inteligentes com código estúpido são muito melhores do que o contrário. </li>
<li>Se você tratar os testadores beta como seu recurso mais precioso, eles se tornarão seu recurso mais precioso </li>
<li>Além de ter uma boa ideia é identificar boas ideias dos usuários, às vezes o último é melhor </li>
<li>Normalmente, as soluções mais revolucionárias e inovadoras vêm da compreensão de que sua ideia básica do problema está errada. </li>
<li>“O projeto perfeito não é que não haja nada a acrescentar, mas que não haja nada a subtrair.” </li>
<li>Qualquer ferramenta deve ter funções esperadas, mas uma ótima ferramenta pode trazer funções inesperadas. </li>
<li>Ao escrever software de gateway, tente não interferir com o fluxo de dados tanto quanto possível e nunca jogue fora as informações, a menos que o destinatário o force a fazer isso </li>
<li>Quando sua linguagem está longe de ser Turing-completa (Turing-completa), o açúcar sintático irá beneficiá-lo muito. </li>
<li>A segurança do sistema depende apenas dos segredos que ele possui. Cuidado com os falsos segredos. </li>
<li>Para resolver um problema interessante, primeiro encontre um problema de seu interesse. </li>
<li>Se o coordenador de desenvolvimento tem um bom meio de comunicação, pelo menos como a Internet, e sabe como liderar sem coerção, então a cooperação de várias pessoas deve ser melhor do que o combate individual </li>
</ol>
<ul>
<li>Se você sentir medo e repulsa no processo de trabalho (mesmo que o expresse na forma de autodepreciação - como pendurar uma boneca Dilbert), deve perceber que o processo deu errado. Felicidade, humor e diversão são vantagens reais </li>
<li>“Brincar” é o modo de trabalho mais econômico em atividades criativas. </li>
</ul>
<h2 id="3-Cultive-a-camada-mental"><a href="#3-Cultive-a-camada-mental" class="headerlink" title="3. Cultive a camada mental"></a>3. Cultive a camada mental</h2><ul>
<li>Na cultura do presente, o status social não depende do que você controla, mas do que você dá </li>
</ul>
<ol>
<li>Se não funcionar como eu esperava, não é bom - não importa o quão inteligente e original seja. </li>
<li>O trabalho extenso no nível mental é melhor do que o trabalho repetitivo em um domínio funcional (para trabalhos existentes). </li>
<li>Obras que podem entrar na versão principal são melhores do que aquelas que não podem. As obras incluídas em todos os lançamentos principais são as mais respeitáveis. </li>
<li>“Usar” é o elogio mais verdadeiro, e o assassino de categorias é melhor do que seus concorrentes. </li>
<li>Comparado com aqueles que escolhem apenas tarefas interessantes e simples, aqueles que se comprometeram com tarefas difíceis e tediosas (como depurar e escrever documentação) por muito tempo são mais admiráveis. </li>
<li>Extensões de função importantes são melhores do que reparos de baixo nível. </li>
</ol>
<h2 id="4-Magic-Pot"><a href="#4-Magic-Pot" class="headerlink" title="4. Magic Pot"></a>4. Magic Pot</h2><ol>
<li>Confiabilidade / estabilidade / escalabilidade é muito importante. </li>
<li>Exceto pela revisão por pares independente, não há outra maneira conveniente e fácil de verificar a exatidão do design e da implementação. </li>
<li>O software é muito crítico para os negócios do cliente. </li>
<li>O software cria ou opera uma infraestrutura pública de computação ou comunicação. </li>
<li>Os principais métodos (ou métodos que podem alcançar funções equivalentes) são de conhecimento público </li>
</ol>
<h2 id="5-Contra-ataque-de-hackers"><a href="#5-Contra-ataque-de-hackers" class="headerlink" title="5. Contra-ataque de hackers"></a>5. Contra-ataque de hackers</h2><ul>
<li>A falta de teoria e linguagem é ruim para nós de duas maneiras: uma é que não podemos pensar sistematicamente sobre como melhorar nossos métodos e a outra é que é difícil para nós explicar e vender nossos métodos para outras pessoas. </li>
</ul>
<h2 id="Apendice-A-Como-se-tornar-um-hacker"><a href="#Apendice-A-Como-se-tornar-um-hacker" class="headerlink" title="Apêndice A: Como se tornar um hacker"></a>Apêndice A: Como se tornar um hacker</h2><h3 id="Hackers-fazem-construcao-hackers-causam-danos"><a href="#Hackers-fazem-construcao-hackers-causam-danos" class="headerlink" title="Hackers fazem construção, hackers causam danos"></a>Hackers fazem construção, hackers causam danos</h3><h3 id="Atitude-hacker"><a href="#Atitude-hacker" class="headerlink" title="Atitude hacker"></a>Atitude hacker</h3><ol>
<li>O mundo está cheio de problemas fascinantes à espera de serem resolvidos. </li>
<li>Não resolva um problema duas vezes. </li>
<li>O tédio e o tédio são prejudiciais </li>
<li>A liberdade é boa </li>
<li>A atitude não pode substituir a habilidade. </li>
</ol>
<h3 id="Habilidades-basicas-de-hackers"><a href="#Habilidades-basicas-de-hackers" class="headerlink" title="Habilidades básicas de hackers"></a>Habilidades básicas de hackers</h3><ol>
<li>Aprenda a programar </li>
</ol>
<ul>
<li>Se você deseja adquirir uma mentalidade que transforme conhecimento em habilidades, você só pode praticar e seguir o mestre. O jeito é ler e escrever código </li>
</ul>
<ol start="2">
<li>Encontre um UNIX de código aberto, aprenda a usá-lo e executá-lo. </li>
<li>Aprenda como usar WWW e escrever HTML. </li>
</ol>
<h3 id="Status-para-a-cultura-hacker"><a href="#Status-para-a-cultura-hacker" class="headerlink" title="Status para a cultura hacker"></a>Status para a cultura hacker</h3><ol>
<li>Escreva software de código aberto. </li>
<li>Auxiliar no teste e depuração de software de código aberto </li>
<li>Publique informações úteis. </li>
<li>Ajude a fazer algum trabalho básico. </li>
<li>Servir a própria cultura hacker. </li>
</ol>
<h3 id="Problema-de-estilo"><a href="#Problema-de-estilo" class="headerlink" title="Problema de estilo"></a>Problema de estilo</h3><ul>
<li><p>Aprenda a escrever bem em sua língua nativa. Embora haja uma crença antiga de que os programadores não podem escrever bem, muitos hackers (incluindo os melhores hackers que conheço) escrevem bons artigos, e o número deles é surpreendente. </p>
</li>
<li><p>Leia ficção científica e participe de um comício de ficção científica (esta é uma ótima maneira de conhecer hackers e hackers em potencial). </p>
</li>
<li><p>Estude meditação e / ou aprenda artes marciais. (O treinamento mental parece ser semelhante em muitos aspectos importantes.) </p>
</li>
<li><p>Cultive a apreciação da música. Aprenda a apreciar alguns tipos únicos de música. Aprenda a tocar bem um instrumento ou a cantar. </p>
</li>
<li><p>Cultive sua apreciação por trocadilhos e palavras espirituosas. </p>
<p>Mas essas coisas estão relacionadas à combinação de habilidades do cérebro esquerdo e direito, que pode ser a chave do problema (os hackers não só precisam ter fortes habilidades de raciocínio lógico, mas também ser capazes de escapar rapidamente da lógica específica do problema) </p>
</li>
</ul>
<h3 id="Nao"><a href="#Nao" class="headerlink" title="Não"></a>Não</h3><ul>
<li>Não use nomes de usuário ou apelidos estúpidos e exagerados. </li>
<li>Não se envolva na Usenet (ou em qualquer outro lugar) guerras de repreensão online. </li>
<li>Não se chame de “cyberpunk” e não perca tempo interagindo com pessoas que se autodenominam cyberpunk. </li>
<li>Não deixe suas postagens ou e-mails cheios de grafia incorreta e gramática incorreta. </li>
</ul>
<p>Finalmente:<br>** “Você é um hacker apenas se outros hackers pensarem que você é um hacker” **<br>Os valores expressos são semelhantes aos ideais declarados pelos grupos de elite da era da cavalaria medieval europeia (geralmente não realizados) .Essas elites sociais dispõem de recursos financeiros suficientes para superar a escassa economia em que se inserem. Como era de se esperar, um aspirante a cavaleiro luta por justiça. Ele busca honra em vez de dinheiro. Ele está ao lado dos fracos e oprimidos, constantemente buscando oportunidades para desafiar os limites de seus talentos heróicos. É exatamente por isso que ele se considerará (e considerado pelos outros) como um líder entre as pessoas - desde que suas habilidades e conduta tenham sido reconhecidas e oficialmente reconhecidas por outros cavaleiros. Na cavalaria exaltada pelos contos e canções de geste arturianos, vemos idealismo, constantes desafios a si mesmo e a busca por status, que se assemelham aos elementos que motivam os hackers hoje. </p>
]]></content>
      <tags>
        <tag>Tech</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>O que a tecnologia quer</title>
    <url>/pt/what-technology-wants/</url>
    <content><![CDATA[<p>A última frase<br>Isso me lembra o conhecimento de Zhang Xiaolong <a href="http://www.zhihu.com/question/20198823">Se este mundo é apenas um pedaço de código, quais bugs você encontrou até agora? </a> Resposta bem humorada a esta pergunta </p>
<blockquote>
<p>Não é realista exigir uma variável no código para verificar se há bugs no código. </p>
</blockquote>
<a id="more"></a>

<h2 id="Trecho-do-livro"><a href="#Trecho-do-livro" class="headerlink" title="Trecho do livro:"></a>Trecho do livro:</h2><p>O significado de liberdade não é fazê-lo precipitadamente, mas sim “liberdade de escolha” </p>
<p>Tanto a vida quanto a tecnologia parecem se basear no fluxo de informações não materiais. </p>
<p>Autonomia: autorreparação, autoproteção, autoconservação (acesso à energia, descarte de resíduos), autocontrole de objetivos, autoaperfeiçoamento </p>
<p>Devemos tratar os elementos técnicos como a natureza. Não podemos pedir que a tecnologia nos obedeça, assim como não podemos pedir que a vida nos obedeça. Às vezes devemos nos render à sua orientação e ficar felizes em sentir seu colorido, às vezes devemos trabalhar muito para transformar suas verdadeiras cores para atender às nossas próprias necessidades. Não temos que implementar todos os requisitos dos elementos técnicos, mas podemos aprender a usar esse poder em vez de contra ele </p>
<p>A linguagem é uma técnica que permite ao pensamento questionar-se, é um espelho mágico que diz ao cérebro o que está a pensar, é um joystick que transforma os pensamentos em ferramentas. A linguagem dominou o movimento indescritível e sem gols da autoconsciência e do autocontraste, de modo que pode controlar o pensamento e torná-lo uma fonte de novas idéias. Sem a estrutura racional da linguagem, não podemos conhecer nossas atividades espirituais e, naturalmente, não podemos pensar sobre nosso comportamento. </p>
<p>O dinheiro traz mais opções, não apenas mais material (embora mais material também seja o resultado). Não seremos felizes por causa de mais equipamentos e experiência. O que nos deixa realmente felizes é poder controlar o tempo e o trabalho, ter a oportunidade de desfrutar de um verdadeiro lazer, escapar das incertezas causadas pela guerra, pobreza e corrupção e aproveitar a oportunidade para buscar a individualidade Liberdade - tudo isso acontece com o crescimento da riqueza. </p>
<p>A natureza humana é maleável. Mudamos nossos valores, expectativas e autopercepção por meio do pensamento. Estamos mudando nossa natureza desde a época dos macacos, e quando isso acontecer, continuaremos a nos transformar profundamente </p>
<p>A tecnologia é uma extensão da vida, e as necessidades comuns das duas são: </p>
<ul>
<li>Melhore a eficiência </li>
<li>Aumentar chance </li>
<li>Melhore a espontaneidade </li>
<li>Aumente a complexidade e a diversidade </li>
<li>Aumente a especialização </li>
<li>Aumente a universalidade </li>
<li>Aumente a liberdade </li>
<li>Promova simbiose </li>
<li>Aumente a beleza </li>
<li>Melhore a percepção </li>
<li>Estrutura estendida </li>
<li>Melhore a capacidade de evolução </li>
</ul>
<p>livre<br>Como tudo mais, nosso livre arbítrio não é único. A escolha do livre arbítrio subconsciente existe no padrão de comportamento primitivo dos animais. Cada animal tem necessidades básicas e eles farão escolhas para atender a essas necessidades. Mas o livre arbítrio apareceu antes da vida. Alguns físicos teóricos - incluindo Freeman Dyson - acreditam que o livre-arbítrio emerge nas partículas atômicas, então o livre arbítrio nasceu nas altas temperaturas do Big Bang e continuou a se expandir desde então. </p>
<p>Os elementos tecnológicos são a forma como o universo cria autoconsciência. Carl Sagan deu uma explicação impressionante sobre isso: “Somos a poeira das estrelas pensando nas estrelas. </p>
]]></content>
      <tags>
        <tag>Tech</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>Força de vontade</title>
    <url>/pt/Willpower/</url>
    <content><![CDATA[<p>À medida que os feitiços da magia moderna se tornam cada vez mais complexos, um projeto bem-sucedido geralmente precisa ser calculado em meses. Os magos que sabem disso são homenageados como o mito do homem-mês </p>
<p>Neste ambiente, o poder espiritual é muito precioso e importante para os feiticeiros </p>
<p>Falando em poder mental, na verdade é pronunciado como `Força de Vontade ‘no reino dos elfos, mas depois que foi introduzido no império, foi traduzido como autocontrole ou força de vontade por trouxas desconhecidos </p>
<p>Parece muito misterioso + alto, na verdade, você só precisa entender duas características </p>
<ol>
<li>bateria </li>
</ol>
<ul>
<li>Magos usam seu poder mental para controlar elementos mágicos </li>
<li>Manhã&gt; tarde </li>
<li>Retorno de chamada disponível para sono / meditação </li>
<li>Diferentes magias consomem diferentes poderes </li>
</ul>
<ol start="2">
<li>Músculo </li>
</ol>
<ul>
<li>Reservas totais variáveis </li>
<li>Pode ser expandido com exercícios específicos </li>
</ul>
<a id="more"></a>

<p>O Sr. Brooks abaixou a cabeça e orou silenciosamente no jantar em que foi premiado como Pessoa de Negócios do Ano; a oração veio de Niebuhr de 1934, uma das orações mais famosas do século 20: </p>
<blockquote>
<p>Meu Deus me conceda a serenidade para aceitar as coisas que não posso mudar, A coragem para mudar as coisas que posso, E a sabedoria para saber a diferença. </p>
</blockquote>
<p>(PS: sapatos infantis parecem familiares ~) </p>
<p>Entre os recursos, ** métodos de exercícios específicos ** e ** sono ** são o que podemos mudar </p>
<p>Chip Heath / Dan Heath coautor de [Transient: How to Make Your World Better](<a href="http://book.douban.com/subject_search?search_text=%E7%9E%AC%E5%">http://book.douban.com/subject_search?search_text=%E7%9E%AC%E5%</a> Mencionado em 8F% 98 &amp; cat = 1001) </p>
<blockquote>
<p>A grande maioria de nossas ações diárias é espontânea, e não supervisionada. E isso é uma coisa boa, porque é difícil de supervisionar, vai consumindo gradualmente a capacidade de autocontrole. </p>
</blockquote>
<p>Então disse </p>
<blockquote>
<p>A capacidade de autocontrole é um recurso esgotável, o que é uma realização crucial. Porque quando falamos em “autocontrole”, não estamos falando do sentido superficial da palavra, mas sim que a força de vontade precisa lutar contra os vícios (fumar, comer biscoitos, álcool). </p>
</blockquote>
<p>Em vista disso, o livro fornece um método de exercício simples e eficaz:<br>** Hábitos internalizados ** - Configure um ** Action Trigger **, sua função é criar um “hábito instantâneo” </p>
<p>Porque em tal ciclo, não há pensamento consciente e deliberado, e isso também pode evitar a perda de energia das pessoas para o autocontrole </p>
<p>O resultado é como um colega dirigindo um carro. No começo ele estava com pressa, mas depois (pensou) ele não iria cair na vala quando chamasse (→ _ →) </p>
<p>E o aspecto do sono não se refere apenas ao sono de mais de seis horas à noite, e cochilos de não mais que meia hora durante o dia também podem ser incluídos.<br>O mais importante é: durma quando estiver com sono<br>Afinal, sob a condição de poder mental insuficiente, controlar à força elementos mágicos terá o risco de explodir armas mágicas </p>
<p>Se você ainda não desistir, chame a seguinte fórmula:<br>Realização = eficiência X tempo </p>
<p>PS: Caso a eficiência seja negativa … </p>
<hr>
<p>Com orientação ideológica correta e após um período de treinamento do demônio, o pequeno mago fica encantado ao descobrir que seu poder mental melhorou significativamente<br>O mais óbvio é que quando você está em boas condições, você pode controlar mais de 15 Pomodoro todos os dias, e geralmente cerca de 12 </p>
<p>Ao mesmo tempo, o pequeno mago também descobriu que suas reservas de poder mental não podem ser aumentadas indefinidamente<br>E se for um livro com uma grande quantidade de informações como “Um Breve Histórico da Informação” e “Fora de Controle”, o consumo de energia será muito rápido </p>
<p>Então, só posso dedicar minha energia limitada a coisas mais importantes </p>
<p>Este é também o lugar onde Katsuma Kazuyo <a href="http://book.douban.com/subject/3729173/">Lei de Investimento de Tempo</a> ** Mapa de Distribuição de Investimento de Tempo ** (Regra dos Quatro Quadrantes + Registro de Tempo) apareceu </p>
<p>Mas o mais paradoxal é que, depois de controlar o que deseja fazer, outras coisas ficam confusas. </p>
<p>Por exemplo, <a href="http://book.douban.com/subject/10786473/">autocontrole</a> mencionou: </p>
<blockquote>
<p>Mais dispostos a “tentar várias estratégias de acasalamento” após a dieta </p>
</blockquote>
<p>Essa também é uma das razões pelas quais algumas estrelas trapaceiam? (→ _ →) </p>
<p>Mas nosso pequeno mago nem mesmo tem namoradas, então não é óbvio<br>O efeito colateral é que depois de mais de uma dúzia de Pomodoros, se você continuar a ler livros, a pilha ficará cheia e não pode ser empurrada<br>Além disso, a reação tornou-se lenta e, depois que a biblioteca fechou, ele parecia enlouquecido a caminho de casa. </p>
<hr>
<p>PS: Força de vontade é um pouco como imunidade, não quanto mais forte, melhor. Força de vontade excessiva = estresse crônico<br>PS2: Pessoas que se integram têm a força de vontade certa </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>帝都</title>
    <url>/pt/BeiJing/</url>
    <content><![CDATA[<p>鉴于自己阅读快到半千，一直想用几个段落介绍下关于快速阅读的东东</p>
<p>结果一拖这个系列就木有然后了…<br>估计还是水平有限导致写不出来…</p>
<p>还是先做点别的吧</p>
<a id="more"></a>

<hr>
<p>纳西姆·尼古拉斯·塔勒布 用了《随机漫步的傻瓜》整整一本书来阐述“不确定性”，然后又用了《黑天鹅》一整本书描述如何应对不可预知的未来<br>小法师匆匆翻完就自以为得其精要</p>
<p>在神针和帝都之间，深思熟虑(tou nao yi re)后决定选 <code>Hard</code> 模式，看看能否开启隐藏技能 get√</p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>赶脚南方的大部分童鞋对于帝都的印象一直是酱紫：</p>
<p>下雨的时候，又是酱紫：</p>
<p>经过实地考察一周后，小法师得出一个结论</p>
<p>“上面的图夸张是夸张了点，但是真的是真的啊！！！”</p>
<p>君不见空气太过干燥，路上的女孩纸的皮肤都不好了<br>君不见由于灰尘过大，路边的车和地面都蒙了一层灰</p>
<p>自从小法师在天堂有次下雨时发现路边的女孩纸裸脚走在柏油马路上后，就不再穿袜纸了<br>结果帝都走两步就弄了一鞋沙纸…</p>
<h2 id="口音"><a href="#口音" class="headerlink" title="口音"></a>口音</h2><p>从地理位置上来说，小法师出生在淮河以北，并且心理一直认为自己是北方人，只是比较认同南方的生活方式<br>最初到天堂时，就被孩纸们说“儿”音很重，还被说把他们带歪了</p>
<p>来到帝都后，才知道小巫见大巫了<br>这哪里是官方描述的：</p>
<blockquote>
<p><em>普通话</em>以<strong>北京语音</strong>为标准音，以北方话为基础方言…</p>
</blockquote>
<p>这边“儿”音已经重到听起来十分滑稽，小法师路上听到路人说话就忍俊不禁<br>但仅仅两天时间，小法师就发现自己被带沟里去了…</p>
<p>不过路上真的有许多歪果仁，并且很多说的不是英语（小法师还是略懂英语的，应该不是口音问题）</p>
<h2 id="中介"><a href="#中介" class="headerlink" title="中介"></a>中介</h2><p>遥想当年还在天堂时，租房只要往小区门口一站，立即围上来一群热情的大妈，也无神马中介费<br>帝都初来乍到，小法师准备不足，还是以为和天堂差不多，结果到了小区门口，发现小黑板（除了蒙了一层灰之外）干干净净。问门口保安租房情况，保安连连摇头，答曰“不知道儿”</p>
<p>以前在天堂 0.8k 的就有十多平米，1.3k 足以朝南+大阳台<br>并且无论多便宜的房纸，就算地下室，都有独立卫生间，洗完澡就可直接裸奔<br>就酱紫小法师还（领着那微薄的薪水）叫苦连天</p>
<p>而帝都价格上就要 x2.5，并且卫生间公用<br>还有三环以内的房子各种古老，有些比小法师在世时间还要悠久<br>墙壁泛黄墙角蜘蛛网，屋外屋内各种脏乱差<br>并且大多五居室，万一一屋挤着小两口，不算小法师就已 8 个，早晨 WC 高峰期时… 小法师想到了可以用 Queue 实现 FIFO</p>
<p>等晚上回宾馆上网搜靠谱中介时，发现帝都已无全尸，无论大小，只要是中介，都已被黑出了翔</p>
<p>只可惜小法师初来乍到，人生地不熟，明知“我为鱼肉人为刀俎”，却又无可奈何</p>
<h2 id="忠告"><a href="#忠告" class="headerlink" title="忠告"></a>忠告</h2><p>南方的孩纸们，泥们千万表被灌太多的鸡汤，比如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">趁着年轻，多去看看外面的世界</span><br><span class="line">年轻就应该有梦想，不管最后怎么样，起码尝试过，不后悔</span><br><span class="line">旅行并不是旅游，要在那里 挤公交挤地铁，上下班...</span><br></pre></td></tr></table></figure>

<p>小法师用绳命给泥们一个忠告：</p>
<p>千万表过来，因为：<br><strong>真！的！！会！！！死！！！！的！！！！！</strong></p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Um simples VS. entre Sinatra e Martini</title>
    <url>/pt/A-simple-VS-between-Sinatra-and-Martini/</url>
    <content><![CDATA[<h1 id="Sinatra-VS-martini"><a href="#Sinatra-VS-martini" class="headerlink" title="Sinatra VS. martini"></a>Sinatra VS. martini</h1><p>Já existem muitos dados comparativos na Internet<br>Mas não é tão real </p>
<p>Então, no <code>VPS</code>, usei<code>Martini</code> e <code>Martini</code> para configurar dois<code>Hello World</code><br>Selecionou <code>siege</code> no<code>Linux</code> como a ferramenta de teste </p>
<a id="more"></a>

<h2 id="desempenho"><a href="#desempenho" class="headerlink" title="desempenho"></a>desempenho</h2><h3 id="martini"><a href="#martini" class="headerlink" title="martini"></a>martini</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">siege -q -c 1000 -r 30 -f sinatra.url</span><br></pre></td></tr></table></figure>

<!--more-->

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Transactions: 29332 hits</span><br><span class="line">Availability: 97.77 %</span><br><span class="line">Elapsed time: 107.10 secs</span><br><span class="line">Data transferred: 0.38 MB</span><br><span class="line">Response time: 1.73 secs</span><br><span class="line">Transaction rate: 273.87 trans&#x2F;sec</span><br><span class="line">Throughput: 0.00 MB&#x2F;sec</span><br><span class="line">Concurrency: 473.90</span><br><span class="line">Successful transactions: 29332</span><br><span class="line">Failed transactions: 668</span><br><span class="line">Longest transaction: 25.45</span><br><span class="line">Shortest transaction: 0.00</span><br></pre></td></tr></table></figure>

<h3 id="martini-1"><a href="#martini-1" class="headerlink" title="martini"></a>martini</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">siege -q -c 1000 -r 30 -f martini.url</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Transactions: 29988 hits</span><br><span class="line">Availability: 99.96 %</span><br><span class="line">Elapsed time: 58.56 secs</span><br><span class="line">Data transferred: 0.34 MB</span><br><span class="line">Response time: 0.46 secs</span><br><span class="line">Transaction rate: 512.09 trans&#x2F;sec</span><br><span class="line">Throughput: 0.01 MB&#x2F;sec</span><br><span class="line">Concurrency: 235.70</span><br><span class="line">Successful transactions: 29988</span><br><span class="line">Failed transactions: 12</span><br><span class="line">Longest transaction: 31.10</span><br><span class="line">Shortest transaction: 0.00</span><br></pre></td></tr></table></figure>

<h2 id="Quantidade-de-codigo"><a href="#Quantidade-de-codigo" class="headerlink" title="Quantidade de código"></a>Quantidade de código</h2><p>Claro que o desenvolvimento é impossível se concentrar apenas no desempenho do servidor<br>“Humanware” há muito enfatiza que, em comparação com a máquina, a velocidade do programador deve ter prioridade. </p>
<p>Uma vez que está apenas imprimindo <em>hello world</em>, é impossível fazer uma comparação mais detalhada da quantidade de código (** Bem-vindo ao deixar uma mensagem **) </p>
<p>A maioria das bibliotecas atuais do <code>Go</code> são<code>Get</code> do <code>Github</code>. A qualidade do código é garantida?<br>Por outro lado, <code>Ruby</code> é relativamente maduro (parece ser o resultado da comparação de<code>Python</code> com <code>Ruby</code> alguns anos atrás …) </p>
<h2 id="Em-conclusao"><a href="#Em-conclusao" class="headerlink" title="Em conclusão"></a>Em conclusão</h2><p>Portanto, se for determinado que o número de visitas diárias está abaixo de dezenas de milhões de PV, não há problema com <code>Ruby</code> </p>
<p>Além disso, é mencionado no livro <a href="http://book.douban.com/subject/6756090/">“Matsumoto Yukihiro’s Program World”</a> que a filosofia de design do Ruby é: a eficiência do desenvolvimento é maior do que a eficiência da operação, tornando-se uma “humanidade” A linguagem de </p>
<p>O mais importante é que <code>Ruby</code> é muito legal de escrever. Tem madeira … </p>
<p>Finalmente, uma pergunta fraca, você está feliz? </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>O princípio básico do Delegado</title>
    <url>/pt/The-primary-principle-of-Delegate/</url>
    <content><![CDATA[<h1 id="Analise-do-Principio-de-Delegado"><a href="#Analise-do-Principio-de-Delegado" class="headerlink" title="Análise do Princípio de Delegado"></a>Análise do Princípio de Delegado</h1><p>Quando um método de B é executado em algum lugar, ele precisa dizer a A sobre seu próprio valor e fazer algum processamento </p>
<p>Como conseguir isso? </p>
<p>Primeiro, B precisa saber a quem contar e, em seguida, chamar A.aFunc () </p>
<p>Eu sei que quem quer conhecer o princípio não quer olhar para o código, procuro simplificar </p>
<a id="more"></a>

<p>Tipo A, B </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">A</span>.swift</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span> &#123;</span><br><span class="line">		<span class="built_in">println</span>(b.value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">B</span>.swift</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> value = <span class="number">0</span></span><br><span class="line">	<span class="function"><span class="keyword">func</span> <span class="title">bFunc</span> <span class="params">()</span></span> &#123;</span><br><span class="line">        value = <span class="number">213</span> <span class="comment">// value 有变化，想通知 A 执行 aFunc()</span></span><br><span class="line">		a.aFunc(b) <span class="comment">// 错误</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<!--more-->

<p>O texto acima não está funcionando, por quê?<br>Como não há a em b, se A for transmitido diretamente, o código de B deve ser modificado e o pacote será perdido </p>
<p>Vamos ver como ** Delegate ** implementa esse mecanismo </p>
<h2 id="Delegar"><a href="#Delegar" class="headerlink" title="Delegar"></a>Delegar</h2><p>Visto que B deseja enviar uma mensagem, comece com B primeiro: </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">A</span>.swift</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span> &#123;</span><br><span class="line">		<span class="built_in">println</span>(b.value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b.swift</span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">BDelegate</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span>  <span class="comment">// 1. 把 A 的 aFunc 声明成 BDelegate 的一个方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> delegate:<span class="type">BDelegate?</span>  <span class="comment">// 2. 声明一个 BDelegate 类型的 delegate 变量</span></span><br><span class="line">    <span class="keyword">var</span> value = <span class="number">0</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">bFunc</span> <span class="params">()</span></span> &#123;</span><br><span class="line">        value = <span class="number">213</span></span><br><span class="line">        delegate?.aFunc(<span class="keyword">self</span>) <span class="comment">// 3. 把自己 b，作为参数，调用 aFunc()</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Depois de fazer 1, 2 e 3, ainda não funciona. Por quê?<br>Porque A não sabe que B comissionou, os dois não estão relacionados </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">a.swift</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>: <span class="title">BDelegate</span> </span>&#123; <span class="comment">// 1. BDelegate</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span> &#123;</span><br><span class="line">        b.delegate = <span class="keyword">self</span> <span class="comment">// 2. 把 b 的 delegate 变量设置成 self，也就是 a</span></span><br><span class="line">        <span class="built_in">println</span>(b.value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b.swift</span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">BDelegate</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> delegate:<span class="type">BDelegate?</span></span><br><span class="line">    <span class="keyword">var</span> value = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">bFunc</span> <span class="params">()</span></span> &#123;</span><br><span class="line">        value = <span class="number">213</span></span><br><span class="line">        delegate?.aFunc(<span class="keyword">self</span>) <span class="comment">// 3. 这下看懂了吧？delegate?.aFunc(self) 等价于  a.aFunc(b)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main.swift</span><br><span class="line"><span class="keyword">let</span> b = <span class="type">B</span>()</span><br><span class="line"><span class="keyword">let</span> a = <span class="type">A</span>()</span><br><span class="line">a.aFunc(b)</span><br><span class="line">b.bFunc()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个可以在 Playground 里看结果了</span></span><br></pre></td></tr></table></figure>

<p>Você Terminou </p>
<p>Lembre-se do código comum, como: </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">mScrollView.delegate = <span class="keyword">self</span></span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MYScrollView</span> : <span class="title">UIScrollView</span>, <span class="title">UIScrollViewDelegate</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">scrollViewDidEndDecelerating</span><span class="params">(scrollView: UIScrollView)</span></span> &#123;</span><br></pre></td></tr></table></figure>

<p>Existe uma sensação de iluminação repentina? </p>
<p>Vamos falar sobre <code>SEL</code> e<code>Block</code> em dois dias </p>
<hr>
<p>É melhor deixar claro. Se houver algo não claro, deixe uma mensagem para discutir o assunto <del>~</del> </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Puxe para atualizar UIViewController no iOS</title>
    <url>/pt/Pull-to-Refresh-UIViewController-in-iOS/</url>
    <content><![CDATA[<p>Se você forçar a adição de um <code>UIRefreshControl</code> a um<code>UIViewController</code>, receberá um erro. </p>
<blockquote>
<p>UIRefreshControl só pode ser gerenciado por um UITableViewController. </p>
</blockquote>
<p>Então, aqui está um truque </p>
<a id="more"></a>

<h2 id="Codigo"><a href="#Codigo" class="headerlink" title="Código"></a>Código</h2><ol>
<li>Inicie uma visualização de tabela em seu <code>UIViewController</code> </li>
</ol>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> refreshControl = <span class="type">UIRefreshControl</span>()</span><br><span class="line"><span class="keyword">var</span> tableView = <span class="type">UITableView</span>()</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>adicione <code>refreshControl</code> a<code>tableView</code>, não <code>view</code> </li>
</ol>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">tableView.frame = view.frame</span><br><span class="line"></span><br><span class="line">refreshControl.addTarget(<span class="keyword">self</span>, action: <span class="type">Selector</span>(<span class="string">&quot;refreshView:&quot;</span>), forControlEvents: .<span class="type">ValueChanged</span>)</span><br><span class="line">tableView.addSubview(refreshControl)  <span class="comment">// here it is</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">self</span>.view.addSubview(tableView)</span><br></pre></td></tr></table></figure>

<p>3 função <code>refreshView</code> </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">refreshView</span><span class="params">(refreshControl: UIRefreshControl)</span></span> &#123;</span><br><span class="line">    refreshControl.attributedTitle = <span class="type">NSAttributedString</span>(string: <span class="string">&quot;Refresh&quot;</span>)</span><br><span class="line">    refreshControl.attributedTitle = <span class="type">NSAttributedString</span>(string:<span class="string">&quot;Last updated on&quot;</span> + <span class="type">NSDate</span>().description)</span><br><span class="line"></span><br><span class="line">    refreshControl.endRefreshing()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Se-voce-gosta-de-usar-Storyboard-como-eu"><a href="#Se-voce-gosta-de-usar-Storyboard-como-eu" class="headerlink" title="Se você gosta de usar Storyboard como eu"></a>Se você gosta de usar <code>Storyboard</code> como eu</h2><ol>
<li><p>Storyboard -&gt; UITableViewController -&gt; habilitar atualização </p>
</li>
<li><p>Então você pode arrastar com <code>Ctrl</code> como<code>UIButton</code> </p>
</li>
</ol>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Como manipular o layout do teclado Filco para Mac OSX</title>
    <url>/pt/How-to-manipulate-Filco-keyboard-layout-to-Mac-OSX/</url>
    <content><![CDATA[<p>Eu entrei no eixo vermelho do <code>Filco</code> antes, e o código do jogo está correto. </p>
<p>Embora antes de usar <code>Preferências do sistema -&gt; Teclado -&gt; Teclas modificadoras -&gt; Selecionar teclado -&gt; Opt-Cmd Cmd-Opt</code>, você pode ajustar<code>Cmd-Opt</code> para a posição da tecla da Apple<br>Mas toda vez que você joga StarCraft, você tem que mudá-lo novamente, e o processo acima também pode ser visto como muito complicado </p>
<p>Quanto ao <code>F1-F12</code>, não tem como, e a tela de bloqueio também é um problema </p>
<a id="more"></a>

<p>Huangtian não se esforçou e finalmente encontrou isto, e é grátis:<br><a href="https://pqrs.org/osx/karabiner/index.html.en">Karabiner</a> </p>
<p>Depois de definir o <code>Opt-Cmd</code>, mudei<code>F1-F12</code> para as teclas de função da Apple<br>A propósito, a penúltima chave inútil no canto inferior direito foi alterada para FN<br>Então eu mudei a posição de <code>Ctrl_R</code> e<code>FN</code><br>O <code>Pa / Br</code> no canto superior direito é alterado para<code>Power</code> </p>
<p>Então em <code>MenuBar -&gt; SettingList -&gt; +</code> um <code>Profile</code> sem modificação de tecla, por exemplo chamado<code>Game</code> </p>
<p>Se você jogar um jogo no futuro, clique no ícone na barra de status e alterne para <code>Jogo</code> com um clique. </p>
]]></content>
      <tags>
        <tag>Shopping</tag>
      </tags>
  </entry>
  <entry>
    <title>Por que nos tornaremos gradualmente conservadores</title>
    <url>/pt/why-are-we-tend-to-be-conservation/</url>
    <content><![CDATA[<p>A certa altura, sempre sinto que meus pais são velhos e teimosos, nojentos e sem vontade de tocar em coisas novas, porque são jovens e ignorantes, até ria deles </p>
<p>Hoje, quando trabalhei para o IE8 a manhã toda, finalmente mudei do Win 8.1 para o Win7 (por que, quero dizer duas palavras: banco online) e fiquei chocado quando pensei que nunca mais usaria o novo sistema como último recurso. </p>
<a id="more"></a>

<p>Recentemente, a Microsoft foi forçada por vários navegadores a começar a escovar o número da versão<br>O serviço de apoio ao cliente do CITIC Bank disse que o IE8 é melhor para USB USB. Vi que o Win8.1 vem com o IE, e atingiu 11 … </p>
<p>Mas o IE e o sistema estão amarrados, e no desespero, só posso mudar o sistema. Porque está instalado na máquina virtual, todos os tipos de lançamentos, embora o final seja Happy Ending, mas a hora da manhã não pode voltar </p>
<p>Lembre-se de que quando a versão Yosemite 10.10 Dev foi lançada, como desenvolvedor, eu não tinha uma mão barata, então apenas atualizei até que a versão oficial fosse lançada </p>
<p>A razão é que, quando eu estava na universidade, a versão de visualização do Win7 acabou de sair e eu mal podia esperar para atualizá-la. Acontece que a conexão de banda larga desaparecia toda vez que eu reiniciei </p>
<p>Eu também tentei [teclado Dvorak](<a href="http://zh.wikipedia.org/zh/%E5%BE%B7%E6%B2%83%E5%A4%8F%E5%85%8B%E9%8D%">http://zh.wikipedia.org/zh/%E5%BE%B7%E6%B2%83%E5%A4%8F%E5%85%8B%E9%8D%</a> B5% E7% 9B% A4) Depois de um mês, não é um problema estar familiarizado com a posição-chave do Warcraft<br>E eu sinto que a velocidade realmente melhorou.Embora possa haver alguns fatores psicológicos, eu obviamente sinto que as teclas na linha do meio são pressionadas mais. </p>
<p>mas! Quando uso o computador de outra pessoa, torno-me completamente um idiota aos olhos dos outros! Sempre que preciso dizer “Eu uso o teclado Dvorak” com palavras sinceras<br>O mais mortal é que depois de usar o Ubuntu, o inglês está bem, o sistema está lá e o chinês é trágico novamente.<br>Juntamente com a popularidade do Android, é basicamente impossível ter um layout Dvorak em teclados móveis. </p>
<p>Então, eu só posso me comprometer </p>
<p>Por exemplo, no trabalho, use o Ubuntu 10.10 para compilar a ROM do Android. Embora o 11 seja mais bonito, até o 10.10 oficialmente desistiu do suporte, mas se você for um pouco barato, não poderá compilá-lo de jeito nenhum. </p>
<p>Existem inúmeros exemplos de molho </p>
<p>Acho que já comecei a ter medo das coisas antes de estar estabelecido, então porque as pessoas mais velhas sofreram muito e perderam mais fossas, então gradualmente eles não querem mais tocar em coisas novas? ? </p>
<p>Referência [Experiência de Desamparo Aprendido](<a href="http://zh.wikipedia.org/wiki/%E7%BF%92%E5%BE%97%E6%80%A7%E5%A4%B1%E5%8A">http://zh.wikipedia.org/wiki/%E7%BF%92%E5%BE%97%E6%80%A7%E5%A4%B1%E5%8A</a> % A9), esta é novamente a natureza do animal, parece que não existe uma boa maneira </p>
<p>Mas essa pessoa se tornará gradualmente entediante, como uma piscina de água estagnada fedendo lentamente </p>
<p>Eu não quero ser essa pessoa </p>
<p>Olhe para algumas pessoas mais velhas e interessantes, converse com elas, não há pressão, você pode explicar melhor suas ideias </p>
<p>Então, como eles acompanham os tempos e permanecem curiosos? </p>
]]></content>
      <tags>
        <tag>Psychology</tag>
      </tags>
  </entry>
  <entry>
    <title>Uma linguagem de programação indigesta é uma linguagem ruim</title>
    <url>/pt/An-indigestible-programming-language-is-a-bad-language/</url>
    <content><![CDATA[<p>Quando eu era Gap Year, eu vi este livro. Estava escrevendo perguntas no <a href="http://www.codecademy.com/">codecademy</a>. Eu só vi o capítulo Ruby. Naquela época, eu senti que sabia que <code>Go</code> já era muito Geek. </p>
<p>Um ano depois, quando a empresa em que trabalho atualmente estava reestruturando o back-end, pensei em <code>Scala</code>. Um dos meus amigos viu o alto salário do jogo, então ele foi resolutamente ver<code>Erlang</code>. Ouvi falar de um evento da <code>Thoughtworks</code>. Clojure` </p>
<p>Quando li este livro novamente, descobri que <code>Ruby, Io, Prolog, Scala, Erlang, Clojure, Haskell</code> </p>
<p>Estive sentado no poço e olhando para o céu, li este livro novamente e descobri que realmente não preciso ler este livro </p>
<p>Portanto, se você está curioso e satisfaz sua curiosidade, dê uma olhada. Se quiser estudar seriamente, ignore. </p>
<a id="more"></a>

<hr>
<p>Olhando para a linguagem de programação, existem tantas que você não pode escapar das seguintes categorias: </p>
<ol>
<li>modelo </li>
</ol>
<ul>
<li>Funcional </li>
<li>OO </li>
<li>protótipo </li>
</ul>
<ol start="2">
<li>Algoritmo de estrutura de dados </li>
<li>estrutura de dados <ul>
<li>Tipos de </li>
<li>Lista ligada </li>
<li>Tabela de hash </li>
</ul>
</li>
<li>processo <ul>
<li>julgamento </li>
<li>ciclo </li>
</ul>
</li>
<li>Concorrente </li>
</ol>
<p>Em relação à simultaneidade, porque o processo não está de acordo com o pensamento humano, parece não haver uma boa solução no momento<br>Eu acho que mesmo se for resolvido no futuro, deve ser escrito e encapsulado por algumas pessoas talentosas, para que pessoas com QI medíocre possam resolvê-lo tão simples quanto if outra vez </p>
<p>Pessoalmente, a popularidade de um idioma é inseparável dos seguintes pontos: </p>
<ol>
<li>Promoção Comercial (Java | OC) </li>
<li>Seguro e estável </li>
<li>É fácil para os humanos lerem </li>
</ol>
<p>Não há necessidade de dizer os dois primeiros pontos, se você falar muito, vai rasgar </p>
<p>É mencionado nas sete línguas de sete semanas:<br>De muitas maneiras, Clojure é o sábio mestre de kung fu, o oráculo na colina ou o enigmático treinador Jedi. </p>
<p>Os benefícios do Lisp são conhecidos por “The Hacker and the Painter”, e Emace é conhecido como “o editor de Deus” </p>
<p>No entanto, é tão bom e tão incrível, mas não é popular, é uma questão que vale a pena ponderar </p>
<p>Do ponto de vista do açúcar sintático, ainda me lembro que usei <code>Swift</code> uma vez, um programador de geração anterior (C / C ++ / Java) (não depreciativo), apenas vi o valor de retorno alterado para -&gt;, o tipo de variável era Exclamou por trás<br>Quanto a mim, aceito completamente <code>Go Swift</code> e outros açúcares gramaticais, mas também acho que as expressões prefixadas de<code>Lisp</code> são todas desconfortáveis. A simplicidade é boa, e fico tonto quando é longa, e os colchetes são muito heréticos.<br>Pode-se ver como é difícil para os programadores aceitar a nova sintaxe depois de se acostumar com um sistema </p>
<p>“O código é escrito para que as pessoas vejam” </p>
<p>Portanto, acho que a linguagem que é a leitura anti-humana irá desaparecer, pelo menos não se tornará popular entre os humanos. </p>
<p>Então Mazi escolheu outra abordagem, focando em como deixar os programadores felizes em escrever código </p>
<p>Portanto, não há melhor linguagem, apenas a linguagem mais adequada </p>
<p>Claro, nada do mencionado acima se aplica a uma situação em que os computadores evoluíram para serem capazes de escrever código </p>
<p>Porque isso rompeu com o paradigma humano </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Refatorar não é uma bala de prata</title>
    <url>/pt/Refactoring-is-not-a-silver-bullet/</url>
    <content><![CDATA[<p>Quando o livro foi escrito, a orientação a objetos ainda era um nicho, mas agora a programação funcional se tornou popular </p>
<p>Hoje, a maioria das idéias e métodos de refatoração são levemente ouvidos por programadores que estão um pouco interessados. Se você é um programador Java, é difícil saber<br>Até agora, a reconstrução tem sido semelhante a uma parte da codificação </p>
<p>Os capítulos 1, 2 e 3 deste livro já explicaram o que é refatoração e quando, portanto, você deve lê-lo com atenção.<br>4 5 6 7 8 9 10 11 são métodos específicos, aqueles que estão familiarizados com Java podem dar uma olhada<br>Basta pular os capítulos seguintes </p>
<a id="more"></a>

<hr>
<p>Uma vez escovei <a href="http://book.douban.com/subject/1477390/">“Code Daquan”</a> na escola, então, depois de ler este livro, ** relativo ** não é tão importante </p>
<p>Por exemplo, embora meu iOS seja fraco, mas vendo o projeto da empresa agora, estou bêbado com centenas de linhas de funções, muito código repetitivo e vários números mágicos.<br>Claro, isso não quer dizer que o projeto anterior não fosse bom. Afinal, todo mundo foi forçado a se tornar estúpido por <em>deadline</em> </p>
<p>Em geral, este livro deve ser ** preterido **, afinal a capa está impressa: </p>
<blockquote>
<p>Cheats que os programadores comuns devem praticar para avançar para os mestres de programação </p>
</blockquote>
<p>Porque se você não olhar para ele, você pode não estar ciente dos poços pelos quais as pessoas passaram. </p>
<p>Como meu entendimento de variáveis ​​temporárias está incorreto<br>Também existe a escrita anterior de funções ** muito aleatórias **, como parâmetros sem <code>let</code>, e sem adicionar<code>private</code> para aqueles que não são expostos </p>
<p>Os mais instrutivos são: </p>
<ul>
<li>Elimine variáveis ​​temporárias </li>
<li>Polimorfismo substitui Switch </li>
<li>Objeto Nulo </li>
</ul>
<p>No momento, o tempo para fazer iOS ainda é curto. Eu pertenço a programadores juniores. Há tantas coisas que não entendo. Cada vez que faço funções por tentativa e erro, ignoro todas essas coisas quando escrevo.<br>Embora muitas vezes eu pense em refatorar imediatamente após a função estar OK, as pessoas são preguiçosas. Elas geralmente veem que tudo ficará bem se puderem executar e, então, colocam a esperança de organizar o código na refatoração </p>
<p>A situação ideal é:<br>Controle de versão + revisão + emparelhamento + refatoração (a empresa atual é tão boa, ela foi implementada principalmente) </p>
<p>Mas isso me lembra um artigo clássico sobre engenharia de software publicado por Fred Brooks em 1987 - [“No Silver Bullet”](<a href="http://zh.wikipedia.org/wiki/%E6%B2%">http://zh.wikipedia.org/wiki/%E6%B2%</a> A1% E6% 9C% 89% E9% 93% B6% E5% BC% B9) </p>
<p>Refatorar certamente não é uma bala de prata </p>
<p>Só posso reescrever o menino </p>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>10 anos de experiência de trabalho para te salvar</title>
    <url>/pt/Ten-years-of-work-experience/</url>
    <content><![CDATA[<p>Preço especial da Amazon, você pode inserir quando a pontuação de Douban não for baixa </p>
<p>Não pense que o primeiro critério é:<br>** Nunca trabalhe pessoalmente em um computador ** </p>
<p>Olhando para o segundo critério é realmente:<br>** Considere o conhecimento profissional como um obstáculo ** </p>
<p>Como um criador de código, só posso haha </p>
<a id="more"></a>

<p>Felizmente terceiro e quarto: </p>
<ul>
<li>** Aperte no centro de poder ** </li>
<li>** Nunca confie no RH ** </li>
</ul>
<p>Finalmente faz sentido </p>
<p>O que você deu a seguir </p>
<ul>
<li>** Expulse pessoas inúteis de sua rede a tempo ** </li>
<li><strong>contra as regras</strong> </li>
<li>** Capture os figurões ** </li>
<li>** Veja o vento para fazer o leme ** </li>
<li>** sem misericórdia ** </li>
<li>** Aproveite o crédito dos subordinados ** </li>
<li>… </li>
</ul>
<p>Algo assim, o grande líder negro Li Zongwu tem o estilo de “coração negro como carvão e rosto como uma muralha de cidade” </p>
<p>Eu só me ajoelho </p>
<p>O final do livro é sobre como pesar família e carreira, justamente quando eu pensei que velhos fritos como Wiesel fariam pés de porco desistirem do casamento<br>Eu não queria mudar o assunto da conversa, e friamente joguei fora:<br>*<em>É isso que voce quer? *</em> </p>
<p>Em suma, todo o livro tem apenas uma impressão: </p>
<p>O que você disse faz sentido, eu estava sem palavras </p>
<p>233333 </p>
]]></content>
      <tags>
        <tag>Career</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>写给码农看的设计书</title>
    <url>/pt/The-Non-Designer-s-Design-Book/</url>
    <content><![CDATA[<p>这本书我看着好有启发<br>结果前几天晚上我们 CTO 拿起来翻了翻，说：画的那么丑，还好意思说是设计</p>
<p>囧囧</p>
<a id="more"></a>

<p>不过这到让我想起来大学时看的 <a href="http://book.douban.com/subject/3765227/">写给大家看的 C++书</a>，当时就感觉一般般，但豆瓣却 8+</p>
<p>所以说在正确的时间碰到正确的书真的蛮重要的</p>
<p>当时我从 <code>C</code> 跳到 <code>C++</code> 已经有一段时间了，<code>MFC</code> 也在用，所以大概算不上 <em>大家</em> 了，没什么启发也是正常的</p>
<p>关于这本书，个人感觉其目的倒不是把你调教成高手，而是针对<strong>从来没留意过设计</strong>或者<strong>想入门又不知如何入手的童鞋</strong></p>
<p>所以里面的用例都是 <strong>没有设计</strong> 和 加了点<strong>基本的设计元素</strong> 的对比，自然不入高手的眼了</p>
<ol>
<li>四大原则：</li>
</ol>
<ul>
<li>亲密性</li>
<li>对齐</li>
<li>重复</li>
<li>对比</li>
</ul>
<ol start="2">
<li>色彩</li>
</ol>
<ul>
<li>互补</li>
<li>三色组</li>
<li>分裂互补三色组</li>
<li>类似色</li>
<li>暗色和亮色</li>
</ul>
<ol start="3">
<li>字体</li>
</ol>
<ul>
<li>Oldstyle</li>
<li>Modern</li>
<li>Slab serif</li>
<li>Sans serif</li>
<li>Script</li>
</ul>
<p>这些基本点，没做过设计的人，平时可能留意到，但没自成体系</p>
<p>人类大脑就是一旦知道某样东西，就没法回到或模拟不知道时的状态，此为<strong>知识的诅咒</strong>，这也是开篇所述的 “约书亚树”</p>
<p>所以布吉岛设计的童鞋赶紧开卷啊</p>
]]></content>
      <tags>
        <tag>Design</tag>
      </tags>
  </entry>
  <entry>
    <title>Nunca pensei</title>
    <url>/pt/Never-Expected/</url>
    <content><![CDATA[<h2 id="Nao-recuperar-significa-nao-recuperar"><a href="#Nao-recuperar-significa-nao-recuperar" class="headerlink" title="Não recuperar significa não recuperar"></a>Não recuperar significa não recuperar</h2><a id="more"></a>

<h4 id="Erros-de-pensamento-comuns"><a href="#Erros-de-pensamento-comuns" class="headerlink" title="Erros de pensamento comuns"></a>Erros de pensamento comuns</h4><p>Isso é basicamente mencionado em livros de psicologia </p>
<h4 id="Como-contra-atacar"><a href="#Como-contra-atacar" class="headerlink" title="Como contra-atacar"></a>Como contra-atacar</h4><p>Alterar as regras desagradáveis </p>
<h4 id="Forca-de-vontade"><a href="#Forca-de-vontade" class="headerlink" title="Força de vontade"></a>Força de vontade</h4><ul>
<li>Músculos treináveis </li>
<li>beleza </li>
<li>Mantra </li>
</ul>
<h4 id="1W-hora"><a href="#1W-hora" class="headerlink" title="1W hora"></a>1W hora</h4><p>Assim que Tiger Woods é perturbado, ele imediatamente interrompe a ação, o que é, sem dúvida, chocante aos olhos do mestre. </p>
<p>O treinamento deliberado é sem dúvida chato. O que pensei antes é que você pode ** jogar o ensino médio ** em um estágio relativamente superficial, a saber: entretenimento </p>
<p>Felizmente, o seguinte dizia: ** Interesse ** pode compensar esse enfadonho </p>
<p>E os genes têm: </p>
<blockquote>
<p>Experiência na produção da teoria do drive </p>
</blockquote>
<p>Eu li uma pequena parte de “The Selfish Gene”, mas ainda há uma teoria </p>
<p>Há um parágrafo no livro que explica a confusão que tenho vindo a fazer, porque descobri que por mais que tentasse, havia uma grande lacuna entre aqueles que começaram muito jovens, ou seja, eu tinha perdido na linha de partida: </p>
<blockquote>
<p>Aos 18 anos, o segundo grupo praticava mais de 2.000 horas a menos que o primeiro - agora eles estão trabalhando duro, mas é tarde demais. Isso é verdadeiro para a música e também para os esportes (programação). Falha em acompanhar significa falha em acompanhar. </p>
</blockquote>
<!--more-->

<h4 id="Ciencia"><a href="#Ciencia" class="headerlink" title="Ciência"></a>Ciência</h4><ul>
<li>Imaginação limitada </li>
<li>Interpretação + previsão </li>
</ul>
<h4 id="Intensidade-de-pensamento-tempo-de-preparacao-tempo-de-leitura"><a href="#Intensidade-de-pensamento-tempo-de-preparacao-tempo-de-leitura" class="headerlink" title="Intensidade de pensamento = tempo de preparação / tempo de leitura"></a>Intensidade de pensamento = tempo de preparação / tempo de leitura</h4><h4 id="lendo"><a href="#lendo" class="headerlink" title="lendo"></a>lendo</h4><ul>
<li>jogar skim ler </li>
<li>estreito | enquadramento amplo </li>
<li>notas </li>
</ul>
<p>Na verdade, depois de ler “Como Ler um Livro”, planejei ler o livro duas vezes, mas ele não foi implementado, e imaginei que posso me lembrar desse sentimento (na maioria das vezes ler é não lembrar de conhecimento)<br>Este livro decidiu iniciar a implementação e, com certeza, muitas omissões foram encontradas na segunda vez </p>
<h4 id="A-verdadeira-cor-do-vencedor"><a href="#A-verdadeira-cor-do-vencedor" class="headerlink" title="A verdadeira cor do vencedor"></a><a href="http://www.geekonomics10000.com/829">A verdadeira cor do vencedor</a></h4><ul>
<li>Comprimento de competição-testosterona-dedo anular </li>
<li>Warriors - Worriers </li>
<li>Stress-COMT (Enzima Rápida | Lenta) </li>
<li>finito - jogo infinito </li>
<li>A evolução do excesso de confiança </li>
</ul>
<p>Eu vi isso no blog antes<br>Obviamente, eu sou Worriors, que é mais adequado para jogos baseados em turnos ilimitados, não para bursts<br>Normalmente, você deve tentar pressionar e bater tanto quanto possível e aliviar a pressão no momento crítico </p>
<h4 id="de-outros"><a href="#de-outros" class="headerlink" title="de outros"></a>de outros</h4><p>Feedback em tempo hábil de força física<br>Tempo livre de força cerebral </p>
<p>Não faça parceria com conhecidos? (A reunião do Youtube para o Yahoo é um contra-exemplo, mas o Sequoia é de fato um elo fraco) </p>
<p>A reencarnação está em um estado que a ciência não consegue explicar </p>
<p>Imaginação coletiva </p>
]]></content>
      <tags>
        <tag>Tech</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>O que eu falo quando falo sobre corrida</title>
    <url>/pt/What-I-talk-about-when-I-talk-about-running/</url>
    <content><![CDATA[<p>A velha respiração permeia o livro do começo ao fim<br>Em relação ao passar do tempo e ao declínio da capacidade física, não há alternativa </p>
<p>É diferente de resistir precipitadamente e insistir em desobedecer ao antigo. Sim, o autor vai aceitando gradativamente esse fato e o usa como regra para lidar com </p>
<p>Muitas questões que tenho curiosidade, o autor também refletiu e se aprofundou </p>
<p>Isso é mais ou menos: </p>
<blockquote>
<p>Eu sou o tipo de pessoa que gosta de estar sozinho. </p>
</blockquote>
<a id="more"></a>

<hr>
<blockquote>
<p>Paro todos os dias exatamente no ponto em que sinto que posso escrever mais. Faça isso e o trabalho do dia seguinte será surpreendentemente tranquilo. Acho que Ernest Hemingway fez algo assim. Para continuar, é preciso manter o ritmo. Isso é o importante para projetos de longo prazo. </p>
</blockquote>
<blockquote>
<p>Eu sou o tipo de pessoa que não acha doloroso ficar sozinho. Acho que passar uma ou duas horas todos os dias correndo sozinho, sem falar com ninguém, assim como quatro ou cinco horas sozinho na minha mesa, não é difícil nem entediante. </p>
</blockquote>
<blockquote>
<p>Eu dirigia um bar, então aprendi a importância de estar com outras pessoas e o ponto óbvio de que não podemos sobreviver por conta própria. </p>
</blockquote>
<blockquote>
<p>As nuvens são meros hóspedes no céu que passam e desaparecem, deixando para trás o céu. </p>
</blockquote>
<blockquote>
<p>é precisamente porque as pessoas são diferentes das outras que elas são capazes de criar suas próprias personalidades independentes. </p>
</blockquote>
<blockquote>
<p>Eu tive que dar tudo o que tinha. Se eu falhasse, poderia aceitar isso. Mas eu sabia que se fizesse as coisas com indiferença e não dessem certo, sempre teria arrependimentos. </p>
</blockquote>
<blockquote>
<p>Só comecei a gostar de estudar depois que concluí o sistema educacional e me tornei um membro tão chamado da sociedade. </p>
</blockquote>
<blockquote>
<p>Tínhamos fechado o clube, então também decidimos que a partir de agora nos encontraríamos apenas com as pessoas que queríamos ver e, tanto quanto possível, sobreviveríamos por não ver aquelas que não víamos. Sentimos que, pelo menos por algum tempo, poderíamos nos permitir essa modesta indulgência. </p>
</blockquote>
<blockquote>
<p>Foi minha verdadeira escolaridade. Mas você não pode manter esse tipo de vida para sempre. Assim como na escola, você entra, aprende algo e então é hora de sair. </p>
</blockquote>
<blockquote>
<p>Fico impressionado como, exceto quando você é jovem, você realmente precisa priorizar na vida, descobrindo em que ordem você deve dividir seu tempo e energia. Se você não tiver esse tipo de sistema definido por uma certa idade, perderá o foco e sua vida ficará fora de equilíbrio </p>
</blockquote>
<blockquote>
<p>Em outras palavras, você não pode agradar a todos </p>
</blockquote>
<blockquote>
<p>A vida não é justa, é como costumava me surpreender. Algumas pessoas podem trabalhar duro e nunca conseguir o que desejam, enquanto outras podem conseguir sem nenhum esforço. </p>
</blockquote>
<blockquote>
<p>Me serve. Ou pelo menos porque não acho isso tão doloroso. </p>
</blockquote>
<blockquote>
<p>A coisa mais importante que aprendemos na escola é o fato de que as coisas mais importantes não podem ser aprendidas na escola </p>
</blockquote>
<blockquote>
<p>enquanto estão sobrevivendo, eles podem realmente descobrir talentos reais e ocultos dentro deles </p>
</blockquote>
<blockquote>
<p>Sempre fiz tudo o que tinha vontade de fazer na vida. As pessoas podem tentar me impedir e me convencer de que estou errado, mas eu não vou mudar. </p>
</blockquote>
<blockquote>
<p>Minha própria natureza individual, teimosa, não cooperativa, muitas vezes autocentrada que ainda duvida de si mesma - que, quando ocorrem problemas, tenta encontrar algo engraçado, ou quase engraçado, sobre a situação. </p>
</blockquote>
<blockquote>
<p>Isso leva tempo, é claro, mas às vezes demorar é na verdade um atalho. </p>
</blockquote>
]]></content>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS CI (Jenkins + pH AB Rica Tor + folga)</title>
    <url>/pt/iOS-CI-Jenkins-Phabricator-Slack/</url>
    <content><![CDATA[<p><code>shell</code> 里<code>brew install jenkins</code><br>Então, <code>jenkins</code> começa, digite 127.0.0.1:8080 no dispositivo do lombo para pular o buraco </p>
<p>Instale os plug-ins relacionados ao <code>xcode</code> no Jenkins<br>As etapas estão disponíveis em outros blogs, integração contínua do Google <em>ios ci</em>, como: </p>
<ul>
<li><a href="http://www.itiger.me/?p=30">Jenkins + Github + Testflight constroem um ambiente de integração contínua no Mac</a>, </li>
<li><a href="http://www.jianshu.com/p/63073573e2ee">Travis CI para integração contínua do projeto iOS</a> </li>
</ul>
<a id="more"></a>

<p>A versão pode ser mais antiga, mas você pode compensar </p>
<p>O Phabricator que usamos aqui, por ser iOS, é colocado no Mac local em vez do servidor, então a chave privada é boa o suficiente e a interação de retorno de chamada entre Jenkins e Phabricator não importa. </p>
<p>Além disso, existem vários problemas: </p>
<h3 id="jenkins-plugins-slack-ActiveNotifier-hudson-model-listeners-npe"><a href="#jenkins-plugins-slack-ActiveNotifier-hudson-model-listeners-npe" class="headerlink" title="jenkins.plugins.slack.ActiveNotifier hudson.model.listeners npe"></a>jenkins.plugins.slack.ActiveNotifier hudson.model.listeners npe</h3><p>teste de mensagem push é bom<br>Depois de duas horas, não sei o que está acontecendo. Dormi no dia seguinte e tornei-me normal … </p>
<p>Parece saber o motivo, <em>Canal de projeto</em> não pode estar vazio </p>
<h3 id="ResourceRules-plist"><a href="#ResourceRules-plist" class="headerlink" title="ResourceRules.plist"></a>ResourceRules.plist</h3><p>No primeiro dia, foi avisado que ResourceRules.plist estava errado, então foi adicionado ao projeto e à configuração do Jenkins<br><code>Argumentos xcodebuild personalizados $ (SDKROOT) / ResourceRules.plist</code> </p>
<p>O resultado foi que ResourceRules.plist não foi encontrado no dia seguinte. Não havia problema em excluí-lo do Jenkins. É incrível. </p>
<h3 id="Desenvolvedor-iPhone-nenhuma-identidade-encontrada"><a href="#Desenvolvedor-iPhone-nenhuma-identidade-encontrada" class="headerlink" title="Desenvolvedor iPhone: nenhuma identidade encontrada"></a>Desenvolvedor iPhone: nenhuma identidade encontrada</h3><p><code>swift-stdlib-tool falhou com o código de saída 1</code> </p>
<p>Acesse developer.apple.com para baixar vários certificados, mas nenhum deles funciona<br>Realmente não tem como. Eu abri o projeto diretamente em <code>~ / .jenkins / jobs / ****</code> com xcode. Eu queria fazer uma comparação. Descobri que havia um certificado extra no chaveiro, e então deu certo … </p>
<hr>
<p><del>~ Além disso, a conta da empresa ainda não foi comprada e o Jenkins não abriu o sistema de contas, então continue esperando ~</del> </p>
<h3 id="DUNS-codigo-Dun-amp-Bradstreet"><a href="#DUNS-codigo-Dun-amp-Bradstreet" class="headerlink" title="DUNS (código Dun &amp; Bradstreet)"></a>DUNS (código Dun &amp; Bradstreet)</h3><p>A conta da empresa ficou travada aqui antes, e o e-mail da Apple não responde há muito tempo, então certifique-se de ligar para o atendimento ao cliente da Apple, estará tudo bem em um ou dois dias </p>
<h3 id="identificador-de-pacote"><a href="#identificador-de-pacote" class="headerlink" title="identificador de pacote"></a>identificador de pacote</h3><p>Anteriormente, a conta corporativa .alpha .beta foi ativada e o mesmo certificado não pode ser criado aqui para a conta corporativa, então tive que * excluir a conta original * ou <em>change ID</em> </p>
<p>Como resultado, ao excluir, verifica-se que o aplicativo precisa estar em vários estados, o documento oficial: <a href="https://developer.apple.com/library/mac/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/TransferringAndDeletingApps.html">TransferringAndDeletingApps</a> </p>
<p>Anteriormente, o beta era usado como teste de voo e não era feito upload da AppStore. Envie um e-mail para a Apple, responda: </p>
<blockquote>
<p>Atualmente, seu aplicativo não tem pelo menos uma versão aprovada. </p>
</blockquote>
<p>…<br>Tive que mudar o ID </p>
<h3 id="distribuicao-aerea"><a href="#distribuicao-aerea" class="headerlink" title="distribuição aérea"></a>distribuição aérea</h3><p>Tudo está pronto, exporte-o rapidamente e descobre-se que depois do Xcode 6, só existe um .ipa para guiar o ipa sem um .plist correspondente, você tem que escrever você mesmo … (felizmente, o Jenkins também pode gerá-lo automaticamente). (<a href="https://gist.github.com/leihao0/f292d65163b26a2169d4">https://gist.github.com/leihao0/f292d65163b26a2169d4</a>) (Altere o correspondente em $ $) </p>
<p>Então <code>python -m SimpleHTTPServer</code>, abra o Safari no iPhone, o resultado … ainda não está funcionando … </p>
<p>Mais tarde, foi descoberto que o servidor deve ser https … </p>
<h3 id="numero-de-construcao"><a href="#numero-de-construcao" class="headerlink" title="número de construção"></a>número de construção</h3><p><code>targets -&gt; Build Phases -&gt; + New Run Script Phase</code> </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">buildNumber=$(/usr/libexec/PlistBuddy -c <span class="string">&quot;Print CFBundleVersion&quot;</span> <span class="string">&quot;<span class="variable">$&#123;PROJECT_DIR&#125;</span>/<span class="variable">$&#123;INFOPLIST_FILE&#125;</span>&quot;</span>)</span><br><span class="line">buildNumber=$((<span class="variable">$buildNumber</span> + <span class="number">1</span>))</span><br><span class="line">/usr/libexec/PlistBuddy -c <span class="string">&quot;Set :CFBundleVersion <span class="variable">$buildNumber</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;PROJECT_DIR&#125;</span>/<span class="variable">$&#123;INFOPLIST_FILE&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>Quando o esquema for lançado, a construção será automaticamente +1 </p>
<p>PS:<br>Na verdade, isso pode ser escrito no shell da etapa de compilação do Jenkins, enviar para origin / master e fazer upload de \ *. Ipa para o servidor </p>
<h3 id="Servidor-OS-X"><a href="#Servidor-OS-X" class="headerlink" title="Servidor OS X"></a>Servidor OS X</h3><p>Pit, tem tempo para organizar um </p>
<h3 id="DistributionProvisioningProfiles"><a href="#DistributionProvisioningProfiles" class="headerlink" title="DistributionProvisioningProfiles"></a>DistributionProvisioningProfiles</h3><p>Baixe diretamente o arquivo <code>*. Mobileprovision</code> baixado e escreva o caminho e descubra que não é suficiente, então eu mesmo tenho que empacotar manualmente </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">xcodebuild -exportArchive -exportFormat IPA -archivePath <span class="string">&quot;<span class="variable">$Yourarchive</span>&quot;</span> \</span><br><span class="line"> -exportPath imeican-Beta-xcodebuild.ipa \</span><br><span class="line"> -exportProvisioningProfile <span class="variable">$YourDistributionProvisioningProfiles</span></span><br></pre></td></tr></table></figure>

<p>Resumindo:<br>Todo o caminho para o poço </p>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Acupuntura Indolor</title>
    <url>/pt/Painless-Acupuncture/</url>
    <content><![CDATA[<p>Certa vez, falei sobre medicina chinesa no grupo mágico 粢 饭 e descobri que 80% dos meus colegas achavam que a medicina chinesa era enganosa.O pequeno mago ficou chocado. </p>
<p>Mais tarde, conversei sobre isso com um mágico do Chapeuzinho Vermelho, que pensava que a cura era como marchar e lutar. </p>
<p>Força de combate de ambos os lados: I 5 inimigo 8 </p>
<a id="more"></a>

<p>A medicina ocidental mata diretamente o vírus, reduzindo o poder de combate do inimigo para 3<br>E a medicina chinesa é como adicionar um halo para aumentar nosso poder de combate para 10 </p>
<p>No que diz respeito ao resultado, existem 2 após a luta, então é melhor não acreditar em um determinado plano. </p>
<p>Quanto à descrença, por um lado, pode haver muitos mentirosos. Por exemplo, depois de ser enganado algumas vezes, você não vai mais acreditar no amor<br>Por outro lado, a medicina tem suas limitações: hoje, quando a medicina ocidental é relativamente completa, o câncer ainda pode ser mal diagnosticado, sem falar que ainda não existem tratamentos eficazes para algumas doenças.<br>Também existe a possibilidade de que o público não tenha entendido bem a teoria da medicina chinesa, assim como uma criança que freqüentemente aprende magia estranhamente não consegue nem consertar instrumentos mágicos. </p>
<p>No terceiro ano da Academia de Magia, o pequeno mago pegou uma doença grave e não queria ser uma bênção disfarçada, então ele compreendeu [A Teoria do Balanço Ecológico Humano](<a href="http://leihao0.github.io/2012/05/28/%E4%BA%">http://leihao0.github.io/2012/05/28/%E4%BA%</a> BA% E4% BD% 93% E7% 94% 9F% E6% 80% 81% E5% B9% B3% E8% A1% A1% E8% AE% BA /), não tive nenhuma doença após Dache<br>Xiao Chao, que geralmente fica resfriado, mata galinhas com uma faca de trenó e sacrifica diretamente “Suwen · Four Qi Tiao Shen Dalun” de <a href="http://book.douban.com/subject/3843957/">Huang Di Nei Jing</a> </p>
<blockquote>
<p>É por isso que o sábio não cura a doença e cura a doença, e o incurável cura a doença, mas a doença. Este também é o caso. Não é tarde demais se a doença do marido se tornou uma doença e então o remédio, o caos se tornou, e então ele pode ser curado. </p>
</blockquote>
<p>Quando a doença está prestes a começar e há um aviso, calcule para eliminá-la com antecedência </p>
<p>Mas eu também disse antes que o pequeno mago tem problemas com sua cintura e coluna cervical devido a problemas ocupacionais. Por exemplo, o teste KW no <a href="http://book.douban.com/subject/25981248/">Magic Health Guide</a> não pode passar , O swing na ioga não consegue </p>
<p>Mas o pequeno mago é preguiçoso, incapaz de continuar se exercitando, muito menos correndo como Chun Shang Chun Shu por décadas, então ele só pode esperar por acupuntura. </p>
<hr>
<p>Para ser mais preciso, a acupuntura e a moxabustão são divididas em acupuntura e moxabustão, mas as pessoas costumam pensar que a acupuntura e a moxabustão são agulhas, então vamos descrever assim </p>
<p>Uma vez, Descartes dividiu o método de pesquisar um problema em quatro etapas em <a href="http://book.douban.com/subject/1071023/">Talk about Method</a>, a primeira das quais é: </p>
<blockquote>
<p>Jamais aceitarei nenhuma verdade sobre a qual não esteja claro, o que significa que devemos tentar evitar imprudências e preconceitos, e só podemos ser muito claros e certos com base no meu próprio julgamento, sem nenhuma verdade duvidosa. Isso quer dizer que, enquanto você não tiver experimentado os problemas que experimentou pessoalmente, não importa quais conclusões oficiais você tenha, você pode duvidar. Esta é a famosa teoria da “dúvida de tudo”. Por exemplo, Aristóteles uma vez concluiu que as mulheres têm dois dentes a menos do que os homens. mas não é a verdade. </p>
</blockquote>
<p>Desde que bebi remédios, mas nada melhorou, o pequeno mago não acredita em fitoterápicos. </p>
<p>Mas os meridianos, para ser mais preciso, os pontos de acupuntura, são fáceis de sentir<br>Por exemplo, Hegu (Hukou), Jianjing, belisque sozinho e, em seguida, belisque outro lugar, você saberá que não é uma carne comum.<br>Os meridianos entram em conflito com os três chakras e os sete meridianos da ioga indiana, então é o pequeno mago que tem dúvidas </p>
<p>Muitas vezes antes da agulha, o pequeno mago havia simulado todo o processo:<br>Eu vi que a agulha de aço inoxidável de 2,5 polegadas penetrou na epiderme -&gt; derme -&gt; tecido subcutâneo sem esforço. Devido ao reconhecimento impreciso dos pontos de acupuntura, infelizmente ela tocou as artérias e veias. A mão dolorida do pequeno mago tremia e quebrou o lado Nervo motor autônomo, desativado para o resto da minha vida … </p>
<p>Mark Twain lamentou em seus últimos anos </p>
<blockquote>
<p>Passei a maior parte da minha vida me preocupando com coisas que nunca aconteceram, e nenhum comportamento é mais estúpido do que me preocupar do nada. </p>
</blockquote>
<p>O pequeno mago foi perfurado várias vezes por um pequeno parceiro da Universidade de Medicina Tradicional Chinesa. Depois de ser capaz de pular sem grandes incidentes, imaginei que os nervos motores não eram como as fibras ópticas como se imaginava. Havia apenas uma, e estava quebrada quando se quebrou. Existem muitas raízes, e o organismo tem a capacidade de se reparar </p>
<p>Mas o amiguinho mora longe e não pode vir com frequência. Ele guarda algumas agulhas de hospital o tempo todo, então o pequeno mago cuida de si mesmo. </p>
<p>Claro, o ato de cavar o canto do socialismo por pequenos parceiros deve ser estritamente proibido. Mas comparado a outro, comprei um banco de energia superdimensionado para não usar meus próprios eletrodomésticos, carreguei meus notebooks toda vez que voltei e avisei a atordoada polícia do pequeno mago, que não é nada. </p>
<hr>
<p>Mas ainda há um problema - o pequeno mago tem medo da dor<br>Este também é o motivo pelo qual ele não fez um exame físico todos os dias </p>
<p>Então o pequeno mago primeiro mudou o <a href="http://book.douban.com/subject/4665276/">Método de Operação True Qi</a>, em uma tentativa de resolver este problema de uma vez por todas, abrindo os dois canais de Ren e Du, e até mesmo estupidamente escreveu [ Log](<a href="http://leihao0.github.io/2014/01/08/%E7%9C%9F%E6%B0%94%E8%BF%90%E8%A1%8C%E6%B3%95-">http://leihao0.github.io/2014/01/08/%E7%9C%9F%E6%B0%94%E8%BF%90%E8%A1%8C%E6%B3%95-</a> % E6% 89% 93% E9% 80% 9A% E5% B0% 8F% E5% 91% A8% E5% A4% A9% E8% AE% B0% E5% BD% 95 /) Para registrar todo o processo, é uma pena Quando o Qi está preso na cauda, ​​você só pode desacelerar </p>
<p>Mas a coluna cervical não pode ser desacelerada. Em primeiro lugar, ela afetou o sono e, em segundo lugar, tenho medo de mim mesmo. </p>
<blockquote>
<p>Em segundo lugar, governe o Liufu e depois o Wuzang. Aqueles que governam os cinco tibetanos estão meio mortos e meio vivos. </p>
</blockquote>
<p>Era a noite de Ano Novo. O pequeno mago se agitava e virava na cama. Nesse momento de silêncio, ele se lembrou de Schopenhauer <a href="http://book.douban.com/subject/1004699/">o mundo como vontade e aparência</a> Algumas palavras em: </p>
<blockquote>
<p>Acontece que tudo o que existe é apenas a existência do sujeito. </p>
</blockquote>
<p>Quando recitava essas poucas frases, nunca entendeu o motivo, nesse momento lembrou-se de repente que as doenças do pescoço, dos ombros, da cintura e das pernas são diferentes das doenças dos órgãos, difíceis de curar, o tratamento irregular ou o treinamento de reabilitação só vão causar doenças. Dor repetida ou mesmo agravada, mas de acordo com a essência de “O Mundo da Vontade e Aparência”, parece que a doença só existe para “Eu”<br>Pensando nisso, o pequeno mago levantou-se rapidamente e folheou o livro, Guo Xian disse novamente: </p>
<blockquote>
<p>Cada vez que o corpo é submetido a um efeito externo, este efeito estimula imediata e diretamente a minha vontade … e o inverso também é verdadeiro.Toda excitação violenta da vontade, ou seja, o toque e a paixão, sacode o corpo e prejudica o funcionamento do corpo. corre </p>
</blockquote>
<p>Pensando nisso, o pequeno mago de repente percebeu que estava sentado de pernas cruzadas e ajustou sua respiração de acordo com o método mostrado em “Movimento do Qi Verdadeiro”<br>Então ele concentrou seus pensamentos em um feixe de luz, formando uma amostra de papel de agulhas, e lentamente mergulhou em Dazhui.Como esperado, os músculos ao redor gradualmente relaxaram.<br>Depois disso, o pequeno mago levou Fengchi, Fengfu (isso não é para tratar resfriados?) E Gao Liao (que está gravemente doente, é realmente um ponto de acupuntura)<br>Após o término da acupuntura, imagine que a agulha leve lentamente dissipe o calor ([Warm Needle Moxibustion](<a href="http://leihao0.github.io/2013/09/11/%E6%B8%A9%E9%92%88%E7%">http://leihao0.github.io/2013/09/11/%E6%B8%A9%E9%92%88%E7%</a> 81% B8 /)) </p>
<p>Lentamente, o pequeno mago caiu em um sonho com segurança </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Diálise de Inglês Legal</title>
    <url>/pt/How-to-Learn-English/</url>
    <content><![CDATA[<p>O pequeno mago queria ver como estava seu nível de idioma élfico<br>Embora antes de me formar na Magic Academy, eu tenha obtido a certificação CET6<br>Infelizmente, este certificado não pode corresponder ao nível verdadeiro </p>
<p>Antes, o pequeno mago tinha apenas um truque para lidar com palavras élficas - recitar NCE<br>Isso também ajudou o pequeno mago a passar com sucesso na certificação celestial </p>
<a id="more"></a>

<p>Mas ler o livro cem vezes não é uma regra universal.O jovem mestre não pode ler cada artigo centenas de vezes, mas parece que nunca pensou nisso.<br>Por exemplo, no ensino médio, no exame de admissão à faculdade sob o Yali, fui multado para concorrer à classe inteira várias vezes por não aprender </p>
<p>Existe a vontade de Deus no escuro. Cerca de um ano atrás, o pequeno mago obteve acidentalmente um livro da verdade- <a href="http://book.douban.com/subject/3748247/">Diálise do Dafa</a> </p>
<p>Fui muito enganado. No início, o pequeno mago pensou que fosse <a href="http://book.douban.com/subject/1008501/">Não</a> esse tipo de pseudo-assunto e um artigo escrito por <em>Leakhouse</em> [神 贴] ](<a href="http://book.douban.com/subject/11522125/">http://book.douban.com/subject/11522125/</a>), embora as dicas sejam apontadas, mas nenhum plano de treinamento correspondente é fornecido </p>
<p>A diálise do Dafa é tão boa quanto pode ser. Ela pode ser chamada de um modelo da série do poço aos deuses. Ela não apenas descreve em detalhes que cada nível deve praticar cavalos divinos, mas até mesmo passes possíveis também estão envolvidos. </p>
<p>Então o pequeno mago começou a praticar </p>
<hr>
<p>um ano depois… </p>
<p>Devo dizer que o progresso de cultivo do pequeno mago é realmente lento, e o Gap Year acaba de passar o elementar <a href="http://book.douban.com/subject/4201317/">Fonética Introdutória</a> Contando](<a href="http://book.douban.com/review/6300403/">http://book.douban.com/review/6300403/</a>)) </p>
<p>Depois do nível médio-ESL (velocidade lenta), o pequeno mago ouviu os 80 melhores com paciência e não pôde deixar de mergulhar na tecnologia. </p>
<p>Quanto ao Podcast APW de nível médio a alto, o pequeno mago casualmente assistia e ouvia. </p>
<p>Em seguida, limpe o próximo AAC de alto nível e pratique vigorosamente o SSS de mais alto nível </p>
<p>Claro, eles são destinados ** aleatoriamente ** … </p>
<hr>
<p>Na época da Academia de Magia, o pequeno mago soube que havia um teste chamado IELTS no oeste. A julgar pelos resultados, os elfos locais obteriam bons distintivos e o pequeno mago teve coragem de tentar. </p>
<p>Mas quando verifiquei as taxas fiquei chocado, pensei que 1% das Celestial Coins da CET poderiam participar, o que mostra o peso. </p>
<p>Então, o pequeno mago decidiu se preparar bem, gastar o dinheiro na lâmina, não fazer sacrifícios desnecessários e não dar experiência. </p>
<p>Não quero que a inflação seja mais forte do que os tigres. Essa taxa está aumentando ano a ano e tende a quebrar 2 </p>
<p>Há algum tempo, o pequeno mago viu que seu amigo havia se inscrito e acrescentou uma frase de “atraso fiscal”, cerrou os dentes e denunciou. </p>
<hr>
<p>O endereço de teste é ideal, ao lado do atual Magic Group </p>
<p>Quando o magozinho se inscreveu, o pequeno ábaco estava muito bom - depois do exame, você pode voltar na empresa para comer, o que é ótimo </p>
<p>continua </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Água limpa e céu azul</title>
    <url>/pt/Blue-Sky-and-Sea/</url>
    <content><![CDATA[<p>Dois pontos negros apareceram no horizonte distante. Depois de se expandir lentamente, havia duas pessoas, oh, dois magísteres.<br>Sua velocidade de vôo é extremamente rápida, e suportar tal velocidade mostra que o poder mágico dos dois é alto </p>
<a id="more"></a>

<p>Apenas ouça o mágico α dizendo β que se você acelerar assim, mesmo se você cumprir o prazo, restará pouca magia. Por que não suprimimos a magia e vamos para o Stargate?<br>β deu uma olhada em α, continuou a voar para a frente, por muito tempo, disse devagar, em caso de falha<br>α Não posso deixar de estremecer, não sei se é estimulado pela altitude muito fria </p>
<p>Eu peguei, depois que β disse, joguei uma garrafa de soylent para α, e então bebi silenciosamente para complementar sua magia </p>
<p>O chamado StarGate é uma ferramenta para teletransporte de longa distância. Embora os magos também possam passar e sem esforço, é impossível que os Stargates tenham sido ocupados por trouxas, e antes de entrar, o guarda usará uma ordem de tocha semelhante. Obsidiana testa se o passador está carregando uma arma letal<br>Embora 99% dos magos sejam gentis, as pedras mágicas que eles carregam farão o fogo sagrado gritar sem parar, e os magos que alcançam o nível dos magos ficam cobertos de magia por todo o corpo. Mesmo sem nenhum acessório, eles inspiram obsidiana<br>Se você não evacuar a tempo ou até mesmo fazer um movimento desesperado, as forças armadas estaduais aparecerão em alguns minutos, agarrarão você e fecharão a pequena casa negra e, desde então, o mundo desaparecerá. </p>
<p>Ao se aproximar da cidade, eles baixaram rapidamente para abaixo de 1.500 do nível do mar para evitar serem confundidos com OVNIs e abatidos pelo sistema de defesa antimísseis da capital imperial. </p>
<hr>
<p>A capital imperial é cercada por montanhas em três lados<br>As montanhas ocidentais são [Montanhas Taihang](<a href="https://www.baidu.com/s?wd=%E5%A4%AA%E8%A1%8C%E5%B1%B1%E8%84%89&amp;hl_tag=textlink&amp;tn=">https://www.baidu.com/s?wd=%E5%A4%AA%E8%A1%8C%E5%B1%B1%E8%84%89&amp;hl_tag=textlink&amp;tn=</a> SE_hldp01350_v6v6zkg6) remanescente do nordeste<br>As montanhas no norte e nordeste são [montanhas Yanshan](<a href="https://www.baidu.com/s?wd=%E7%87%95%E5%B1%B1%E5%B1%B1%E8%84%89&amp;hl_tag">https://www.baidu.com/s?wd=%E7%87%95%E5%B1%B1%E5%B1%B1%E8%84%89&amp;hl_tag</a> = textlink &amp; tn = SE_hldp01350_v6v6zkg6) do ramo ocidental.<br>O todo é uma topografia de semi-bacia </p>
<p>Vendo à distância no topo de cada montanha, a maioria dos mágicos já está no lugar<br>Perto do meio-dia, o enorme círculo mágico representado piscou fracamente </p>
<blockquote>
<p>Naquela época, o sol brilhava como um vidro milenar<br>—— Ming Ling Mengchu, “The First Moment to Make a Case Surprise” Volume 28 </p>
</blockquote>
<p>As montanhas mostram a aparência de um imperador </p>
<p>α β Voar para suas respectivas posições, pronto para ficar em espera </p>
<hr>
<p>É meio-dia, areia amarela está por todo o céu, rolando </p>
<p>Neste momento, na montanha mais alta, o Grande Magister da Liberação desenhou uma série de feitiços misteriosos no céu<br>Um pilar brilhante de luz de sete cores correu direto para o céu. Depois de receber o sinal, os mágicos em cada pico apontaram suas varinhas para o céu, condensando um feitiço com poder mágico:<br><a href="https://en.wikipedia.org/wiki/Asia-Pacific_Economic_Cooperation">Cooperação econômica da Ásia-Pacífico</a> </p>
<p>Por um tempo, uma enorme [HEPA] transparente como água (<a href="https://en.wikipedia.org/wiki/HEPA">https://en.wikipedia.org/wiki/HEPA</a>) ergueu-se lentamente nas montanhas ao redor da capital imperial.<br>No momento em que a força da natureza entra em contato com a invocação mágica, a superfície do lago chuvoso em <a href="https://en.wikipedia.org/wiki/Command-line_interface">Shell</a> apresenta ondas. </p>
<p>Até agora, antes que os magos fiquem sem poder mágico </p>
<p>Sob a cúpula, o céu está alto e as nuvens são claras, água clara e céu azul </p>
<hr>
<p>Claro, o nível do pequeno mago é muito baixo, a menos que você traga equipamento, caso contrário Stargate normalmente, contanto que você pague a taxa após o aumento do preço, você pode simplesmente passar.<br>Então, essas coisas acima não têm nada a ver com ele, e ele não sabe nada sobre isso. </p>
<p>Acontece que o pequeno mago sente que o céu está particularmente azul atualmente, e o ar está cheio de muito vapor d’água.<br>Olhando para o céu, o céu azul é como se lavar, deixando as pessoas intoxicadas </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Deus em cálculo</title>
    <url>/pt/Calculating-God/</url>
    <content><![CDATA[<ol>
<li>Nenhum arquivo de design </li>
<li>Confie na indefesa engenharia reversa da API. </li>
<li>Um sistema instável e com falhas frequentes. A última falha ocorreu há 65 milhões de anos. </li>
<li>Os códigos mortos estão por toda parte </li>
<li>O código-fonte do protótipo e os arquivos binários executáveis ​​sumiram, apenas algumas ilustrações não confiáveis. </li>
<li>A qualidade é ctrl c + ctrl v. </li>
<li>3 Amante sério com 3 peças de código </li>
<li>Linha Zumbi </li>
<li>Inventor do GA (Algoritmo Genético). </li>
<li>Ninguém viu um deus aposentado após o IPO </li>
</ol>
]]></content>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>Dicas para reescrever aplicativos iOS</title>
    <url>/pt/Little-tips-about-rewrite-an-iOS-app/</url>
    <content><![CDATA[<p>Terminei o ano sabático e fui para minha empresa atual no outono passado. </p>
<a id="more"></a>

<p>Como recém-chegado, não fiz muito no primeiro mês, há um engenheiro de software da AMAP com 10 anos de experiência. Sempre que tenho algo a perguntar a ele, ele explica em detalhes e pede pacientemente que me inspire. Mas, ao mesmo tempo, também encontrei milhares de linhas de código Copiar e Colar no projeto. Sim, usei <a href="http://cloc.sourceforge.net/">CLOC</a> para contar e descobri que há quase 20.000 linhas no total. </p>
<p>Visto que Objective-C é uma linguagem de programação excessivamente detalhada e complicada (o que significa que você tem que escrever dezenas de linhas de código para implementar a mesma função, e esta função pode ter apenas uma linha em Ruby), o cálculo para este projeto é razoável do. Mas copiar e colar sempre deve ser evitado. Para piorar as coisas, vejo variáveis ​​globais e números mágicos em todos os lugares. </p>
<p>Isso é estranho, não é? Se você é um programador com 10 anos de experiência, consegue lidar facilmente com ponteiros e tem um conhecimento profundo de sistemas de computador, por que não prestar atenção ao estilo do código? Afinal, precisamos nos preparar para adicionar novos membros e novos recursos à equipe a qualquer momento. </p>
<p>Ele disse que a maior parte do código foi escrita por ele mesmo e que as correções de bugs eram rápidas. No entanto, ele irá para a startup de um amigo no próximo mês. Então, ele acabou de sair, e o código do Anqu. 😭😭. </p>
<p>continua… </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Fim do verão</title>
    <url>/pt/Summer-Ends/</url>
    <content><![CDATA[<p><a href="http://music.163.com/#/song?id=26152612">Fim do verão</a><br>Esta é uma boa música, porque o verão realmente acabou. </p>
<a id="more"></a>

<p>Neste ano, escrevi menos, li menos e me senti mal. Antes disso, estava no meu período de folga, era produtivo e eficiente e meu coração disparava. Então comecei a pensar no porquê e tentei voltar. </p>
<p>Porque fui para Gopher China em abril e conheci um fazendeiro de TI. CTO, diga a ele, talvez eu esteja em um período de gargalo. </p>
<p>Mas agora é setembro e o verão acabou. Fiquei em Pequim por, no máximo, um ano e ainda estou preso neste estado popular. </p>
<p>Eu quero descobrir </p>
<h2 id="modelo"><a href="#modelo" class="headerlink" title="modelo"></a>modelo</h2><p>Em primeiro lugar, o estilo de vida (o contrato de sobrevivência) não é como Hangzhou.Quando eu estava em Hangzhou, eu podia alugar uma unidade perto da empresa, podia ir a pé para o trabalho e tinha meu próprio banheiro no quarto, então isso me incomodava. Mas em Pequim, se ainda usar o mesmo modelo, terei que morar em uma unidade antiga, que é mais velha do que eu! Para piorar as coisas, tenho que morar com meus vizinhos e dividir tudo, do banheiro à cozinha. Portanto, você tem que orar para que seu vizinho seja bom.<br>Para mim, como pessoa interior, só quero viver sozinho. </p>
<p>Depois de ajustar a escala deste negócio, aluguei imediatamente uma nova unidade, vou sair no final deste mês, mas já passou um ano e nunca mais volto. </p>
<h2 id="Ingles"><a href="#Ingles" class="headerlink" title="Inglês"></a>Inglês</h2><p>Eu costumava ler pelo menos 10 livros por mês, mas nos últimos meses, quando reduzi para a versão em inglês, os números caíram drasticamente e quase nunca terminei de ler um livro em um mês. </p>
<p>Nenhum livro me deixa enjoado, nenhuma entrada, nenhuma saída. Esta também é uma razão importante pela qual não posto mais blogs e a série “Pequeno Mestre”. Desnecessário dizer que eu forço todos os meus novos blogs a serem escritos em inglês. </p>
<h2 id="Procrastinacao"><a href="#Procrastinacao" class="headerlink" title="Procrastinação"></a>Procrastinação</h2><p>Este parece ser um problema comum. Mas depois de assistir a muitos GTDs, encontrei um círculo de saúde baseado em <a href="https://en.wikipedia.org/wiki/Polyphasic_sleep">sono polifásico</a>. Posso ganhar mais de 16 <a href="https://book.douban.com/subject/4198078/">pomodoroes</a> por dia.<br>Depois de voltar a trabalhar na empresa, só faço o que quero, acho que minha eficiência ainda é muito alta. </p>
<p>Embora eu tenha terceirizado o aplicativo em vez do DIY, preparar-me para o IELTS e trabalhar muito ainda é um grande desafio para mim, não só porque não sei a data de início, mas também porque meus colegas não conseguem entender. Tenho que escrever quase 70% do código do projeto principal e até reescrever algumas funções. Quero encontrar uma maneira de gerenciar nossa nova equipe (atualmente gosto de um assistente TL). </p>
<p>Então, todos os aplicativos que usei foram devolvidos e acho que isso realmente melhorou minha situação. </p>
<h2 id="Folga"><a href="#Folga" class="headerlink" title="Folga"></a>Folga</h2><p>Não estou falando sobre o Slack, embora eu irei escrever algum código para nosso CI baseado em sua API no futuro. </p>
<p>Descobri algumas coisas que fugi, mas vou trabalhar mais duro para enfrentar no futuro. Por exemplo, espero que meus colegas escrevam mais, leiam livros traduzidos, cortem e assim por diante. </p>
<p>Portanto, não ouso ter mais esperança. </p>
<p>Desta forma, o inverno está aqui. </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>Como construir um iOS CI sem Jenkins</title>
    <url>/pt/How-to-build-an-iOS-CI-without-jenkins/</url>
    <content><![CDATA[<p>Usei o Jenkins com alguns plug-ins Xcode como nosso iOS CI há meio ano. </p>
<p>A principal função que eu quero é construir nosso projeto diariamente no meio da noite, e +1 no número da construção, então enviar este commit para <code>Phabricator</code>, se qualquer uma dessas etapas falhar, ele postará uma notificação para<code>Slack</code> . </p>
<p>Mas depois de tentarmos usar <code>Carthage</code> em vez de<code>CocoaPod</code>, é necessário <code>Atualizar Carthage</code> antes de construir. O Jenkins não pode executar comandos antes de construir. Tentei usar o shell diretamente. </p>
<a id="more"></a>

<h2 id="codigo-de-atualizacao"><a href="#codigo-de-atualizacao" class="headerlink" title="código de atualização"></a>código de atualização</h2><p>Primeiro ele deve <code>cd</code> na pasta do projeto, em seguida, verificar novos commits e atualizar novos frameworks </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> $(dirname <span class="variable">$0</span>)</span><br><span class="line">git checkout master</span><br><span class="line">git reset --hard origin/master</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/carthage update</span><br></pre></td></tr></table></figure>

<p>em seguida, verifique se o último autor é um colega de trabalho ou o próprio bot </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">author=$(git <span class="built_in">log</span> -1 | head -2 | tail -1 | cut -d <span class="string">&#x27; &#x27;</span> -f2)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$author</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$author</span> != <span class="string">&quot;bot&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="comment"># TUDO: </span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>se for um colega de trabalho </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">projectName=$(find . -name <span class="string">&quot;*.xcodeproj&quot;</span> -depth 1 | cut -d <span class="string">&#x27;/&#x27;</span>  -f 2 | cut -d <span class="string">&#x27;.&#x27;</span> -f 1)</span><br><span class="line">plist=$(find <span class="variable">$projectName</span> -name <span class="string">&quot;*.plist&quot;</span> -d 1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># buildnum +1 </span></span><br><span class="line">shortVersion=$(/usr/libexec/PlistBuddy -c <span class="string">&quot;Print CFBundleShortVersionString&quot;</span> <span class="string">&quot;<span class="variable">$&#123;plist&#125;</span>&quot;</span>)</span><br><span class="line">buildnum=$(/usr/libexec/PlistBuddy -c <span class="string">&quot;Print CFBundleVersion&quot;</span> <span class="string">&quot;<span class="variable">$&#123;plist&#125;</span>&quot;</span>)</span><br><span class="line">buildnum=$(expr <span class="variable">$buildnum</span> + 1)</span><br><span class="line"></span><br><span class="line">/usr/libexec/Plistbuddy -c <span class="string">&quot;Set CFBundleVersion <span class="variable">$buildnum</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;plist&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># para Apple Watch </span></span><br><span class="line">WatchAppPlist=$(find WatchApp -name <span class="string">&quot;*.plist&quot;</span> -d 1)</span><br><span class="line">WatchAppExtensionPlist=$(find <span class="string">&#x27;WatchApp Extension&#x27;</span> -name <span class="string">&quot;*.plist&quot;</span> -d 1)</span><br><span class="line"></span><br><span class="line">/usr/libexec/Plistbuddy -c <span class="string">&quot;Set CFBundleVersion <span class="variable">$buildnum</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;WatchAppPlist&#125;</span>&quot;</span></span><br><span class="line">/usr/libexec/Plistbuddy -c <span class="string">&quot;Set CFBundleVersion <span class="variable">$buildnum</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;WatchAppExtensionPlist&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>Aqui está como xcodebuild seu ipa na pasta <em>build</em> </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rm -rf build</span><br><span class="line"></span><br><span class="line">xcodebuild clean archive -archivePath build/<span class="variable">$YourApp</span>-Beta \</span><br><span class="line">-scheme <span class="variable">$YourAppScheme</span></span><br><span class="line"></span><br><span class="line">xcodebuild -exportArchive \</span><br><span class="line">-exportFormat ipa \</span><br><span class="line">-archivePath <span class="string">&quot;build/<span class="variable">$YourApp</span>-Beta.xcarchive&quot;</span> \</span><br><span class="line">-exportPath <span class="string">&quot;build/<span class="variable">$YourApp</span>-Beta.ipa&quot;</span> \</span><br><span class="line">-exportProvisioningProfile <span class="string">&quot;<span class="variable">$YourtProvisioningProfile</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>então você pode carregar seu \ *. ipa para o seu servidor (por exemplo, usando curl) </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rm -rf build <span class="comment"># clean up</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># empurrar para remoto </span></span><br><span class="line">git config user.email <span class="string">&quot;bot@yourdomain.com&quot;</span></span><br><span class="line">git config user.name <span class="string">&quot;bot&quot;</span></span><br><span class="line">git commit -a -m <span class="string">&quot;<span class="variable">$buildnum</span>&quot;</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>

<p>Como postar uma mensagem no Slack </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># postar mensagem do Slack $ </span></span><br><span class="line"><span class="function"><span class="title">post2Slack</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">	SLACK_HOSTNAME=<span class="string">&quot;hooks.slack.com&quot;</span></span><br><span class="line">	SLACK_CHANNEL=“<span class="comment">#YourChannel”</span></span><br><span class="line">	SLACK_BOTNAME=<span class="string">&quot;bot&quot;</span></span><br><span class="line">	ICON=<span class="string">&quot;:x:&quot;</span></span><br><span class="line">	SLACK_BOTEMOJI=<span class="string">&quot;:joy:&quot;</span></span><br><span class="line">	MESSAGE=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enviar mensagem para o Slack </span></span><br><span class="line">PAYLOAD=<span class="string">&quot;payload=&#123;\&quot;channel\&quot;: \&quot;<span class="variable">$&#123;SLACK_CHANNEL&#125;</span>\&quot;, \&quot;username\&quot;: \&quot;<span class="variable">$&#123;SLACK_BOTNAME&#125;</span>\&quot;, \&quot;text\&quot;: \&quot;<span class="variable">$&#123;ICON&#125;</span> <span class="variable">$&#123;MESSAGE&#125;</span>\&quot;, \&quot;icon_emoji\&quot;: \&quot;<span class="variable">$&#123;SLACK_BOTEMOJI&#125;</span>\&quot;&#125;&quot;</span>;</span><br><span class="line">curl -X POST --data-urlencode <span class="string">&quot;<span class="variable">$PAYLOAD</span>&quot;</span> <span class="variable">$getThisURLInYourSlackChannel</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># post2Slack &amp;&amp; exit </span></span><br><span class="line"><span class="function"><span class="title">post2SlackAndExitWithMsg</span></span>() &#123;</span><br><span class="line">	post2Slack <span class="string">&quot;<span class="variable">$&#123;1&#125;</span>&quot;</span> &amp;&amp; <span class="built_in">exit</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>então você pode combinar quaisquer comandos como este: </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git push origin master || post2SlackAndExitWithMsg <span class="string">&quot;git push failed&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Psicologia Positiva de Harvard</title>
    <url>/pt/Harvard-Positive-Psychology/</url>
    <content><![CDATA[<p>Assisti a este curso durante o período aberto e fiz várias capturas de tela. Esse curso me ajudou muito. Como hoje limpei minhas fotos antigas, é hora de transformá-las em texto. </p>
<blockquote>
<p>A maturidade psicológica diz respeito à capacidade de mudar voluntariamente a perspectiva. </p>
</blockquote>
<a id="more"></a>

<h2 id="Objetivo"><a href="#Objetivo" class="headerlink" title="Objetivo"></a>Objetivo</h2><blockquote>
<p>A etapa no caminho para um destino que você considera valioso e importante para você. </p>
<p>Portanto, o objetivo final muitas vezes pode ser libertador. </p>
<p>Uma das razões é porque o amor, e especialmente a luxúria e a paixão se desgastam com o tempo. </p>
<p>Eles também são extremamente sensíveis, sábios, muito além da idade, santos, generosos, benevolentes </p>
</blockquote>
<h2 id="Exercicio"><a href="#Exercicio" class="headerlink" title="Exercício"></a>Exercício</h2><blockquote>
<p>A droga milagrosa: 30 minutos de exercício físico, 4 vezes por semana.<br>Pelo menos 15 minutos de exercícios conscientes 6 ou 7 vezes por semana. </p>
<p>Tenho tantas coisas para fazer. </p>
<p>O exercício deve ser a última coisa a desaparecer. É um ** investimento **. </p>
<p>Você pode perder 45 minutos. Mas você vai ganhar muito mais. É um bom investimento. Na verdade, sua memória fica melhor quando você se exercita. Assim, você receberá mais dinheiro para o banco em termos de tempo de estudo; seus níveis de ** criatividade e concentração ** sobem </p>
<p>Se você tem ADD ou não, especialmente se você tiver. </p>
</blockquote>
<h2 id="Relacao"><a href="#Relacao" class="headerlink" title="Relação"></a>Relação</h2><blockquote>
<p>As pessoas ficam juntas por um senso de dever, por hábito, porque pensam que esse é o seu destino na vida. </p>
<p>Falta de alternativa </p>
<p>“Faça aos outros o que você faria a si mesmo.” </p>
<p>“Não faça a si mesmo o que você não faria aos outros.” </p>
</blockquote>
<h2 id="Ame"><a href="#Ame" class="headerlink" title="Ame"></a>Ame</h2><blockquote>
<p>“O amor perfeito é realmente raro - para ser um amante exigirá que você tenha continuamente a sutileza do próprio sábio, a flexibilidade da criança, a sensibilidade do artista, a compreensão do filósofo, a aceitação do santo, o tolerância do erudito e a fortaleza do certo. ” </p>
<p>Mas, embora o amor perfeito não exista, ** dose de amor verdadeiro **. O verdadeiro amor existe entre humanos imperfeitos. </p>
<p>Eu vou encontrar a pessoa certa. Eu não acredito nisso. Simplesmente não é verdade. Não é uma questão de fé. </p>
<p>Então, o que torna o relacionamento único? Não é encontrar a pessoa certa. Mais uma vez, é cultivar aquele relacionamento escolhido. É em virtude de trabalharmos juntos, de estarmos juntos, de passarmos um tempo juntos, de nos dedicarmos um ao outro. É assim que criamos o relacionamento escolhido. É assim que criamos o relacionamento escolhido. </p>
</blockquote>
]]></content>
      <tags>
        <tag>Psychology</tag>
      </tags>
  </entry>
  <entry>
    <title>Quando uma empresa se torna maior</title>
    <url>/pt/When-a-company-become-bigger/</url>
    <content><![CDATA[<p>** Fazer a coisa certa ** é mais importante do que ** fazer a coisa certa **. A frase anterior significa que você tem seus próprios argumentos e razões. O \ * \ * correto mede sua própria justiça, se você pode ser responsável por suas ações. Mas quando você entra em uma grande empresa, seu gerente se preocupa se você pode fazer as coisas certas. Essa também é a razão pela qual as startups são mais poderosas. </p>
<a id="more"></a>

<p>Os humanos são animais sociais naturais. Se um grupo tiver menos de 140 pessoas, ele pode administrá-lo sozinho. Como todos sabem o que os outros estão fazendo, é fácil ter uma visão comum de alguém e ninguém pode ser preguiçoso. Mas quando a equipe fica maior, neblina e sombras aparecem.Suas habilidades e habilidades dependem em grande parte do seu gerente, não de suas contribuições reais. </p>
<p>A maioria das empresas tem centenas de funcionários, razão pela qual a política de escritório é tão comum em grandes empresas. Como lidar com a política do escritório é fundamental. Afinal, isso está relacionado ao seu ** salário e promoção **. Se você quiser fazer isso, a melhor maneira é se tornar um político. Todo mundo sabe o que está acontecendo, mas ninguém aponta. Assim como as roupas novas do imperador, o risco é você se perder. </p>
<p>É por isso que uma boa startup é tão atraente, mas um dia, a empresa crescerá por causa de sua excelência. Mais e mais estranhos se juntam, nem todo mundo é amigável, se você ainda for você mesmo e não se importar com política, isso pode causar inadequação, rumores estarão por toda parte e quando o ano novo chegar , Você não foi promovido sem motivo. </p>
<p>A forma neutra é trabalhar como um robô sem compartilhar emoções e sentimentos, o que fará com que seus colegas se sintam um determinado profissional. A desvantagem é que não há chance de ser considerado amigo, mas para pessoas que mudaram de empresa (não é mais uma startup), é mais fácil aceitar do que a empresa anterior. </p>
]]></content>
      <tags>
        <tag>Career</tag>
      </tags>
  </entry>
  <entry>
    <title>Vá para casa no ano novo</title>
    <url>/pt/Chinese-New-Year/</url>
    <content><![CDATA[<p>No último dia de 2016, a maioria das pessoas na Capital Imperial foi para casa<br>O pequeno mago escaneia enfadonho o site de descontos na casa de aluguel barato<br>De repente Q, que não se movia por dez mil anos, de repente quebrou a calma. O pequeno mago olhou para ela e acabou por ser uma deusa<br>Quando ele clicou em sua cabeça trêmulo, ele viu quatro palavras: eu sou casado </p>
<p>de repente </p>
<a id="more"></a>

<hr>
<p>Voltar para casa no Ano Novo se tornou uma dor para a geração mais jovem<br>Como um mestre bidimensional, ele conhece naturalmente o ** problema de cálculo familiar ** </p>
<blockquote>
<p>Se seus pais viverem por mais 30 anos, se você voltar para casa uma vez por ano em média 5 dias cada vez, sem o tempo para se divertir, comer, dormir, etc., você só pode ficar com seus pais por cerca de 24 horas, e um total de 720 horas por 30 anos , Quase um mês </p>
</blockquote>
<p>Além disso, de acordo com a “Lei de Proteção dos Direitos e Interesses do Idoso </p>
<blockquote>
<p>Os membros da família devem se preocupar com as necessidades espirituais dos idosos e não devem ignorar ou negligenciar os idosos. Os membros da família que vivem separados dos idosos devem visitar ou cumprimentar os idosos com frequência </p>
</blockquote>
<p>Para evitar ser processado, o pequeno mago tenta se encontrar com seus pais duas vezes por ano </p>
<hr>
<p>Mas com o tempo, o Festival da Primavera e outros feriados serão surpreendidos<br>Porque um feriado deixou uma enorme sombra psicológica no pequeno mago:<br>Achei que fosse o Festival Ching Ming de 2013. O jovem mestre pediu à deusa que fosse tocar no Lago Oeste, e quando ele foi para Sudi depois de passar pelo pátio de música, ficou chocado com o fluxo de pessoas.<br>Naquela época, o pequeno mago estava parado na entrada de Sudi, mas ele só podia ver as pessoas dos dois lados e não podia apreciar a menor vista da beleza do Lago Oeste. O pequeno mago não considerou que o principal motivo era que ele jogava o pote de raiva nos feriados por causa de sua falta. </p>
<p>O Festival da Primavera é o cidadão de primeira classe em todas as festas, devido às tradições da geração anterior, foi questionado pelas sete tias e oito tias sobre o salário e a meta de perguntar sobre uma boa oportunidade de ter filhos.<br>E agora que a próxima geração apareceu neste mundo, os envelopes vermelhos são naturalmente indispensáveis. Embora o parco bônus de fim de ano seja distribuído, ele também tem que sorrir: “Ah, essa criança é tão linda.”<br>O que é ainda mais exagerado é que Guo Jia agora abriu totalmente o segundo filho, e chega a hora Double está pronto </p>
<hr>
<p>Durante o Festival da Primavera do ano passado, os pequenos feiticeiros usaram [Trinta e seis estratégias de guerra](<a href="https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8D%81%E5%85%AD%E8%">https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8D%81%E5%85%AD%E8%</a> AE% A1) no medidor de corrente (25)<br>Como mágico, ele naturalmente sabe como comprar um ingresso, então se escondeu (1), e deliberadamente demorou cinco minutos antes de ir esperar o trabalho (4)<br>Posteriormente, informou aos pais que “a passagem não está disponível”, e a seguir tentou entrar (16), dizendo que mesmo que a passagem seja 8x ele deve voltar para casa<br>Naturalmente, o pequeno mago Baba Ma Ma ficou chocado com este truque amargo (24), e imediatamente disse que você não pode voltar … </p>
<p>Com o precedente do ano passado, é muito mais fácil replicar o sucesso do ano passado este ano </p>
<p>Até que ele viu um pôster que expôs a verdade: </p>
<blockquote>
<p>Ir para casa durante o ano novo é o vencedor da vida </p>
</blockquote>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>amigos com benefícios</title>
    <url>/pt/Friends-with-Benefits/</url>
    <content><![CDATA[<p>Não sei o que aconteceu, o software para compartilhamento de armas começou a ser popular em todo o país </p>
<p>Embora o pequeno mago tenha sido rejeitado pela deusa Ten Moves, como um estudioso, ele ainda está muito limpo<br>Douban sempre repostou apenas nos canais de leitura e cinema, e nunca acompanhou o grupo do direito de ter essa função. </p>
<p>O amigo da artilharia mencionado hoje é o amigo da artilharia do pequeno mago amigo da base </p>
<p>No passado, o Pequeno Mago e Jiyou costumavam se conectar com as estrelas. Na época, pensei que eles ainda eram o coração do enxame. De repente, um dia, o amigo enviou um link para Douban, dizendo que havia encontrado a deusa. </p>
<p>O pequeno mago ficou chocado e seus amigos o deixaram </p>
<p>Fim </p>
<a id="more"></a>

<hr>
<p>No entanto, dez dias depois, o amigo da base voltou a ficar online e disse tristemente que foi rejeitado<br>Devido ao mau estado, StarCraft foi abatido pelo pequeno mago 🐔 </p>
<p>Falando em StarCraft, o pequeno mago conheceu um tio que veio da era StarCraft 1 na atual Imperial Capital Company. Ele tentou conectar uma rodada de 2 VS AI e descobriu que era 🐔, então ele abriu 1V1. Por um tempo, ele ficou feliz por esquecer de escolher o clã e teve que fazer 9D. Não quero que o tio seja bloqueado e o roteador será desconectado se ele ganhar. Após dois minutos, ele alegou no QQ que estava com vergonha de ser desconectado e não conseguiu mais se conectar … </p>
<p>O pequeno mago sentiu a mesma doença e teve pena um do outro, e ensinou-lhe todas as lições que resumira na época, e então os amigos perseguiram a deusa. </p>
<p>Fim </p>
<hr>
<p>No entanto, Lu Yao conhece os cavalos de força, e a deusa que Jiyou pensava ser apenas uma amiga </p>
<p>Por exemplo 🌰: Um segundo amigo ficou com raiva e fugiu de casa<br>Os companheiros de arma de Jiyou não conseguiram encontrá-lo e não conseguiram resolver os problemas fisiológicos, então eles foram a Douban para encontrar transeuntes, e eles choraram, criaram problemas e se enforcaram na porta da empresa Jiyou.<br>Claro, uma explicação mais científica é despertar a atenção dos amigos por meio de autoflagelação<br>No entanto, isso passa a ser uma opção perde-perde na teoria dos jogos </p>
<p>Quando o pequeno mago ficou chocado com o óleo de soja de Jiyou,<br>Claro, o pequeno mago sente que todos deveriam ter a oportunidade de se arrepender e se reabilitar. Pessoas que não são sábios e sábios não podem fazer nada, então desta vez não vou falar com Jiyou.<br>Afinal, existem outras soluções, como: </p>
<blockquote>
<p><a href="http://www.solidot.org/story?sid=44714">O homem dá um calmante para a namorada para que ele continue jogando</a><br>Um homem foi multado em 500 euros por um tribunal de Castrop-Rauxel, Alemanha, porque sedou a ex-namorada para continuar a jogar. O juiz considerou isto um “ataque deliberado” … </p>
</blockquote>
<p>No entanto, a situação tornou-se mais séria com o passar do tempo.Por exemplo, durante os dois jogos de StarCraft, o amigo da base foi repetidamente desconectado por seu companheiro de arma e sentou-se no chão chorando como uma megera. </p>
<p>Então o pequeno mago conversou secretamente sobre isso com seus amigos </p>
<p>Ouvindo que ele estava usando um chapéu verde, Jiyou ficou furioso.Ele pegou uma faca de cozinha e cortou o amigo, espirrando sangue na casa de aluguel barato. </p>
<p>Jiyou foi preso, assassinado apaixonadamente, condenado à morte com uma pena suspensa e terminou em ódio </p>
<hr>
<p>Não quero que minhas amigas acreditem nos direitos das mulheres e não liguem muito para isso </p>
<p>Embora esteja relacionado à carreira oficial dele, os amigos básicos estão no auge da vida. Eles estão cheios de energia e não têm onde se libertar, e não estão totalmente cientes da relação entre a alma e a carne. Eles caem em um estado carnal e incapazes de se libertar e têm medo de retornar a um estado de LOL. </p>
<p>“Então, eles não vão se separar” o pequeno mago comentou precipitadamente </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Soylent</title>
    <url>/pt/Soylent/</url>
    <content><![CDATA[<p>Desde que o pequeno mago comprou uma garrafa de Soylent de um mágico de alto nível por um preço alto, ele gosta desse produto. </p>
<p>Quando o pequeno mago ainda estava no céu, ele costumava ir para a Biblioteca do West Lake District<br>Naquela época, houve um incêndio em julho, e como um prédio Guo Jia, naturalmente tinha um dispositivo de resfriamento de nível industrial </p>
<p>Desde que se tornou um lugar sagrado para o pequeno mago, muitas vezes me sento por um dia </p>
<p>No passado, a energia da arma mágica do pequeno mago durava no máximo 1 hora<br>Mais tarde, comprei um `R, 13 polegadas, meados de 2013 ‘e não foi problema por algumas horas. Mais tarde, acabei de ler o livro ou o jornal irmão. </p>
<p>Mas há tantas pessoas na biblioteca, e os cidadãos do Paraíso são tão diligentes. Seja nos fins de semana ou mesmo durante a semana, a porta se abre às 8h30, e não há lugar para o pequeno mago depois das 21h. </p>
<p>Então, como recarregar as baterias se tornou um grande problema. Se você parar de comer ao meio-dia e depois voltar, você será uma dupla e terá vontade de pegar um assento na Magic Academy. </p>
<p>Então, se você tiver essas coisas, compre um copo de 1L, traga 750ml de pó, mais a água pura fornecida pela biblioteca, você pode sentar no deserto. </p>
<a id="more"></a>

<hr>
<p>O pequeno mago uma vez calculou uma conta de tempo: </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [准备, 做饭, 吃饭, 洗碗]</span></span><br><span class="line"><span class="keyword">let</span> 标准耗时 = [<span class="number">10</span>, <span class="number">30</span>, <span class="number">15</span>, <span class="number">10.0</span>]</span><br><span class="line"><span class="keyword">let</span> 系数 = [<span class="number">0.5</span>, <span class="number">1</span>, <span class="number">0.7</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> 一天总耗时 = 标准耗时.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + $<span class="number">1</span> &#125; * 系数.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + $<span class="number">1</span> &#125;</span><br></pre></td></tr></table></figure>

<p>São apenas três horas por dia </p>
<p>Tão pequenos bruxos costumam imaginar que um dia, quando os bruxos carregarem seus instrumentos mágicos, eles poderão carregá-los junto com eles devido ao contato físico.<br>Por exemplo, a aeronave de transporte em SC2 é uma castanha, e ainda é remota<br>Às vezes me sinto ofendido.O preço do Embody não é suficiente para realizar a função de bio-carga. </p>
<p>E o feed resolve essas etapas demoradas muito bem<br>Especialmente depois que a versão for atualizada para 2.0, você nem precisa agitar o copo<br>Além disso, a versão 1.5 anterior tem um desconto de 54 \ $, mais 100 ￥ para o frete, mesmo se a taxa de câmbio disparar, cada refeição custará mais de 20 oceanos. </p>
<blockquote>
<p>Não existe coisa perfeita no mundo. Tudo é bom e deve haver desvantagens. Para ser um homem, você deve aprender a pesar os prós e os contras e fazer escolhas racionais —— People’s Daily Online </p>
</blockquote>
<p>No entanto, o feed tem três grandes montanhas </p>
<ol>
<li>gosto </li>
<li>O níquel e o mercúrio excederam os padrões canadenses </li>
<li>Aumentar o açúcar no sangue </li>
</ol>
<blockquote>
<p>A capacidade de resolver problemas é geralmente o produto de um pensamento cuidadoso e sistemático, e qualquer pessoa talentosa pode adquirir essa habilidade </p>
<ul>
<li>Pensamento McKinsey </li>
</ul>
</blockquote>
<ol>
<li><p>A dinastia celestial costuma ser famosa por suas iguarias<br>Mas o pequeno mago foi treinado em habilidades culinárias por 18 anos, então ele não quer comer arroz. </p>
</li>
<li><p>Capital Imperial </p>
</li>
</ol>
<p>O último é mais difícil de manusear, dá uma sensação de plenitude, mas não há sensação de mastigar<br>Além disso, como um alimento do tipo fluido, ele só pode permanecer por dez minutos, enquanto a comida geralmente leva várias horas.<br>Em suma, existe apenas transformação, nenhuma eliminação </p>
<p>Então o pequeno mago tem ovos com leite café da manhã, óleo de cozinha para o almoço, comida para o jantar </p>
<p>Convertido em uma caixa de entrada estável por mês </p>
<hr>
<p>Não fui para casa durante o Ano Novo Chinês. O pequeno mago estava com medo que o supermercado fechasse, então ele reservou uma caixa com antecedência.<br>Quando ele beliscou o nariz e serviu com força para meia xícara, ele olhou para seu frango fraco e sentiu que deveria adicionar um pouco de carne de verdade<br>Não vale a pena comprar para abrir os cavalos escovados com frequência. Fico feliz em descobrir que o preço da carne enlatada está à venda, pronto para fazer um pedido<br>Quando fiz o check-out, de repente encontrei quatro grandes personagens ao lado dele: Para cães </p>
<p>Bem, isso deve ser causado por uma alimentação de longo prazo<br>Pequeno Mago usou seu estômago para analisar </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Alto Mago Templário</title>
    <url>/pt/High-Templar/</url>
    <content><![CDATA[<p>Durante o ano de Little Mage Gap, ele experimentou vários golpes de fusão<br>No entanto, o mais irritante é a seleção de tecnologia </p>
<p>Já na Academia de Magia (2011), o pequeno bruxo queria aprender iOS, depois de olhar para ele pediu dinheiro e se voltou para o Android. </p>
<p>Naquela época, o pequeno mago ainda usava a praga para morrer. Acabei de saber que existe outro sistema operacional chamado Linux. A ferramenta portátil Nokia ocupa uma grande área. Naturalmente, não existe o conceito de . Só sei que Jobs morreu de câncer no noticiário, o que é uma mudança. Quem perdeu o mundo<br>Depois de assistir a uma das três principais palestras <a href="http://news.stanford.edu/news/2005/june15/jobs-061505.html">Stay Hungry. Stay Foolish</a>, já se passaram dois anos. </p>
<blockquote>
<p>PS: Os outros dois são [Os benefícios secundários do fracasso e a importância da imaginação] por JK Rowling em Harvard (<a href="http://news.harvard.edu/gazette/story/2008/06/text-of-jk-">http://news.harvard.edu/gazette/story/2008/06/text-of-jk-</a> rowling-speech /), Randy Pausch’s <a href="http://www.cmu.edu/randyslecture/videos/">Last Lecture</a> em CMU são todos instigantes e bons vídeos que valem a pena ponderar </p>
</blockquote>
<a id="more"></a>

<hr>
<p>Depois de assistir a várias aulas no Android, era 886, e não havia nenhum motivo especial, mas o interesse em jogar C não foi desencadeado no processo. </p>
<p>Em um piscar de olhos, a escola recruta, devido ao afastamento e não muitas empresas, a pregação é basicamente na Universidade de Ciência e Tecnologia e na Universidade de Ciência e Tecnologia.<br>Depois de dezenas de derrotas miseráveis, finalmente fui transferido para o céu. A NASDAQ fez uma oferta, que é afiliada ao departamento de pré-pesquisa. O local ainda é um paraíso dos sonhos<br>O pequeno mago não chorou e imediatamente assinou um contrato </p>
<p>HR MM disse que a empresa está passando por uma transformação, de C fart para Android<br>Desde então, o pequeno mago que tem medo de entrar e sair do trabalho, em seu último ano, mais uma vez mordeu a bala para aprender Android </p>
<p>O melão retorcido não é doce, a história se repete e 886 </p>
<hr>
<p>O ** departamento de pré-pesquisa ** originalmente imaginado pelo pequeno mago era um lugar semelhante à academia descrita em “A beleza da programação”<br>No entanto … Na maioria das vezes, a Pedra Filosofal (Jar) é feita de Java e incorporada ao elemento de origem. Depois disso, o pequeno mago convoca um Android modificado com Ubontu e o queima em cada lugar pelo leão de cerco vivo. Em um dispositivo de alta simulação </p>
<p>Tendo dito tanto, pode ser resumido em duas palavras práticas: shanzhai </p>
<p>E um efeito simples do Android requer muito Java, além de que as próprias características do Java não mudaram, levando ao nascimento de vários modos de tiro, e o pequeno mago está exausto. </p>
<p>Olhando para trás agora, não sei se é Shanzhai ou Java. É muito ruim.<br>Até agora, o pequeno mago ainda tem todos os tipos de insatisfação com os feitiços que este mundo mago usa com mais frequência durante todo o ano (\ * ￣︿￣) </p>
<blockquote>
<p>PS: Lambda e funcional são fornecidos no 8, que parece muito mais conciso </p>
</blockquote>
<p>Mais de meio ano depois, o pequeno mago descobriu acidentalmente <a href="https://developers.google.com/edu/python/">a classe python da ravina</a>. Para o pequeno mago que só teve contato com o cu shell Java, É um tiro cardiotônico </p>
<hr>
<p>Durante o Gap Year, o pequeno mago encontrou um rubi melhor. Depois de terminar de ler as perguntas no <a href="https://www.codecademy.com/">Codecademy</a>, ele sentiu que era inconveniente assistir ao sol no telefone, e a declaração oficial não foi Como um terminal de PC, quero fazer um para mim </p>
<p>No entanto, o aparecimento de 🐶🐺 interrompeu o plano do pequeno mago </p>
<blockquote>
<p>PS: Ruby é uma linguagem dinâmica fracamente tipada, ou seja, diferentes tipos podem ser atribuídos e podem se alterar em tempo de execução, portanto, uma linha de código frequentemente parece fazer centenas de linhas de coisas para os outros<br>Yukihiro Matsumoto também mencionou em “Program World” que o objetivo principal do design Ruby é: legal </p>
</blockquote>
<blockquote>
<p>Mas o problema é que, para garantir a correção, devemos usar constantemente testes para restringir<br>O resultado é que quanto mais longo o teste, mais você escreve<br>Geralmente pequeno e bonito, mas não adequado para colaboração em grande escala<br>Linguagens estáticas fortemente tipadas podem detectar muitos erros em tempo de compilação </p>
</blockquote>
<blockquote>
<p>O próprio Golang é fortemente tipado, mas fornece algum açúcar sintático conveniente<br>O mais chocante é que quando havia muita demanda, o autor primeiro escreveu o formatador<br>Este é um dos meus recursos favoritos, ele economiza muito tempo para a formatação do código.<br>Falando do primeiro Gopher🇨🇳, o autor também veio a Xangai e falou sobre a realização deste Dongdong </p>
</blockquote>
<hr>
<p>Mesmo que ruby ​​tenha todos os benefícios, depois que o pequeno mago testou os dois feitiços 🍐, ele abraçou 🐶🐺 </p>
<p>Neste momento, a maior parte do intervalo de tempo planejado já passou<br>Se o molho descer, o pequeno mago pode ter ido para a pilha completa de leões de cerco<br>No entanto, um evento decisivo ocorreu antes, trocando o galho iluminado pela pilha mágica </p>
<p>Por alguma razão desconhecida, o pequeno mago após escolher 🐶🐺, sem nenhuma renda, na verdade atualizou seu equipamento mágico, substituindo a praga de seu pai por seu próprio rMBP </p>
<p>Depois de completar o site de nível de demonstração, o pequeno mago comprou um certificado e foi surpreendido pelo Xcode quando ele apareceu. Σ (° △ ° |||) ︴, pensei em vincular o botão para responder a eventos no Android naquela época e recebi um monte de código, que usei no Xcode Ctrl + arrastar linha é feito desta forma elegante </p>
<p>No tempo seguinte, o pequeno mago usou o [cs193p] de Stanford (<a href="http://cs193p.stanford.edu/">http://cs193p.stanford.edu/</a>), <em>Head First iPhone Development</em>, <em>iOS 7 Programming Cookbook</em>,<br>A palavra “arte” muitas vezes vem à mente </p>
<p>Depois disso, tudo correu bem </p>
<hr>
<p>Pilha completa do Arconte desde os tempos antigos </p>
<p>O pequeno mago evita assim, quantos têm seu pequeno ábaco<br>O principal motivo é que a pilha completa é muito cansativa, de certa forma, está tudo seco<br>E isso também significa que o tempo de lazer é infinitamente comprimido </p>
<p>Quanto menor for a habilidade, menor será a responsabilidade<br>Em última análise, o Pequeno Mestre é apenas um bom garoto que gosta de ler nas horas vagas. </p>
<hr>
<p>Mas ele é muito ingênuo </p>
<p>No caminho para o mago do templo avançado, &gt;&gt; esses poços </p>
<h3 id="WWDC"><a href="#WWDC" class="headerlink" title="WWDC"></a>WWDC</h3><p>100 + / ano, os pés do pequeno mago estão tremendo durante o download<br>No entanto, em Estocolmo, baterei palmas com entusiasmo quando ver a tecnologia de Cool. </p>
<h3 id="Versao-adaptada"><a href="#Versao-adaptada" class="headerlink" title="Versão adaptada"></a>Versão adaptada</h3><p>O pequeno Mago costumava sofrer com diferentes telas do Android, pensando estupidamente que o iPhone tem apenas um tamanho de tela<br>Depois de um ano… </p>
<h3 id="Dores-rapidas"><a href="#Dores-rapidas" class="headerlink" title="Dores rápidas"></a>Dores rápidas</h3><p>Vários bugs, incluindo o sistema embutido … </p>
<hr>
<p>O mais trágico é que o pequeno mago encontrou outro ralo </p>
<h3 id="Projeto"><a href="#Projeto" class="headerlink" title="Projeto"></a>Projeto</h3><p>No passado, o pequeno mago era cego, como um fungo ouvindo o IE 800, e não fazia distinção entre pixels de diferença de cor<br>Melhorou gradativamente após entrar no pit, mas a compreensão do Design ainda está na categoria de Leão atirador </p>
<p>Como resultado, Frederick Brooks, o autor de “The Myth of Human Moon”, publicou o livro <em>The Design of Design</em> e deu um tapinha no rosto do pequeno mago, e o autor de outro <em>Designing Design</em> com um nome semelhante era conhecido por sua indiferença para com sua mãe 🐔 Membro do Comitê Consultivo Japan Print Design Master Kenya Hara </p>
<p>Até agora, existem mais três ramos na árvore de tecnologia do pequeno mago </p>
<ul>
<li>Esboço </li>
<li>fotografia </li>
<li>Keynote </li>
</ul>
<p>Felizmente, é isso que o pequeno mago anseia<br>Afinal, o que motivou o pequeno mago a entrar no fosso foi que o sentimento de “arte” poderia ser realizado em uma máquina fria. </p>
<p>Isso é chorar, não é? </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Este certificado expirou</title>
    <url>/pt/This-certificate-has-expired/</url>
    <content><![CDATA[<h2 id="Este-certificado-expirou"><a href="#Este-certificado-expirou" class="headerlink" title="Este certificado expirou"></a>Este certificado expirou</h2><p><code>keychain -&gt; Exibir -&gt; Mostrar certificados expirados -&gt; Sistema</code> </p>
<p><code>Autoridade de certificação mundial de relações com desenvolvedores da Apple</code>Segunda-feira, 15 de fevereiro de 2016 às 2:56:35 Hora Padrão da China` </p>
<p>apague os certificados </p>
<p>Baixe o novo <a href="https://developer.apple.com/certificationauthority/AppleWWDRCA.cer">AppleWWDRCA.cer</a> </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Observer</title>
    <url>/pt/Observer/</url>
    <content><![CDATA[<p>看来我的观察者回来了。</p>
<p>当我读完<em>与时间友好相处</em>时，我开始知道心理模型，我花了一个月时间读完那本纯薄的书。</p>
<a id="more"></a>

<p>当我庆幸自己的心智模式有所改善时，《现在的力量》。灵性启蒙指南》宣布心智是个陷阱，心智的预测能力只关注未来，它让你无法知道现在的力量。这些不同的论点在当时让我感到困惑。当我继续阅读时，观察者的概念出现在我的眼中。</p>
<p>我第一次听说观察者是在我的大学里。我是从<em>黑暗森林</em>中读到这个词的。在我读了一本关于量子力学的书后，更让我着迷。</p>
<p>在心理学中也有一个关于观察者的概念。它不仅与上面的想法不同(<a href="https://en.wikipedia.org/wiki/Observer_(quantum_physics)">观察者(量子物理)</a>，还与<em>设计模式(<a href="https://en.wikipedia.org/wiki/Observer_pattern">观察者模式</a>)</em>。当我在一年后完成<em>Think on These Things</em>时，我尝试建立一个关于自己的观察者。<br>因为通常情况下，当你看到别人做的时候，事情会更加清晰。弱点和盲点很明显很明显，你会找到更好的解决方案。</p>
<p>很庆幸我在空档期实现了这个目标，有两个版本的我，一个演戏，一个观察者。<br>我不认为观察者等于超我，但它显然是自我的守护者。</p>
<p>但当我一年半前到北京工作时，我建立的所有作品都毁了。我的观察者不见了。我有一些新的床上习惯，比如经常看表，这暴露了我的焦虑和紧张。</p>
<p>当我做错事的时候，我就会感到疲惫不堪。幸运的是，我有一个长假，我去了父母家。虽然那个城市不是外场，但至少让我脱离了超级城市。另外，我还和父母深谈了一些关于梦想的问题。他们觉得很无奈，因为我们家穷，而且酒店的价格也在不断上涨，他们不明白我为什么会有这么奇怪的表现。</p>
<p>10 天后，我的假期到期，我感到很轻松。</p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>🇺🇸-0-0</title>
    <url>/pt/USA-0-0/</url>
    <content><![CDATA[<h2 id="Imperador-americano-0-0"><a href="#Imperador-americano-0-0" class="headerlink" title="Imperador americano-0-0"></a>Imperador americano-0-0</h2><div id="googleMap9885" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap9885'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 10,
       'center': new window.google.maps.LatLng( 37.6938029 , -122.4740425 ),
     },
     target = document.getElementById('googleMap9885'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 37.6213129 , -122.3811441 ),
        'map': map,
        'title': 'San Francisco International Airport',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'San Francisco International Airport'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 37.7505427 , -122.4136408 ),
        'map': map,
        'title': '1225 York St',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: '1225 York St'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<h2 id="loteria"><a href="#loteria" class="headerlink" title="loteria"></a>loteria</h2><p>O pequeno Mage escreveu Swift por mais de um ano em 15 anos e foi instruído a assistir à sessão da WWDC<br>De alguma forma, não sei o que é WWDC. Verifiquei e cliquei em uma seção<br>Fiquei surpreso ao descobrir que, embora o inglês não seja bom, posso fazer isso com um palpite.<br>Pensando nos tutoriais do Android naquela época, completamente na névoa<br>Então eu fiquei cheio de bons sentimentos em um instante, e passei pela maioria dos vídeos do ano e me beneficiei muito. </p>
<p>Mais tarde soube que, enquanto houver uma conta de desenvolvedor, cartão de crédito Visa / MC, você pode sacar na loteria<br>Registre-se no <a href="https://developer.apple.com/wwdc20/">site oficial</a> no início de março de cada ano. Há apenas uma semana, então não perca. </p>
<p>Devido ao grande número de pessoas,  selecionará aleatoriamente alguns alho-poró sortudos (reembolsados ​​pela empresa) ou infelizes (despesas próprias) para dar 10.000 bilhetes 🎫<br>Depois, vá ou não, deduza o dinheiro primeiro<br>Não importa se o visto dos EUA for recusado ou a entrada negada, o dinheiro não será reembolsado<br>Os ingressos também são proibidos de transferir e só podem ser enviados para outras contas de desenvolvedor da mesma empresa<br>Resumindo, nem pense em reembolsar se você ganhar na loteria, então pense na loteria </p>
<p>Mas, felizmente, nunca foi a vez dele para esse tipo de coisa, então me inscrevi sem pensar. </p>
<h2 id="Ganhando"><a href="#Ganhando" class="headerlink" title="Ganhando"></a>Ganhando</h2><p>O resultado do sorteio será divulgado antes do final de março </p>
<p>De repente, recebi uma mensagem de texto de dedução de \ $ 1.599 do China Merchants Bank durante a noite e uma ligação com cartão roubado<br>Para provar ao banco que ele é ele mesmo<br>Acorde ao meio-dia do dia seguinte para receber um e-mail de confirmação<br>Liguei apressadamente para meus amigos e disseram para preparar vistos e hotéis </p>
<p> é fornecer alguns hotéis perto do local do evento, mas o preço do ganso é muito , o mais barato também é \ $ 229 por noite<br>Pensando no princípio de estar perto sozinho, eu só posso morder a bala e marcar uma consulta </p>
<p>Felizmente, um colega disse que embora não tenha havido empate, ele ainda queria ver<br>Além disso, ele tem dois amigos que podem voar para São Francisco do Canadá 🇨🇦 e 🇺🇸 da América Central para jogar </p>
<p>Então, saí do hotel e reservei um Airbnb que parecia bom </p>
<p>E meu amigo pode dirigir, reservar um Herz </p>
<p>Simplesmente perfeita </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-01.jpg" alt=""></div></div></div>

<h2 id="visto"><a href="#visto" class="headerlink" title="visto"></a>visto</h2><p>Primeiro tem um passaporte<br>Diferente de quem acabou de sair do avião no exterior<br>Eu não estive lá antes<br>Felizmente, fiz isso quando voltei para minha cidade natal para visitar meus pais em 15 anos. </p>
<p>Em seguida, marque uma reunião no <a href="https://www.ustraveldocs.com/cn_zh/index.html">site oficial</a><br>Pague online e marque uma entrevista </p>
<p>Acontece que aplicar sozinho é mais rápido do que o agente Taobao<br>Vá para o China CITIC Bank a partir da página de pagamento<br>A página é antiga à primeira vista e pensei que fosse um site de phishing … </p>
<h2 id="Cara-a-cara"><a href="#Cara-a-cara" class="headerlink" title="Cara a cara"></a>Cara a cara</h2><p>A Embaixada dos EUA da capital imperial em Pequim fica em Sanyuanqiao, distrito de Chaoyang </p>
<p>Peça licença na tarde da entrevista<br>Depois de chegar à embaixada, fiquei pasmo, pois só havia visto uma equipe tão longa durante o Festival da Primavera.<br>As pessoas que esperam pela entrevista dão voltas e mais voltas, e há 10.000 dragões em forma de Z alinhados com 18 curvas na estrada da montanha<br>Rastejando por 3 horas antes de ver a janela da entrevista </p>
<p>Há um total de 5-6 janelas de entrevista em chinês e 1 em uma janela deserta em inglês </p>
<p>Meu amigo disse de repente que ele pode falar inglês de qualquer maneira, vá para a janela de inglês, não precisa esperar<br>Pense nisso, decidi dar uma chance </p>
<p>A entrevistadora é avó, e não me lembro exatamente o que ele disse na época, aproximadamente: </p>
<p>…<br>小 ：  nos convide para participar de sua conferência<br>A velha avó disse surpresa<br>Você está trabalhando para a Apple?<br>(Pensando nisso: emmm, 2019 é realmente, mas infelizmente o cronograma é apenas 2016, então eu tenho que dizer)<br>小 ： Não, é uma conferência de desenvolvedores.<br>老 ： Por que eles o convidam?<br>… </p>
<p>Abra a pasta e retire a Carta Convite de ,<br>A velha avó apontou para a janela chinesa ao lado dele e pediu-lhes que fossem até a janela chinesa ao lado </p>
<p>A segurança que mantinha a ordem ao lado deles viu que eles foram expulsos e perguntou o que estava acontecendo.<br>Ouvindo isso, suspirei, mas felizmente, não recusei diretamente, então pedi que esperassem um pouco ao lado dela. </p>
<p>Em seguida, a entrevista chinesa foi uma senhora estrangeira<br>Ela também estava confusa. Conferência<br>Supõe-se que as pessoas em círculos não relacionados à TI não sabem o que é Conferência<br>Então ela pegou a carta-convite, a Srta. Irmã disse que não queria ler e continuou a pedir que ele explicasse </p>
<p>O pequeno mago ficou surpreso. Se foi provavelmente por causa do idioma anterior, por que não li o material desta vez?<br>Porque outras pessoas têm muita experiência em entrevistas, eu só ouvi que aqueles que não trouxeram os documentos foram rejeitados e não leram os documentos se não tivessem ouvido.<br>Felizmente, meu amigo disse que era Developer Meeting, minha irmã entendeu em segundos (😓 …) </p>
<p>Então perguntei se o imperador dos EUA tinha parentes, há quanto tempo ele estava lá, quando voltaria e onde morar. </p>
<p>Esperei por meio minuto longo<br>Dona irmã sorriu e disse parabéns, o visto passou<br>Você receberá seu passaporte pelo correio em cerca de alguns dias úteis </p>
<p>Voltas e mais voltas, não particularmente feliz<br>Agradeci e voltei com meus amigos </p>
<p>Mais tarde, um longevo em Boston soube que havia uma entrevista chinesa<br>Você também pode se encontrar com duas pessoas<br>Você também pode arrastar a família para o macarrão juntos<br>Meu queixo caiu </p>
<p>Visto americano<br>Caiu<br>Ele disse </p>
<h2 id="Passagens-aereas"><a href="#Passagens-aereas" class="headerlink" title="Passagens aéreas"></a>Passagens aéreas</h2><p>Eu não sabia que a United Airlines teve uma avaliação ruim quando estava no bilhete.<br>E não houve nenhum ataque notório aos asiáticos </p>
<p>Na verdade, não importa qual vôo, 12 horas de vôo contínuo, ele se tornará um cadáver<br>A United Airlines não é tão rígida quanto ao fechamento 📴, ✈️ tirou uma foto do horizonte </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-02.jpg" alt=""></div></div></div>

<p>Nunca esperei que o número de voo UA888 fosse encontrado na Atribuição do FANNG quatro anos depois </p>
<h2 id="Entrada"><a href="#Entrada" class="headerlink" title="Entrada"></a>Entrada</h2><p>Depois de sair do avião, entre </p>
<p>Sempre houve uma ilusão de alguma forma, um grupo de atiradores emboscada atrás da alfândega<br>O suspeito será morto no local<br>Juntamente com entrar no território de outro país pela primeira vez, ainda é um pouco nervoso </p>
<p>A alfândega fazia algumas perguntas comuns, como por que você está aqui, fique alguns dias<br>De acordo com a situação do visto, não é uma Conferência, mas uma Reunião de Desenvolvedores<br>Então a alfândega carimbou </p>
<p>Depois que peguei meu passaporte de volta, imediatamente pareci calmo e calmo, mas na verdade eu acelerei meu ritmo e entrei<br>Por medo de levar um tiro </p>
<p>Depois de ver algumas pessoas que pegaram o aeroporto, lembrei que a amiguinha ainda não tinha saído<br>Depois de esperar muito tempo e pensar que meu amiguinho GG, eu o vi<br>Descobriu-se que a Conferência foi verificada por um tempo </p>
<p>Conferência é muito venenosa 😂 </p>
<h2 id="centro-da-cidade"><a href="#centro-da-cidade" class="headerlink" title="centro da cidade"></a>centro da cidade</h2><p>Pegue o carro no aeroporto e deixe sua bagagem no Airbnb 🧳 </p>
<p>É muito longe do Aeroporto de Sanfan ✈️ até o centro<br>Inesperadamente, esse tipo de distância teria que ser bloqueado no imperador por 10.000 anos, e levaria 20 minutos </p>
<p>🏠 É exatamente igual ao que o Airbnb viu, sem fraude<br>É que a casa tem dois andares, como uma estrutura de madeira, e tem outro inquilino no andar de cima, então vai haver barulho ao correr<br>Tem um jardim atrás, muito bom </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-04.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-05.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-07.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-08.jpg" alt=""></div></div></div>

<h2 id="Yosemite"><a href="#Yosemite" class="headerlink" title="Yosemite"></a>Yosemite</h2><blockquote>
<p>Em 1984, Yosemite foi selecionada como Patrimônio Mundial, e seus espetaculares penhascos de granito, cachoeiras, riachos, florestas de sequoias gigantes e biodiversidade são reconhecidos internacionalmente </p>
</blockquote>
<p>No caminho para pescar nas montanhas, para Yosemite cerca de 3 horas de carro, vi um grupo de grandes moinhos de vento na estrada<br>Eu me virei e de repente vi o papel de parede do OS X Yosemite<br>Tudo que eu vi na China antes foram montanhas de terra ⛰️, esta é a primeira vez que vejo este granito íngreme e nu<br>De modo que a falsa crença de que montanhas estrangeiras são mais difíceis do que as da China </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-25.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-12.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-14.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-20.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-21.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-24.jpg" alt=""></div></div></div>

<p>Realmente incrível </p>
<p>Assistindo ao pôr do sol no caminho de volta 🌇 em transe </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>USA</tag>
        <tag>🇺🇸</tag>
      </tags>
  </entry>
  <entry>
    <title>🇺🇸-0-1</title>
    <url>/pt/USA-0-1/</url>
    <content><![CDATA[<h2 id="Imperador-americano-0-1"><a href="#Imperador-americano-0-1" class="headerlink" title="Imperador americano -0-1"></a>Imperador americano -0-1</h2><div id="googleMap5773" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap5773'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 12.5,
       'center': new window.google.maps.LatLng( 37.781577 , -122.456913 ),
     },
     target = document.getElementById('googleMap5773'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 37.7781302 , -122.4175138 ),
        'map': map,
        'title': 'Bill Graham Civic Auditorium',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Bill Graham Civic Auditorium'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 37.8019619 , -122.4192982 ),
        'map': map,
        'title': 'Lombard Street',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Lombard Street'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 37.8085488 , -122.41018 ),
        'map': map,
        'title': 'Fisherman&#39;s Wharf',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Fisherman&#39;s Wharf'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 37.7591086 , -122.5116423 ),
        'map': map,
        'title': 'Ocean Beach',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'Ocean Beach'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<p>&lt;! - mais -&gt; </p>
<h2 id="Distintivo"><a href="#Distintivo" class="headerlink" title="Distintivo"></a>Distintivo</h2><p>Vá para Bill Graham Civic Auditorium no dia seguinte<br>Você pode obter crachás se mostrar seu passaporte </p>
<p>A foto está ao lado de <a href="https://en.wikipedia.org/wiki/San_Francisco_City_Hall">San Francisco City Hall</a> </p>
<blockquote>
<p>A Prefeitura de São Francisco é a sede do governo da cidade e do condado de São Francisco, Califórnia. Foi reaberto no espaço aberto do City Civic Center em 1915. É um microcosmo do Renascimento americano dos anos 1880 a 1917 e é um monumento à arte estética. A cúpula do edifício é 12 metros mais alta do que a cúpula do Capitólio dos Estados Unidos. </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-00.jpg" alt=""></div></div></div>

<p>Nos próximos dias, você precisa passar o crachá para entrar no local </p>
<p>Se você perder, uh … Tô azar,  não me importo </p>
<p>Também mandou um casaco feio 🧥<br>Não entendo por que está tão quente que não envio camisetas, mas sim casacos </p>
<p>Depois de entender as peculiaridades de São Francisco, ele morreu no sol<br>A brisa do mar sopra e treme nas sombras<br>Então aquele casaco feio 🧥 desempenhou um papel importante </p>
<p>Quando passei novamente à noite, o local tornou-se 🏳️‍🌈 </p>
<h2 id="LGBT-🏳️‍🌈"><a href="#LGBT-🏳️‍🌈" class="headerlink" title="LGBT 🏳️‍🌈"></a>LGBT 🏳️‍🌈</h2><p>Percebi muito cedo que há pequenas bandeiras coloridas penduradas 🏳️‍🌈, só pensei que era divertido no início, e minha inércia de pensamento estava me perguntando por que não era 🇺🇸 bandeira<br>T que voou de outro estado disse que era LGBT<br>E haverá <a href="https://en.wikipedia.org/wiki/San_Francisco_Pride">The SF LGBT Parade and Celebration</a> no final do mês </p>
<blockquote>
<p>A celebração do orgulho lésbico, gay, bissexual e transgênero de São Francisco (anteriormente conhecido como Dia Internacional da Liberdade Lésbica, Dia da Liberdade Gay, Christopher Street West), comumente conhecida como “Orgulho de São Francisco”, é realizada em São Francisco, Califórnia, no final de junho de cada ano Desfiles e festivais para celebrar pessoas lésbicas, gays, bissexuais e transgêneros (LGBT) e seus aliados. O 49º desfile anual em 2019 incluiu 289 desfiles, que o site oficial chamou de “o maior encontro de pessoas LGBT e aliados nos Estados Unidos”. </p>
</blockquote>
<p>Mais tarde, essa Srta. T disse que tem namorada<br>O pequeno mago que está solteiro há dez mil anos ficou em silêncio por muito tempo e sem palavras </p>
<h2 id="Jiuqu-Flower-Street-lt-https-en-wikipedia-org-wiki-Lombard-Street-San-Francisco-gt"><a href="#Jiuqu-Flower-Street-lt-https-en-wikipedia-org-wiki-Lombard-Street-San-Francisco-gt" class="headerlink" title="[Jiuqu Flower Street](&lt;https://en.wikipedia.org/wiki/Lombard_Street_ (San_Francisco)&gt;)"></a>[Jiuqu Flower Street](&lt;<a href="https://en.wikipedia.org/wiki/Lombard_Street">https://en.wikipedia.org/wiki/Lombard_Street</a>_ (San_Francisco)&gt;)</h2><blockquote>
<p>A seção mais conhecida da Lombard Street é a “Jiuquhua Street” nas colinas russas. Jiuquhua Street é o trecho entre Hyde Street e Leeviworth Street. Isso ocorre porque é a rua mais curva dos Estados Unidos. Há um total de oito curvas fechadas em um pequeno trecho da estrada e apenas o tráfego de mão única da Hyde Street para a Leeviworth Street e descidas é permitido, enquanto o teleférico de São Francisco passa pela China Street. -A Hyde Street Line passa pelo ponto inicial desta seção (ou seja, a localização do ponto mais alto na interseção). Esta seção da rua muito íngreme era originalmente uma linha reta, mas considerando a segurança do tráfego e dos pedestres, esta seção da estrada foi alterada para a curva atual em 1923. [2] Este projeto foi proposto pela primeira vez pelo proprietário Carl Henry. [3] Este projeto visa usar o comprimento em troca de espaço para diminuir o tamanho do declive (27%) ao longo da linha. [4] Toda a rua Jiuquhua tem 600 pés (180 metros) de comprimento e a seção reta tem 412,5 pés (125,7 metros) de comprimento, e o pavimento é pavimentado com tijolos para aumentar o atrito. O ponto de partida é marcado com um limite de velocidade máxima de 5 mph (8 km / h). </p>
</blockquote>
<p>Acredito que todos que leram o D inicial vão pensar em<br><a href="https://www.bilibili.com/bangumi/play/ep4643">Terceiro estágio inicial D</a><br>Takumi vs. Xiaobaihai, Toyota AE86 vs. MR-2<br>55 minutos e 55 segundos de curva </p>
<p>Infelizmente, o 👆 acima é apenas anime </p>
<p>No mundo real<br>Naquela época, eu não tinha carteira de motorista e meus colegas não estavam confiantes em me virar.<br>Então, no final, eles estacionaram o carro 🚗 na beira da estrada e chamaram um Uber para Fisherman’s Wharf<br>E instruiu especificamente o motorista a atravessar a rua Jiuquhua </p>
<p>O motorista é muito compreensivo e diminui a velocidade nas curvas </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-04.jpg" alt=""></div></div></div>

<p>O sol está brilhando, o verde está pingando, as flores estão desabrochando e as flores são coloridas </p>
<p>BTW: Lembre-se de trazer lentes de filtro (mo) 🕶️ </p>
<h2 id="Fisherman’s-Wharf-e-Alcatraz"><a href="#Fisherman’s-Wharf-e-Alcatraz" class="headerlink" title="Fisherman’s Wharf e Alcatraz"></a><a href="https://en.wikipedia.org/wiki/Fisherman%27s_Wharf,_San_Francisco">Fisherman’s Wharf</a> e <a href="https://en.wikipedia.org/wiki/Alcatraz_Island">Alcatraz</a></h2><blockquote>
<p>O nome e as características do bairro de Fisherman’s Wharf de São Francisco vêm de meados ao final do século 19, quando os pescadores imigrantes italianos aproveitaram o fluxo de pessoas trazido pela corrida do ouro aos primeiros dias da cidade. A maioria dos pescadores imigrantes italianos estabeleceu-se na área de North Beach, perto do cais, e pescou iguarias locais e caranguejos Danji. De lá até hoje, o cais ainda é o centro da frota pesqueira de São Francisco. Embora a área tenha sido redesenhada como atração turística nas décadas de 1970 e 1980, ainda existem muitos pescadores ativos e suas frotas. </p>
</blockquote>
<p>Há um grande caranguejo na praça 🦀️ </p>
<p>A mercearia ao lado está cheia de vários produtos feitos na China </p>
<p>Devil 😈 island </p>
<blockquote>
<p>Os visitantes podem pegar uma balsa no Pier 33, localizado entre o San Francisco Ferry Building e o Fisherman’s Wharf, para chegar à ilha em menos de 15 minutos. </p>
</blockquote>
<p>Wharf ⛵️ Existem heróis da Segunda Guerra Mundial, navios de guerra aposentados e submarinos próximos a ele </p>
<p>Algumas pessoas na praça estão tocando música 🎵<br>O que me impressionou foi que ali havia um velho avô tocando uma música muito alegre, como se não houvesse pedestres por perto<br>Isso é fluxo? Para que eu tenha vontade de dar dicas<br>Isso também se tornou um arrependimento de longo prazo </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-10.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-14.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-17.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-18.jpg" alt=""></div></div></div>

<p>Céu azul como envenenado </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-16.jpg" alt=""></p>
<h2 id="Loop-infinito"><a href="#Loop-infinito" class="headerlink" title="Loop infinito"></a>Loop infinito</h2><p>Sempre pensei que a nave era Infinite Loop<br>Como o nome indica, um loop infinito<br>Mas o ganso não é<br>Na verdade, é um parque com um Centro de Visitantes </p>
<p>Não sei se tem uma camiseta comemorativa aqui<br>Eu escolhi um metal </p>
<p>Quanto ao Park<br>Ainda em construção … </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-20.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-21.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-23.jpg" alt=""></div></div></div>

<h2 id="Stanford"><a href="#Stanford" class="headerlink" title="Stanford"></a>Stanford</h2><p>Saiu depois de dar uma volta<br>Eu sinto que fui trazido aqui quando era jovem<br>Talvez você possa tirar mais 50 pontos no vestibular </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-27.jpg" alt=""></div></div></div>

<h2 id="Rota-1-do-estado-da-California"><a href="#Rota-1-do-estado-da-California" class="headerlink" title="Rota 1 do estado da Califórnia"></a>Rota 1 do estado da Califórnia</h2><h2 id="Rodovia-Um-da-California"><a href="#Rodovia-Um-da-California" class="headerlink" title="Rodovia Um da Califórnia"></a>Rodovia Um da Califórnia</h2><p>Quão romântico é o mar do filme, de mãos dadas e caminhando devagar pela praia<br>Tenho vivido dentro do continente<br>Encontre o papel da irmã e vá ver o mar<br>Se tornou um sonho </p>
<p>Eu vi o oceano pacífico antes do mar<br>Praia Ran Goose California<br>A areia é muito espinhosa<br>Não prestei atenção na água do mar 🌊 subiu correndo sem passar pelas pernas da calça<br>O pequeno mago assustado recua novamente e novamente<br>A brisa do mar é salgada e suspeita, e há corpos de algas por toda parte na praia<br>Não há epifania quando vejo o nível do mar<br>Pelo contrário, o sol é particularmente deslumbrante<br>Quando voltei à noite, ele e seu amigo tinham queimaduras de sol de vários graus </p>
<blockquote>
<p>Qualquer parte exposta do corpo - incluindo lóbulos das orelhas, couro cabeludo e lábios - pode ser queimada. Mesmo áreas cobertas podem ser queimadas, por exemplo, se suas roupas têm tramas soltas que permitem a passagem de luz ultravioleta (UV). Seus olhos são extremamente sensíveis aos raios ultravioleta do sol e podem ser queimados </p>
<p>Quando os fótons ultravioleta atingem a pele, eles danificam o DNA das células humanas. Ele faz isso quebrando as ligações ordenadas entre os quatro nucleotídeos da adenosina, timina e guanina. A chamada formação de dímeros de timina significa que, quando dois nucleotídeos de timina são combinados, a forma de toda a molécula de DNA se desequilibra.<br>Células com DNA bagunçado geralmente cometem suicídio, um processo chamado apoptose. As células receberam tanta radiação que sofrem apoptose. </p>
</blockquote>
<p>Constrangedor 😅<br>Experiência muito ruim<br>Nada romântico …<br>Os filmes são todos enganosos </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-36.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-37.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-38.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-34.jpg" alt=""></p>
<h2 id="Soylent-e-iRobot"><a href="#Soylent-e-iRobot" class="headerlink" title="Soylent e iRobot"></a>Soylent e iRobot</h2><p>Hao enfatizou repetidamente que Xiaomi Robot 🤖️ não tem poder de sucção suficiente, então você deve comprar iRobot<br>Os aparelhos norte-americanos são baratos, e basta acompanhar os descontos da série 700 da Amazon 🈹️, mais de 3.000 yuan </p>
<p>Mas naquela época não havia série 900 com navegação visual<br>Ainda é um algoritmo de colisão aleatório. Se você estiver em casa, sentirá o robô 🤖️ super bobo<br>Mas quando voltei do trabalho, descobri que o robô ainda estava na pilha de carregamento e não havia se movido.<br>Se o chão não estiver limpo, achei que era preguiçoso<br>Além disso, a qualidade é muito boa. Derrubei o umidificador quando estava fora.<br>Quando cheguei em casa, peguei muita água e pensei que estava quebrada, então joguei a água. </p>
<p>Frete grátis em Soylent engarrafado, compre uma caixa o mais cedo possível para evitar cama preguiçosa pela manhã </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-25.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-24.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>USA</tag>
        <tag>🇺🇸</tag>
      </tags>
  </entry>
  <entry>
    <title>🇺🇸-0-2</title>
    <url>/pt/USA-0-2/</url>
    <content><![CDATA[<h2 id="WWDC-16"><a href="#WWDC-16" class="headerlink" title="WWDC 16"></a>WWDC 16</h2><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-20.jpg" alt=""></p>
<a id="more"></a>

<p>Participar de tal conferência pela primeira vez é tão animado para explodir 💥<br>Eu comprei Soylent antes e me preocupei com isso<br>Alimentos, frutas e bebidas fora do local ilimitados<br>E almoço saudável </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-17.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-13.jpg" alt=""></div></div></div>

<h2 id="Sessao"><a href="#Sessao" class="headerlink" title="Sessão"></a>Sessão</h2><p>A sessão não é tão importante, afinal, há registro<br>A demonstração ao vivo sempre muda<br>Por exemplo, a irmã mais nova que demonstrou o iMessage de Sticker manteve Crash<br>Depois de mais de dez minutos lançando, finalmente teve sucesso, torcendo na quadra<br>Todos estes foram cortados em gravações posteriores </p>
<p>Swift 2.0, vazamento de memória gráfica, guias vs. espaços, renderização de mecanismo de metal, storyboard </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-03.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-04.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-07.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-09.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-14.jpg" alt=""></div></div></div>

<h2 id="Laboratorio"><a href="#Laboratorio" class="headerlink" title="Laboratório"></a>Laboratório</h2><p>O que realmente importa é o laboratório<br>Você pode trazer perguntas que você não conhece, para uma ** pergunta ** amigável engenheiros da Apple </p>
<p>Embora a linguagem falada não seja boa, fui ao laboratório relevante e fiz algumas perguntas que costumava ficar confuso. </p>
<ol>
<li><a href="https://leihao0.github.io/pt/How-to-add-Xib-on-StoryBoard">Como adicionar Xib no StoryBoard</a> </li>
<li><a href="https://leihao0.github.io/pt/Reflection-in-Swift-via-Mirror">Reflexão em Swift por meio de espelhamento</a> </li>
<li><a href="https://leihao0.github.io/pt/Swift-Generics-in-protocol-and-enum">Swift genérico em protocolo e enumeração</a> </li>
</ol>
<p>Lembre-se de que há uma fofoca sobre porque há uma linha horizontal sob a barra de navegação<br>O engenheiro abriu o código-fonte (Obj-C) e olhou para ele, e então disse que o design exigia isso 😓 </p>
<p>Outro compartilhamento entre meio-campo </p>
<h2 id="Homeland-e-Marvel-Universe"><a href="#Homeland-e-Marvel-Universe" class="headerlink" title="Homeland e Marvel Universe"></a>Homeland e Marvel Universe</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-23.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-25.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-26.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-16.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-15.jpg" alt=""></div></div></div>

<h2 id="A-critica"><a href="#A-critica" class="headerlink" title="A critica"></a>A critica</h2><p>Bash às 19h na quinta à noite </p>
<p>Evitei tais atividades antes<br>Silicon Valley S01E01 retrata essa cena no início<br>O show acima cria desesperadamente uma atmosfera<br>Os programadores abaixo são silenciosos<br>Nem mesmo aplausos perdidos </p>
<p>Mais tarde, os colegas do grupo TL Friends, cujos nomes faltavam apenas uma letra, disseram<br>O efeito é muito bom. Todos balançavam ao som da música, um após o outro, muito alto </p>
<h2 id="Em-torno-da"><a href="#Em-torno-da" class="headerlink" title="Em torno da"></a>Em torno da</h2><p>A fila é longa<br>No entanto, uma jovem em Hangzhou disse que ela deve devolver uma camiseta<br>Eu planejei esperar até o último dia não tem ninguém para comprar<br>Acontece que só existe um modelo infantil … </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-12.jpg" alt=""></div></div></div>

<h2 id="Retorna"><a href="#Retorna" class="headerlink" title="Retorna"></a>Retorna</h2><p>Naquela época, o país e a zona de bloqueio estão agora disponíveis, e você ainda pode pegar elfos aqui </p>
<p>Então volte para fazer as malas e vá para o aeroporto<br>Ajudei meu amigo a trazer um Bose QuietComfort 25 na loja duty-free<br>Devolva o carro e passe na verificação de segurança<br>terminou </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-21.jpg" alt=""></div></div><div class="group-picture-row"></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>USA</tag>
        <tag>🇺🇸</tag>
        <tag>WWDC</tag>
      </tags>
  </entry>
  <entry>
    <title>Nada a dizer</title>
    <url>/pt/Nothing-To-Say/</url>
    <content><![CDATA[<p>Faz muito tempo que não escrevo nada. Talvez escrever inteiramente em inglês seja um obstáculo. </p>
<p>Muita coisa aconteceu nesses dois meses. </p>
<p>Em primeiro lugar, o financiamento da rodada D de minha empresa falhou. </p>
<a id="more"></a>

<p>Nosso CTO teve que reduzir o número de programadores projetando apartamentos em mais de um terço e reduzir três aplicativos para um. Quase metade dos programadores saiu. Parece que tudo voltou ao tempo feliz da rodada B.<br>No entanto, algumas coisas nunca podem voltar. </p>
<p>Meu projeto iterou para a versão 1.6 e foi interrompido. Então, sem trabalho de programação, depois disso, fui para São Francisco para participar do WWDC16. </p>
<p>Em segundo lugar, faça o que quiser. </p>
<p>Portanto, programar é meu trabalho, e é meu ano sabático após o desenvolvedor iOS. </p>
<p>Quando comecei a trabalhar, me inscrevi em muitos blogs de tecnologia, mas eles nunca chamaram minha atenção. Ao mesmo tempo, perdi o interesse por tudo e não queria ver ninguém. </p>
<p>Pode ser causado pela minha falta de hobbies reais.Meu único hobby era programar. </p>
<p>No entanto, depois de ir para Pequim, a super cidade mais deslumbrante do mundo, há dois anos, finalmente tive um tempo extravagante para relaxar meu corpo e espírito. </p>
<p>Terceiro, depois de voltar do SFO, reajustei a importância dos exercícios. Nos países desenvolvidos, quase todas as elites se exercitam. </p>
<p>Quando vi o céu azul por toda parte, vi o vasto oceano Pacífico, as folhas verdes sob o sol e as casas nas montanhas cobertas de névoa.<br>Eu sei que existe um mundo maravilhoso no mundo.<br>Manter seu próprio calor é o mais importante e todo o resto é secundário. </p>
]]></content>
      <tags>
        <tag>Self</tag>
      </tags>
  </entry>
  <entry>
    <title>Use AppleScript como uma tecla de atalho automática no Mac</title>
    <url>/pt/Use-AppleScript-as-AutoHotkey-On-Mac/</url>
    <content><![CDATA[<p>Para fazer um bom trabalho de teste do Soylent 1.6, comprei recentemente mais de 20 caixas.<br>Mas há um problema, o Safari não suporta o preenchimento automático do formulário, então tenho que inserir manualmente todas as informações do meu cartão de crédito para pagar o frete e as taxas alfandegárias. Portanto, tenho que inserir manualmente todas as informações do meu cartão de crédito para calcular as despesas e taxas de envio. </p>
<a id="more"></a>

<p>Todas as etapas de pagamento são apenas número, data, currículo, senha. </p>
<p>Depois de repetir de novo e de novo, desmaiei. </p>
<p>Deve ser automático. </p>
<p>Pelo amor de Deus, quando eu ainda estava usando o Windows há quatro anos, pensei no AutoHotkey. </p>
<p>O Mac possui AppleScript, que pode simular a entrada do teclado e cliques do mouse. </p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">&quot;Safari&quot;</span></span><br><span class="line">	<span class="built_in">activate</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">&quot;System Events&quot;</span></span><br><span class="line">	<span class="keyword">tell</span> process <span class="string">&quot;Safari&quot;</span></span><br><span class="line">		<span class="keyword">set</span> <span class="built_in">frontmost</span> <span class="keyword">to</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">-- you can get the screen coordinate by `cmd+shift+4` easily</span></span><br><span class="line">		click <span class="keyword">at</span> &#123;<span class="number">1420</span>, <span class="number">500</span>&#125;</span><br><span class="line">		<span class="comment">-- delay 1s which is for wait the website to load</span></span><br><span class="line">		<span class="built_in">delay</span> <span class="number">1</span></span><br><span class="line">		click <span class="keyword">at</span> &#123;<span class="number">1305</span>, <span class="number">615</span>&#125;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">delay</span> <span class="number">10</span></span><br><span class="line">		click <span class="keyword">at</span> &#123;<span class="number">1090</span>, <span class="number">369</span>&#125;</span><br><span class="line">		<span class="comment">-- simulate press **6** on keyboard</span></span><br><span class="line">		keystroke <span class="string">&quot;6&quot;</span></span><br><span class="line">		keystroke <span class="string">&quot;6&quot;</span></span><br><span class="line">		keystroke <span class="string">&quot;0&quot;</span></span><br><span class="line">		<span class="comment">-- ...</span></span><br><span class="line">		keystroke <span class="string">&quot;6&quot;</span></span><br><span class="line">		keystroke <span class="string">&quot;4&quot;</span></span><br><span class="line">		<span class="built_in">delay</span> <span class="number">1</span></span><br><span class="line">		click <span class="keyword">at</span> &#123;<span class="number">1083</span>, <span class="number">426</span>&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>E descobri uma coisa interessante no processo, ou seja, ** cvv ** não pode ser clicado pelo script. </p>
<p>Parece que o site do banco realmente fez um trabalho em termos de segurança. </p>
]]></content>
      <tags>
        <tag>Mac</tag>
        <tag>AppleScript</tag>
        <tag>AutoHotkey</tag>
      </tags>
  </entry>
  <entry>
    <title>Dali-0</title>
    <url>/pt/dali-0/</url>
    <content><![CDATA[<p>Depois de retornar do imperador dos EUA, ele começou o modo de fuga </p>
<p>Consulte as atividades da Air China antes de embarcar<br>Pode adicionar dinheiro para fazer upgrade </p>
<p>Lembre-se do ano novo de 2015<br>O CTO brincando comprou primeira classe<br>Os ingressos são tão caros<br>Deve chegar antes da classe econômica </p>
<p>Desta vez é a minha vez de ser realmente incenso<br>Embora não haja primeira chegada<br>Mas embarque prioritário, desembarque prioritário<br>Os amigos que não viram a classe econômica em todo o processo </p>
<hr>
<h2 id="Dali"><a href="#Dali" class="headerlink" title="Dali"></a>Dali</h2><p>Boa impressão geral<br>A homestay é muito arrumada<br>O colchão também é muito confortável </p>
<p>Embora esteja chovendo um pouco, mas alguns<br>A chuva fraca de Tianjie parece uma torrada<br>Eu também comi autêntico e delicioso<br>Yunnan Bridge Noodles </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-01.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-03.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-04.jpg" alt=""></p>
<h2 id="Erhai"><a href="#Erhai" class="headerlink" title="Erhai"></a>Erhai</h2><p>O Lago Erhai em 2016 foi cercado por pousadas<br>Você só pode ver a casa<br>Eu não consigo ver a verdadeira face do Lago Erhai </p>
<p>Além do vazamento programado do telhado<br>Só é possível mudar para um hotel de frente para o Lago Erhai por um preço alto </p>
<p>Um grupo de pessoas sai para assistir a Via Láctea no meio da noite<br>O caminho de volta ao hotel<br>Um cachorro latindo em um beco profundo<br>Um grupo de pessoas se intimidou<br>Mais medo<br>Como se acertasse um monstro<br>Faça pássaros e feras </p>
<p>A garota que estava conversando no hotel<br>Vi um grande grupo de pessoas entrar<br>Pensei que ele foi roubado<br>Nossa eu chorei </p>
<p>Em geral<br>Experiência muito ruim </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-06.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-07.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-08.jpg" alt=""></div></div></div>

<p>Mas os olhos humanos parecem um céu escuro<br>Sob Sony Dafa Alpha 7 apresenta tal cena </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-09.jpg" alt=""></p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Dali</tag>
        <tag>🇨🇳</tag>
      </tags>
  </entry>
  <entry>
    <title>Sincronizar configuração ssh do macOS com o iCloud</title>
    <url>/pt/Sync-macOS-ssh-config-with-iCloud/</url>
    <content><![CDATA[<p>Como desenvolvedor, às vezes preciso restaurar o backup devido ao sistema “beta”. </p>
<p>Felizmente, a maioria dos dados está no servidor atualmente. Não apenas Safari, fotos, calendário, nota, lembretes, mas outros aplicativos também usam armazenamento iCloud. Este é um grande avanço. Eu só preciso reinstalar o sistema e baixar novamente o aplicativo da App Store e <code>brew shell</code>. </p>
<a id="more"></a>

<p>Mas as configurações de ssh, configuração, etc. são muito irritantes. Além disso, posso perder minha chave privada. </p>
<p>Então criei uma nova pasta chamada “macOS” na pasta do iCloud Drive e copiei todos os arquivos sem “.”, Por exemplo: <code>.gitconfig</code> ~&gt;<code>gitconfig</code>. </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">macOS=/Users/art/Library/Mobile\ Documents/com~apple~CloudDocs/macOS</span><br><span class="line"></span><br><span class="line">ln -sf <span class="variable">$macOS</span>/gitignore .gitignore</span><br><span class="line">ln -sf <span class="variable">$macOS</span>/gitignore .gitignore_global</span><br><span class="line">ln -sf <span class="variable">$macOS</span>/gitconfig .gitconfig</span><br><span class="line"></span><br><span class="line">ln -sf <span class="variable">$macOS</span>/zshrc .zshrc</span><br><span class="line">ln -sf <span class="variable">$macOS</span>/config  .config</span><br><span class="line">ln -sf <span class="variable">$macOS</span>/ssh  .ssh</span><br><span class="line"></span><br><span class="line">mkdir -p Blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo </span></span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init Blog</span><br><span class="line"><span class="built_in">cd</span> Blog</span><br><span class="line">npm install</span><br><span class="line">rm -rf <span class="built_in">source</span></span><br><span class="line">ln -s ~/Documents/Blog/<span class="built_in">source</span> ~/Blog/<span class="built_in">source</span></span><br><span class="line"></span><br><span class="line">brew install ruby python pandoc</span><br><span class="line"></span><br><span class="line">brew install openssl youtube-dl ffmpeg pyenv rbenv rclone autojump mp4box</span><br><span class="line"></span><br><span class="line"><span class="comment"># rubi </span></span><br><span class="line">rbenv install 2.7.0</span><br><span class="line">rbenv global 2.7.0</span><br><span class="line"></span><br><span class="line">brew cask install iterm2  sourcetree vmware-fusion flux sublime-text shadowsocksx-ng clashx wwdc spectacle losslesscut iina dropbox typora istat-menus 1password calibre imageoptim plex-media-server vscode osxfuse firefox chromium</span><br><span class="line"></span><br><span class="line"><span class="comment"># antevisão </span></span><br><span class="line">brew cask install qlvideo qlstephen qlcolorcode quicklook-json qlmarkdown qlprettypatch qlimagesize suspicious-package provisionql</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Qualquer unidade de nuvem (como o Dropbox) pode fazer isso, mas.<br>Considerando a privacidade e esta carta escrita por Tim Cook <a href="http://www.apple.com/customer-letter/">Informações para clientes</a> </p>
<p>iCloud é minha escolha 😊 </p>
]]></content>
      <tags>
        <tag>macOS</tag>
        <tag>ssh</tag>
        <tag>sync</tag>
      </tags>
  </entry>
  <entry>
    <title>Como os chineses aprendem inglês</title>
    <url>/pt/How-to-learn-English-as-a-Chinese/</url>
    <content><![CDATA[<p>Como 99% dos estudantes chineses, odeio memorizar palavras de maneiras cruéis. Quando éramos jovens, aprendíamos nossa língua materna naturalmente, sem qualquer dor. </p>
<p>Então, quando eu estava em uma escola primária pobre, nunca me lembrava de uma palavra. </p>
<a id="more"></a>

<p>Na verdade, o fato é que não consigo me lembrar das palavras. Acredite ou não, não importa o quanto eu tente, simplesmente não consigo me lembrar. Cada vez que era minha vez de escrever no quadro-negro desta linha, eu tinha que olhar cuidadosamente para a esquerda e para a direita, copiando palavra por palavra. </p>
<p>Na época, eu era adolescente e estava curioso, por que eles fariam isso? O método deve ser incompatível com meu cérebro. </p>
<p>Felizmente, vi outro método em um livro de grade onde uma ex-campeã anunciou que não memorizava palavras. Tudo o que ela fez foi repetir a NCE em voz alta mais de 100 vezes. </p>
<p>Humph, é muito bom, então tentei. Esse método me ajudou muito porque me permitiu tirar uma nota muito boa no vestibular e passar no CET6 na universidade, até eu às vezes sei disso. O que você está lendo. </p>
<p>Antes do IELTS, todos os primeiros testes de inglês eram apenas uma piada. </p>
<p>E há outro ponto cego que só percebi recentemente. Exames são exames. Você deve dominar os pontos-chave e sair o mais rápido possível. </p>
<p>Antes disso, acreditava firmemente que, à medida que meu nível real melhorasse, eu seria capaz de fazer o exame como faço todos os dias, sem esforço extra. </p>
<p>Mas, na verdade, isso exige pessoas de altíssima qualidade, superando em muito as exigências do exame, é um caminho sem fim. </p>
<p>14 anos se passaram desde que entrei em contato com o inglês pela primeira vez. Depois de me comunicar com o dormitório há alguns meses, sinto que dei apenas um pequeno passo. </p>
<p>Agora eu sei que a linguagem é mais parecida com um instinto humano.Quando o bebê crescer, nossos neurônios cerebrais serão lavados, porque de acordo com a psicologia evolucionista, nossos ancestrais não precisaram aprender outra língua quando eram jovens. </p>
<p>Mas estamos em uma sociedade moderna. Pelo que eu sei, existem apenas dois métodos que parecem razoáveis ​​e, mais importante, a economia. </p>
<ol>
<li><a href="https://www.goodreads.com/book/show/18868451?from_search=true">Use seu inglês</a> </li>
<li>Marca Fonética Americana de Lai Shixiong </li>
<li>ESLPOD </li>
<li>Treino de sotaque americano </li>
<li>Leia pelo menos 10 livros originais todos os anos </li>
<li><a href="http://www.geekonomics10000.com/870">Uma pequena experiência pragmática em aprender inglês</a> </li>
<li>Aprenda 600 palavras GRE todos os dias </li>
<li>Repita de acordo com a curva de esquecimento de Ebbinghaus. </li>
<li>Leitura intensiva </li>
<li>Papéis anteriores </li>
</ol>
<p>Agora você vê, a ironia é que o Artigo 2 me chutou direto ao ponto: Eu quero me lembrar das palavras! </p>
<p>Mas desta vez pelo menos uma coisa é diferente, eu escolhi de acordo com minha vontade. </p>
]]></content>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>Como adicionar Xib no StoryBoard</title>
    <url>/pt/How-to-add-Xib-on-StoryBoard/</url>
    <content><![CDATA[<blockquote>
<p>No livro clássico de gerenciamento de projetos de software de 1975 “Mythical Man Month. Em Essays on Software Engineering, Fred Brooks destacou que, independentemente da linguagem de programação escolhida, um desenvolvedor profissional escreve uma média de 10 linhas de código (LoC) por dia. </p>
</blockquote>
<p>O StoryBoard é propício para salvar linhas de código e melhorar a eficiência. A Apple o recomendará fortemente a cada WWDC e continuará a melhorar. </p>
<a id="more"></a>

<p>Não entendo por que ainda existem muitos líderes de equipe que pedem a seus pobres programadores para escrever UIView de forma programática. </p>
<p>Talvez eles pensem que alguns CustomViews são muito reutilizáveis ​​e, se forem colados no StoryBoard, causarão efeitos colaterais desnecessários. </p>
<p>Portanto, a ideia principal desta solução é condensar CustomViews no Xib e, em seguida, adicioná-lo ao StoryBoard. </p>
<p>Isso requer várias etapas, porque a Apple não oferece suporte direto. </p>
<ol>
<li>Adicione um IBDesignable <code>CustomView.Swift</code> e<code>CustomView.Xib</code> </li>
<li>Defina <code>CustomView.xib-&gt; Placeholder-&gt; File Owner-&gt; Custom Class</code> para<code>CustomView</code> </li>
<li>Crie um novo CustomView programaticamente e carregue a visualização raiz de CustomView.Xib </li>
<li>Adicione uma visualização da raiz com largura e altura iguais nos centros horizontal e vertical no <code>CustomView</code> da função init </li>
<li>Agora você pode arrastar View para StoryBoard e definir sua classe para <code>CustomView</code>, que pode gerar um instantâneo para visualização </li>
</ol>
<p>Mas as subvisualizações de CustomView (como UIButton) não podem ser conectadas a ViewController<code>@ IBOutlet</code> </p>
<p><code>Delegate</code> ou<code>Block</code> podem resolver este problema. </p>
<p>Quanto a mim, sugiro o método <code>Block</code>, porque usei<code>Delegate</code> por meio ano e descobri </p>
<ul>
<li>ViewController terá muitos delegados </li>
<li><code>delegate = self</code> deve escrever<code>viewDidLoad</code> e às vezes <code>= nil</code> em<code>viewDidDisappear</code> </li>
</ul>
<p>O código para <code>Block</code> será menos e mais simples. </p>
<p>Abaixo está o <a href="https://github.com/leihao0/DesignableView">exemplo</a>, o que pode reduzir seu tempo. </p>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Xcode</tag>
      </tags>
  </entry>
  <entry>
    <title>Reflexo em Swift por espelhamento</title>
    <url>/pt/Reflection-in-Swift-via-Mirror/</url>
    <content><![CDATA[<ul>
<li><p>Espelho </p>
<ul>
<li><code>valor</code>: acessa o valor de reflexão original, mas o tipo é Qualquer. </li>
<li><code>valueType</code>: o tipo do valor de reflexão original, equivalente a value.dynamicType. </li>
</ul>
</li>
<li><p>Não encontrei nenhum método para atribuir valor a <code>$ 0.value</code> com objeto Swift puro, então<code>Class</code> herda <code>NSObject</code> como<code>KVC</code>. </p>
</li>
<li><p>Ignorei o caso opcional simplificado. </p>
</li>
<li><p>Gerar recursivamente dicionários ou objetos </p>
</li>
</ul>
<a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="keyword">typealias</span> <span class="type">DynamicKVType</span> = [<span class="type">String</span>: <span class="type">Any</span>]</span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">DynamicKV</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">dict</span><span class="params">()</span></span> -&gt; <span class="type">DynamicKVType</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">assignment</span><span class="params">(<span class="number">_</span> with: DynamicKVType)</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">DynamicKV</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">dict</span><span class="params">()</span></span> -&gt; <span class="type">DynamicKVType</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = <span class="type">DynamicKVType</span>()</span><br><span class="line"></span><br><span class="line">        <span class="type">Mirror</span>(reflecting: <span class="keyword">self</span>).children.forEach &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> k = $<span class="number">0</span>.label <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = $<span class="number">0</span>.value <span class="keyword">as</span>? <span class="type">DynamicKV</span> &#123;</span><br><span class="line">                dict[k] = v.dict()</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dict[k] = $<span class="number">0</span>.value</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dict</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">assignment</span><span class="params">(<span class="number">_</span> with: DynamicKVType)</span></span> &#123;</span><br><span class="line">        <span class="type">Mirror</span>(reflecting: <span class="keyword">self</span>).children.forEach &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> obj = <span class="keyword">self</span> <span class="keyword">as</span>? <span class="type">NSObject</span>, <span class="keyword">let</span> dictV = with[$<span class="number">0</span>.label!], <span class="keyword">let</span> k = $<span class="number">0</span>.label <span class="keyword">else</span> &#123; <span class="built_in">fatalError</span>(<span class="string">&quot;child leak&quot;</span>) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> dkvt = dictV <span class="keyword">as</span>? <span class="type">DynamicKVType</span>, <span class="keyword">let</span> v = $<span class="number">0</span>.value <span class="keyword">as</span>? <span class="type">DynamicKV</span> &#123;</span><br><span class="line">                v.assignment(dkvt)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                obj.setValue(dictV, forKey: k)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>: <span class="title">NSObject</span>, <span class="title">DynamicKV</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s: <span class="type">String</span> = <span class="string">&quot;a&quot;</span></span><br><span class="line">    <span class="keyword">var</span> i: <span class="type">Int</span> = -<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>: <span class="title">NSObject</span>, <span class="title">DynamicKV</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="string">&quot;b&quot;</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="type">A</span>()</span><br><span class="line">    <span class="keyword">var</span> array = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> b = <span class="type">B</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b.dict\t&quot;</span>, b.dict())</span><br><span class="line"></span><br><span class="line">b.assignment([<span class="string">&quot;s&quot;</span>: <span class="string">&quot;bbbbbbb&quot;</span>, <span class="string">&quot;a&quot;</span>: [<span class="string">&quot;s&quot;</span>: <span class="string">&quot;aaaaaaa&quot;</span>, <span class="string">&quot;i&quot;</span>: <span class="number">233</span>], <span class="string">&quot;array&quot;</span>: [-<span class="number">3</span>, -<span class="number">2</span>, -<span class="number">1</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b.assignment\t&quot;</span>, b.s, b.a.s, b.a.i, b.array)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Swift</tag>
      </tags>
  </entry>
  <entry>
    <title>Dicas UITextField e UILabel</title>
    <url>/pt/UITextField-and-UILabel-Tips/</url>
    <content><![CDATA[<h2 id="Dicas-UITextField"><a href="#Dicas-UITextField" class="headerlink" title="Dicas UITextField"></a>Dicas UITextField</h2><h3 id="Adicionar-uma-linha-superior-no-teclado"><a href="#Adicionar-uma-linha-superior-no-teclado" class="headerlink" title="Adicionar uma linha superior no teclado"></a>Adicionar uma linha superior no teclado</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UITextField</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addTopLineOnKeyboard</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> line = <span class="type">UIView</span>(frame: <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, width: <span class="number">2000</span>, height: <span class="number">0.5</span>))</span><br><span class="line">        line.backgroundColor = <span class="string">&quot;979797&quot;</span>.color</span><br><span class="line"></span><br><span class="line">        inputAccessoryView = line</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="So-e-permitido-um-numero-de-preco-com-exatamente-duas-casas-decimais"><a href="#So-e-permitido-um-numero-de-preco-com-exatamente-duas-casas-decimais" class="headerlink" title="Só é permitido um número de preço com exatamente duas casas decimais"></a>Só é permitido um número de preço com exatamente duas casas decimais</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">textField</span><span class="params">(<span class="number">_</span> textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> str = (textField.text! <span class="keyword">as</span> <span class="type">NSString</span>).replacingCharacters(<span class="keyword">in</span>: range, with: string)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> regex = <span class="string">&quot;^([1-9]\\d&#123;0,7&#125;|0)(\\.\\d&#123;0,2&#125;)?$|^$&quot;</span></span><br><span class="line">    <span class="keyword">let</span> predicte = <span class="type">NSPredicate</span>(format: <span class="string">&quot;SELF MATCHES %@&quot;</span>, regex)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  predicte.evaluate(with: str)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Permitido-apenas-de-1-a-100-ou-deixe-em-branco"><a href="#Permitido-apenas-de-1-a-100-ou-deixe-em-branco" class="headerlink" title="Permitido apenas de 1 a 100 ou deixe em branco"></a>Permitido apenas de 1 a 100 ou deixe em branco</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">textField</span><span class="params">(<span class="number">_</span> textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> str = (textField.text! <span class="keyword">as</span> <span class="type">NSString</span>).replacingCharacters(<span class="keyword">in</span>: range, with: string)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1-100 or leave blank</span></span><br><span class="line">    <span class="keyword">let</span> regex = <span class="string">&quot;^[1-9]?\\d|100|[1-9]?$&quot;</span></span><br><span class="line">    <span class="keyword">let</span> predicte = <span class="type">NSPredicate</span>(format: <span class="string">&quot;SELF MATCHES %@&quot;</span>, regex)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  predicte.evaluate(with: str)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Dicas-UILabel"><a href="#Dicas-UILabel" class="headerlink" title="Dicas UILabel"></a>Dicas UILabel</h2><h3 id="Formate-o-numero-do-telefone-celular-para-111-1111-111"><a href="#Formate-o-numero-do-telefone-celular-para-111-1111-111" class="headerlink" title="Formate o número do telefone celular para 111 1111 111"></a>Formate o número do telefone celular para <code>111 1111 111</code></h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">String</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> phoneNumberFormater: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> s = <span class="keyword">self</span>.replacingOccurrences(of: <span class="string">&quot; &quot;</span>, with: <span class="string">&quot;&quot;</span>)</span><br><span class="line">            <span class="keyword">let</span> <span class="built_in">count</span> = s.characters.<span class="built_in">count</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">count</span> &gt; <span class="number">7</span> &#123;</span><br><span class="line">                s.insert(<span class="string">&quot; &quot;</span>, at: s.index(s.startIndex, offsetBy: <span class="number">3</span>))</span><br><span class="line">                s.insert(<span class="string">&quot; &quot;</span>, at: s.index(s.startIndex, offsetBy: <span class="number">8</span>))</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="built_in">count</span> &gt; <span class="number">3</span> &#123;</span><br><span class="line">                s.insert(<span class="string">&quot; &quot;</span>, at: s.index(s.startIndex, offsetBy: <span class="number">3</span>))</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> s</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Destacar-a-substring-do-UILabel-por-determinada-string"><a href="#Destacar-a-substring-do-UILabel-por-determinada-string" class="headerlink" title="Destacar a substring do UILabel por determinada string"></a>Destacar a substring do UILabel por determinada string</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> userInputPhoneNumber = <span class="string">&quot;123&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@IBOutlet</span> <span class="keyword">private</span> <span class="keyword">weak</span> <span class="keyword">var</span> phoneLabel: <span class="type">UILabel!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> phoneNumber:  <span class="type">String</span> = <span class="string">&quot;123456789&quot;</span> &#123;</span><br><span class="line"><span class="keyword">didSet</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> atrStr = <span class="type">NSMutableAttributedString</span>(string: phoneNumber.phoneNumberFormater)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> font = <span class="type">UIFont</span>.systemFont(ofSize: <span class="number">14</span>)</span><br><span class="line">    <span class="keyword">let</span> range = (phoneNumber.phoneNumberFormater <span class="keyword">as</span> <span class="type">NSString</span>).range(of: userInputPhoneNumber.phoneNumberFormater)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> range.location == <span class="number">0</span> &#123;</span><br><span class="line">        atrStr.addAttributes([<span class="type">NSFontAttributeName</span> :  font, <span class="type">NSForegroundColorAttributeName</span>: <span class="type">UIColor</span>.red], range: (phoneNumber.phoneNumberFormater <span class="keyword">as</span> <span class="type">NSString</span>).range(of: userInputPhoneNumber.phoneNumberFormater))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    phoneLabel.attributedText = atrStr</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Xcode</tag>
      </tags>
  </entry>
  <entry>
    <title>Cápsula do tempo no PandoraBox</title>
    <url>/pt/Time-Capsule-on-PandoraBox/</url>
    <content><![CDATA[<p>Meu “OpenWRT” é “PandoraBox” e meu roteador é “Mi mini”.<br>Estas são algumas diferenças sutis em relação ao [wiki] oficial (<a href="https://wiki.openwrt.org/doc/howto/timemachine">https://wiki.openwrt.org/doc/howto/timemachine</a>). </p>
<a id="more"></a>

<h2 id="Programas"><a href="#Programas" class="headerlink" title="Programas"></a>Programas</h2><p><code>Sistema -&gt; Software -&gt; Configuração</code> </p>
<p>Ajuste todo o texto para: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dest root /</span><br><span class="line">dest ram /tmp</span><br><span class="line">lists_dir ext /var/opkg-lists</span><br><span class="line">option overlay_root /overlay</span><br><span class="line">src/gz r2_base http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/base</span><br><span class="line">src/gz r2_management http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/management</span><br><span class="line">src/gz r2_oldpackages http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/oldpackages</span><br><span class="line">src/gz r2_packages http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/packages</span><br><span class="line">src/gz r2_routing http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/routing</span><br><span class="line">src/gz r2_telephony http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/telephony</span><br><span class="line"></span><br><span class="line">src/gz r2_old_packages http://downloads.openwrt.org.cn/PandoraBox/ralink/mt7620_old/packages/</span><br><span class="line">arch all 100</span><br><span class="line">arch noarch 200</span><br><span class="line">arch ralink 300</span><br></pre></td></tr></table></figure>

<p>Então, ssh para o seu PandoraBox </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install shadow-useradd shadow-groupadd</span><br><span class="line"><span class="built_in">cd</span> /usr/lib</span><br><span class="line">ln -s libgcrypt.so.20 libgcrypt.so.11</span><br></pre></td></tr></table></figure>

<p>Para o seu navegador </p>
<p><code>Sistema -&gt; Software -&gt; Ações -&gt; Baixar e instalar o pacote</code> </p>
<ul>
<li>netatalk </li>
<li>avahi-daemon </li>
<li>kmod-usb-storage </li>
<li>kmod-fs-hfsplus </li>
<li>montagem em bloco </li>
</ul>
<p>Não tente “opkg install” como o <a href="https://wiki.openwrt.org/doc/howto/timemachine">wiki</a> disse, caso contrário, você receberá uma mensagem de erro. </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Configuring kmod-fs-hfsplus.</span><br><span class="line">//usr/lib/opkg/info/kmod-fs-hfsplus.postinst: .: line 3: can<span class="string">&#x27;t open &#x27;</span>/etc/functions.sh<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Collected errors:</span></span><br><span class="line"><span class="string"> * pkg_run_script: package &quot;kmod-fs-hfsplus&quot; postinst script returned status 2.</span></span><br><span class="line"><span class="string"> * opkg_configure: kmod-fs-hfsplus.postinst returned 2.</span></span><br></pre></td></tr></table></figure>

<h2 id="Formatar-e-montar"><a href="#Formatar-e-montar" class="headerlink" title="Formatar e montar"></a>Formatar e montar</h2><p>Insira o disco rígido de backup no Mi mini </p>
<p>Use <code>blkid</code> para encontrar seu sda, este é o meu </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/dev/sda3: UUID=<span class="string">&quot;dab3d8b8-a87f-3bfb-9fed-f42934d5bcd6&quot;</span> LABEL=<span class="string">&quot;BackUp&quot;</span> TYPE=<span class="string">&quot;hfsplus&quot;</span> PARTLABEL=<span class="string">&quot;Basic data partition&quot;</span> PARTUUID=<span class="string">&quot;27db40be-8ebe-11e6-9e2e-60f81da8c0cd&quot;</span></span><br></pre></td></tr></table></figure>

<p>Formatar como ext4 (Mi mini falhou ao montar <code>hfsplus</code>, então tentei<code>ext4</code> como troca) </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda3</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd timemachine</span><br><span class="line">useradd -M -G timemachine tmuser</span><br><span class="line">passwd tmuser</span><br><span class="line"><span class="comment"># insira a senha </span></span><br><span class="line"></span><br><span class="line">mkdir /mnt/TimeMachine</span><br><span class="line">chown root:timemachine /mnt/TimeMachine</span><br><span class="line">touch /mnt/TimeMachine/USB_DISK_NOT_PRESENT</span><br><span class="line">chmod 555 /mnt/TimeMachine -R</span><br><span class="line">chmod 444 /mnt/TimeMachine/USB_DISK_NOT_PRESENT</span><br></pre></td></tr></table></figure>

<p>Para o navegador </p>
<p><code>Sistema -&gt; Pontos de montagem -&gt; Pontos de montagem -&gt; Adicionar</code> </p>
<p>Selecione o <code>UUID</code> que você obtém com a montagem<code>blkid</code> para <code>/ mnt / TimeMachine</code>, lembre-se do tamanho<code>xxx</code> MB, <code>save</code> </p>
<p>Você pode ver <code>/ dev / sda3 / mnt / TimeMachine</code> em<code>Sistemas de arquivos montados</code> </p>
<p>Então para o seu ssh </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chown -R tmuser:timemachine /mnt/TimeMachine</span><br></pre></td></tr></table></figure>

<h2 id="Netatalk"><a href="#Netatalk" class="headerlink" title="Netatalk"></a>Netatalk</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/netatalk/afpd.conf</span><br></pre></td></tr></table></figure>

<p>Alterar todo o texto para: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;TimeMachine&quot;</span> -uampath /usr/lib/uams -uamlist uams_dhx2.so -nodebug -nouservol -icon -nosavepassword -mimicmodel RackMac</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/netatalk/AppleVolumes.default</span><br></pre></td></tr></table></figure>

<p>Substitua todo o texto por. (Preencha o xxx que você obteve antes, que é MiB) </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/mnt/TimeMachine TimeMachine volsizelimit:xxx allow:@timemachine rwlist:@timemachine cnidscheme:dbd options:searchdb,usedots,invisibledots,tm</span><br></pre></td></tr></table></figure>

<h2 id="Avahi"><a href="#Avahi" class="headerlink" title="Avahi"></a>Avahi</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/avahi/avahi-daemon.conf</span><br></pre></td></tr></table></figure>

<p>Alterar todo o texto para: </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">server</span>]</span><br><span class="line"><span class="string">host-name=TimeMachine</span></span><br><span class="line"><span class="comment">#domain-name=local</span></span><br><span class="line"><span class="string">use-ipv4=yes</span></span><br><span class="line"><span class="string">use-ipv6=no</span></span><br><span class="line"><span class="string">check-response-ttl=no</span></span><br><span class="line"><span class="string">use-iff-running=no</span></span><br><span class="line"><span class="string">enable-dbus=no</span></span><br><span class="line"><span class="string">allow-interfaces=br-lan</span></span><br><span class="line"></span><br><span class="line">[<span class="string">publish</span>]</span><br><span class="line"><span class="string">publish-addresses=yes</span></span><br><span class="line"><span class="string">publish-hinfo=yes</span></span><br><span class="line"><span class="string">publish-workstation=no</span></span><br><span class="line"><span class="string">publish-domain=yes</span></span><br><span class="line"><span class="comment">#publish-dns-servers=192.168.1.1</span></span><br><span class="line"><span class="comment">#publish-resolv-conf-dns-servers=yes</span></span><br><span class="line"></span><br><span class="line">[<span class="string">reflector</span>]</span><br><span class="line"><span class="string">enable-reflector=no</span></span><br><span class="line"><span class="string">reflect-ipv=no</span></span><br><span class="line"></span><br><span class="line">[<span class="string">rlimits</span>]</span><br><span class="line"><span class="comment">#rlimit-as=</span></span><br><span class="line"><span class="string">rlimit-core=0</span></span><br><span class="line"><span class="string">rlimit-data=4194304</span></span><br><span class="line"><span class="string">rlimit-fsize=0</span></span><br><span class="line"><span class="string">rlimit-nofile=30</span></span><br><span class="line"><span class="string">rlimit-stack=4194304</span></span><br><span class="line"><span class="string">rlimit-nproc=3</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/avahi/services/afpd.service</span><br></pre></td></tr></table></figure>

<p>Substitua todo o texto por: </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; standalone=&quot;no&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">service-group</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;avahi-service.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span> <span class="attr">replace-wildcards</span>=<span class="string">&quot;yes&quot;</span>&gt;</span>Time Capsule<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>_afpovertcp._tcp<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>548<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>_device-info._tcp<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>0<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">txt-record</span>&gt;</span>model=TimeCapsule<span class="tag">&lt;/<span class="name">txt-record</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>_adisk._tcp<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>9<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">txt-record</span>&gt;</span>sys=waMA=XX:XX:XX:XX:XX:XX,adVF=0x100<span class="tag">&lt;/<span class="name">txt-record</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">txt-record</span>&gt;</span>dk1=adVF=0x83,adVN=TimeMachine<span class="tag">&lt;/<span class="name">txt-record</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service-group</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Para o seu navegador </p>
<p><code>System -&gt; Startup`` Enable</code> </p>
<ul>
<li><code>afpd</code> </li>
<li><code>avahi-daemon</code> </li>
</ul>
<p>Reinicie o roteador </p>
<p>Vá para Mac, <code>Preferências do Sistema -&gt; Time Machine -&gt; Selecionar Disco -&gt; Discos Disponíveis -&gt; em&quot; Time Capsule &quot;</code>, você pode ver <code>TimeMachine</code> </p>
]]></content>
      <tags>
        <tag>PandoraBox</tag>
        <tag>OpenWRT</tag>
        <tag>TimeMachine</tag>
        <tag>Capsule</tag>
      </tags>
  </entry>
  <entry>
    <title>Use UIStoryboardSegue para personalizar a transição de apresentação do UIViewController</title>
    <url>/pt/Custom-UIViewController-Presentation-Transitions-with-UIStoryboardSegue/</url>
    <content><![CDATA[<p>A forma mais popular é <code>UIViewControllerAnimatedTransitioning</code> </p>
<a id="more"></a>

<p>Para fazer isso, você deve: </p>
<ul>
<li>Crie uma nova subclasse, que pode ser chamada de “XXXTransitioning”, herdada de “NSObject”, e implemente as duas funções do protocolo “UIViewControllerAnimatedTransitioning”. </li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">transitionDuration</span><span class="params">(using transitionContext: UIViewControllerContextTransitioning?)</span></span> -&gt; <span class="type">TimeInterval</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">animateTransition</span><span class="params">(using transitionContext: UIViewControllerContextTransitioning)</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>Então: <ol>
<li>Crie uma nova instância de “XXXTransitioning” em “ViewController”. </li>
<li>Defina <code>transitioningDelegate = self</code>. </li>
<li>Use UIViewControllerTransitioningDelegate para estender “ViewController” e implementá-lo. </li>
</ol>
</li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">animationController</span><span class="params">(forPresented presented: UIViewController, presenting: UIViewController, source: UIViewController)</span></span> -&gt; <span class="type">UIViewControllerAnimatedTransitioning?</span></span><br></pre></td></tr></table></figure>

<h2 id="dispensar"><a href="#dispensar" class="headerlink" title="dispensar"></a>dispensar</h2><p>Notei que <code>Storyboard Segue</code> tem um<code>Custom</code> </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/CustomUIViewControllerPresentationTransitionsWithUIStoryboardSegue.png" alt=""></p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XXXModalSegue</span>: <span class="title">UIStoryboardSegue</span> </span>&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">perform</span><span class="params">()</span></span> &#123;</span><br><span class="line">    	<span class="keyword">let</span> fromVC = source</span><br><span class="line">        <span class="keyword">let</span> toVC = destination</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> fromView = fromVC.view!</span><br><span class="line">        <span class="keyword">let</span> toView  = toVC.view!</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> (w, h) = (<span class="type">UIScreen</span>.main.bounds.width, <span class="type">UIScreen</span>.main.bounds.height)</span><br><span class="line"></span><br><span class="line">        toView.alpha = <span class="number">0</span></span><br><span class="line">        toView.frame = <span class="type">CGRect</span>(x: w/<span class="number">2</span>, y: <span class="number">0</span>, width: w, height: h)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> window = <span class="type">UIApplication</span>.shared.keyWindow</span><br><span class="line">        window?.insertSubview(toView, aboveSubview: fromView)</span><br><span class="line"></span><br><span class="line">        <span class="type">UIView</span>.animate(withDuration: <span class="number">0.4</span>, animations: &#123;</span><br><span class="line">            toView.alpha = <span class="number">1</span></span><br><span class="line">            toView.frame = toView.frame.offsetBy(dx: -w/<span class="number">2</span>, dy: <span class="number">0</span>)</span><br><span class="line">        &#125;) &#123; (b) <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">self</span>.source.present(<span class="keyword">self</span>.destination, animated: <span class="literal">false</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">            <span class="comment">// OR: self.source.dismiss(animated: false, completion: nil)</span></span><br><span class="line">        s</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>É isso, não há necessidade de codificar <code>delegate</code> e<code>Extension</code>. Simples e limpo :) </p>
]]></content>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Swift comum no protocolo e enum</title>
    <url>/pt/Swift-Generics-in-protocol-and-enum/</url>
    <content><![CDATA[<ul>
<li>O acordo só pode ser usado como uma restrição geral porque tem requisitos próprios ou de tipo relacionado. </li>
<li>O protocolo não permite o uso de parâmetros comuns, mas usa tipos associados. </li>
<li>Não pode se especializar em não universal </li>
</ul>
<a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">BaseReq</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Generic Type T in protocol</span></span><br><span class="line">    <span class="keyword">associatedtype</span> <span class="type">T</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">obj</span><span class="params">(<span class="number">_</span> s:String)</span></span> -&gt; <span class="type">T</span></span><br><span class="line">    <span class="keyword">init</span>(completion:((<span class="number">_</span> res: <span class="type">Result</span>&lt;<span class="type">T</span>&gt;)-&gt;())?)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">BaseReq</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">launch</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> s = <span class="string">&quot;network return string&quot;</span></span><br><span class="line">        obj(s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AReq</span>: <span class="title">BaseReq</span> </span>&#123;</span><br><span class="line">    <span class="comment">// declare the Type of T</span></span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">AObj</span></span><br><span class="line">    <span class="keyword">required</span> <span class="keyword">init</span>(completion:((<span class="number">_</span> res: <span class="type">Result</span>&lt;<span class="type">T</span>&gt;)-&gt;())?) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">obj</span><span class="params">(<span class="number">_</span> s: String)</span></span> -&gt; <span class="type">T</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">T</span>(s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BReq</span>: <span class="title">BaseReq</span> </span>&#123;</span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">BObj</span></span><br><span class="line">    <span class="keyword">required</span> <span class="keyword">init</span>(completion:((<span class="number">_</span> res: <span class="type">Result</span>&lt;<span class="type">T</span>&gt;)-&gt;())?) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">obj</span><span class="params">(<span class="number">_</span> s:String)</span></span> -&gt; <span class="type">T</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">T</span>(s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseObj</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AObj</span>: <span class="title">BaseObj</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> a = <span class="string">&quot;a&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> s: <span class="type">String</span>) &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;a&quot;</span>, s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BObj</span>: <span class="title">BaseObj</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> b = <span class="string">&quot;b&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> s: <span class="type">String</span>) &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;b&quot;</span>, s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Launch</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// static func launch(req: BaseReq) -&gt; BaseReq &#123;</span></span><br><span class="line">    <span class="comment">// 如果你像上面那样写，你会得到。</span></span><br><span class="line">    <span class="comment">// 错误：协议&#x27;BaseReq&#x27;只能作为通用约束使用，因为它有Self或相关的类型要求。</span></span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">launch</span>&lt;U: BaseReq&gt;<span class="params">(req: U)</span></span> -&gt; <span class="type">U</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> s = <span class="string">&quot;network return string&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(req)</span><br><span class="line"></span><br><span class="line">        req.obj(s)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> req</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不能对非通用类型进行特殊化</span></span><br><span class="line"><span class="comment">// enum Result &#123;</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Result</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> suc(<span class="type">T</span>)</span><br><span class="line">    <span class="keyword">case</span> err(<span class="type">Error</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> areq = <span class="type">AReq</span> &#123; (r) <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">switch</span> r &#123;</span><br><span class="line">    <span class="keyword">case</span> .suc(<span class="keyword">let</span> s):</span><br><span class="line">        <span class="comment">//S is AObj,  we can s.a</span></span><br><span class="line">        s.a</span><br><span class="line">    <span class="keyword">case</span> .err(<span class="keyword">let</span> r):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">areq.launch()</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="type">Launch</span>.launch(req: areq)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> breq = <span class="type">BReq</span> &#123; (r) <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">switch</span> r &#123;</span><br><span class="line">    <span class="keyword">case</span> .suc(<span class="keyword">let</span> s):</span><br><span class="line">        <span class="comment">//S is BObj,  we can s.b</span></span><br><span class="line">        s.b</span><br><span class="line">    <span class="keyword">case</span> .err(<span class="keyword">let</span> r):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">breq.launch()</span><br><span class="line"><span class="type">Launch</span>.launch(req: breq)</span><br><span class="line">s</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Swift</tag>
      </tags>
  </entry>
  <entry>
    <title>O software acelera seu aprendizado</title>
    <url>/pt/Softwares-speed-up-your-learning/</url>
    <content><![CDATA[<p>Podcasts e vídeos são um método típico de aprendizagem online, mas são numerosos e a coleta é da natureza humana, como melhorar essa velocidade torna-se mais necessário. </p>
<p>Normalmente, as pessoas podem processar seu idioma nativo em alta velocidade.<br>Quanto a mim, 2x é muito confortável, 3x é aceitável e 4x tem legendas. </p>
<a id="more"></a>

<h2 id="Computador-desktop"><a href="#Computador-desktop" class="headerlink" title="Computador desktop"></a>Computador desktop</h2><p>Alguns anos atrás, quando eu ainda estava na faculdade, eu usava o Windows, o KMPlayer é o melhor de todos os tipos de reprodutores de vídeo, pois outros reprodutores podem apresentar distorção de som ao serem substituídos. Mais tarde, o autor deixou a empresa e reescreveu um novo em <code>C ++</code> e o renomeou <a href="https://potplayer.daum.net/">PotPlayer</a> </p>
<p>No macOS, o Movist é minha primeira escolha. Também é da Coréia do Sul. Nem é preciso dizer que seu esplendor e simplicidade oferecem 4 vezes mais faixas de áudio sem muitas perdas.<br>Outros players como o <a href="https://mpv.io/">MPV</a>, embora forneçam limite de taxa ilimitado (sim, você pode acelerar para qualquer velocidade que desejar) e open source, mas se quiser alterar as configurações padrão, a cada Modifique <code>~ / .config / mpv / mpv.conf</code> sempre. </p>
<h2 id="Versao-movel"><a href="#Versao-movel" class="headerlink" title="Versão móvel"></a>Versão móvel</h2><p>A boa notícia é que os podcasts no iPhone já têm o dobro da funcionalidade (o estranho é que os podcasts do iTunes não têm), e muitos aplicativos de aprendizagem também têm esse recurso útil. </p>
<p>Mas eu não encontrei nenhum aplicativo que forneça mais de 2 vezes a funcionalidade. </p>
<p>De acordo com <a href="https://developer.apple.com/reference/avfoundation/avplayer#//apple_ref/occ/instp/AVPlayer/rate"></a> </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> player = <span class="type">AVAudioPlayer</span>()</span><br><span class="line">player.prepareToPlay()</span><br><span class="line">player.enableRate = <span class="literal">true</span></span><br><span class="line">player.rate = <span class="number">2.0</span></span><br><span class="line">player.play()</span><br></pre></td></tr></table></figure>

<p>Se o áudio for uma mídia baseada em arquivo, parece que isso pode ser feito apenas alterando <code>player.rate = 3.0</code>. Isso causará distorção? </p>
<p>Se um dia eu tiver tempo, vou tentar. </p>
]]></content>
      <tags>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-0-0</title>
    <url>/pt/japan-0-0/</url>
    <content><![CDATA[<div id="googleMap983" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap983'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 11,
       'center': new window.google.maps.LatLng( 35.6388171 , 139.6897329 ),
     },
     target = document.getElementById('googleMap983'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.665289 , 139.7241853 ),
        'map': map,
        'title': 'The National Art Center',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'The National Art Center'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.5471701 , 139.7683526 ),
        'map': map,
        'title': 'Haneda Airport',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Haneda Airport'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.695398 , 139.7018829 ),
        'map': map,
        'title': 'Hotel Gracery Shinjuku',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Hotel Gracery Shinjuku'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<h2 id="Visto-de-retorno-de-tres-anos"><a href="#Visto-de-retorno-de-tres-anos" class="headerlink" title="Visto de retorno de três anos"></a>Visto de retorno de três anos</h2><p>Ao contrário do visto dos EUA, você não pode marcar uma consulta sozinho e só pode ser processado por uma agência de viagens designada </p>
<ul>
<li>Após impostos 25W + </li>
<li>O Taobao envia passaportes, contas de impostos e outros materiais </li>
</ul>
<p>Todo o processo é todo pelo correio, pensei que perderia o item<br>Eu não esperava que fosse feito sem problemas em duas semanas </p>
<h2 id="Classe-executiva"><a href="#Classe-executiva" class="headerlink" title="Classe executiva"></a>Classe executiva</h2><p>A classe executiva e a primeira classe da maioria das companhias aéreas asiáticas são as mesmas </p>
<p>Por exemplo, este modelo Boeing 787 tem apenas quatro assentos em uma fileira 💺<br>Existem janelas em ambos os lados, sem vizinhos, assento de casal no meio<br>1 A área ocupada por assentos da classe executiva == 6 classe econômica </p>
<p>Como a tarifa para as atividades da ANA é apenas duas vezes mais cara, é uma pechincha. </p>
<p>Forneça toalhas quentes a bordo, champanhe e bebidas diversas<br>O almoço pode ser reservado com antecedência para comida japonesa ou ocidental<br>Os talheres foram substituídos por pesados ​​pratos de porcelana e facas e garfos de metal 🍴 </p>
<p>A melhor parte é que o assento pode ser achatado em 180 graus pressionando o pequeno botão<br>WC 🚾 Nunca mais<br>As crianças que tocavam também eram educadas e não choravam muito </p>
<p>O rugido do motor também é muito menor, o fone de ouvido padrão 🎧 é Bose QC 25 </p>
<p>Porque leva apenas 3 horas para voar diretamente para Tóquio </p>
<p>O processo básico é<br>Pegue o avião para comer e beber<br>Veja seu nome<br>Deitar e dormir<br>quase lá </p>
<p>A experiência geral é ótima </p>
<p>Mas a parte de trás da classe executiva está vazia<br>Uma vez preocupado, irei ao Japão na próxima vez<br>ANA, vai fechar </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-04.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-06.jpg" alt=""></div></div></div>

<h2 id="Aeroporto-haneda"><a href="#Aeroporto-haneda" class="headerlink" title="Aeroporto haneda"></a>Aeroporto haneda</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-11.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-19.jpg" alt=""></div></div></div>

<h2 id="Area-de-observacao"><a href="#Area-de-observacao" class="headerlink" title="Área de observação"></a>Área de observação</h2><p>Há um enorme deck de observação no telhado do Aeroporto de Haneda<br>Você pode assistir a aeronave decolar e pousar e sentir o rugido do motor que é mais real do que IMAX </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-14.jpg" alt=""></div></div></div>

<h2 id="Hotel-Gracely-Shinjuku"><a href="#Hotel-Gracely-Shinjuku" class="headerlink" title="Hotel Gracely Shinjuku"></a>Hotel Gracely Shinjuku</h2><p>Eu moro na estação de Shinjuku por conveniência<br>Inesperadamente, foi Godzilla Hotel<br>Tem uma grande cabeça nisso<br>Costumo ver pirataria na China<br>Não estou acostumado a ouvir genuínos </p>
<p>Próximo a ele está Kabukicho<br>Ichiran Ramen é delicioso<br>Às 11 horas da noite, desci para jantar e havia uma longa fila </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-25.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-26.jpg" alt=""></div></div></div>

<h2 id="Crab-Douraku-e-Fenghuang"><a href="#Crab-Douraku-e-Fenghuang" class="headerlink" title="Crab Douraku e Fenghuang"></a>Crab Douraku e Fenghuang</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-34.jpg" alt=""></div></div></div>

<p>Japão é tão limpo<br>Não, deve ser dito que está limpo<br>Este apartamento é uma reminiscência de<br>Dragon Maid Senhorita Kobayashi </p>
<p>Me sinto tão feliz por morar aqui<br>Não sei quanto é o aluguel </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-37.jpg" alt=""></div></div></div>

<h2 id="Novo-Museu-Nacional"><a href="#Novo-Museu-Nacional" class="headerlink" title="Novo Museu Nacional"></a>Novo Museu Nacional</h2><p>Visitando uma galeria de arte pela primeira vez 🎨<br>Totalmente incompreensível<br>Mas não é esse o propósito de visitar o museu? </p>
<p>Saí e vi um pôster<br>Não sei se é um anúncio ou um evento de caridade </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-39.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-40.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-43.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-44.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-45.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-48.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-49.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-50.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-51.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-54.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-55.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-56.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-57.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-62.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-0-1</title>
    <url>/pt/japan-0-1/</url>
    <content><![CDATA[<div id="googleMap2656" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap2656'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 12.5,
       'center': new window.google.maps.LatLng( 35.6888043 , 139.7464185 ),
     },
     target = document.getElementById('googleMap2656'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.6599167 , 139.7287036 ),
        'map': map,
        'title': '六本木ヒルズ展望台',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: '六本木ヒルズ展望台'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.6714459 , 139.6955955 ),
        'map': map,
        'title': '代々木公園',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: '代々木公園'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.7099661 , 139.8098755 ),
        'map': map,
        'title': 'Tokyo Skytree',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Tokyo Skytree'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<h2 id="Roppongi-Hills-Observatory-Tokyo-City-View"><a href="#Roppongi-Hills-Observatory-Tokyo-City-View" class="headerlink" title="Roppongi Hills Observatory Tokyo City View"></a>Roppongi Hills Observatory Tokyo City View</h2><p>Pode olhar ao redor de Tóquio </p>
<p>Esta peça é um grupo de edifícios interligados<br>Diferente de jogos de sandbox abertos<br>Aqui você pode entrar na loja através do modelo </p>
<p>Desta vez eu finalmente percebi o que meu pai disse quando eu era jovem<br>De pé na Torre Pérola Oriental e olhando para baixo<br>O carro é como uma caixa de fósforos e o homem é como uma formiga </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-01.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-04.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-07.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-08.jpg" alt=""></div></div></div>

<p>Embora seja apenas junho, o clima já está quente<br>Eu vi uma fonte feita pelo homem que pode ser borrifada com água e spray para ajudar a dissipar o calor </p>
<p>O interior do edifício sempre teve um sentido de design<br>Eu também conheci um casal de mãos dadas </p>
<p>Então fui comer wagyu yakiniku de verdade<br>Pela primeira vez, experimentei o derretimento na boca </p>
<p>O mais incrível é o preço<br>Não me atrevi a tomar uma xícara de café aqui para ver a paisagem<br>O pensamento habitual achou que seria tão caro quanto um chão<br>Na verdade, é apenas alguns dólares mais caro do que lá embaixo </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-11.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-14.jpg" alt=""></div></div></div>

<h2 id="Parque-Yoyogi"><a href="#Parque-Yoyogi" class="headerlink" title="Parque Yoyogi"></a>Parque Yoyogi</h2><blockquote>
<p>O Parque Yoyogi está localizado neste local. Em 19 de dezembro de 1910, o Capitão Tokugawa Yoshitoshi conduziu o primeiro vôo de avião motorizado bem-sucedido no Japão. A área mais tarde se tornou um campo de desfiles. A partir de setembro de 1945, este local abrigou um quartel militar chamado “Washington Heights” para oficiais americanos durante a ocupação aliada do Japão<br>Em 2014, Tóquio experimentou o pior surto de dengue em 100 anos, e foi o primeiro caso registrado em 70 anos, com quase 200 casos confirmados. </p>
</blockquote>
<p>Inesperadamente, houve um surto de dengue </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-19.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-20.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-21.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-22.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-25.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-27.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-28.jpg" alt=""></div></div></div>

<p>Eu costumava sair com artérias de 1,5L<br>Existem máquinas de venda automática em todo o Japão, então você não precisa trazer água<br>A única coisa embaraçosa é que não tem lixeira. Depois de beber, só consigo segurar a garrafa. Estou ansioso para a próxima máquina de venda automática com lixeira. </p>
<p>WC também fornece LGBT 🏳️‍🌈 </p>
<p>Passando por Kaminarimon, há um pequeno pôster de exposição de trem próximo a ele </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-32.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-33.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-34.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-35.jpg" alt=""></div></div></div>

<h2 id="Aquario-Sumida"><a href="#Aquario-Sumida" class="headerlink" title="Aquário Sumida"></a>Aquário Sumida</h2><p>Sob a árvore do céu está um aquário </p>
<p>Nemo de Procurando Nemo?<br>Caranguejo eremita, lagosta, lula<br>Poder submarino … </p>
<p>🐠 🦞 🦑 </p>
<p>Funcionários varrendo o chão do aquário </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-57.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-37.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-39.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-41.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-43.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-44.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-47.jpg" alt=""></div></div></div>

<p>Claro que saíram como souvenirs<br>Todos os tipos de animais submarinos peludos que são tão fofos<br>Quase não pude deixar de comprar um de volta como travesseiro </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-48.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-49.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-50.jpg" alt=""></div></div></div>

<h2 id="Ataque-ao-tita"><a href="#Ataque-ao-tita" class="headerlink" title="Ataque ao titã"></a>Ataque ao titã</h2><p>Bem a tempo para o tema do Ataque ao Titã<br>Uma pena nao ter visto<br>Não sei quem são esses dois<br>Sem ondas </p>
<p>Depois de adicionar este anime<br>Felizmente, dei um tapinha no Capitão e no Allen. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-53.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-36.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-52.jpg" alt=""></div></div></div>

<h2 id="Tokyo-Sky-Tree"><a href="#Tokyo-Sky-Tree" class="headerlink" title="Tokyo Sky Tree"></a>Tokyo Sky Tree</h2><p>Acontece que esta torre não foi construída apenas para os pontos turísticos de Gaohe, mas também para uma estação de rádio. </p>
<blockquote>
<p>A torre é a principal estação de TV e transmissão da região de Kanto; a antiga Torre de Tóquio é cercada por prédios altos, portanto, não pode mais fornecer cobertura completa de transmissão de TV digital terrestre. O edifício Skytree foi concluído no dia 29 de fevereiro de 2012<br>Tokyo Skytree também é semelhante ao histórico pagode de 5 andares do Japão. [11] A parte inferior da torre possui uma estrutura semelhante a um tripé; a partir de uma altura de cerca de 350 m (1.150 pés) ou mais, a estrutura da torre é cilíndrica, permitindo vistas panorâmicas do rio e da cidade. [12] Há um observatório que pode acomodar 2.000 pessoas a 350 m (1.150 pés) e um observatório que pode acomodar 900 pessoas a 450 m (1.480 pés). [13] O observatório superior tem uma passarela em espiral coberta de vidro, e os visitantes podem subir ao ponto mais alto da plataforma superior nos últimos 5 metros. Uma parte do piso de vidro permite que os visitantes vejam diretamente a rua abaixo.<br>A torre é à prova de terremotos e inclui um poço central de concreto armado. O pilar interno principal é conectado à primeira estrutura de torre externa 125 metros (410 pés) acima do solo. De lá, até 375 metros (1.230 pés), os pilares são fixados à torre por amortecedores, que funcionam como almofadas durante o terremoto. A elasticidade adicional é obtida por meio de “mecanismos adicionais de controle de qualidade” (ou amortecedores de massa sintonizados) - um sistema de amortecimento que, em caso de terremoto, ficará fora de sincronia com a estrutura do edifício para manter o centro de gravidade o mais próximo possível da torre fundo de. [15] De acordo com o projetista, o amortecedor pode absorver 50% da energia em um terremoto </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-58.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-60.jpg" alt=""></div></div></div>

<p>Eu tenho medo de altura<br>Eu me pergunto se é uma ilusão<br>Sinta a torre balançar ligeiramente </p>
<p>Não tenho medo<br>Realmente tremendo<br>Depois de subir, o corpo continua caminhando para dentro<br>Tenha coragem de olhar para o vidro do lado de fora </p>
<p>O piso de vidro no ponto mais alto está bom, um pouco irreal<br>Uma tentativa de passo 🦶 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-51.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-55.jpg" alt=""></div></div></div>

<h2 id="Retorna"><a href="#Retorna" class="headerlink" title="Retorna"></a>Retorna</h2><p>Depois que voltei, aproveitei o hotel e joguei fora todo tipo de lixo.<br>Nenhum lixo pode realmente doer 😂 </p>
<p>Olhei pela janela<br>Um bom tempo </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-63.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-64.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-66.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-65.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-67.jpg" alt=""></div></div></div>

<p>Em seguida, pegue um táxi 🚖 para o aeroporto de Haneda<br>10 w ienes 💴 é isso </p>
<p>Ouvi dizer que os idosos aqui dirigem táxis 🚕<br>Testemunhe como ter coração para deixar o vovô carregar a bagagem 🧳 </p>
<p>Ainda é cedo após o check-in, então vim para o ANA First Class Lounge<br>Fornecimento ilimitado de frutas, leite, bebidas, pão e bolos<br>🍉 🥛 🥤 🍞 🍰<br>Eu realmente senti falta do banho<br>🛀 😂 </p>
<p>Eu vi o Monte Fuji no avião 🗻<br>Porque estou lotado na sala<br>Eu tive que dormir bem 💤 </p>
<p>Então terminou esta primeira viagem curta 🇯🇵 Japão </p>
<p>Eu realmente gosto da limpeza e ordem do Japão<br>Os sapatos que comprei ainda são como os que acabei de comprar até sair </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-68.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-69.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-70.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-71.jpg" alt=""></div></div></div>

<p>Visto de ida e volta de três anos<br>Voltarei na próxima vez </p>
<p>✌️✌️✌️ </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇮🇹-0-0</title>
    <url>/pt/italy-0-0/</url>
    <content><![CDATA[<div id="googleMap8762" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap8762'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 10,
       'center': new window.google.maps.LatLng( 40.6973724 , 14.1294367 ),
     },
     target = document.getElementById('googleMap8762'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 40.853053 , 14.1791543 ),
        'map': map,
        'title': 'Naples',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Naples'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 40.8223812 , 14.4113963 ),
        'map': map,
        'title': 'Mount Vesuvius',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Mount Vesuvius'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 40.7466183 , 14.4761726 ),
        'map': map,
        'title': 'Pompei',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Pompei'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 40.6237862 , 14.3576818 ),
        'map': map,
        'title': 'Sorrento',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'Sorrento'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
     
     
     var opts4 = {
        'position': new window.google.maps.LatLng( 40.5489025 , 14.1960389 ),
        'map': map,
        'title': 'Capri',
        'zIndex' : 4,
        'icon': ''
      };

     var infowindow4 = new window.google.maps.InfoWindow({
       content: 'Capri'
     });

     var marker4 = new window.google.maps.Marker(opts4);

     marker4.addListener('click', function(){
       infowindow4.open(map, marker4)
     })
     
     
     var opts5 = {
        'position': new window.google.maps.LatLng( 0.6295773 , 14.4769233 ),
        'map': map,
        'title': 'Positano',
        'zIndex' : 5,
        'icon': ''
      };

     var infowindow5 = new window.google.maps.InfoWindow({
       content: 'Positano'
     });

     var marker5 = new window.google.maps.Marker(opts5);

     marker5.addListener('click', function(){
       infowindow5.open(map, marker5)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<p>从日本 🇯🇵 回来不到三个月赶上国庆大长假</p>
<p>因为办了美帝签证和日本三年往返签证<br>材料准备的一堆继续用<br>所以申根签证没怎么担心</p>
<h2 id="罗马"><a href="#罗马" class="headerlink" title="罗马"></a>罗马</h2><p>从帝都做意大利航空经过 11 小时飞到罗马 🇷🇴</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-04.jpg" alt=""></div></div></div>

<h2 id="索伦托"><a href="#索伦托" class="headerlink" title="索伦托"></a>索伦托</h2><p>不同于常见的第一次飞意大利的向北<br>罗马-弗洛伦萨-米兰-威尼斯 路线</p>
<p>小伙伴们反向操作<br>做小火车一路往南来到 索伦托</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-14.jpg" alt=""></div></div></div>

<p>远处的那个小山包应该就是 维苏威 了</p>
<p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.334ex" xmlns="http://www.w3.org/2000/svg" width="25.282ex" height="4.68ex" role="img" focusable="false" viewBox="0 -1479 11174.6 2068.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(742.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(1798.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(925, 394) scale(0.707)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g><g data-mml-node="mrow" transform="translate(220, -515.3) scale(0.707)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="msqrt" transform="translate(571, 0)"><g transform="translate(853, 0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g></g><g data-mml-node="mo" transform="translate(0, 112.6)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="1070" height="42.4" x="853" y="870.1"></rect></g></g><rect width="1963.5" height="60" x="120" y="220"></rect></g><g data-mml-node="TeXAtom" transform="translate(2203.5, 599.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(778, 0)"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(572, 363)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1511, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(2289, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(490, 363)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="msup" transform="translate(3329, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(389, 363)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mrow" transform="translate(1155.9, -515.3) scale(0.707)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="msup" transform="translate(500, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(571, 289)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><rect width="3217.9" height="60" x="120" y="220"></rect></g></g></g><g data-mml-node="mo" transform="translate(7047.3, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(7492, 0)"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(8340.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(9396.6, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500, 0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778, 0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1278, 0)"></path></g></g></g></svg></mjx-container></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-100.jpg" alt=""></div></div></div>

<h2 id="庞贝古城"><a href="#庞贝古城" class="headerlink" title="庞贝古城"></a>庞贝古城</h2><blockquote>
<p>在灰烬下保存了大量的出土城市，提供了一个独特的罗马生活的缩影，在它被埋葬的那一刻，它被冻结了，并提供了对其居民日常生活的异常详细的洞察，尽管许多证据在早期的挖掘中丢失了。这是一个富裕的城市，享有许多精美的公共建筑和豪华的私人住宅，其奢华的装饰、家具和艺术品是早期发掘者的主要吸引力。包括木制物品和人体在内的有机残骸被埋在灰烬中，腐烂后留下空隙，考古学家发现这些空隙可以用作模具，在生命的最后时刻制作独特的、往往是可怕的人物的石膏模型。墙壁上和房间内刻有大量的涂鸦，提供了大量的例子，说明了当时已基本失传的俗语拉丁语，与古典作家的正式语言形成鲜明对比。<br>庞贝是联合国教科文组织的世界文化遗产，是意大利最受欢迎的旅游景点之一，每年约有 250 万游客前来参观。</p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-17.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-19.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-24.jpg" alt=""></div></div></div>

<h2 id="维苏威火山大爆发"><a href="#维苏威火山大爆发" class="headerlink" title="维苏威火山大爆发"></a>维苏威火山大爆发</h2><blockquote>
<p>下午 1 点左右，维苏威火山猛烈喷发，喷出高空的火山柱，火山灰和浮石开始落下，笼罩了整个地区。在此期间，发生了一些救援和逃生事件。在夜间或第二天早些时候，火山附近开始出现火成岩流。在山上看到的灯光被解释为火灾。远在米塞努姆的人们纷纷逃命。火山碎石流移动迅速、密度大、温度高，全部或部分地摧毁了路径上的所有结构，焚烧或窒息了剩余的人口，并改变了景观，包括海岸线。与此同时，那不勒斯湾还发生了轻微的地震和轻微的海啸。到了第二天傍晚，火山喷发已经结束，只在大气中留下了雾气，阳光微弱地照射着。<br>年轻的普林尼写了一篇关于火山喷发的记录。<br>宽大的火焰照亮了维苏威火山的许多地方；它们的光和亮度比黑夜更生动……世界其他地方现在是白天，但那里的黑暗比任何夜晚都要黑暗和浓重。</p>
</blockquote>
<h3 id="庞贝大剧院"><a href="#庞贝大剧院" class="headerlink" title="庞贝大剧院"></a>庞贝大剧院</h3><blockquote>
<p>庞贝的剧场区位于城市的西南部地区。构成这一区域的主要建筑有三座：大剧院、颂歌厅（小剧场）和四合院。这里作为城市的娱乐和会议中心。<br>大剧院建于公元前二世纪的一座天然山丘上。这座剧院大约可容纳 5000 名观众，是罗马最初的永久性石质剧院之一。<br>剧院在现代一直被用来举办音乐会、歌剧和戏剧。2008 年，开始进行修复工作，以便能够进一步进行戏剧和音乐表演。重新开放后，2014 年上演了普契尼的《波西米亚》和比才的《卡门》。</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-27.jpg" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-29.jpg" alt=""></div></div></div>

<p>远远到黑云压压的火山 🌋<br>很难想象岩浆可以覆盖到这里</p>
<h3 id="庞贝竞技场"><a href="#庞贝竞技场" class="headerlink" title="庞贝竞技场"></a>庞贝竞技场</h3><blockquote>
<p>现在的圆形剧场大约建于公元前 70 年，是目前已知最早的罗马圆形剧场，是用石头建造的，以前都是用木头建造的。<br>除了作为历史地标和考古研究对象外，露天剧场在现代还被用于举办音乐会和其他公共活动。</p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-28.jpg" alt=""></div></div></div>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-32.jpg" alt=""></p>
<h2 id="维苏威火山"><a href="#维苏威火山" class="headerlink" title="维苏威火山"></a>维苏威火山</h2><blockquote>
<p>公元 79 年维苏威火山的爆发摧毁了罗马的庞贝、赫库兰尼姆、奥普隆提斯和斯塔比亚等城市以及其他几个定居点，最终释放的热能是广岛和长崎原子弹爆炸所释放的热能的 10 万倍。<br>维苏威火山此后多次喷发，是欧洲大陆上唯一一座在过去一百年内喷发的火山。今天，维苏威火山被认为是世界上最危险的火山之一，因为它附近有 300 万人生活在足以受到火山爆发影响的地方，其中 60 万人处于危险区，使它成为世界上人口最稠密的火山地区，而且它还倾向于发生普利尼亚式的暴力爆炸性喷发。</p>
</blockquote>
<blockquote>
<p>维苏威火山是由非洲板块和欧亚板块这两个板块碰撞形成的。前者在后者的下方俯冲，深入地底。当大洋性非洲板块的水饱和沉积物被推到地球内部更热的深处时，水沸腾了，降低了上层地幔的熔点，足以使岩石部分熔化。由于岩浆的密度比周围的固体岩石小，所以它被向上推。找到了地球表面的薄弱点，岩浆冲破了，从而形成了火山。</p>
</blockquote>
<blockquote>
<p>1995 年 6 月 5 日，维苏威火山周围地区被正式宣布为国家公园。维苏威火山顶峰对游客开放，火山周围有一个小的道路网，周末由公园当局维护。在距离山顶 200 米(660 英尺)以内的地方(垂直测量)可以通过公路进入，但此后只能步行进入。从公路到火山口有一条环绕火山的螺旋形通道。</p>
</blockquote>
<p>之前以为是小山包<br>实际过来还是还蛮大的，海拔约 1km</p>
<p>如上面所诉<br>做巴士盘山上升，最后一段斜坡需要自己走上去<br>最好穿紧致的鞋子，不然都是火山灰</p>
<p>火山口内部没有岩浆，但有些地方在冒烟</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-38.jpg" alt=""></div></div><div class="group-picture-row"></div><div class="group-picture-row"></div></div>

<p>有些云下面像是有东西托着一样整整齐齐<br>有些不时的迎面扑来<br>让人联想到 《降临》 里云飘过山峰的场景<br>这次真的站在云彩里了</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-40.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-41.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-48.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-49.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-50.jpg" alt=""></p>
<h2 id="波西塔诺"><a href="#波西塔诺" class="headerlink" title="波西塔诺"></a>波西塔诺</h2><blockquote>
<p>波西塔诺是一个梦乡，你在时，她不是很真切，你离开后，她变的栩栩如生。</p>
</blockquote>
<p>这种建在山上的小房子就很奇特，跑酷的绝佳场所<br>曾经玩刺客信条时， Ezio 就是在意大利翻檐走壁</p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-53.jpg" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-55.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-57.jpg" alt=""></div></div></div>

<p>海边有小艇可以出海</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-62.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-63.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-68.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-69.jpg" alt=""></div></div></div>

<p>回来时已经晚上了<br>灯火通明像是电影里的场景</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-65.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-66.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-67.jpg" alt=""></p>
<blockquote>
<p>丁达尔效应是胶体中或极细悬浮液中的粒子对光的散射。也被称为丁达尔散射，它与瑞利散射相似(Aldnoah Zero)，散射光的强度与波长的四次方成反比，所以蓝光比红光散射得更强烈。</p>
</blockquote>
<p>仿佛魔戒一样</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-70.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-71.jpg" alt=""></div></div></div>

<h2 id="卡普里岛"><a href="#卡普里岛" class="headerlink" title="卡普里岛"></a>卡普里岛</h2><blockquote>
<p>除了是作家和艺术家的天堂，卡普里也是外国男同性恋者相对安全的地方，他们可以过上更开放的生活；他们中的一小部分人被吸引到那里生活，在一定程度上与上面提到的创造性类型重叠。</p>
</blockquote>
<p>小艇绕行一周大概一小时<br>可惜小伙伴要提前回去赶飞机<br>所以只绕了 1/2 就回去了</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-74.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-76.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-77.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-86.jpg" alt=""></div></div></div>

<h2 id="蓝洞"><a href="#蓝洞" class="headerlink" title="蓝洞"></a>蓝洞</h2><blockquote>
<p>当光线通过水面进入洞窟时，红色的反射被过滤掉，只有蓝光进入洞窟。放在石窟水中的物体，著名的是呈现银色。这是由于细小的气泡造成的，当它们被放置在水下时，气泡覆盖在物体的外面。这些气泡导致光线折射的方式与周围的水不同，从而产生了银色效果。</p>
</blockquote>
<blockquote>
<p>部分原因是由于水面上的洞口发出的光有耀眼的效果，洞中的水比空气中的光更充沛。游客将手放在水中，可以看到水在这种光线下诡异地 “发光”。</p>
</blockquote>
<p>小艇的人和我们介绍岛上有最蓝的蓝洞<br>信以为真<br>晚上回去听隔海相望的在西班牙 🇪🇸 旅游的财务总监也说看到了最蓝的蓝洞</p>
<p>和她说一定是被骗子骗了<br>毕竟蓝洞只有</p>
<ul>
<li>蓝色洞穴（Biševo），克罗地亚的 Biševo 岛上的一个山洞</li>
<li>蓝色洞穴（卡普里岛），意大利卡普里岛上的一个山洞</li>
<li>蓝色洞穴（Kastelorizo​​），希腊的梅吉斯蒂岛（Kastelorizo​​）上的一个洞穴</li>
<li>蓝洞（马耳他），在马耳他的一个山洞</li>
<li>蓝洞，布鲁克林大桥曼哈顿尽头的区域</li>
<li>Grotta dello Smeraldo，在意大利阿马尔菲海岸的一个山洞</li>
</ul>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-88.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-89.jpg" alt=""></div></div></div>

<h2 id="地中海蓝"><a href="#地中海蓝" class="headerlink" title="地中海蓝"></a>地中海蓝</h2><p>不同于之前在加州见到的太平洋蓝<br>这地中海蓝像是浓稠的染料</p>
<blockquote>
<p>地中海几乎是内陆，这影响了地中海的条件：例如，由于与大西洋的狭窄连接，潮汐非常有限。地中海的特点是，它的深蓝色让人一目了然。</p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-83.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-79.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-78.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-85.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-84.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-93.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Italy</tag>
        <tag>🇮🇹</tag>
      </tags>
  </entry>
  <entry>
    <title>🇮🇹-0-1</title>
    <url>/pt/italy-0-1/</url>
    <content><![CDATA[<div id="googleMap628" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap628'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 6.5,
       'center': new window.google.maps.LatLng( 39.286304 , 13.3756614 ),
     },
     target = document.getElementById('googleMap628'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 40.8419184 , 14.2594855 ),
        'map': map,
        'title': 'Naples',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Naples'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 38.1405228 , 13.2872492 ),
        'map': map,
        'title': 'Palermo',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Palermo'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 37.8548943 , 15.2784163 ),
        'map': map,
        'title': 'Taormina',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Taormina'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<h2 id="Napoles"><a href="#Napoles" class="headerlink" title="Nápoles"></a>Nápoles</h2><p>À noite, saia de Nápoles e vá para Palermo de barco </p>
<p>A boia salva-vidas suspensa e o bote salva-vidas não podem deixar de lembrar as pessoas do Titanic </p>
<p>Na verdade, este navio é muito maior que o Titanic<br>Pode lidar com todo o estacionamento ao lado do carro<br>No calmo Mediterrâneo novamente, não há icebergs, não se preocupe com navios afundando<br>Você também pode ver este enorme navio de cruzeiro no Google Maps<br>A cabana é pequena, mas tem um banheiro separado, e também pode ser quente e chuvoso </p>
<p>A cabine balançando e a sirene são muito hipnóticas </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-03.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-02.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-04.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-05.jpg" alt=""></div></div></div>

<p>Lutando para se levantar no dia seguinte para ver o nascer do sol 🌄 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-08.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-16.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-14.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-17.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-21.jpg" alt=""></div></div></div>

<p>Ainda não estava lá<br>Sem tempo para pinças<br>Sem ondas encolhem<br>Gaivota voando para trás </p>
<p>🌊 🐦 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-18.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-24.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-26.jpg" alt=""></div></div></div>

<h2 id="Sicily"><a href="#Sicily" class="headerlink" title="Sicily"></a>Sicily</h2><h3 id="Palermo"><a href="#Palermo" class="headerlink" title="Palermo"></a>Palermo</h3><p>Meus amigos alugaram um quarto com vista para o mar<br>Cerca de três andares, há um eco<br>A decoração é bem siciliana </p>
<p>Não muito longe de Al Cantastorie<br>Embora a pontuação seja muito baixa e o cheiro de praia seja muito forte<br>Mas este espaguete de lagosta é realmente delicioso<br>Eu nunca encontrei essa prática novamente em minha jornada subsequente </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-27.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-28.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-29.jpg" alt=""></div></div></div>

<ul>
<li>B &amp; B Theatre Theatre </li>
<li>Four Songs Square (Palermo) </li>
<li>Catedral de Palermo </li>
</ul>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-32.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-34.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-36.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-37.jpg" alt=""></div></div></div>

<p>Como uma nota adesiva com letras escarlates<br>Algumas ruas ao lado da residência, você precisa ter cuidado para pisar na merda em todos os lugares<br>Afetou muito a experiência de jogo </p>
<p>Obviamente, para evitar problemas desnecessários, o bilhete foi secretamente arrancado por outro amigo antes de sair </p>
<p>Mas eu não aguento. A capital da Sicília, Palermo, virou uma merda de cidade </p>
<h3 id="Taormina"><a href="#Taormina" class="headerlink" title="Taormina"></a>Taormina</h3><p>Farto de merda<br>A análise de resumo deve ser devido ao endereço do Airbnb<br>Cancelamento de inscrição em todas as próximas Airbnb<br>Apresse-se e reserve o Eurostar Monteduro e Rome Marriott Park </p>
<p>Espere até taormina<br>Eu me sinto feliz instantaneamente porque vivo confortavelmente<br>Jogue UNO na piscina à noite </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-39.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-40.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-41.jpg" alt=""></div></div></div>

<h3 id="Sorvete"><a href="#Sorvete" class="headerlink" title="Sorvete"></a>Sorvete</h3><p>O sorvete italiano é muito especial<br>Vagueie por todo o caminho e coma por todo o caminho, compre quando encontrar<br>Eu tenho medo de não poder comer de novo </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-47.jpg" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-43.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-44.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-45.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-48.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-51.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-53.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-54.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-55.jpg" alt=""></div></div></div>

<h3 id="Perolas-jonicas"><a href="#Perolas-jonicas" class="headerlink" title="Pérolas jônicas"></a>Pérolas jônicas</h3><p>Há um caminho estreito, o mar está constantemente a limpar, pode ir a pé até à ilha<br>Ver os outros de um lado para outro é como andar sobre a água<br>Eu tentei sozinho e afundei constantemente<br>Quando o mar subiu, havia sinais de escorregamento </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-63.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-64.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-65.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-66.jpg" alt=""></div></div></div>

<h2 id="Suprema-Corte"><a href="#Suprema-Corte" class="headerlink" title="Suprema Corte"></a>Suprema Corte</h2><p>Voe de volta para Roma<br>Aprovado pelo Supremo Tribunal<br>Realmente tem características históricas </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-75.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-74.jpg" alt=""></p>
<p>Chegou ao Marriott descobri que as instalações são um pouco ruins<br>Não há Wi-Fi gratuito e lã adicional é necessária para a ativação<br>O Livro de Mórmon e o Novo Testamento estão na gaveta </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-69.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-76.jpg" alt=""></div></div><div class="group-picture-row"></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Italy</tag>
        <tag>🇮🇹</tag>
      </tags>
  </entry>
  <entry>
    <title>Aprendizado de máquina pela Stanford University</title>
    <url>/pt/Machine-Learning-by-Stanford-University/</url>
    <content><![CDATA[<p>Este é um registro do meu processo de tentar aprender aprendizado de máquina no curso. </p>
<p>Eu ouvi falar de inteligência artificial há um ano, mas como um homem velho que tem dificuldade em aceitar coisas novas, ele realmente não a estudou.<br>Mas pareço perder meu emprego nesta geração da revolução da AI🤖️. Portanto, vou estudar muito.<br>No entanto, estou muito velho para aprender, nem tenho confiança para garantir que um dia vou dominar. </p>
<p>😂😂😂 </p>
<a id="more"></a>

<hr>
<h2 id="1-Regressao-Linear-com-Uma-Variavel"><a href="#1-Regressao-Linear-com-Uma-Variavel" class="headerlink" title="1 Regressão Linear com Uma Variável"></a>1 Regressão Linear com Uma Variável</h2><h2 id="2-Regressao-Linear-com-Variaveis-Multiplas"><a href="#2-Regressao-Linear-com-Variaveis-Multiplas" class="headerlink" title="2 Regressão Linear com Variáveis Múltiplas"></a>2 Regressão Linear com Variáveis Múltiplas</h2><h3 id="ex1"><a href="#ex1" class="headerlink" title="ex1"></a>ex1</h3><p>A parte de codificação é a minha favorita, eu gosto de codificação 😄 </p>
<h4 id="ComputeCost"><a href="#ComputeCost" class="headerlink" title="ComputeCost"></a>ComputeCost</h4><p>Você vê, a função de custo aqui<br>(OMG: o código da fórmula é <code>J (\ theta) = \ cfrac {1} {2m} \ sum \ limits_ {i = 1} ^ {m} (h_ \ theta (x ^ {(i)}) - y ^ {(i)}) ^ 2</code> na redução) 🤯 </p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="30.615ex" height="6.484ex" role="img" focusable="false" viewBox="0 -1620 13532 2865.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(3213.6, 0)"><g data-mml-node="mrow" transform="translate(659, 760)"><g data-mml-node="mpadded"><g data-mml-node="mrow"></g></g><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mrow" transform="translate(220, -820)"><g data-mml-node="mpadded"><g data-mml-node="mrow"></g></g><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g><rect width="1578" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(5198.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6642.2, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7031.2, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(7988.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8377.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9793.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10405.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(11405.4, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(12739.5, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="38.662ex" height="2.583ex" role="img" focusable="false" viewBox="0 -891.7 17088.6 1141.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(957.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1346.6, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1918.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2585.4, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(3641.2, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mi" transform="translate(469, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mi" transform="translate(4658, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(5507.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(6563.5, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mn" transform="translate(469, -150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="msub" transform="translate(7436.1, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(572, -150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(8633.9, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(9634.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mn" transform="translate(469, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msub" transform="translate(10506.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(572, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(11704.4, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(12704.6, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(14098.9, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(15099.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mi" transform="translate(469, -150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msub" transform="translate(16042.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(572, -150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></p>
<p>Descobri que é <code>X * theta</code> no cálculo real por<code>Octave</code> em vez de <code>theta '* X</code> como mostra a fórmula. </p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">J = sum(((X * theta) - y).^<span class="number">2</span>)/<span class="number">2</span>/m</span><br></pre></td></tr></table></figure>

<h4 id="Gradiente-descendente"><a href="#Gradiente-descendente" class="headerlink" title="Gradiente descendente"></a>Gradiente descendente</h4><p>Da mesma forma, a descida do gradiente aqui </p>
<p>repetir até a convergência: { </p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="36.031ex" height="6.484ex" role="img" focusable="false" viewBox="0 -1620 15925.6 2865.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mi" transform="translate(469, -150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mo" transform="translate(1088.1, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" transform="translate(278, 0)"></path></g><g data-mml-node="msub" transform="translate(2421.9, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mi" transform="translate(469, -150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mo" transform="translate(3454.4, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4454.7, 0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mfrac" transform="translate(5094.7, 0)"><g data-mml-node="mrow" transform="translate(409, 760)"><g data-mml-node="mpadded"><g data-mml-node="mrow"></g></g><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mrow" transform="translate(220, -820)"><g data-mml-node="mpadded"><g data-mml-node="mrow"></g></g><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g><rect width="1078" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(6579.3, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8023.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8412.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(9370, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9759, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11175, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11786.3, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(12786.5, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14120.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(14509.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(572, -293.8) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="16.16ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7142.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(939, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1424, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mtext" transform="translate(1875, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(2125, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2814.8, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" transform="translate(278, 0)"></path></g><g data-mml-node="mn" transform="translate(4148.6, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(4815.2, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mi" transform="translate(6153.9, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(6753.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p>} </p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">theta = theta - alpha/m*(X' * ((X * theta) - y))</span><br></pre></td></tr></table></figure>

<p>Levei várias horas para descobrir por que uso <code>X '* ((X * theta) -y))</code><br>Como todas as variáveis ​​X, theta e y, cada uma é um vetor, X ‘\ * (…) é igual à parte <code>sum ()</code>, conforme mostrado na fórmula. </p>
<p>Embora eu tenha passado no teste, ainda não entendo 😵 </p>
<h2 id="3-Regressao-Logistica"><a href="#3-Regressao-Logistica" class="headerlink" title="3 Regressão Logística"></a>3 Regressão Logística</h2><p>Continua… </p>
<p>! <a href="https://i.imgur.com/v4JpxOp.png">1 Regressão Linear com Uma Variável</a><br>! <a href="https://i.imgur.com/G2Yn9nA.png">2 Regressão Linear com Variáveis Múltiplas</a> </p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Regressão Logística</title>
    <url>/pt/Logistic-Regression/</url>
    <content><![CDATA[<h2 id="1-2-1-Exercicio-de-aquecimento-funcao-sigmoide"><a href="#1-2-1-Exercicio-de-aquecimento-funcao-sigmoide" class="headerlink" title="1.2.1 Exercício de aquecimento: função sigmóide"></a>1.2.1 Exercício de aquecimento: função sigmóide</h2><p>Como a função sigmóide é definida como: </p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.738ex" xmlns="http://www.w3.org/2000/svg" width="14.957ex" height="4.774ex" role="img" focusable="false" viewBox="0 -1342 6610.9 2110"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(866, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(1331, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(1997.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3053.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(1528.7, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(722.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(1722.4, 0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="TeXAtom" transform="translate(466, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(778, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g></g></g><rect width="3317.4" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">g = <span class="number">1.</span>/(<span class="number">1</span>+<span class="built_in">exp</span>(-z))</span><br></pre></td></tr></table></figure>

<h2 id="1-2-2-Funcao-de-custo-e-gradiente"><a href="#1-2-2-Funcao-de-custo-e-gradiente" class="headerlink" title="1.2.2 Função de custo e gradiente"></a>1.2.2 Função de custo e gradiente</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="57.509ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 25419 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(4698.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6142.2, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(6420.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(7198.2, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mi" transform="translate(8532.3, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(8830.3, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(9315.3, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(9792.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(10181.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(11138.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(11527.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12393.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12782.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13394.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(14394.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(14783.3, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(15505.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(16505.8, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(17839.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(18228.9, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(18526.9, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(19011.9, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(19488.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(19877.9, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(20600.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(21600.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(22557.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(22946.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(24363, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(24752, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(25141, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.218ex" xmlns="http://www.w3.org/2000/svg" width="6.529ex" height="5.521ex" role="img" focusable="false" viewBox="0 -1460 2886 2440.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 710)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(1199, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1588, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2057, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(754.8, -686)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="2646" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="26.893ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 11886.8 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(1055.8, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(2540.4, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3984.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4373.4, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5331.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(5720.1, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7136.2, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7747.4, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(8747.6, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10081.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(10470.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></svg></mjx-container></p>
<a id="more"></a>

<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">J = (-y'*<span class="built_in">log</span>(sigmoid(X*theta)) - (<span class="number">1</span>-y)'*<span class="built_in">log</span>(<span class="number">1</span>-sigmoid(X*theta)))/m</span><br><span class="line">grad = (X'*(sigmoid(X*theta) - y))/m</span><br></pre></td></tr></table></figure>

<h2 id="2-3-Funcao-de-custo-e-gradiente"><a href="#2-3-Funcao-de-custo-e-gradiente" class="headerlink" title="2.3 Função de custo e gradiente"></a>2.3 Função de custo e gradiente</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.014ex" xmlns="http://www.w3.org/2000/svg" width="70.383ex" height="6.549ex" role="img" focusable="false" viewBox="0 -1562.5 31109.3 2894.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(4698.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6142.2, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(6420.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(7198.2, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mi" transform="translate(8532.3, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(8830.3, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(9315.3, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(9792.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(10181.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(11138.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(11527.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12393.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12782.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13394.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(14394.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(14783.3, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(15505.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(16505.8, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(17839.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(18228.9, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(18526.9, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(19011.9, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(19488.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(19877.9, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(20600.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(21600.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(22557.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(22946.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(24363, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(24752, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(25141, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(25641.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(26641.5, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(617.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(28626.1, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="msubsup" transform="translate(30236.8, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p>$$\dfrac{\partial J(\theta )}{\partial \theta <em>{j}} = \dfrac{1}{m}\sum</em>{i=1}^{m}(h_{\theta} (x^{(i)}) - y^{(i)})x_{j}^{(i)} + \dfrac{\lambda }{m}\theta _{j}$$</p>
<p>para <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex" xmlns="http://www.w3.org/2000/svg" width="5.08ex" height="1.968ex" role="img" focusable="false" viewBox="0 -666 2245.6 870"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(689.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1745.6, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container>, a parte <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="15.281ex" height="1.756ex" role="img" focusable="false" viewBox="0 -694 6754 776"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mtext" transform="translate(778, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(1028, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1326, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1855, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2733, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(3162, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(3682, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mtext" transform="translate(4211, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(4461, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(4822, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(5398, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(5864, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(6225, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g></svg></mjx-container> = 0 </p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">r1 = sum(theta(<span class="number">2</span>:<span class="keyword">end</span>).^<span class="number">2</span>)*lambda/<span class="number">2</span>/m</span><br><span class="line">J = (-y'*<span class="built_in">log</span>(sigmoid(X*theta)) - (<span class="number">1</span>-y)'*<span class="built_in">log</span>(<span class="number">1</span>-sigmoid(X*theta)))/m + r1</span><br><span class="line"></span><br><span class="line">r2 = <span class="built_in">ones</span>(<span class="built_in">size</span>(theta))</span><br><span class="line">r2(<span class="number">1</span>) = <span class="number">0</span></span><br><span class="line">grad = (X'*(sigmoid(X*theta) - y))/m + (theta.*r2)*lambda/m</span><br></pre></td></tr></table></figure>

<p>! <a href="https://i.imgur.com/94LgVsH.png">costFunctionReg</a> </p>
<p>Sim, sim, eu sei que passei. 😄 </p>
<p>Mas, Deus sabe o que aconteceu? 🤔 </p>
<!--more-->

<p>! <a href="https://i.imgur.com/OFkLk5J.png">3 Regressão logística</a> </p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Representação de redes neurais</title>
    <url>/pt/Neural-Networks-Representation/</url>
    <content><![CDATA[<h1 id="Representacao-de-redes-neurais"><a href="#Representacao-de-redes-neurais" class="headerlink" title="Representação de redes neurais"></a>Representação de redes neurais</h1><h2 id="1-3-Vetorizacao-da-regressao-logistica"><a href="#1-3-Vetorizacao-da-regressao-logistica" class="headerlink" title="1.3 Vetorização da regressão logística"></a>1.3 Vetorização da regressão logística</h2><p>Tudo bem, eu já usei a abordagem vetorizada e sem nenhum loop no último exercício. </p>
<a id="more"></a>

<h2 id="1-4-Classificacao-um-contra-todos"><a href="#1-4-Classificacao-um-contra-todos" class="headerlink" title="1.4 Classificação um contra todos"></a>1.4 Classificação um contra todos</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">initial_theta = <span class="built_in">zeros</span>(n + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">options = optimset(<span class="string">'GradObj'</span>, <span class="string">'on'</span>, <span class="string">'MaxIter'</span>, <span class="number">50</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:num_labels</span><br><span class="line">    [theta] = fmincg(@(t)(lrCostFunction(t, X, (y == <span class="built_in">i</span>), lambda)), initial_theta, options);</span><br><span class="line"></span><br><span class="line">all_theta(<span class="built_in">i</span>,:) = [theta];</span><br></pre></td></tr></table></figure>

<p>os pontos-chave aqui são: </p>
<ul>
<li><code>for</code> é necessário aqui para fazer um loop de<code>1</code> para <code>num_labels</code> </li>
<li><code>all_theta</code> deve ser atribuído com<code>(i, :)</code>, caso contrário, será um vetor unidimensional. </li>
</ul>
<h2 id="1-4-1-Predicao-de-um-contra-todos"><a href="#1-4-1-Predicao-de-um-contra-todos" class="headerlink" title="1.4.1 Predição de um contra todos"></a>1.4.1 Predição de um contra todos</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A = sigmoid(X * all_theta');</span><br><span class="line">[m, p] = <span class="built_in">max</span>(A, [], <span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<p>a função <code>max</code> retornará um vetor bidimensional,<code>m</code> é o valor e <code>p</code> é o índice máximo naquela linha. </p>
<h2 id="2-redes-neurais"><a href="#2-redes-neurais" class="headerlink" title="2 redes neurais"></a>2 redes neurais</h2><p>Finalmente, toquei nas Redes Neurais com tantas aulas depois. 😳 </p>
<p>Os <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="14.775ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 6530.7 888"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(250, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(611, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(1187, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1653, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(2014, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(2543, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(3043, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(3487.7, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3737.7, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(4098.7, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(4674.7, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(5140.7, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(5501.7, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(6030.7, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></svg></mjx-container> são treinados para prever. </p>
<p>Antes disso, gostaria de saber qual é o processo de predição com um modelo treinado. Acontece o mesmo com o processo de treinamento? </p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a0x = <span class="built_in">ones</span>(m, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">A1 = [a0x, X];</span><br><span class="line">A2 = [a0x, sigmoid(A1 * Theta1')];</span><br><span class="line">A3 = sigmoid(A2 * Theta2');</span><br><span class="line"></span><br><span class="line">[v, p] =  <span class="built_in">max</span>(A3, [], <span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/ailb9HX.png" alt=""></p>
<p>Incrível ha! 🤩 </p>
<p>Primeiro esqueci de <code>sigmoid</code> a camada oculta e a camada de saída. A precisão mostra </p>
<blockquote>
<p>Precisão do conjunto de treinamento: 69,62 </p>
</blockquote>
<p>E terá a mesma precisão se a camada de saída não tiver <code>sigmóide</code>. Isso também aconteceu na ** Previsão um contra todos ** anterior. </p>
<p>Portanto, ainda tenho a pergunta. 🧐 </p>
<p>É hora de continuar a parte do treinamento. 💪 </p>
<p><img src="https://i.imgur.com/arYwzJt.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Aprendizagem de redes neurais</title>
    <url>/pt/Neural-Networks-Learning/</url>
    <content><![CDATA[<p>Em primeiro lugar, devo dizer que este é o exercício mais difícil que fiz quando comecei este curso. </p>
<h2 id="1-3-Feedforward-e-funcao-de-custo"><a href="#1-3-Feedforward-e-funcao-de-custo" class="headerlink" title="1.3 Feedforward e função de custo"></a>1.3 Feedforward e função de custo</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.864ex" xmlns="http://www.w3.org/2000/svg" width="36.516ex" height="6.784ex" role="img" focusable="false" viewBox="0 -1733 16140.1 2998.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(4698.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="munderover" transform="translate(6308.9, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(86, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(407.7, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7752.9, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(8030.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(8808.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(490, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mi" transform="translate(10143, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(10441, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(10926, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(11403, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(11792, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(12181, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(13138.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(13527.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msub" transform="translate(14943.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, -150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(15751.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.735ex" xmlns="http://www.w3.org/2000/svg" width="29.41ex" height="3.135ex" role="img" focusable="false" viewBox="0 -1060.7 12999.1 1385.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1167, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1889.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(2889.4, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(490, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4223.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(4612.5, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(4910.5, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(5395.5, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(5872.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(6261.5, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6983.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(7984, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8373, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(9330.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9719.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11135.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msub" transform="translate(11524.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, -150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(12332.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12721.1, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<a id="more"></a>

<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a1 = [<span class="built_in">ones</span>(m, <span class="number">1</span>), X];</span><br><span class="line">z2 = a1*Theta1';</span><br><span class="line">a2 = [<span class="built_in">ones</span>(m, <span class="number">1</span>), sigmoid(z2)];</span><br><span class="line">z3 = a2*Theta2';</span><br><span class="line">a3 = sigmoid(z3);</span><br><span class="line"></span><br><span class="line">I = <span class="built_in">eye</span>(num_labels);</span><br><span class="line">Y = I(y, :);</span><br><span class="line"></span><br><span class="line">J = sum(sum((-Y.*<span class="built_in">log</span>(a3) - (<span class="number">1</span>-Y).*<span class="built_in">log</span>(<span class="number">1</span>-a3) ) / m));</span><br></pre></td></tr></table></figure>

<p>No momento, ainda estou confuso sobre <code>I (y, :)</code>, como posso fazer y (5000: 1) se tornar Y (5000: 10), e cada linha tem um índice correspondente? </p>
<h2 id="1-4-Funcao-de-custo-regularizado"><a href="#1-4-Funcao-de-custo-regularizado" class="headerlink" title="1.4 Função de custo regularizado"></a>1.4 Função de custo regularizado</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.864ex" xmlns="http://www.w3.org/2000/svg" width="36.516ex" height="6.784ex" role="img" focusable="false" viewBox="0 -1733 16140.1 2998.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(4698.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="munderover" transform="translate(6308.9, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(86, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(407.7, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7752.9, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(8030.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(8808.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(490, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mi" transform="translate(10143, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(10441, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(10926, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(11403, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(11792, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(12181, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(13138.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(13527.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msub" transform="translate(14943.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, -150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(15751.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.735ex" xmlns="http://www.w3.org/2000/svg" width="29.41ex" height="3.135ex" role="img" focusable="false" viewBox="0 -1060.7 12999.1 1385.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1167, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1889.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(2889.4, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(490, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4223.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(4612.5, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(4910.5, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(5395.5, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(5872.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(6261.5, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6983.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(7984, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8373, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(9330.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9719.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11135.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msub" transform="translate(11524.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, -150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(12332.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12721.1, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.014ex" xmlns="http://www.w3.org/2000/svg" width="20.004ex" height="6.925ex" role="img" focusable="false" viewBox="0 -1728.7 8841.9 3060.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(778, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(617.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2596, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="munderover" transform="translate(2874, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(368.4, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500, 0)"></path></g></g></g><g data-mml-node="munderover" transform="translate(4484.7, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(86, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(191.7, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500, 0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000, 0)"></path></g></g></g><g data-mml-node="mo" transform="translate(5928.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msubsup" transform="translate(6317.7, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(690, 0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8049.3, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(389, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.014ex" xmlns="http://www.w3.org/2000/svg" width="16.268ex" height="6.908ex" role="img" focusable="false" viewBox="0 -1720.9 7190.6 3053.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="munderover" transform="translate(944.7, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(368.4, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500, 0)"></path></g></g></g><g data-mml-node="munderover" transform="translate(2555.3, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(86, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(368.4, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500, 0)"></path></g></g></g><g data-mml-node="mo" transform="translate(3999.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msubsup" transform="translate(4388.3, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(690, 0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(6120, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(389, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6912.6, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">r = lambda/<span class="number">2</span>/m * (sum(sum(Theta1(:,<span class="number">2</span>:<span class="keyword">end</span>).^<span class="number">2</span>)) + sum(sum(Theta2(:,<span class="number">2</span>:<span class="keyword">end</span>).^<span class="number">2</span>)));</span><br><span class="line">J = J + r;</span><br></pre></td></tr></table></figure>

<h2 id="2-1-Gradiente-sigmoide"><a href="#2-1-Gradiente-sigmoide" class="headerlink" title="2.1 Gradiente sigmóide"></a>2.1 Gradiente sigmóide</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="31.034ex" height="4.676ex" role="img" focusable="false" viewBox="0 -1370 13717 2067"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477, 413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(721.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1110.5, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(1575.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2242.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3298, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(452.5, 676)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(520, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g><rect width="1185" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mi" transform="translate(4723, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(5200, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5589, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(6054, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6720.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(7776.6, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(8253.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(8642.6, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(9107.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9496.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(9885.6, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(10607.8, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(11608, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(12085, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(12474, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(12939, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13328, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">g = sigmoid(z).*(<span class="number">1</span>-sigmoid(z));</span><br></pre></td></tr></table></figure>

<h2 id="2-3-Retropropagacao"><a href="#2-3-Retropropagacao" class="headerlink" title="2.3 Retropropagação"></a>2.3 Retropropagação</h2><p>$$\delta <em>{k}^{(3)} = (a</em>{k}^{(3)} - y_{k})$$</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="23.754ex" height="2.7ex" role="img" focusable="false" viewBox="0 -943.3 10499.1 1193.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(444, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1125.3, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2181.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(2570.1, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(4301.8, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(5238.6, 0)"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(444, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6636.3, 0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mo" transform="translate(7080.9, 0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(7580.9, 0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477, 413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(8302.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8691.4, 0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(465, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10110.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="24.135ex" height="2.7ex" role="img" focusable="false" viewBox="0 -943.3 10667.9 1193.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="TeXAtom" transform="translate(833, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1921.6, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(2977.4, 0)"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="TeXAtom" transform="translate(833, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4843.5, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(5843.7, 0)"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(444, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1465, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1965, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8002.2, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8391.2, 0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(529, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(9731.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g></g></g></svg></mjx-container></p>
<p>$$\dfrac{\partial }{\partial \Theta <em>{ij}^{(l)}}J(\Theta ) = D</em>{ij}^{(l)} = \dfrac{1}{m}\Delta _{ij}^{(l)}$$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">d3 = a3-Y;</span><br><span class="line">d2 = d3*Theta2.*[<span class="built_in">ones</span>(m, <span class="number">1</span>), sigmoidGradient(z2)];</span><br><span class="line"></span><br><span class="line">D1 = d2(:,<span class="number">2</span>:<span class="keyword">end</span>)'*a1;</span><br><span class="line">D2 = d3'*a2;</span><br><span class="line"></span><br><span class="line">Theta1_grad = Theta1_grad + D1/m;</span><br><span class="line">Theta2_grad = Theta2_grad + D2/m;</span><br></pre></td></tr></table></figure>

<h2 id="2-5-Redes-Neurais-Regularizadas"><a href="#2-5-Redes-Neurais-Regularizadas" class="headerlink" title="2.5 Redes Neurais Regularizadas"></a>2.5 Redes Neurais Regularizadas</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.3ex" xmlns="http://www.w3.org/2000/svg" width="10.823ex" height="6.447ex" role="img" focusable="false" viewBox="0 -1391 4783.8 2849.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(1014.4, 676)"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="2354.8" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mi" transform="translate(2594.8, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(3227.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3616.8, 0)"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="mo" transform="translate(4394.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="26.519ex" height="4.613ex" role="img" focusable="false" viewBox="0 -1342 11721.6 2039"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msubsup" transform="translate(1055.8, 0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(828, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(828, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2972.4, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(4028.2, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msubsup" transform="translate(5346.2, 0)"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="TeXAtom" transform="translate(833, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(833, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mstyle" transform="translate(6990, 0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(7990, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(8540, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(9025, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(9476, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(10165.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(11221.6, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.3ex" xmlns="http://www.w3.org/2000/svg" width="10.823ex" height="6.447ex" role="img" focusable="false" viewBox="0 -1391 4783.8 2849.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(1014.4, 676)"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="2354.8" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mi" transform="translate(2594.8, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(3227.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3616.8, 0)"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="mo" transform="translate(4394.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="35.862ex" height="4.676ex" role="img" focusable="false" viewBox="0 -1370 15850.9 2067"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msubsup" transform="translate(1055.8, 0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(828, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(828, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2972.4, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(4028.2, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msubsup" transform="translate(5346.2, 0)"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="TeXAtom" transform="translate(833, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(833, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7212.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(8212.5, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(367.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msubsup" transform="translate(9530.5, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mstyle" transform="translate(11119.3, 0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(12119.3, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(12669.3, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(13154.3, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(13605.3, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(14295.1, 0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mn" transform="translate(15350.9, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">Theta1_grad(:,<span class="number">2</span>:<span class="keyword">end</span>) = Theta1_grad(:,<span class="number">2</span>:<span class="keyword">end</span>) + lambda/m*Theta1(:,<span class="number">2</span>:<span class="keyword">end</span>);</span><br><span class="line">Theta2_grad(:,<span class="number">2</span>:<span class="keyword">end</span>) = Theta2_grad(:,<span class="number">2</span>:<span class="keyword">end</span>) + lambda/m*Theta2(:,<span class="number">2</span>:<span class="keyword">end</span>);</span><br></pre></td></tr></table></figure>

<h2 id="A-camada-oculta"><a href="#A-camada-oculta" class="headerlink" title="A camada oculta"></a>A camada oculta</h2><p><img src="https://i.imgur.com/LqYfS7h.png" alt=""></p>
<p><img src="https://i.imgur.com/c1wo2Cy.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Conselhos para aplicar o aprendizado de máquina</title>
    <url>/pt/Advice-for-Applying-Machine-Learning/</url>
    <content><![CDATA[<h2 id="1-2-Funcao-de-custo-de-regressao-linear-regularizada"><a href="#1-2-Funcao-de-custo-de-regressao-linear-regularizada" class="headerlink" title="1.2 Função de custo de regressão linear regularizada"></a>1.2 Função de custo de regressão linear regularizada</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.014ex" xmlns="http://www.w3.org/2000/svg" width="49.903ex" height="6.972ex" role="img" focusable="false" viewBox="0 -1749.5 22057 3081.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(659, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mrow" transform="translate(5031.6, 0)"><g data-mml-node="mo"><path data-c="28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path></g><g data-mml-node="munderover" transform="translate(792, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2236, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2625, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3582.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3971.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5387.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5998.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(6999.2, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8333.2, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(9125.8, 0)"><path data-c="29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></g></g><g data-mml-node="mo" transform="translate(15171.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(16171.8, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(617.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mrow" transform="translate(17989.8, 0)"><g data-mml-node="mo"><path data-c="28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path></g><g data-mml-node="munderover" transform="translate(792, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="msubsup" transform="translate(2402.7, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3275.2, 0)"><path data-c="29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">J = <span class="number">1</span>/(<span class="number">2</span>*m)*sum( (X*theta - y).^<span class="number">2</span> ) + lambda/(<span class="number">2</span>*m)*sum(theta(<span class="number">2</span>:<span class="keyword">end</span>).^<span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="1-3-Gradiente-de-regressao-linear-regularizada"><a href="#1-3-Gradiente-de-regressao-linear-regularizada" class="headerlink" title="1.3 Gradiente de regressão linear regularizada"></a>1.3 Gradiente de regressão linear regularizada</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="40.137ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 17740.8 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 710)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(1199, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1588, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2057, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(723.7, -686)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><rect width="2646" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(3163.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(4219.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(5704.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7148.2, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7537.2, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8494.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8883.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10299.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10911.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(11911.4, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(13245.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(13634.5, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(15050.5, 0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g><g data-mml-node="mi" transform="translate(15495.2, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(16185, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(17240.8, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.827ex" xmlns="http://www.w3.org/2000/svg" width="51.302ex" height="6.785ex" role="img" focusable="false" viewBox="0 -1749.5 22675.5 2999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 710)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(1199, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1588, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2057, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(754.8, -686)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="2646" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(3163.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(4219.6, 0)"><g data-mml-node="mo"><path data-c="28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path></g><g data-mml-node="mstyle" transform="translate(792, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(2276.7, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3720.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4109.7, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5067.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(5456.3, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6872.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7483.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(8483.8, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9817.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(10206.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11623, 0)"><path data-c="29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></g></g><g data-mml-node="mo" transform="translate(16856.8, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(17857, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(367.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msub" transform="translate(19175, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(19985.3, 0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g><g data-mml-node="mi" transform="translate(20430, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(21119.8, 0)"><path data-c="2A7E" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM674 172Q692 172 694 154Q694 142 687 137Q685 135 395 -2L107 -138H101Q83 -136 83 -118Q83 -106 96 -100Q100 -98 380 35T665 170T674 172Z"></path></g><g data-mml-node="mn" transform="translate(22175.5, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">r = theta; r(<span class="number">1</span>) = <span class="number">0</span>;</span><br><span class="line">grad = <span class="number">1</span>/m*(X'*(X*theta-y)) + lambda/m*r;</span><br></pre></td></tr></table></figure>

<h2 id="2-1-Curvas-de-aprendizagem"><a href="#2-1-Curvas-de-aprendizagem" class="headerlink" title="2.1 Curvas de aprendizagem"></a>2.1 Curvas de aprendizagem</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.827ex" xmlns="http://www.w3.org/2000/svg" width="36.47ex" height="6.785ex" role="img" focusable="false" viewBox="0 -1749.5 16119.8 2999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="TeXAtom" transform="translate(555, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(812, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1341, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1686, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2221.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2610.4, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(3079.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3746.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(4802, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(659, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mrow" transform="translate(6620, 0)"><g data-mml-node="mo"><path data-c="5B" d="M269 -1249V1750H577V1677H342V-1176H577V-1249H269Z"></path></g><g data-mml-node="munderover" transform="translate(583, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2027, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2416, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3373.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3762.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5178.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5789.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(6790.2, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8124.2, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(8916.8, 0)"><path data-c="5D" d="M5 1677V1750H313V-1249H5V-1176H240V1677H5Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:m</span><br><span class="line">    xi = X(<span class="number">1</span>:<span class="built_in">i</span>,:); yi = y(<span class="number">1</span>:<span class="built_in">i</span>);</span><br><span class="line"></span><br><span class="line">    theta = trainLinearReg(xi, yi, lambda);</span><br><span class="line">    error_train(<span class="built_in">i</span>) = linearRegCostFunction(xi, yi, theta, <span class="number">0</span>)</span><br><span class="line">    error_val(<span class="built_in">i</span>) = linearRegCostFunction(Xval, yval, theta, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h2 id="3-Regressao-polinomial"><a href="#3-Regressao-polinomial" class="headerlink" title="3 Regressão polinomial"></a>3 Regressão polinomial</h2><p>$$ h_{\theta }(x) = \theta _{0} + \theta _{1}<em>(waterLevel) + \theta _{2}</em>(waterLevel)^{2} + … + \theta _{p}*(waterLevel)^{p} $$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">X_poly = X.^[<span class="number">1</span>:<span class="number">1</span>:p];</span><br></pre></td></tr></table></figure>

<h2 id="3-3-Selecao-de-λ-usando-um-conjunto-de-validacao-cruzada"><a href="#3-3-Selecao-de-λ-usando-um-conjunto-de-validacao-cruzada" class="headerlink" title="3.3 Seleção de λ usando um conjunto de validação cruzada"></a>3.3 Seleção de λ usando um conjunto de validação cruzada</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">length</span>(lambda_vec)</span><br><span class="line">    lambda = lambda_vec(<span class="built_in">i</span>);</span><br><span class="line"></span><br><span class="line">    theta = trainLinearReg(X, y, lambda);</span><br><span class="line">    error_train(<span class="built_in">i</span>) = linearRegCostFunction(X, y, theta, <span class="number">0</span>)</span><br><span class="line">    error_val(<span class="built_in">i</span>) = linearRegCostFunction(Xval, yval, theta, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/yyXPMcV.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Máquinas de vetor de suporte</title>
    <url>/pt/Support-Vector-Machines/</url>
    <content><![CDATA[<p>Já ouvi falar do SVM muitas vezes antes e agora vi como ele é poderoso. 😄 </p>
<h2 id="1-2-1-Kernel-Gaussiano"><a href="#1-2-1-Kernel-Gaussiano" class="headerlink" title="1.2.1 Kernel Gaussiano"></a>1.2.1 Kernel Gaussiano</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.268ex" xmlns="http://www.w3.org/2000/svg" width="72.794ex" height="7.668ex" role="img" focusable="false" viewBox="0 -1944.7 32174.8 3389.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"></path></g><g data-mml-node="TeXAtom" transform="translate(849, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(477, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1006, 0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1578, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(2047, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(2516, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2861, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3390, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3720.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(4109.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5525.4, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(5970.1, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7433.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8100.3, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(9156.1, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(9622.1, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(10194.1, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mrow" transform="translate(10697.1, 0)"><g data-mml-node="mo"><path data-c="239B" d="M837 1154Q843 1148 843 1145Q843 1141 818 1106T753 1002T667 841T574 604T494 299Q417 -84 417 -609Q417 -641 416 -647T411 -654Q409 -655 366 -655Q299 -655 297 -654Q292 -652 292 -643T291 -583Q293 -400 304 -242T347 110T432 470T574 813T785 1136Q787 1139 790 1142T794 1147T796 1150T799 1152T802 1153T807 1154T813 1154H819H837Z" transform="translate(0, 790.7)"></path><path data-c="239D" d="M843 -635Q843 -638 837 -644H820Q801 -644 800 -643Q792 -635 785 -626Q684 -503 605 -363T473 -75T385 216T330 518T302 809T291 1093Q291 1144 291 1153T296 1164Q298 1165 366 1165Q409 1165 411 1164Q415 1163 416 1157T417 1119Q417 529 517 109T833 -617Q843 -631 843 -635Z" transform="translate(0, -800.7)"></path></g><g data-mml-node="mo" transform="translate(875, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mstyle" transform="translate(1653, 0)"><g data-mml-node="mfrac"><g data-mml-node="msup" transform="translate(220, 853.3)"><g data-mml-node="mrow"><g data-mml-node="mo"><svg width="278" height="1286.7" y="-393.3" x="27.5" viewBox="0 -159.4 278 1286.7"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1, 1.932)"></path></svg></g><g data-mml-node="msup" transform="translate(333, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1971.3, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(2971.5, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4435, 0)"><svg width="278" height="1286.7" y="-393.3" x="27.5" viewBox="0 -159.4 278 1286.7"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1, 1.932)"></path></svg></g></g><g data-mml-node="mn" transform="translate(4768, 620.4) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mrow" transform="translate(2068.5, -719.9)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="msup" transform="translate(500, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" transform="translate(571, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><rect width="5371.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(7264.5, 0)"><path data-c="239E" d="M31 1143Q31 1154 49 1154H59Q72 1154 75 1152T89 1136Q190 1013 269 873T401 585T489 294T544 -8T572 -299T583 -583Q583 -634 583 -643T577 -654Q575 -655 508 -655Q465 -655 463 -654Q459 -653 458 -647T457 -609Q457 -58 371 340T100 1037Q87 1059 61 1098T31 1143Z" transform="translate(0, 790.7)"></path><path data-c="23A0" d="M56 -644H50Q31 -644 31 -635Q31 -632 37 -622Q69 -579 100 -527Q286 -228 371 170T457 1119Q457 1161 462 1164Q464 1165 520 1165Q575 1165 577 1164Q582 1162 582 1153T583 1093Q581 910 570 752T527 400T442 40T300 -303T89 -626Q78 -640 75 -642T61 -644H56Z" transform="translate(0, -800.7)"></path></g></g><g data-mml-node="mo" transform="translate(19114.4, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(20170.2, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(20636.2, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(21208.2, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mrow" transform="translate(21711.2, 0)"><g data-mml-node="mo"><path data-c="28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path></g><g data-mml-node="mo" transform="translate(792, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mstyle" transform="translate(1570, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 803.3)"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1056, 477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1056, -285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2378.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msubsup" transform="translate(2767.1, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(572, -317.1) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(4405.4, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(5405.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(572, -317.1) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="msup" transform="translate(6869.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(3313.5, -719.9)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="msup" transform="translate(500, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" transform="translate(571, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><rect width="7861.6" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(9671.6, 0)"><path data-c="29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">sim = <span class="built_in">exp</span>(-sum((x2-x1).^<span class="number">2</span>)./(<span class="number">2</span>*sigma.^<span class="number">2</span>));</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="1-2-3-Exemplo-de-conjunto-de-dados-3"><a href="#1-2-3-Exemplo-de-conjunto-de-dados-3" class="headerlink" title="1.2.3 Exemplo de conjunto de dados 3"></a>1.2.3 Exemplo de conjunto de dados 3</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">l = [<span class="number">0.01</span>, <span class="number">0.03</span>, <span class="number">0.1</span>, <span class="number">0.3</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">30</span>];</span><br><span class="line">mix = <span class="built_in">realmax</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c = l</span><br><span class="line">    <span class="keyword">for</span> s = l</span><br><span class="line">        model= svmTrain(X, y, c, @(x1, x2) gaussianKernel(x1, x2, s));</span><br><span class="line"></span><br><span class="line">        p = svmPredict(model, Xval);</span><br><span class="line">        m = <span class="built_in">mean</span>(double(p ~= yval));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> m &lt; mix</span><br><span class="line">            C = c;sigma = s;mix = m;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>Eu escrevi a função do kernel gaussiano para que sigma possa ser passado como um vetor para obter um vetor analógico, então <code>g = gaussianKernel (x1, x2, s)</code> é um vetor e você pode pular os cálculos extras no loop <code>for c = l</code> <code>para s = l</code>. Portanto, se <code>svmTrain</code> pode ser calculado como um vetor,<code>for c = l</code> também pode ser ignorado. </p>
<p>Mas isto não pode. 😢 </p>
<p>Está relacionado à programação funcional? </p>
<h2 id="2-1-1-Lista-de-Vocabulario"><a href="#2-1-1-Lista-de-Vocabulario" class="headerlink" title="2.1.1 Lista de Vocabulário"></a>2.1.1 Lista de Vocabulário</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">i</span> = <span class="built_in">find</span>(strcmp(vocabList, str));</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">i</span></span><br><span class="line">    word_indices = [word_indices; <span class="built_in">i</span>];</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h2 id="2-2-Extraindo-recursos-de-e-mails"><a href="#2-2-Extraindo-recursos-de-e-mails" class="headerlink" title="2.2 Extraindo recursos de e-mails"></a>2.2 Extraindo recursos de e-mails</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.469ex" xmlns="http://www.w3.org/2000/svg" width="25.684ex" height="4.07ex" role="img" focusable="false" viewBox="0 -1149.5 11352.4 1799"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(849.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(1905.6, 0)"><g data-mml-node="mo"><path data-c="5B" d="M224 -649V1150H455V1099H275V-598H455V-649H224Z"></path></g><g data-mml-node="mtable" transform="translate(472, 0)"><g data-mml-node="mtr" transform="translate(0, -275)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(500, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(750, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(1028, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(1278, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mtext" transform="translate(1778, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(2028, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(2528, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2778, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(3056, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(3306, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mtext" transform="translate(3806, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(4056, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(4556, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4806, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(5084, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(5334, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(5834, 0)"><path data-c="A0" d=""></path></g></g></g></g><g data-mml-node="mo" transform="translate(6556, 0)"><path data-c="5D" d="M16 1099V1150H247V-649H16V-598H196V1099H16Z"></path></g></g><g data-mml-node="mo" transform="translate(9211.3, 0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="msup" transform="translate(10156.1, 0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="211D" d="M17 665Q17 672 28 683H221Q415 681 439 677Q461 673 481 667T516 654T544 639T566 623T584 607T597 592T607 578T614 565T618 554L621 548Q626 530 626 497Q626 447 613 419Q578 348 473 326L455 321Q462 310 473 292T517 226T578 141T637 72T686 35Q705 30 705 16Q705 7 693 -1H510Q503 6 404 159L306 310H268V183Q270 67 271 59Q274 42 291 38Q295 37 319 35Q344 35 353 28Q362 17 353 3L346 -1H28Q16 5 16 16Q16 35 55 35Q96 38 101 52Q106 60 106 341T101 632Q95 645 55 648Q17 648 17 665ZM241 35Q238 42 237 45T235 78T233 163T233 337V621L237 635L244 648H133Q136 641 137 638T139 603T141 517T141 341Q141 131 140 89T134 37Q133 36 133 35H241ZM457 496Q457 540 449 570T425 615T400 634T377 643Q374 643 339 648Q300 648 281 635Q271 628 270 610T268 481V346H284Q327 346 375 352Q421 364 439 392T457 496ZM492 537T492 496T488 427T478 389T469 371T464 361Q464 360 465 360Q469 360 497 370Q593 400 593 495Q593 592 477 630L457 637L461 626Q474 611 488 561Q492 537 492 496ZM464 243Q411 317 410 317Q404 317 401 315Q384 315 370 312H346L526 35H619L606 50Q553 109 464 243Z"></path></g></g><g data-mml-node="mi" transform="translate(722, 413) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = word_indices</span><br><span class="line">    x(<span class="built_in">i</span>) = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/rBji3uP.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Aprendizagem não supervisionada</title>
    <url>/pt/Unsupervised-Learning/</url>
    <content><![CDATA[<h2 id="1-1-1-Encontrando-os-centroides-mais-proximos"><a href="#1-1-1-Encontrando-os-centroides-mais-proximos" class="headerlink" title="1.1.1 Encontrando os centróides mais próximos"></a>1.1.1 Encontrando os centróides mais próximos</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.469ex" xmlns="http://www.w3.org/2000/svg" width="25.825ex" height="4.07ex" role="img" focusable="false" viewBox="0 -1149.5 11414.7 1799"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" transform="translate(433, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1554.9, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" transform="translate(278, 0)"></path></g><g data-mml-node="mi" transform="translate(2888.6, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(3300.6, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3745.3, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4623.3, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4968.3, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mrow" transform="translate(5568.3, 0)"><g data-mml-node="mo"><path data-c="28" d="M180 96T180 250T205 541T266 770T353 944T444 1069T527 1150H555Q561 1144 561 1141Q561 1137 545 1120T504 1072T447 995T386 878T330 721T288 513T272 251Q272 133 280 56Q293 -87 326 -209T399 -405T475 -531T536 -609T561 -640Q561 -643 555 -649H527Q483 -612 443 -568T353 -443T266 -270T205 -41Z"></path></g><g data-mml-node="msup" transform="translate(597, 0)"><g data-mml-node="mrow"><g data-mml-node="mo"><svg width="278" height="1386.7" y="-443.3" x="27.5" viewBox="0 -171.8 278 1386.7"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1, 2.082)"></path></svg></g><g data-mml-node="msup" transform="translate(333, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1971.3, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(2971.5, 0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(603, -150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mo" transform="translate(3915.9, 0)"><svg width="278" height="1386.7" y="-443.3" x="27.5" viewBox="0 -171.8 278 1386.7"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1, 2.082)"></path></svg></g></g><g data-mml-node="mn" transform="translate(4248.9, 670.4) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(5249.4, 0)"><path data-c="29" d="M35 1138Q35 1150 51 1150H56H69Q113 1113 153 1069T243 944T330 771T391 541T416 250T391 -40T330 -270T243 -443T152 -568T69 -649H56Q43 -649 39 -647T35 -637Q65 -607 110 -548Q283 -316 316 56Q324 133 324 251Q324 368 316 445Q278 877 48 1123Q36 1137 35 1138Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">v = [];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:K</span><br><span class="line">    v = [v, sum((X - centroids(<span class="built_in">j</span>,:)).^<span class="number">2</span>, <span class="number">2</span>)];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">[v, idx] = <span class="built_in">min</span>(v, [], <span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<p>O <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.564ex" xmlns="http://www.w3.org/2000/svg" width="12.31ex" height="2.26ex" role="img" focusable="false" viewBox="0 -749.5 5441 999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(250, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(548, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1014, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(1564, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mtext" transform="translate(1925, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(2175, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mtext" transform="translate(2453, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(2703, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3154, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3499, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(3976, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(4552, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mtext" transform="translate(4913, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(5163, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g></g></svg></mjx-container> symbol significa [Norm](&lt;<a href="https://en.wikipedia.org/wiki/Norm">https://en.wikipedia.org/wiki/Norm</a>_ (mathematics)&gt;) não valor absoluto da primeira vez como pensei. 😂 </p>
<a id="more"></a>

<h2 id="1-1-2-Centroide-de-computacao"><a href="#1-1-2-Centroide-de-computacao" class="headerlink" title="1.1.2 Centróide de computação"></a>1.1.2 Centróide de computação</h2><p>$$\mu <em>k := \dfrac{1}{\left | C_k \right |}\sum</em>{i\in  C_k}^{ }x^{(i)}$$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:K</span><br><span class="line">    <span class="built_in">j</span> = (idx == <span class="built_in">i</span>);</span><br><span class="line">    v = X(<span class="built_in">j</span>, :);</span><br><span class="line">    n = <span class="built_in">size</span>(v, <span class="number">1</span>);</span><br><span class="line">    centroids(<span class="built_in">i</span>, :) = sum(v)/n;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/UEBpwso.gif" alt=""></p>
<h2 id="2-2-Implementando-PCA"><a href="#2-2-Implementando-PCA" class="headerlink" title="2.2 Implementando PCA"></a>2.2 Implementando PCA</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.464ex" xmlns="http://www.w3.org/2000/svg" width="22.436ex" height="2.481ex" role="img" focusable="false" viewBox="0 -891.7 9916.6 1096.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(250, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(719, 0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1291, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2446.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mtext" transform="translate(3502.6, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3752.6, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(4272.6, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(4822.6, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5273.6, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(5802.6, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6235.6, 0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6735.6, 0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msup" transform="translate(7613.6, 0)"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mi" transform="translate(903.2, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mi" transform="translate(9064.6, 0)"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">sigma = X'*X/m;</span><br><span class="line">[U, S, V] = svd(sigma);</span><br></pre></td></tr></table></figure>

<h2 id="2-3-1-Projetar-os-dados-nos-componentes-principais"><a href="#2-3-1-Projetar-os-dados-nos-componentes-principais" class="headerlink" title="2.3.1 Projetar os dados nos componentes principais"></a>2.3.1 Projetar os dados nos componentes principais</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">Z = X * U;</span><br><span class="line">Z = Z(:,<span class="number">1</span>:K);</span><br></pre></td></tr></table></figure>

<h2 id="2-3-2-Reconstruindo-uma-aproximacao-dos-dados"><a href="#2-3-2-Reconstruindo-uma-aproximacao-dos-dados" class="headerlink" title="2.3.2 Reconstruindo uma aproximação dos dados"></a>2.3.2 Reconstruindo uma aproximação dos dados</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">X_rec = Z * U(:,<span class="number">1</span>:K)';</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/TjyYT8G.gif" alt=""></p>
<p><img src="https://i.imgur.com/duSTjdI.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Sistemas de detecção e recomendação de anomalias</title>
    <url>/pt/Anomaly-Detection-Recommender-Systems/</url>
    <content><![CDATA[<h2 id="Deteccao-de-anomalia"><a href="#Deteccao-de-anomalia" class="headerlink" title="Detecção de anomalia"></a>Detecção de anomalia</h2><div style="width: 400px">
<img src="https://i.imgur.com/slIPtvp.gif">
</div>

<h3 id="1-1-Distribuicao-Gaussiana"><a href="#1-1-Distribuicao-Gaussiana" class="headerlink" title="1.1 Distribuição Gaussiana"></a>1.1 Distribuição Gaussiana</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.308ex" xmlns="http://www.w3.org/2000/svg" width="27.169ex" height="5.385ex" role="img" focusable="false" viewBox="0 -1360.3 12008.8 2380.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(503, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(892, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1464, 0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g><g data-mml-node="mi" transform="translate(1908.7, 0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mo" transform="translate(2511.7, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(2956.3, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mn" transform="translate(571, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(3930.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4597.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(5653.4, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(1418.8, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="msqrt" transform="translate(220, -962)"><g transform="translate(853, 0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="msup" transform="translate(1070, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mn" transform="translate(571, 289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(0, 142)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="2044.6" height="60" x="853" y="882"></rect></g><rect width="3097.6" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msup" transform="translate(8991, 0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="TeXAtom" transform="translate(466, 480.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(778, 0)"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(961, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1739, 0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="msup" transform="translate(2342, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 363)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(806.9, -515.3) scale(0.707)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="msup" transform="translate(500, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mn" transform="translate(571, 289)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><rect width="2520" height="60" x="120" y="220"></rect></g></g></g></g></g></svg></mjx-container></p>
<a id="more"></a>

<h3 id="1-2-Parametros-de-estimativa-para-um-Gaussiano"><a href="#1-2-Parametros-de-estimativa-para-um-Gaussiano" class="headerlink" title="1.2 Parâmetros de estimativa para um Gaussiano"></a>1.2 Parâmetros de estimativa para um Gaussiano</h3><p>$$\mu <em>{i} = \dfrac {1}{m}\sum</em>{j=1}^{m}x _{i}^{(j)}$$</p>
<p>$$\sigma <em>{i}^{2} = \dfrac{1}{m}\sum</em>{j=1}^{m}(x _{i}^{(j)} - \mu _{i})^2$$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">mu = sum(X)/m;</span><br><span class="line">sigma2 = sum((X-mu).^<span class="number">2</span>)/m;</span><br></pre></td></tr></table></figure>

<p>Achei que havia um problema com essas equações porque a área com maior probabilidade não é mostrada como uma elipse vermelha no tour do pdf. </p>
<p>Depois de depurar um pouco, descobri que a cor central do contorno de distribuição gaussiana é amarelo, que é quase invisível em uma tela sem Retina. 😂😂😂 </p>
<h3 id="1-3-Selecionando-o-limite-ε"><a href="#1-3-Selecionando-o-limite-ε" class="headerlink" title="1.3 Selecionando o limite, ε"></a>1.3 Selecionando o limite, ε</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.991ex" xmlns="http://www.w3.org/2000/svg" width="18.027ex" height="5.027ex" role="img" focusable="false" viewBox="0 -1342 7968 2222"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mn" transform="translate(643, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1324.3, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(2380.1, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 676)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(722.2, 0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(1222.4, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(1725.4, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2176.4, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2642.4, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(3297.7, 0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(3797.9, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4248.9, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(4714.9, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g><g data-mml-node="mrow" transform="translate(581.2, -686)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(2075.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(3075.4, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3526.4, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(3992.4, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g><rect width="5347.9" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.016ex" xmlns="http://www.w3.org/2000/svg" width="15.308ex" height="4.962ex" role="img" focusable="false" viewBox="0 -1302 6766 2193"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(2130.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3186.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(1357.7, 676)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1086.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2086.4, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(2636.4, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g><rect width="3339.4" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.016ex" xmlns="http://www.w3.org/2000/svg" width="14.389ex" height="4.962ex" role="img" focusable="false" viewBox="0 -1302 6360 2193"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(451, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(917, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(1627.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(2683.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(1406.2, 676)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1086.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2086.4, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(2636.4, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="3436.4" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">p = (pval &lt; epsilon);</span><br><span class="line">tp = sum((p == <span class="number">1</span>) &amp; (yval == <span class="number">1</span>));</span><br><span class="line">fp = sum((p == <span class="number">1</span>) &amp; (yval == <span class="number">0</span>));</span><br><span class="line">fn = sum((p == <span class="number">0</span>) &amp; (yval == <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">prec = tp/(tp+fp);</span><br><span class="line">rec = tp/(tp+fn);</span><br><span class="line"></span><br><span class="line">F1 = <span class="number">2</span>*prec*rec/(prec+rec);</span><br></pre></td></tr></table></figure>

<h2 id="Sistemas-de-Recomendacao"><a href="#Sistemas-de-Recomendacao" class="headerlink" title="Sistemas de Recomendação"></a>Sistemas de Recomendação</h2><h3 id="2-1-Conjunto-de-dados-de-classificacoes-de-filmes"><a href="#2-1-Conjunto-de-dados-de-classificacoes-de-filmes" class="headerlink" title="2.1 Conjunto de dados de classificações de filmes"></a>2.1 Conjunto de dados de classificações de filmes</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.469ex" xmlns="http://www.w3.org/2000/svg" width="96.292ex" height="4.07ex" role="img" focusable="false" viewBox="0 -1149.5 42561.3 1799"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(1129.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(2185.6, 0)"><g data-mml-node="mo"><path data-c="5B" d="M224 -649V1150H455V1099H275V-598H455V-649H224Z"></path></g><g data-mml-node="mtable" transform="translate(472, 0)"><g data-mml-node="mtr" transform="translate(0, -275)"><g data-mml-node="mtd"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1167, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(2692.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(3851.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(4851.9, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(5324.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(6324.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(6713.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8239.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(9398.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(10398.3, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(10648.3, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(10926.3, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(11398.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(12398.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(12787.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1659.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(14858.5, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(16017.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(17017.7, 0)"><path data-c="A0" d=""></path></g></g></g></g><g data-mml-node="mo" transform="translate(17739.7, 0)"><path data-c="5D" d="M16 1099V1150H247V-649H16V-598H196V1099H16Z"></path></g></g><g data-mml-node="mo" transform="translate(20397.3, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(20842, 0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mi" transform="translate(21546, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(22122, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(22588, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(22949, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(23755.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(24811.5, 0)"><g data-mml-node="mo"><path data-c="5B" d="M224 -649V1150H455V1099H275V-598H455V-649H224Z"></path></g><g data-mml-node="mtable" transform="translate(472, 0)"><g data-mml-node="mtr" transform="translate(0, -275)"><g data-mml-node="mtd"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1167, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(2589.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(3748.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(4748.9, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(5221.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(6221.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(6610.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8033.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(9192.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(10192.3, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(10442.3, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(10720.3, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(11192.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(12192.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(12581.7, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1443.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(14396.5, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(15555.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(16555.7, 0)"><path data-c="A0" d=""></path></g></g></g></g><g data-mml-node="mo" transform="translate(17277.7, 0)"><path data-c="5D" d="M16 1099V1150H247V-649H16V-598H196V1099H16Z"></path></g></g></g></g></svg></mjx-container></p>
<h3 id="2-2-1-Funcao-de-custo-de-filtragem-colaborativa"><a href="#2-2-1-Funcao-de-custo-de-filtragem-colaborativa" class="headerlink" title="2.2.1 Função de custo de filtragem colaborativa"></a>2.2.1 Função de custo de filtragem colaborativa</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="61.104ex" height="6.258ex" role="img" focusable="false" viewBox="0 -1342 27007.9 2766.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1022, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2547.7, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(2992.3, 0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="msup" transform="translate(4331, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1659.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6401.8, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(6846.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8269.1, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(8713.8, 0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="msup" transform="translate(10052.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1443.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11867.2, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12534, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(13589.8, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220, -686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="700" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(14696.4, 0)"><g data-mml-node="mo" transform="translate(1269.6, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(1813, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(2091, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2542, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2931, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3276, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3554, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(3966, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4355, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5133, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1991.6, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(18679.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(19068.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(19457.5, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(20818, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(21754.8, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(23393.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(24393.3, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(26215.3, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">tmp = X*Theta' .* R - Y;</span><br><span class="line">J = sum(sum(tmp.^<span class="number">2</span>))/<span class="number">2</span>;</span><br></pre></td></tr></table></figure>

<h3 id="2-2-2-Gradiente-de-filtragem-colaborativa"><a href="#2-2-2-Gradiente-de-filtragem-colaborativa" class="headerlink" title="2.2.2 Gradiente de filtragem colaborativa"></a>2.2.2 Gradiente de filtragem colaborativa</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="36.275ex" height="6.369ex" role="img" focusable="false" viewBox="0 -1391 16033.3 2815.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(611.5, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><rect width="2182.1" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2699.9, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(3755.6, 0)"><g data-mml-node="mo" transform="translate(774.2, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(690, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1141, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1530, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1875, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2153, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2565, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2954, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3732, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1496.2, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(6748.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(7137.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(7526.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8886.6, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(9823.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11461.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(12461.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14283.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(14672.9, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="36.4ex" height="6.369ex" role="img" focusable="false" viewBox="0 -1391 16089 2815.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(635.2, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><rect width="2229.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2747.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(3803, 0)"><g data-mml-node="mo" transform="translate(750.5, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(623, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1074, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1463, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1808, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2086, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2498, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2887, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3665, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1472.5, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(6748.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(7137.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(7526.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8886.6, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(9823.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11461.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(12461.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14283.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(14672.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">X_grad = tmp*Theta;</span><br><span class="line">Theta_grad = tmp'*X;</span><br></pre></td></tr></table></figure>

<h3 id="2-2-3-Funcao-de-custo-regularizado"><a href="#2-2-3-Funcao-de-custo-regularizado" class="headerlink" title="2.2.3 Função de custo regularizado"></a>2.2.3 Função de custo regularizado</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="61.104ex" height="6.258ex" role="img" focusable="false" viewBox="0 -1342 27007.9 2766.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1022, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2547.7, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(2992.3, 0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="msup" transform="translate(4331, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1659.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6401.8, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(6846.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8269.1, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(8713.8, 0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="msup" transform="translate(10052.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1443.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11867.2, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12534, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(13589.8, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220, -686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="700" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(14696.4, 0)"><g data-mml-node="mo" transform="translate(1269.6, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(1813, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(2091, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2542, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2931, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3276, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3554, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(3966, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4355, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5133, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1991.6, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(18679.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(19068.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(19457.5, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(20818, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(21754.8, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(23393.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(24393.3, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(26215.3, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p>$$+ \left ( \dfrac{\lambda }{2} \sum<em>{j=1}^{n_u} \sum</em>{k=1}^{n} (\theta _{k}^{(j)} )^2 \right )$$</p>
<p>$$+ \left ( \dfrac{\lambda }{2} \sum<em>{i=1}^{n_m} \sum</em>{k=1}^{n} (x _{k}^{(i)} )^2 \right )$$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">J = J + lambda/<span class="number">2</span>*(sum(sum(Theta.^<span class="number">2</span>))) + lambda/<span class="number">2</span>*(sum(sum(X.^<span class="number">2</span>)));</span><br></pre></td></tr></table></figure>

<h3 id="2-2-4-Gradiente-regularizado"><a href="#2-2-4-Gradiente-regularizado" class="headerlink" title="2.2.4 Gradiente regularizado"></a>2.2.4 Gradiente regularizado</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.044ex" xmlns="http://www.w3.org/2000/svg" width="7.976ex" height="6.191ex" role="img" focusable="false" viewBox="0 -1391 3525.2 2736.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(635.2, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><rect width="2229.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2747.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="27.67ex" height="6.05ex" role="img" focusable="false" viewBox="0 -1250 12230.3 2674.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="munderover"><g data-mml-node="mo" transform="translate(774.2, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(690, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1141, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1530, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1875, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2153, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2565, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2954, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3732, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1496.2, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(2992.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(3381.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3770.5, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(5130.9, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(6067.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7706, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(8706.3, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10528.2, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(10917.2, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.735ex" xmlns="http://www.w3.org/2000/svg" width="6.39ex" height="3.135ex" role="img" focusable="false" viewBox="0 -1060.7 2824.5 1385.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(778, 0)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="msubsup" transform="translate(1361, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.044ex" xmlns="http://www.w3.org/2000/svg" width="7.743ex" height="6.191ex" role="img" focusable="false" viewBox="0 -1391 3422.2 2736.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(583.7, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><rect width="2126.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2644.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="31.112ex" height="6.05ex" role="img" focusable="false" viewBox="0 -1250 13751.4 2674.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="munderover"><g data-mml-node="mo" transform="translate(750.5, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(623, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1074, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1463, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1808, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2086, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2498, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2887, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3665, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1472.5, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(2945.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(3334.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3723.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(5083.6, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(6020.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7658.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(8658.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10480.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(10869.9, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(11664.1, 0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(12386.3, 0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(521, 421.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.735ex" xmlns="http://www.w3.org/2000/svg" width="6.157ex" height="3.135ex" role="img" focusable="false" viewBox="0 -1060.7 2721.5 1385.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(778, 0)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="msubsup" transform="translate(1361, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">X_grad = X_grad + lambda*X;</span><br><span class="line">Theta_grad = Theta_grad + lambda*Theta;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/yRhMwb9.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Atribuição de programação Scrooge Coin</title>
    <url>/pt/Programming-Assignment-Scrooge-Coin/</url>
    <content><![CDATA[<p>Esta é a pior tarefa que já fiz. </p>
<p><code>TxHandler.java</code> não pode ser construído e executado, tudo é um palpite. Como não estou familiarizado com <code>JAVA</code>, encontrei milhões de erros de sintaxe após o envio. </p>
<p>Eu tenho que: </p>
<ul>
<li>Importar pacotes manualmente </li>
<li>Adicione “;” após cada linha. </li>
<li><code>()</code> após <code>if</code>. </li>
<li>Declarar tipo de variável </li>
</ul>
<p>É por isso que odeio JAVA 😡😡😡 </p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TxHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UTXOPool utxoPool;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a public ledger whose current UTXOPool (collection of unspent transaction outputs) is</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> utxoPool&#125;. This should make a copy of utxoPool by using the UTXOPool(UTXOPool uPool)</span></span><br><span class="line"><span class="comment">     * constructor.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TxHandler</span><span class="params">(UTXOPool utxoPool)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.utxoPool = <span class="keyword">new</span> UTXOPool(utxoPool);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true if:</span></span><br><span class="line"><span class="comment">     * (1) all outputs claimed by &#123;<span class="doctag">@code</span> tx&#125; are in the current UTXO pool,</span></span><br><span class="line"><span class="comment">     * (2) the signatures on each input of &#123;<span class="doctag">@code</span> tx&#125; are valid,</span></span><br><span class="line"><span class="comment">     * (3) no UTXO is claimed multiple times by &#123;<span class="doctag">@code</span> tx&#125;,</span></span><br><span class="line"><span class="comment">     * (4) all of &#123;<span class="doctag">@code</span> tx&#125;s output values are non-negative, and</span></span><br><span class="line"><span class="comment">     * (5) the sum of &#123;<span class="doctag">@code</span> tx&#125;s input values is greater than or equal to the sum of its output</span></span><br><span class="line"><span class="comment">     *     values; and false otherwise.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValidTx</span><span class="params">(Transaction tx)</span> </span>&#123;</span><br><span class="line">        UTXOPool utxoSet = <span class="keyword">new</span> UTXOPool();</span><br><span class="line">        <span class="keyword">double</span> pSum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tx.numInputs(); i++) &#123;</span><br><span class="line">            Transaction.Input in = tx.getInput(i);</span><br><span class="line">            UTXO u = <span class="keyword">new</span> UTXO(in.prevTxHash, in.outputIndex);</span><br><span class="line">            Transaction.Output out = utxoPool.getTxOutput(u);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ((!utxoPool.contains(u)) || (!Crypto.verifySignature(out.address, tx.getRawDataToSign(i), in.signature)) || (utxoSet.contains(u))) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            utxoSet.addUTXO(u, out);</span><br><span class="line">            pSum += out.value;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Transaction.Output out : tx.getOutputs()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (out.value &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sum += out.value;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (pSum &lt; sum) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Handles each epoch by receiving an unordered array of proposed transactions, checking each</span></span><br><span class="line"><span class="comment">     * transaction for correctness, returning a mutually valid array of accepted transactions, and</span></span><br><span class="line"><span class="comment">     * updating the current UTXO pool as appropriate.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Transaction[] handleTxs(Transaction[] possibleTxs) &#123;</span><br><span class="line">        Set&lt;Transaction&gt; vTxs = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Transaction tx : possibleTxs) &#123;</span><br><span class="line">            <span class="keyword">if</span> (isValidTx(tx)) &#123;</span><br><span class="line">                vTxs.add(tx);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (Transaction.Input in : tx.getInputs()) &#123;</span><br><span class="line">                    UTXO u = <span class="keyword">new</span> UTXO(in.prevTxHash, in.outputIndex);</span><br><span class="line">                    utxoPool.removeUTXO(u);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tx.numOutputs(); i++) &#123;</span><br><span class="line">                    Transaction.Output out = tx.getOutput(i);</span><br><span class="line">                    UTXO u = <span class="keyword">new</span> UTXO(tx.getHash(), i);</span><br><span class="line">                    utxoPool.addUTXO(u, out);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Transaction[] vTxArr = <span class="keyword">new</span> Transaction[vTxs.size()];</span><br><span class="line">        <span class="keyword">return</span> vTxs.toArray(vTxArr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>BlockChain</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-0</title>
    <url>/pt/Japan-2-0/</url>
    <content><![CDATA[<h1 id="Japao-2-0"><a href="#Japao-2-0" class="headerlink" title="Japão-2-0"></a>Japão-2-0</h1><p>🇯🇵 </p>
<p>seqüência </p>
<p>A irmã mais velha do Pequeno Mestre disse de repente para ir para Hakone </p>
<p>Então pule alguns (muitos) capítulos e escreva isto primeiro </p>
<p>Por que se tornou tradicional<br>Porque a irmã mais velha é taiwanesa<br>Embora ela possa entender caracteres simplificados </p>
<a id="more"></a>

<hr>
<p>Aconteceu em 8102 3🈷️ </p>
<p>Naquela época, o pequeno mago havia servido na antiga empresa por 3,5 anos, e depois foi até a fruticultura para varrer o chão 🧹, e seu aniversário 🎂 era no mesmo dia do fosso<br>Eu pretendo me dar uma corrida semelhante a uma viagem de formatura antes disso </p>
<p>Afinal, é muito difícil mudar de emprego e ser uma pessoa inferior com certeza será humilhado.<br>Portanto, planejo me preparar mental e fisicamente com antecedência </p>
<p>Naquela época, o pequeno mago ainda era jovem e ainda estava na fase de querer sair para brincar. O jeito de relaxar é que o mundo é tão grande que eu quero ver<br>Olhando para o mapa-múndi, sinto que quero ir a qualquer lugar </p>
<p>Mas por ser Solo, acabei de tirar minha carteira de motorista e não me atrevi a dirigir antes do período de estágio.<br>Naturalmente, a Europa e os Estados Unidos não conseguem pensar nisso, mas escolhem a paisagem urbana<br>Vamos dar uma olhada no visto de retorno de 3 anos que finalmente consegui, então só posso ir para 🇯🇵 </p>
<hr>
<p>Em vista do fato de que a última vez que o pequeno mago descobriu em Kinosaki que a falsa fonte termal era água da caldeira, e a verdadeira fonte termal ♨️ podia curar uma doença, ele nunca se esqueceria de ir 🇯🇵 mergulhar uma vez </p>
<p>Então, a rota é todo o caminho para o norte </p>
<p>Hakone-Kamakura Enoshima-Yokohama-Tóquio </p>
<div id="googleMap578" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap578'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 9.3,
       'center': new window.google.maps.LatLng( 35.460 , 139.233 ),
     },
     target = document.getElementById('googleMap578'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.2719403 , 138.9279284 ),
        'map': map,
        'title': 'Hakone 箱根町',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Hakone 箱根町'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.3338798 , 139.4707656 ),
        'map': map,
        'title': 'Kamakura 鎌倉市',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Kamakura 鎌倉市'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.3011464 , 139.4766161 ),
        'map': map,
        'title': 'Enoshima 江の島',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Enoshima 江の島'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 35.4526928 , 139.5250756 ),
        'map': map,
        'title': 'Yokohama 横浜市',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'Yokohama 横浜市'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
     
     
     var opts4 = {
        'position': new window.google.maps.LatLng( 35.6681625 , 139.6007859 ),
        'map': map,
        'title': 'Tokyo 東京',
        'zIndex' : 4,
        'icon': ''
      };

     var infowindow4 = new window.google.maps.InfoWindow({
       content: 'Tokyo 東京'
     });

     var marker4 = new window.google.maps.Marker(opts4);

     marker4.addListener('click', function(){
       infowindow4.open(map, marker4)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<p>Embora eu tenha estado em Tóquio, porque a primeira vez que estava seguindo outros, o pequeno mago tinha uma memória fraca, e faltavam apenas 6 dias, então não tive nenhuma impressão.<br>Exatamente como esperado, quando voltei a Tóquio, além de conhecer a árvore do céu, parecia que nunca tinha ido a outros lugares. </p>
<hr>
<h2 id="Odakyu"><a href="#Odakyu" class="headerlink" title="Odakyu"></a>Odakyu</h2><p>Desta vez é JAL, pousando no Aeroporto de Narita 🛬️<br>Originalmente, o jovem mestre planejou ir para Shinjuku e se transferir para o Expresso Romântico Odakyu (dizem que não é romântico) e ir diretamente para Hakone<br>Afinal, são apenas 4 horas, e o último trem Odakyu é 6 horas. Mesmo se você for de Narita a Shinjuku, é completamente tarde<br>Por mais que o horário do Japão esteja uma hora antes da hora, o pequeno mago fica pasmo após a sincronização do horário do aeroporto </p>
<p>Em pânico, o entusiasmado velho à frente ajudou a comprar uma passagem do Narita Express de Shinagawa para o Shinkansen 🚄 quando o idioma não estava disponível. 🎫 </p>
<p>Pegue o Guangming, que lembra o homem do trem, é muito estável e confortável.Você pode ver a localização no mapa e pular para frente rapidamente.<br>Em Odawara (Odawara), o sol já se pôs, não há ônibus, apenas o trem da montanha </p>
<p>Depois de sair da estação, fiquei confusa e não sabia para onde ir.Muitas pessoas caminharam em minha direção, só para ver uma linda irmãzinha. Subi rapidamente e perguntei onde estava o trenzinho.<br>Depois que a irmãzinha cedeu suavemente, o pequeno mago caminhou um longo caminho, olhou para trás e viu a irmãzinha balançando a cabeça para indicar que havia encontrado a carruagem certa. </p>
<p>Depois de subir a montanha, começou a chover gradualmente e a temperatura caiu drasticamente.O pequeno mago percebeu que o assento estava ficando quente e o aquecimento estava aumentando.<br>Realmente humano </p>
<p>Depois de chegar a Kowakidani, o saldo do cartão de melancia 🍉 é insuficiente para sair da estação<br>Não há ninguém por perto, justo quando o pequeno mago quer se virar e será pego<br>Um policial saiu do nada, deu a ele um pedaço de papel, abriu a porta do metrô e então desapareceu </p>
<p>Vi uma colina quando saí da estação e, após consultar várias vezes o mapa, ainda não conseguia acreditar que a escada vertical escondida na sombra era a estrada mostrada no mapa. </p>
<p>Felizmente, depois de subir as escadas, cheguei em uma estrada nacional normal<br>Apenas 1,3 km morro acima </p>
<p>O pequeno mago está segurando um guarda-chuva e arrastando sua bagagem, caminhando sozinho na estrada<br>Passando por um grande 7-11<br>Ainda não está sozinho </p>
<p>… </p>
<h2 id="Tenyu"><a href="#Tenyu" class="headerlink" title="Tenyu"></a>Tenyu</h2><p>Quando os dois personagens Tianyou apareceram na noite chuvosa, o pequeno mago não tinha energia </p>
<p>Eu pensei que poderia aproveitar a fonte termal<br>Passei muito tempo com fome e não consegui encontrar a entrada do hotel<br>Tive que ligar para o hotel </p>
<p>Naquela época, o inglês do pequeno mestre ainda era muito pobre, e com o inglês japonês da outra parte, ele não conseguia entender o que estava sendo dito, então ele só conseguia falar sozinho. </p>
<p>Então me disseram para não me mover e eu enviaria um carro para buscá-lo<br>Depois de esperar um pouco, não havia movimento, então tive que continuar subindo a estrada da montanha.<br>Durante esse tempo, um carro desceu da montanha e não passou por ninguém. O primeiro pensamento do pequeno mago foi: há um carro na montanha? ! </p>
<p>Abra caminho para o fundo e continue subindo </p>
<p>Depois de caminhar um pouco, o pequeno mago de repente abriu a boca, não seria o carro agora. </p>
<p>Volte rápido </p>
<p>De volta ao ponto de ônibus agora há pouco, descobri que o carro realmente parou ali<br>Depois de mostrar os detalhes da reserva com o motorista, ele pegou o Master </p>
<p>Nesse ínterim, perguntei ao motorista se havia algum ônibus espacial na estação Xiaotianyuan.<br>A resposta é muito longe não<br>Não consigo entender como encontrar esta estação<br>Existem apenas algumas paragens de autocarro nas proximidades, encontradas pelo nome </p>
<p>O que mais deixa o magozinho vomitar sangue é que o carro voltou pelo mesmo caminho que acabou de voltar, só avançou 500m e deu uma volta em U na entrada do hotel … </p>
<p>Não é que o pequeno mago seja cego. </p>
<p>Então, se você for para Hakone do Aeroporto de Narita, não perca Odakyu </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-1-0</title>
    <url>/pt/Japan-2-1-0/</url>
    <content><![CDATA[<h1 id="Hakone-0"><a href="#Hakone-0" class="headerlink" title="Hakone 0"></a>Hakone 0</h1><p>É só escolher este hotel, já estive lá algumas vezes, e ele é considerado muito bom em Hakone<br>O amigo do Pequeno Mago disse </p>
<p>Depois de olhar o preço, o pequeno mago não pôde deixar de perguntar </p>
<p>‘Eu vou sozinho, por que eu fico em um hotel tão bom?’<br>Porque um bom hotel será construído na fonte termal ♨️ o olho da primavera, da próxima vez que você precisar tirar água, a temperatura não é garantida </p>
<p>‘Vá sozinho, por que você quer ficar em um hotel tão bom’<br>Este hotel pode escolher um quarto com uma fonte termal na varanda, em vez de ir aos banhos masculinos e femininos, é muito privado </p>
<p>‘Eu vou sozinho’<br>Depois de trabalhar continuamente por tanto tempo, vamos relaxar e encarar isso como uma viagem de formatura 🎓 ✈️ Bem </p>
<p>Então o pequeno mago não conseguiu evitar a tentação e ordenou que Hakone Kowakien Tenyu<br>Ouvir o nome me deixa à vontade </p>
<a id="more"></a>

<hr>
<h2 id="Tenyu"><a href="#Tenyu" class="headerlink" title="Tenyu"></a>Tenyu</h2><p>Depois que o pequeno mago foi puxado para o hotel pelo ônibus, a bagagem ficou molhada devido à chuva<br>A irmã mais nova da recepcionista pegou uma toalha novinha em folha para limpar a bagagem 🧳 e ajudou a entregá-la no quarto </p>
<p>O pequeno mago sentiu que era desnecessário e, após muito tempo escalando a estrada da montanha, não tinha energia para falar e só suspirou pelo serviço. </p>
<p>Como disse Hao, a fonte termal está na varanda<br>Há um pequeno botão ao lado dela. Basta pressionar a fonte termal que cheira a enxofre e ela aparecerá.<br>Vá para a máquina de venda automática para comprar um monte de bebidas energéticas para evitar a desidratação e, em seguida, comece a cozinhar </p>
<p>Havia chuva fraca e neblina do lado de fora da varanda, e as cortinas farfalharam com a brisa da montanha. </p>
<p>O pequeno mago ficou na fonte termal olhando o calor crescente até tarde da noite, ouvindo o som do vento e da chuva lá fora, sentindo que tudo valia a pena </p>
<hr>
<p>Acorde no dia seguinte, o nevoeiro não se dissipou </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21000.mp4">
</video>

<p>O pequeno mago é muito tímido e não gosta de conhecer pessoas<br>Eu planejava deitar na varanda por dois dias </p>
<p>Porém, faminto e faminto, ele foi para a sopa masculina no último andar.<br>Fiquei atordoado em um instante </p>
<p>Embora o iPhone X 📱 seja à prova d’água<br>Embora houvesse apenas uma pessoa na piscina, quando o pequeno mago chegou, ele saiu </p>
<p>Mas esse tipo de lugar sincero só pode roubar fotos oficiais </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21020.jpg" alt=""></p>
<p>Uau, parece a piscina infinita de Marina Bay Sands em Po County<br>É que a piscina foi substituída por uma fonte termal </p>
<p>Então o pequeno mago olhou para as montanhas ao longe, pensando que havia uma sopa feminina ao lado<br>Desça as escadas e descubra que a sopa feminina está na verdade lá embaixo, e homens e mulheres vão trocá-la todos os dias<br>Não sei se é ☯️ há um bom equilíbrio entre yin e yang </p>
<p>Portanto, não deve ser como o último andar, você só pode ver as montanhas da casa </p>
<p>Isso é chato, o pequeno mago planeja não sair da sala no dia seguinte </p>
<p>O fato é que<br>O quinto andar é um pequeno lago com folhas caídas 🍂<br>Há uma cachoeira que desce do morro a mais de dez metros de distância<br>Esta cachoeira é uma fonte termal </p>
<p>Desamparado, o funcionário não deu a foto<br>É uma grande surpresa </p>
<p>O café da manhã também é ótimo<br>Você pode escolher o estilo japonês ou ocidental<br>Para a janela, do lado de fora está uma floresta de bambu </p>
<hr>
<h2 id="pequeno-Principe"><a href="#pequeno-Principe" class="headerlink" title="pequeno Príncipe"></a>pequeno Príncipe</h2><p>Será cozido afinal<br>Pequeno Mago teve que sair e passear </p>
<p>Fiquei surpreso ao descobrir que há um pequeno templo do príncipe (museu) ao lado dele </p>
<p>PS: O primeiro amor do pequeno mago ama o pequeno príncipe </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21000.jpg" alt=""></p>
<p>Já em janeiro de 3102, o pequeno mago havia estudado o pequeno príncipe<br>A linha do tempo desta série também acontece mais tarde<br>Então o nome foi mais ou menos inspirado </p>
<h3 id="Little-Prince-Aircraft"><a href="#Little-Prince-Aircraft" class="headerlink" title="Little Prince Aircraft"></a>Little Prince Aircraft</h3><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21001.jpg" alt=""></p>
<h3 id="Principezinho-rosa"><a href="#Principezinho-rosa" class="headerlink" title="Principezinho rosa"></a>Principezinho rosa</h3><blockquote>
<p>Minha rosa, os outros pensam que ela é como você, mas só ela é melhor do que todos vocês. Porque ela foi regada por mim. Porque eu a coloquei na capa de flores. Porque ela estava protegida por uma tela. Porque eu me livrei das lagartas dela. Porque eu ouvi suas reclamações, suas vanglórias e, às vezes, seu silêncio. Porque ela é minha rosa. </p>
</blockquote>
<blockquote>
<p>Se você ama uma flor que desabrocha no vasto mar de estrelas, então, quando olhar para as estrelas, você se sentirá satisfeito </p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21002.jpg" alt=""></p>
<hr>
<p>Mas com fome, o primeiro amor na Academia de Magia fez o pequeno mago esperar três anos<br>E finalmente nos reunimos e o largamos em uma semana<br>Então o pequeno mago odeia a casa e Wu não tem afeição pelo pequeno príncipe<br>Não entendo porque sou tão respeitado no mundo todo </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21003.jpg" alt=""></p>
<p>Depois de uma rodada, fui ao Museu do Cristal </p>
<h2 id="Museu-Hakone-Glass-Forest"><a href="#Museu-Hakone-Glass-Forest" class="headerlink" title="Museu Hakone Glass Forest"></a>Museu Hakone Glass Forest</h2><p>Diz-se que deveria ser assim: </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21021.jpg" alt=""></p>
<p>O que o pequeno mago viu foi isto: </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21022.jpg" alt=""></p>
<p>Só aqui é como um conto de fadas<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21004.jpg" alt=""></p>
<h2 id="Gora-Park"><a href="#Gora-Park" class="headerlink" title="Gora Park"></a>Gora Park</h2><p>Diz-se que deveria ser assim: </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21003.jpeg" alt=""></p>
<p>O pequeno mago correu e viu: </p>
<p>Sala de chá fechada<br>Jardim de musgo puro<br>O jardim de rosas não é nada romântico 🌹🌹🌹 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21011.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21023.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21009.jpg" alt=""></div></div></div>

<p>Recentemente, a pequena maga tem importunado sua irmã mais velha para ensiná-la a fazer uma imagem como a do folheto<br>🐶🐶🐶 </p>
<hr>
<p>Mesmo assim, o pequeno mago ainda viu árvores altas da floresta de bambu e musgo e nuvens brancas </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21008.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21006.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21010.jpg" alt=""></div></div></div>

<p>O mesmo cenário é assim nos escritos dos antigos na Dinastia pré-Qin </p>
<blockquote>
<p>Bai Hua Jian Xi, Bai Mao Shu Xi. Meu filho está longe, me deixando sozinho!<br>Yingying Baiyun, exibindo Swarovski. O dia está difícil, o filho não tem ciúme! </p>
<ul>
<li>“Xiaoya Baihua” </li>
</ul>
</blockquote>
<hr>
<p>As estações não estão certas, há ganhos e perdas </p>
<p>Vamos voltar e cozinhar a carne<br>Pequeno mago se consolou </p>
<p>Em seguida, um jornal alemão 🇩🇪 irmão à força Amway uma bebida🥤 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21005.jpg" alt=""></p>
<p>Em seguida, compre uma lata extra e leve-a de volta como presente 🎁 </p>
<h2 id="Museu-Paula"><a href="#Museu-Paula" class="headerlink" title="Museu Paula"></a>Museu Paula</h2><p>Museu de Arte Pola </p>
<p>Pequeno mago viu uma coisa boa </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21100.jpg" alt=""></p>
<p>Eu rapidamente fotografei e enviei para mamãe e papai 👨👩 pergunto se você quer comprar dois conjuntos<br>Se eu tiver Parkinson no jantar, não terei medo de cair </p>
<!--more-->

<h2 id="Onibus"><a href="#Onibus" class="headerlink" title="Ônibus"></a>Ônibus</h2><p>O Google Map, que sempre foi fácil de usar, atrai Hakone </p>
<p>O ônibus aqui 🚌 é muito fascinante<br>Eu não encontrei nenhum problema em grandes cidades antes </p>
<p>No entanto, se você está com fome, não digamos que o Japão está viajando à esquerda. O mapa é fácil de ler.<br>O que mais vomita sangue é que a placa do ponto de ônibus não indica a estação de partida - a estação terminal<br>Não há carros na estrada da montanha, por isso é difícil dizer a direção<br>São poucos os transeuntes, e os que se encontram não sabem muito inglês </p>
<p>Cada vez que caminho até o ponto de ônibus, não sei se devo perseguir o carro quando vejo que chegou.<br>E sempre pergunte ao motorista se ele fez a coisa certa </p>
<h2 id="Owakudani"><a href="#Owakudani" class="headerlink" title="Owakudani"></a>Owakudani</h2><p>Eles te odeiam </p>
<p>Faça um teleférico em Gora 🚠 </p>
<p>De repente vi o Monte Fuji 🗻 </p>
<p>Embora no teleférico, o arco elegante ainda é incrível </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21101.jpg" alt=""></p>
<p>Como acabei de terminar o aprendizado de máquina de Andrew Ng no Coursera há dois meses<br>Vire as [notas 📒] anteriores (<a href="https://leihao0.github.io/Logistic-Regression/">https://leihao0.github.io/Logistic-Regression/</a>)<br>Lembre-se da equação de distribuição gaussiana </p>
<p>$$g(x)=\frac{1}{\sigma \sqrt{2\pi }}^{-\frac{1}{2}( \frac{(x-\mu )}{\sigma} )^{2}}$$</p>
<p>Como o Monte Fuji 🗻 não é um elemento bidimensional, ele não pode ser usado diretamente. Você precisa deformar a fórmula e excluir $ \ mu $ </p>
<p>$$z=\frac{20}{\sigma \sqrt{2\pi }}^{-\frac{R^{2}}{2\sigma^{2}} }, \sigma= 2, R = \sqrt{ x^{2} + y^{2}}$$</p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21100.mp4">
</video>

<p>Claro que a altura e inclinação estão erradas<br>Você pode experimentar com regressão linear. Naturalmente, você não quer um tom humano.<br>Claro 🗻 o topo é côncavo, e uma curva de sorriso precisa ser sobreposta </p>
<p>… </p>
<p>Neste momento o teleférico 🚠 passou pelo ponto mais alto </p>
<p>A brisa da montanha soprou, 🚠 começou a tremer violentamente<br>A montanha abaixo ⛰ ainda fuma<br>Embora seja muito alto, ainda cheira a enxofre pungente </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21101.mp4">
</video>

<p>Não admira que haja fontes termais aqui ♨️ </p>
<p>Sai do carro, há um ovo maior que um humano 🥚<br>Você pode ver o Monte Fuji atrás 🗻, parece que a nuvem agora </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan-2113.jpg" alt=""></p>
<p>A garota da Alemanha 🇩🇪 disse ao pequeno mago que ela deveria comprar ovos para comer🥚 </p>
<p>O pequeno mago não está claro. Então, os ovos estrangeiros são melhores do que os jardins do continente? </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan-2112.jpg" alt=""></p>
<p>Ok, os ovos aqui são pretos 🌚🌚🌚 </p>
<p>Eu comi cinco de uma vez, e não parecia estranho </p>
<p>Nesse ínterim, uma garota europeia e americana perguntou ao pequeno mago como quebrar a casca do ovo<br>Desamparados não sabem bater<br>Apontado para a porta </p>
<p>Irmã papel surpresa<br>‘Contra a porta ???’ </p>
<p>Oh, eu usei contra </p>
<h2 id="Museu-Hakone-Ashinoko-Narukawa"><a href="#Museu-Hakone-Ashinoko-Narukawa" class="headerlink" title="Museu Hakone Ashinoko Narukawa"></a>Museu Hakone Ashinoko Narukawa</h2><p>Em seguida, 🚠 depois de desembarcar, embarque no barco no porto de Togendai, e o navio pirata Hakone faz um círculo ao redor do lago Ashi e desembarca no porto de Motohakone </p>
<p>Lembre-se de comprar a primeira classe antes do embarque, caso contrário, você pode não ter uma passagem e não pode compensar por isso.<br>Eu serei perturbado pelo vento da montanha lá fora </p>
<p>Mas porque eu fiz algo semelhante em Osaka antes, não há muita novidade<br>Eu vi uma escultura na galeria de arte </p>
<p>Tão sutil<br>O material acabou sendo marfim </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21102.jpg" alt=""></p>
<p>Este é ainda mais incrível<br>Aqui está uma flor<br>Portanto, este é o nome de tubo Wan ** hua **, mas sua origem? </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21102.mp4">
</video>

<p>Bela e tranquila cena de neve </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21103.jpg" alt=""></p>
<p>Depois, no café ☕️ shop na galeria de arte<br>Olhando para o Monte Fuji 🗻 atordoado até fechar </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21104.jpg" alt=""></p>
<hr>
<p>De modo geral, as notas de viagem mencionam apenas o lado bom<br>É como se essas pessoas tivessem pulado de paraquedas na atração sem bagagem ou equipamento </p>
<p>Pequeno Mago não é exceção<br>Porque a bagagem pode ser despachada na fonte termal ♨️ hotel<br>Basta adicionar o endereço e a bagagem 🧳 passará automaticamente </p>
<p>Parece tão bom que quando você pega o pequeno trem para o norte,<br>Uma vez que havia suspeita de chegar à Estação Fujisawa (Estação Fujisawa)<br>A bagagem 🧳 ficará em Hakone para sempre </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-2-0</title>
    <url>/pt/Japan-2-2-0/</url>
    <content><![CDATA[<h1 id="Fujisawa"><a href="#Fujisawa" class="headerlink" title="Fujisawa"></a>Fujisawa</h1><p>Felizmente, a bagagem não foi perdida </p>
<p>Eu planejava morar em Kamakura<br>Quando eu não tive escolha a não ser reservar o itinerário, não havia hotéis na reserva<br>Eu moro perto de Fujisawa </p>
<p>Na verdade, muito perto de Kamakura<br>Compre uma passagem de um dia para a Enoshima Electric Railway, e você pode chegar lá em 40 minutos<br>Você pode descer do ônibus e dar uma volta em Enoshima </p>
<p>Fatos comprovam que Fujisawa não perde<br>Porque depois que cheguei na Shonan Wing International, recebi um controle de acesso especial </p>
<div style="width: 300px">
<img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22000.jpg" />
</div>

<a id="more"></a>

<p>A recepcionista e o elevador são todos no estilo do século passado </p>
<p>É incrível </p>
<h2 id="Loja-principal-Asahaya"><a href="#Loja-principal-Asahaya" class="headerlink" title="Loja principal Asahaya"></a>Loja principal Asahaya</h2><p>Por falta de preparo físico, o pequeno mago é quase meio-dia quando sai todos os dias<br>Então, quando desci do ônibus, vi um arroz de enguia perto de mim<br>Além disso, uma vez comi arroz de enguia em Tóquio<br>Eu ouvi a notícia de que as enguias japonesas vão ser comidas<br>Entrei e dei uma olhada </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22002.jpg" alt=""></p>
<p>Eu não esperava que fosse uma loja centenária<br>Olhando para trás, ainda era a Dinastia Qing </p>
<h2 id="Tsuruoka-Hachimangu"><a href="#Tsuruoka-Hachimangu" class="headerlink" title="Tsuruoka Hachimangu"></a>Tsuruoka Hachimangu</h2><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22001.jpg" alt=""></p>
<p>Existem muitas estátuas de Buda dentro </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22004.jpg" alt=""></p>
<p>então? Família feliz 👪? ? ? </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22005.jpg" alt=""></p>
<p>Pátio traseiro </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22006.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22007.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22008.jpg" alt=""></p>
<h2 id="O-Grande-Buda-de-Kamakura"><a href="#O-Grande-Buda-de-Kamakura" class="headerlink" title="O Grande Buda de Kamakura"></a>O Grande Buda de Kamakura</h2><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22009.jpg" alt=""></p>
<p>Naquela época, o pequeno mago ainda estava no segundo ano do ensino médio<br>Veja o majestoso Buda<br>O que, o Grande Prajna Ardente, a Roda Dourada da Compaixão, Templo Tianyin, todos os meus cérebros saíram </p>
<p>No entanto, acho que Huigen ainda não abriu e não ouviu o som do céu flutuando à distância. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22010.jpg" alt=""></p>
<p>Você ficará desiludido depois de desviar para trás do Grande Buda<br>o que é isso? A interface final do Gundam </p>
<p>Quando eu estava prestes a me virar, de repente encontrei uma pequena porta do lado direito com as palavras ** Entrada ** </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22011.jpg" alt=""></p>
<p>Uh ok, esta estátua de Buda pode realmente entrar </p>
<p>Então, a asa traseira que acabei de ver era uma janela quando vista de dentro, e pude subir e olhar para fora ╮ (￣ ▽ ￣ “”) ╭ </p>
<h2 id="Kamakura-High-School"><a href="#Kamakura-High-School" class="headerlink" title="Kamakura High School"></a>Kamakura High School</h2><p>Enoshima Electric Railway </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22000.mp4">
</video>

<p>Antes de ir para a Kamakura High School </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22012.jpg" alt=""></p>
<p>Ok, revele a idade<br>O pequeno mago nunca viu uma enterrada quando era criança<br>Então, eu não sei o que está acontecendo com aqueles que estão nos trilhos 🛤️ apenas 🚃 frontalmente </p>
<p>Ouvi dizer que está queimando, semelhante à minha academia de herói?<br>Como não há ressonância, tirei uma foto à distância e fui até a praia em frente para aproveitar o sol e caminhar até Enoshima. </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-3-0</title>
    <url>/pt/Japan-2-3-0/</url>
    <content><![CDATA[<h1 id="Yokohama-Yokohama-City"><a href="#Yokohama-Yokohama-City" class="headerlink" title="Yokohama Yokohama City"></a>Yokohama Yokohama City</h1><p>Por um momento, o pequeno mago pensou que ele estava de volta à capital imperial </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23000.jpg" alt=""></p>
<a id="more"></a>

<p>Porque eu sobrevivi na capital imperial por 3,5 anos<br>Então, eu não tenho interesse em Chinatown<br>Bem, mesmo que seja japonês, não estou interessado </p>
<p>Nunca pensei<br>Eu posso ver o Hotel Pequim mesmo depois de voar tão longe<br>Ignore-o diretamente. Verifique na hora do almoço </p>
<p>Porque Monterey fica perto do mar<br>Não sei quanto tempo dormi, mas fui acordado por um apito distante<br>Abriu as cortinas e olhou<br>Eu sinto que adicionar um filtro é a pintura a óleo vista no museu </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23001.jpg" alt=""></p>
<p>Porque é ótimo ser acordado pela sirene<br>Acabei de sair e caminhar à beira-mar </p>
<p>Há alguns patinhos fofos flutuando na costa<br>Ao preparar 📷, Xiao 🦆 mergulhou na água para pescar 🐟 foi<br>Uh, então eu posso mergulhar 🤿 ah </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23003.jpg" alt=""></p>
<p>O mar no Japão é muito limpo e sem cheiro </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23002.jpg" alt=""></p>
<h2 id="Hikawa-Maru"><a href="#Hikawa-Maru" class="headerlink" title="Hikawa Maru"></a>Hikawa Maru</h2><p>NYK Hikawamaru<br>Nippon Yusen Hikawa Maru </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23004.jpg" alt=""></p>
<p>Acontece que este navio pode ser visitado<br>No início era um navio de cruzeiro e depois participou da Segunda Guerra Mundial<br>Depois de se aposentar, ele voltou para sua cidade natal </p>
<p>Este é o som da sirene antes?<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23009.jpg" alt=""></p>
<p>Não haverá banheiros femininos de agora em diante<br>Felizmente, o pequeno mago é homem </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23007.jpg" alt=""></p>
<p>Existem várias janelas grandes na cabine da primeira classe onde você pode comer, ler e até mesmo tomar um banho 🛀<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23008.jpg" alt=""></p>
<p>A cabine da terceira classe é como um pequeno mago. O dormitório da Academia de Magia só pode ser apertado para dormir<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23010.jpg" alt=""></p>
<p>Infelizmente, existe uma lacuna tão grande na Showa 16? </p>
<h2 id="Quebra-mar-de-nariz-de-elefante"><a href="#Quebra-mar-de-nariz-de-elefante" class="headerlink" title="Quebra-mar de nariz de elefante"></a>Quebra-mar de nariz de elefante</h2><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23005.jpg" alt=""></p>
<h2 id="Osanbashi-Hall"><a href="#Osanbashi-Hall" class="headerlink" title="Osanbashi Hall"></a>Osanbashi Hall</h2><p>Desde que vi aviões decolando e pousando no telhado do Aeroporto de Haneda<br>Só saiba 🇯🇵 a maioria dos edifícios grandes deve ser vista </p>
<p>Mas este é apenas um cais<br>Congelado, parece que um teatro também é ótimo </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23006.jpg" alt=""></p>
<hr>
<p>Você pode comprar bilhetes de balsa para passeios turísticos em Yokohama perto de Hikawa Maru<br>1-2 horas no mar, o jantar é servido a bordo, você não terá fome </p>
<p>Bebida 🥤 Atrás dela está uma vela 🕯️, a luz da vela pisca com o barco 🚢 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23000.gif" alt=""></p>
<p>Não parece romântico<br>Na verdade, as outras mesas estão em pares<br>Só o pequeno mago aqui é uma pessoa de pé e pendurada </p>
<p>Seria bom ter papel irmã </p>
<h2 id="Museu-do-Modelo-Ferroviario-de-Hara"><a href="#Museu-do-Modelo-Ferroviario-de-Hara" class="headerlink" title="Museu do Modelo Ferroviário de Hara"></a>Museu do Modelo Ferroviário de Hara</h2><p>Museu Hara Model Railway </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23100.jpg" alt=""></p>
<!--more-->

<p>De repente, vi um prédio enorme<br>Embora Little Mage não seja tão obcecado como Sheldon<br>Mas ainda é divertido ver todos os tipos de pequenos trens dentro </p>
<p>Por exemplo, eu vi o número Hakone que subiu a montanha antes<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23101.jpg" alt=""></p>
<p>É como o pequeno trem verde indo para casa na escola<br>Claro que isso é um bonde 🚃<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23102.jpg" alt=""></p>
<p>Nanhai Ninja?<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23103.jpg" alt=""></p>
<p>O tipo de Harry Potter<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23104.jpg" alt=""></p>
<p>E no céu<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23105.jpg" alt=""></p>
<p>Fiquei realmente chocado atrás<br>Uma casa grande inteira<br>Existem jardins ornamentais, túneis, estações centrais urbanas e rurais </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23100.mp4">
</video>

<p>No começo eu vi a antena atrás e pensei que fosse um cabo de alta tensão<br>Mais tarde, encontrei um teleférico 🚠 descendo lentamente do jardim ornamental </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23102.mp4">
</video>

<p>Se você tem filhos, você pode ser um despachante<br>Controle os trilhos 🛤️ direção </p>
<p>Há um modelo de Yokohama na parte de trás<br>Há tempo na roda-gigante 🎡, cerca de 3 minutos por dia<br>Parte às 6 horas e o metrô para às 10 horas. Vai parar no horário e ultrapassará 996.233 </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23101.mp4">
</video>

<p>Só posso dizer que é realmente um bunker<br>Se for menino é super recomendado </p>
<h2 id="Centro-de-Tecnologia-Mitsubishi-Minato-Mirai"><a href="#Centro-de-Tecnologia-Mitsubishi-Minato-Mirai" class="headerlink" title="Centro de Tecnologia Mitsubishi Minato Mirai"></a>Centro de Tecnologia Mitsubishi Minato Mirai</h2><p>Mitsubishi Minato Mirai Inzu st Ria l Museu m </p>
<p>Força da natureza<br>Esmagar você em minutos </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23107.jpg" alt=""></p>
<p>Oh, haverá ANA então<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23108.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23109.jpg" alt=""></p>
<p>Grande navio </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23110.jpg" alt=""></p>
<p>Hakone Maru Kamakura Maru<br>Será que toda cidade famosa tem um navio?<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23116.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23117.jpg" alt=""></p>
<p>Lembrei-me de novo 🇮🇹 do navio de cruzeiro gigante que comeu metade do estacionamento 🚢<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23118.jpg" alt=""></p>
<h2 id="Yokohama-Landmark-Tower"><a href="#Yokohama-Landmark-Tower" class="headerlink" title="Yokohama Landmark Tower"></a>Yokohama Landmark Tower</h2><p>Yokohama Landmark Tower </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23106.jpg" alt=""></p>
<p>Lá dentro está o elevador mais rápido do mundo<br>Mas em 2004 foi superado pelo Taipei 101, onde está minha irmã mais velha.<br>Isso pode chegar ao topo em quarenta segundos, a velocidade mais alta é 750 m / min<br>Na verdade, é muito estável, mas alguns ouvidos doem </p>
<h2 id="Jardim-do-ceu"><a href="#Jardim-do-ceu" class="headerlink" title="Jardim do céu"></a>Jardim do céu</h2><p>SKY GARDEN </p>
<p>Há um deck de observação 360 acima<br>A roda gigante 🎡 também se tornou muito pequena </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23111.jpg" alt=""></p>
<p>O mais gostoso é que o dim sum do topo do prédio não tem muita diferença com o do andar de baixo<br>Também fornece um sorvete enorme de acordo com a altura do prédio 🍦 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23113.jpg" alt=""></p>
<p>Sinta-se à vontade e sente-se, coma e observe o pôr do sol (por que é o pôr do sol de novo 🌄) </p>
<p>Local de explosão nuclear<br>O sol 🌞 atingiu o Monte Fuji 🗻<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23112.jpg" alt=""><br>Ok, isso deve ser apenas um fenômeno de difração normal? </p>
<p>Porque o sorvete é muito grande<br>Comeu até escurecer<br>Eu realmente não fiquei deliberadamente longe de assistir a cena noturna </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23114.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23115.jpg" alt=""></p>
<hr>
<p>Realmente digno de ser o Porto de Mirae do século 21<br>Você sabe que a construção começou nos anos 90<br>Landmark Tower já estava lá em 1993 </p>
<p>Seja a sereia do cais à beira-mar ⛵️<br>Mar ainda limpo<br>E cidades modernas<br>Faz o pequeno mago pensar que é incrível, incrível, incrível </p>
<p>Infelizmente, o itinerário é de apenas dois dias<br>Olhando para a linda roda-gigante, estou pronto para voltar para Tóquio </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23100.gif" alt=""></p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-4-0</title>
    <url>/pt/Japan-2-4-0/</url>
    <content><![CDATA[<h1 id="Toquio"><a href="#Toquio" class="headerlink" title="Tóquio"></a>Tóquio</h1><div id="googleMap1723" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap1723'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 11,
       'center': new window.google.maps.LatLng( 35.710 , 139.808 ),
     },
     target = document.getElementById('googleMap1723'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.7100627 , 139.8085117 ),
        'map': map,
        'title': 'Tokyo Skytree',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Tokyo Skytree'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.6267108 , 139.8828892 ),
        'map': map,
        'title': 'Tokyo DisneySea',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Tokyo DisneySea'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.6398972 , 139.859985 ),
        'map': map,
        'title': 'Tokyo Sea Life Park',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Tokyo Sea Life Park'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 35.6193359 , 139.7742108 ),
        'map': map,
        'title': 'National Museum of Emerging Science and Innovation',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'National Museum of Emerging Science and Innovation'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<h2 id="Tokyo-Skytree"><a href="#Tokyo-Skytree" class="headerlink" title="Tokyo Skytree"></a>Tokyo Skytree</h2><p>Já era meio-dia quando cheguei em Tóquio<br>Desta vez me hospedei no Richmond Hotel ao lado dele, o quarto como sempre é pequeno + requintado<br>Do outro lado da estrada está a árvore do céu claro<br>O restaurante especial do hotel é, na verdade, Sizzler, um visitante frequente em Pequim </p>
<a id="more"></a>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-00.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-03.jpg" alt=""></div></div></div>

<p>Quando vim da última vez, subi e dei uma olhada. Naquela época, havia o tema Atacando Gigante, mas infelizmente eu não conhecia o Capitão. </p>
<p>Além disso, devido ao pouco tempo, não percebi que havia um enorme shopping lá embaixo. </p>
<p>Depois de um cochilo, acordei à noite 🌆, fui passear no shopping </p>
<p>Eu descobri que estava trabalhando no tema de Harry Potter </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-04.jpg" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-07.jpg" alt=""></div></div></div>

<p>Existem muitos mais Pokémon<br>Porque eu só vi o Pokémon especial, então eu só conheço a primeira geração de Pokémon<br>Jenny Turtle, Fat Ding, Wonder Frog Tadpole, Gauss, Little Fire Dragon, Quick Dragon, Pikachu, Kabimon, etc. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-10.jpg" alt=""></div></div></div>

<p>Qual anime é o último? Love Live! Sunshine? o que é isso mais? </p>
<h2 id="Mar-da-Disney-de-Toquio"><a href="#Mar-da-Disney-de-Toquio" class="headerlink" title="Mar da Disney de Tóquio"></a>Mar da Disney de Tóquio</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-13.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-14.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-16.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-17.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-19.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-20.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-21.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-22.jpg" alt=""></div></div></div>

<p>🇯🇵 Considerado o único parque temático DisneySea do mundo<br>Então eu não fui ao parque da Disney próximo a ele </p>
<p>Titanic, vulcão 🌋, templo 🛕 </p>
<p>Mas estava chovendo<br>Embora a equipe ainda esteja entusiasmada em criar uma atmosfera<br>Mas não aguento o tempo forte<br>Refrescante </p>
<p>Mais nenhum bilhete expresso<br>Pipoca 🍿️ Leva uma hora para ficar alinhado<br>Outros projetos, como batelões por duas horas </p>
<p>Apressado<br>Saiu </p>
<p>Experiência muito ruim<br>Muito, muito, muito menos divertido do que o Universal Studio em Osaka da última vez </p>
<p>Eu pensei que a Disney poderia jogar por um dia<br>O resultado saiu às 10 horas<br>Muito embaraçoso, só posso andar por aí </p>
<h2 id="Tokyo-Sea-Life-Park"><a href="#Tokyo-Sea-Life-Park" class="headerlink" title="Tokyo Sea Life Park"></a>Tokyo Sea Life Park</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-25.jpg" alt=""></div></div></div>

<p>Eu pensei que era um observatório à distância<br>Cara grande, você está sorrindo 😂<br>E pequeno pinguim </p>
<h2 id="Museu-Nacional-de-Ciencia-Emergente-e-Inovacao"><a href="#Museu-Nacional-de-Ciencia-Emergente-e-Inovacao" class="headerlink" title="Museu Nacional de Ciência Emergente e Inovação"></a>Museu Nacional de Ciência Emergente e Inovação</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-27.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-28.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-29.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-31.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-32.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-33.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-34.jpg" alt=""></div></div></div>

<p>BSOD, AI Horror Valley, Fetus </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-37.jpg" alt=""></div></div></div>

<p>Saí e encontrei um barco perto de mim 🚢<br>Se você olhar de perto, descobriu-se que era um prédio, um museu de ciência de navio<br>Infelizmente está fechado </p>
<p>A bola no meio do prédio atrás é o planetário </p>
<h2 id="Replica-da-Estatua-da-Liberdade-em-Odaiba"><a href="#Replica-da-Estatua-da-Liberdade-em-Odaiba" class="headerlink" title="Réplica da Estátua da Liberdade em Odaiba"></a>Réplica da Estátua da Liberdade em Odaiba</h2><p>Continue andando<br>Vendo à distância 👀, espere, aquela é a Estátua da Liberdade 🗽? ? ?<br>O que está atrás é a ponte Golden Gate? ? ? </p>
<p>Eu entrei e dei uma olhada, sério …<br>Minha mente 🧠 mostrou a frase brilhante ** faker ** </p>
<p><a href="https://en.wikipedia.org/wiki/Replicas_of_the_Statue_of_Liberty">Réplica da Estátua da Liberdade</a> </p>
<blockquote>
<p>Para comemorar o “Ano da França Japonesa”, de abril de 1998 a maio de 1999, a Estátua da Liberdade francesa da Ilha Cygnes veio a Odaiba, Tóquio. [3] Devido à sua popularidade, uma réplica da Estátua da Liberdade francesa foi erguida no mesmo lugar em 2000. Também no Japão, uma pequena Estátua da Liberdade fica no bairro comercial Amerika-mura (American Village) em Osaka, Japão. Outra réplica está em Oirase [71] perto da cidade de Shimoda, na parte sul da cidade de Misawa, Prefeitura de Aomori, uma base da Força Aérea dos EUA com 8.000 habitantes. Uma réplica da Estátua da Liberdade na cidade de Ishinomaki, província de Miyagi, foi danificada pelo terremoto e tsunami de Tohoku em 2011. [72] Há também uma réplica na cidade de Oyabe, província de Toyama. [73] </p>
</blockquote>
<p>É isso aí </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-40.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-39.jpg" alt=""></div></div></div>

<h2 id="Ate"><a href="#Ate" class="headerlink" title="Até"></a>Até</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-42.jpg" alt=""></div></div></div>

<p>Uau </p>
<p>Lembre-se de assistir o Gundam Seed ou pedir emprestado um disco de um colega 👨‍🎓 quando eu estava no colégio 💽 assistir secretamente em casa<br>Alguns anos atrás, houve um remake, mas eu não tinha visto antes, afinal<br>Minha juventude acabou </p>
<p>Não consigo lembrar o enredo ou algo assim agora<br>Basta lembrar a liberdade de Kira Gundam<br>Romper a atmosfera<br>Corte muitos gravetos<br>Então voou para longe </p>
<p>Mas este aqui na frente da Uniqlo<br>Veja halo e canto<br>Isso deveria ser um unicórnio 🦄️<br>Felizmente, eu assisti ao filme UC mais tarde, o morto-vivo de Laplace ou algo assim, caso contrário, não sei de novo </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-43.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-44.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-41.jpg" alt=""></div></div></div>

<p>Existem compradores na loja ao lado dele </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-45.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-46.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-4-1</title>
    <url>/pt/Japan-2-4-1/</url>
    <content><![CDATA[<h1 id="Toquio"><a href="#Toquio" class="headerlink" title="Tóquio"></a>Tóquio</h1><div id="googleMap8634" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap8634'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 13,
       'center': new window.google.maps.LatLng( 35.705 , 139.774 ),
     },
     target = document.getElementById('googleMap8634'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.6853037 , 139.756059 ),
        'map': map,
        'title': 'Ninomaru Garden',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Ninomaru Garden'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.6943813 , 139.7517535 ),
        'map': map,
        'title': 'Science Museum',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Science Museum'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.7166529 , 139.7691198 ),
        'map': map,
        'title': 'Ueno Zoo',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Ueno Zoo'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 35.7096274 , 139.7982875 ),
        'map': map,
        'title': 'Azumabashi',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'Azumabashi'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<h2 id="Palacio-Imperial"><a href="#Palacio-Imperial" class="headerlink" title="Palácio Imperial"></a>Palácio Imperial</h2><p>Na verdade, você não pode entrar no Palácio Imperial, você só pode olhar para o jardim dos fundos </p>
<p>Jardim do Castelo Edo Ninomaru </p>
<p>Ainda é final de março, então apenas parte das flores de cerejeira 🌸 estão em plena floração<br>Também tem laranjas no meio 🍊 … </p>
<p>Xiaoqiao Liushui Renjia<br>Há um pequeno pavilhão no meio que vende água, lanches e souvenirs </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-01.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-04.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-12.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-14.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-18.jpg" alt=""></div></div></div>

<h2 id="Museu-Nacional-de-Arte-Moderna-Toquio"><a href="#Museu-Nacional-de-Arte-Moderna-Toquio" class="headerlink" title="Museu Nacional de Arte Moderna, Tóquio"></a>Museu Nacional de Arte Moderna, Tóquio</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-20.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-21.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-22.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-25.jpg" alt=""></div></div></div>

<h2 id="Museu-de-Ciencia-e-Tecnologia"><a href="#Museu-de-Ciencia-e-Tecnologia" class="headerlink" title="Museu de Ciência e Tecnologia"></a>Museu de Ciência e Tecnologia</h2><p>Bicicleta precoce 🚴, como jogar acrobacia<br>Que grande diamante 💎<br>Rodas Shinkansen 🚄<br>Fingir espaço multidimensional<br>Turntable que não está tonto </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-27.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-29.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-30.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-32.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-33.jpg" alt=""></div></div></div>

<p>À noite 🌃 volte e passe pelo shopping e veja muitos gatos sortudos 🐱<br>O pequeno sócio que iniciou a empresa queria trazer um de volta </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-34.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-35.jpg" alt=""></div></div></div>

<p>De volta ao hotel, encontrei água engarrafada no formato de Skytree<br>Comprei um lápis <br>Existem também flores de cerejeira sazonais 🌸 cola com sabor 😂<br>O sabor é muito mais normal do que o deus das ações gosta </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-66.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-37.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-38.jpg" alt=""></div></div></div>

<h2 id="Museu-Nacional-de-Ciencias"><a href="#Museu-Nacional-de-Ciencias" class="headerlink" title="Museu Nacional de Ciências"></a>Museu Nacional de Ciências</h2><p>Eu vi muitos fósseis de dinossauros que eu vi quando era jovem<br>Três das minhas favoritas </p>
<h3 id="Tiranossauro-🦖"><a href="#Tiranossauro-🦖" class="headerlink" title="Tiranossauro 🦖"></a>Tiranossauro 🦖</h3><blockquote>
<p>Tyrannosaurus rex (nome científico: Tyrannosaurus rex), também conhecido como Tyrannosaurus, é atualmente a única espécie válida de Tyrannosaurus. Pertence ao dinossauro terópode gigante da família Tyrannosaurus. O significado latino do nome é “no lagarto Tirano”. Estima-se que ele tenha até 13 metros de comprimento [1], com altura do quadril de cerca de 4 metros [2] e peso médio de cerca de 9 toneladas. … sua força de mordida é de quase 6 toneladas métricas, equivalente ao peso de um elefante [3] </p>
</blockquote>
<h3 id="Triceratops"><a href="#Triceratops" class="headerlink" title="Triceratops"></a>Triceratops</h3><blockquote>
<p>O gênero Triceratops (nome do gênero: Triceratops), comumente conhecido como Triceratops e Triceratops, é um gênero de Ornithischian Ceratosaurus, que é um dinossauro comedor de plantas. Triceratops são de tamanho médio, quatro patas, cerca de 7 a 10 metros de comprimento … É uma das espécies mais recentes de dinossauros de todos os dinossauros, e o maior e último dinossauro ceratopsaurus, ocupando ** dinossauros não em forma de pássaro ** A grande maioria dos ecossistemas terrestres no último período da Terra (Cretáceo Superior) </p>
</blockquote>
<h3 id="estegossauro"><a href="#estegossauro" class="headerlink" title="estegossauro"></a>estegossauro</h3><blockquote>
<p>O estegossauro é um dos dinossauros que aparecem com mais frequência em livros, quadrinhos, TV ou filmes e é um representante muito famoso dos dinossauros herbívoros; mas o estegossauro, o tiranossauro e o tricerátopo não vivem na mesma época (o estegossauro No período Jurássico, Triceratops e Tiranossauros estavam no período Cretáceo), os principais inimigos do estegossauro eram Alossauro, Barbarossauro e Lagarto </p>
</blockquote>
<h3 id="Trilobite"><a href="#Trilobite" class="headerlink" title="Trilobite"></a>Trilobite</h3><blockquote>
<p>Ele apareceu pela primeira vez no Cambriano, alcançou seu pico no início do Paleozóico e depois diminuiu gradualmente até a extinção. Os últimos trilobitas (Cenoptera) desapareceram com a extinção da biota no final do período Permiano há 250 milhões de anos </p>
</blockquote>
<p>E baleias 🐳<br>Elephant 🐘 história da família </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-39.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-40.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-41.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-43.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-44.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-45.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-47.jpg" alt=""></div></div></div>

<h3 id="Pavilhao-da-Humanidade"><a href="#Pavilhao-da-Humanidade" class="headerlink" title="Pavilhão da Humanidade"></a>Pavilhão da Humanidade</h3><p>Neste longo rio de tempo, sinto que a evolução humana não é fácil<br>A cópia da sorte no livro está bem na sua frente, apenas cerca de um metro<br>Morar em uma casa feita de ossos<br>Espere até que o velho seja mais alto do que eu </p>
<blockquote>
<p>Hoje, todos os humanos pertencem a um único grupo: Homo sapiens sapiens, e não há distinção de espécies. No entanto, segundo o modelo “originário da África”, esta não é a primeira espécie do gênero Homo: o gênero Homo, a primeira espécie do gênero Homo, evoluiu há pelo menos dois milhões de anos, e os Homo vivem na África de maneira diferente. O tempo da região é relativamente curto. O “Homo erectus” evoluiu há mais de 1,8 milhão de anos e, há 1,5 milhão de anos, já se espalhou pelo mundo antigo. </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-50.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-51.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-48.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-49.jpg" alt=""></div></div></div>

<h3 id="gigante-vermelho"><a href="#gigante-vermelho" class="headerlink" title="gigante vermelho"></a>gigante vermelho</h3><p>Combinar o enorme diamante agora 💎 envolverá a questão de saber se você deve comprar um anel de diamante<br>bem conhecido </p>
<blockquote>
<p>Existem três alótropos conhecidos de carbono: diamante, grafite e fulereno. Em termos de termodinâmica, o diamante é menos estável do que a grafite e ** pode se transformar espontaneamente em grafite **, mas a velocidade dessa transformação sob temperatura e pressão normais é muito lenta e pode ser ignorada, então o diamante 💎 pode existir de forma estável. Os diamantes formados na natureza são geralmente formados no ambiente de alta temperatura e alta pressão no interior da Terra e, posteriormente, trazidos à superfície por movimentos geológicos tectônicos, como erupções vulcânicas. Portanto, muitos diamantes são encontrados perto de vulcões. A indústria moderna pode produzir diamante sob alta temperatura e alta pressão, chamado diamante sintético </p>
</blockquote>
<p>Portanto, o anel de diamante não tem outro uso além da função 🦚 de cegar os olhos dos outros<br>Sem falar que a lupa do sol 🌞 🔍 vai evaporar </p>
<p>E metais pesados ​​como ouro e platina </p>
<blockquote>
<p>O número atômico de ouro é maior entre os elementos que ocorrem naturalmente no universo. Acredita-se que este elemento pesado foi produzido durante a nucleossíntese da supernova, quando duas estrelas de nêutrons colidiram, [4] existiam na poeira antes da formação do sistema solar. Como a Terra ainda estava em um estado derretido no início de sua formação, quase todo o ouro da Terra primitiva afundou no núcleo. Portanto, a maior parte do ouro na crosta terrestre e manto é devido ao período posterior de pesado bombardeio (cerca de 4 bilhões de anos atrás) do evento de impacto do asteróide.<br>O ouro era um metal precioso popular antes de ser registrado na história. Era usado como moeda, preservação de valor, joias e arte. No passado, um sistema monetário de padrão ouro baseado em ouro era geralmente implementado em casa e no exterior, mas as moedas de ouro deixaram de circular na década de 1930. Na década de 1970, com o fim do Acordo de Bretton Woods, o padrão-ouro mundial finalmente deu lugar ao sistema de curso legal. No entanto, devido à sua raridade, facilidade de fundição, processamento e cunhagem, cor única, resistência à corrosão e resistência a outras substâncias, o valor do ouro não diminui. </p>
</blockquote>
<p>Vejo você imediatamente </p>
<p>Claro que não é dinheiro ruim ou compre 💎<br>Claro, a premissa é ter uma namorada que queira se casar 🎎 </p>
<h3 id="Ondas-gravitacionais"><a href="#Ondas-gravitacionais" class="headerlink" title="Ondas gravitacionais"></a>Ondas gravitacionais</h3><blockquote>
<p>O observatório de ondas gravitacionais (Inglês: observatório de ondas gravitacionais) é um dispositivo usado para detectar ondas gravitacionais na astronomia de ondas gravitacionais. As ondas gravitacionais são ondulações causadas pela aceleração da massa no espaço e no tempo. Albert Einstein propôs pela primeira vez o conceito de ondas gravitacionais em 1916. [1] Ao detectar ondas gravitacionais, a relatividade geral pode ser verificada experimentalmente. Os detectores comumente usados ​​incluem detectores de haste e interferômetros a laser. O principal princípio de operação desses detectores é medir a influência das ondas gravitacionais na distância entre dois locais distantes. Desde 1960, vários detectores de ondas gravitacionais foram construídos e ativados um após o outro, e houve melhorias contínuas na sensibilidade do detector </p>
</blockquote>
<p>E vários modelos animais<br>Há uma enorme baleia azul fora do pavilhão </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-53.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-54.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-56.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-57.jpg" alt=""></div></div></div>

<h2 id="Zoologico-de-Ueno"><a href="#Zoologico-de-Ueno" class="headerlink" title="Zoológico de Ueno"></a>Zoológico de Ueno</h2><p>Todas as vezes que fui ao zoológico antes, o pavilhão do tigre estava passando por uma reforma ou estava prestes a fechar<br>Finalmente vi o tigre 🐯<br>Gorila usando um lenço na cabeça<br>Eu acidentalmente olhei um para o outro e vi os olhos<br>Instantaneamente um frio nas costas, pensando no Planeta dos Macacos </p>
<p>Tamanduá ou?<br>Acontece que eu tinha visto cangurus antes de ir para a Austrália 🦘 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-58.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-61.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-62.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-59.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-60.jpg" alt=""></div></div></div>

<p>Vi o fechamento, então volte<br>Passagem pela ponte Azuma<br>Está vendo o ponto amarelo que você viu no Skytree da última vez ☁️ ou 🍦? </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-64.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-65.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-67.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-68.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-69.jpg" alt=""></div></div></div>

<h2 id="Retorna"><a href="#Retorna" class="headerlink" title="Retorna"></a>Retorna</h2><p>Após o check-out no dia seguinte, desça as escadas e pegue a linha do aeroporto de Narita de volta ao aeroporto<br>Ao pegar a passagem, a senhora perguntou se ela estava sozinha<br>Inexplicavelmente, por que ainda há danos ao único Wang 🐶 </p>
<p>Então a jovem felizmente informou:<br>Nós atualizamos você para a classe executiva<br>Bem-vindo para continuar voando com a JAL no futuro </p>
<p>Descobriu-se que a companhia aérea selecionou aleatoriamente alguns clientes para upgrades </p>
<p>Por sorte </p>
<p>No entanto, esta atualização do ganso é limitada à classe executiva da aeronave<br>Ao contrário do anterior autofinanciado ANA All Nippon Airways<br>Acesso ao lounge de primeira classe com chuveiro </p>
<hr>
<p>Claro que a classe executiva é tão confortável como sempre<br>Dormiu no avião<br>Este é o fim desta viagem de 10 dias 🇯🇵 </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>Como agendar iMessages no Mac</title>
    <url>/pt/How-to-schedule-iMessages-on-Mac/</url>
    <content><![CDATA[<p>Primeiro abra o <code>Terminal</code> no Mac e siga as etapas abaixo para copiar e colar a seguinte linha de comando: </p>
<h2 id="Envie-iMessage-por-Shell"><a href="#Envie-iMessage-por-Shell" class="headerlink" title="Envie iMessage por Shell"></a>Envie iMessage por <code>Shell</code></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">file=<span class="string">&quot;<span class="variable">$HOME</span>/Documents/sendiMessage.sh&quot;</span></span><br><span class="line">str=<span class="string">&#x27;tell application &quot;Messages&quot; to send &quot;TEXT&quot; to buddy &quot;NAME&quot;&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;#!/bin/zsh \nosascript -e &#x27;<span class="variable">$str</span>&#x27;&quot;</span> &gt; <span class="variable">$file</span></span><br><span class="line">open <span class="variable">$file</span></span><br></pre></td></tr></table></figure>

<p>Você verá um arquivo aberto pelo aplicativo de edição de texto padrão, que mostra: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#/bin/zsh</span></span><br><span class="line">osascript -e <span class="string">&#x27;tell application &quot;Messages&quot; to send &quot;TEXT&quot; to buddy &quot;NAME&quot;&#x27;</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>Observe que você deve substituir <code>TEXT</code> pelo texto que deseja enviar e substituir<code>NAME</code> pelo nome no aplicativo <code>Contacts</code>.<br>Não se esqueça de ** salvar ** o arquivo. </p>
<h2 id="Crontab-no-mac"><a href="#Crontab-no-mac" class="headerlink" title="Crontab no mac"></a><code>Crontab</code> no mac</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo touch /etc/crontab</span><br></pre></td></tr></table></figure>

<p>Você deve executar esta linha acima porque <code>com.vix.cron</code> irá verificar se<code>/ etc / crontab</code> existe no macOS.<br>Digite a senha do Mac. </p>
<h2 id="Agende-o-shell-com-Crontab"><a href="#Agende-o-shell-com-Crontab" class="headerlink" title="Agende o shell com Crontab"></a>Agende o shell com <code>Crontab</code></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">00 10 25 3 * zsh ~/Documents/sendiMessage.sh</span><br></pre></td></tr></table></figure>

<p>Como mostra o <a href="http://www.adminschoice.com/crontab-quick-reference">Crontab - Referência rápida</a>: </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">00    10    *   *    *        command to be executed</span><br><span class="line">- ---- </span><br><span class="line">|     |     |   |    |</span><br><span class="line">|     |     |   |    +----- day of week (0 - 6) (Sunday&#x3D;0)</span><br><span class="line">|     |     |   +------- month (1 - 12)</span><br><span class="line">|     |     +--------- day of        month (1 - 31)</span><br><span class="line">|     +----------- hour (0 - 23)</span><br><span class="line">+------------- min (0 - 59)</span><br></pre></td></tr></table></figure>

<p>Este shell significa que o seu Mac enviará o iMessage às 10:00 do dia 25 de março. </p>
<p>Em seguida, modifique-o para seu horário ideal. </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure>

<p>Nas próximas etapas, você está usando <code>vim</code>, que eu acho que é a parte mais difícil. </p>
<ol>
<li>Pressione <code>i</code> e você verá<code>--INSERT -</code>no canto esquerdo inferior do<code>Terminal</code>. </li>
<li>Cole <code>00 10 25 3 * zsh ~ / Documents / sendiMessage.sh</code> </li>
<li>Pressione <code>shift +:</code> e digite <code>wq</code>,<code>enter</code> </li>
</ol>
<h2 id="Verifique-o-Crontab"><a href="#Verifique-o-Crontab" class="headerlink" title="Verifique o Crontab"></a>Verifique o <code>Crontab</code></h2><p><code>crontab -l</code> </p>
<p>Você pode ver <code>00 10 25 3 * zsh ~ / Documents / sendiMessage.sh</code> se tudo estiver correto. </p>
]]></content>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Struct Codable Alamofire Generics</title>
    <url>/pt/Struct-Codable-Alamofire-Generics/</url>
    <content><![CDATA[<p>Escrevi <a href="https://leihao0.github.io/Swift-Generics-in-protocol-and-enum/">Swift Generics in Protocols and Enumerations</a> meio ano atrás para resolver o problema de conversão de dados de resposta de rede em genéricos Tipo de tipo. </p>
<p>Depois do Swift 4, o método <a href="https://developer.apple.com/documentation/foundation/jsonserialization">JSONSerialization</a> está um pouco desatualizado </p>
<p>Ao atualizar o progresso, encontrei uma maneira melhor </p>
<a id="more"></a>

<h2 id="Ferramentas"><a href="#Ferramentas" class="headerlink" title="Ferramentas"></a>Ferramentas</h2><ul>
<li><a href="https://app.quicktype.io">Quicktype</a> </li>
<li><a href="https://github.com/Alamofire/Alamofire">Alamofire</a> </li>
</ul>
<p>Suponha que temos uma estrutura Json: </p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;id&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;List&quot;</span>: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">  <span class="attr">&quot;C&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Depois de colá-lo no Quicktype com ** extensões Alamofire ** selecionadas, você pode obter: </p>
<!--more-->

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">import</span> Alamofire</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span>: <span class="title">Codable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> id: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">let</span> list: [<span class="type">Int</span>]? <span class="comment">// optional, in case some date has no list</span></span><br><span class="line">    <span class="keyword">let</span> <span class="built_in">c</span>: <span class="type">C</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">CodingKeys</span>: <span class="title">String</span>, <span class="title">CodingKey</span> </span>&#123;</span><br><span class="line">        <span class="keyword">case</span> id</span><br><span class="line">        <span class="keyword">case</span> list = <span class="string">&quot;List&quot;</span></span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">c</span> = <span class="string">&quot;C&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">C</span>: <span class="title">Codable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> id: <span class="type">Int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MARK: - Alamofire response handlers</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">DataRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">fileprivate</span> <span class="function"><span class="keyword">func</span> <span class="title">decodableResponseSerializer</span>&lt;T: Decodable&gt;<span class="params">()</span></span> -&gt; <span class="type">DataResponseSerializer</span>&lt;<span class="type">T</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">DataResponseSerializer</span> &#123; <span class="number">_</span>, response, data, error <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">guard</span> error == <span class="literal">nil</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> .failure(error!) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> data = data <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> .failure(<span class="type">AFError</span>.responseSerializationFailed(reason: .inputDataNil))</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="type">Result</span> &#123; <span class="keyword">try</span> <span class="type">JSONDecoder</span>().decode(<span class="type">T</span>.<span class="keyword">self</span>, from: data) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@discardableResult</span></span><br><span class="line">    <span class="keyword">fileprivate</span> <span class="function"><span class="keyword">func</span> <span class="title">responseDecodable</span>&lt;T: Decodable&gt;<span class="params">(queue: DispatchQueue? = <span class="literal">nil</span>, completionHandler: @escaping <span class="params">(DataResponse&lt;T&gt;)</span></span></span> -&gt; <span class="type">Void</span>) -&gt; <span class="type">Self</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> response(queue: queue, responseSerializer: decodableResponseSerializer(), completionHandler: completionHandler)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@discardableResult</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">responseA</span><span class="params">(queue: DispatchQueue? = <span class="literal">nil</span>, completionHandler: @escaping <span class="params">(DataResponse&lt;A&gt;)</span></span></span> -&gt; <span class="type">Void</span>) -&gt; <span class="type">Self</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> responseDecodable(queue: queue, completionHandler: completionHandler)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Observe que <code>func responseA</code> é um tipo estático e só se aplica a APIs espaciais que respondem ao JSON que você colou. Portanto, precisamos de tipos genéricos para todas as APIs. </p>
<p>Assim, podemos excluir <code>func responseA</code> e definir um protocolo<code>MYRequest</code> como segue: </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">MYRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> router: <span class="type">String</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> api: <span class="type">String</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">associatedtype</span> <span class="type">T</span>: <span class="type">Decodable</span> <span class="comment">// generics type</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">MYRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> api: <span class="type">String</span> &#123; <span class="keyword">return</span> <span class="string">&quot;v1&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> domain: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;https://domain.com&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// T is used in DataResponse&lt;T&gt;</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">request</span><span class="params">(completionHandler: @escaping <span class="params">(DataResponse&lt;T&gt;)</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> url = <span class="string">&quot;\(domain)/\(api)/\(router)&quot;</span></span><br><span class="line">        <span class="type">Alamofire</span>.request(url).responseDecodable(completionHandler: completionHandler)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Agora, podemos implementar diferentes solicitações, conforme necessário: </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ARequset</span>: <span class="title">MYRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> router = <span class="string">&quot;a&quot;</span></span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">A</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BRequset</span>: <span class="title">MYRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> router = <span class="string">&quot;b&quot;</span></span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">B</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Além disso, podemos definir outro protocolo com o mesmo protocolo <code>var api: String &#123;get&#125;</code> em <code>MYRequest</code> se tivermos um novo<code>CRequset</code> e a API for atualizada para v2 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">V2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> api: <span class="type">String</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">V2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> api: <span class="type">String</span> &#123; <span class="keyword">return</span> <span class="string">&quot;v2&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">C</span>: <span class="title">Request</span>, <span class="title">V2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> router = <span class="string">&quot;c&quot;</span></span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">C</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Por fim, a solicitação em ViewController será semelhante a esta: </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">ARequset</span>().request &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] response <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> a = response.result.value &#123; <span class="comment">// a is A, not Any</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">BRequset</span>().request &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] response <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> b = response.result.value &#123; <span class="comment">// b is B, not Any</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Swift</tag>
      </tags>
  </entry>
  <entry>
    <title>Como construir tesseract 4 beta no macOS</title>
    <url>/pt/How-to-build-tesseract-4-beta-on-macOS/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew info tesseract</span><br><span class="line"></span><br><span class="line">tesseract: stable 3.05.01 (bottled), HEAD</span><br><span class="line">OCR (Optical Character Recognition) engine</span><br></pre></td></tr></table></figure>

<p>O resultado da identificação do <code>chinês simplificado</code> é um pouco assustador.<br>Percebi que ele adicionou um novo sistema de rede neural baseado em LSTM após 4.0.0+<br>Mas ele precisa ser criado a partir do código-fonte no macOS.<br>Felizmente, o manual tem uma descrição detalhada em seu README.md </p>
<a id="more"></a>

<h2 id="Instale-dependencias"><a href="#Instale-dependencias" class="headerlink" title="Instale dependências"></a>Instale dependências</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install automake autoconf autoconf-archive libtool</span><br><span class="line">brew install pkgconfig</span><br><span class="line">brew install icu4c</span><br><span class="line">brew install leptonica</span><br><span class="line">brew install gcc</span><br></pre></td></tr></table></figure>

<h2 id="Compilar"><a href="#Compilar" class="headerlink" title="Compilar"></a>Compilar</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/tesseract-ocr/tesseract/</span><br><span class="line"><span class="built_in">cd</span> tesseract</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure CC=gcc CXX=g++ CPPFLAGS=-I/usr/<span class="built_in">local</span>/opt/icu4c/include LDFLAGS=-L/usr/<span class="built_in">local</span>/opt/icu4c/lib</span><br><span class="line">make -j</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>Seus [modos] mais bem treinados (<a href="https://github.com/tesseract-ocr/tessdata_best">https://github.com/tesseract-ocr/tessdata_best</a>), baixe a linguagem <code>chi_sim.traineddata</code> e coloque-a em<code>tesseract / 4.0.0.1 / tessdata /</code> </p>
<h2 id="Uso"><a href="#Uso" class="headerlink" title="Uso"></a>Uso</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tesseract image.png image -l chi_sim</span><br><span class="line">cat image.txt</span><br></pre></td></tr></table></figure>

<p>Ok, ainda é uma droga na fonte <code>song font</code>. Eu preciso me treinar no novo modelo. </p>
<hr>
<p>Finalmente, eu ignorei <code>tesseract</code>, descobri que arrastar<code>imagem</code> para <code>OneNote</code> e<code>Ctrl + clique</code>-&gt; <code>Copiar texto da imagem</code> terá maior precisão. 😓 </p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>LSTM</tag>
      </tags>
  </entry>
  <entry>
    <title>Conheça Rama</title>
    <url>/pt/Rendezvous-with-Rama/</url>
    <content><![CDATA[<div style="width: 300px">
<img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Rendezvous%20with%20Rama.jpg" />
</div>

<p>Há muito tempo admiro a série base.Este é o primeiro romance de Clark a ser lido completamente. </p>
<a id="more"></a>

<h3 id="traducao"><a href="#traducao" class="headerlink" title="tradução"></a>tradução</h3><p>Deixe-me falar sobre tradução </p>
<p>Há cerca de dois anos, tive a versão original e decidi não ler a tradução<br>Eu não li. Outra versão anterior encontrou Rama, então eu não postei uma comparação.<br>No que diz respeito a esta versão, não há nenhum sentido imaginário de violação<br>No que diz respeito ao nome, Rama deve estar errado, porque o texto original contém: </p>
<blockquote>
<p>agora eles estavam trabalhando no panteão Gindu. E então 31/439 foi batizado Rama. </p>
</blockquote>
<h3 id="Cobrir"><a href="#Cobrir" class="headerlink" title="Cobrir"></a>Cobrir</h3><p>E eu gosto dessa capa<br>Quando recebi o livro, pensei que fosse uma lente gravitacional. Fiquei completamente enganado. Não esperava que fosse Rama. </p>
<h3 id="Tecnologia"><a href="#Tecnologia" class="headerlink" title="Tecnologia"></a>Tecnologia</h3><p>No geral, a única coisa que parece errada é a espaçonave interestelar e o chimpanzé que faz as tarefas domésticas<br>Julgando pelo nível atual de tecnologia, essas coisas deveriam ser mais como robôs em travessia interestelar (veja, a civilização Rama também é feita por Jiangzi)<br>A fisiologia humana descrita no livro não melhorou muito em comparação com agora<br>É difícil imaginar que os humanos ainda sejam assim quando se movem até Plutão (no livro, Plutão ainda é um planeta em vez de um planeta anão). </p>
<p>Você sabe, eu senti que ia morrer quando fui para a Europa para um vôo de 11 horas. Quando eu fiz esse tipo de viagem interestelar, não era mais um cadáver. </p>
<p>Portanto, se os humanos não atualizarem iterativamente, conforme descrito em “Life 3.0”<br>Comparados aos humanos, os robôs humanóides em autômatos nier são mais adequados para viagens interestelares </p>
<p>Outros são ótimos<br>Por exemplo, embora a vida inteligente de Rama não tenha aparecido no final, infere-se que deveria ser semelhante à dos humanos.<br>A visão dominante da ciência até agora é que a vida baseada no carbono é porque: </p>
<ol>
<li>As macromoléculas precisam de carbono e silício para serem ligantes </li>
<li>O silício precisa de temperaturas extremamente altas para se tornar ativo </li>
<li>O carbono em todo o universo é 10 vezes o do silício </li>
</ol>
<p>Então Rama é o robô, que tem funções específicas, inteligência artificial fraca e não precisa estar consciente </p>
<h3 id="Povo-rama"><a href="#Povo-rama" class="headerlink" title="Povo rama"></a>Povo rama</h3><p>O livro está apenas no Santuário Liuli (lamento ter visto o vidro e o templo se transformou em um santuário ⛩️) Esse capítulo descreve as criaturas no cristal, por que adivinhar que esta é a criatura inteligente avançada de Rama? </p>
<p>Porque se você vir um 📱 no universo, você definitivamente não pensará que ele foi formado naturalmente, deve ser criado por algum tipo de vida inteligente </p>
<h3 id="Bomba-nuclear-de-mercurio"><a href="#Bomba-nuclear-de-mercurio" class="headerlink" title="Bomba nuclear de mercúrio"></a>Bomba nuclear de mercúrio</h3><p>Quando eu vi, fiquei preocupado com a destruição de Rama.<br>Mas para mim, o pessoal da Mercury não está errado, seus discursos também fazem sentido </p>
<p>Se fizermos uma pausa aqui, trate-o como uma experiência de pensamento<br>No final, Rama realmente ocupou a órbita quase solar. Havia originalmente essa oportunidade de preservar a civilização humana. Como resultado, a civilização humana desapareceu por causa da hipocrisia de uma pessoa. A pessoa que detonou a bomba nuclear não era um herói, mas um pecador. </p>
<blockquote>
<p>A sobrevivência é a primeira necessidade da civilização </p>
</blockquote>
<p>Além disso, para os seres humanos que acabaram de sair do sistema solar, não há diferença em relação à situação em que saíram da África. Eles se deparam com um ambiente perigoso novamente, como podem tratar o espaço da mesma forma que a civilização moderna na Terra? </p>
<blockquote>
<p>não vá gentilmente naquela boa noite </p>
</blockquote>
<p>No entanto, da perspectiva de Rama, onde o sol está apenas 5 milhões de quilômetros atrás, ele abre a capa protetora, atrai energia e viola a terceira lei do movimento de Newton. Não é importante se a bomba nuclear é ou não, mas destaca que na verdade é uma luta no nível da espécie humana. </p>
<h3 id="civilizacao"><a href="#civilizacao" class="headerlink" title="civilização"></a>civilização</h3><p>A evolução humana levou a pouca concepção de tamanhos incomuns que cruzam os níveis diários </p>
<p>De acordo com a descrição no livro, ele tem 50 quilômetros de comprimento e 20 quilômetros de diâmetro, então a circunferência é de 62,8 quilômetros, então parece que toda a área interna da parede é de 3.140 quilômetros. Qual é o conceito? </p>
<ul>
<li>Três dez milésimos do nosso país </li>
<li>Pequim Sexto Anel Viário 2.267 km² </li>
<li>Xangai 6.340 km² </li>
<li>Shenzhen 2.050 km² </li>
<li>Hong Kong 2.754 km² </li>
</ul>
<p>Sinta por si mesmo </p>
<p>Pense sobre a população atual dessas cidades, para que tal área possa carregar totalmente a base populacional exigida por uma civilização humana<br>Sem mencionar a baixa gravidade no meio de Rama. Agora, o arranha-céu da cidade está a apenas algumas centenas de metros de distância. Rama está a 10 quilômetros de distância, o que é duas ordens de magnitude pior. Portanto, a capacidade real<br>Não área de superfície, mas volume<br>Além disso, Rama deve ser apenas um deles, afinal </p>
<blockquote>
<p>Rama é o sétimo avatar do deus Vishnu </p>
</blockquote>
<blockquote>
<p>A lista que avatares no Dashavatara Waris por razão: Matsya, Kurma, Varaha, Narasimha, Vamana, Parashurama, Rama, Krishna, Balarama e Kalki </p>
</blockquote>
]]></content>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>Como converter vídeo em texto</title>
    <url>/pt/How-to-convert-video-to-text/</url>
    <content><![CDATA[<p>Se o áudio for mandarim, acho que o XFyun FlySpeechRecognizer faz um bom trabalho nessa questão, podendo até reconhecer algumas palavras simples em inglês em áudio de vários idiomas. </p>
<p>Não há necessidade de treinar um modelo de aprendizado de máquina desde o início para fazer isso. </p>
<a id="more"></a>

<p>A API XFyun tem algumas limitações. O tamanho deve ser menor ou igual a 2 MB e a duração do áudio deve ser menor ou igual a 60 segundos. </p>
<p>Uso <code>./test.sh test.mp4</code> </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/zsh</span></span><br><span class="line">filename=$(<span class="built_in">echo</span> <span class="variable">$1</span> | cut -d. -f1)</span><br><span class="line"><span class="built_in">type</span>=$(<span class="built_in">echo</span> <span class="variable">$1</span> | cut -d. -f2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># imprimir $ filename. $ type </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vídeo dividido &lt;= 2 MB </span></span><br><span class="line">mp4box -splits 2000 <span class="variable">$filename</span>.<span class="variable">$type</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># eco de vídeo → áudio pcm </span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> <span class="variable">$filename</span>\_*.<span class="variable">$type</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;ffmpeg <span class="variable">$name</span> to pcm&quot;</span></span><br><span class="line">  ffmpeg -y  -i <span class="variable">$name</span> -acodec pcm_s16le -f s16le -ac 1 -ar 16000 <span class="variable">$name</span>.pcm</span><br><span class="line">  rm <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># áudio para texto </span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> <span class="variable">$filename</span>\_*.pcm; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;xfyun.py <span class="variable">$name</span>&quot;</span></span><br><span class="line">  python3 xfyun.py <span class="variable">$name</span></span><br><span class="line">  rm <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>Agora podemos usar o XFyun para reconhecer áudio. </p>
<p>Este é o documento <a href="https://doc.xfyun.cn/rest_api/%E8%AF%AD%E9%9F%B3%E5%90%AC%E5%86%99.html">XFyun IFlySpeechRecognizer</a>, Mas o código de amostra não pôde ser executado, então fiz algumas correções. </p>
<p><code>xfyun.py</code> com<code>Python3</code>: </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># - * - codificação: UTF-8 - * - </span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">argv</span>):</span></span><br><span class="line">    f = open(argv[<span class="number">1</span>], <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">    file_content = f.read()</span><br><span class="line">    base64_audio = base64.b64encode(file_content)</span><br><span class="line">    body = urllib.parse.urlencode(&#123;<span class="string">&#x27;audio&#x27;</span>: base64_audio&#125;).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    url = <span class="string">&#x27;http://api.xfyun.cn/v1/service/v1/iat&#x27;</span></span><br><span class="line">    api_key = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    x_appid = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    param = &#123;<span class="string">&quot;engine_type&quot;</span>: <span class="string">&quot;sms16k&quot;</span>, <span class="string">&quot;aue&quot;</span>: <span class="string">&quot;raw&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    param_str = json.dumps(param)</span><br><span class="line">    param_utf8 = param_str.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    param_b64 = base64.b64encode(param_utf8)</span><br><span class="line">    param_b64str = param_b64.decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    x_time = str(int(time.time()))</span><br><span class="line">    checksum = (api_key + x_time + param_b64str).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    x_checksum = hashlib.md5(checksum).hexdigest()</span><br><span class="line">    x_header = &#123;<span class="string">&#x27;X-Appid&#x27;</span>: x_appid,</span><br><span class="line">                <span class="string">&#x27;X-CurTime&#x27;</span>: x_time,</span><br><span class="line">                <span class="string">&#x27;X-Param&#x27;</span>: param_b64str,</span><br><span class="line">                <span class="string">&#x27;X-CheckSum&#x27;</span>: x_checksum&#125;</span><br><span class="line"></span><br><span class="line">    req = urllib.request.Request(url, data=body, headers=x_header)</span><br><span class="line">    response = urllib.request.urlopen(req)</span><br><span class="line">    result = response.read().decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    data = json.loads(result)[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">    <span class="keyword">print</span> (data)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main(sys.argv)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Mais como converter vídeo em texto</title>
    <url>/pt/More-how-to-convert-video-to-text/</url>
    <content><![CDATA[<p>Experimentei o XFyun, mas não é adequado para resultados reconhecíveis, por isso estou procurando outro reconhecedor para realizar alguns testes. </p>
<ul>
<li>[Kaká](Http: //a.k.com/product/access.html) </li>
<li>[Baidu](Http: //a.Baidu.com/docs#/user-online-python-add/top) </li>
<li><a href="https://cloud.google.com/speech-to-text/">Google</a> </li>
</ul>
<p>A boa notícia é que todos eles suportam o tipo <code>PCM</code> convertido anteriormente, então preciso fazer algumas alterações no shell. Quando quiser comparar os resultados de diferentes reconhecedores, basta executar: </p>
<p><code>test.sh xfyun.py | baidu.py | qq.py test.mp4 | .m4a</code> </p>
<a id="more"></a>

<p>Para ser honesto, os resultados do Google parecem melhores aos olhos humanos. </p>
<p><code>test. is</code> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/zsh</span></span><br><span class="line"></span><br><span class="line">py=$<span class="number">1</span></span><br><span class="line"></span><br><span class="line">filename=$(echo $<span class="number">2</span> | cut -d. -f1)</span><br><span class="line">type=$(echo $<span class="number">2</span> | cut -d. -f2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># imprimir $ filename. $ type </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vídeo dividido &lt;= 1 MB </span></span><br><span class="line">mp4box -splits <span class="number">2000</span> $filename.$type</span><br><span class="line"></span><br><span class="line"><span class="comment"># eco de vídeo → áudio pcm </span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> $filename\_*.$type; do</span><br><span class="line">  <span class="keyword">print</span> <span class="string">&quot;ffmpeg $name to pcm&quot;</span></span><br><span class="line">  ffmpeg -y  -i $name -acodec pcm_s16le -f s16le -ac <span class="number">1</span> -ar <span class="number">16000</span> $name.pcm</span><br><span class="line">  rm $name</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment"># áudio para texto </span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> $filename\_*.pcm; do</span><br><span class="line">  <span class="keyword">print</span> <span class="string">&quot;$py $name&quot;</span></span><br><span class="line">  python3 $py $name</span><br><span class="line">  <span class="comment"># rm $ name </span></span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<!--more-->

<h2 id="ID-Sim-Amigos"><a href="#ID-Sim-Amigos" class="headerlink" title="ID_Sim. Amigos"></a>ID_Sim. Amigos</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dic = &#123;</span><br><span class="line">    <span class="string">&quot;xfyun&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;baidu&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;secret&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;qq&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h2><p>Eles enviaram o arquivo online, então eu pulei de escrever \ *. Py 😝 </p>
<h2 id="Baidu-Amigos"><a href="#Baidu-Amigos" class="headerlink" title="Baidu. Amigos"></a>Baidu. Amigos</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipSpeech</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> id_key</span><br><span class="line">app_id = id_key.dic[<span class="string">&#x27;baidu&#x27;</span>][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">app_key = id_key.dic[<span class="string">&#x27;baidu&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line">secret = id_key.dic[<span class="string">&#x27;baidu&#x27;</span>][<span class="string">&#x27;secret&#x27;</span>]</span><br><span class="line"></span><br><span class="line">client = AipSpeech(app_id, app_key, secret)</span><br><span class="line"></span><br><span class="line">print(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file_content</span>(<span class="params">filePath</span>):</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">return</span> fp.read()</span><br><span class="line"></span><br><span class="line">res=client.asr(get_file_content(sys.argv[<span class="number">1</span>]), <span class="string">&#x27;pcm&#x27;</span>, <span class="number">16000</span>, &#123;</span><br><span class="line">    <span class="string">&#x27;dev_pid&#x27;</span>: <span class="number">1537</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure>

<h2 id="QQ-Amigos"><a href="#QQ-Amigos" class="headerlink" title="QQ. Amigos"></a>QQ. Amigos</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># - * - codificação: UTF-8 - * - </span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> time, random, base64, json</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> id_key</span><br><span class="line">app_id = id_key.dic[<span class="string">&#x27;qq&#x27;</span>][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">app_key = id_key.dic[<span class="string">&#x27;qq&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line"></span><br><span class="line">api_url=<span class="string">&#x27;https://api.ai.qq.com/fcgi-bin/aai/aai_asr&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span>(<span class="params">string</span>):</span></span><br><span class="line">    md = hashlib.md5()</span><br><span class="line">    md.update(string)</span><br><span class="line">    md5 = md.hexdigest().upper()</span><br><span class="line">    <span class="keyword">return</span> md5</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">signify</span>(<span class="params">args, app_key</span>):</span></span><br><span class="line">    query_str = urlencode(args)</span><br><span class="line">    query_str = query_str + <span class="string">&#x27;&amp;app_key=&#x27;</span> + app_key</span><br><span class="line">    signiture = md5(query_str.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> signiture</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">urlencode</span>(<span class="params">args</span>):</span></span><br><span class="line">    tuples = [(k, args[k]) <span class="keyword">for</span> k <span class="keyword">in</span> sorted(args.keys()) <span class="keyword">if</span> args[k]]</span><br><span class="line">    query_str = urllib.parse.urlencode(tuples)</span><br><span class="line">    <span class="keyword">return</span> query_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">http_post</span>(<span class="params">api_url, args</span>):</span></span><br><span class="line">    resp = requests.post(url=api_url, data=args)</span><br><span class="line">    resp = json.loads(resp.text)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseASR</span>(<span class="params">object</span>):</span></span><br><span class="line">    ext2idx = &#123;<span class="string">&#x27;pcm&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;wav&#x27;</span>: <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;amr&#x27;</span>: <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;slk&#x27;</span>: <span class="string">&#x27;4&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, api_url, app_id, app_key</span>):</span></span><br><span class="line">        self.api_url = api_url</span><br><span class="line">        self.app_id = app_id</span><br><span class="line">        self.app_key = app_key</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stt</span>(<span class="params">self, audio_file, ext, rate</span>):</span></span><br><span class="line">        <span class="keyword">raise</span> Exceptin(<span class="string">&quot;Unimplemented!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BasicASR</span>(<span class="params">BaseASR</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot; Online ASR from Tencent</span></span><br><span class="line"><span class="string">    https://ai.qq.com/doc/aaiasr.shtml</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        super(BasicASR, self).__init__(api_url, app_id, app_key)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stt</span>(<span class="params">self, audio_file, ext=<span class="string">&#x27;pcm&#x27;</span>, rate=<span class="number">16000</span></span>):</span></span><br><span class="line">        <span class="keyword">if</span> ext == <span class="string">&#x27;pcm&#x27;</span>:</span><br><span class="line">            <span class="comment"># wf = wave.open (audio_file) </span></span><br><span class="line">            <span class="comment"># nf = wf.getnframes () </span></span><br><span class="line">            <span class="comment"># audio_data = wf.readframes (nf) </span></span><br><span class="line">            f = open(audio_file, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">            audio_data = f.read()</span><br><span class="line">            f.close()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;Unsupport audio file format!&quot;</span>)</span><br><span class="line"></span><br><span class="line">        args = &#123;</span><br><span class="line">            <span class="string">&#x27;app_id&#x27;</span>: self.app_id,</span><br><span class="line">            <span class="string">&#x27;time_stamp&#x27;</span>: str(int(time.time())),</span><br><span class="line">            <span class="string">&#x27;nonce_str&#x27;</span>: <span class="string">&#x27;%.x&#x27;</span> % random.randint(<span class="number">1048576</span>, <span class="number">104857600</span>),</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: self.ext2idx[ext],</span><br><span class="line">            <span class="string">&#x27;rate&#x27;</span>: str(rate),</span><br><span class="line">            <span class="string">&#x27;speech&#x27;</span>: base64.b64encode(audio_data),</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        signiture = signify(args, self.app_key)</span><br><span class="line">        args[<span class="string">&#x27;sign&#x27;</span>] = signiture</span><br><span class="line">        resp = http_post(self.api_url, args)</span><br><span class="line">        print(resp)</span><br><span class="line">        text = resp[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;text&#x27;</span>].encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># se DE<span class="doctag">BUG:</span> </span></span><br><span class="line">        <span class="keyword">return</span> text</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">asr_engine = BasicASR()</span><br><span class="line">text = asr_engine.stt(sys.argv[<span class="number">1</span>])</span><br><span class="line">print(text)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Sorte-ocidental-Amigos"><a href="#Sorte-ocidental-Amigos" class="headerlink" title="Sorte ocidental. Amigos"></a>Sorte ocidental. Amigos</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># - * - codificação: UTF-8 - * - </span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> id_key</span><br><span class="line">app_id = id_key.dic[<span class="string">&#x27;xfyun&#x27;</span>][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">api_key = id_key.dic[<span class="string">&#x27;xfyun&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://api.xfyun.cn/v1/service/v1/iat&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">argv</span>):</span></span><br><span class="line">    f = open(argv[<span class="number">1</span>], <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">    file_content = f.read()</span><br><span class="line">    base64_audio = base64.b64encode(file_content)</span><br><span class="line">    body = urllib.parse.urlencode(&#123;<span class="string">&#x27;audio&#x27;</span>: base64_audio&#125;).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    param = &#123;<span class="string">&quot;engine_type&quot;</span>: <span class="string">&quot;sms16k&quot;</span>, <span class="string">&quot;aue&quot;</span>: <span class="string">&quot;raw&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    param_str = json.dumps(param)</span><br><span class="line">    param_utf8 = param_str.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    param_b64 = base64.b64encode(param_utf8)</span><br><span class="line">    param_b64str = param_b64.decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    x_time = str(int(time.time()))</span><br><span class="line">    checksum = (api_key + x_time + param_b64str).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    x_checksum = hashlib.md5(checksum).hexdigest()</span><br><span class="line">    x_header = &#123;<span class="string">&#x27;X-Appid&#x27;</span>: app_id,</span><br><span class="line">                <span class="string">&#x27;X-CurTime&#x27;</span>: x_time,</span><br><span class="line">                <span class="string">&#x27;X-Param&#x27;</span>: param_b64str,</span><br><span class="line">                <span class="string">&#x27;X-CheckSum&#x27;</span>: x_checksum&#125;</span><br><span class="line"></span><br><span class="line">    req = urllib.request.Request(url, data=body, headers=x_header)</span><br><span class="line">    response = urllib.request.urlopen(req)</span><br><span class="line">    result = response.read().decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    dic = json.loads(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> dic[<span class="string">&#x27;data&#x27;</span>] != <span class="string">&quot;&quot;</span>:</span><br><span class="line">        print(dic[<span class="string">&#x27;data&#x27;</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(result)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main(sys.argv)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Como baixar vídeos do Toutube ao mesmo tempo e incorporar suas legendas em lote</title>
    <url>/pt/How-to-download-videos-concurrently-from-youtube-and-batch-embed-their-subtitles/</url>
    <content><![CDATA[<p>Tudo o que tenho que fazer é baixar alguns cursos, que são muito úteis para mim no youtube, e incorporar legendas de Zh-Hans no vídeo e, em seguida, enviá-los para um site chinês que não oferece suporte a legendas externas. </p>
<p>Isso pode ajudar aqueles estudantes chineses que não falam bem inglês e não podem acessar o YouTube. </p>
<a id="more"></a>

<h2 id="Config-Youtube-dl"><a href="#Config-Youtube-dl" class="headerlink" title="Config Youtube-dl"></a>Config Youtube-dl</h2><p>O caminho do arquivo é <code>~ / .config / youtube-dl / config</code> </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--o <span class="string">&#x27;%(playlist_index)02ds - %(title)s.%(ext)s&#x27;</span></span><br><span class="line">--no-mtime</span><br><span class="line">--proxy socks5://127.0.0.1:1080</span><br><span class="line"></span><br><span class="line">--ignore-errors</span><br><span class="line"></span><br><span class="line">-f bestvideo[height&lt;=?1080]+bestaudio/best</span><br><span class="line"></span><br><span class="line">--merge-output-format <span class="string">&#x27;mkv&#x27;</span></span><br><span class="line"></span><br><span class="line">--write-auto-sub --sub-lang <span class="string">&#x27;zh-Hans&#x27;</span></span><br><span class="line"></span><br><span class="line">--convert-subs <span class="string">&#x27;ass&#x27;</span></span><br><span class="line"></span><br><span class="line">--embed-subs</span><br></pre></td></tr></table></figure>

<h2 id="Download-simultaneo"><a href="#Download-simultaneo" class="headerlink" title="Download simultâneo"></a>Download simultâneo</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">playlist=<span class="string">&#x27;https://www.youtube.com/playlist?list=...&#x27;</span></span><br><span class="line">num=70</span><br><span class="line">i=1</span><br><span class="line"><span class="keyword">while</span> ((<span class="variable">$i</span> &lt;= <span class="variable">$num</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    end=$(( i+<span class="number">1</span> ))</span><br><span class="line">    youtube-dl --playlist-start <span class="variable">$i</span> --playlist-end <span class="variable">$end</span> <span class="variable">$playlist</span> &gt; <span class="string">&quot;log-<span class="variable">$i</span>-<span class="variable">$end</span>.txt&quot;</span>  2&gt;&amp;1  &amp;</span><br><span class="line">    i=$((<span class="variable">$end</span>+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="Traduzir-nomes-de-arquivos-em-lote"><a href="#Traduzir-nomes-de-arquivos-em-lote" class="headerlink" title="Traduzir nomes de arquivos em lote"></a>Traduzir nomes de arquivos em lote</h2><p>Depois de baixar todos os vídeos da lista, use </p>
<p><code>ls | grep mkv | sed &quot;s / \. mkv //&quot;</code> </p>
<p>Em seguida, copie e cole no Google para obter o texto traduzido e salve-o em <code>zh.txt</code> </p>
<h2 id="Incorporar-legendas-em-lote"><a href="#Incorporar-legendas-em-lote" class="headerlink" title="Incorporar legendas em lote"></a>Incorporar legendas em lote</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tmp=<span class="string">&quot;tmp.mkv&quot;</span></span><br><span class="line">mkdir -p embedSub</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> *.mkv; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">read</span> -r zh &lt;&amp;3</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$f</span>\n<span class="variable">$zh</span>&quot;</span></span><br><span class="line">  <span class="comment"># ass = &quot;$ (echo $ f | sed &#x27;s / \. mkv //&#x27;). zh-Hans.ass&quot; </span></span><br><span class="line">  cp <span class="variable">$f</span> <span class="variable">$tmp</span></span><br><span class="line">  ffmpeg -nostats -loglevel 24 -n -i <span class="variable">$tmp</span> -vf subtitles=<span class="variable">$tmp</span> <span class="string">&quot;embedSub/<span class="variable">$zh</span>.mkv&quot;</span>;</span><br><span class="line"><span class="keyword">done</span> 3&lt;zh.txt</span><br><span class="line"></span><br><span class="line">rm <span class="variable">$tmp</span></span><br></pre></td></tr></table></figure>

<p>No Intel Core i7, geralmente passo a noite toda gravando 20 vídeos, e uma hora de vídeo leva 20 minutos para incorporar as legendas. </p>
]]></content>
      <tags>
        <tag>youtube</tag>
        <tag>ffmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title>GPU CUDA com Staxrip acelera codificação de vídeo h264 / h265 / HEVC</title>
    <url>/pt/CUDA-GPU-Accelerated-h264-h265-HEVC-Video-Encoding-with-Staxrip/</url>
    <content><![CDATA[<p>Os jogos mudaram minha vida. </p>
<p>Estive em cidades por muitos anos, e essas cidades viajaram na série Assassin’s Creed, incluindo “Sleeping Dog 2”, “GTA” e assim por diante.<br>Quando eu realmente entrar no mundo real, terá um grande impacto. Portanto, toda vez que volto, sempre quero vivenciar isso no jogo. </p>
<a id="more"></a>

<p>No entanto, à medida que envelheço 👴, também passo cada vez menos tempo jogando 👱. </p>
<p>Estou gravando 🎮 enquanto toco 📹, pode ser uma boa ideia. </p>
<h2 id="ShadowPlay"><a href="#ShadowPlay" class="headerlink" title="ShadowPlay"></a>ShadowPlay</h2><p>Como tenho uma Gigabyte Geforce GTX 1080 para treinar modelos de aprendizado profundo, a única coisa que preciso é Nvidia ShadowPlay, que é muito adequado para gravar jogos. </p>
<p>Mas a taxa de bits mínima é de 10 Mbps, quero reduzi-la para menos de 6 kbps, então a compressão está envolvida 🗜️. </p>
<h2 id="Staxrip"><a href="#Staxrip" class="headerlink" title="Staxrip"></a>Staxrip</h2><p>Eu sempre uso FFmpeg antes, mas toda vez que ouço o som de um Macbook, fico em pânico.Geralmente passo uma noite inteira para converter o vídeo em lote. </p>
<p>Felizmente, desta vez vi o logotipo do Cuda, que lembrava a aceleração da GPU. </p>
<p>Então eu encontrei <a href="https://github.com/stax76/staxrip">staxrip</a>, que é incrível. </p>
<ol>
<li>Clique em ** x264 *<em>, selecione *</em> NVIDIA H.265 ** (testei no meu 1080, sua velocidade é semelhante à NVIDIA H.264, eu achava que 264 deveria ser muito mais rápido do que 265) e então Você pode usar a aceleração de GPU. </li>
<li>Clique em <code>Encoder Options</code>, mude o modo para<code>VBR</code>, e então “Video Bit Rate” aparecerá. </li>
</ol>
<p>Ele pode atingir 250 quadros por segundo quando a CPU é de 40% e a GPU é de 35%. </p>
]]></content>
      <tags>
        <tag>CUDA GPU</tag>
      </tags>
  </entry>
  <entry>
    <title>React Native &amp; Flutter</title>
    <url>/pt/React-Native-Flutter/</url>
    <content><![CDATA[<p>Já existem muitos prós e contras. </p>
<table>
<thead>
<tr>
<th></th>
<th>Prós</th>
<th>Contras</th>
</tr>
</thead>
<tbody><tr>
<td>React Native</td>
<td>Recarregamento a quente <br /> Hot Fixing Online <br /> Interface amigável <br /> Plataforma cruzada <br /> Reparar uma vez <br /></td>
<td>JavaScript <br /> Conhecimento nativo de IU em ambas as plataformas <br /> Depuração <br /></td>
</tr>
<tr>
<td>Flutter</td>
<td>Flutter Engine <br /> Plataforma cruzada <br /> Mesmo UX e UI <br /></td>
<td>Aprenda Dart <br /> Instável (1.0 lançado) <br /> Estilo de código feio <br /> iOS 13? <br /> Depuração <br /></td>
</tr>
<tr>
<td>Native</td>
<td>Parte iOS <br /> Muito mais fácil <br /> AutoLayout, Storyboard <br /> Rápido, escreva menos e faça mais <br /> SpriteKit, UIDynamic</td>
<td>Orçamentos triplos para três desenvolvedores (fontend, iOS, android)</td>
</tr>
</tbody></table>
<a id="more"></a>

<p>Como um desenvolvedor iOS que segue alegremente os  passos, quando entrei pela primeira vez nos desenvolvedores iOS, usei Swift, Storyboard e AutoLayout. </p>
<p>Eu acho que é por isso que a maioria dos desenvolvedores nativos nem mesmo estão dispostos a aprender React Native. </p>
<p>Há dois anos, criei a Mattermost e fiz algumas mudanças na empresa anterior para substituir a Slack.Este foi o primeiro projeto React Native com o qual tive contato. </p>
<p>Infelizmente, é muito fácil perder código, e toda vez que eu quero mudar algo, tenho que pesquisar todo o projeto.Não há um Storyboard para me informar quem disse quem. </p>
<p>Conversei com meu ex-colega, que era um front end avançado. Ele me ajudou a iniciar o servidor de atualização, que também foi escrito em Node.js. Entreguei este projeto a ele quando saí. </p>
<p>Segundo ele, isso ocorre porque não sabe escrever código nativo, assim como o React React é semelhante ao React.js, por que não usá-lo para experimentar iOS e Android. Então perguntei se ele sabia como desenvolver rapidamente e que tipo de tecnologia ele gostaria. Você pode adivinhar a resposta 😄. </p>
<p>Porque, do meu ponto de vista, às vezes é difícil implementar funções mesmo em código rápido, o que é definitivamente um longo caminho a percorrer para outra tecnologia alcançar. </p>
<p>Então, hoje em dia, tenho a oportunidade de conduzir uma demonstração com visualizações de rolagem magnética, botões e navegação aninhados. Em vez de usar código nativo, saí da minha zona de conforto e experimentei React Native e Flutter. </p>
<ul>
<li>Visualizações <ul>
<li>ListView, ScrollView, Labels, Texts, TextFields </li>
</ul>
</li>
<li>Ações <ul>
<li>Arraste, clique, role </li>
<li>Bloquear callback ou delegar em eventos de visualização </li>
</ul>
</li>
</ul>
<p>Portanto, se você é proficiente em qualquer um deles, tudo o que resta é como o Google o implementa na estrutura ou leia seu manual. </p>
<h2 id="React-Native"><a href="#React-Native" class="headerlink" title="React Native"></a>React Native</h2><p>O que impressiona no React Native é ** state ** </p>
<p>Isso pode ser alcançado através do <code>didSet</code> da variável em Swift, e existem muitos frameworks que podem fazer isso, como RxSwift, PromiseKit </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> state: <span class="type">Any</span> &#123;</span><br><span class="line">    <span class="keyword">didSet</span> &#123;</span><br><span class="line">        updateViews()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Flutter"><a href="#Flutter" class="headerlink" title="Flutter"></a>Flutter</h2><p>Eu costumava ficar curioso sobre certos aplicativos que UX é muito semelhante aos desenvolvidos por esta máquina, mas parece estranho de alguma forma. Agora eu sei que está tremendo. </p>
<ul>
<li>Esta é a primeira vez que escrevo e recebo dois aplicativos (tenho muitos problemas para configurar o React Native com Android) </li>
<li>0.9 Há um erro na instalação a quente </li>
<li>O desenvolvimento no Visual Studio Code é muito bom, o que me lembra o passado de Golang </li>
<li>Estilo de código feio (eles estão falando sério sobre isso? Este é um exemplo oficial) </li>
</ul>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeroAnimation</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    timeDilation = <span class="number">5.0</span>; <span class="comment">// 1.0 means normal animation speed.</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Const Text (<span class="string">&#x27;Basic Hero Animation&#x27;</span>), </span><br><span class="line">      ),</span><br><span class="line">      body: Center(</span><br><span class="line">        child: PhotoHero(</span><br><span class="line">          photo: <span class="string">&#x27;images/flippers-alpha.png&#x27;</span>,</span><br><span class="line">          width: <span class="number">300.0</span>,</span><br><span class="line">          onTap: () &#123;</span><br><span class="line">            Navigator.of(context).push(MaterialPageRoute&lt;<span class="keyword">void</span>&gt;(</span><br><span class="line">              builder: (BuildContext context) &#123;</span><br><span class="line">                <span class="keyword">return</span> Scaffold(</span><br><span class="line">                  appBar: AppBar(</span><br><span class="line">                    title: <span class="keyword">const</span> Text (<span class="string">&#x27;Flippers Page&#x27;</span>), </span><br><span class="line">                  ),</span><br><span class="line">                  body: Container(</span><br><span class="line">                    <span class="comment">// The blue background emphasizes that it&#x27;s a new route.</span></span><br><span class="line">                    color: Colors.lightBlueAccent,</span><br><span class="line">                    padding: <span class="keyword">const</span> EdgeInsets.all(<span class="number">16.0</span>),</span><br><span class="line">                    alignment: Alignment.topLeft,</span><br><span class="line">                    child: PhotoHero(</span><br><span class="line">                      photo: <span class="string">&#x27;images/flippers-alpha.png&#x27;</span>,</span><br><span class="line">                      width: <span class="number">100.0</span>,</span><br><span class="line">                      onTap: () &#123;</span><br><span class="line">                        Navigator.of(context).pop();</span><br><span class="line">                      &#125;,</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                );</span><br><span class="line">              &#125;</span><br><span class="line">            ));</span><br><span class="line">          &#125;,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Em qualquer caso, fiquei realmente impressionado com ele, ele ignorou os <code>componentes nativos</code> e escreveu seu próprio mecanismo de renderização 2D. Muito mais talentoso do que React Native. </p>
<p>Portanto, pessoalmente, acho que o Flutter tem mais potencial do que o React Native. E há muitas empresas voltando para o local. </p>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>React Native</tag>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>SKEmitterNode no SpriteKit Scene sks</title>
    <url>/pt/SKEmitterNode-in-SpriteKit-Scene-sks/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/33lUmpg.gif" alt=""><br>As partículas no iOS requerem SpriteKit. </p>
<a id="more"></a>

<ol>
<li>Adicione o arquivo MyScene.sks ao projeto </li>
<li>Arraste a visualização SpriteKit para o storyboard </li>
<li>Arraste os dois iniciadores para <code>MyScene.sks</code> </li>
<li>Defina as propriedades do transmissor </li>
<li>Arraste a ação que deseja adicionar em cada iniciador </li>
</ol>
<p>Meu entendimento anterior é. </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> node = <span class="type">SKEmitterNode</span>(fileNamed: <span class="string">&quot;Fire&quot;</span>)</span><br><span class="line"><span class="keyword">let</span> scene = <span class="type">SKScene</span>(fileNamed: <span class="string">&quot;MyScene&quot;</span>)</span><br><span class="line">scene?.addChild(node)</span><br><span class="line"><span class="comment">// SKAction(...</span></span><br></pre></td></tr></table></figure>

<p>Para mim, é surpreendente que o SpriteKit possa ter uma experiência de desenvolvimento semelhante ao uso do Storyboard. </p>
<p>Quando vi Paul Hegarty ctrl arrastar o botão para codificar em sua classe, o principal motivo pelo qual me rendi ao iOS Dev foi o Storyboard. </p>
<p>Excelente! </p>
<p>Além disso, vi muitas coisas do UIDynamic que costumava configurar por meio de código. </p>
<p>É um prazer fazer esta breve exploração. </p>
<p><img src="https://i.imgur.com/LYmt4PZ.png" alt=""></p>
<p><img src="https://i.imgur.com/eL15HjC.png" alt=""></p>
<p><img src="https://i.imgur.com/PHiz4VU.png" alt=""></p>
<p><img src="https://i.imgur.com/qtYdAsH.png" alt=""></p>
]]></content>
      <tags>
        <tag>Xcode</tag>
        <tag>SpriteKit</tag>
      </tags>
  </entry>
  <entry>
    <title>Swift 4 snippets</title>
    <url>/pt/Swift-4-Snippets/</url>
    <content><![CDATA[<h3 id="ClassName-FileRW-VideoPlayer-VideoPicker-ExcelFilePicker-FileCrypto-dateFormatter-Notification-GradientView-ShowAlertController-LoadingView-AddAnchorConstraints"><a href="#ClassName-FileRW-VideoPlayer-VideoPicker-ExcelFilePicker-FileCrypto-dateFormatter-Notification-GradientView-ShowAlertController-LoadingView-AddAnchorConstraints" class="headerlink" title="ClassName, FileRW, VideoPlayer, VideoPicker, ExcelFilePicker, FileCrypto, dateFormatter, Notification, GradientView, ShowAlertController, LoadingView, AddAnchorConstraints"></a>ClassName, FileRW, VideoPlayer, VideoPicker, ExcelFilePicker, FileCrypto, dateFormatter, Notification, GradientView, ShowAlertController, LoadingView, AddAnchorConstraints</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NSObjectProtocol</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">var</span> className: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">String</span>(describing: <span class="type">Self</span>.<span class="keyword">self</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">FileRW</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">readFile</span><span class="params">(<span class="number">_</span> url: URL?)</span></span> -&gt; <span class="type">Data?</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">saveFile</span><span class="params">(<span class="number">_</span> data: Data, name: String, ext: String)</span></span> -&gt; <span class="type">URL?</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">FileRW</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">readFile</span><span class="params">(<span class="number">_</span> url: URL?)</span></span> -&gt; <span class="type">Data?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> url = url <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">try</span> <span class="type">Data</span>(contentsOf: url)</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;read encryted data err&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">saveFile</span><span class="params">(<span class="number">_</span> data: Data, name: String, ext: String)</span></span> -&gt; <span class="type">URL?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> tempDirectoryURL = <span class="type">NSURL</span>.fileURL(withPath: <span class="type">NSTemporaryDirectory</span>(), isDirectory: <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> targetURL = tempDirectoryURL.appendingPathComponent(<span class="string">&quot;\(name).\(ext)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> data.write(to: targetURL)</span><br><span class="line">            <span class="keyword">return</span> targetURL</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">VideoPlayer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">playVideo</span><span class="params">(url: URL, view: UIView? = <span class="literal">nil</span>, playerViewController: AVPlayerViewController? = <span class="literal">nil</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> player = <span class="type">AVPlayer</span>(url: url)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> view = view &#123;</span><br><span class="line">            <span class="comment">//            let playerLayer = AVPlayerLayer(player: player)</span></span><br><span class="line">            <span class="comment">//            playerLayer.frame = view.bounds</span></span><br><span class="line">            <span class="comment">//            view.layer.addSublayer(playerLayer)</span></span><br><span class="line">            <span class="comment">//            player.play()</span></span><br><span class="line">			<span class="comment">// OR</span></span><br><span class="line">            <span class="keyword">let</span> avpvc = <span class="type">AVPlayerViewController</span>()</span><br><span class="line">            addChild(avpvc)</span><br><span class="line">            view.addOverlay(avpvc.view)</span><br><span class="line">            <span class="comment">//            avpvc.view.frame = view.bounds</span></span><br><span class="line">            <span class="comment">//            view.addSubview(avpvc.view)</span></span><br><span class="line">            avpvc.didMove(toParent: <span class="keyword">self</span>)</span><br><span class="line">            avpvc.player = player</span><br><span class="line">            avpvc.player?.play()</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="keyword">let</span> avpvc = playerViewController &#123;</span><br><span class="line">            avpvc.player = player</span><br><span class="line">            avpvc.player?.play()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> avpvc = <span class="type">AVPlayerViewController</span>()</span><br><span class="line">            avpvc.player = player</span><br><span class="line">            <span class="keyword">self</span>.present(avpvc, animated: <span class="literal">true</span>) &#123;</span><br><span class="line">                avpvc.player?.play()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">VideoPicker</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> imagePickerController: <span class="type">UIImagePickerController</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">openVideoPicker</span><span class="params">()</span></span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateThumbnail</span><span class="params">(<span class="number">_</span> url: URL?)</span></span> -&gt; <span class="type">UIImage?</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">VideoPicker</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">openVideoPicker</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> delegate = <span class="keyword">self</span> <span class="keyword">as</span>? <span class="type">UINavigationControllerDelegate</span> &amp; <span class="type">UIImagePickerControllerDelegate</span> &#123;</span><br><span class="line">            imagePickerController.delegate = delegate</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        imagePickerController.navigationBar.tintColor = systemPinkColor</span><br><span class="line">        imagePickerController.videoQuality = .type640x480</span><br><span class="line">        imagePickerController.sourceType = .savedPhotosAlbum</span><br><span class="line">        imagePickerController.mediaTypes = [<span class="string">&quot;public.movie&quot;</span>]</span><br><span class="line">        imagePickerController.modalPresentationStyle = .overCurrentContext</span><br><span class="line">        show(imagePickerController, sender: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateThumbnail</span><span class="params">(<span class="number">_</span> url: URL?)</span></span> -&gt; <span class="type">UIImage?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> url = url <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> asset = <span class="type">AVURLAsset</span>(url: url, options: <span class="literal">nil</span>)</span><br><span class="line">        <span class="keyword">let</span> imgGenerator = <span class="type">AVAssetImageGenerator</span>(asset: asset)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> cgImage = <span class="keyword">try</span>? imgGenerator.copyCGImage(at: <span class="type">CMTime</span>(seconds: <span class="number">2</span>, preferredTimescale: <span class="number">60</span>) , actualTime: <span class="literal">nil</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">UIImage</span>(cgImage: cgImage)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">FilePicker</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectExcelFile</span><span class="params">()</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">FilePicker</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> excelDocumentTypes: [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&quot;com.microsoft.Excel.xls&quot;</span>, <span class="string">&quot;org.openxmlformats.spreadsheetml.sheet&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectExcelFile</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> dpvc = <span class="type">UIDocumentPickerViewController</span> (documentTypes: excelDocumentTypes, <span class="keyword">in</span>: .<span class="keyword">import</span>)</span><br><span class="line">        dpvc.view.tintColor = systemPinkColor</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> delegate = <span class="keyword">self</span> <span class="keyword">as</span>? <span class="type">UIDocumentPickerDelegate</span> &#123;</span><br><span class="line">            dpvc.delegate = delegate</span><br><span class="line">        &#125;</span><br><span class="line">        present(dpvc, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectedUrl</span><span class="params">(<span class="number">_</span> urls: [URL])</span></span> -&gt; <span class="type">URL?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> url = urls.first, <span class="keyword">let</span> vals = <span class="keyword">try</span>? url.resourceValues(forKeys: [.typeIdentifierKey]), <span class="keyword">let</span> id = vals.typeIdentifier,</span><br><span class="line">            excelDocumentTypes.<span class="built_in">contains</span>(id)</span><br><span class="line">            <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> url</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">FileCrypto</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">encrypt</span><span class="params">(<span class="number">_</span> data: Data, pw: String)</span></span> -&gt; <span class="type">Data</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">decrypt</span><span class="params">(<span class="number">_</span> data: Data, pw: String)</span></span> -&gt; <span class="type">Data?</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> pw = <span class="string">&quot;xxxx-xxxx-xxxx&quot;</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">FileCrypto</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">encrypt</span><span class="params">(<span class="number">_</span> data: Data, pw: String)</span></span> -&gt; <span class="type">Data</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">RNCryptor</span>.encrypt(data: data, withPassword: pw)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">decrypt</span><span class="params">(<span class="number">_</span> data: Data, pw: String)</span></span> -&gt; <span class="type">Data?</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">try</span> <span class="type">RNCryptor</span>.decrypt(data: data, withPassword: pw)</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">TimeInterval</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> yyyymmdd: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> date = <span class="type">Date</span>(timeIntervalSince1970: <span class="keyword">self</span>)</span><br><span class="line">        <span class="keyword">let</span> dateFormatter = <span class="type">DateFormatter</span>()</span><br><span class="line">        <span class="comment">//        dateFormatter.timeStyle = DateFormatter.Style.medium //Set time style</span></span><br><span class="line">        dateFormatter.dateStyle = <span class="type">DateFormatter</span>.<span class="type">Style</span>.medium <span class="comment">//Set date style</span></span><br><span class="line">        <span class="keyword">let</span> localDate = dateFormatter.string(from: date)</span><br><span class="line">        <span class="keyword">return</span> localDate</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data)</span></span> &#123;</span><br><span class="line"><span class="comment">//        self.enableRemoteNotificationFeatures()</span></span><br><span class="line"><span class="comment">//        self.forwardTokenToServer(token: deviceToken)</span></span><br><span class="line">    <span class="keyword">let</span> token = deviceToken.<span class="built_in">map</span> &#123; <span class="type">String</span>(format: <span class="string">&quot;%02.2hhx&quot;</span>, $<span class="number">0</span>) &#125;.joined()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;deviceToken: &quot;</span>, token)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">registerForPushNotifications</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="type">UNUserNotificationCenter</span>.current().requestAuthorization(options: [.alert, .sound, .badge]) &#123;</span><br><span class="line">        (granted, error) <span class="keyword">in</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Permission granted: \(granted)&quot;</span>)</span><br><span class="line">        <span class="comment">// 1. Check if permission granted</span></span><br><span class="line">        <span class="keyword">guard</span> granted <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="comment">// 2. Attempt registration for remote notifications on the main thread</span></span><br><span class="line">        <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">            <span class="type">UIApplication</span>.shared.registerForRemoteNotifications()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> CoreGraphics</span><br><span class="line"></span><br><span class="line"><span class="meta">@IBDesignable</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GradientView</span>: <span class="title">UIView</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@IBInspectable</span> <span class="keyword">var</span> fromColor: <span class="type">UIColor</span> = .clear</span><br><span class="line">    <span class="meta">@IBInspectable</span> <span class="keyword">var</span> toColor: <span class="type">UIColor</span> = .clear &#123;</span><br><span class="line">        <span class="keyword">didSet</span> &#123;</span><br><span class="line">            gradientOfView(colours: [fromColor, toColor])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">layoutSubviews</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.layoutSubviews()</span><br><span class="line"></span><br><span class="line">        gradientOfView(colours: [fromColor, toColor])</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> grad = <span class="type">CAGradientLayer</span>()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">gradientOfView</span><span class="params">(colours: [UIColor])</span></span> &#123;</span><br><span class="line">        grad.removeFromSuperlayer()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> cgColours = [<span class="type">CGColor</span>]()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> colour <span class="keyword">in</span> colours &#123;</span><br><span class="line">            cgColours.append(colour.cgColor)</span><br><span class="line">        &#125;</span><br><span class="line">        grad.frame = bounds</span><br><span class="line">        grad.colors = cgColours</span><br><span class="line">        layer.addSublayer(grad)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">protocol</span> <span class="title">ShowAlertController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">extension</span> <span class="title">ShowAlertController</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">alert</span><span class="params">(<span class="number">_</span> title: String? = <span class="literal">nil</span>, <span class="number">_</span> message: String? = <span class="literal">nil</span>, sender: UIBarButtonItem? = <span class="literal">nil</span>, buttons: [ <span class="params">(title:String, handler: <span class="params">(<span class="params">()</span></span></span></span></span> -&gt; <span class="type">Void</span>)? )]? = <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> alertC = <span class="type">UIAlertController</span>(title: title, message: message, preferredStyle: .alert)</span><br><span class="line">        buttons?.forEach &#123; button <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">let</span> style = (button.handler == <span class="literal">nil</span> ? <span class="type">UIAlertAction</span>.<span class="type">Style</span>.cancel : .<span class="keyword">default</span>)</span><br><span class="line">            alertC.addAction(<span class="type">UIAlertAction</span>(title: button.title, style: style) &#123; <span class="number">_</span> <span class="keyword">in</span></span><br><span class="line">                button.handler?()</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> popoverController = alertC.popoverPresentationController &#123;</span><br><span class="line">            popoverController.barButtonItem = sender</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.present(alertC, animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">toast</span><span class="params">(<span class="number">_</span> message: String, delay: Double = <span class="number">1</span>, sender: UIBarButtonItem? = <span class="literal">nil</span>, completion: <span class="params">(<span class="params">()</span></span></span></span> -&gt; <span class="type">Void</span>)?) &#123;</span><br><span class="line">        <span class="keyword">let</span> alertC = <span class="type">UIAlertController</span>(title: <span class="literal">nil</span>, message: message, preferredStyle: .alert)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> popoverController = alertC.popoverPresentationController &#123;</span><br><span class="line">            popoverController.barButtonItem = sender</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.present(alertC, animated: <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="type">DispatchQueue</span>.main.asyncAfter(deadline: <span class="type">DispatchTime</span>.now() + delay) &#123;</span><br><span class="line">            alertC.dismiss(animated: <span class="literal">true</span>, completion: completion)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">protocol</span> <span class="title">LoadingView</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> progressView: <span class="type">UIProgressView</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> coverView: <span class="type">UIView</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">extension</span> <span class="title">LoadingView</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">startLoading</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> v = coverView</span><br><span class="line"></span><br><span class="line">        v.backgroundColor = .white</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> pv = progressView</span><br><span class="line">        pv.progress = <span class="number">0</span></span><br><span class="line">        v.addConstraints(pv, l: <span class="number">0</span>, r: <span class="number">0</span>, t: navigationController?.navigationBar.bounds.height ?? <span class="number">0</span>, h: <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> aiv = <span class="type">UIActivityIndicatorView</span>(style: .gray)</span><br><span class="line">        aiv.startAnimating()</span><br><span class="line">        v.addConstraints(aiv, cx: <span class="number">0</span>, cy: <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        view.addOverlay(v)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">stopLoading</span><span class="params">()</span></span> &#123;</span><br><span class="line">        coverView.removeFromSuperview()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">extension</span> <span class="title">UIView</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">addOverlay</span><span class="params">(<span class="number">_</span> subView: UIView)</span></span> &#123;</span><br><span class="line">        addConstraints(subView, l: <span class="number">0</span>, r: <span class="number">0</span>, t: <span class="number">0</span>, b: <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">addConstraints</span><span class="params">(<span class="number">_</span> subView: UIView, l:CGFloat? = <span class="literal">nil</span>, r: CGFloat? = <span class="literal">nil</span>, t: CGFloat? = <span class="literal">nil</span>, b:CGFloat? = <span class="literal">nil</span>, h: CGFloat? = <span class="literal">nil</span>, w: CGFloat? = <span class="literal">nil</span>, cx: CGFloat? = <span class="literal">nil</span>, cy: CGFloat? = <span class="literal">nil</span>)</span></span> &#123;</span><br><span class="line">        addSubview(subView)</span><br><span class="line">        subView.translatesAutoresizingMaskIntoConstraints = <span class="literal">false</span></span><br><span class="line"><span class="comment">//        let margins = layoutMarginsGuide</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> l = l &#123;</span><br><span class="line">            subView.leadingAnchor.constraint(equalTo: leadingAnchor, constant: l).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> r = r &#123;</span><br><span class="line">            subView.trailingAnchor.constraint(equalTo: trailingAnchor, constant: r).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> t = t &#123;</span><br><span class="line">            subView.topAnchor.constraint(equalTo: topAnchor, constant: t).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> b = b &#123;</span><br><span class="line">            subView.bottomAnchor.constraint(equalTo: bottomAnchor, constant: b).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> h = h &#123;</span><br><span class="line">            subView.heightAnchor.constraint(equalToConstant: h).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> w = w &#123;</span><br><span class="line">            subView.widthAnchor.constraint(equalToConstant: w).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> cx = cx &#123;</span><br><span class="line">            subView.centerXAnchor.constraint(equalTo: centerXAnchor, constant: cx).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> cy = cy &#123;</span><br><span class="line">            subView.centerYAnchor.constraint(equalTo: centerYAnchor, constant: cy).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>Autolayout</tag>
      </tags>
  </entry>
  <entry>
    <title>Arquivo de áudio para texto via SFSpeechRecognizer</title>
    <url>/pt/Audio-File-to-Text-via-SFSpeechRecognizer/</url>
    <content><![CDATA[<p>Assim como chamar uma API, é muito mais fácil do que eu pensava (na verdade) 😄😄😄 </p>
<h3 id="import-Speech"><a href="#import-Speech" class="headerlink" title="import Speech"></a><a href="https://developer.apple.com/documentation/speech/sfspeechrecognizer">import Speech</a></h3><h3 id="Info-plist"><a href="#Info-plist" class="headerlink" title="Info.plist"></a>Info.plist</h3><ul>
<li>Privacidade - Descrição de uso do microfone </li>
<li>Privacidade - Descrição do uso do reconhecimento de voz </li>
</ul>
<h3 id="Autorizacao"><a href="#Autorizacao" class="headerlink" title="Autorização"></a>Autorização</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">SFSpeechRecognizer</span>.requestAuthorization &#123; authStatus <span class="keyword">in</span></span><br><span class="line">    <span class="type">OperationQueue</span>.main.addOperation &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">switch</span> authStatus &#123;</span><br><span class="line">        <span class="keyword">case</span> .notDetermined, .denied, .restricted:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;.notDetermined, .denied, .restricted&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> .authorized:</span><br><span class="line">            <span class="keyword">self</span>?.startRecognizeFile()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="SelectAudio"><a href="#SelectAudio" class="headerlink" title="SelectAudio"></a>SelectAudio</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protocol ShareText &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">extension ShareText where Self: UIViewController &#123;</span><br><span class="line">    func shareText(_ title: String, text: String) &#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; set up activity view controller</span><br><span class="line">        let textToShare &#x3D; [text]</span><br><span class="line">        let activityViewController &#x3D; UIActivityViewController(activityItems: textToShare, applicationActivities: nil)</span><br><span class="line">        activityViewController.popoverPresentationController?.sourceView &#x3D; self.view &#x2F;&#x2F; so that iPads won&#39;t crash</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; exclude some activity types from the list (optional)</span><br><span class="line">        activityViewController.excludedActivityTypes &#x3D; [ UIActivity.ActivityType.airDrop, .message, .copyToPasteboard ]</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; present the view controller</span><br><span class="line">        self.present(activityViewController, animated: true, completion: nil)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">SeletctAudio</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">SeletctAudio</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectAudio</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> types: [<span class="type">String</span>] = [<span class="string">&quot;public.movie&quot;</span>, <span class="string">&quot;public.audio&quot;</span>]</span><br><span class="line">        <span class="keyword">let</span> documentPicker = <span class="type">UIDocumentPickerViewController</span>(documentTypes: types, <span class="keyword">in</span>: .<span class="keyword">import</span>)</span><br><span class="line">        documentPicker.delegate = <span class="keyword">self</span> <span class="keyword">as</span>? <span class="type">UIDocumentPickerDelegate</span></span><br><span class="line">        documentPicker.modalPresentationStyle = .formSheet</span><br><span class="line">        <span class="keyword">self</span>.present(documentPicker, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="RecognizeFile"><a href="#RecognizeFile" class="headerlink" title="RecognizeFile"></a>RecognizeFile</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">RecognizeFile</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">RecognizeFile</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">recognizeFile</span><span class="params">(<span class="number">_</span> url: URL, completion: @escaping <span class="params">(Bool, Bool, String)</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">self</span>.divide(url) &#123; urls <span class="keyword">in</span></span><br><span class="line">                <span class="keyword">let</span> s = <span class="type">DispatchSemaphore</span>(value: <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                urls.enumerated().forEach &#123; i, url <span class="keyword">in</span></span><br><span class="line">                    <span class="type">DispatchQueue</span>.global().async &#123;</span><br><span class="line">                        <span class="number">_</span> = s.wait(timeout: <span class="type">DispatchTime</span>.distantFuture)</span><br><span class="line">                        <span class="built_in">print</span>(url)</span><br><span class="line">                        <span class="keyword">self</span>.recognizeUrl(url) &#123; b, str <span class="keyword">in</span></span><br><span class="line">                            completion(b, urls.last == url, str)</span><br><span class="line">                            <span class="keyword">if</span> b &#123;</span><br><span class="line">                                <span class="built_in">print</span>(str)</span><br><span class="line">                                s.signal()</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">recognizeUrl</span><span class="params">(<span class="number">_</span> url: URL, completion: @escaping <span class="params">(Bool, String)</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> myRecognizer = <span class="type">SFSpeechRecognizer</span>(locale: <span class="type">Locale</span>(identifier: <span class="string">&quot;zh_CN&quot;</span>)) <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// A recognizer is not supported for the current locale</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> !myRecognizer.isAvailable &#123;</span><br><span class="line">            <span class="comment">// The recognizer is not available right now</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> request = <span class="type">SFSpeechURLRecognitionRequest</span>(url: url)</span><br><span class="line">        <span class="comment">//        request.shouldReportPartialResults = true</span></span><br><span class="line">        myRecognizer.recognitionTask(with: request) &#123; (result, error) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> result = result <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Recognition failed, so check error for details and handle it</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;err: &quot;</span>, error.debugDescription)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Print the SpeechTester that has been recognized so far</span></span><br><span class="line">            <span class="comment">//            if result.isFinal &#123;</span></span><br><span class="line">            <span class="keyword">let</span> str = result.bestTranscription.formattedString</span><br><span class="line">            <span class="type">OperationQueue</span>.main.addOperation &#123;</span><br><span class="line">                completion(result.isFinal, str)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//            &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">divide</span><span class="params">(<span class="number">_</span> url: URL, completion: @escaping <span class="params">([URL])</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> asset = <span class="type">AVURLAsset</span>(url: url)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> n = <span class="type">Int</span>(<span class="type">CMTimeGetSeconds</span>(asset.duration) / <span class="number">60</span>)</span><br><span class="line">        <span class="keyword">var</span> urls = <span class="type">Array</span>(repeating: <span class="type">URL</span>(string: <span class="string">&quot;&quot;</span>), <span class="built_in">count</span>: n+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> group = <span class="type">DispatchGroup</span>()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>...n &#123;</span><br><span class="line">            group.enter()</span><br><span class="line">            exportAsset(asset, start: i) &#123; url <span class="keyword">in</span></span><br><span class="line">                urls[i] = url</span><br><span class="line">                group.leave()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        group.notify(queue: .main) &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;divide complete&quot;</span>)</span><br><span class="line">            completion(urls.<span class="built_in">compactMap</span>(&#123;$<span class="number">0</span>&#125;))</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">exportAsset</span><span class="params">(<span class="number">_</span> asset: AVAsset, start: Int, completion: @escaping <span class="params">(URL?)</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;\(#function)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> documentsDirectory = <span class="type">FileManager</span>.<span class="keyword">default</span>.urls(<span class="keyword">for</span>: .documentDirectory, <span class="keyword">in</span>: .userDomainMask)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">let</span> tmpFolder = documentsDirectory.appendingPathComponent(<span class="string">&quot;tmp/&quot;</span>)</span><br><span class="line">        <span class="keyword">try</span>? <span class="type">FileManager</span>.<span class="keyword">default</span>.createDirectory(at: tmpFolder, withIntermediateDirectories: <span class="literal">true</span>, attributes: <span class="literal">nil</span>)</span><br><span class="line">        <span class="keyword">let</span> trimmedSoundFileURL = documentsDirectory.appendingPathComponent(<span class="string">&quot;tmp/\(start).m4a&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;saving to \(trimmedSoundFileURL.absoluteString)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="type">FileManager</span>.<span class="keyword">default</span>.fileExists(atPath: trimmedSoundFileURL.path) &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;sound exists, removing \(trimmedSoundFileURL.absoluteString)&quot;</span>)</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">try</span> trimmedSoundFileURL.checkResourceIsReachable() &#123;</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;is reachable&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> <span class="type">FileManager</span>.<span class="keyword">default</span>.removeItem(atPath: trimmedSoundFileURL.path)</span><br><span class="line">            &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;could not remove \(trimmedSoundFileURL)&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(error.localizedDescription)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;creating export session for \(asset)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> exporter = <span class="type">AVAssetExportSession</span>(asset: asset, presetName: <span class="type">AVAssetExportPresetAppleM4A</span>) &#123;</span><br><span class="line">            exporter.outputFileType = <span class="type">AVFileType</span>.m4a</span><br><span class="line">            exporter.outputURL = trimmedSoundFileURL</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> duration = <span class="type">CMTimeGetSeconds</span>(asset.duration)</span><br><span class="line">            <span class="keyword">if</span> duration &lt; <span class="number">5.0</span> &#123;</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;sound is not long enough&quot;</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// e.g. the first 5 seconds</span></span><br><span class="line">            <span class="keyword">let</span> startTime = <span class="type">CMTime</span>(seconds: <span class="type">Double</span>(start*<span class="number">60</span>), preferredTimescale: <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">let</span> stopTime = <span class="type">CMTime</span>(seconds: <span class="type">Double</span>(start+<span class="number">1</span>)*<span class="number">60</span>, preferredTimescale: <span class="number">1</span>)</span><br><span class="line">            exporter.timeRange = <span class="type">CMTimeRangeFromTimeToTime</span>(start: startTime, end: stopTime)</span><br><span class="line"></span><br><span class="line">            <span class="comment">// do it</span></span><br><span class="line">            exporter.exportAsynchronously(completionHandler: &#123;</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;export complete \(exporter.status)&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">switch</span> exporter.status &#123;</span><br><span class="line">                <span class="keyword">case</span>  .failed, .cancelled:</span><br><span class="line">                    completion(<span class="literal">nil</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;export \(String(describing: exporter.error))&quot;</span>)</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    completion(trimmedSoundFileURL)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;export complete&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            completion(<span class="literal">nil</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;cannot create AVAssetExportSession for asset \(asset)&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>SFSpeechRecognizer</tag>
      </tags>
  </entry>
  <entry>
    <title>Comentários</title>
    <url>/pt/Feedback/</url>
    <content><![CDATA[<p>Mencionamos como avançar na seção 24 <a href="https://leihao0.github.io/Feedback/">Mestre Templário Avançado</a> dez mil anos atrás </p>
<p>Na verdade, além do aprimoramento da magia, Sênior tem uma habilidade mágica </p>
<p>–Comentários </p>
<p>Este método primeiro afirma a outra parte (pengsha)<br>Em seguida, indique eufemisticamente o que precisa ser fortalecido (quedian)<br>Eventualmente, alcance o efeito de limpar o mana do oponente a zero </p>
<a id="more"></a>

<hr>
<p>Olhando para o pequeno mago e vários amigos mais velhos<br>É também arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar arrastar para a linha morta<br>Vai fazer isso </p>
<p>Parece que o feedback é de fato uma habilidade de alto nível </p>
<p>É uma pena que nosso pequeno mago esteja e tenha estado no estágio Júnior </p>
<p>Além dos dois motivos a seguir: </p>
<ol>
<li>Lixo falado </li>
<li>Medo Social </li>
</ol>
<p>O feedback se tornou um obstáculo intransponível para o Pequeno Mago </p>
<hr>
<p>Uma tarde, o pequeno mago estava se preocupando em consumir café loucamente<br>Sob o efeito da cafeína, um capricho<br>Embora eu seja fraco<br>Mas isso não significa que Shenlong não possa ser convocado. </p>
<p>Por exemplo, o RNN em alquimia (shenduxuexi) é muito adequado para a situação atual </p>
<h2 id="Alquimia"><a href="#Alquimia" class="headerlink" title="Alquimia"></a>Alquimia</h2><p>Por falar em alquimia, era bastante misterioso no início<br>Apenas alguns bruxos entendem o mistério </p>
<p>Pequeno mago sem saber a verdade<br>Escovei o curso de ML de Andrew Ng no Coursera e comprei o certificado 📄 para mostrar sua inocência<br>Embora eu tenha esquecido de tudo, ainda tenho alguns conceitos </p>
<p>E agora é 9012<br>Foi simplificado ao ponto em que você só precisa preparar os materiais sem pensar </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir feedback</span><br><span class="line">cd feedback</span><br><span class="line">mkdir -p datasets weights outputs</span><br></pre></td></tr></table></figure>

<p>O pequeno mago primeiro pesquisou e encontrou <a href="https://status.net/articles/performance-review-phrases-examples/">exemplos de frases</a> </p>
<p>Basta copiar o conteúdo para <code>datasets / data.txt</code> </p>
<p>Em seguida, filtre feedback positivo e feedback negativo </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> datasets</span><br><span class="line"></span><br><span class="line">cat data.txt | grep ✓ | sed <span class="string">&#x27;s/✓ //&#x27;</span> &gt; 👍.txt</span><br><span class="line">cat data.txt | grep ✗ | sed <span class="string">&#x27;s/✗ //&#x27;</span> &gt; 👎.txt</span><br></pre></td></tr></table></figure>

<p>Depois que os materiais estiverem prontos, você pode configurar o forno de comprimidos </p>
<p>O pequeno mago procurou por ele, e eu acho que <a href="https://github.com/minimaxir/textgenrnn">textgenrnn</a> é bom e fácil de entender </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">pip3 install -I textgenrnn tensorflow</span><br></pre></td></tr></table></figure>

<p>Configurar etapas de alquimia </p>
<p>Refino aberto </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python3 training.py </span></span><br><span class="line">from textgenrnn import textgenrnn</span><br><span class="line"></span><br><span class="line">textgen = textgenrnn()</span><br><span class="line"></span><br><span class="line">textgen.train_from_file(<span class="string">&#x27;datasets/👍.txt&#x27;</span>, num_epochs=1)</span><br><span class="line">textgen.save(<span class="string">&#x27;weights/👍.hdf5&#x27;</span>)</span><br><span class="line"></span><br><span class="line">textgen.train_from_file(<span class="string">&#x27;datasets/👎.txt&#x27;</span>, num_epochs=1)</span><br><span class="line">textgen.save(<span class="string">&#x27;weights/👎.hdf5&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>Em seguida, a CPU do MBP do Pequeno Mago enlouqueceu, explodindo um alegre fogo de artifício 🎆 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Instructions for updating:</span><br><span class="line">Use tf.where in 2.0, which has the same broadcast rule as np.where</span><br><span class="line">Epoch 1&#x2F;1</span><br><span class="line">328&#x2F;559 [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt;.............] - ETA: 36s - loss: 1.2788</span><br></pre></td></tr></table></figure>

<p>Carregue o look 🥚 praticado </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python3 testing.py </span></span><br><span class="line"><span class="keyword">from</span> textgenrnn <span class="keyword">import</span> textgenrnn</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;👍&#x27;</span>)</span><br><span class="line">textgenrnn(<span class="string">&#x27;weights/👍.hdf5&#x27;</span>).generate_samples(prefix=<span class="string">&quot;He&quot;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;👎&#x27;</span>)</span><br><span class="line">textgenrnn(<span class="string">&#x27;weights/👎.hdf5&#x27;</span>).generate_samples(prefix=<span class="string">&quot;He&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>emmmmmmmmmmmm </p>
<p>No entanto, o ganso revelou ser olhos muito picantes 💔💔💔 </p>
<p><img src="https://i.imgur.com/RT2msrl.gif" alt=""></p>
<hr>
<p>O plano falha </p>
<p>Não continuou a experiência<br>Mas adicionar épocas ou camadas pode melhorar </p>
<p>Repo: <a href="https://github.com/leihao0/feedback">Feedback</a> </p>
<p>mas: </p>
<blockquote>
<p>Deve haver dados insuficientes </p>
</blockquote>
<p>O pequeno mago disse categoricamente </p>
<p>😠😠😠 </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Agarrar e maçã</title>
    <url>/pt/Grab-refer-a-candidate/</url>
    <content><![CDATA[<h2 id="Atualizacao-2021"><a href="#Atualizacao-2021" class="headerlink" title="Atualização 2021."></a>Atualização 2021.</h2><p>Resignou, agora você pode empurrar a empresa de frutas<br>No entanto, Grab (Grie Technology) é sobre o IPO.<br>Se você se sentir bem, você pode deixar seus amigos continuarem a ajudar o empurrão interno. </p>
<a id="more"></a>

<hr>
<p>Eu tenho trabalhado por um período de tempo, vamos falar sobre isso. </p>
<h2 id="Caracteristicas"><a href="#Caracteristicas" class="headerlink" title="Características"></a>Características</h2><ul>
<li>Lugar normal em sair do trabalho (nº 996 ou 007, o escritório de Pequim não é) </li>
<li>Mês pode remover um ou dois dias (ver grupo) </li>
<li>Multi-cultural (que país existe) </li>
<li>Ambiente chinês e inglês (bastante chinês) </li>
<li>Office global (pode estar dentro de transferência) </li>
<li>Falso de 18 anos, 3 dias de sonda </li>
<li>Outro eu esqueci </li>
</ul>
<p>No geral, uma empresa na migração. </p>
<h2 id="Recrutamento"><a href="#Recrutamento" class="headerlink" title="Recrutamento"></a>Recrutamento</h2><p>Equipe recente de alimentos em loucura, há muitos HCS<br>Eu não conheço outras posições, engraçando </p>
<ul>
<li>Preparação </li>
<li>Algoritmo de escova </li>
<li>Projeto feito sob penteado </li>
<li>Um pouco de atitude </li>
</ul>
<p>A probabilidade de entrar é bastante grande </p>
<p>Passaporte do Mainland diretamente para Cingapura precisa EP<br>Empresa ajudará, cerca de dois meses<br>Então não se preocupe, você pode ter certeza de que a entrevista é boa. </p>
<p>Se você acha que Cingapura está morto, você pode ver Pequim.<br>Southern Road, Haidian District </p>
<p>Se você segurar um passaporte não continente, você também pode olhar para o imperador dos EUA, em Seattle. </p>
<p>Todas as posições estão aqui:<br>Https: //grab.carers/<br>Pesquise sua própria equipe e o país<br>Mail 📧cv (lembre-se de enviar inglês) para o senhorio </p>
<h2 id="Empurrao-interno"><a href="#Empurrao-interno" class="headerlink" title="Empurrão interno"></a>Empurrão interno</h2><p>Precisa preencher uma forma detalhada no sistema interno<br>Não é para a frente ser jogado para HR.<br>Então, quando sou, espero que o formato seja o seguinte: </p>
<p>Nome do correio: </p>
<blockquote>
<p>V2-Grab-Position-location<br>如: Engenheiro de Backend v2-Grab-Singapura </p>
</blockquote>
<p>Conteúdo do email: </p>
<blockquote>
<p>País:<br>Nome dado:<br>Sobrenome: </p>
</blockquote>
<blockquote>
<p>Código do telefone do país: (a China é 86)<br>Número de telefone:<br>E-mail: </p>
</blockquote>
<blockquote>
<p>Título: </p>
</blockquote>
<p>Opcional: </p>
<blockquote>
<p>Comentários (Como você o recomenda? | Sua vantagem é?) </p>
</blockquote>
<blockquote>
<p>LinkedIn Earl:<br>Nome de usuário do Twitter:<br>URL Facebook:<br>Gogonga + Earl: </p>
</blockquote>
<blockquote>
<p>Cidade:<br>Código postal: </p>
</blockquote>
<blockquote>
<p>Anexo 📎 CV. </p>
</blockquote>
<hr>
<h2 id="Finalmente"><a href="#Finalmente" class="headerlink" title="Finalmente"></a>Finalmente</h2><p>enviar para:<br>leihao.sg {at} gmail {dot} com </p>
<hr>
<p>O senhorio sabe que você tem muito de vocês perguntar.<br>E por que você não fica? </p>
<p>Então você pode se referir ao blog do senhorio<br>Não coloque o senhorio como mentiroso </p>
<p>Além disso, o senhorio é apenas uma varredura inferior, não hr.<br>Então eu não posso responder a vários problemas de fórmula<br>Por favor me perdoe </p>
<p>A questão pode ser deixada, etc. CV tem pedido HR, ou um entrevistador<br>Eles são profissionais do que o senhorio </p>
<p>último do último<br>Se você passar seu emprego, você vai agradecer pelo seu email. </p>
<p>O edifício principal tem fobia social<br>Não venha para mim 233 </p>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Refer</tag>
        <tag>Grab</tag>
        <tag>Apple</tag>
      </tags>
  </entry>
  <entry>
    <title>Animação de reserva do Uber</title>
    <url>/pt/Uber-Booking-Animation/</url>
    <content><![CDATA[<p>Em junho deste ano, entrei para a WWDC em San José. Foi a animação de espera que vi quando encontrei amigos na Biblioteca de Cupertino usando o Uber. </p>
<p>A animação é incrível! </p>
<p>Eu estava curioso para saber como eles faziam isso, então fiz algumas explorações. </p>
<h2 id="Antevisao"><a href="#Antevisao" class="headerlink" title="Antevisão"></a>Antevisão</h2><video width="360" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/UberBookingAnimation.mp4">
</video>

<p>Bem, a animação da polilinha ainda não é suave o suficiente. Alguém tem uma idéia melhor? </p>
<a id="more"></a>

<h2 id="Passo-a-passo"><a href="#Passo-a-passo" class="headerlink" title="Passo a passo"></a>Passo a passo</h2><h3 id="Gire-o-mapa"><a href="#Gire-o-mapa" class="headerlink" title="Gire o mapa"></a>Gire o mapa</h3><p>Pelas duas razões a seguir, escolhi Map como o mapa padrão para demonstrar: </p>
<ul>
<li>Após o WWDC19, o Simulador é construído nas camadas Meta e Core de todos os frameworks Apple incluídos no MapKit, e o Metal usa a GPU do sistema Mac subjacente. </li>
<li>O Google Map requer uma chave de desenvolvedor para acessar, o que significa que depois de bifurcar o repositório do GitHub, você não pode executá-lo diretamente no emulador </li>
</ul>
<p> As transações do mapa podem ser ajustadas incorporando no bloco <code>UIView.animate</code> </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">UIView</span>.animate(withDuration: <span class="number">1</span>, delay: <span class="number">0</span>, options: .curveEaseInOut, animations: &#123;  [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">self</span>?.mapView.setCamera(<span class="type">MKMapCamera</span>(lookingAtCenter: center, fromDistance: fromDistance, pitch: pitch, heading: <span class="number">0</span>), animated: <span class="literal">true</span>)</span><br><span class="line">&#125;) &#123; b <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">self</span>.pinAnimation()</span><br><span class="line">    <span class="type">UIView</span>.animate(withDuration: <span class="number">180</span>, delay: <span class="number">0</span>, options: [.curveLinear, .autoreverse], animations: &#123;  [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">self</span>?.mapView.setCamera(<span class="type">MKMapCamera</span>(lookingAtCenter: center, fromDistance: fromDistance, pitch: pitch, heading: heading), animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>O Google Map deve usar <code>CATransaction</code> </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">CATransaction</span>.begin()</span><br><span class="line"><span class="type">CATransaction</span>.setValue(<span class="type">NSNumber</span>(float: <span class="number">1.0</span>), forKey: kCATransactionAnimationDuration)</span><br><span class="line"><span class="comment">// change the camera, set the zoom, whatever.</span></span><br><span class="line"><span class="type">CATransaction</span>.commit()</span><br></pre></td></tr></table></figure>

<h3 id="Animacao-fixa"><a href="#Animacao-fixa" class="headerlink" title="Animação fixa"></a>Animação fixa</h3><p>Precisamos de dois <code>CAShapeLayer</code> para fazer a animação, um para o círculo e outro para o pino.<br>Observe que o círculo desaparece quando atinge seu valor máximo, e o pino tem uma curva <code>easyIn</code>. </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">//   Pin Animation</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">MainViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">setUpLayers</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        circleLayer.lineWidth = <span class="number">1.5</span></span><br><span class="line">        circleLayer.strokeColor = <span class="type">UIColor</span>.white.cgColor</span><br><span class="line">        circleLayer.fillColor = <span class="type">UIColor</span>.clear.cgColor</span><br><span class="line">        circleLayer.path = <span class="type">UIBezierPath</span>(ovalIn: circleView.bounds).cgPath</span><br><span class="line"></span><br><span class="line">        circleLayer.shadowColor = <span class="type">UIColor</span>.white.cgColor</span><br><span class="line"></span><br><span class="line">        pinLayer.fillColor = <span class="type">UIColor</span>.white.cgColor</span><br><span class="line">        pinLayer.path = <span class="type">UIBezierPath</span>(roundedRect: pinView.bounds, cornerRadius: <span class="number">1</span>).cgPath</span><br><span class="line">        pinLayer.opacity = <span class="number">0.9</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">pinAnimation</span><span class="params">()</span></span> &#123;</span><br><span class="line">        setUpLayers()</span><br><span class="line"></span><br><span class="line">        circleView.layer.addSublayer(circleLayer)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.circleView.transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">0.01</span>, y: <span class="number">0.01</span>)</span><br><span class="line">        <span class="keyword">self</span>.circleView.alpha = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="type">UIView</span>.animate(withDuration: <span class="number">2</span>, delay: <span class="number">0</span>, options: [.<span class="keyword">repeat</span>], animations: &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">self</span>?.circleView.transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">1</span>, y: <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">self</span>?.circleView.alpha = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        &#125;, completion: <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        pinView.layer.addSublayer(pinLayer)</span><br><span class="line">        <span class="type">UIView</span>.animate(withDuration: <span class="number">1</span>, delay: <span class="number">0</span>, options: [.curveEaseIn, .<span class="keyword">repeat</span>, .autoreverse], animations: &#123;  [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">self</span>?.pinView.transform = <span class="type">CGAffineTransform</span>(translationX: <span class="number">0</span>, y: -<span class="number">4</span>)</span><br><span class="line">            <span class="keyword">self</span>?.pinView.transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">0.5</span>, y: <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Desenhe-uma-polilinha-no-mapa"><a href="#Desenhe-uma-polilinha-no-mapa" class="headerlink" title="Desenhe uma polilinha no mapa"></a>Desenhe uma polilinha no mapa</h3><p> O mapa usa <code>MKMapViewDelegate</code> para lidar com o desenho. </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">mapView</span><span class="params">(<span class="number">_</span> mapView: MKMapView, rendererFor overlay: MKOverlay)</span></span> -&gt; <span class="type">MKOverlayRenderer</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> overlay = overlay <span class="keyword">as</span>? <span class="type">MKPolyline</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> polyline = <span class="type">MKPolylineRenderer</span>(overlay: overlay)</span><br><span class="line">        polyline.strokeColor = .white</span><br><span class="line">        polyline.lineWidth = <span class="number">1.5</span></span><br><span class="line">        <span class="keyword">return</span> polyline</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="type">MKOverlayRenderer</span>(overlay: overlay)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Veja como adicionar polilinha </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> currentSegment = <span class="type">MKPolyline</span>(coordinates: subCoordinates, <span class="built_in">count</span>: subCoordinates.<span class="built_in">count</span>)</span><br><span class="line"><span class="keyword">self</span>.mapView.addOverlay(currentSegment)</span><br></pre></td></tr></table></figure>

<h3 id="Polilinha-animada"><a href="#Polilinha-animada" class="headerlink" title="Polilinha animada"></a>Polilinha animada</h3><p>Essa é a parte complicada. </p>
<p>Quando vemos que a animação do Uber está perto o suficiente, a polilinha gira com o mapa para desenhar no mapa. </p>
<p>O que quero fazer é continuar a adicionar e excluir polilinhas no mapa para fingir que é uma animação.<br>Da mesma forma, quando aparece no início e no final do alfinete, a linha tem um título e uma cauda. </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">animate</span><span class="params">(route: [CLLocationCoordinate2D], duration: TimeInterval, completion: <span class="params">(<span class="params">()</span></span></span></span> -&gt; <span class="type">Void</span>)? = <span class="literal">nil</span>) &#123;</span><br><span class="line">    <span class="keyword">guard</span> route.<span class="built_in">count</span> &gt; <span class="number">0</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> currentStep = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> delta = <span class="number">25</span>, opt = <span class="number">3.0</span></span><br><span class="line">    <span class="keyword">let</span> totalSteps = route.<span class="built_in">count</span> + delta</span><br><span class="line">    <span class="keyword">let</span> stepDrawDur = duration / <span class="type">TimeInterval</span>(totalSteps) * opt</span><br><span class="line">    <span class="keyword">var</span> prePolyline: <span class="type">MKPolyline?</span></span><br><span class="line"></span><br><span class="line">    drawingTimer = <span class="type">Timer</span>.scheduledTimer(withTimeInterval: stepDrawDur, repeats: <span class="literal">true</span>) &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] timer <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">defer</span> &#123; completion?() &#125;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> <span class="keyword">self</span> = <span class="keyword">self</span> <span class="keyword">else</span> &#123;</span><br><span class="line">            timer.invalidate()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> previous = prePolyline &#123;</span><br><span class="line">            <span class="keyword">self</span>.mapView.removeOverlay(previous)</span><br><span class="line">            prePolyline = <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> currentStep &gt; totalSteps &#123;</span><br><span class="line">            timer.invalidate()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> start = currentStep-delta &lt; <span class="number">0</span> ? <span class="number">0</span> : currentStep-delta</span><br><span class="line">        <span class="keyword">let</span> end = currentStep &gt; route.<span class="built_in">count</span> ? route.<span class="built_in">count</span> : currentStep</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> subCoordinates = <span class="type">Array</span>(route[start..&lt;end])</span><br><span class="line">        <span class="keyword">let</span> currentSegment = <span class="type">MKPolyline</span>(coordinates: subCoordinates, <span class="built_in">count</span>: subCoordinates.<span class="built_in">count</span>)</span><br><span class="line">        <span class="keyword">self</span>.mapView.addOverlay(currentSegment)</span><br><span class="line"></span><br><span class="line">        prePolyline = currentSegment</span><br><span class="line">        currentStep += <span class="type">Int</span>(opt)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Aqui está <a href="https://github.com/leihao0/UberBookingAnimation">repositório</a>, se você tiver uma ideia melhor, por favor me avise :) </p>
<h4 id="Atualizacoes"><a href="#Atualizacoes" class="headerlink" title="Atualizações"></a>Atualizações</h4><p>Bem, uma vez que a taxa de atualização da tela é de 60 fps, ele deve fazer o total de etapas / duração ≈ 60 </p>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>MapKit</tag>
      </tags>
  </entry>
  <entry>
    <title>Como usar o Telegram para responder automaticamente</title>
    <url>/pt/How-to-auto-reply-send-msg-with-telegram/</url>
    <content><![CDATA[<p>Como homem, há muitos motivos para responder em 59 segundos, caso contrário, algo ruim acontecerá. </p>
<p>Felizmente, o Telegram fornece uma API. </p>
<ol>
<li>Obtenha seu token de desenvolvedor <a href="https://my.telegram.org/">aqui</a> em vez do token de bot </li>
<li>Instale o teleton com <code>pip3</code> </li>
<li>RTFM faz py funcionar </li>
</ol>
<a id="more"></a>

<h2 id="Teleton"><a href="#Teleton" class="headerlink" title="Teleton"></a>Teleton</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install -U telethon --user</span><br></pre></td></tr></table></figure>

<p>No Catalina, o <code>import telethon</code> será abortado imediatamente após a importação sem quaisquer outros logs úteis, o que me impediu de resolver o problema durante toda a tarde </p>
<ul>
<li>Tentei usar <code>pyenv</code> para mudar a versão python, mas não funcionou </li>
<li>Execute-o no Ubuntu e funciona </li>
<li>Finalmente encontrado aqui, [Python trava no macOS 10.15](<a href="https://stackoverflow.com/questions/58272830/python-crashing-on-macos-10-15-beta-19a582a-with-usr-lib-libcrypto-">https://stackoverflow.com/questions/58272830/python-crashing-on-macos-10-15-beta-19a582a-with-usr-lib-libcrypto-</a> dylib), <code>OpenSSL</code> está faltando </li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/Cellar/openssl/1.0.2t/lib</span><br><span class="line">sudo cp libssl.1.0.0.dylib libcrypto.1.0.0.dylib /usr/<span class="built_in">local</span>/lib/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/lib</span><br><span class="line">mv libssl.dylib libssl_bak.dylib</span><br><span class="line">mv libcrypto.dylib libcrypto_bak.dylib</span><br><span class="line">sudo ln -s libssl.1.0.0.dylib libssl.dylib</span><br><span class="line">sudo ln -s libcrypto.1.0.0.dylib libcrypto.dylib</span><br></pre></td></tr></table></figure>

<h2 id="Resposta-automatica"><a href="#Resposta-automatica" class="headerlink" title="Resposta automatica"></a>Resposta automatica</h2><p><code>responda a ela. amiga</code> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> telethon <span class="keyword">import</span> TelegramClient, events</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use seus próprios valores em my.telegram.org </span></span><br><span class="line">api_id = <span class="number">123456</span></span><br><span class="line">api_hash = <span class="string">&#x27;xxxx&#x27;</span></span><br><span class="line">phone = <span class="string">&#x27;123456789&#x27;</span></span><br><span class="line"></span><br><span class="line">client = TelegramClient(<span class="string">&#x27;session&#x27;</span>, api_id, api_hash)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">greetings = [<span class="string">&#x27;ok&#x27;</span>, <span class="string">&#x27;cool&#x27;</span>, <span class="string">&#x27;😂&#x27;</span>, <span class="string">&#x27;em&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@client.on(events.NewMessage)</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">handle_new_message</span>(<span class="params">event</span>):</span></span><br><span class="line"></span><br><span class="line">    from_user = <span class="keyword">await</span> event.client.get_entity(event.from_id)</span><br><span class="line">    <span class="keyword">if</span> from_user.phone == phone:</span><br><span class="line">        print(time.asctime(), <span class="string">&#x27;-&#x27;</span>, event.message)</span><br><span class="line">        <span class="comment"># testado em uma garota real, ela descobriu na segunda resposta </span></span><br><span class="line">        <span class="comment"># então escolha aleatoriamente para responder dentro de 5 - 59 segundos </span></span><br><span class="line">        <span class="keyword">await</span> asyncio.sleep(random.randrange(<span class="number">5</span>, <span class="number">59</span>))</span><br><span class="line">        <span class="keyword">if</span> random.choice([<span class="literal">True</span>, <span class="literal">False</span>]):</span><br><span class="line">            i, s = random.randrange(<span class="number">2</span>, <span class="number">5</span>), random.choice(greetings)</span><br><span class="line">            <span class="comment"># digitando de 2 a 5 segundos </span></span><br><span class="line">            <span class="keyword">async</span> <span class="keyword">with</span> client.action(phone, <span class="string">&#x27;typing&#x27;</span>):</span><br><span class="line">                <span class="keyword">await</span> asyncio.sleep(i)</span><br><span class="line">                <span class="keyword">await</span> client.send_message(phone, s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(time.asctime(), <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;Auto-replying...&#x27;</span>)</span><br><span class="line">client.start()</span><br><span class="line">client.run_until_disconnected()</span><br><span class="line">print(time.asctime(), <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;Stopped!&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Mensagem-de-reserva"><a href="#Mensagem-de-reserva" class="headerlink" title="Mensagem de reserva"></a>Mensagem de reserva</h2><p><code>spam ela. amiga</code> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> telethon <span class="keyword">import</span> TelegramClient, events</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">api_id = <span class="number">123456</span></span><br><span class="line">api_hash = <span class="string">&#x27;xxxx&#x27;</span></span><br><span class="line">phone = <span class="string">&#x27;123456789&#x27;</span></span><br><span class="line"></span><br><span class="line">client = TelegramClient(<span class="string">&#x27;session&#x27;</span>, api_id, api_hash)</span><br><span class="line">greetings = [<span class="string">&#x27;Yo!&#x27;</span>, <span class="string">&#x27;Hi&#x27;</span>, <span class="string">&#x27;Hello&#x27;</span>, <span class="string">&#x27;How have you been?&#x27;</span>, <span class="string">&#x27;How are you?&#x27;</span>, <span class="string">&#x27;What\&#x27;s up today?&#x27;</span>, <span class="string">&#x27;How are you doing?&#x27;</span>, <span class="string">&#x27;How\’s it going?&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">asking</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">await</span> client.send_message(phone, s)</span><br><span class="line"></span><br><span class="line">hour = <span class="number">60</span>*<span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">await</span> asking(random.choice(annoyingStrings))</span><br><span class="line">        i = random.randrange(<span class="number">12</span>*hour, <span class="number">24</span>*hour)</span><br><span class="line">        time.sleep(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> client:</span><br><span class="line">    client.loop.run_until_complete(main())</span><br></pre></td></tr></table></figure>

<hr>
<p>Em qualquer caso, a funcionalidade do modelo de lista não é suficiente para fazer a conversa durar mais de 1 minuto </p>
<p><code>Her.msg -&gt; telethon -&gt; AI bot</code><br><code>Seu &lt;- teleton &lt;- bot.msg</code> </p>
<p>Pode ser uma boa solução 🌚🌚🌚 </p>
]]></content>
      <tags>
        <tag>Tech</tag>
        <tag>Auto</tag>
      </tags>
  </entry>
  <entry>
    <title>Curso de Aprendizado Profundo 2</title>
    <url>/pt/Deep-Learning-Course-2/</url>
    <content><![CDATA[<h2 id="Melhorando-Redes-Neurais-Profundas-Ajuste-de-Hiperparametros-Regularizacao-e-Otimizacao"><a href="#Melhorando-Redes-Neurais-Profundas-Ajuste-de-Hiperparametros-Regularizacao-e-Otimizacao" class="headerlink" title="Melhorando Redes Neurais Profundas: Ajuste de Hiperparâmetros, Regularização e Otimização"></a>Melhorando Redes Neurais Profundas: Ajuste de Hiperparâmetros, Regularização e Otimização</h2><h2 id="Semana-1"><a href="#Semana-1" class="headerlink" title="Semana 1"></a>Semana 1</h2><h2 id="Semana-2"><a href="#Semana-2" class="headerlink" title="Semana 2"></a>Semana 2</h2><h3 id="1-Gradiente-de-descida"><a href="#1-Gradiente-de-descida" class="headerlink" title="1 - Gradiente de descida"></a>1 - Gradiente de descida</h3><p><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="min-width: 30.301ex"><svg style="vertical-align: -0.784ex; min-width: 30.301ex" xmlns="http://www.w3.org/2000/svg" width="100%" height="2.7ex" role="img" focusable="false"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0) scale(0.0181) translate(0, -846.7)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078, 0) translate(-2078, 0)"><g transform="translate(0 846.7) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="4618.6 -846.7 1 1193.3"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0, -96.7)"><g data-mml-node="mtd"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2034.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(3090.6, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5069.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(6070.1, 0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mtext" transform="translate(6710.1, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(6960.1, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(7480.1, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -846.7 1 1193.3"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn-1" transform="translate(0, -96.7)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(389, 0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889, 0)"></path></g></g></g></svg></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="min-width: 25.725ex"><svg style="vertical-align: -0.784ex; min-width: 25.725ex" xmlns="http://www.w3.org/2000/svg" width="100%" height="2.7ex" role="img" focusable="false"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0) scale(0.0181) translate(0, -846.7)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078, 0) translate(-2078, 0)"><g transform="translate(0 846.7) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="3607.3 -846.7 1 1193.3"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0, -96.7)"><g data-mml-node="mtd"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="TeXAtom" transform="translate(429, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1360.6, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(2416.4, 0)"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="TeXAtom" transform="translate(429, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3721.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4721.7, 0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mtext" transform="translate(5361.7, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(5611.7, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(6131.7, 0)"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="TeXAtom" transform="translate(429, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -846.7 1 1193.3"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn-2" transform="translate(0, -96.7)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(389, 0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889, 0)"></path></g></g></g></svg></g></g></g></g></svg></mjx-container></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">parameters[<span class="string">"W"</span>+i] = parameters[<span class="string">"W"</span>+i] - learning_rate * grads[<span class="string">'dW'</span>+i]</span><br><span class="line">parameters[<span class="string">"b"</span>+i] = parameters[<span class="string">"b"</span>+i] - learning_rate * grads[<span class="string">'db'</span>+i]</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="2-Descida-do-gradiente-do-mini-lote"><a href="#2-Descida-do-gradiente-do-mini-lote" class="headerlink" title="2 - Descida do gradiente do mini-lote"></a>2 - Descida do gradiente do mini-lote</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="17.124ex" height="4.106ex" role="img" focusable="false" viewBox="0 -1118 7569 1815"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(444, 0)"><g data-mml-node="mi" transform="translate(2901.5, 676)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1223, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1823, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2168, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(2597, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3126, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3487, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(3920, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(4496, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(4965, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5310, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(5775, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="6441" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(7125, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="38.762ex" height="4.106ex" role="img" focusable="false" viewBox="0 -1118 17132.9 1815"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1100.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(2100.4, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2978.4, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3323.4, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3923.4, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4268.4, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(4697.4, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(5226.4, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(5587.4, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(6020.4, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(6596.4, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(7065.4, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(7410.4, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(7875.4, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(8563.7, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mo" transform="translate(9563.9, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(10007.9, 0)"><g data-mml-node="mi" transform="translate(2901.5, 676)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1223, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1823, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2168, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(2597, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3126, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3487, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(3920, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(4496, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(4965, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5310, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(5775, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="6441" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(16688.9, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mini_batch_X = shuffled_X[:, k * mini_batch_size: (k+<span class="number">1</span>) * mini_batch_size]</span><br><span class="line">mini_batch_Y = shuffled_Y[:, k * mini_batch_size: (k+<span class="number">1</span>) * mini_batch_size]</span><br><span class="line"><span class="comment"># ... </span></span><br><span class="line">mini_batch_X = shuffled_X[:, mini_batch_size * num_complete_minibatches]</span><br><span class="line">mini_batch_Y = shuffled_Y[:, mini_batch_size * num_complete_minibatches]</span><br></pre></td></tr></table></figure>

<h3 id="3-Momentum"><a href="#3-Momentum" class="headerlink" title="3 - Momentum"></a>3 - Momentum</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">v[<span class="string">"dW"</span>+i] = np.zeros_like(parameters[<span class="string">'W'</span>+i])</span><br><span class="line">v[<span class="string">"db"</span>+i] = np.zeros_like(parameters[<span class="string">'b'</span>+i])</span><br></pre></td></tr></table></figure>

<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="64.957ex" height="2.7ex" role="img" focusable="false" viewBox="0 -943.3 28711 1193.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2422.9, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mtext" transform="translate(3478.7, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3728.7, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(4157.7, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(4623.7, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(4984.7, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="msub" transform="translate(5513.7, 0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(7881, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(8881.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(9270.3, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(9992.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(10992.7, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(11242.7, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(11671.7, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(12137.7, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(12498.7, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(13027.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(13416.7, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(13936.7, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="msup" transform="translate(15693.8, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(17728.6, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(18784.4, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(20763.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(21763.9, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(22013.9, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(22542.9, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(22840.9, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(23343.9, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(23919.9, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="msub" transform="translate(24448.9, 0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mtext" transform="translate(26594, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(26844, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(27205, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(27734, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(28211, 0)"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container><br>$$</p>
<p>v <span>\</span> * {db ^ {[l]}} = \ beta v <span>\</span> * {db ^ {[l]}} + (1 - \ beta) db ^ {[l]}<br>b ^ {[l]} = b ^ {[l]} - \ alpha v <span>\</span> _ {db ^ {[l]}}<br>\ tag {4} <span>\</span> <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="0.566ex" height="0" role="img" focusable="false" viewBox="0 0 250 0"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="A0" d=""></path></g></g></g></svg></mjx-container> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">v[<span class="string">"dW"</span>+i] = beta * v[<span class="string">"dW"</span>+i] + (<span class="number">1</span> - beta) * grads[<span class="string">'dW'</span>+i]</span><br><span class="line">v[<span class="string">"db"</span>+i] = beta * v[<span class="string">"db"</span>+i] + (<span class="number">1</span> - beta) * grads[<span class="string">'db'</span>+i]</span><br><span class="line"><span class="comment"># parâmetros de atualização </span></span><br><span class="line">parameters[<span class="string">"W"</span>+i] = parameters[<span class="string">"W"</span>+i] - learning_rate * v[<span class="string">"dW"</span>+i]</span><br><span class="line">parameters[<span class="string">"b"</span>+i] = parameters[<span class="string">"b"</span>+i] - learning_rate * v[<span class="string">"db"</span>+i]</span><br></pre></td></tr></table></figure>

<h3 id="4-Adam"><a href="#4-Adam" class="headerlink" title="4 - Adam"></a>4 - Adam</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">v[<span class="string">"dW"</span>+i] = np.zeros_like(parameters[<span class="string">"W"</span>+i])</span><br><span class="line">v[<span class="string">"db"</span>+i] = np.zeros_like(parameters[<span class="string">"b"</span>+i])</span><br><span class="line">s[<span class="string">"dW"</span>+i] = np.zeros_like(parameters[<span class="string">"W"</span>+i])</span><br><span class="line">s[<span class="string">"db"</span>+i] = np.zeros_like(parameters[<span class="string">"b"</span>+i])</span><br></pre></td></tr></table></figure>

<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.813ex" xmlns="http://www.w3.org/2000/svg" width="30.121ex" height="4.96ex" role="img" focusable="false" viewBox="0 -1391 13313.5 2192.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2055.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3111, 0)"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="mn" transform="translate(566, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msub" transform="translate(4080.5, 0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(6080.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(7080.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(7469.4, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8191.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(9191.9, 0)"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="mn" transform="translate(566, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(10161.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mfrac" transform="translate(10550.4, 0)"><g data-mml-node="mrow" transform="translate(782, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -779.3)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g><rect width="2523.1" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p>
<p>$$v^{corrected}<em>{dW^{[l]}} = \frac{v</em>{dW^{[l]}}}{1 - (\beta_1)^t}$$</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.813ex" xmlns="http://www.w3.org/2000/svg" width="34.386ex" height="4.96ex" role="img" focusable="false" viewBox="0 -1391 15198.4 2192.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2406.9, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3462.7, 0)"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="mn" transform="translate(566, -150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="msub" transform="translate(4432.2, 0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(6783.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(7783.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(8172.8, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8895, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(9895.3, 0)"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="mn" transform="translate(566, -150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(10864.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11253.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mfrac" transform="translate(11642.8, 0)"><g data-mml-node="mrow" transform="translate(679, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="4A" d="M148 78Q148 16 189 -17T286 -50Q319 -50 348 -33T396 10T426 59T444 101L471 204Q498 306 521 372Q575 532 649 605L659 614H591Q517 613 494 607Q433 591 400 550T360 477Q353 454 325 437T275 419Q256 419 260 435Q280 523 376 597T583 681Q603 683 713 683H830Q839 674 839 671Q839 654 810 634T754 614Q735 614 721 601Q688 571 654 495T600 351T561 209T541 132Q507 29 412 -45T213 -119Q141 -119 94 -77T47 33Q47 55 50 69T58 90T71 103Q105 131 135 131Q152 131 152 120Q152 119 151 114T149 99T148 78Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(220, -779.3)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g><rect width="2523.1" height="60" x="120" y="220"></rect></g><g data-mml-node="msup" transform="translate(14405.9, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p>$$s^{corrected}<em>{dW^{[l]}} = \frac{s</em>{dW^{[l]}}}{1 - (\beta_2)^t}$$</p>
<p>$$W^{[l]} = W^{[l]} - \alpha \frac{v^{corrected}<em>{dW^{[l]}}}{\sqrt{s^{corrected}</em>{dW^{[l]}}} + \varepsilon}$$</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">v[<span class="string">"dW"</span>+i] = beta1 * v[<span class="string">"dW"</span>+i] + (<span class="number">1</span> - beta1) * grads[<span class="string">'dW'</span>+i]</span><br><span class="line">v[<span class="string">"db"</span>+i] = beta1 * v[<span class="string">"db"</span>+i] + (<span class="number">1</span> - beta1) * grads[<span class="string">'db'</span>+i]</span><br><span class="line"></span><br><span class="line">v_corrected[<span class="string">"dW"</span>+i] = v[<span class="string">"dW"</span>+i] / (<span class="number">1</span> - beta1**t)</span><br><span class="line">v_corrected[<span class="string">"db"</span>+i] = v[<span class="string">"db"</span>+i] / (<span class="number">1</span> - beta1**t)</span><br><span class="line"></span><br><span class="line">s[<span class="string">"dW"</span>+i] = beta2 * s[<span class="string">"dW"</span>+i] + (<span class="number">1</span> - beta2) * (grads[<span class="string">'dW'</span>+i])**<span class="number">2</span></span><br><span class="line">s[<span class="string">"db"</span>+i] = beta2 * s[<span class="string">"db"</span>+i] + (<span class="number">1</span> - beta2) * (grads[<span class="string">'db'</span>+i])**<span class="number">2</span></span><br><span class="line"></span><br><span class="line">s_corrected[<span class="string">"dW"</span>+i] = s[<span class="string">"dW"</span>+i] / (<span class="number">1</span> - beta2**t)</span><br><span class="line">s_corrected[<span class="string">"db"</span>+i] = s[<span class="string">"db"</span>+i] / (<span class="number">1</span> - beta2**t)</span><br><span class="line"></span><br><span class="line">parameters[<span class="string">"W"</span>+i] = parameters[<span class="string">"W"</span>+i] - learning_rate * (v_corrected[<span class="string">"dW"</span>+i] / (np.sqrt(s_corrected[<span class="string">"dW"</span>+i]) + epsilon))</span><br><span class="line">parameters[<span class="string">"b"</span>+i] = parameters[<span class="string">"b"</span>+i] - learning_rate * (v_corrected[<span class="string">"db"</span>+i] / (np.sqrt(s_corrected[<span class="string">"db"</span>+i]) + epsilon))</span><br></pre></td></tr></table></figure>

<h2 id="Semana-3"><a href="#Semana-3" class="headerlink" title="Semana 3"></a>Semana 3</h2><h3 id="1-1-Funcao-linear"><a href="#1-1-Funcao-linear" class="headerlink" title="1.1 - Função linear"></a>1.1 - Função linear</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X = np.random.randn(<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line">W = np.random.randn(<span class="number">4</span>,<span class="number">3</span>)</span><br><span class="line">b = np.random.randn(<span class="number">4</span>,<span class="number">1</span>)</span><br><span class="line">Y = tf.add(tf.matmul(W, X), b)</span><br><span class="line"></span><br><span class="line">sess = tf.Session()</span><br><span class="line">result = sess.run(Y)</span><br></pre></td></tr></table></figure>

<h3 id="1-2-Calculando-o-sigmoide"><a href="#1-2-Calculando-o-sigmoide" class="headerlink" title="1.2 - Calculando o sigmóide"></a>1.2 - Calculando o sigmóide</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = tf.placeholder(tf.float32, name = <span class="string">"x"</span>)</span><br><span class="line">sigmoid = tf.sigmoid(x)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    result = sess.run(sigmoid, feed_dict = {x: z})</span><br></pre></td></tr></table></figure>

<h3 id="1-3-Calculando-o-Custo"><a href="#1-3-Calculando-o-Custo" class="headerlink" title="1.3 - Calculando o Custo"></a>1.3 - Calculando o Custo</h3><p>$$ J = - \frac{1}{m}  \sum_{i = 1}^m  \large ( \small y^{(i)} \log a^{ <a href="i">2</a>} + (1-y^{(i)})\log (1-a^{ <a href="i">2</a>} )\large )\small\tag{2}$$</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">z = tf.placeholder(tf.float32, name=<span class="string">'z'</span>)</span><br><span class="line">y = tf.placeholder(tf.float32, name=<span class="string">'y'</span>)</span><br><span class="line"></span><br><span class="line">cost = tf.nn.sigmoid_cross_entropy_with_logits(logits = z,  labels = y)</span><br><span class="line"></span><br><span class="line">sess = tf.Session()</span><br><span class="line">cost = sess.run(cost, feed_dict = {z: logits, y: labels})</span><br><span class="line">sess.close()</span><br></pre></td></tr></table></figure>

<h3 id="1-4-Usando-codificacoes-One-Hot"><a href="#1-4-Usando-codificacoes-One-Hot" class="headerlink" title="1.4 - Usando codificações One Hot"></a>1.4 - Usando codificações One Hot</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C = tf.constant(C)</span><br><span class="line">one_hot_matrix = tf.one_hot(labels, C, axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">sess = tf.Session()</span><br><span class="line">one_hot = sess.run(one_hot_matrix)</span><br><span class="line">sess.close()</span><br></pre></td></tr></table></figure>

<h3 id="1-5-Inicialize-com-zeros-e-uns"><a href="#1-5-Inicialize-com-zeros-e-uns" class="headerlink" title="1.5 - Inicialize com zeros e uns"></a>1.5 - Inicialize com zeros e uns</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ones = tf.ones(shape)</span><br><span class="line"></span><br><span class="line">sess = tf.Session()</span><br><span class="line">ones = sess.run(ones)</span><br><span class="line">sess.close()</span><br></pre></td></tr></table></figure>

<h3 id="2-1-Criar-marcadores"><a href="#2-1-Criar-marcadores" class="headerlink" title="2.1 - Criar marcadores"></a>2.1 - Criar marcadores</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X = tf.placeholder(tf.float32, [n_x, <span class="literal">None</span>])</span><br><span class="line">Y = tf.placeholder(tf.float32, [n_y, <span class="literal">None</span>])</span><br></pre></td></tr></table></figure>

<h3 id="2-2-Inicializando-os-parametros"><a href="#2-2-Inicializando-os-parametros" class="headerlink" title="2.2 - Inicializando os parâmetros"></a>2.2 - Inicializando os parâmetros</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">W1 = tf.get_variable(<span class="string">"W1"</span>, [<span class="number">25</span>,<span class="number">12288</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">1</span>))</span><br><span class="line">b1 = tf.get_variable(<span class="string">"b1"</span>, [<span class="number">25</span>,<span class="number">1</span>], initializer = tf.zeros_initializer())</span><br><span class="line">W2 = tf.get_variable(<span class="string">"W2"</span>, [<span class="number">12</span>,<span class="number">25</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">1</span>))</span><br><span class="line">b2 = tf.get_variable(<span class="string">"b2"</span>, [<span class="number">12</span>,<span class="number">1</span>], initializer = tf.zeros_initializer())</span><br><span class="line">W3 = tf.get_variable(<span class="string">"W3"</span>, [<span class="number">6</span>,<span class="number">12</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">1</span>))</span><br><span class="line">b3 = tf.get_variable(<span class="string">"b3"</span>, [<span class="number">6</span>,<span class="number">1</span>], initializer = tf.zeros_initializer())</span><br></pre></td></tr></table></figure>

<h3 id="2-3-Propagacao-direta-em-tensorflow"><a href="#2-3-Propagacao-direta-em-tensorflow" class="headerlink" title="2.3 - Propagação direta em tensorflow"></a>2.3 - Propagação direta em tensorflow</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Z1 = tf.matmul(W1, X) + b1</span><br><span class="line">A1 = tf.nn.relu(Z1)</span><br><span class="line">Z2 = tf.matmul(W2, A1) + b2</span><br><span class="line">A2 = tf.nn.relu(Z2)</span><br><span class="line">Z3 = tf.matmul(W3, A2) + b3</span><br></pre></td></tr></table></figure>

<h3 id="2-4-Custo-de-computacao"><a href="#2-4-Custo-de-computacao" class="headerlink" title="2.4 Custo de computação"></a>2.4 Custo de computação</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cost = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits = logits, labels = labels))</span><br></pre></td></tr></table></figure>

<h3 id="2-5-Propagacao-para-tras-e-atualizacoes-de-parametros"><a href="#2-5-Propagacao-para-tras-e-atualizacoes-de-parametros" class="headerlink" title="2.5 - Propagação para trás e atualizações de parâmetros"></a>2.5 - Propagação para trás e atualizações de parâmetros</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X, Y = create_placeholders(n_x, n_y)</span><br><span class="line">parameters = initialize_parameters()</span><br><span class="line">Z3 = forward_propagation(X, parameters)</span><br><span class="line">cost = compute_cost(Z3, Y)</span><br><span class="line">optimizer = tf.train.AdamOptimizer(learning_rate = learning_rate).minimize(cost)</span><br><span class="line"><span class="comment"># ... </span></span><br><span class="line">_ , minibatch_cost = sess.run([optimizer, cost], feed_dict={X: minibatch_X, Y: minibatch_Y})</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Curso de Aprendizado Profundo 4</title>
    <url>/pt/Deep-Learning-Course-4/</url>
    <content><![CDATA[<h2 id="Semana-1-Redes-Neurais-Convolucionais"><a href="#Semana-1-Redes-Neurais-Convolucionais" class="headerlink" title="Semana 1 - Redes Neurais Convolucionais"></a>Semana 1 - Redes Neurais Convolucionais</h2><h2 id="Passo-a-passo"><a href="#Passo-a-passo" class="headerlink" title="Passo a passo"></a>Passo a passo</h2><h3 id="3-1-Zero-Padding"><a href="#3-1-Zero-Padding" class="headerlink" title="3.1 - Zero-Padding"></a>3.1 - Zero-Padding</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X_pad = np.pad(X, ((<span class="number">0</span>, <span class="number">0</span>), (pad, pad), (pad, pad), (<span class="number">0</span>,<span class="number">0</span>)), mode=<span class="string">'constant'</span>, constant_values = (<span class="number">0</span>,<span class="number">0</span>))</span><br></pre></td></tr></table></figure>

<h3 id="3-2-Etapa-unica-de-convolucao"><a href="#3-2-Etapa-unica-de-convolucao" class="headerlink" title="3.2 - Etapa única de convolução"></a>3.2 - Etapa única de convolução</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">s = a_slice_prev * W</span><br><span class="line">Z = np.sum(s)</span><br><span class="line">Z = Z + np.sum(b)</span><br></pre></td></tr></table></figure>

<h3 id="3-3-Redes-Neurais-Convolucionais-Passe-para-frente"><a href="#3-3-Redes-Neurais-Convolucionais-Passe-para-frente" class="headerlink" title="3.3 - Redes Neurais Convolucionais - Passe para frente"></a>3.3 - Redes Neurais Convolucionais - Passe para frente</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="32.029ex" height="5.011ex" role="img" focusable="false" viewBox="0 -1518.1 14156.7 2215.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g><g data-mml-node="mo" transform="translate(1555.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2611.5, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(3055.5, 0)"><g data-mml-node="mrow" transform="translate(220, 813.1)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="TeXAtom" transform="translate(831, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2447.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3447.9, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4220.1, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(5220.3, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(5942.6, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(6942.8, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(7445.8, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(7974.8, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mrow" transform="translate(3161.4, -686)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1281, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1626, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2146, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="8694.8" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(11990.3, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g><g data-mml-node="mo" transform="translate(12656.5, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(13656.7, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="32.465ex" height="5.011ex" role="img" focusable="false" viewBox="0 -1518.1 14349.7 2215.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g></g><g data-mml-node="mo" transform="translate(1668.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2724.6, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(3168.6, 0)"><g data-mml-node="mrow" transform="translate(220, 813.1)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(944, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2527.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3527.8, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4300, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(5300.3, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(6022.5, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(7022.7, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(7525.7, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(8054.7, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mrow" transform="translate(3201.3, -686)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1281, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1626, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2146, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="8774.7" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(12183.3, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g><g data-mml-node="mo" transform="translate(12849.5, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(13849.7, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="45.029ex" height="1.97ex" role="img" focusable="false" viewBox="0 -705 19903 870.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g></g><g data-mml-node="mo" transform="translate(1465.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mtext" transform="translate(2521, 0)"><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(556, 0)"></path><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1112, 0)"></path><path data-c="62" d="M307 -11Q234 -11 168 55L158 37Q156 34 153 28T147 17T143 10L138 1L118 0H98V298Q98 599 97 603Q94 622 83 628T38 637H20V660Q20 683 22 683L32 684Q42 685 61 686T98 688Q115 689 135 690T165 693T176 694H179V543Q179 391 180 391L183 394Q186 397 192 401T207 411T228 421T254 431T286 439T323 442Q401 442 461 379T522 216Q522 115 458 52T307 -11ZM182 98Q182 97 187 90T196 79T206 67T218 55T233 44T250 35T271 29T295 26Q330 26 363 46T412 113Q424 148 424 212Q424 287 412 323Q385 405 300 405Q270 405 239 390T188 347L182 339V98Z" transform="translate(1945, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(2501, 0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(2945, 0)"></path><path data-c="20" d="" transform="translate(3337, 0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(3587, 0)"></path><path data-c="66" d="M273 0Q255 3 146 3Q43 3 34 0H26V46H42Q70 46 91 49Q99 52 103 60Q104 62 104 224V385H33V431H104V497L105 564L107 574Q126 639 171 668T266 704Q267 704 275 704T289 705Q330 702 351 679T372 627Q372 604 358 590T321 576T284 590T270 627Q270 647 288 667H284Q280 668 273 668Q245 668 223 647T189 592Q183 572 182 497V431H293V385H185V225Q185 63 186 61T189 57T194 54T199 51T206 49T213 48T222 47T231 47T241 46T251 46H282V0H273Z" transform="translate(4087, 0)"></path><path data-c="20" d="" transform="translate(4393, 0)"></path><path data-c="66" d="M273 0Q255 3 146 3Q43 3 34 0H26V46H42Q70 46 91 49Q99 52 103 60Q104 62 104 224V385H33V431H104V497L105 564L107 574Q126 639 171 668T266 704Q267 704 275 704T289 705Q330 702 351 679T372 627Q372 604 358 590T321 576T284 590T270 627Q270 647 288 667H284Q280 668 273 668Q245 668 223 647T189 592Q183 572 182 497V431H293V385H185V225Q185 63 186 61T189 57T194 54T199 51T206 49T213 48T222 47T231 47T241 46T251 46H282V0H273Z" transform="translate(4643, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(4949, 0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(5227, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(5505, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(5894, 0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(6338, 0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(6730, 0)"></path><path data-c="20" d="" transform="translate(7124, 0)"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(7374, 0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(7930, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(8324, 0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(8768, 0)"></path><path data-c="20" d="" transform="translate(9324, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(9574, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(9852, 0)"></path><path data-c="20" d="" transform="translate(10408, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(10658, 0)"></path><path data-c="68" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 124T102 167T103 217T103 272T103 329Q103 366 103 407T103 482T102 542T102 586T102 603Q99 622 88 628T43 637H25V660Q25 683 27 683L37 684Q47 685 66 686T103 688Q120 689 140 690T170 693T181 694H184V367Q244 442 328 442Q451 442 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(11047, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(11603, 0)"></path><path data-c="20" d="" transform="translate(12047, 0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(12297, 0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(12741, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(13241, 0)"></path><path data-c="76" d="M338 431Q344 429 422 429Q479 429 503 431H508V385H497Q439 381 423 345Q421 341 356 172T288 -2Q283 -11 263 -11Q244 -11 239 -2Q99 359 98 364Q93 378 82 381T43 385H19V431H25L33 430Q41 430 53 430T79 430T104 429T122 428Q217 428 232 431H240V385H226Q187 384 184 370Q184 366 235 234L286 102L377 341V349Q377 363 367 372T349 383T335 385H331V431H338Z" transform="translate(13797, 0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(14325, 0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(14825, 0)"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(15103, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(15659, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(16048, 0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(16326, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(16826, 0)"></path></g></g></g></svg></mjx-container></p>
<a id="more"></a>

<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">(m, n_H_prev, n_W_prev, n_C_prev) = A_prev.shape</span><br><span class="line">(f, f, n_C_prev, n_C) = W.shape</span><br><span class="line"></span><br><span class="line">stride = hparameters[<span class="string">"stride"</span>]</span><br><span class="line">pad = hparameters[<span class="string">"pad"</span>]</span><br><span class="line"></span><br><span class="line">n_H = int((n_H_prev - f + <span class="number">2</span> * pad) / stride) + <span class="number">1</span></span><br><span class="line">n_W = int((n_W_prev - f + <span class="number">2</span> * pad) / stride) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">Z = np.zeros((m, n_H, n_W, n_C))</span><br><span class="line"></span><br><span class="line">A_prev_pad = zero_pad(A_prev, pad)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line">    a_prev_pad = A_prev_pad[i]</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(n_H):</span><br><span class="line">        vert_start = h * stride</span><br><span class="line">        vert_end = vert_start + f</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> range(n_W):</span><br><span class="line">            horiz_start = w * stride</span><br><span class="line">            horiz_end = horiz_start + f</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(n_C):</span><br><span class="line">                a_slice_prev = a_prev_pad[vert_start:vert_end, horiz_start:horiz_end, :]</span><br><span class="line"></span><br><span class="line">                weights = W[:, :, :, c]</span><br><span class="line">                biases = b[:, :, :, c]</span><br><span class="line">                Z[i, h, w, c] =  conv_single_step(a_slice_prev, weights, biases)</span><br></pre></td></tr></table></figure>

<h3 id="4-1-Forward-Pooling"><a href="#4-1-Forward-Pooling" class="headerlink" title="4.1 - Forward Pooling"></a>4.1 - Forward Pooling</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="21.855ex" height="5.011ex" role="img" focusable="false" viewBox="0 -1518.1 9659.8 2215.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g><g data-mml-node="mo" transform="translate(1555.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2611.5, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(3055.5, 0)"><g data-mml-node="mrow" transform="translate(220, 813.1)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="TeXAtom" transform="translate(831, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2447.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3447.9, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g><g data-mml-node="mrow" transform="translate(913, -686)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1281, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1626, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2146, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="4197.9" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(7493.4, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g><g data-mml-node="mo" transform="translate(8159.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(9159.8, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="22.292ex" height="5.011ex" role="img" focusable="false" viewBox="0 -1518.1 9852.9 2215.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g></g><g data-mml-node="mo" transform="translate(1668.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2724.6, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(3168.6, 0)"><g data-mml-node="mrow" transform="translate(220, 813.1)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(944, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2527.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3527.8, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g><g data-mml-node="mrow" transform="translate(952.9, -686)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1281, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1626, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2146, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="4277.8" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(7686.4, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g><g data-mml-node="mo" transform="translate(8352.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(9352.9, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.799ex" xmlns="http://www.w3.org/2000/svg" width="10.553ex" height="2.118ex" role="img" focusable="false" viewBox="0 -583 4664.4 936.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g></g><g data-mml-node="mo" transform="translate(1465.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(2521, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(715, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g></g></g></svg></mjx-container></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(n_H):</span><br><span class="line">        vert_start = h * stride</span><br><span class="line">        vert_end = vert_start + f</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> range(n_W):</span><br><span class="line">            horiz_start = w * stride</span><br><span class="line">            horiz_end = horiz_start + f</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range (n_C):</span><br><span class="line">                a_prev_slice = A_prev[i, vert_start:vert_end, horiz_start:horiz_end, c]</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> mode == <span class="string">"max"</span>:</span><br><span class="line">                    A[i, h, w, c] = np.max(a_prev_slice)</span><br><span class="line">                <span class="keyword">elif</span> mode == <span class="string">"average"</span>:</span><br><span class="line">                    A[i, h, w, c] = np.mean(a_prev_slice)</span><br></pre></td></tr></table></figure>

<h3 id="5-2-Camada-de-pool-passagem-para-tras"><a href="#5-2-Camada-de-pool-passagem-para-tras" class="headerlink" title="5.2 Camada de pool - passagem para trás"></a>5.2 Camada de pool - passagem para trás</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">mask = np.max(x) == x</span><br></pre></td></tr></table></figure>

<h3 id="5-2-2-Pooling-medio-passe-para-tras"><a href="#5-2-2-Pooling-medio-passe-para-tras" class="headerlink" title="5.2.2 - Pooling médio - passe para trás"></a>5.2.2 - Pooling médio - passe para trás</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">(n_H, n_W) = shape</span><br><span class="line">average = dz / (n_H * n_W)</span><br><span class="line">a = np.ones(shape) * average</span><br></pre></td></tr></table></figure>

<h3 id="5-2-3-Juntando-Pooling-backward"><a href="#5-2-3-Juntando-Pooling-backward" class="headerlink" title="5.2.3 Juntando: Pooling backward"></a>5.2.3 Juntando: Pooling backward</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">(A_prev, hparameters) = cache</span><br><span class="line"></span><br><span class="line">stride = hparameters[<span class="string">"stride"</span>]</span><br><span class="line">f = hparameters[<span class="string">"f"</span>]</span><br><span class="line"></span><br><span class="line">m, n_H_prev, n_W_prev, n_C_prev = A_prev.shape</span><br><span class="line">m, n_H, n_W, n_C = dA.shape</span><br><span class="line"></span><br><span class="line">dA_prev = np.zeros(A_prev.shape)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line"></span><br><span class="line">    a_prev = A_prev[i]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(n_H):</span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> range(n_W):</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(n_C):</span><br><span class="line"></span><br><span class="line">                vert_start = h * stride</span><br><span class="line">                vert_end = vert_start + f</span><br><span class="line">                horiz_start = w * stride</span><br><span class="line">                horiz_end = horiz_start + f</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> mode == <span class="string">"max"</span>:</span><br><span class="line">                    a_prev_slice = a_prev[vert_start:vert_end, horiz_start:horiz_end, c]</span><br><span class="line">                    mask = create_mask_from_window(a_prev_slice)</span><br><span class="line"></span><br><span class="line">                    dA_prev[i, vert_start: vert_end, horiz_start: horiz_end, c] += (dA[i, h, w, c] * mask)</span><br><span class="line">                <span class="keyword">elif</span> mode == <span class="string">"average"</span>:</span><br><span class="line">                    da = dA[i, h, w, c]</span><br><span class="line">                    shape = (f, f)</span><br><span class="line">                    dA_prev[i, vert_start: vert_end, horiz_start: horiz_end, c] += distribute_value(da, shape)</span><br></pre></td></tr></table></figure>

<h2 id="Inscricao"><a href="#Inscricao" class="headerlink" title="Inscrição"></a>Inscrição</h2><h3 id="1-1-Criar-marcadores-de-posicao"><a href="#1-1-Criar-marcadores-de-posicao" class="headerlink" title="1.1 - Criar marcadores de posição"></a>1.1 - Criar marcadores de posição</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = tf.placeholder(tf.float32, shape=[<span class="literal">None</span>, n_H0, n_W0, n_C0])</span><br><span class="line">Y =  tf.placeholder(tf.float32, shape=[<span class="literal">None</span>, n_y])</span><br></pre></td></tr></table></figure>

<h3 id="1-2-Parametros-de-inicializacao"><a href="#1-2-Parametros-de-inicializacao" class="headerlink" title="1.2 - Parâmetros de inicialização"></a>1.2 - Parâmetros de inicialização</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">W1 = tf.get_variable(<span class="string">"W1"</span>, [<span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">0</span>))</span><br><span class="line">W2 = tf.get_variable(<span class="string">"W2"</span>, [<span class="number">2</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">16</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">0</span>))</span><br></pre></td></tr></table></figure>

<h3 id="1-3-Propagacao-direta"><a href="#1-3-Propagacao-direta" class="headerlink" title="1.3 - Propagação direta"></a>1.3 - Propagação direta</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">Z1 = tf.nn.conv2d(X, W1, strides = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>], padding = <span class="string">'SAME'</span>)</span><br><span class="line">A1 = tf.nn.relu(Z1)</span><br><span class="line">P1 = tf.nn.max_pool(A1, ksize = [<span class="number">1</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">1</span>], strides = [<span class="number">1</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">1</span>], padding = <span class="string">'SAME'</span>)</span><br><span class="line">Z2 = tf.nn.conv2d(P1, W2, strides = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>], padding = <span class="string">'SAME'</span>)</span><br><span class="line">A2 = tf.nn.relu(Z2)</span><br><span class="line">P2 = tf.nn.max_pool(A2, ksize = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>], strides = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>], padding = <span class="string">'SAME'</span>)</span><br><span class="line">F = tf.contrib.layers.flatten(P2)</span><br><span class="line">Z3 = tf.contrib.layers.fully_connected(F, <span class="number">6</span>, activation_fn=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>

<h3 id="1-4-Custo-de-computacao"><a href="#1-4-Custo-de-computacao" class="headerlink" title="1.4 - Custo de computação"></a>1.4 - Custo de computação</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">cost = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits = Z3, labels = Y))</span><br></pre></td></tr></table></figure>

<h3 id="1-5-Modelo"><a href="#1-5-Modelo" class="headerlink" title="1.5 Modelo"></a>1.5 Modelo</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X, Y = create_placeholders(n_H0, n_W0, n_C0, n_y)</span><br><span class="line">parameters = initialize_parameters()</span><br><span class="line">Z3 = forward_propagation(X, parameters)</span><br><span class="line">cost = compute_cost(Z3, Y)</span><br><span class="line">optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(cost)</span><br><span class="line"><span class="comment">### ... </span></span><br><span class="line">    _ , temp_cost = sess.run([optimizer, cost], feed_dict={X: minibatch_X, Y: minibatch_Y})</span><br></pre></td></tr></table></figure>

<h2 id="Semana-2-Redes-Residuais"><a href="#Semana-2-Redes-Residuais" class="headerlink" title="Semana 2 - Redes Residuais"></a>Semana 2 - Redes Residuais</h2><h3 id="2-1-O-bloco-de-identidade"><a href="#2-1-O-bloco-de-identidade" class="headerlink" title="2.1 - O bloco de identidade"></a>2.1 - O bloco de identidade</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = Conv2D(filters = F2, kernel_size = (f, f), strides = (<span class="number">1</span>,<span class="number">1</span>), padding = <span class="string">'same'</span>, name = conv_name_base + <span class="string">'2b'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X)</span><br><span class="line">X = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'2b'</span>)(X)</span><br><span class="line">X = Activation(<span class="string">'relu'</span>)(X)</span><br><span class="line"></span><br><span class="line">X = Conv2D(filters = F3, kernel_size = (<span class="number">1</span>, <span class="number">1</span>), strides = (<span class="number">1</span>,<span class="number">1</span>), padding = <span class="string">'valid'</span>, name = conv_name_base + <span class="string">'2c'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X)</span><br><span class="line">X = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'2c'</span>)(X)</span><br><span class="line"></span><br><span class="line">X = layers.Add()([X, X_shortcut])</span><br><span class="line">X = Activation(<span class="string">'relu'</span>)(X)</span><br></pre></td></tr></table></figure>

<h3 id="2-2-O-bloqueio-convolucional"><a href="#2-2-O-bloqueio-convolucional" class="headerlink" title="2.2 - O bloqueio convolucional"></a>2.2 - O bloqueio convolucional</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = Conv2D(F2, (f, f), strides = (<span class="number">1</span>,<span class="number">1</span>), padding = <span class="string">'same'</span>, name = conv_name_base + <span class="string">'2b'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X)</span><br><span class="line">X = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'2b'</span>)(X)</span><br><span class="line">X = Activation(<span class="string">'relu'</span>)(X)</span><br><span class="line"></span><br><span class="line">X = Conv2D(F3, (<span class="number">1</span>, <span class="number">1</span>), strides = (<span class="number">1</span>,<span class="number">1</span>), name = conv_name_base + <span class="string">'2c'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X)</span><br><span class="line">X = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'2c'</span>)(X)</span><br><span class="line"></span><br><span class="line">X_shortcut = Conv2D(F3, (<span class="number">1</span>, <span class="number">1</span>), strides = (s,s), name = conv_name_base + <span class="string">'1'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X_shortcut)</span><br><span class="line">X_shortcut = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'1'</span>)(X_shortcut)</span><br><span class="line"></span><br><span class="line">X = layers.Add()([X, X_shortcut])</span><br><span class="line">X = Activation(<span class="string">'relu'</span>)(X)</span><br></pre></td></tr></table></figure>

<h3 id="3-Construindo-seu-primeiro-modelo-ResNet-50-camadas"><a href="#3-Construindo-seu-primeiro-modelo-ResNet-50-camadas" class="headerlink" title="3 - Construindo seu primeiro modelo ResNet (50 camadas)"></a>3 - Construindo seu primeiro modelo ResNet (50 camadas)</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = convolutional_block(X, f = <span class="number">3</span>, filters = [<span class="number">128</span>, <span class="number">128</span>, <span class="number">512</span>], stage = <span class="number">3</span>, block=<span class="string">'a'</span>, s = <span class="number">2</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">128</span>, <span class="number">128</span>, <span class="number">512</span>], stage=<span class="number">3</span>, block=<span class="string">'b'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">128</span>, <span class="number">128</span>, <span class="number">512</span>], stage=<span class="number">3</span>, block=<span class="string">'c'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">128</span>, <span class="number">128</span>, <span class="number">512</span>], stage=<span class="number">3</span>, block=<span class="string">'d'</span>)</span><br><span class="line"></span><br><span class="line">X = convolutional_block(X, f = <span class="number">3</span>, filters = [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage = <span class="number">4</span>, block=<span class="string">'a'</span>, s = <span class="number">2</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'b'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'c'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'d'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'e'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'f'</span>)</span><br><span class="line"></span><br><span class="line">X = convolutional_block(X, f = <span class="number">3</span>, filters = [<span class="number">512</span>, <span class="number">512</span>, <span class="number">2048</span>], stage = <span class="number">5</span>, block=<span class="string">'a'</span>, s = <span class="number">2</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">512</span>, <span class="number">512</span>, <span class="number">2048</span>], stage=<span class="number">5</span>, block=<span class="string">'b'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">512</span>, <span class="number">512</span>, <span class="number">2048</span>], stage=<span class="number">5</span>, block=<span class="string">'c'</span>)</span><br><span class="line"></span><br><span class="line">X = AveragePooling2D((<span class="number">2</span>,<span class="number">2</span>), name=<span class="string">'avg_pool'</span>)(X)</span><br></pre></td></tr></table></figure>

<h2 id="Semana-3-direcao-autonoma-deteccao-de-carro"><a href="#Semana-3-direcao-autonoma-deteccao-de-carro" class="headerlink" title="Semana 3 - direção autônoma - detecção de carro"></a>Semana 3 - direção autônoma - detecção de carro</h2><h3 id="2-1-Detalhes-do-modelo"><a href="#2-1-Detalhes-do-modelo" class="headerlink" title="2.1 - Detalhes do modelo"></a>2.1 - Detalhes do modelo</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">box_scores = np.multiply(box_confidence, box_class_probs)</span><br><span class="line"></span><br><span class="line">box_classes = K.argmax(box_scores, axis=<span class="number">-1</span>)</span><br><span class="line">box_class_scores = K.max(box_scores, axis=<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">filtering_mask = K.greater_equal(box_class_scores, threshold)</span><br><span class="line"></span><br><span class="line">scores = tf.boolean_mask(box_class_scores, filtering_mask)</span><br><span class="line">boxes = tf.boolean_mask(boxes, filtering_mask)</span><br><span class="line">classes = tf.boolean_mask(box_classes, filtering_mask)</span><br></pre></td></tr></table></figure>

<h3 id="2-3-Supressao-nao-maxima"><a href="#2-3-Supressao-nao-maxima" class="headerlink" title="2.3 - Supressão não máxima"></a>2.3 - Supressão não máxima</h3><h4 id="virus"><a href="#virus" class="headerlink" title="vírus"></a>vírus</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">xi1 = max(box1_x1, box2_x1)</span><br><span class="line">yi1 = max(box1_y1, box2_y1)</span><br><span class="line">xi2 = min(box1_x2, box2_x2)</span><br><span class="line">yi2 = min(box1_y2, box2_y2)</span><br><span class="line">inter_width = xi2 - xi1</span><br><span class="line">inter_height = yi2 - yi1</span><br><span class="line">inter_area = max(inter_width, <span class="number">0</span>) * max(inter_height, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">box1_area = (box1_y2 - box1_y1) * (box1_x2 - box1_x1)</span><br><span class="line">box2_area = (box2_y2 - box2_y1) * (box2_x2 - box2_x1)</span><br><span class="line">union_area = (box1_area + box2_area) - inter_area</span><br><span class="line"></span><br><span class="line">iou = inter_area / union_area</span><br></pre></td></tr></table></figure>

<h4 id="yolo-non-max-suppression"><a href="#yolo-non-max-suppression" class="headerlink" title="yolo_non_max_suppression"></a>yolo_non_max_suppression</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">nms_indices = tf.image.non_max_suppression(boxes, scores, max_boxes_tensor, iou_threshold=iou_threshold)</span><br><span class="line"></span><br><span class="line">scores = K.gather(scores, nms_indices)</span><br><span class="line">boxes = K.gather(boxes, nms_indices)</span><br><span class="line">classes = K.gather(classes, nms_indices)</span><br></pre></td></tr></table></figure>

<h3 id="2-4-Resumindo-a-filtragem"><a href="#2-4-Resumindo-a-filtragem" class="headerlink" title="2.4 Resumindo a filtragem"></a>2.4 Resumindo a filtragem</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">box_confidence, box_xy, box_wh, box_class_probs = yolo_outputs</span><br><span class="line"></span><br><span class="line">boxes = yolo_boxes_to_corners(box_xy, box_wh)</span><br><span class="line"></span><br><span class="line">scores, boxes, classes = yolo_filter_boxes(box_confidence, boxes, box_class_probs, threshold = score_threshold)</span><br><span class="line"></span><br><span class="line">boxes = scale_boxes(boxes, image_shape)</span><br><span class="line"></span><br><span class="line">scores, boxes, classes = yolo_non_max_suppression(scores, boxes, classes, max_boxes = max_boxes, iou_threshold = iou_threshold)</span><br></pre></td></tr></table></figure>

<h3 id="3-5-Execute-o-grafico-em-uma-imagem"><a href="#3-5-Execute-o-grafico-em-uma-imagem" class="headerlink" title="3.5 - Execute o gráfico em uma imagem"></a>3.5 - Execute o gráfico em uma imagem</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">out_scores, out_boxes, out_classes = sess.run([scores, boxes, classes], feed_dict={yolo_model.input: image_data, K.learning_phase(): <span class="number">0</span>})</span><br></pre></td></tr></table></figure>

<h2 id="Semana-4"><a href="#Semana-4" class="headerlink" title="Semana 4"></a>Semana 4</h2><h3 id="Aprendizado-profundo-e-arte-transferencia-de-estilo-neural"><a href="#Aprendizado-profundo-e-arte-transferencia-de-estilo-neural" class="headerlink" title="Aprendizado profundo e arte: transferência de estilo neural"></a>Aprendizado profundo e arte: transferência de estilo neural</h3><h4 id="3-1-Calculando-o-custo-do-conteudo"><a href="#3-1-Calculando-o-custo-do-conteudo" class="headerlink" title="3.1 - Calculando o custo do conteúdo"></a>3.1 - Calculando o custo do conteúdo</h4><p><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="min-width: 64.612ex"><svg style="vertical-align: -2.328ex; min-width: 64.612ex" xmlns="http://www.w3.org/2000/svg" width="100%" height="5.786ex" role="img" focusable="false"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0) scale(0.0181) translate(0, -1528.8)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078, 0) translate(-2078, 0)"><g transform="translate(0 1528.8) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="12201.3 -1528.8 1 2557.5"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0, 186.8)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="TeXAtom" transform="translate(555, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(918, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1518, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(1879, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2345, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2945, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2942.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3331.7, 0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(4091.7, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4536.4, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(5322.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5989.1, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(7044.9, 0)"><g data-mml-node="mn" transform="translate(3981.8, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(722.2, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msub" transform="translate(1722.4, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g><g data-mml-node="mo" transform="translate(3222.6, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msub" transform="translate(4222.8, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g></g><g data-mml-node="mo" transform="translate(5836.1, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msub" transform="translate(6836.3, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g></g></g><rect width="8223.7" height="60" x="120" y="220"></rect></g><g data-mml-node="munder" transform="translate(15675.3, 0)"><g data-mml-node="mo" transform="translate(764, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mtext"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(500, 0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(778, 0)"></path><path data-c="20" d="" transform="translate(1056, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1306, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1750, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(2306, 0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(2695, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(3087, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(3365, 0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(3809, 0)"></path></g></g></g><g data-mml-node="mo" transform="translate(18647.2, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(19036.2, 0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(529, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1149, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(20925, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(21925.2, 0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(529, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1175, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(23610.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -1528.8 1 2557.5"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn-1" transform="translate(0, 186.8)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(389, 0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889, 0)"></path></g></g></g></svg></g></g></g></g></svg></mjx-container></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a_C_unrolled = tf.transpose(a_C)</span><br><span class="line">a_G_unrolled = tf.transpose(a_G)</span><br><span class="line"></span><br><span class="line">J_content = (<span class="number">1</span>/ (<span class="number">4</span>* n_H * n_W * n_C)) * tf.reduce_sum(tf.pow((a_G_unrolled - a_C_unrolled), <span class="number">2</span>))</span><br></pre></td></tr></table></figure>

<h4 id="3-2-1-Matriz-de-estilo"><a href="#3-2-1-Matriz-de-estilo" class="headerlink" title="3.2.1 - Matriz de estilo"></a>3.2.1 - Matriz de estilo</h4><p>$$\mathbf{G}<em>{gram} = \mathbf{A}</em>{unrolled} \mathbf{A}_{unrolled}^T$$</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">GA = tf.matmul(A, tf.transpose(A))</span><br></pre></td></tr></table></figure>

<h4 id="3-2-2-Custo-de-estilo"><a href="#3-2-2-Custo-de-estilo" class="headerlink" title="3.2.2 - Custo de estilo"></a>3.2.2 - Custo de estilo</h4><p>$$J_{style}^{[l]}(S,G) = \frac{1}{4 \times {n_C}^2 \times (n_H \times n_W)^2} \sum <em>{i=1}^{n_C}\sum</em>{j=1}^{n_C}(G^{(S)}<em>{(gram)i,j} - G^{(G)}</em>{(gram)i,j})^2\tag{2} $$</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">m, n_H, n_W, n_C = a_G.get_shape().as_list()</span><br><span class="line"></span><br><span class="line">a_S = tf.transpose(tf.reshape(a_S, [n_H*n_W, n_C]))</span><br><span class="line">a_G = tf.transpose(tf.reshape(a_G, [n_H*n_W, n_C]))</span><br><span class="line"></span><br><span class="line">GS = gram_matrix(a_S)</span><br><span class="line">GG = gram_matrix(a_G)</span><br><span class="line"></span><br><span class="line">J_style_layer = <span class="number">1.</span>/(<span class="number">4</span> * n_C**<span class="number">2</span> * (n_H*n_W)**<span class="number">2</span>) * tf.reduce_sum(tf.pow((GS - GG), <span class="number">2</span>))</span><br></pre></td></tr></table></figure>

<h4 id="3-2-3-Pesos-de-estilo"><a href="#3-2-3-Pesos-de-estilo" class="headerlink" title="3.2.3 Pesos de estilo"></a>3.2.3 Pesos de estilo</h4><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.667ex" xmlns="http://www.w3.org/2000/svg" width="37.11ex" height="2.364ex" role="img" focusable="false" viewBox="0 -750 16402.6 1045"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1808, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2474.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3530.6, 0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="msub" transform="translate(4170.6, 0)"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="TeXAtom" transform="translate(555, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(918, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1518, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(1879, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2345, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2945, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7113.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(7502.3, 0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(8262.3, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(8706.9, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(9492.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10104.1, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(11104.4, 0)"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="msub" transform="translate(11670.4, 0)"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="TeXAtom" transform="translate(555, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1320, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1618, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g><g data-mml-node="mo" transform="translate(13749, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(14138, 0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(14783, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(15227.6, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(16013.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">J = alpha * J_content + beta * J_style</span><br></pre></td></tr></table></figure>

<h3 id="Reconhecimento-facial"><a href="#Reconhecimento-facial" class="headerlink" title="Reconhecimento facial"></a>Reconhecimento facial</h3><h4 id="1-2-A-perda-do-trigemeo"><a href="#1-2-A-perda-do-trigemeo" class="headerlink" title="1.2 - A perda do trigêmeo"></a>1.2 - A perda do trigêmeo</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">pos_dist = tf.reduce_sum(tf.square(tf.subtract(anchor, positive)), axis=<span class="literal">None</span>)</span><br><span class="line">neg_dist = tf.reduce_sum(tf.square(tf.subtract(anchor, negative)), axis=<span class="literal">None</span>)</span><br><span class="line">basic_loss = tf.add(tf.subtract(pos_dist, neg_dist), alpha)</span><br><span class="line"></span><br><span class="line">loss = tf.reduce_sum(tf.maximum(basic_loss, <span class="number">0</span>))</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Curso de Aprendizado Profundo 5</title>
    <url>/pt/Deep-Learning-Course-5/</url>
    <content><![CDATA[<p>Uau, terminei antes do prazo. </p>
<p>😃😃😃 </p>
<p><a href="https://www.coursera.org/account/accomplishments/specialization/8BQ77WBNDVQH">Certificado de especialização em aprendizado profundo</a> </p>
<h2 id="Semana-1"><a href="#Semana-1" class="headerlink" title="Semana 1"></a>Semana 1</h2><h3 id="Construindo-uma-rede-neural-recorrente-passo-a-passo"><a href="#Construindo-uma-rede-neural-recorrente-passo-a-passo" class="headerlink" title="Construindo uma rede neural recorrente - passo a passo"></a>Construindo uma rede neural recorrente - passo a passo</h3><h3 id="1-1-celula-RNN"><a href="#1-1-celula-RNN" class="headerlink" title="1.1 - célula RNN"></a>1.1 - célula RNN</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a_next = np.tanh(np.matmul(Waa, a_prev) + np.matmul(Wax, xt) + ba)</span><br><span class="line"></span><br><span class="line">yt_pred = softmax(np.matmul(Wya, a_next) + by)</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="1-2-Passe-para-a-frente-RNN"><a href="#1-2-Passe-para-a-frente-RNN" class="headerlink" title="1.2 - Passe para a frente RNN"></a>1.2 - Passe para a frente RNN</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">xt = x[:,:,t]</span><br><span class="line">a_next, yt_pred, cache = rnn_cell_forward(xt, a_next, parameters)</span><br><span class="line"></span><br><span class="line">a[:,:,t] = a_next</span><br><span class="line"></span><br><span class="line">y_pred[:,:,t] = yt_pred</span><br><span class="line"></span><br><span class="line">caches.append(cache)</span><br></pre></td></tr></table></figure>

<h3 id="2-Rede-Long-Short-Term-Memory-LSTM"><a href="#2-Rede-Long-Short-Term-Memory-LSTM" class="headerlink" title="2 - Rede Long Short-Term Memory (LSTM)"></a>2 - Rede Long Short-Term Memory (LSTM)</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">concat = np.concatenate((a_prev, xt), axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">ft = sigmoid(np.matmul(Wf, concat) + bf)        <span class="comment"># forget gate</span></span><br><span class="line">it = sigmoid(np.matmul(Wi, concat) + bi)        <span class="comment"># update gate</span></span><br><span class="line">cct = np.tanh(np.matmul(Wc, concat) + bc)       <span class="comment"># candidate value</span></span><br><span class="line">c_next = ft*c_prev + it*cct    <span class="comment"># cell state</span></span><br><span class="line">ot = sigmoid(np.matmul(Wo, concat) + bo)        <span class="comment"># output gate</span></span><br><span class="line">a_next = ot * np.tanh(c_next)    <span class="comment"># hidden state</span></span><br><span class="line"></span><br><span class="line">yt_pred = softmax(np.matmul(Wy, a_next) + by)</span><br></pre></td></tr></table></figure>

<h3 id="2-2-Passe-de-avanco-para-LSTM"><a href="#2-2-Passe-de-avanco-para-LSTM" class="headerlink" title="2.2 - Passe de avanço para LSTM"></a>2.2 - Passe de avanço para LSTM</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">Wy = parameters[<span class="string">'Wy'</span>]</span><br><span class="line">n_x, m, T_x = x.shape</span><br><span class="line">n_y, n_a = parameters[<span class="string">'Wy'</span>].shape</span><br><span class="line"></span><br><span class="line">a = np.zeros((n_a, m, T_x))</span><br><span class="line">c = np.zeros((n_a, m, T_x))</span><br><span class="line">y = np.zeros((n_y, m, T_x))</span><br><span class="line"></span><br><span class="line">a_next = a0</span><br><span class="line">c_next = c[:,:,<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> range(T_x):</span><br><span class="line">    xt = x[:,:,t]</span><br><span class="line">    a_next, c_next, yt, cache = lstm_cell_forward(xt, a_next, c_next, parameters)</span><br><span class="line">    a[:,:,t] = a_next</span><br><span class="line">    c[:,:,t]  = c_next</span><br><span class="line">    y[:,:,t] = yt</span><br><span class="line">    caches.append(cache)</span><br></pre></td></tr></table></figure>

<p>… </p>
<p>Muitos códigos e não tive tempo de registrá-los, pois tenho o Certificado. </p>
]]></content>
      <tags>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Arrays 101</title>
    <url>/pt/LeetCode-Arrays-101/</url>
    <content><![CDATA[<h2 id="Maximo-de-unidades-consecutivas"><a href="#Maximo-de-unidades-consecutivas" class="headerlink" title="Máximo de unidades consecutivas"></a>Máximo de unidades consecutivas</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMaxConsecutiveOnes</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">split</span>(separator: <span class="number">0</span>).<span class="built_in">map</span> &#123;$<span class="number">0</span>.<span class="built_in">count</span>&#125;.<span class="built_in">max</span>() ?? <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="Encontre-numeros-com-numero-par-de-digitos"><a href="#Encontre-numeros-com-numero-par-de-digitos" class="headerlink" title="Encontre números com número par de dígitos"></a>Encontre números com número par de dígitos</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findNumbers</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">filter</span>(&#123;<span class="type">String</span>($<span class="number">0</span>).<span class="built_in">count</span> &amp; <span class="number">1</span> == <span class="number">0</span> &#125;).<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Quadrados-de-uma-matriz-classificada"><a href="#Quadrados-de-uma-matriz-classificada" class="headerlink" title="Quadrados de uma matriz classificada"></a>Quadrados de uma matriz classificada</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortedSquares</span><span class="params">(<span class="number">_</span> A: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>, ans = <span class="type">A</span></span><br><span class="line">        <span class="keyword">while</span> j &lt; <span class="type">A</span>.<span class="built_in">count</span>, <span class="type">A</span>[j] &lt; <span class="number">0</span> &#123;</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        i = j - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span>, j &lt; <span class="type">A</span>.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> (ai, aj) = (<span class="type">A</span>[i]*<span class="type">A</span>[i], <span class="type">A</span>[j]*<span class="type">A</span>[j])</span><br><span class="line">            ai &lt; aj ? (ans[k] = ai, i -= <span class="number">1</span>) : (ans[k] = aj, j += <span class="number">1</span>)</span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> i &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            ans[k...] = <span class="type">A</span>[...i].reversed().<span class="built_in">map</span> &#123;$<span class="number">0</span>*$<span class="number">0</span>&#125;.suffix(from: <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> j &lt; <span class="type">A</span>.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans[k...] = <span class="type">A</span>[k...].<span class="built_in">map</span> &#123; $<span class="number">0</span>*$<span class="number">0</span> &#125;.suffix(from: <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Zeros-duplicados"><a href="#Zeros-duplicados" class="headerlink" title="Zeros duplicados"></a>Zeros duplicados</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">duplicateZeros</span><span class="params">(<span class="number">_</span> arr: <span class="keyword">inout</span> [Int])</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> na = <span class="type">Array</span>(repeating: <span class="number">0</span>, <span class="built_in">count</span>: arr.<span class="built_in">count</span>), i = <span class="number">0</span>, j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> j &lt; na.<span class="built_in">count</span> &#123;</span><br><span class="line">            na[j] = arr[i]</span><br><span class="line">            <span class="keyword">if</span> arr[i] == <span class="number">0</span>, j &lt; na.<span class="built_in">count</span>-<span class="number">1</span> &#123; j += <span class="number">1</span>; na[j] = <span class="number">0</span> &#125;</span><br><span class="line">            i += <span class="number">1</span>; j += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        arr = na</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Mesclar-Matriz-Classificada"><a href="#Mesclar-Matriz-Classificada" class="headerlink" title="Mesclar Matriz Classificada"></a>Mesclar Matriz Classificada</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(<span class="number">_</span> nums1: <span class="keyword">inout</span> [Int], <span class="number">_</span> m: Int, <span class="number">_</span> nums2: [Int], <span class="number">_</span> n: Int)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> nums0 = nums1[..&lt;m]</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums0.<span class="built_in">count</span>, j &lt; nums2.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums0[i] &lt; nums2[j] &#123;</span><br><span class="line">                nums1[k] = nums0[i]</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                nums1[k] = nums2[j]</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt; nums0.<span class="built_in">count</span> &#123;</span><br><span class="line">            nums1[k] = nums0[i]</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> j &lt; nums2.<span class="built_in">count</span> &#123;</span><br><span class="line">            nums1[k] = nums2[j]</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Remover-Elemento"><a href="#Remover-Elemento" class="headerlink" title="Remover Elemento"></a>Remover Elemento</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeElement</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int], <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] == val &#123;</span><br><span class="line">                <span class="keyword">while</span> nums[j] == val &#123; j -= <span class="number">1</span> &#125;</span><br><span class="line">                nums.swapAt(i, j)</span><br><span class="line">            &#125;</span><br><span class="line">            i += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Remover-duplicados-da-matriz-classificada"><a href="#Remover-duplicados-da-matriz-classificada" class="headerlink" title="Remover duplicados da matriz classificada"></a>Remover duplicados da matriz classificada</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeDuplicates</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] != nums[j] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">                nums[i] = nums[j]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums.isEmpty ? <span class="number">0</span> : i+<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Verifique-se-N-e-seu-duplo-existem"><a href="#Verifique-se-N-e-seu-duplo-existem" class="headerlink" title="Verifique se N e seu duplo existem"></a>Verifique se N e seu duplo existem</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">checkIfExist</span><span class="params">(<span class="number">_</span> arr: [Int])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = <span class="type">Dictionary</span>&lt;<span class="type">Int</span>, <span class="type">Int</span>&gt;()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> arr &#123;</span><br><span class="line">            dict[i] = (dict[i] ?? <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> arr &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[i*<span class="number">2</span>], v &gt;= ((i==<span class="number">0</span>) ? <span class="number">2</span> : <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Matriz-de-montanha-valida"><a href="#Matriz-de-montanha-valida" class="headerlink" title="Matriz de montanha válida"></a>Matriz de montanha válida</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">validMountainArray</span><span class="params">(<span class="number">_</span> A: [Int])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; <span class="type">A</span>.<span class="built_in">count</span>-<span class="number">1</span>, <span class="type">A</span>[i] &lt; <span class="type">A</span>[i+<span class="number">1</span>] &#123; i += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span> || i == <span class="type">A</span>.<span class="built_in">count</span>-<span class="number">1</span> &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt; <span class="type">A</span>.<span class="built_in">count</span>-<span class="number">1</span>, <span class="type">A</span>[i] &gt; <span class="type">A</span>[i+<span class="number">1</span>] &#123; i += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> i == <span class="type">A</span>.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Substitua-os-Elementos-pelo-Maior-Elemento-no-Lado-Direito"><a href="#Substitua-os-Elementos-pelo-Maior-Elemento-no-Lado-Direito" class="headerlink" title="Substitua os Elementos pelo Maior Elemento no Lado Direito"></a>Substitua os Elementos pelo Maior Elemento no Lado Direito</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">replaceElements</span><span class="params">(<span class="number">_</span> arr: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = arr.<span class="built_in">count</span>-<span class="number">1</span>, rMax = -<span class="number">1</span>, newArr = arr</span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            newArr[i] = rMax</span><br><span class="line">            rMax = <span class="built_in">max</span>(rMax, arr[i])</span><br><span class="line">            i -= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newArr</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Remover-duplicados-da-matriz-classificada-1"><a href="#Remover-duplicados-da-matriz-classificada-1" class="headerlink" title="Remover duplicados da matriz classificada"></a>Remover duplicados da matriz classificada</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeDuplicates</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] != nums[j] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">                nums[i] = nums[j]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums.isEmpty ? <span class="number">0</span> : i+<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Mover-zeros"><a href="#Mover-zeros" class="headerlink" title="Mover zeros"></a>Mover zeros</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">moveZeroes</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int])</span></span> &#123;</span><br><span class="line">        nums = <span class="type">Array</span>(nums.<span class="built_in">split</span>(separator: <span class="number">0</span>).joined()) + <span class="type">Array</span>(nums.<span class="built_in">filter</span>(&#123;$<span class="number">0</span> == <span class="number">0</span>&#125;))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Classificar-matriz-por-paridade"><a href="#Classificar-matriz-por-paridade" class="headerlink" title="Classificar matriz por paridade"></a>Classificar matriz por paridade</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortArrayByParity</span><span class="params">(<span class="number">_</span> A: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> even = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">A</span> &#123;</span><br><span class="line">            i &amp; <span class="number">1</span> == <span class="number">0</span> ? (even.append(i)) : (odd.append(i))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> even + odd</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Quadrados-de-uma-matriz-classificada-1"><a href="#Quadrados-de-uma-matriz-classificada-1" class="headerlink" title="Quadrados de uma matriz classificada"></a>Quadrados de uma matriz classificada</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortedSquares</span><span class="params">(<span class="number">_</span> A: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>, ans = <span class="type">A</span></span><br><span class="line">        <span class="keyword">while</span> j &lt; <span class="type">A</span>.<span class="built_in">count</span>, <span class="type">A</span>[j] &lt; <span class="number">0</span> &#123;</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        i = j - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span>, j &lt; <span class="type">A</span>.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> (ai, aj) = (<span class="type">A</span>[i]*<span class="type">A</span>[i], <span class="type">A</span>[j]*<span class="type">A</span>[j])</span><br><span class="line">            ai &lt; aj ? (ans[k] = ai, i -= <span class="number">1</span>) : (ans[k] = aj, j += <span class="number">1</span>)</span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> i &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            ans[k...] = <span class="type">A</span>[...i].reversed().<span class="built_in">map</span> &#123;$<span class="number">0</span>*$<span class="number">0</span>&#125;.suffix(from: <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> j &lt; <span class="type">A</span>.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans[k...] = <span class="type">A</span>[k...].<span class="built_in">map</span> &#123; $<span class="number">0</span>*$<span class="number">0</span> &#125;.suffix(from: <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Verificador-de-altura"><a href="#Verificador-de-altura" class="headerlink" title="Verificador de altura"></a>Verificador de altura</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">heightChecker</span><span class="params">(<span class="number">_</span> heights: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">zip</span>(heights, heights.sorted()).<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; <span class="keyword">return</span> $<span class="number">0</span> + ($<span class="number">1.0</span> == $<span class="number">1.1</span> ? <span class="number">0</span> : <span class="number">1</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Max-Consecutivos-II"><a href="#Max-Consecutivos-II" class="headerlink" title="Máx. Consecutivos II"></a>Máx. Consecutivos II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMaxConsecutiveOnes</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> z0 = <span class="number">0</span>, z1 = <span class="number">0</span>, maxZ = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">1</span> &#123;</span><br><span class="line">                z1 += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                z0 = z1</span><br><span class="line">                z1 = <span class="number">0</span></span><br><span class="line">            &#125;</span><br><span class="line">            maxZ = <span class="built_in">max</span>(maxZ, z0+z1+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">min</span>(maxZ, nums.<span class="built_in">count</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Terceiro-Numero-Maximo"><a href="#Terceiro-Numero-Maximo" class="headerlink" title="Terceiro Número Máximo"></a>Terceiro Número Máximo</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">thirdMax</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> maxs = [<span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">min</span>]</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> n &gt; maxs[<span class="number">2</span>], maxs.firstIndex(of: n) == <span class="literal">nil</span> &#123;</span><br><span class="line">                maxs[<span class="number">2</span>] = n</span><br><span class="line">                <span class="keyword">if</span> maxs[<span class="number">2</span>] &gt; maxs[<span class="number">1</span>] &#123;</span><br><span class="line">                    maxs.swapAt(<span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">if</span> maxs[<span class="number">1</span>] &gt; maxs[<span class="number">0</span>] &#123;</span><br><span class="line">                        maxs.swapAt(<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxs[<span class="number">2</span>] == <span class="type">Int</span>.<span class="built_in">min</span> ? maxs[<span class="number">0</span>] : maxs[<span class="number">2</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Encontre-todos-os-numeros-desaparecidos-em-uma-matriz"><a href="#Encontre-todos-os-numeros-desaparecidos-em-uma-matriz" class="headerlink" title="Encontre todos os números desaparecidos em uma matriz"></a>Encontre todos os números desaparecidos em uma matriz</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDisappearedNumbers</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> nums = nums, ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> ..&lt; nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> index = <span class="built_in">abs</span>(nums[i])-<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> nums[index] &gt; <span class="number">0</span> &#123; nums[index] *= -<span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] &gt; <span class="number">0</span> &#123; ans.append(i+<span class="number">1</span>) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Linked List</title>
    <url>/pt/LeetCode-Linked-List/</url>
    <content><![CDATA[<h2 id="Lista-vinculada-de-design"><a href="#Lista-vinculada-de-design" class="headerlink" title="Lista vinculada de design"></a>Lista vinculada de design</h2><a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> val: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">var</span> prev: <span class="type">Node?</span>, next: <span class="type">Node?</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> val: <span class="type">Int</span>, prev: <span class="type">Node?</span> = <span class="literal">nil</span>, <span class="number">_</span> next: <span class="type">Node?</span> = <span class="literal">nil</span>) &#123; <span class="keyword">self</span>.val = val; <span class="keyword">self</span>.prev = prev; <span class="keyword">self</span>.next = next &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyLinkedList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">let</span> head: <span class="type">Node</span> = <span class="type">Node</span>(-<span class="number">1</span>), tail: <span class="type">Node</span> = <span class="type">Node</span>(-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>() &#123;  head.next = tail; tail.prev = head &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">get</span><span class="params">(<span class="number">_</span> index: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findNode(index)?.val ?? -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addAtHead</span><span class="params">(<span class="number">_</span> val: Int)</span></span> &#123;</span><br><span class="line">        addAtIndex(<span class="number">0</span>, val)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addAtTail</span><span class="params">(<span class="number">_</span> val: Int)</span></span> &#123;</span><br><span class="line">        addAtIndex(<span class="built_in">count</span>, val)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addAtIndex</span><span class="params">(<span class="number">_</span> index: Int, <span class="number">_</span> val: Int)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= <span class="built_in">count</span>, <span class="keyword">let</span> node = findNode(index) &#123;</span><br><span class="line">            <span class="keyword">let</span> newNode = <span class="type">Node</span>(val)</span><br><span class="line">            newNode.next = node</span><br><span class="line">            newNode.prev = node.prev</span><br><span class="line">            node.prev?.next = newNode</span><br><span class="line">            node.prev = newNode</span><br><span class="line">            <span class="built_in">count</span> += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// printList()</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deleteAtIndex</span><span class="params">(<span class="number">_</span> index: Int)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> index &gt;= <span class="number">0</span> &amp;&amp; index &lt; <span class="built_in">count</span>, <span class="keyword">let</span> node = findNode(index) &#123;</span><br><span class="line">            node.prev?.next = node.next</span><br><span class="line">            node.next?.prev = node.prev</span><br><span class="line">            node.prev = <span class="literal">nil</span>; node.next = <span class="literal">nil</span></span><br><span class="line">            <span class="built_in">count</span> -= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// printList()</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">findNode</span><span class="params">(<span class="number">_</span> index: Int)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p: <span class="type">Node?</span>, i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> index &lt;= (<span class="built_in">count</span>/<span class="number">2</span>) &#123;</span><br><span class="line">            p = head.next</span><br><span class="line">            <span class="keyword">while</span> p != <span class="literal">nil</span>, i &lt; index &#123;</span><br><span class="line">                p = p?.next; i += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            p = tail; i = <span class="built_in">count</span></span><br><span class="line">            <span class="keyword">while</span> p != <span class="literal">nil</span>, i &gt; index &#123;</span><br><span class="line">                p = p?.prev; i -= <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">printList</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = head.next, i: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span>, i &lt; <span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(p!.val, terminator: <span class="string">&quot;-&gt;&quot;</span> )</span><br><span class="line">            p = p?.next; i += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Ciclo-de-lista-vinculada"><a href="#Ciclo-de-lista-vinculada" class="headerlink" title="Ciclo de lista vinculada"></a>Ciclo de lista vinculada</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasCycle</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> fast = head?.next, slow = head</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fast != <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Ciclo-de-lista-vinculada-II"><a href="#Ciclo-de-lista-vinculada-II" class="headerlink" title="Ciclo de lista vinculada II"></a>Ciclo de lista vinculada II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">detectCycle</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> slow = head, fast = head?.next</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        slow = head; fast = fast?.next</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fast</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Interseccao-de-duas-listas-vinculadas"><a href="#Interseccao-de-duas-listas-vinculadas" class="headerlink" title="Intersecção de duas listas vinculadas"></a>Intersecção de duas listas vinculadas</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getIntersectionNode</span><span class="params">(<span class="number">_</span> headA: ListNode?, <span class="number">_</span> headB: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> tailA = headA</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> p = tailA?.next &#123; tailA = p &#125;</span><br><span class="line">        tailA?.next = headB</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> fast = detectCycle(headA)</span><br><span class="line"></span><br><span class="line">        tailA?.next = <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fast</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">detectCycle</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> slow = head, fast = head?.next</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        slow = head; fast = fast?.next</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fast</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Remover-o-enesimo-no-do-final-da-lista"><a href="#Remover-o-enesimo-no-do-final-da-lista" class="headerlink" title="Remover o enésimo nó do final da lista"></a>Remover o enésimo nó do final da lista</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeNthFromEnd</span><span class="params">(<span class="number">_</span> head: ListNode?, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> pHead = <span class="type">ListNode</span>(-<span class="number">1</span>, head), p0: <span class="type">ListNode?</span> = pHead, p1 = p0, i = <span class="number">0</span>, j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> q = p1?.next, j &lt; n &#123;</span><br><span class="line">            p1 = q; j += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> q = p1?.next &#123;</span><br><span class="line">            p1 = q; p0 = p0?.next</span><br><span class="line">        &#125;</span><br><span class="line">        p0?.next = p0?.next?.next</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pHead.next</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Lista-vinculada-reversa"><a href="#Lista-vinculada-reversa" class="headerlink" title="Lista vinculada reversa"></a>Lista vinculada reversa</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> head?.next == <span class="literal">nil</span> &#123; <span class="keyword">return</span> head &#125;</span><br><span class="line">        <span class="keyword">let</span> h = reverseList(head?.next)</span><br><span class="line">        head?.next?.next = head</span><br><span class="line">        head?.next = <span class="literal">nil</span></span><br><span class="line">        <span class="keyword">return</span> h</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> prev: <span class="type">ListNode?</span> = <span class="literal">nil</span>, cur = head</span><br><span class="line">        <span class="keyword">while</span> cur != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> p = cur?.next</span><br><span class="line">            cur?.next = prev</span><br><span class="line">            prev = cur</span><br><span class="line">            cur = p</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prev</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Remover-Elementos-de-Lista-Vinculados"><a href="#Remover-Elementos-de-Lista-Vinculados" class="headerlink" title="Remover Elementos de Lista Vinculados"></a>Remover Elementos de Lista Vinculados</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeElements</span><span class="params">(<span class="number">_</span> head: ListNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> pHead = <span class="type">ListNode</span>(-<span class="number">1</span>, head); <span class="keyword">var</span> p: <span class="type">ListNode?</span> = pHead</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> pn = p!.next, pn.val == val &#123;</span><br><span class="line">                p!.next = pn.next</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                p = p!.next</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pHead.next</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Lista-Vinculada-Pares-Impares"><a href="#Lista-Vinculada-Pares-Impares" class="headerlink" title="Lista Vinculada Pares Ímpares"></a>Lista Vinculada Pares Ímpares</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">oddEvenList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> evenHead = head, oddHead = head?.next</span><br><span class="line">        <span class="keyword">var</span> evenP = evenHead, oddP = oddHead</span><br><span class="line">        <span class="keyword">while</span> oddP?.next != <span class="literal">nil</span> &#123;</span><br><span class="line">            evenP?.next = evenP?.next?.next</span><br><span class="line">            oddP?.next = oddP?.next?.next</span><br><span class="line">            evenP = evenP?.next</span><br><span class="line">            oddP = oddP?.next</span><br><span class="line">        &#125;</span><br><span class="line">        evenP?.next = oddHead</span><br><span class="line">        <span class="keyword">return</span> evenHead</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Lista-Ligada-do-Palindromo"><a href="#Lista-Ligada-do-Palindromo" class="headerlink" title="Lista Ligada do Palíndromo"></a>Lista Ligada do Palíndromo</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isPalindrome</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> tail = reverseList(center(head))</span><br><span class="line">        <span class="keyword">return</span> compare(head, tail)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">compare</span><span class="params">(<span class="number">_</span> head: ListNode?, <span class="number">_</span> tail: ListNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = head, q = tail</span><br><span class="line">        <span class="keyword">while</span> q != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> p == <span class="literal">nil</span> || q!.val != p!.val &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">            p = p!.next; q = q!.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">center</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span>  -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> fast = head?.next, slow = head</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">reverseList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> prev: <span class="type">ListNode?</span> = <span class="literal">nil</span>, cur = head</span><br><span class="line">        <span class="keyword">while</span> cur != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> p = cur?.next</span><br><span class="line">            cur?.next = prev</span><br><span class="line">            prev = cur; cur = p</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prev</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Mesclar-duas-listas-classificadas"><a href="#Mesclar-duas-listas-classificadas" class="headerlink" title="Mesclar duas listas classificadas"></a>Mesclar duas listas classificadas</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mergeTwoLists</span><span class="params">(<span class="number">_</span> l1: ListNode?, <span class="number">_</span> l2: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p1 = l1 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l2 &#125;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p2 = l2 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l1 &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> (p, q) = p1.val &lt;= p2.val ? (p1, p2) : (p2, p1)</span><br><span class="line">        p.next = mergeTwoLists(p.next, q)</span><br><span class="line">        <span class="keyword">return</span> p</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Adicionar-dois-numeros"><a href="#Adicionar-dois-numeros" class="headerlink" title="Adicionar dois números"></a>Adicionar dois números</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addTwoNumbers</span><span class="params">(<span class="number">_</span> l1: ListNode?, <span class="number">_</span> l2: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> head = <span class="type">ListNode</span>(-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">var</span> p1 = l1, p2 = l2, p3: <span class="type">ListNode?</span> = head, v = <span class="number">0</span>, carry = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> p1 != <span class="literal">nil</span> || p2 != <span class="literal">nil</span> &#123;</span><br><span class="line">            v = (p1?.val ?? <span class="number">0</span>)+(p2?.val ?? <span class="number">0</span>)+carry</span><br><span class="line">            carry =  v/<span class="number">10</span>; v %= <span class="number">10</span></span><br><span class="line">            p3?.next = <span class="type">ListNode</span>(v)</span><br><span class="line">            p1 = p1?.next; p2 = p2?.next; p3 = p3?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> carry != <span class="number">0</span> &#123; p3?.next = <span class="type">ListNode</span>(carry) &#125;</span><br><span class="line">        <span class="keyword">return</span> head.next</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Achatar-uma-lista-duplamente-vinculada-multinivel"><a href="#Achatar-uma-lista-duplamente-vinculada-multinivel" class="headerlink" title="Achatar uma lista duplamente vinculada multinível"></a>Achatar uma lista duplamente vinculada multinível</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">flatten</span><span class="params">(<span class="number">_</span> head: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        getTail(head)</span><br><span class="line">        <span class="keyword">return</span> head</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">getTail</span><span class="params">(<span class="number">_</span> head: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> head = head <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> child = head.child &#123;</span><br><span class="line">            <span class="keyword">let</span> tail = getTail(child)</span><br><span class="line">            tail?.next = head.next</span><br><span class="line">            head.next?.prev = tail</span><br><span class="line">            head.next = head.child</span><br><span class="line">            head.child?.prev = head</span><br><span class="line">            head.child = <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> p = head.next &#123;</span><br><span class="line">            <span class="keyword">return</span> getTail(p)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Inserir-em-uma-lista-classificada-ciclica"><a href="#Inserir-em-uma-lista-classificada-ciclica" class="headerlink" title="Inserir em uma lista classificada cíclica"></a>Inserir em uma lista classificada cíclica</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> head: Node?, <span class="number">_</span> insertVal: Int)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> head == <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">Node</span>(insertVal)</span><br><span class="line">            n.next = n</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> p = head</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (p!.val &lt;= insertVal &amp;&amp;  p!.next!.val &gt;= insertVal) ||</span><br><span class="line">            (p!.val &gt; p!.next!.val &amp;&amp; (insertVal &lt;= p!.next!.val || insertVal &gt;= p!.val ) ||</span><br><span class="line">             p!.next == head</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="keyword">let</span> n = <span class="type">Node</span>(insertVal)</span><br><span class="line">                n.next = p!.next</span><br><span class="line">                p!.next = n</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">            p = p!.next</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> head</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Copiar-lista-com-ponteiro-aleatorio"><a href="#Copiar-lista-com-ponteiro-aleatorio" class="headerlink" title="Copiar lista com ponteiro aleatório"></a>Copiar lista com ponteiro aleatório</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">copyRandomList</span><span class="params">(<span class="number">_</span> head: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = head, nNode = head</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">Node</span>(p!.val)</span><br><span class="line">            n.next = p?.next</span><br><span class="line">            p?.next = n</span><br><span class="line">            p = p?.next?.next</span><br><span class="line">        &#125;</span><br><span class="line">        p = head</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            p?.next?.random = p?.random?.next</span><br><span class="line">            p = p?.next?.next</span><br><span class="line">        &#125;</span><br><span class="line">        p = head; nNode = head?.next</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> q = p?.next</span><br><span class="line">            p?.next = p?.next?.next</span><br><span class="line">            q?.next = q?.next?.next</span><br><span class="line">            p = p?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nNode</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Girar-lista"><a href="#Girar-lista" class="headerlink" title="Girar lista"></a>Girar lista</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">rotateRight</span><span class="params">(<span class="number">_</span> head: ListNode?, <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> length = <span class="number">0</span>, fast = head, slow = head, i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span> &#123; fast = fast!.next; length += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> length &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> head &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> k = k % length</span><br><span class="line"></span><br><span class="line">        fast = head</span><br><span class="line">        <span class="keyword">while</span> i &lt; k &#123; fast = fast?.next; i += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> fast?.next != <span class="literal">nil</span> &#123;</span><br><span class="line">            slow = slow?.next; fast = fast?.next</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fast?.next = head</span><br><span class="line">        <span class="keyword">let</span> node = slow?.next</span><br><span class="line">        slow?.next = <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> node</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Árvore binária LeetCode</title>
    <url>/pt/LeetCode-Binary-Tree/</url>
    <content><![CDATA[<h2 id="Traversal-de-pre-encomenda-de-arvore-binaria"><a href="#Traversal-de-pre-encomenda-de-arvore-binaria" class="headerlink" title="Traversal de pré-encomenda de árvore binária"></a>Traversal de pré-encomenda de árvore binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// iterative</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> p = stack.popLast() &#123;</span><br><span class="line">            ans.append(p.val)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> r = p.<span class="keyword">right</span> &#123; stack.append(r) &#125;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> l = p.<span class="keyword">left</span> &#123; stack.append(l) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// recursive</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorderTraversal0</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">return</span> [root.val] + preorderTraversal(root.<span class="keyword">left</span>) + preorderTraversal(root.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="Traversal-da-ordem-da-arvore-binaria"><a href="#Traversal-da-ordem-da-arvore-binaria" class="headerlink" title="Traversal da ordem da árvore binária"></a>Traversal da ordem da árvore binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// iteratively</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">inorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> || !stack.isEmpty &#123;</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">let</span> l = p &#123;</span><br><span class="line">                stack.append(l)</span><br><span class="line">                p = l.<span class="keyword">left</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> n = stack.popLast() &#123;</span><br><span class="line">                ans.append(n.val)</span><br><span class="line">                p = n.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Traversal-de-ordem-postal-de-arvore-binaria"><a href="#Traversal-de-ordem-postal-de-arvore-binaria" class="headerlink" title="Traversal de ordem postal de árvore binária"></a>Traversal de ordem postal de árvore binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Recursive</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">postorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">return</span> postorderTraversal(root.<span class="keyword">left</span>) + postorderTraversal(root.<span class="keyword">right</span>) + [root.val]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Transversal-de-ordem-de-nivel-de-arvore-binaria"><a href="#Transversal-de-ordem-de-nivel-de-arvore-binaria" class="headerlink" title="Transversal de ordem de nível de árvore binária"></a>Transversal de ordem de nível de árvore binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        helper(root, <span class="number">0</span>, &amp;ans)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> level: Int, <span class="number">_</span> ans: <span class="keyword">inout</span> [[Int]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> level &gt;= ans.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans.append( [root.val] )</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ans[level].append(root.val)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        helper(root.<span class="keyword">left</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">        helper(root.<span class="keyword">right</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Profundidade-maxima-da-arvore-binaria"><a href="#Profundidade-maxima-da-arvore-binaria" class="headerlink" title="Profundidade máxima da árvore binária"></a>Profundidade máxima da árvore binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> root != <span class="literal">nil</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">max</span>(maxDepth(root?.<span class="keyword">left</span>), maxDepth(root?.<span class="keyword">right</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Arvore-Simetrica"><a href="#Arvore-Simetrica" class="headerlink" title="Árvore Simétrica"></a>Árvore Simétrica</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isSymmetric</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> inOrder(root) == inOrder(<span class="built_in">reverse</span>(root))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">reverse</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="built_in">reverse</span>(root.<span class="keyword">left</span>); <span class="built_in">reverse</span>(root.<span class="keyword">right</span>)</span><br><span class="line">        <span class="built_in">swap</span>(&amp;root.<span class="keyword">left</span>, &amp;root.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">inOrder</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int?</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> root == <span class="literal">nil</span> ? [<span class="literal">nil</span>] : [root!.val] + inOrder(root!.<span class="keyword">left</span>) + inOrder(root!.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Soma-do-caminho"><a href="#Soma-do-caminho" class="headerlink" title="Soma do caminho"></a>Soma do caminho</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasPathSum</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> sum: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.<span class="keyword">left</span> == <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> == <span class="literal">nil</span> &amp;&amp; root.val == sum &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> hasPathSum(root.<span class="keyword">left</span>, sum-root.val) || hasPathSum(root.<span class="keyword">right</span>, sum-root.val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Contar-subarvores-sem-valor"><a href="#Contar-subarvores-sem-valor" class="headerlink" title="Contar subárvores sem valor"></a>Contar subárvores sem valor</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">countUnivalSubtrees</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        isUni(root)</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">isUni</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.<span class="keyword">left</span> == <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> == <span class="literal">nil</span> &#123;</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> lv = root.<span class="keyword">left</span>?.val ?? root.<span class="keyword">right</span>!.val</span><br><span class="line">        <span class="keyword">let</span> rv = root.<span class="keyword">right</span>?.val ?? root.<span class="keyword">left</span>!.val</span><br><span class="line">        <span class="keyword">let</span> l = root.<span class="keyword">left</span> == <span class="literal">nil</span> ? <span class="literal">true</span> : isUni(root.<span class="keyword">left</span>)</span><br><span class="line">        <span class="keyword">let</span> r = root.<span class="keyword">right</span> == <span class="literal">nil</span> ? <span class="literal">true</span> : isUni(root.<span class="keyword">right</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> ans = l &amp;&amp; r &amp;&amp; (lv == root.val &amp;&amp; rv == root.val)</span><br><span class="line">        <span class="keyword">if</span> ans &#123; num += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Construir-Arvore-Binaria-a-partir-de-Inorder-e-Postorder-Traversal"><a href="#Construir-Arvore-Binaria-a-partir-de-Inorder-e-Postorder-Traversal" class="headerlink" title="Construir Árvore Binária a partir de Inorder e Postorder Traversal"></a>Construir Árvore Binária a partir de Inorder e Postorder Traversal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">buildTree</span><span class="params">(<span class="number">_</span> inorder: [Int], <span class="number">_</span> postorder: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> dict = inorder.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">Int</span>:<span class="type">Int</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> inRange: <span class="params">(Int, Int)</span></span></span>, <span class="number">_</span> postI: <span class="type">Int</span>) -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> postI &lt; <span class="number">0</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> v = postorder[postI]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> i = dict[v], i &gt;= inRange.<span class="number">0</span> &amp;&amp; i &lt;= inRange.<span class="number">1</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> n = <span class="type">TreeNode</span>(v)</span><br><span class="line">                n.<span class="keyword">left</span> = helper((inRange.<span class="number">0</span>, i-<span class="number">1</span>), postI-<span class="number">1</span>)</span><br><span class="line">                n.<span class="keyword">right</span> = helper((i+<span class="number">1</span>, inRange.<span class="number">1</span>), postI-<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> n</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> helper(inRange, postI-<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper((<span class="number">0</span>, inorder.<span class="built_in">count</span>-<span class="number">1</span>), postorder.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Construir-arvore-binaria-a-partir-da-pre-encomenda-e-da-passagem-em-ordem"><a href="#Construir-arvore-binaria-a-partir-da-pre-encomenda-e-da-passagem-em-ordem" class="headerlink" title="Construir árvore binária a partir da pré-encomenda e da passagem em ordem"></a>Construir árvore binária a partir da pré-encomenda e da passagem em ordem</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">buildTree</span><span class="params">(<span class="number">_</span> preorder: [Int], <span class="number">_</span> inorder: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> dict = inorder.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">Int</span>: <span class="type">Int</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> inRange: <span class="params">(Int, Int)</span></span></span>, <span class="number">_</span> preI: <span class="type">Int</span>) -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> preI &gt;= preorder.<span class="built_in">count</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> v = preorder[preI]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> i = dict[v], i &gt;= inRange.<span class="number">0</span> &amp;&amp; i &lt;= inRange.<span class="number">1</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> n = <span class="type">TreeNode</span>(v)</span><br><span class="line">                n.<span class="keyword">left</span> = helper((inRange.<span class="number">0</span>, i-<span class="number">1</span>), preI+<span class="number">1</span>)</span><br><span class="line">                n.<span class="keyword">right</span> = helper((i+<span class="number">1</span>, inRange.<span class="number">1</span>), preI+<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> n</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> helper(inRange, preI+<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper((<span class="number">0</span>, inorder.<span class="built_in">count</span>-<span class="number">1</span>), <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Preenchendo-os-proximos-ponteiros-corretos-em-cada-no"><a href="#Preenchendo-os-proximos-ponteiros-corretos-em-cada-no" class="headerlink" title="Preenchendo os próximos ponteiros corretos em cada nó"></a>Preenchendo os próximos ponteiros corretos em cada nó</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">connect</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        root.<span class="keyword">left</span>?.next = root.<span class="keyword">right</span></span><br><span class="line">        root.<span class="keyword">right</span>?.next = root.next?.<span class="keyword">left</span></span><br><span class="line">        connect(root.<span class="keyword">left</span>)</span><br><span class="line">        connect(root.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Preenchendo-os-proximos-ponteiros-corretos-em-cada-no-II"><a href="#Preenchendo-os-proximos-ponteiros-corretos-em-cada-no-II" class="headerlink" title="Preenchendo os próximos ponteiros corretos em cada nó II"></a>Preenchendo os próximos ponteiros corretos em cada nó II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">connect</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> nodes = [[<span class="type">Node</span>]</span><br><span class="line">        helper(root, <span class="number">0</span>, &amp;nodes)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nodes.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;(nodes[i].<span class="built_in">count</span>-<span class="number">1</span>) &#123;</span><br><span class="line">                nodes[i][j].next = nodes[i][j+<span class="number">1</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: Node?, <span class="number">_</span> level: Int, <span class="number">_</span> nodes: <span class="keyword">inout</span> [[Node]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        level &lt; nodes.<span class="built_in">count</span> ? nodes[level].append(root) : nodes.append([root])</span><br><span class="line">        helper(root.<span class="keyword">left</span>, level+<span class="number">1</span>, &amp;nodes)</span><br><span class="line">        helper(root.<span class="keyword">right</span>, level+<span class="number">1</span>, &amp;nodes)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Menor-ancestral-comum-de-uma-arvore-binaria"><a href="#Menor-ancestral-comum-de-uma-arvore-binaria" class="headerlink" title="Menor ancestral comum de uma árvore binária"></a>Menor ancestral comum de uma árvore binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">lowestCommonAncestor</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root, <span class="keyword">let</span> p = p, <span class="keyword">let</span> q = q <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> l = lowestCommonAncestor(root.<span class="keyword">left</span>, p, q), r = lowestCommonAncestor(root.<span class="keyword">right</span>, p, q)</span><br><span class="line">        <span class="keyword">if</span> root.val == p.val || root.val == q.val || (l != <span class="literal">nil</span> &amp;&amp; r != <span class="literal">nil</span>) &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">return</span> l ?? r</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Serializar-e-desserializar-arvore-binaria"><a href="#Serializar-e-desserializar-arvore-binaria" class="headerlink" title="Serializar e desserializar árvore binária"></a>Serializar e desserializar árvore binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">serialize</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="string">&quot;#&quot;</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;\(root.val),\(serialize(root.left)),\(serialize(root.right))&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">(<span class="number">_</span> data: String)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> vals = data.<span class="built_in">split</span>(separator: <span class="string">&quot;,&quot;</span>)</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">()</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> i &lt; vals.<span class="built_in">count</span>, <span class="keyword">let</span> v = <span class="type">Int</span>(vals[i]) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">TreeNode</span>(v)</span><br><span class="line">            i += <span class="number">1</span>; n.<span class="keyword">left</span> = helper()</span><br><span class="line">            i += <span class="number">1</span>; n.<span class="keyword">right</span> = helper()</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> helper()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Recursion 1</title>
    <url>/pt/LeetCode-Recursion-1/</url>
    <content><![CDATA[<h2 id="String-reversa"><a href="#String-reversa" class="headerlink" title="String reversa"></a>String reversa</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseString</span><span class="params">(<span class="number">_</span> s: <span class="keyword">inout</span> [Character])</span></span> &#123;</span><br><span class="line">        s.<span class="built_in">reverse</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="Trocar-nos-em-pares"><a href="#Trocar-nos-em-pares" class="headerlink" title="Trocar nós em pares"></a>Trocar nós em pares</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">swapPairs</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> h = <span class="built_in">swap</span>(head)</span><br><span class="line">        h?.next?.next = swapPairs(h?.next?.next)</span><br><span class="line">        <span class="keyword">return</span> h</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">swap</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> h0 = head, <span class="keyword">let</span> h1 = h0.next &#123;</span><br><span class="line">            h0.next = h1.next</span><br><span class="line">            h1.next = h0</span><br><span class="line">            <span class="keyword">return</span> h1</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> head</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Lista-vinculada-reversa"><a href="#Lista-vinculada-reversa" class="headerlink" title="Lista vinculada reversa"></a>Lista vinculada reversa</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> prev: <span class="type">ListNode?</span> = <span class="literal">nil</span>, cur = head</span><br><span class="line">        <span class="keyword">while</span> cur != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> p = cur?.next</span><br><span class="line">            cur?.next = prev</span><br><span class="line">            prev = cur</span><br><span class="line">            cur = p</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prev</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Pesquisa-em-uma-arvore-de-pesquisa-binaria"><a href="#Pesquisa-em-uma-arvore-de-pesquisa-binaria" class="headerlink" title="Pesquisa em uma árvore de pesquisa binária"></a>Pesquisa em uma árvore de pesquisa binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == val &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">left</span>, val)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">right</span>, val)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Triangulo-II-de-Pascal"><a href="#Triangulo-II-de-Pascal" class="headerlink" title="Triângulo II de Pascal"></a>Triângulo II de Pascal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getRow</span><span class="params">(<span class="number">_</span> rowIndex: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> arr = [<span class="number">1</span>], j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;rowIndex &#123;</span><br><span class="line">            arr.append(<span class="number">1</span>)</span><br><span class="line">            j = arr.<span class="built_in">count</span> - <span class="number">2</span></span><br><span class="line">            <span class="keyword">while</span> j &gt; <span class="number">0</span> &#123;</span><br><span class="line">                arr[j] += arr[j-<span class="number">1</span>]</span><br><span class="line">                j -= <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Numero-Fibonacci"><a href="#Numero-Fibonacci" class="headerlink" title="Número Fibonacci"></a>Número Fibonacci</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = <span class="type">Array</span>(repeating: <span class="number">0</span>, <span class="built_in">count</span>: <span class="number">31</span>)</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fib</span><span class="params">(<span class="number">_</span> N: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        arr[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> <span class="type">N</span> &lt; <span class="number">2</span> || arr[<span class="type">N</span>] != <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> arr[<span class="type">N</span>]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            arr[<span class="type">N</span>-<span class="number">1</span>] = fib(<span class="type">N</span>-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> arr[<span class="type">N</span>-<span class="number">1</span>] + arr[<span class="type">N</span>-<span class="number">2</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Subindo-escadas"><a href="#Subindo-escadas" class="headerlink" title="Subindo escadas"></a>Subindo escadas</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] + <span class="type">Array</span>(repeating: <span class="number">0</span>, <span class="built_in">count</span>: <span class="number">127</span>)</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">climbStairs</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">4</span> || arr[n] != <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> arr[n]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            arr[n-<span class="number">1</span>] = climbStairs(n-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> arr[n-<span class="number">1</span>] + arr[n-<span class="number">2</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Profundidade-maxima-da-arvore-binaria"><a href="#Profundidade-maxima-da-arvore-binaria" class="headerlink" title="Profundidade máxima da árvore binária"></a>Profundidade máxima da árvore binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">max</span>(maxDepth(root.<span class="keyword">left</span>), maxDepth(root.<span class="keyword">right</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Pow-x-n"><a href="#Pow-x-n" class="headerlink" title="Pow (x, n)"></a>Pow (x, n)</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">myPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dic = [<span class="type">Int</span>:<span class="type">Double</span></span><br><span class="line">        dic[-<span class="number">1</span>] = <span class="number">1</span>/x; dic[<span class="number">0</span>] = <span class="number">1</span>; dic[<span class="number">1</span>] = x</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fastPow(x, n, &amp;dic)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fastPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int, <span class="number">_</span> arr: <span class="keyword">inout</span> [Int:Double])</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> v = arr[n] &#123; <span class="keyword">return</span> v &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> l = n / <span class="number">2</span>, r = n - l</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> arr[l] == <span class="literal">nil</span> &#123;</span><br><span class="line">            arr[l] = fastPow(x, l, &amp;arr)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> arr[r] == <span class="literal">nil</span> &#123;</span><br><span class="line">            arr[r] = fastPow(x, r, &amp;arr)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr[l]! * arr[r]!</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Mesclar-duas-listas-classificadas"><a href="#Mesclar-duas-listas-classificadas" class="headerlink" title="Mesclar duas listas classificadas"></a>Mesclar duas listas classificadas</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mergeTwoLists</span><span class="params">(<span class="number">_</span> l1: ListNode?, <span class="number">_</span> l2: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p1 = l1 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l2 &#125;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p2 = l2 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l1 &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> (p, q) = p1.val &lt;= p2.val ? (p1, p2) : (p2, p1)</span><br><span class="line">        p.next = mergeTwoLists(p.next, q)</span><br><span class="line">        <span class="keyword">return</span> p</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="K-esimo-simbolo-na-gramatica"><a href="#K-esimo-simbolo-na-gramatica" class="headerlink" title="K-ésimo símbolo na gramática"></a>K-ésimo símbolo na gramática</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">kthGrammar</span><span class="params">(<span class="number">_</span> N: Int, <span class="number">_</span> K: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="type">N</span> &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> (kthGrammar(<span class="type">N</span>-<span class="number">1</span>, (<span class="type">K</span>+<span class="number">1</span>)/<span class="number">2</span>) == <span class="number">0</span>) ? <span class="number">1</span>-<span class="type">K</span>%<span class="number">2</span> : <span class="type">K</span>%<span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Arvores-de-pesquisa-binarias-unicas-II"><a href="#Arvores-de-pesquisa-binarias-unicas-II" class="headerlink" title="Árvores de pesquisa binárias únicas II"></a>Árvores de pesquisa binárias únicas II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateTrees</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">1</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(<span class="number">1</span>, n)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> i1: Int, <span class="number">_</span> i2:Int)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> i1 &gt; i2 &#123; <span class="keyword">return</span> [<span class="literal">nil</span>] &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> tn = [<span class="type">TreeNode</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> i1...i2 &#123;</span><br><span class="line">            <span class="keyword">let</span> l = helper(i1, i-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">let</span> r = helper(i+<span class="number">1</span>, i2)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> li <span class="keyword">in</span> l &#123;</span><br><span class="line">                <span class="keyword">for</span> ri <span class="keyword">in</span> r &#123;</span><br><span class="line">                    <span class="keyword">let</span> n = <span class="type">TreeNode</span>(i)</span><br><span class="line">                    n.<span class="keyword">left</span> = li</span><br><span class="line">                    n.<span class="keyword">right</span> = ri</span><br><span class="line">                    tn.append(n)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> tn</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Recursion 2</title>
    <url>/pt/LeetCode-Recursion-2/</url>
    <content><![CDATA[<h2 id="Classificar-uma-matriz"><a href="#Classificar-uma-matriz" class="headerlink" title="Classificar uma matriz"></a>Classificar uma matriz</h2><a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortArray</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> nums &#125;</span><br><span class="line">        <span class="keyword">let</span> i = nums.<span class="built_in">count</span>/<span class="number">2</span>, l = sortArray(<span class="type">Array</span>(nums[..&lt;i])), r = sortArray(<span class="type">Array</span>(nums[i...]))</span><br><span class="line">        <span class="keyword">return</span> merge(l, r)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(<span class="number">_</span> n1: [Int], <span class="number">_</span> n2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i1 = <span class="number">0</span>, i2 = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> arr = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> i1 &lt; n1.<span class="built_in">count</span>, i2 &lt; n2.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> n1[i1] &lt; n2[i2] &#123;</span><br><span class="line">                arr.append(n1[i1])</span><br><span class="line">                i1 += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                arr.append(n2[i2])</span><br><span class="line">                i2 += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i1 &lt; n1.<span class="built_in">count</span> &#123;</span><br><span class="line">            arr.append(n1[i1])</span><br><span class="line">            i1 += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i2 &lt; n2.<span class="built_in">count</span> &#123;</span><br><span class="line">            arr.append(n2[i2])</span><br><span class="line">            i2 += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Validar-arvore-de-pesquisa-binaria"><a href="#Validar-arvore-de-pesquisa-binaria" class="headerlink" title="Validar árvore de pesquisa binária"></a>Validar árvore de pesquisa binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidBST</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">max</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> node: TreeNode?, <span class="number">_</span> lower: Int, <span class="number">_</span> upper: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> n = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> n.val &lt;= lower || n.val &gt;= upper &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper(n.<span class="keyword">left</span>, lower, n.val) &amp;&amp; helper(n.<span class="keyword">right</span>, n.val, upper)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Pesquisar-uma-matriz-2D-II"><a href="#Pesquisar-uma-matriz-2D-II" class="headerlink" title="Pesquisar uma matriz 2D II"></a>Pesquisar uma matriz 2D II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchMatrix</span><span class="params">(<span class="number">_</span> matrix: [[Int]], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> n = matrix.<span class="built_in">count</span>-<span class="number">1</span>, m = matrix.first?.<span class="built_in">count</span> ?? <span class="number">0</span>; <span class="keyword">var</span> i = n, j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span> &amp;&amp; j &lt; m &#123;</span><br><span class="line">            <span class="keyword">if</span> target &gt; matrix[i][j] &#123;</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> target &lt; matrix[i][j] &#123;</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="N-Queens-II"><a href="#N-Queens-II" class="headerlink" title="N-Queens II"></a>N-Queens II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">totalNQueens</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">1</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(n-<span class="number">1</span>, <span class="type">Array</span>(repeating: <span class="type">Array</span>(repeating: <span class="number">1</span>, <span class="built_in">count</span>: n), <span class="built_in">count</span>: n)).<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> i: Int, <span class="number">_</span> board: [[Int]])</span></span> -&gt; [[[<span class="type">Int</span>]]] &#123;</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span> &#123; <span class="keyword">return</span> put(i, board) &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(i-<span class="number">1</span>, board).<span class="built_in">reduce</span>( [[[<span class="type">Int</span>]]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> i: Int, <span class="number">_</span> board: [[Int]])</span></span> -&gt; [[[<span class="type">Int</span>]]] &#123;</span><br><span class="line">        <span class="keyword">var</span> boards = [[[<span class="type">Int</span>]]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;board.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> board[i][j] == <span class="number">1</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> board = put((i,j), board)</span><br><span class="line">                boards.append(board)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> boards</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> p: <span class="params">(Int, Int)</span></span></span>, <span class="number">_</span> board: [[<span class="type">Int</span>]]) -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">let</span> n = board.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> board = board</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;n &#123; board[i][p.<span class="number">1</span>] = <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;n &#123; board[p.<span class="number">0</span>][j] = <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> p0 = p.<span class="number">0</span>, p1 = p.<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> p0 &lt; n, p1 &lt; n, p0 &gt;= <span class="number">0</span>, p1 &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            board[p0][p1] = <span class="number">0</span></span><br><span class="line">            p0 += <span class="number">1</span>; p1 += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        p0 = p.<span class="number">0</span>; p1 = p.<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> p0 &lt; n, p1 &lt; n, p0 &gt;= <span class="number">0</span>, p1 &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            board[p0][p1] = <span class="number">0</span></span><br><span class="line">            p0 += <span class="number">1</span>; p1 -= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        board[p.<span class="number">0</span>][p.<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> board</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Robot-Room-Cleaner"><a href="#Robot-Room-Cleaner" class="headerlink" title="Robot Room Cleaner"></a>Robot Room Cleaner</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">cleanRoom</span><span class="params">(<span class="number">_</span> robot: Robot)</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> visited = <span class="type">Set</span>&lt;[<span class="type">Int</span>]&gt;()</span><br><span class="line">        <span class="keyword">let</span> directions = [[-<span class="number">1</span>,<span class="number">0</span>], [<span class="number">0</span>,<span class="number">1</span>], [<span class="number">1</span>,<span class="number">0</span>], [<span class="number">0</span>,-<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">backtrack</span><span class="params">(<span class="number">_</span> cell: [Int] = [<span class="number">0</span>,<span class="number">0</span>], <span class="number">_</span> d: Int = <span class="number">0</span>)</span></span> &#123;</span><br><span class="line">            <span class="function"><span class="keyword">func</span> <span class="title">goBack</span><span class="params">()</span></span> &#123;</span><br><span class="line">                <span class="function"><span class="keyword">func</span> <span class="title">uTurn</span><span class="params">()</span></span> &#123; robot.turnRight(); robot.turnRight() &#125;</span><br><span class="line">                uTurn(); robot.move(); uTurn()</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            visited.insert(cell)</span><br><span class="line">            robot.clean()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">4</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> d = (d+i)%<span class="number">4</span>, cell = [cell[<span class="number">0</span>]+directions[d][<span class="number">0</span>], cell[<span class="number">1</span>]+directions[d][<span class="number">1</span>]]</span><br><span class="line">                <span class="keyword">if</span> !visited.<span class="built_in">contains</span>(cell) &amp;&amp; robot.move() &#123;</span><br><span class="line">                    backtrack(cell, d)</span><br><span class="line">                    goBack()</span><br><span class="line">                &#125;</span><br><span class="line">                robot.turnRight()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        backtrack()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Sudoku-Solver"><a href="#Sudoku-Solver" class="headerlink" title="Sudoku Solver"></a>Sudoku Solver</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">solveSudoku</span><span class="params">(<span class="number">_</span> board: <span class="keyword">inout</span> [[Character]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> chars: [<span class="type">Character</span>] = [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>,<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;7&quot;</span>,<span class="string">&quot;8&quot;</span>,<span class="string">&quot;9&quot;</span>]</span><br><span class="line">        <span class="keyword">var</span> boxes = <span class="type">Array</span>(repeating: <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">3</span>), <span class="built_in">count</span>: <span class="number">3</span>),  rows = (<span class="number">0</span>..&lt;<span class="number">9</span>).<span class="built_in">map</span> &#123; <span class="type">Set</span>(board[$<span class="number">0</span>]) &#125;, cols = (<span class="number">0</span>..&lt;<span class="number">9</span>).<span class="built_in">map</span> &#123; i <span class="keyword">in</span> <span class="type">Set</span>( (<span class="number">0</span>..&lt;<span class="number">9</span>).<span class="built_in">map</span> &#123; j <span class="keyword">in</span> board[j][i] &#125; )&#125;</span><br><span class="line">        (<span class="number">0</span>..&lt;<span class="number">9</span>).forEach &#123; i <span class="keyword">in</span> (<span class="number">0</span>..&lt;<span class="number">9</span>).forEach &#123; j <span class="keyword">in</span> boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].insert(board[i][j]) &#125; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> <span class="built_in">c</span>: Character, <span class="number">_</span> i: Int, <span class="number">_</span> j: Int)</span></span> &#123;</span><br><span class="line">            board[i][j] = <span class="built_in">c</span>; rows[i].insert(<span class="built_in">c</span>); cols[j].insert(<span class="built_in">c</span>); boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].insert(<span class="built_in">c</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">restore</span><span class="params">(<span class="number">_</span> <span class="built_in">c</span>: Character, <span class="number">_</span> i: Int, <span class="number">_</span> j: Int)</span></span> &#123;</span><br><span class="line">            board[i][j] = <span class="string">&quot;.&quot;</span>; rows[i].remove(<span class="built_in">c</span>); cols[j].remove(<span class="built_in">c</span>); boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].remove(<span class="built_in">c</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">backtrack</span><span class="params">(<span class="number">_</span> k: Int = <span class="number">0</span>)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> i = k/<span class="number">9</span>, j = k%<span class="number">9</span></span><br><span class="line">            <span class="keyword">if</span> k &gt;= <span class="number">81</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> board[i][j] != <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">return</span> backtrack(k+<span class="number">1</span>) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">c</span> <span class="keyword">in</span> chars.<span class="built_in">filter</span>(&#123; !rows[i].<span class="built_in">contains</span>($<span class="number">0</span>) &amp;&amp; !cols[j].<span class="built_in">contains</span>($<span class="number">0</span>) &amp;&amp; !boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].<span class="built_in">contains</span>($<span class="number">0</span>) &#125;) &#123;</span><br><span class="line">                put(<span class="built_in">c</span>, i, j)</span><br><span class="line">                <span class="keyword">if</span> backtrack(k+<span class="number">1</span>) &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">                restore(<span class="built_in">c</span>, i, j)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        backtrack()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Combinacoes"><a href="#Combinacoes" class="headerlink" title="Combinações"></a>Combinações</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">combine</span><span class="params">(<span class="number">_</span> n: Int, <span class="number">_</span> k: Int)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">if</span> k &gt; n &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">let</span> b = (k...n).<span class="built_in">map</span> &#123; [$<span class="number">0</span>] &#125;</span><br><span class="line">        <span class="keyword">if</span> k == <span class="number">1</span> &#123; <span class="keyword">return</span> b &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> a = combine(n-<span class="number">1</span>, k-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> a &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> b &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> last = i.last, <span class="keyword">let</span> first = j.first, last &lt; first &#123;</span><br><span class="line">                    ans.append(i + j)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Mesma-arvore"><a href="#Mesma-arvore" class="headerlink" title="Mesma árvore"></a>Mesma árvore</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isSameTree</span><span class="params">(<span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> p = p, <span class="keyword">let</span> q = q, p.val == q.val &#123;</span><br><span class="line">            <span class="keyword">return</span> isSameTree(p.<span class="keyword">left</span>, q.<span class="keyword">left</span>) &amp;&amp; isSameTree(p.<span class="keyword">right</span>, q.<span class="keyword">right</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p == <span class="literal">nil</span> &amp;&amp; q == <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Gerar-parenteses"><a href="#Gerar-parenteses" class="headerlink" title="Gerar parênteses"></a>Gerar parênteses</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateParenthesis</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">String</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">backtrack</span><span class="params">(<span class="number">_</span> s: String = <span class="string">&quot;&quot;</span>, <span class="number">_</span> l: Int = <span class="number">0</span>, <span class="number">_</span> r: Int = <span class="number">0</span>)</span></span> &#123;</span><br><span class="line">            <span class="keyword">if</span> s.<span class="built_in">count</span> == n*<span class="number">2</span> &#123;</span><br><span class="line">                ans.append(s); <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> l &lt; n &#123; backtrack(s+<span class="string">&quot;(&quot;</span>, l+<span class="number">1</span>, r) &#125;</span><br><span class="line">            <span class="keyword">if</span> r &lt; l &#123; backtrack(s+<span class="string">&quot;)&quot;</span>, l, r+<span class="number">1</span>) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        backtrack()</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Traversal-da-ordem-da-arvore-binaria"><a href="#Traversal-da-ordem-da-arvore-binaria" class="headerlink" title="Traversal da ordem da árvore binária"></a>Traversal da ordem da árvore binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// iteratively</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">inorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> || !stack.isEmpty &#123;</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">let</span> l = p &#123;</span><br><span class="line">                stack.append(l)</span><br><span class="line">                p = l.<span class="keyword">left</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> n = stack.popLast() &#123;</span><br><span class="line">                ans.append(n.val)</span><br><span class="line">                p = n.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Transversal-de-ordem-de-nivel-de-arvore-binaria"><a href="#Transversal-de-ordem-de-nivel-de-arvore-binaria" class="headerlink" title="Transversal de ordem de nível de árvore binária"></a>Transversal de ordem de nível de árvore binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        helper(root, <span class="number">0</span>, &amp;ans)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> level: Int, <span class="number">_</span> ans: <span class="keyword">inout</span> [[Int]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> level &gt;= ans.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans.append( [root.val] )</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ans[level].append(root.val)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        helper(root.<span class="keyword">left</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">        helper(root.<span class="keyword">right</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Converter-arvore-de-pesquisa-binaria-em-lista-duplamente-vinculada-classificada"><a href="#Converter-arvore-de-pesquisa-binaria-em-lista-duplamente-vinculada-classificada" class="headerlink" title="Converter árvore de pesquisa binária em lista duplamente vinculada classificada"></a>Converter árvore de pesquisa binária em lista duplamente vinculada classificada</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">treeToDoublyList</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> first: <span class="type">Node?</span>, last: <span class="type">Node?</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> cur = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            helper(cur.<span class="keyword">left</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> last = last &#123;</span><br><span class="line">                last.<span class="keyword">right</span> = cur</span><br><span class="line">                cur.<span class="keyword">left</span> = last</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                first = cur</span><br><span class="line">            &#125;</span><br><span class="line">            last = cur</span><br><span class="line">            helper(cur.<span class="keyword">right</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        helper(root)</span><br><span class="line">        last?.<span class="keyword">right</span> = first</span><br><span class="line">        first?.<span class="keyword">left</span> = last</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> first</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="O-maior-retangulo-do-histograma"><a href="#O-maior-retangulo-do-histograma" class="headerlink" title="O maior retângulo do histograma"></a>O maior retângulo do histograma</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">largestRectangleArea</span><span class="params">(<span class="number">_</span> heights: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> i: Int, <span class="number">_</span> j: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> i &lt;= j <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">            <span class="keyword">var</span> index = <span class="number">0</span>, v = <span class="type">Int</span>.<span class="built_in">max</span></span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> i...j &#123;</span><br><span class="line">                <span class="keyword">if</span> heights[k] &lt; v &#123; index = k; v = heights[k] &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">max</span>(v*(j-i+<span class="number">1</span>), helper(i, index-<span class="number">1</span>), helper(index+<span class="number">1</span>, j))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(<span class="number">0</span>, heights.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Permutacoes"><a href="#Permutacoes" class="headerlink" title="Permutações"></a>Permutações</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">permute</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> [nums] &#125;</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> arr = nums; arr.remove(at: i)</span><br><span class="line">            ans += permute(arr).<span class="built_in">map</span> &#123; [nums[i]] + $<span class="number">0</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Combinacoes-de-letras-de-um-numero-de-telefone"><a href="#Combinacoes-de-letras-de-um-numero-de-telefone" class="headerlink" title="Combinações de letras de um número de telefone"></a>Combinações de letras de um número de telefone</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">let</span> dict : [<span class="type">Character</span>: [<span class="type">String</span>]] = [<span class="string">&quot;2&quot;</span>:[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>],<span class="string">&quot;3&quot;</span>:[<span class="string">&quot;d&quot;</span>,<span class="string">&quot;e&quot;</span>,<span class="string">&quot;f&quot;</span>],<span class="string">&quot;4&quot;</span>:[<span class="string">&quot;g&quot;</span>,<span class="string">&quot;h&quot;</span>,<span class="string">&quot;i&quot;</span>],<span class="string">&quot;5&quot;</span>:[<span class="string">&quot;j&quot;</span>,<span class="string">&quot;k&quot;</span>,<span class="string">&quot;l&quot;</span>],<span class="string">&quot;6&quot;</span>:[<span class="string">&quot;m&quot;</span>,<span class="string">&quot;n&quot;</span>,<span class="string">&quot;o&quot;</span>],<span class="string">&quot;7&quot;</span>:[<span class="string">&quot;p&quot;</span>,<span class="string">&quot;q&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="string">&quot;s&quot;</span>],<span class="string">&quot;8&quot;</span>:[<span class="string">&quot;t&quot;</span>,<span class="string">&quot;u&quot;</span>,<span class="string">&quot;v&quot;</span>],<span class="string">&quot;9&quot;</span>:[<span class="string">&quot;w&quot;</span>,<span class="string">&quot;x&quot;</span>,<span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">letterCombinations</span><span class="params">(<span class="number">_</span> digits: String)</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> digits.isEmpty ? [] : digits.<span class="built_in">reduce</span>([<span class="string">&quot;&quot;</span>]) &#123; (ans, digit) <span class="keyword">in</span></span><br><span class="line">            ans.flatMap &#123; s <span class="keyword">in</span> dict[digit, <span class="keyword">default</span>: [<span class="string">&quot;&quot;</span>]].<span class="built_in">map</span> &#123; <span class="built_in">c</span> <span class="keyword">in</span> s + <span class="built_in">c</span> &#125; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="O-problema-do-horizonte"><a href="#O-problema-do-horizonte" class="headerlink" title="O problema do horizonte"></a>O problema do horizonte</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getSkyline</span><span class="params">(<span class="number">_</span> buildings: [[Int]])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">let</span> n = buildings.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">0</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> [[buildings[<span class="number">0</span>][<span class="number">0</span>], buildings[<span class="number">0</span>][<span class="number">2</span>]], [buildings[<span class="number">0</span>][<span class="number">1</span>], <span class="number">0</span>]]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> l = getSkyline(<span class="type">Array</span>(buildings[..&lt;(n/<span class="number">2</span>)]))</span><br><span class="line">        <span class="keyword">let</span> r = getSkyline(<span class="type">Array</span>(buildings[(n/<span class="number">2</span>)...]))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> merge(l, r)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(<span class="number">_</span> l: [[Int]], <span class="number">_</span> r: [[Int]])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">let</span> ln = l.<span class="built_in">count</span>, rn = r.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> lp = <span class="number">0</span>, rp = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> curY = <span class="number">0</span>, lY = <span class="number">0</span>, rY = <span class="number">0</span> , output = [[<span class="type">Int</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">update</span><span class="params">(<span class="number">_</span> x: Int, <span class="number">_</span> y: Int)</span></span> &#123;</span><br><span class="line">            <span class="keyword">if</span> output.isEmpty || output.last?.first != x &#123;</span><br><span class="line">                output.append([x, y])</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                output[output.<span class="built_in">count</span>-<span class="number">1</span>][<span class="number">1</span>] = y</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">append</span><span class="params">(<span class="number">_</span> p: Int, <span class="number">_</span> lst: [[Int]], <span class="number">_</span> n: Int, <span class="number">_</span> curY: Int)</span></span> &#123;</span><br><span class="line">            <span class="keyword">var</span> p = p, curY = curY</span><br><span class="line">            <span class="keyword">while</span> p &lt; n &#123;</span><br><span class="line">                <span class="keyword">let</span> (x, y) = (lst[p][<span class="number">0</span>], lst[p][<span class="number">1</span>])</span><br><span class="line">                p += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> curY != y &#123;</span><br><span class="line">                    update(x, y)</span><br><span class="line">                    curY = y</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> lp &lt; ln &amp;&amp; rp &lt; rn &#123;</span><br><span class="line">            <span class="keyword">let</span> lPoint = l[lp], rPoint = r[rp]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> x = <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> lPoint[<span class="number">0</span>] &lt; rPoint[<span class="number">0</span>] &#123;</span><br><span class="line">                (x, lY) = (lPoint[<span class="number">0</span>], lPoint[<span class="number">1</span>])</span><br><span class="line">                lp += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                (x, rY) = (rPoint[<span class="number">0</span>], rPoint[<span class="number">1</span>])</span><br><span class="line">                rp += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> maxY = <span class="built_in">max</span>(lY, rY)</span><br><span class="line">            <span class="keyword">if</span> curY != maxY &#123;</span><br><span class="line">                update(x, maxY)</span><br><span class="line">                curY = maxY</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        append(lp, l, ln, curY)</span><br><span class="line">        append(rp, r, rn, curY)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Pesquisa binária LeetCode</title>
    <url>/pt/LeetCode-Binary-Search/</url>
    <content><![CDATA[<h2 id="Pesquisa-Binaria"><a href="#Pesquisa-Binaria" class="headerlink" title="Pesquisa Binária"></a>Pesquisa Binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123; i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; j = mid-<span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="Sqrt-x"><a href="#Sqrt-x" class="headerlink" title="Sqrt (x)"></a>Sqrt (x)</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mySqrt</span><span class="params">(<span class="number">_</span> x: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> target = <span class="type">Int</span>(sqrt(<span class="type">Double</span>(x)))</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = x</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> mid == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            mid &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Estimativa-de-numero-maior-ou-menor"><a href="#Estimativa-de-numero-maior-ou-menor" class="headerlink" title="Estimativa de número maior ou menor"></a>Estimativa de número maior ou menor</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> : <span class="title">GuessGame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">guessNumber</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">switch</span> guess(mid) &#123;</span><br><span class="line">                <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">                    j = mid-<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    i = mid+<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> mid</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Pesquisa-em-matriz-ordenada-girada"><a href="#Pesquisa-em-matriz-ordenada-girada" class="headerlink" title="Pesquisa em matriz ordenada girada"></a>Pesquisa em matriz ordenada girada</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j - i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &gt;= nums[i] &#123;</span><br><span class="line">                (target &gt;= nums[i] &amp;&amp; target &lt; nums[mid]) ? (j = mid-<span class="number">1</span>) : (i = mid+<span class="number">1</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                (target &lt;= nums[j] &amp;&amp; target &gt; nums[mid]) ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Primeira-versao-ruim"><a href="#Primeira-versao-ruim" class="headerlink" title="Primeira versão ruim"></a>Primeira versão ruim</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>: <span class="title">VersionControl</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">firstBadVersion</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> h = i + (j-i)/<span class="number">2</span></span><br><span class="line">            isBadVersion(h) ? (j = h-<span class="number">1</span>) : (i = h + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Encontre-o-elemento-de-pico"><a href="#Encontre-o-elemento-de-pico" class="headerlink" title="Encontre o elemento de pico"></a>Encontre o elemento de pico</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[mid+<span class="number">1</span>] ? (r = mid) : (l = mid+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> l: Int, <span class="number">_</span> r: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (l == r) &#123; <span class="keyword">return</span> l &#125;</span><br><span class="line">            <span class="keyword">let</span> mid = l + (r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> (nums[mid] &gt; nums[mid+<span class="number">1</span>]) ? search(l, mid) : search(mid+<span class="number">1</span>, r)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> search(<span class="number">0</span>, nums.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Encontre-o-minimo-na-matriz-classificada-girada"><a href="#Encontre-o-minimo-na-matriz-classificada-girada" class="headerlink" title="Encontre o mínimo na matriz classificada girada"></a>Encontre o mínimo na matriz classificada girada</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Pesquise-um-intervalo"><a href="#Pesquise-um-intervalo" class="headerlink" title="Pesquise um intervalo"></a>Pesquise um intervalo</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchRange</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> [-<span class="number">1</span>, -<span class="number">1</span>] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                i = mid; j = mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123;</span><br><span class="line">                i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                j = mid-<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i-<span class="number">1</span> &gt;= <span class="number">0</span>, nums[i-<span class="number">1</span>] == target &#123; i -= <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j+<span class="number">1</span> &lt; nums.<span class="built_in">count</span>, nums[j+<span class="number">1</span>] == target &#123; j += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i] == target ? [i, j] : [-<span class="number">1</span>, -<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Encontre-K-os-elementos-mais-proximos"><a href="#Encontre-K-os-elementos-mais-proximos" class="headerlink" title="Encontre K os elementos mais próximos"></a>Encontre K os elementos mais próximos</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findClosestElements</span><span class="params">(<span class="number">_</span> arr: [Int], <span class="number">_</span> k: Int, <span class="number">_</span> x: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.isEmpty &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = arr.<span class="built_in">count</span>, ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> arr[mid] == x &#123; i = mid &#125;</span><br><span class="line">            arr[mid] &lt; x ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        j = i+k &lt; arr.<span class="built_in">count</span> ? i+k : arr.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        i = (i-k) &gt;= <span class="number">0</span> ? (i-k) : <span class="number">0</span></span><br><span class="line">        ans = <span class="type">Array</span>(arr[i...j])</span><br><span class="line">        <span class="keyword">while</span> ans.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">            <span class="built_in">abs</span>(x-ans.first!) &lt;= <span class="built_in">abs</span>(x-ans.last!) ? ans.removeLast() : ans.removeFirst()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Valor-da-arvore-de-pesquisa-binaria-mais-proxima"><a href="#Valor-da-arvore-de-pesquisa-binaria-mais-proxima" class="headerlink" title="Valor da árvore de pesquisa binária mais próxima"></a>Valor da árvore de pesquisa binária mais próxima</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">closestValue</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> target: Double)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = root, v = p!.val</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">abs</span>(<span class="type">Double</span>(p!.val)-target) &lt; <span class="built_in">abs</span>(<span class="type">Double</span>(v)-target) &#123; v = p!.val &#125;</span><br><span class="line">            p = target &lt; <span class="type">Double</span>(p!.val) ? p!.<span class="keyword">left</span> : p!.<span class="keyword">right</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Pesquisa-em-uma-matriz-classificada-de-tamanho-desconhecido"><a href="#Pesquisa-em-uma-matriz-classificada-de-tamanho-desconhecido" class="headerlink" title="Pesquisa em uma matriz classificada de tamanho desconhecido"></a>Pesquisa em uma matriz classificada de tamanho desconhecido</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> reader: ArrayReader, <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> reader.<span class="keyword">get</span>(<span class="number">0</span>) == target &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> reader.<span class="keyword">get</span>(j) &lt; target &#123;</span><br><span class="line">            i = j; j &lt;&lt;= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)&gt;&gt;<span class="number">1</span>, v = reader.<span class="keyword">get</span>(mid)</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            v &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Pow-x-n"><a href="#Pow-x-n" class="headerlink" title="Pow (x, n)"></a>Pow (x, n)</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">myPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="number">0</span>: <span class="number">1.0</span>, <span class="number">1</span>: x]</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">fastPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n] &#123; <span class="keyword">return</span> v &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> h = fastPow(x, n/<span class="number">2</span>), v = n&amp;<span class="number">1</span> == <span class="number">0</span> ? h*h : x*h*h</span><br><span class="line">            dict[n] = v</span><br><span class="line">            <span class="keyword">return</span> v</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> v = fastPow(x, <span class="built_in">abs</span>(n))</span><br><span class="line">        <span class="keyword">return</span> n &lt; <span class="number">0</span> ? <span class="number">1</span>/v : v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Quadrado-Perfeito-Valido"><a href="#Quadrado-Perfeito-Valido" class="headerlink" title="Quadrado Perfeito Válido"></a>Quadrado Perfeito Válido</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isPerfectSquare</span><span class="params">(<span class="number">_</span> num: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> x = (num+<span class="number">1</span>)/<span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> x*x &gt; num &#123;</span><br><span class="line">            x = (x + num/x) / <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> x*x == num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Encontre-a-menor-letra-maior-que-o-alvo"><a href="#Encontre-a-menor-letra-maior-que-o-alvo" class="headerlink" title="Encontre a menor letra maior que o alvo"></a>Encontre a menor letra maior que o alvo</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">nextGreatestLetter</span><span class="params">(<span class="number">_</span> letters: [Character], <span class="number">_</span> target: Character)</span></span> -&gt; <span class="type">Character</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">c</span> <span class="keyword">in</span> letters &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">c</span> &gt; target &#123; <span class="keyword">return</span> <span class="built_in">c</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> letters.first!</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Encontre-o-minimo-na-matriz-classificada-girada-1"><a href="#Encontre-o-minimo-na-matriz-classificada-girada-1" class="headerlink" title="Encontre o mínimo na matriz classificada girada"></a>Encontre o mínimo na matriz classificada girada</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            nums[mid] &gt;= nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Encontre-o-minimo-em-Matriz-Classificada-Rotacionada-II"><a href="#Encontre-o-minimo-em-Matriz-Classificada-Rotacionada-II" class="headerlink" title="Encontre o mínimo em Matriz Classificada Rotacionada II"></a>Encontre o mínimo em Matriz Classificada Rotacionada II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] &gt; nums[r] &#123; l = mid+<span class="number">1</span> &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; nums[r]  &#123; r = mid &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123; r -= <span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Interseccao-de-duas-matrizes"><a href="#Interseccao-de-duas-matrizes" class="headerlink" title="Intersecção de duas matrizes"></a>Intersecção de duas matrizes</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Interseccao-de-duas-matrizes-II"><a href="#Interseccao-de-duas-matrizes-II" class="headerlink" title="Intersecção de duas matrizes II"></a>Intersecção de duas matrizes II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Two-Sum-II-A-matriz-de-entrada-e-classificada"><a href="#Two-Sum-II-A-matriz-de-entrada-e-classificada" class="headerlink" title="Two Sum II - A matriz de entrada é classificada"></a>Two Sum II - A matriz de entrada é classificada</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(<span class="number">_</span> numbers: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = numbers.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> v =  numbers[i]+numbers[j]</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            v &lt; target ? (i+=<span class="number">1</span>) : (j-=<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> [i+<span class="number">1</span>, j+<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Encontre-o-numero-duplicado"><a href="#Encontre-o-numero-duplicado" class="headerlink" title="Encontre o número duplicado"></a>Encontre o número duplicado</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;(), i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(nums[i]) &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(nums[i]); i+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Mediana-de-duas-matrizes-classificadas"><a href="#Mediana-de-duas-matrizes-classificadas" class="headerlink" title="Mediana de duas matrizes classificadas"></a>Mediana de duas matrizes classificadas</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> nums = nums1+nums2</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span>, j &lt; nums2.<span class="built_in">count</span> &#123;</span><br><span class="line">            nums1[i] &lt; nums2[j] ? (nums[k] = nums1[i], i+=<span class="number">1</span>) : (nums[k] = nums2[j], j+=<span class="number">1</span>); k+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span> &#123; nums[k] = nums1[i]; i+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j &lt; nums2.<span class="built_in">count</span> &#123; nums[k] = nums2[j]; j+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> h = nums.<span class="built_in">count</span>/<span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">count</span>&amp;<span class="number">1</span> == <span class="number">1</span> ? <span class="type">Double</span>(nums[h]) : <span class="type">Double</span>(nums[h-<span class="number">1</span>]+nums[h])/<span class="number">2.0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Encontre-K-th-menor-distancia-de-par"><a href="#Encontre-K-th-menor-distancia-de-par" class="headerlink" title="Encontre K-th menor distância de par"></a>Encontre K-th menor distância de par</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">smallestDistancePair</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> nums = nums.sorted()</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, h = nums.last!-nums.first!</span><br><span class="line">        <span class="keyword">while</span> l &lt; h &#123;</span><br><span class="line">            <span class="keyword">let</span> m = (l+h)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span>, l1 = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> r1 <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (nums[r1]-nums[l1]) &gt; m &#123; l1 += <span class="number">1</span> &#125;</span><br><span class="line">                <span class="built_in">count</span> += r1-l1</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">count</span> &gt;= k ? (h = m): (l = m+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Maior-soma-de-matriz-de-divisao"><a href="#Maior-soma-de-matriz-de-divisao" class="headerlink" title="Maior soma de matriz de divisão"></a>Maior soma de matriz de divisão</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode N-áry Tree</title>
    <url>/pt/leetcode-n-ary-tree/</url>
    <content><![CDATA[<h2 id="Traversal-de-encomenda-de-arvore-n-aria"><a href="#Traversal-de-encomenda-de-arvore-n-aria" class="headerlink" title="Traversal de encomenda de árvore n-ária"></a>Traversal de encomenda de árvore n-ária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    	<span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children.reversed()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="N-and-Tree-Postorder-Traversal"><a href="#N-and-Tree-Postorder-Traversal" class="headerlink" title="N-and Tree Postorder Traversal"></a>N-and Tree Postorder Traversal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">postorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    	<span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans.reversed()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Cruzamento-de-ordem-de-nivel-de-arvore-n-aria"><a href="#Cruzamento-de-ordem-de-nivel-de-arvore-n-aria" class="headerlink" title="Cruzamento de ordem de nível de árvore n-ária"></a>Cruzamento de ordem de nível de árvore n-ária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> cur = [root], ans = [[root.val]]</span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            <span class="keyword">let</span> children = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            <span class="keyword">if</span> !children.isEmpty &#123; ans.append( children.<span class="built_in">map</span> &#123; $<span class="number">0</span>.val &#125; ) &#125;</span><br><span class="line">            cur = children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Profundidade-Maxima-da-Arvore-N-aria"><a href="#Profundidade-Maxima-da-Arvore-N-aria" class="headerlink" title="Profundidade Máxima da Árvore N-ária"></a>Profundidade Máxima da Árvore N-ária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> cur = root == <span class="literal">nil</span> ? [] : [root!], depth = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            cur = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            depth += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> depth</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Codificar-arvore-N-aria-em-arvore-binaria"><a href="#Codificar-arvore-N-aria-em-arvore-binaria" class="headerlink" title="Codificar árvore N-ária em árvore binária"></a>Codificar árvore N-ária em árvore binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">encode</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> tn = <span class="type">TreeNode</span>(root.val); <span class="keyword">var</span> p: <span class="type">TreeNode?</span> = tn</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> n = root.children.first &#123;</span><br><span class="line">            p?.<span class="keyword">left</span> = encode(n); p = p?.<span class="keyword">left</span></span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> root.children[<span class="number">1</span>...] &#123;</span><br><span class="line">                p?.<span class="keyword">right</span> = encode(n); p = p?.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tn</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">decode</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = <span class="type">Node</span>(root.val); <span class="keyword">var</span> p = root.<span class="keyword">left</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> l = decode(p) &#123; n.children.append(l) &#125;</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> q = p?.<span class="keyword">right</span>, <span class="keyword">let</span> r = decode(q) &#123;</span><br><span class="line">            n.children.append(r); p = q</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Serializar-e-desserializar-arvore-N-aria"><a href="#Serializar-e-desserializar-arvore-N-aria" class="headerlink" title="Serializar e desserializar árvore N-ária"></a>Serializar e desserializar árvore N-ária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">serialize</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="string">&quot;$&quot;</span> &#125;</span><br><span class="line">    	<span class="keyword">var</span> s = <span class="string">&quot;\(root.val),\(root.children.count),&quot;</span></span><br><span class="line">        <span class="keyword">for</span> child <span class="keyword">in</span> root.children &#123;</span><br><span class="line">            s += serialize(child)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">(<span class="number">_</span> data: String)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> arr = data.components(separatedBy: <span class="string">&quot;,&quot;</span>).<span class="built_in">compactMap</span> &#123; <span class="type">Int</span>($<span class="number">0</span>) &#125;; <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">()</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> i &gt;= arr.<span class="built_in">count</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">Node</span>(arr[i])</span><br><span class="line">            i += <span class="number">2</span>; <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;arr[i-<span class="number">1</span>] &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> a = deserialize() &#123; n.children.append(a) &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deserialize()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Árvore de pesquisa binária LeetCode</title>
    <url>/pt/LeetCode-Binary-Search-Tree/</url>
    <content><![CDATA[<h2 id="Verificar-arvore-de-pesquisa-binaria"><a href="#Verificar-arvore-de-pesquisa-binaria" class="headerlink" title="Verificar árvore de pesquisa binária"></a>Verificar árvore de pesquisa binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidBST</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">max</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> node: TreeNode?, <span class="number">_</span> lower: Int, <span class="number">_</span> upper: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> n = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> n.val &lt;= lower || n.val &gt;= upper &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper(n.<span class="keyword">left</span>, lower, n.val) &amp;&amp; helper(n.<span class="keyword">right</span>, n.val, upper)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Iterador-de-arvore-de-pesquisa-binaria"><a href="#Iterador-de-arvore-de-pesquisa-binaria" class="headerlink" title="Iterador de árvore de pesquisa binária"></a>Iterador de árvore de pesquisa binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BSTIterator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> queue = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        helper(root.<span class="keyword">left</span>)</span><br><span class="line">        queue.append(root.val)</span><br><span class="line">        helper(root.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> root: <span class="type">TreeNode?</span>) &#123;</span><br><span class="line">        helper(root)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">next</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> queue.removeFirst()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasNext</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !queue.isEmpty</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Pesquisa-na-arvore-de-pesquisa-binaria"><a href="#Pesquisa-na-arvore-de-pesquisa-binaria" class="headerlink" title="Pesquisa na árvore de pesquisa binária"></a>Pesquisa na árvore de pesquisa binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == val &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">left</span>, val)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">right</span>, val)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Inserir-operacao-na-arvore-de-pesquisa-binaria"><a href="#Inserir-operacao-na-arvore-de-pesquisa-binaria" class="headerlink" title="Inserir operação na árvore de pesquisa binária"></a>Inserir operação na árvore de pesquisa binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insertIntoBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> root: TreeNode? = root, <span class="number">_</span> val: Int = val)</span></span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> l = root.<span class="keyword">left</span> &#123;</span><br><span class="line">                    insert(l, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">left</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> r = root.<span class="keyword">right</span> &#123;</span><br><span class="line">                    insert(r, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">right</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        insert()</span><br><span class="line">        <span class="keyword">return</span> root ?? <span class="type">TreeNode</span>(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Exclua-o-no-na-arvore-de-pesquisa-binaria"><a href="#Exclua-o-no-na-arvore-de-pesquisa-binaria" class="headerlink" title="Exclua o nó na árvore de pesquisa binária"></a>Exclua o nó na árvore de pesquisa binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deleteNode</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == key &#123;</span><br><span class="line">            <span class="keyword">if</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> != <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> p = root.<span class="keyword">right</span></span><br><span class="line">                <span class="keyword">while</span> p?.<span class="keyword">left</span> != <span class="literal">nil</span> &#123;  p = p?.<span class="keyword">left</span> &#125;</span><br><span class="line">                p?.<span class="keyword">left</span> = root.<span class="keyword">left</span></span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">right</span></span><br><span class="line">            &#125; <span class="keyword">else</span>  &#123;</span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> ? root.<span class="keyword">left</span> : root.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> key &lt; root.val &#123;</span><br><span class="line">            root.<span class="keyword">left</span> = deleteNode(root.<span class="keyword">left</span>, key)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            root.<span class="keyword">right</span> = deleteNode(root.<span class="keyword">right</span>, key)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="O-Kº-maior-elemento-no-fluxo-de-dados"><a href="#O-Kº-maior-elemento-no-fluxo-de-dados" class="headerlink" title="O Kº maior elemento no fluxo de dados"></a>O Kº maior elemento no fluxo de dados</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KthLargest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">var</span> k = <span class="number">0</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> k: <span class="type">Int</span>, <span class="number">_</span> nums: [<span class="type">Int</span>]) &#123;</span><br><span class="line">        <span class="keyword">self</span>.k = k</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123; add(i) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.<span class="built_in">count</span> &lt; k || val &gt; arr.first! &#123;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> i &lt; arr.<span class="built_in">count</span>, val &gt; arr[i] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            arr.insert(val, at: i)</span><br><span class="line">            <span class="keyword">if</span> arr.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">                arr.removeFirst()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr.first!</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Ancestral-comum-mais-proximo-da-arvore-de-pesquisa-binaria"><a href="#Ancestral-comum-mais-proximo-da-arvore-de-pesquisa-binaria" class="headerlink" title="Ancestral comum mais próximo da árvore de pesquisa binária"></a>Ancestral comum mais próximo da árvore de pesquisa binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">lowestCommonAncestor</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root, <span class="keyword">let</span> pv = p?.val, <span class="keyword">let</span> qv = q?.val <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val &gt;= <span class="built_in">min</span>(pv, qv) &amp;&amp; root.val &lt;= <span class="built_in">max</span>(pv, qv) &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">return</span> root.val &gt; <span class="built_in">max</span>(pv, qv) ? lowestCommonAncestor(root.<span class="keyword">left</span>, p, q) : lowestCommonAncestor(root.<span class="keyword">right</span>, p, q)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Existem-elementos-duplicados-III"><a href="#Existem-elementos-duplicados-III" class="headerlink" title="Existem elementos duplicados III"></a>Existem elementos duplicados III</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Arvore-binaria-balanceada"><a href="#Arvore-binaria-balanceada" class="headerlink" title="Árvore binária balanceada"></a>Árvore binária balanceada</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isBalanced</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root).<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; (<span class="type">Int</span>, <span class="type">Bool</span>) &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> r = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> (<span class="number">0</span>, <span class="literal">true</span>) &#125;</span><br><span class="line">        <span class="keyword">let</span> rl = helper(r.<span class="keyword">left</span>), rr = helper(r.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span> + <span class="built_in">max</span>(rl.<span class="number">0</span>, rr.<span class="number">0</span>), rl.<span class="number">1</span> &amp;&amp; rr.<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(rl.<span class="number">0</span> - rr.<span class="number">0</span>) &lt;= <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Converte-uma-matriz-ordenada-em-uma-arvore-de-pesquisa-binaria"><a href="#Converte-uma-matriz-ordenada-em-uma-arvore-de-pesquisa-binaria" class="headerlink" title="Converte uma matriz ordenada em uma árvore de pesquisa binária"></a>Converte uma matriz ordenada em uma árvore de pesquisa binária</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortedArrayToBST</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = nums.<span class="built_in">count</span>, h = n/<span class="number">2</span>, h1 = h+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> r = <span class="type">TreeNode</span>(nums[n/<span class="number">2</span>])</span><br><span class="line">        r.<span class="keyword">left</span> = sortedArrayToBST(<span class="type">Array</span>(nums[<span class="number">0</span>..&lt;h]))</span><br><span class="line">        r.<span class="keyword">right</span> = sortedArrayToBST(<span class="type">Array</span>(nums[h1...]))</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Tabela Hash LeetCode</title>
    <url>/pt/LeetCode-Hash-Table/</url>
    <content><![CDATA[<h2 id="Design-HashSet"><a href="#Design-HashSet" class="headerlink" title="Design HashSet"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashSet">Design HashSet</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: <span class="literal">false</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">         bucket[key] = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">contains</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="Design-HashMap"><a href="#Design-HashMap" class="headerlink" title="Design HashMap"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashMap">Design HashMap</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashMap</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: -<span class="number">1</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> key: Int, <span class="number">_</span> value: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">get</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Contem-duplicado"><a href="#Contem-duplicado" class="headerlink" title="Contém duplicado"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate">Contém duplicado</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(i) &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(i)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Numero-unico"><a href="#Numero-unico" class="headerlink" title="Número único"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Single-Number">Número único</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">singleNumber</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> ^ $<span class="number">1</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Interseccao-de-duas-matrizes"><a href="#Interseccao-de-duas-matrizes" class="headerlink" title="Intersecção de duas matrizes"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-Arrays">Intersecção de duas matrizes</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Happy-Number"><a href="#Happy-Number" class="headerlink" title="Happy Number"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Happy-Number">Happy Number</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> setI = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isHappy</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = n, r = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &gt; <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> t = i%<span class="number">10</span></span><br><span class="line">            r += t*t</span><br><span class="line">            i /= <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> setI.<span class="built_in">contains</span>(r) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        setI.insert(r)</span><br><span class="line">        <span class="keyword">return</span> isHappy(r)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Soma-de-indice-minimo-de-duas-listas"><a href="#Soma-de-indice-minimo-de-duas-listas" class="headerlink" title="Soma de índice mínimo de duas listas"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Minimum-Index-Sum-of-Two-Lists">Soma de índice mínimo de duas listas</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 452 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict2 = [<span class="type">String</span>: <span class="type">Int</span>](), least = <span class="type">Int</span>.<span class="built_in">max</span>, arr = [<span class="type">String</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list2.<span class="built_in">count</span> &#123;</span><br><span class="line">            dict2[ list2[i] ] = i</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list1.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> j = dict2[ list1[i] ] &#123;</span><br><span class="line">                <span class="keyword">let</span> n = i+j</span><br><span class="line">                <span class="keyword">if</span> n &lt; least &#123;</span><br><span class="line">                    arr = [list1[i]]</span><br><span class="line">                    least = n</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> n == least &#123;</span><br><span class="line">                    arr.append(list1[i])</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2104 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> dict1 = list1.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict2 = list2.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict = <span class="type">Set</span>(dict1.keys).intersection(dict2.keys).<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>] = dict1[$<span class="number">1</span>]! + dict2[$<span class="number">1</span>]! &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value == dict.<span class="built_in">map</span>(&#123; $<span class="number">0</span>.value &#125;).<span class="built_in">min</span>()  &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.key &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Interseccao-de-duas-matrizes-II"><a href="#Interseccao-de-duas-matrizes-II" class="headerlink" title="Intersecção de duas matrizes II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-Arrays-II">Intersecção de duas matrizes II</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span>](), ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Contem-Duplicado-II"><a href="#Contem-Duplicado-II" class="headerlink" title="Contém Duplicado II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate-II">Contém Duplicado II</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsNearbyDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: [<span class="type">Int</span>]]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> n = nums[i]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> arr = dict[n] &#123;</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> arr &#123;</span><br><span class="line">                    <span class="keyword">if</span> i-j &lt;= k &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                dict[n] = arr + [i]</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dict[n] = [i]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Logger-Rate-Limiter"><a href="#Logger-Rate-Limiter" class="headerlink" title="Logger Rate Limiter"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Logger-Rate-Limiter">Logger Rate Limiter</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> logs = [<span class="type">String</span>: <span class="type">Int</span>]()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">shouldPrintMessage</span><span class="params">(<span class="number">_</span> timestamp: Int, <span class="number">_</span> message: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> lastTimestamp = logs[message], timestamp - lastTimestamp &lt; <span class="number">10</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        logs[message] = timestamp</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Group-Shifted-Strings"><a href="#Group-Shifted-Strings" class="headerlink" title="Group Shifted Strings"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Group-Shifted-Strings">Group Shifted Strings</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">groupStrings</span><span class="params">(<span class="number">_</span> strings: [String])</span></span> -&gt; [[<span class="type">String</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [[<span class="type">Int</span>]: [<span class="type">String</span>]]()</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> strings &#123;</span><br><span class="line">            <span class="keyword">let</span> arrS = <span class="type">Array</span>(s)</span><br><span class="line">            <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">1</span>..&lt;arrS.<span class="built_in">count</span>) &#123;</span><br><span class="line">                arr.append((<span class="type">Int</span>(arrS[i].asciiValue!)-<span class="type">Int</span>(arrS[i-<span class="number">1</span>].asciiValue!)+<span class="number">26</span>)%<span class="number">26</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            dict[arr, <span class="keyword">default</span>: []] += [s]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Sudoku-valido"><a href="#Sudoku-valido" class="headerlink" title="Sudoku válido"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Valid-Sudoku">Sudoku válido</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidSudoku</span><span class="params">(<span class="number">_</span> board: [[Character]])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[i].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[i].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[j].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[j].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> setC = <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;()</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                        <span class="keyword">let</span> <span class="built_in">c</span> = board[i*<span class="number">3</span>+k][j*<span class="number">3</span>+l]</span><br><span class="line">                        <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                        <span class="keyword">if</span> setC.<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            setC.insert(<span class="built_in">c</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Encontre-subarvores-duplicados"><a href="#Encontre-subarvores-duplicados" class="headerlink" title="Encontre subárvores duplicados"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Find-Duplicate-Subtrees">Encontre subárvores duplicados</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicateSubtrees</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        dfs(root)</span><br><span class="line">        <span class="keyword">return</span> nodeDict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value.<span class="number">1</span> &gt; <span class="number">1</span> &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value.<span class="number">0</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> nodeDict = [[<span class="type">Int?</span>]: (<span class="type">TreeNode</span>, <span class="type">Int</span>)]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">dfs</span><span class="params">(<span class="number">_</span> node: TreeNode?)</span></span> -&gt; [<span class="type">Int?</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> node = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> [<span class="literal">nil</span>] &#125;</span><br><span class="line">        <span class="keyword">let</span> key: [<span class="type">Int?</span>] = [node.val] + dfs(node.<span class="keyword">left</span>) + dfs(node.<span class="keyword">right</span>)</span><br><span class="line">        nodeDict[key, <span class="keyword">default</span>: (node, <span class="number">0</span>)].<span class="number">1</span> += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> key</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Joias-e-Pedras"><a href="#Joias-e-Pedras" class="headerlink" title="Jóias e Pedras"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Jewels-and-Stones">Jóias e Pedras</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">numJewelsInStones</span><span class="params">(<span class="number">_</span> J: String, <span class="number">_</span> S: String)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> j = <span class="type">Set</span>(<span class="type">J</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">S</span>.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + (j.<span class="built_in">contains</span>($<span class="number">1</span>) ? <span class="number">1</span> : <span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Substring-mais-longa-sem-caracteres-repetidos"><a href="#Substring-mais-longa-sem-caracteres-repetidos" class="headerlink" title="Substring mais longa sem caracteres repetidos"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Longest-Substring-Without-Repeating-Characters">Substring mais longa sem caracteres repetidos</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Two-Sum-III-Data-structure-design"><a href="#Two-Sum-III-Data-structure-design" class="headerlink" title="Two Sum III - Data structure design"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Two-Sum-III---Data-structure-design">Two Sum III - Data structure design</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TwoSum</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> numbers = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> number: Int)</span></span> &#123;</span><br><span class="line">        numbers[number, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">find</span><span class="params">(<span class="number">_</span> value: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (k, v) <span class="keyword">in</span> numbers &#123;</span><br><span class="line">            <span class="keyword">let</span> rest = value-k</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> num = numbers[rest], (num &gt; ((rest == k) ? <span class="number">1</span> : <span class="number">0</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4Sum-II"><a href="#4Sum-II" class="headerlink" title="4Sum II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#4Sum-II">4Sum II</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fourSumCount</span><span class="params">(<span class="number">_</span> A: [Int], <span class="number">_</span> B: [Int], <span class="number">_</span> C: [Int], <span class="number">_</span> D: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">0</span>, ab = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">A</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">B</span> &#123;</span><br><span class="line">                ab[i+j, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">C</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">D</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> v = ab[-i-j] &#123; num += v &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Top-K-Frequent-Elements"><a href="#Top-K-Frequent-Elements" class="headerlink" title="Top K Frequent Elements"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Top-K-Frequent-Elements">Top K Frequent Elements</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">topKFrequent</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(into: [<span class="type">Int</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span> &#125;.sorted(by: &#123;$<span class="number">0</span>.value &gt; $<span class="number">1</span>.value&#125;)[..&lt;k].<span class="built_in">map</span>&#123;$<span class="number">0</span>.key&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Abreviacao-de-palavra-unica"><a href="#Abreviacao-de-palavra-unica" class="headerlink" title="Abreviação de palavra única"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Unique-Word-Abbreviation">Abreviação de palavra única</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ValidWordAbbr</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> abbrDict = [<span class="type">String</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;]()</span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> dictionary: [<span class="type">String</span>]) &#123;</span><br><span class="line">        dictionary.forEach &#123; abbrDict[abbreviate($<span class="number">0</span>), <span class="keyword">default</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;()].insert($<span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isUnique</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> abbrSet = abbrDict[abbreviate(word)] &#123;</span><br><span class="line">            <span class="keyword">return</span> abbrSet.<span class="built_in">contains</span>(word) &amp;&amp; abbrSet.<span class="built_in">count</span> == <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">abbreviate</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> word.<span class="built_in">count</span> &lt; <span class="number">3</span> ? word : (<span class="type">String</span>(word.first!) + <span class="type">String</span>(word.<span class="built_in">count</span>-<span class="number">2</span>) + <span class="type">String</span>(word.last!))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Inserir-Excluir-GetRandom-O-1-lt-https-leihao0-github-io-LeetCode-Hash-Table-Insert-Delete-GetRandom-O-1-gt"><a href="#Inserir-Excluir-GetRandom-O-1-lt-https-leihao0-github-io-LeetCode-Hash-Table-Insert-Delete-GetRandom-O-1-gt" class="headerlink" title="[Inserir Excluir GetRandom O (1)](&lt;https://leihao0.github.io/LeetCode-Hash-Table/#Insert-Delete-GetRandom-O (1)&gt;)"></a>[Inserir Excluir GetRandom O (1)](&lt;<a href="https://leihao0.github.io/LeetCode-Hash-Table/#Insert-Delete-GetRandom-O">https://leihao0.github.io/LeetCode-Hash-Table/#Insert-Delete-GetRandom-O</a> (1)&gt;)</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 220 ms, 30.27%</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RandomizedSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> vals = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.insert(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> !vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.remove(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getRandom</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> vals.randomElement() ?? <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Como reduzir o armazenamento do iCloud diminuindo os vídeos</title>
    <url>/pt/How-to-reduce-iCloud-storage-by-shrink-videos/</url>
    <content><![CDATA[<p>Na verdade, subtrair clipes desnecessários de vídeo 4k pode economizar espaço de forma mais eficaz </p>
<hr>
<p>Quando faço a galeria de vídeos em “Fotos”, mostra quando e onde os tirei </p>
<p>Este é um ótimo recurso que pode me ajudar a relembrar minhas memórias<br>Mas o 4k original ocupa muito espaço no iCloud </p>
<p>Por exemplo, mesmo com HEVC (High Efficiency Video Coding), um vídeo de 2:30 ocupará 1 GB de espaço<br>Meu plano 200G iCloud está quase cheio </p>
<p>Portanto, pretendo compactar um pouco o vídeo para economizar espaço. </p>
<a id="more"></a>

<p>mas, </p>
<h2 id="FFmpeg-converte-video-mesmo-se-houver-metadados-GPS-sera-perdido"><a href="#FFmpeg-converte-video-mesmo-se-houver-metadados-GPS-sera-perdido" class="headerlink" title="FFmpeg converte vídeo, mesmo se houver metadados, GPS será perdido"></a>FFmpeg converte vídeo, mesmo se houver metadados, GPS será perdido</h2><p>Felizmente, encontrei uma maneira </p>
<h3 id="Ferramentas"><a href="#Ferramentas" class="headerlink" title="Ferramentas"></a>Ferramentas</h3><ul>
<li>FFmpeg </li>
<li>Exiftool </li>
</ul>
<h4 id="Exportar-video-original-para-pasta"><a href="#Exportar-video-original-para-pasta" class="headerlink" title="Exportar vídeo original para pasta"></a>Exportar vídeo original para pasta</h4><p>A maneira comum de arrastar um vídeo de “Foto” para uma pasta é deixar “Foto” converter o vídeo </p>
<p>Portanto, você deve selecionar todos os vídeos que deseja exportar, </p>
<p><code>Arquivo -&gt; Exportar -&gt; Exportar original não modificado para ...</code> </p>
<h4 id="Reduza-cada-video"><a href="#Reduza-cada-video" class="headerlink" title="Reduza cada vídeo"></a>Reduza cada vídeo</h4><p>A transmissão padrão do iPhone é </p>
<p><code># 0: 0 (e): Vídeo: hevc (principal) (hvc1 / 0x31637668), yuv420p (tv, bt709)</code> </p>
<p>Portanto, usar <code>-pix_fmt yuv420p10le</code> para recodificar para 10 bits não ajuda </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">ffmov</span></span>() &#123;</span><br><span class="line">    mkdir -p shrunk</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ffmpeg com h265 </span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v libx265 -crf 28 -c:a copy -c:s copy -tag:v hvc1 shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    overwriteExif <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># copiar informações Exif do vídeo original para o * .mov reduzido </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## percorrer todos os * .mov </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$f</span></span><br><span class="line">        ffmov <span class="variable">$f</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Então, você pode copiar e colar esses códigos em <code>Terminal</code> e<code>cd VideoFolder</code> e, em seguida, <code>shrinkVideos</code> </p>
<p>Encolher vai demorar muito </p>
<p>No meu MacBook Pro (15 polegadas, 2018), apenas 0,3 vezes<br>Mas geralmente, o vídeo será reduzido em 5 vezes sem perder muita qualidade </p>
<p>Quando tudo estiver pronto, o vídeo reduzido estará localizado na pasta <code>encolhido /</code> </p>
<p>Você pode então compará-los e excluir o vídeo original antes de importar o vídeo reduzido </p>
<p>Ok, no final eu não suporto a velocidade extremamente lenta, então eu uso a GPU Nvidia 1080 para aceleração para aprender mais: [CUDA GPU Accelerated h264 / h265 / HEVC Video Encoding with Staxrip](<a href="https://leihao0.github.io">https://leihao0.github.io</a> / CUDA-GPU-Accelerated-h264-h265-HEVC-Video-Encoding-with-Staxrip /) </p>
<p>A próxima etapa é marcar o vídeo convertido como <code>hvc1</code>, caso contrário, ocorrerá um erro ao importar as fotos: </p>
<p>** Inválido: a operação não pôde ser concluída. (PHPhotosErrorDomain error -1.) ** </p>
<p>Então, toda a etapa é </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">ffhvc1</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> -&gt; <span class="variable">$1</span>.mov&quot;</span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v copy -c:a copy -c:s copy -tag:v hvc1 <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>.mov -&gt; <span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm <span class="string">&quot;<span class="variable">$1</span>&quot;</span>; mv <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line">    <span class="comment"># copiar informações Exif do vídeo original para o * .mov reduzido </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## percorrer todos os * .mov </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">        ffhvc1 <span class="string">&quot;shrunk/<span class="variable">$f</span>&quot;</span></span><br><span class="line">        overwriteExif <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># use Staxrip para converter todos os vídeos para encolher </span></span><br><span class="line"><span class="comment"># em seguida, execute `shrinkVideos` </span></span><br></pre></td></tr></table></figure>

<hr>
<p>espero que ajude você </p>
]]></content>
      <tags>
        <tag>FFmpeg</tag>
        <tag>Exiftool</tag>
        <tag>iCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Dicas SwiftUI</title>
    <url>/pt/SwiftUI-Tips/</url>
    <content><![CDATA[<h2 id="Vinculando-a-UserDefaults"><a href="#Vinculando-a-UserDefaults" class="headerlink" title="Vinculando a UserDefaults"></a>Vinculando a UserDefaults</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UD</span>: <span class="title">ObservableObject</span> </span>&#123;</span><br><span class="line">    @<span class="type">Published</span> <span class="keyword">var</span> date: <span class="type">Date</span> = <span class="type">UserDefaults</span>.standard.value(forKey: <span class="string">&quot;date&quot;</span>) <span class="keyword">as</span>? <span class="type">Date</span> ?? <span class="type">Date</span>() &#123;</span><br><span class="line">        <span class="keyword">didSet</span> &#123;</span><br><span class="line">            <span class="type">UserDefaults</span>.standard.<span class="keyword">set</span>(<span class="keyword">self</span>.date, forKey: <span class="string">&quot;date&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="AppDelegate-gt-SceneDelegate"><a href="#AppDelegate-gt-SceneDelegate" class="headerlink" title="AppDelegate -&gt; SceneDelegate"></a>AppDelegate -&gt; SceneDelegate</h2><p>Muitos delegados mudaram de <code>AppDelegate.swift</code> para<code>SceneDelegate.swift</code> </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> app: UIApplication, <span class="keyword">open</span> url: URL, options: [UIApplication.OpenURLOptionsKey : <span class="keyword">Any</span>] = [:])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// to</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">scene</span><span class="params">(<span class="number">_</span> scene: UIScene, openURLContexts URLContexts: Set&lt;UIOpenURLContext&gt;)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="NavigationView-NavigationBarItems-NavigationLink"><a href="#NavigationView-NavigationBarItems-NavigationLink" class="headerlink" title="NavigationView, NavigationBarItems, NavigationLink"></a>NavigationView, NavigationBarItems, NavigationLink</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ContentView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">EnvironmentObject</span> <span class="keyword">var</span> ud: <span class="type">UD</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> url = <span class="string">&quot;Title:status?date=\(String(ud.firstDate.timeIntervalSince1970))&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                qrCodeImage(<span class="keyword">for</span>: url)!</span><br><span class="line"></span><br><span class="line">                <span class="type">Spacer</span>().frame(height: <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">                <span class="type">Text</span>(<span class="string">&quot;\(ud.firstDate)&quot;</span>)</span><br><span class="line">            &#125;.navigationBarTitle(<span class="string">&quot;Title&quot;</span>)</span><br><span class="line">                .navigationBarItems(trailing:</span><br><span class="line">                    <span class="type">HStack</span> &#123;</span><br><span class="line">                        <span class="type">NavigationLink</span>(destination: <span class="type">PickerView</span>(firstDate: $ud.firstDate)) &#123;</span><br><span class="line">                            <span class="type">Image</span>(systemName: <span class="string">&quot;gear&quot;</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Vinculacao-de-PickerView"><a href="#Vinculacao-de-PickerView" class="headerlink" title="Vinculação de PickerView"></a>Vinculação de PickerView</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PickerView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">Binding</span> <span class="keyword">var</span> date: <span class="type">Date</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                <span class="type">DatePicker</span>(selection: $date, <span class="keyword">in</span>: ...<span class="type">Date</span>(), displayedComponents: .date) &#123;</span><br><span class="line">                    <span class="type">Text</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Corrigir-a-visualizacao-em-branco-da-imagem-SwiftUI"><a href="#Corrigir-a-visualizacao-em-branco-da-imagem-SwiftUI" class="headerlink" title="Corrigir a visualização em branco da imagem SwiftUI"></a>Corrigir a visualização em branco da imagem SwiftUI</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ciContext = <span class="type">CIContext</span>()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">qrCodeImage</span><span class="params">(<span class="keyword">for</span> string: String)</span></span> -&gt; <span class="type">Image?</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> data = string.data(using: <span class="type">String</span>.<span class="type">Encoding</span>.utf8)</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> qrFilter = <span class="type">CIFilter</span>(name: <span class="string">&quot;CIQRCodeGenerator&quot;</span>) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">    qrFilter.setValue(data, forKey: <span class="string">&quot;inputMessage&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">10</span>, y: <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> ciImage = qrFilter.outputImage?.transformed(by: transform) <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cgImage = ciContext.createCGImage(ciImage, from: ciImage.extent)</span><br><span class="line">    <span class="comment">// convert to UIImage</span></span><br><span class="line">    <span class="keyword">let</span> uiImage = <span class="type">UIImage</span>(cgImage: cgImage!)</span><br><span class="line">    <span class="keyword">let</span> image = <span class="type">Image</span>(uiImage: uiImage)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> image</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>SwiftUI</tag>
      </tags>
  </entry>
  <entry>
    <title>Livro do Cemitério</title>
    <url>/pt/The-Graveyard-Book/</url>
    <content><![CDATA[<h1 id="Parque-de-Diversoes-🎠-Livro"><a href="#Parque-de-Diversoes-🎠-Livro" class="headerlink" title="Parque de Diversões 🎠 Livro"></a>Parque de Diversões 🎠 Livro</h1><div style="width: 300px">
<img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/The%20Graveyard%20Book.jpg" />
</div>

<p>As crianças não têm conceito de vida e morte, e o cemitério é mais como um parque de diversões para elas </p>
<a id="more"></a>

<hr>
<p>Obrigado 🙏 🐼 leitor por enviar outro livro </p>
<p>Envergonhado, o número de leituras despencou depois de ir para o exterior<br>De centenas de livros por ano, de repente, para um dígito agora </p>
<p>Pense no velho ditado que diz que a leitura não deve ser utilitária, mas deve ser motivada pelo interesse<br>Agora é realmente um tapa na cara </p>
<p>Mas também existem razões objetivas: </p>
<p>Uma delas é que a maioria dos livros que quero ler agora têm edições originais<br>Uma vez que existe a versão original, eu realmente não quero ver a versão traduzida </p>
<p>Em segundo lugar, recebi um telefonema e fui ouvido por um amigo da Universidade Nacional de Cingapura<br>Depois disso, ela desprezou repetidamente “Your Plastic English” </p>
<p>Mas eu tenho minha teimosia, lento é lento, mas mantenho a versão original<br>Deve haver um dia em que posso me levantar tão rápido quanto os livros chineses </p>
<p>A terceira é que o Condado de Po é uma ilha, e não existe o que os grandes deuses dizem sobre as boas montanhas e rios estrangeiros, tão solitários<br>E no início desta epidemia, uma vez pensei que este lugar era um país desenvolvido em uma bagunça<br>Além disso, é verão o ano todo, exceto no mais quente, todo o resto é bastante confortável<br>O céu azul e nuvens brancas, chuva forte e trovões, parece que o tempo está congelado, é bom </p>
<p>Sem utilitarismo, naturalmente não há motivação para ler </p>
<p>O disjuntor é agora, então eu tenho algum tempo e disposição </p>
<hr>
<p>Eu peguei este livro primeiro<br>Eu pensei que era ficção científica no começo<br>Ouvi dizer que poderia ser invisível e pensei que era fantasia<br>Eu pensei que era amor quando conheci o papel da irmã<br>Foi para a escola e pensei que era um campus<br>Papai veio para o jogo e pensou que era um pai-filho<br>Toda a família foi morta e pensei que era suspense<br>No final das contas, eu estava falando sobre crescimento </p>
<p>Como o autor escreveu no final: </p>
<blockquote>
<p>Terminei o sexto capítulo, “Bertie’s School Days”, em um hotel miserável em Nova Orleans. Terminei a última página no gazebo do meu jardim, contendo as lágrimas enquanto escrevia. Só naquele momento entendi porque não escrevi este livro quando era pai. Porque antes de criar, tenho que acompanhar meus filhos em seu processo de crescimento, nutri-los, amá-los e, finalmente, aprender a deixar ir </p>
</blockquote>
<hr>
<p>Além disso, é difícil se envolver na leitura<br>O livro inteiro continua me dando a sensação de uma cópia de Harry Potter </p>
<p>Mas há uma diferença significativa na leitura desta vez<br>No passado, ao ler tais romances, muitas vezes entrei no livro da perspectiva do protagonista<br>Com idade<br>Desta vez, é mais da perspectiva de Silas </p>
<p>Se este livro é uma rotina de fantasia comum na China<br>Bod definitivamente vai pegar a irmã Scarlett, domar Sleer, se tornar Mestre, rasgar Jack, sentar como chefe da Irmandade </p>
<p>No entanto, nada disso aconteceu em Neil, que escreveu sobre os Deuses Americanos.<br>Depois que Bod jogou o monstro 👾, o jornal irmão se assustou, e Bod é apenas um comum ** O mundo é tão grande, eu quero ver ** </p>
<p>Como pai, você quer que seu corpo se torne o do país ou o do livro 📖? </p>
<hr>
<p>Existem também algumas coisas estúpidas feitas durante o período de rebelião que exigem que os pais paguem por isso<br>Agora que estou mais velha, entendo as dificuldades das várias proibições dos pais. </p>
<p>Mas não posso deixar de pensar nisso<br>Eu não sabia o que sabia agora </p>
<p>Eu imaginei que se o eu agora e o eu então<br>Eu definitivamente não seria obediente naquele momento<br>Você deve ser golpeado no rosto pelo punho de ferro da sociedade para acordar<br>Faça algo resolutamente </p>
<hr>
<p>Depois de lidar com os assuntos gerais, um dia ele sairá do mundo dos contos de fadas e entrará na vida </p>
<blockquote>
<p>“Adeus, então, Silas.” Bod estendeu a mão, como fazia quando era pequeno, e Silas a pegou, com uma mão fria da cor de marfim antigo, e apertou-a gravemente.<br>“Adeus, Ninguém Owens.”<br>Bod pegou a pequena mala. Ele abriu a porta para sair da cripta e voltou a subir a suave encosta até o caminho sem olhar para trás. </p>
</blockquote>
<p>Eu estava miserável quando saí, ninguém me entregou, sem adeus<br>O aluguel em Pequim foi devolvido e eu comprei uma passagem só de ida<br>Todos os pertences são embalados em três malas<br>Pegue um táxi para o aeroporto às 4 da manhã<br>Depois de terminar a remessa, embarque e, em seguida, sair </p>
<blockquote>
<p>sem olhar para trás </p>
</blockquote>
<p>Como eu gostaria de também ouvir as alucinações auditivas de Bod: </p>
<blockquote>
<p>Ele deu um passo à frente … uma voz disse: “Estou tão orgulhoso de você, meu filho.” </p>
</blockquote>
]]></content>
      <tags>
        <tag>Reading</tag>
      </tags>
  </entry>
  <entry>
    <title>APN baseado em token iOS</title>
    <url>/pt/iOS-Token-Based-APNs/</url>
    <content><![CDATA[<p>A Apple fornece um novo método (token de autenticação) para realizar APN </p>
<p>Comparado com o método anterior (certificado do provedor), o certificado <code>* .p12</code> irá expirar a cada ano </p>
<p>Baseado em token <code>* .p8</code> ** Nunca expira ** </p>
<a id="more"></a>

<ul>
<li><a href="https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/establishing_a_token-based_connection_to_apns">Estabeleça uma conexão baseada em token com APN</a> </li>
<li><a href="https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html">Comunicação com APN</a> </li>
</ul>
<h2 id="Para-clientes"><a href="#Para-clientes" class="headerlink" title="Para clientes"></a>Para clientes</h2><p>A única diferença entre o cliente é </p>
<ol>
<li>Crie uma chave de assinatura de token de autenticação em <a href="https://developer.apple.com/">https://developer.apple.com/</a> </li>
<li>Baixe o <code>* .p8</code> e envie para o engenheiro de back-end </li>
</ol>
<h2 id="Para-o-backend"><a href="#Para-o-backend" class="headerlink" title="Para o backend"></a>Para o backend</h2><p>Muitos frameworks suportam <code>* .p8</code>. </p>
<p>Por exemplo: </p>
<p><a href="https://firebase.google.com/docs/cloud-messaging/ios/certs">Firebase</a> </p>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>APNs</tag>
      </tags>
  </entry>
  <entry>
    <title>Framboesa 4.</title>
    <url>/pt/Raspberry-Pi-4/</url>
    <content><![CDATA[<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Pi-Hole.png" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Raspberrypi.png" alt=""></div></div></div>

<a id="more"></a>

<h2 id="Inicializar-sem-o-monitor"><a href="#Inicializar-sem-o-monitor" class="headerlink" title="Inicializar sem o monitor"></a>Inicializar sem o monitor</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span></span><br><span class="line"><span class="string">update_config=1</span></span><br><span class="line"><span class="string">country=CN</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">network=&#123;</span></span><br><span class="line"><span class="string"> ssid=&quot;xxx&quot;</span></span><br><span class="line"><span class="string"> psk=&quot;xxx&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; wpa_supplicant.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># Copiar WPA_Supplicant, ssh ou ssh.txt para a raiz do cartão SD </span></span><br><span class="line"></span><br><span class="line">sudo raspi-config</span><br><span class="line"></span><br><span class="line"><span class="comment"># crontab -e </span></span><br><span class="line"><span class="comment"># @reboot sudo ifdown wlan1 </span></span><br><span class="line">sudo iwconfig wlan1 txpower off</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Eeprom. </span></span><br><span class="line">sudo apt -y update</span><br><span class="line">sudo apt -y upgrade</span><br><span class="line">sudo apt -y install rpi-eeprom</span><br><span class="line">sudo rpi-eeprom-update</span><br><span class="line">sudo rpi-eeprom-update -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># OH-MY-ZSH </span></span><br><span class="line">sudo apt-get install zsh</span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line">sudo apt -y install vim</span><br><span class="line"></span><br><span class="line">sudo chsh -s /bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pi-Hole. </span></span><br><span class="line">curl -sSL https://install.pi-hole.net | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># pivpn. </span></span><br><span class="line">curl -L https://install.pivpn.io | bash</span><br><span class="line">pivpn add</span><br><span class="line">pivpn remove</span><br><span class="line">pivpn list</span><br><span class="line">pivpn -qr</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Acesso-ssh-sem-senha"><a href="#Acesso-ssh-sem-senha" class="headerlink" title="Acesso ssh sem senha"></a>Acesso ssh sem senha</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="comment"># Raspberry Pi </span></span><br><span class="line">cat raspberrypi.pub</span><br><span class="line">cat ~/.ssh/raspberrypi.pub | ssh pi@192.168.2.2 <span class="string">&#x27;mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="Endereco-IP-estatico"><a href="#Endereco-IP-estatico" class="headerlink" title="Endereço IP estático"></a>Endereço IP estático</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dhcpcd.conf </span></span><br><span class="line"></span><br><span class="line">interface eth0</span><br><span class="line">static ip_address=192.168.0.4/24</span><br><span class="line">static routers=192.168.0.254</span><br><span class="line">static domain_name_servers=192.168.0.254 8.8.8.8</span><br></pre></td></tr></table></figure>

<h2 id="Vnc"><a href="#Vnc" class="headerlink" title="Vnc."></a>Vnc.</h2><p>Https: // 马 果. .Raspirberry skin .org / articles / vnc-framboesa-pele </p>
<h2 id="Rclone-e-google-drive"><a href="#Rclone-e-google-drive" class="headerlink" title="Rclone e google drive"></a>Rclone e google drive</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt -y install fuse</span><br><span class="line"></span><br><span class="line">curl -L https://raw.github.com/pageauc/rclone4pi/master/rclone-install.sh | bash</span><br><span class="line">rclone config</span><br><span class="line"></span><br><span class="line">mkdir -p /tmp/gdrive</span><br><span class="line">fusermount -u /tmp/gdrive</span><br><span class="line"></span><br><span class="line">sudo vim /etc/fuse.conf</span><br><span class="line"><span class="comment"># user_allow_Outh. </span></span><br></pre></td></tr></table></figure>

<h2 id="Essa-mente"><a href="#Essa-mente" class="headerlink" title="Essa mente"></a>Essa mente</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo blkid</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo vim / etc / fstab </span></span><br><span class="line"></span><br><span class="line">UUID=633a8bc8 /media/3T ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=d271d018 /media/TM ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=53f3ce6b /media/8G ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo chown -R pi:pi /media/3T /media/TM</span><br></pre></td></tr></table></figure>

<h2 id="Ramdisk-amp-Logs"><a href="#Ramdisk-amp-Logs" class="headerlink" title="Ramdisk &amp; Logs."></a>Ramdisk &amp; Logs.</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># SUTO SERVIÇO RSYSLOG STOP </span></span><br><span class="line"><span class="comment"># sudo systemctl desativar rsyslog </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo vim / etc / fstab </span></span><br><span class="line"></span><br><span class="line">tmpfs /var/lib/plexmediaserver tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /home/pi./cache tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /tmp tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /var/<span class="built_in">log</span> tmpfs defaults,noatime 0 0</span><br></pre></td></tr></table></figure>

<h2 id="Corrigir-ext4"><a href="#Corrigir-ext4" class="headerlink" title="Corrigir ext4."></a>Corrigir ext4.</h2><p><code>sudo fsck.ext4 -vfy / dev / sda2</code> </p>
<h2 id="Swap-espaco-em-um-disco-rigido-externo"><a href="#Swap-espaco-em-um-disco-rigido-externo" class="headerlink" title="Swap espaço em um disco rígido externo"></a>Swap espaço em um disco rígido externo</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/dphys-swapfile</span><br><span class="line"></span><br><span class="line">CONF_SWAPFILE=/media/3T/swapfile</span><br><span class="line">CONF_SWAPSIZE=8192</span><br></pre></td></tr></table></figure>

<h2 id="Maquina-de-AFP-e-TEMPO"><a href="#Maquina-de-AFP-e-TEMPO" class="headerlink" title="Máquina de AFP e TEMPO"></a>Máquina de AFP e TEMPO</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt -y install netatalk gparted</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo mkfs.ext4 / dev / sda2 </span></span><br><span class="line"><span class="comment"># Suda - 4 / convidado / dor de cabeça </span></span><br><span class="line"><span class="comment"># sudo mkdir / mídia / tm </span></span><br><span class="line"><span class="comment"># Suda monte / convidado / dor de cabeça / mídia / feita </span></span><br><span class="line"><span class="comment"># Suddo Poon -r Pi: ​​PI / Mídia / Zt </span></span><br><span class="line"><span class="comment"># Sudo cheng -rpi: pele / mídia / tm </span></span><br><span class="line"></span><br><span class="line">sudo vim /etc/netatalk/afp.conf</span><br><span class="line"><span class="comment"># 3t. </span></span><br><span class="line"><span class="comment"># ; Patish = / mídia / dt / </span></span><br><span class="line"><span class="comment"># ; [TMP] </span></span><br><span class="line"><span class="comment"># ; Path = / tmp / </span></span><br><span class="line"><span class="comment"># [TM] </span></span><br><span class="line"><span class="comment"># Path = / mídia / tum / </span></span><br><span class="line"><span class="comment"># Máquina de tempo = sim </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo systemctl restart netatalk</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Samba"><a href="#Samba" class="headerlink" title="Samba"></a>Samba</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install samba samba-common-bin</span><br><span class="line"></span><br><span class="line">sudo vim /etc/samba/smb.conf</span><br><span class="line"><span class="comment"># [PimylifeUp Share] </span></span><br><span class="line"><span class="comment"># Patish = / mídia / dt / </span></span><br><span class="line"><span class="comment"># gravável = sim. </span></span><br><span class="line"><span class="comment"># Criar Mask = 0777 </span></span><br><span class="line"><span class="comment"># Máscara de diretório = 0777 </span></span><br><span class="line"><span class="comment"># Público = No. </span></span><br><span class="line"><span class="comment"># [TMP] </span></span><br><span class="line"><span class="comment"># Path = / tmp / </span></span><br><span class="line"><span class="comment"># gravável = sim. </span></span><br><span class="line"><span class="comment"># Criar Mask = 0777 </span></span><br><span class="line"><span class="comment"># Máscara de diretório = 0777 </span></span><br><span class="line"><span class="comment"># Público = No. </span></span><br><span class="line">sudo smbpasswd -a pi</span><br><span class="line">sudo systemctl restart smbd</span><br></pre></td></tr></table></figure>

<h2 id="Plex-Server"><a href="#Plex-Server" class="headerlink" title="Plex Server"></a>Plex Server</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkdir -p <span class="string">&quot;/tmp/plexmediaserver&quot;</span></span><br><span class="line">sudo mount -t tmpfs -o size=1000M tmpfs /tmp/plexmediaserver</span><br><span class="line">sudo chown -R pi:pi /var/lib/plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo apt -y install apt-transport-https</span><br><span class="line">curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list</span><br><span class="line">sudo apt -y install plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo vim /etc/default/plexmediaserver</span><br><span class="line"><span class="comment"># Exportar plex_media_server_user = pi </span></span><br><span class="line"></span><br><span class="line">hostname -I</span><br><span class="line">sudo vim /boot/cmdline.txt</span><br><span class="line"><span class="comment"># ip = ipaddress </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo apt -y install pmount </span></span><br><span class="line"><span class="comment"># sudo apt-get install ntfs-3g exfat-fuse exfat-utils pmount </span></span><br><span class="line"><span class="comment"># sudo apt-get install hfsplus hfsutils hfsprogs gdisk </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lsblk. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># / Semana / Sistema / Sistema / Fotografia x Media Server.Service </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># usuário plex para pi </span></span><br><span class="line">sudo mkdir -p /etc/systemd/system/plexmediaserver.service.d</span><br><span class="line">sudo vim /etc/systemd/system/plexmediaserver.service.d/override.conf</span><br><span class="line"><span class="comment"># [Serviço] </span></span><br><span class="line"><span class="comment"># User = pi. </span></span><br><span class="line"><span class="comment"># Grupo = pele. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [Serviço] </span></span><br><span class="line"><span class="comment"># ExecstartPre = / bin / sleep 120; / bin / sh -c &#x27;/ usr / bin / teste -d &quot;$ &#123;plex_media_server_application_support_dir&#125;&quot; || / bin / mkdir -p &quot;$ &#123;plex_media_server_application_support_dir&#125;&quot; &#x27; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pasta de dados. </span></span><br><span class="line"></span><br><span class="line">sudo systemctl stop plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo service plexmediaserver stop</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> plexmediaserver.service</span><br><span class="line">sudo systemctl restart plexmediaserver.service</span><br></pre></td></tr></table></figure>

<h2 id="Crontab-e"><a href="#Crontab-e" class="headerlink" title="Crontab -e"></a>Crontab -e</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt -y install php php-curl</span><br></pre></td></tr></table></figure>

<p><code>crontab -e</code> </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># rclone. </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;mkdir -p /tmp/gdrive</span></span><br><span class="line"><span class="string">fusermount -u /tmp/gdrive</span></span><br><span class="line"><span class="string">/usr/bin/rclone mount Plex:Plex /tmp/gdrive --umask 0000 --default-permissions --allow-non-empty --allow-other --buffer-size 64M --dir-cache-time 48h --vfs-read-chunk-size 128M --vfs-read-chunk-size-limit 1500M &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; rclone.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Cópia de segurança </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tar -exclude = &quot;$ plexpath / logs&quot; --exclude = &quot;$ plexpath / cache&quot; --exclude = &quot;$ plexpath =&quot; Relatórios de falha &quot;-czf /tmp/gdrive/backup/plex.tar.gz / var / lib / plexmediaserver. </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">mkdir -p /tmp/gdrive/backup/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">tar cf - --exclude=&quot;$PlexPath/Logs&quot; --exclude=&quot;$PlexPath/Cache&quot; --exclude=&quot;$PlexPath/Crash Reports&quot; /var/lib/plexmediaserver | lz4 -f - /tmp/gdrive/backup/plex.tar.lz4</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; backup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Restaurar </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">lz4 -d /tmp/gdrive/backup/plex.tar.lz4 | tar -xC /</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">mkdir -p &quot;$PlexPath/Logs&quot; &quot;$PlexPath/Cache&quot; &quot;$PlexPath/Crash Reports&quot;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; restore.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chmod a+x backup.sh restore.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Atualizar </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">sudo apt update &amp;&amp; sudo apt upgrade &amp;&amp; sudo apt autoremove &amp;&amp; sudo apt clean</span></span><br><span class="line"><span class="string">pihole -up &amp;&amp; pihole -g</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; update.sh</span><br><span class="line"></span><br><span class="line">chmod a+x update.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">@reboot vncserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># @ Rubwite pmots2 zt </span></span><br><span class="line"><span class="comment"># @ Rabwa com dor de cabeça </span></span><br><span class="line"></span><br><span class="line">@reboot /home/pi/rclone.sh</span><br><span class="line">@reboot sleep 30 &amp;&amp; /home/pi/restore.sh</span><br><span class="line"></span><br><span class="line">*/30 * * * * /home/pi/backup.sh</span><br><span class="line">0 3 * * * /home/pi/update.sh</span><br><span class="line"></span><br><span class="line">0 22 * * * <span class="built_in">cd</span> ~/Bot;python3 autoPill.py</span><br><span class="line">0 9 * * * php ~/Bot/bilibiliRun.ph</span><br></pre></td></tr></table></figure>

<p><code>sudo crontab -e</code> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 0 4 * * * &#x2F; sbin &#x2F; shutdown -r </span><br><span class="line">@reboot sleep 90 &amp;&amp; sudo service plexmediaserver start</span><br></pre></td></tr></table></figure>

<h2 id="Jellyfin"><a href="#Jellyfin" class="headerlink" title="~ Jellyfin ~."></a><del>~ Jellyfin ~</del>.</h2><p>Https: // geléia fat.org/ </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt install apt-transport-https</span><br><span class="line">wget -O - https://repo.jellyfin.org/jellyfin_team.gpg.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$( dpkg --print-architecture )</span>] https://repo.jellyfin.org/<span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^ID=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> <span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^VERSION_CODENAME=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> main&quot;</span> | sudo tee /etc/apt/sources.list.d/jellyfin.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># Status de Jellyfin do serviço. </span></span><br><span class="line"><span class="comment"># Systemctl Reiniciar Jellyfin. </span></span><br><span class="line"><span class="comment"># sudo /etc/init.d/jellyfin stop. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># .local / share / jellyfin </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;#!/bin/zsh</span></span><br><span class="line"><span class="string">JELLYFINTMP=&quot;/tmp/jellyfin&quot;</span></span><br><span class="line"><span class="string">USRBIN=&quot;/usr/bin&quot;</span></span><br><span class="line"><span class="string">mkdir -p $JELLYFINTMP/log $JELLYFINTMP/cache $JELLYFINTMP/transcodes \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/data \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/metadata \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/config</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$USRBIN/jellyfin \</span></span><br><span class="line"><span class="string"> -C $JELLYFINTMP/cache \</span></span><br><span class="line"><span class="string"> -l $JELLYFINTMP/log \</span></span><br><span class="line"><span class="string"> -d $JELLYFINTMP/data \</span></span><br><span class="line"><span class="string"> -c $JELLYFINTMP/config \</span></span><br><span class="line"><span class="string"> --ffmpeg $USRBIN/ffmpeg &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; jellyfin.sh</span><br><span class="line"></span><br><span class="line">chmod a+x jellyfin.sh</span><br><span class="line">nohup ./jellyfin.sh &lt;/dev/null &amp;</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># Https: // jelly fin.org/docs/general/administry/hardware-acceleração.html </span></span><br><span class="line">sudo usermod -aG video jellyfin</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Raspberry</tag>
      </tags>
  </entry>
  <entry>
    <title>Python vs Java para crianças</title>
    <url>/pt/Python-vs-Java-for-Kids/</url>
    <content><![CDATA[<p><em>The</em> <a href="https://junilearning.com/blog/guide/python-vs-java/"><em>Article</em></a> _ apareceu originalmente em_ <a href="https://junilearning.com/"><em>junilearning.com</em></a> </p>
<h1 id="Python-e-Java-uso-desempenho-aprendizagem"><a href="#Python-e-Java-uso-desempenho-aprendizagem" class="headerlink" title="Python e Java: uso, desempenho, aprendizagem"></a>Python e Java: uso, desempenho, aprendizagem</h1><p>No campo da ciência da computação, existem muitas linguagens de programação e nenhuma delas é superior à outra. Em outras palavras, ** cada linguagem é melhor para resolver certos problemas *<em>. Na verdade, para um determinado projeto de programação, geralmente não há uma linguagem ideal para escolher. Portanto, para alunos que desejam desenvolver software ou resolver problemas interessantes por meio de código, é muito importante ter uma base sólida em ciência da computação *</em> aplicável a qualquer linguagem de programação **. </p>
<a id="more"></a>

<p>As linguagens de programação tendem a compartilhar certas características na forma como funcionam, por exemplo, lidam com o uso da memória ou a intensidade do uso de objetos. À medida que os alunos ficam expostos a mais idiomas, eles começarão a ver esses padrões. Este artigo se concentrará em Python e Java, as duas linguagens de programação mais utilizadas no mundo. Embora seja difícil medir com precisão a taxa de crescimento de cada linguagem de programação, ** Elas são as duas linguagens de programação mais populares usadas na indústria hoje **. </p>
<p>A principal diferença entre Python e Java é que Python é ** tipado dinamicamente *<em>, enquanto Java é *</em> estaticamente tipado *<em>. Em termos gerais, isso significa que o Java é mais rígido em como definir e usar variáveis ​​no código. *</em> Como resultado, a sintaxe do Java tende a ser prolixa, uma das razões pelas quais recomendamos que os iniciantes aprendam Python antes do Java. ** Por exemplo, é assim que <code>números</code> cria uma variável de nome em Python que contém os números de 0 a 9: </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numbers = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">numbers.append(i)</span><br></pre></td></tr></table></figure>

<p>Veja como você faria a mesma coisa em Java: </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ArrayList numbers = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    numbers.add(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Outra grande diferença é que Java é uma ** linguagem compilada *<em>, então normalmente executa programas mais rápido que Python. Isso significa que o compilador converte o código Java em código de nível de máquina antes de realmente executar o programa. Em contraste, Python é uma linguagem *</em> interpretada **, o que significa que não há etapas de compilação. </p>
<h2 id="Uso-e-praticidade"><a href="#Uso-e-praticidade" class="headerlink" title="Uso e praticidade"></a>Uso e praticidade</h2><p>Historicamente, Java se tornou uma linguagem mais popular em parte por causa de sua longa história. No entanto, Python está ganhando popularidade rapidamente. De acordo com o <a href="https://octoverse.github.com/">Relatório de status de outubro do Github</a>, recentemente ultrapassou o Java como a linguagem de programação mais amplamente usada. De acordo com a Pesquisa de Desenvolvedores de 2018, ** Python é agora a linguagem de programação de computador com crescimento mais rápido **. </p>
<p>Tanto Python quanto Java têm uma grande comunidade de desenvolvedores, e você pode responder a perguntas nos sites <a href="https://stackoverflow.com/">Stack Overflow</a>. Em <a href="https://insights.stackoverflow.com/trends?tags=python%2Cjava">Stack Overflow Trends</a>, pode-se ver que a porcentagem de perguntas feitas por Python no Stack Overflow em 2017 excede a de Java **. No momento em que este artigo foi escrito, cerca de 13% das perguntas no Stack Overflow estavam marcadas com Python e cerca de 8% com Java! </p>
<h2 id="desenvolvimento-web"><a href="#desenvolvimento-web" class="headerlink" title="desenvolvimento web"></a>desenvolvimento web</h2><p>** Python e Java podem ser usados ​​para desenvolvimento web de back-end **. Geralmente, os desenvolvedores usam a estrutura <a href="https://stackify.com/python-frameworks/">Django e Flask</a> para Python e <a href="https://spring.io/">Spring</a> para Java. Python é conhecido pela legibilidade de seu código, o que significa que o código Python é limpo, fácil de ler e conciso. Python também tem um grande número de módulos, pacotes e bibliotecas abrangentes. Esses módulos, pacotes e bibliotecas são desenvolvidos pela comunidade de entusiastas do Python, além de sua biblioteca padrão. Java possui um ecossistema semelhante, embora em menor grau. </p>
<h2 id="Desenvolvimento-de-aplicativos-moveis"><a href="#Desenvolvimento-de-aplicativos-moveis" class="headerlink" title="Desenvolvimento de aplicativos móveis"></a>Desenvolvimento de aplicativos móveis</h2><p>** Quando se trata de desenvolvimento de aplicativos móveis, Java tem uma posição dominante ** porque ** Java ** é a principal linguagem usada para construir aplicativos e jogos Android. Com as bibliotecas feitas sob medida mencionadas acima, os desenvolvedores podem escolher escrever aplicativos Android usando estruturas e ferramentas de desenvolvimento poderosas construídas especificamente para o sistema operacional. Atualmente, embora existam ferramentas como <a href="https://kivy.org/">Kivy</a> e <a href="https://beeware.org/">BeeWare 之</a> que permitem que você escreva código uma vez e execute-o no Windows, OS X, iOS e Implante aplicativos no Android, mas o Python não é freqüentemente usado para desenvolvimento móvel. </p>
<h2 id="Aprendizado-de-maquina-e-Big-Data"><a href="#Aprendizado-de-maquina-e-Big-Data" class="headerlink" title="Aprendizado de máquina e Big Data"></a>Aprendizado de máquina e Big Data</h2><p>Em contraste, em aprendizado de máquina e <a href="https://junilearning.com/blog/coding-and-data-science">ciência de dados</a>, Python é a linguagem mais popular. Python é comumente usado em projetos de big data, computação científica e inteligência artificial (IA). ** Ao trabalhar em projetos que envolvem análise de sentimento, a maioria dos cientistas de dados e programadores de aprendizado de máquina opta por usar Python em vez de Java **. Ao mesmo tempo, é importante notar que muitos programadores de aprendizado de máquina podem escolher usar Java ao trabalhar em projetos relacionados à segurança de rede, prevenção de ataques à rede e detecção de fraude. </p>
<h2 id="Onde-comecar"><a href="#Onde-comecar" class="headerlink" title="Onde começar"></a>Onde começar</h2><p>Ao aprender o básico da programação, ** muitos estudos chegaram à conclusão <strong>, por causa da sintaxe simples e intuitiva do Python, é ** mais fácil do que Java ** ** \ * \ *</strong> [Aprenda Python](https : //junilearning.com/coding) *<em>, conforme mostrado no exemplo anterior. Comparados com Python, os programas Java geralmente têm mais código clichê - eles devem conter partes do código com pouca ou nenhuma mudança em muitos lugares. Dito isso, Java tem algumas vantagens significativas, especialmente sua velocidade como linguagem compilada. *</em> Aprender Python e Java irá expor os alunos a duas linguagens, que são baseadas em conceitos semelhantes de ciência da computação, mas diferem na educação. \ * \ * </p>
<p>No geral, está claro que Python e Java são linguagens de programação poderosas na prática, portanto, para qualquer desenvolvedor de software aspirante, é melhor aprender ambas as linguagens com proficiência. Os programadores devem comparar Python e Java com base nas necessidades específicas de cada projeto de desenvolvimento de software, em vez de simplesmente aprender uma linguagem de que gostam. Resumindo, nenhuma linguagem é superior a outra, então os programadores devem se esforçar para ter ambas as linguagens em ambas as codificações **. </p>
<table>
<thead>
<tr>
<th></th>
<th>Python</th>
<th>Java</th>
</tr>
</thead>
<tbody><tr>
<td>Desempenho em tempo de execução</td>
<td></td>
<td>Vencedor</td>
</tr>
<tr>
<td>Facilidade de aprendizado</td>
<td>Vencedor</td>
<td></td>
</tr>
<tr>
<td>Agilidade prática</td>
<td>Empate</td>
<td>Empate</td>
</tr>
<tr>
<td>Desenvolvimento de aplicativos móveis</td>
<td></td>
<td>Vencedor</td>
</tr>
<tr>
<td>Big Data</td>
<td>Vencedor</td>
<td></td>
</tr>
</tbody></table>
<hr>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Como limpar poeira e ventiladores do MacBook</title>
    <url>/pt/How-to-Clean-MacBook-Dust-Fan/</url>
    <content><![CDATA[<h2 id="Se-kernel-task-estiver-usando-uma-grande-porcentagem-da-CPU-do-Mac"><a href="#Se-kernel-task-estiver-usando-uma-grande-porcentagem-da-CPU-do-Mac" class="headerlink" title="Se kernel_task estiver usando uma grande porcentagem da CPU do Mac"></a>Se kernel_task estiver usando uma grande porcentagem da CPU do Mac</h2><p>Eu percebi antes que o <code>kernel_task</code> ficará 100% preso em todas as curvas, mas é um processo do<code>System</code>, não há como </p>
<p>根据  的 文档 <a href="https://support.apple.com/en-us/HT207359">Se kernel_task estiver usando uma grande porcentagem da CPU do seu Mac</a> </p>
<blockquote>
<p>Em outras palavras, kernel_task responde a condições que fazem com que ** sua CPU fique muito quente **, mesmo se seu Mac não parecer quente para você. Ele mesmo não causa essas condições. Quando a temperatura da CPU diminui, kernel_task reduz automaticamente sua atividade. </p>
</blockquote>
<p>Isso ocorre porque a CPU está muito quente 🔥 mesmo se você achar que não está quente 🥶 … </p>
<p>Além disso, <code>kernel_task</code> não é o culpado. Quando a CPU não está quente, sua taxa de ocupação cairá automaticamente … </p>
<a id="more"></a>

<p>Também descobri que não deveria estar à esquerda 👈 carregando 🔋, acredite </p>
<h3 id="Veja-por-que-voce-nao-deve-carregar-seu-MacBook-Pro-no-lado-esquerdo-https-www-digitaltrends-com-computing-why-you-shouldnt-charge-macbook-pro-left-side-text-Enquanto-20charging-20the-20MacBook-20Pro-use-20the-20right-2Dhand-20ports"><a href="#Veja-por-que-voce-nao-deve-carregar-seu-MacBook-Pro-no-lado-esquerdo-https-www-digitaltrends-com-computing-why-you-shouldnt-charge-macbook-pro-left-side-text-Enquanto-20charging-20the-20MacBook-20Pro-use-20the-20right-2Dhand-20ports" class="headerlink" title="[Veja por que você não deve carregar seu MacBook Pro no lado esquerdo](https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text = Enquanto% 20charging% 20the% 20MacBook% 20Pro, use% 20the% 20right% 2Dhand% 20ports.)"></a>[Veja por que você não deve carregar seu MacBook Pro no lado esquerdo](<a href="https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text">https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text</a> = Enquanto% 20charging% 20the% 20MacBook% 20Pro, use% 20the% 20right% 2Dhand% 20ports.)</h3><blockquote>
<p>Durante o carregamento do MacBook Pro e os periféricos conectados às portas esquerdas, as portas do dispositivo podem esquentar; por algum motivo, isso pode fazer com que o kernel_task fique um pouco confuso e consuma uma grande quantidade de recursos do sistema. </p>
</blockquote>
<p>Mas depois de mudar para a direita 👉 cobrando 🔋 depois de alguns dias, era 100% depois de um tempo </p>
<p>desespero… </p>
<p>De repente me perguntei se era por causa da necessidade de limpar </p>
<h2 id="Como-limpar-a-poeira-e-o-ventilador-do-MacBook"><a href="#Como-limpar-a-poeira-e-o-ventilador-do-MacBook" class="headerlink" title="Como limpar a poeira e o ventilador do MacBook"></a>Como limpar a poeira e o ventilador do MacBook</h2><p>Demorou o Google para saber que você pode desmontá-lo sozinho<br>O meu é um notebook de 16 anos e está fora da garantia<br>不然 根据 <a href="https://www.apple.com/legal/warranty/products/embedded-mac-warranty-rest-of-apac-english.html">Mac Warranty</a><br>Se você mesmo desmontá-lo, deve perdê-lo </p>
<blockquote>
<p>Esta garantia não se aplica: </p>
<ul>
<li>(c) a danos causados pelo uso de um componente ou produto de terceiros que não atenda às especificações do Produto Apple </li>
</ul>
</blockquote>
<h3 id="Ferramentas-🔧"><a href="#Ferramentas-🔧" class="headerlink" title="Ferramentas 🔧"></a>Ferramentas 🔧</h3><ul>
<li>Parafuso Penta 🔩 Faca </li>
<li>Bola de fuligem, escova pequena </li>
<li>Cartão de crédito abandonado 💳 </li>
</ul>
<h3 id="degrau"><a href="#degrau" class="headerlink" title="degrau"></a>degrau</h3><ol>
<li>Desaparafusar </li>
<li>Faça uma pequena fenda na lateral </li>
<li>Insira o cartão de crédito não utilizado 💳 e deslize-o na direção da seta azul <ol>
<li>Você vai ouvir um clique </li>
<li>Na Figura 2 você pode ver que existem quatro fivelas na linha horizontal do meio </li>
<li>Em vez de quebrar algo (espero que sim 😓) </li>
</ol>
</li>
<li>Use simetricamente à direita 💳 para deslizar </li>
<li>Em seguida, pressione a seta vermelha para puxá-lo horizontalmente <ol>
<li>Figura 2 O slot do cartão pode ser visto acima do ventilador </li>
<li>Então, force horizontalmente, puxe para a esquerda e para a direita ↔️ um pouco simetricamente </li>
</ol>
</li>
<li>A tampa traseira é aberta </li>
</ol>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-3.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-0.jpg" alt=""></div></div></div>

<p>Realmente sujo </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-1.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-2.jpg" alt=""></div></div></div>

<p>Depois de limpar a poeira, <code>kernel_task</code> não aparece muito, e 💻 também é ressuscitado<br>Eu imediatamente sinto que o notebook por 16 anos 💻 pode ser usado por 5 anos 👨‍💻 </p>
]]></content>
      <tags>
        <tag>Macbook</tag>
      </tags>
  </entry>
  <entry>
    <title>Qual é o propósito do Python</title>
    <url>/pt/What-is-Python-Used-for/</url>
    <content><![CDATA[<h1 id="Como-usar-Python-no-mundo-real"><a href="#Como-usar-Python-no-mundo-real" class="headerlink" title="Como usar Python no mundo real"></a>Como usar Python no mundo real</h1><p>** Python ** é uma das linguagens de codificação mais populares do mundo. </p>
<p>A maioria das principais universidades americanas até usa Python em seus cursos introdutórios de codificação: ensine os alunos a usar Python para criar jogos simples, analisar informações de páginas da web e até mesmo realizar processamento de linguagem! </p>
<p>No entanto, muitos pais e alunos geralmente querem saber como o Python é realmente usado na empresa ou em vários campos. </p>
<p>Continue lendo para saber como ** Python ** impulsiona ** a indústria líder de hoje e desempenha um papel importante em muitas disciplinas de ciência da computação. ** </p>
<a id="more"></a>

<h2 id="Por-que-escolher-Python"><a href="#Por-que-escolher-Python" class="headerlink" title="Por que escolher Python?"></a>Por que escolher Python?</h2><p>[Python](<a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTcout_tcout_source_source_tcutium_source_tgutm_tgutm-nvel_sed_source_tgutm_tgutm-nível_sed_tgutm-nive_source_tgutm_-nive_source_-utgutm_tgutm_tgutm_-level_source_gutm_source">https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTcout_tcout_source_source_tcutium_source_tgutm_tgutm-nvel_sed_source_tgutm_tgutm-nível_sed_tgutm-nive_source_tgutm_-nive_source_-utgutm_tgutm_tgutm_-level_source_gutm_source</a>_ ** e ** Universal Coding Language ** - Isso significa que é mais fácil de entender e pode ser usado para resolver uma variedade de problemas! </p>
<p>Com sua sintaxe simples, alta legibilidade e uso em todo o sistema operacional, Python é uma linguagem valiosa que pode ser usada para aprendizado e uso em vários aplicativos. </p>
<p>! <a href="https://images.ctfassets.net/mrop88jh71hl/70P7f6p7J1Bk4VY8GDzm95/58d544a1044609e94a001523d9583f22/python-code-application.jpeg">Código Python na tela. </a> </p>
<p>Exemplo de código Python na tela do engenheiro. </p>
<p>Portanto, não é surpreendente que Python não seja predominante apenas no mercado de trabalho de hoje, mas também nas tecnologias comuns que usamos todos os dias. </p>
<p>** Programação Python ** é uma habilidade que pode ser usada em quase todos os setores e sua função vai muito além do desenvolvimento de software. De setores como ** finanças, saúde ** e ** seguros *<em>, como campo *</em> aeroespacial ** a ** entretenimento ** - [tecnologia baseada em Python](<a href="https://appdevelopermagazine.com/ten">https://appdevelopermagazine.com/ten</a> -industries-using-python-programming /) é promover ** inovação e novas soluções **. </p>
<p>No guia “<a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjqMEHBMEXfCjut_">O que é Python 101”</a>, apresentamos o Python e algumas áreas usadas por ele, como ** tecnologia *<em>, *</em> finanças ** e ** biotecnologia **. Mas neste artigo, vamos nos aprofundar na ampla gama de usos do Python, especialmente nas seguintes áreas: </p>
<ul>
<li><strong>Desenvolvimento web</strong> </li>
<li>** Data Science ** </li>
<li>** Aprendizado de máquina ** </li>
<li><strong>inteligência artificial</strong> </li>
</ul>
<h2 id="Aplicativos-Python"><a href="#Aplicativos-Python" class="headerlink" title="Aplicativos Python"></a>Aplicativos Python</h2><h3 id="desenvolvimento-web"><a href="#desenvolvimento-web" class="headerlink" title="desenvolvimento web"></a>desenvolvimento web</h3><p>Embora HTML, CSS e Javascript possam ser ferramentas comuns para ** desenvolvimento Web **, Python também é uma boa escolha. </p>
<p>[Desenvolvimento Web](<a href="https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before">https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before</a> -getting-started /) refere-se à construção de sites na Internet a partir de páginas de texto simples estáticas a sites dinâmicos de comércio eletrônico e aplicativos interativos de Internet. </p>
<p>A codificação é essencial para o desenvolvimento da Web para construir a funcionalidade do site, otimizar a experiência do usuário e garantir que as informações sejam organizadas de maneira adequada. Frameworks da Web, como ** Django ** e ** Flask ** do Python, tornaram-se escolhas populares para o desenvolvimento de sites. </p>
<p>! <a href="https://images.ctfassets.net/mrop88jh71hl/6prH9NRKgybllrNcEqeCBy/c7fbc7b6960e8f94efb9eaa0b70a97d2/python-web-development-applications.png">Python é usado para criar páginas da web. </a> </p>
<p>Python é uma excelente escolha para desenvolvimento back-end da web e agora é usado por muitas empresas. </p>
<p>Essas estruturas de software livre permitem que os usuários criem aplicativos da Web com mais eficiência, porque o Python tem a capacidade de processar grandes quantidades de dados e automatizar tarefas. Na verdade, ** Instagram *<em>, *</em> Pinterest ** e ** Google ** estão todos em seu [desenvolvimento back-end da web](<a href="https://learn.onemonth.com/10-famous-websites-built">https://learn.onemonth.com/10-famous-websites-built</a> -using-python /) usa Python. </p>
<h3 id="Ciencia-de-dados"><a href="#Ciencia-de-dados" class="headerlink" title="Ciência de dados"></a>Ciência de dados</h3><p>Em [Data Science](<a href="https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=g&amp;análise">https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=g&amp;análise</a> e análise de dados] ](<a href="https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTcmain?utm_source=gf&amp;what_outm">https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTcmain?utm_source=gf&amp;what_outm</a> language) </p>
<p>Na era do ** big data **, frequentemente entramos em contato com dados na vida diária por meio de navegação (GPS), compras online, uso de energia e dispositivos vestíveis, como relógios inteligentes. </p>
<p>Em média, cada família tem cerca de [11 dispositivos](<a href="https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should">https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should</a> -push-that-even-higher-1203431225 /) E esse número pode aumentar no futuro! Com tantos dispositivos, as empresas precisam processar grandes quantidades de dados para fornecer serviços. </p>
<p>! <a href="https://images.ctfassets.net/mrop88jh71hl/3XS43f9pqDhRuft9GdnvZq/2d0513d9f0079c572923a49cd214add5/python-data-analysis-applications.png">Descrição do processo de Python para análise de dados</a> </p>
<p>As ferramentas baseadas em Python costumam ser usadas para visualizar, processar e analisar grandes quantidades de dados. </p>
<p>** Data Science ** envolve o processamento de dados e inferência de tendências ** - Python ** é muito útil neste campo porque contém pacotes densos como ** scipy *<em>, *</em> numpy ** e ** pandas **. </p>
<p>Além disso, o pacote de software ** matplotlib ** pode ser usado para construir visualizações de dados. Isso torna o Python uma escolha popular em campos como ** bioinformática **, que também envolve grandes quantidades de dados e modelagem. </p>
<p>Essas ferramentas baseadas em Python se tornaram populares devido à sua facilidade de uso e escalabilidade. Por exemplo, <a href="https://www.edureka.co/blog/how-netflix-uses-python/#hownetflixusespython">Netflix</a> usa ** scipy ** e ** numpy ** para cálculos numéricos para gerenciar usuários de plataforma cruzada fluxo. </p>
<p>▶ ** Experimente: ** [Tutorial de Python e ciência de dados avançada](<a href="https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDi9fBUcllDiUM9">https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDi9fBUcllDiUM9</a> = gf &amp; utm_medium = what_is_python_used_for &amp; utm_campaign = outreach) </p>
<h3 id="Aprendizado-de-maquina"><a href="#Aprendizado-de-maquina" class="headerlink" title="Aprendizado de máquina"></a>Aprendizado de máquina</h3><p>Ao analisar grandes quantidades de dados, ** Machine Learning ** [Algorithm](<a href="https://junilearning.com/blog/guide/what-are-algorithms/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjME">https://junilearning.com/blog/guide/what-are-algorithms/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjME</a> pode ser encontrado em Tium? Padronize e aplique-o ao comportamento futuro. </p>
<p>O uso mais óbvio do aprendizado de máquina em produtos são os sistemas de recomendação. Empresas como ** Netflix *<em>, *</em> Spotify ** e ** Youtube ** coletam o comportamento do usuário para prever e sugerir playlists e vídeos. </p>
<p>** Scikit-learn ** e ** tensorflow ** são bibliotecas Python que podem ser usadas para algoritmos de classificação, armazenamento em cluster e regressão de grandes conjuntos de dados. O alto desempenho e a ampla variedade de funções dessas bibliotecas as tornam essenciais em qualquer exploração de aprendizado de máquina. </p>
<p>▶ ** Saiba mais: ** [Importância dos Algoritmos Infantis](<a href="https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDjUMJx9ACqcjMEHX">https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDjUMJx9ACqcjMEHX</a> what_is_python_used_for &amp; utm_campaign = outreach) </p>
<h3 id="inteligencia-artificial"><a href="#inteligencia-artificial" class="headerlink" title="inteligência artificial"></a>inteligência artificial</h3><p>O aprendizado de máquina é, na verdade, apenas um aspecto da ** inteligência artificial **. IA refere-se à inteligência das máquinas e ao desenvolvimento de sistemas de computador para realizar tarefas orientadas para o ser humano, como percepção ou tomada de decisão. </p>
<p>Um excelente exemplo de inteligência artificial são os aplicativos de saudação como ** Uber ** e ** Lyft **. </p>
<p>! <a href="https://images.ctfassets.net/mrop88jh71hl/dlvfPv6HAIV4YaMb1TRCl/88739612a93476c94733255a94a567d7/python-artificial-intelligence-in-ride-sharing.png">Ilustração Python de inteligência artificial usada em aplicativos de carona solidária. </a> </p>
<p>Python é usado em inteligência artificial para aplicativos como Lyft ou Uber. O sistema de IA pode então prever coisas como as necessidades do usuário e o tempo estimado de chegada. </p>
<p>O Uber usa IA para ** prever as necessidades do usuário ** e ** tempo estimado de chegada ** (e outros recursos), muitos dos quais são por meio do [Python](<a href="https://eng.uber.com/uber-ai-blog">https://eng.uber.com/uber-ai-blog</a> -2019 /) concluído. </p>
<p>Além de algumas das bibliotecas Python mencionadas acima, outras bibliotecas, como ** keras ** e ** pytorch **, também podem ser usadas para criar funções de IA (como modelos preditivos e redes neurais). </p>
<h2 id="Python-esta-em-toda-parte"><a href="#Python-esta-em-toda-parte" class="headerlink" title="Python está em toda parte!"></a>Python está em toda parte!</h2><p>Entre as linguagens de programação populares, Python é uma das linguagens mais diversas em seus aplicativos. Além disso, está profundamente integrado conosco e com as empresas líderes de hoje. </p>
<p>Ocupações envolvendo Python incluem ** engenheiro de software, desenvolvedor da Web, cientista de dados, gerente de produto, analista de negócios **, etc. Independentemente do setor, as empresas nesta era tecnológica confiam na tomada de decisão baseada em dados, e Python é a ferramenta perfeita para fazer isso. </p>
<p>Se você ou seus filhos estão interessados ​​nos campos ou funções listados acima, aprender Python é uma boa escolha! </p>
<h2 id="Quer-se-tornar-um-programador-Python"><a href="#Quer-se-tornar-um-programador-Python" class="headerlink" title="Quer se tornar um programador Python?"></a>Quer se tornar um programador Python?</h2><p>Uma das maiores vantagens do Python é ajudar novos programadores a aprender conceitos básicos e se familiarizar com a programação! Para novos programadores de todas as idades, também existem muitos recursos para aprender extensivamente Python. </p>
<h3 id="Aulas-de-Python-para-criancas"><a href="#Aulas-de-Python-para-criancas" class="headerlink" title="Aulas de Python para crianças"></a>Aulas de Python para crianças</h3><p>! <a href="https://images.ctfassets.net/mrop88jh71hl/2dK37wFC5SF8HNKm4nGmqr/c256e7002d196ea54e4c10817a68f8a7/learning-python-with-juni.png">Um instrutor Juni usando Python. </a> </p>
<p>O instrutor Juni ensina Python básico para um jovem estudante. </p>
<p>No Juni Learning, com a ajuda de professores de programação experientes, ensinaremos jovens codificadores [ensinando Python](<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACutjMEHBXfCjJMxT=c">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACutjMEHBXfCjJMxT=c</a> gf &amp; utm_medium = what_is_python_used_for &amp; utm_campaign = outreach). Da ** solidificação da base de codificação à construção de algoritmos e análise de conjuntos de dados **, esses cursos exploram muitas aplicações diferentes do Python e ensinam os alunos a construir seus próprios projetos de codificação. </p>
<p>Leia mais sobre o nosso [curso de codificação](<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_medi?hl=pt_BR">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_medi?hl=pt_BR</a> [<a href="https://jf&amp;utm_medium=decurso_d_curso]">https://jf&amp;utm_medium=decurso_d_curso]</a> [<a href="https://junil&amp;utm_medi_d_curso]">https://junil&amp;utm_medi_d_curso]</a> [<a href="https://woding&amp;utm_medun=]">https://woding&amp;utm_medun=]</a> [<a href="https://woding&amp;utm_medi]">https://woding&amp;utm_medi]</a> [<a href="https://woding&amp;utm_medi_d_curso]">https://woding&amp;utm_medi_d_curso]</a> [<a href="https://woding&amp;utm_medun]">https://woding&amp;utm_medun]</a> join.junilearning.com/) Aprenda qual curso é melhor para a jornada de codificação de seu filho com nossa equipe de admissões. </p>
<hr>
<p><em>This</em> [_article_](<a href="https://junilearning.com/blog/guide/what-is-python-used-for-major-industries/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjutor_second_vkKQ87k0iyQeXJhBUcllDiUMXX9ACqjutor_segurança_aprimeira_procura_final&amp;hl=pt_pt_pt_pt_pt_pt_pt_pt_figthonjinal_figinal&amp;chinal_fonte_figthonjinal&amp;chinal_fonte_figthon_jinal&amp;chinal_foto_foto_foto_procure_processo_final&amp;chinal_foto_foto_aplicativo_foto_projeto_processo_figinal">https://junilearning.com/blog/guide/what-is-python-used-for-major-industries/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjutor_second_vkKQ87k0iyQeXJhBUcllDiUMXX9ACqjutor_segurança_aprimeira_procura_final&amp;hl=pt_pt_pt_pt_pt_pt_pt_pt_figthonjinal_figinal&amp;chinal_fonte_figthonjinal&amp;chinal_fonte_figthon_jinal&amp;chinal_foto_foto_foto_procure_processo_final&amp;chinal_foto_foto_aplicativo_foto_projeto_processo_figinal</a> _junilearning.com_](<a href="https://junilearning.com/?utm_source=gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach">https://junilearning.com/?utm_source=gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach</a>). </p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Como abrir uma conta em ações dos EUA</title>
    <url>/pt/how-to-buy-us-stocks/</url>
    <content><![CDATA[<p>código de referência <code>0CM1QE</code> </p>
<p>Eleições nos EUA nestes dois dias<br>Como alho-poró, não compartilhe por causa da diferença de fuso horário.<br>Acordei no meio da noite e cortei a carne<br>Agora vendo o 🚀 geralmente aumentando, mas não se atreva a entrar no constrangimento do mercado </p>
<p>Basta compartilhar a triste jornada de abrir uma conta naquele momento </p>
<a id="more"></a>

<h2 id="Corretora-norte-americana"><a href="#Corretora-norte-americana" class="headerlink" title="Corretora norte-americana"></a>Corretora norte-americana</h2><p>Como muitas corretoras dos Estados Unidos estão livres de comissões, procure primeiro </p>
<ul>
<li>Robinhood (melhor interface de usuário) </li>
<li>TD Ameritrade (marca antiga) </li>
<li>Firstrade (atendimento ao cliente chinês) </li>
</ul>
<p>Robinhood Como ambas as partes podem enviar ações quando convidadas, pedi a meus amigos nos Estados Unidos que pegassem o código e, em seguida, fui ao site oficial e descobri que elas só podem ser enviadas dentro dos Estados Unidos …<br>TD Ameritrade tem SG e site, mas eu não sei como ficar preso na última etapa após enviar as informações. Ninguém revisou o e-mail no passado.<br>Firstrade, não americanos, ajudaram automaticamente a enviar o formulário de isenção de impostos. Depois de enviar as informações, a conta foi finalmente aberta após alguns dias úteis e descobriu que o depósito só pode ser ACH, Cheque, Transferência Bancária </p>
<p>Tanto ACH quanto Cheque precisam transferir dinheiro para minha conta bancária nos Estados Unidos, então definitivamente não<br>Wire Trannsfer cobra outra taxa </p>
<h2 id="Corretora-de-Singapura"><a href="#Corretora-de-Singapura" class="headerlink" title="Corretora de Singapura"></a>Corretora de Singapura</h2><p>Então eu pesquisei Cingapura e descobri que essas pessoas realmente foram para a conta de negociação do UOB ou DBS Bank<br>Só ouvi dizer que a taxa de manuseio é muito cara, não vale a pena </p>
<h2 id="Corretora-domestica"><a href="#Corretora-domestica" class="headerlink" title="Corretora doméstica"></a>Corretora doméstica</h2><p>Ok, eu dei a volta e voltei … </p>
<ul>
<li>Tigre de Xiaomi </li>
<li>Futu da Tencent </li>
<li>Bola de neve </li>
</ul>
<p>Estou feliz 🐯 apoiar a abertura de conta em Cingapura, sim </p>
<ul>
<li>Ações dos EUA, ações de Hong Kong, ações de Cingapura, ações australianas … </li>
<li>Suporte pré pós-mercado, futuros </li>
<li>alavanca </li>
</ul>
<p>Eu planejei originalmente fazer o upload do passaporte e outras informações, de qualquer forma, preparei antes<br>Acontece que a autenticação Singpass é suportada, cliquei e saltei para frente e para trás e foi autenticado … </p>
<p>Deus sabia que era tão fácil<br>Eu abri no ano passado? </p>
<p>Caso contrário, já é várias vezes<br>Ou pularam do telhado </p>
<h2 id="taxa-de-transacao"><a href="#taxa-de-transacao" class="headerlink" title="taxa de transação"></a>taxa de transação</h2><p>Porque eu não (ouso) comprar opções<br>Existem três despesas adicionais para o comércio normal </p>
<ul>
<li>Compre 2 \ $ </li>
<li>0,1% do estoque total </li>
<li>Venda 2 \ $ </li>
</ul>
<p>Então, mesmo que você acompanhe toda a sua calcinha, 🐯 estará cheio </p>
<h2 id="Codigo-de-referencia"><a href="#Codigo-de-referencia" class="headerlink" title="Código de referência"></a>Código de referência</h2><p>Você pode usar meu código <code>0CM1QE</code> </p>
<p>Acho que a atividade atual é dos dois lados </p>
<ul>
<li>5 comissões grátis </li>
<li>Carregue 2000SGD para obter 30SGD, 3W para obter 100SGD </li>
</ul>
<p>Bem, não há desejo de se referir a todos<br>Lembro que costumava distribuir uma parte das ações de Ali. Será que está muito alto agora? </p>
<h2 id="Transcricao"><a href="#Transcricao" class="headerlink" title="Transcrição"></a>Transcrição</h2><p>Vamos dar uma olhada no boom global do mercado de ações nos últimos dois dias. Eu estava com medo à noite por medo de não conseguir dormir. Eu tinha um boletim escolar após a operação violenta </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/how-to-buy-us-stocks.jpeg" alt=""></p>
<p>Então, o que você está esperando, inscreva-se </p>
<p>Estou esperando por você no telhado <del>~</del> </p>
]]></content>
      <tags>
        <tag>Stock</tag>
        <tag>Broker</tag>
      </tags>
  </entry>
  <entry>
    <title>Voe de volta para a China na sombra do coronavírus</title>
    <url>/pt/fly-back-to-china-under-covid-19/</url>
    <content><![CDATA[<p>A situação da epidemia global em novos museus não melhora no final de 2020<br>E com o advento do inverno, há gradualmente sinais de outro surto<br>Mas recentemente o pequeno mago precisa ir para casa<br>Embora várias vacinas tenham sido vacinadas em todo o mundo </p>
<table>
<thead>
<tr>
<th>Empresa</th>
<th>Tipo</th>
<th>Dosagem</th>
<th>Eficácia</th>
<th>Armazenamento ℃</th>
</tr>
</thead>
<tbody><tr>
<td>BioNTech / Pfizer</td>
<td>mRNA</td>
<td>x2</td>
<td>95%</td>
<td>-70</td>
</tr>
<tr>
<td>Moderno</td>
<td>mRNA</td>
<td>x2</td>
<td>95%</td>
<td>-20</td>
</tr>
<tr>
<td>Oxford / AstraZeneca</td>
<td>Vetor de adenovírus</td>
<td>x2</td>
<td>62-90%</td>
<td>0</td>
</tr>
</tbody></table>
<p>Mas ainda requer 14 dias de isolamento para voltar para casa </p>
<a id="more"></a>

<h2 id="pronto"><a href="#pronto" class="headerlink" title="pronto"></a>pronto</h2><p>Visite a embaixada local para obter informações de entrada<br>Tomando Cingapura como exemplo, de acordo com <a href="http://www.chinaembassy.org.sg/chn/lsfw/zytzs/t1838128.htm">Embassy in New Zealand</a> </p>
<p>O embarque após outubro provavelmente passará por várias etapas, apertando passo a passo </p>
<ol>
<li>Teste de amplificação de ácido nucleico </li>
<li>Certificado duplo negativo de ácido nucleico + IgM sérico </li>
<li>Você deve se inscrever para o código de prevenção de epidemias de saúde no mini programa WeChat </li>
</ol>
<h2 id="Teste-de-amplificacao-de-acido-nucleico"><a href="#Teste-de-amplificacao-de-acido-nucleico" class="headerlink" title="Teste de amplificação de ácido nucleico"></a>Teste de amplificação de ácido nucleico</h2><p>Você precisa marcar uma consulta para o teste em novembro, e você não precisa marcar uma consulta em dezembro. Você pode fazer o teste diretamente quando encontrar um hospital aprovado<br>Há uma clínica ao lado do apartamento onde mora o pequeno mago. Caminhe por 5 minutos<br>Porque não há compromissos, há muitas pessoas, e eu esperei por cerca de uma hora<br>Tirou sangue e esfaqueou o nariz<br>Já tive medo desse teste antes, mas os médicos de Cingapura são mais gentis e não muito desconfortáveis </p>
<p>Aqui está um lembrete de que você deve pressionar um pouco depois que o sangue for tirado. O irmãozinho na frente do sangue tirou o sangue e não usou o curativo com cuidado 🩹 segure-o<br>Como resultado, o sangue correu para um rio e as roupas no chão ficaram cobertas de sangue, foi terrível 😨 </p>
<h2 id="Codigo-de-saude"><a href="#Codigo-de-saude" class="headerlink" title="Código de saúde"></a>Código de saúde</h2><p>Prova duplo-yin recebida por SMS e e-mail na manhã seguinte<br>Mas o miniaplicativo WeChat não pode enviar documentos<br>Como mago, o pequeno mago adivinhou ousadamente que era um problema com a resolução de DNS<br>O Cloudflare não retornou corretamente o IP do servidor do miniaplicativo.<br>Mude o telefone 📱 DNS para 114.114.114.114 e será incrível<br>Não apenas suspiro o que fazer com os trouxas </p>
<p>Recebi o código de saúde depois de cerca de uma hora<br>Salve as capturas de tela para garantir </p>
<h2 id="Traje-bioquimico"><a href="#Traje-bioquimico" class="headerlink" title="Traje bioquímico"></a>Traje bioquímico</h2><p>Fiquei assustado com as pessoas voltando para casa nos trajes bioquímicos no aeroporto.<br>O pequeno mago estava tremendo e comprou um conjunto de + fraldas para adultos<br>Era desconfortável experimentar secretamente<br>Considerando que o hemisfério norte é inverno no final do ano, entrar no avião com uma camiseta tropical e sair do avião sem roupa com certeza pegará um forte resfriado na hora </p>
<p>Usar trajes bioquímicos e adicionar roupas torna-se um grande problema </p>
<p>Depois de ler repetidamente o CDC <a href="https://chinese.cdc.gov/coronavirus/2019-ncov/travelers/travel-during-covid19.html">Viagem doméstica durante a epidemia de COVID-19</a>, o pequeno mestre concluiu </p>
<ul>
<li>O avião tem ar fresco </li>
<li>Usar uma máscara </li>
<li>Olhos e nariz não suaves </li>
</ul>
<p>A principal via de infecção da nova coroa é o sistema respiratório. O pequeno mago acha que usar ** N95 + máscara cirúrgica + óculos ** deve ser confortável </p>
<h2 id="Voo-de-regresso"><a href="#Voo-de-regresso" class="headerlink" title="Vôo de regresso"></a>Vôo de regresso</h2><p>No momento não há voos diretos de Cingapura para Pequim<br>Você só pode escolher ir para Xangai primeiro e, em seguida, transferir após 14 de isolamento </p>
<p>Existem apenas três voos diretos de Cingapura para Xangai por semana<br>Singapore Airlines na segunda-feira, Eastern Airlines na quinta-feira, Juneyao Airlines na sexta-feira à noite </p>
<p>A Eastern Airlines pode despachar apenas uma peça de bagagem, e bagagem extra precisa ser comprada, uma peça custa 500 RMB<br>20% de desconto para compra antecipada no aplicativo </p>
<p>Além do código de saúde antes do embarque, você também precisa usar o programa Mini Passageiro da Alfândega para preencher as informações de entrada </p>
<h2 id="Eastern-Airlines"><a href="#Eastern-Airlines" class="headerlink" title="Eastern Airlines"></a>Eastern Airlines</h2><p>15:00 </p>
<p>Esperando pelo portão de embarque, cerca de metade das pessoas usava trajes bioquímicos e os cobria com força.<br>Na verdade, na verificação de segurança frontal, foi extremamente constrangedor porque alguém teve que pegar metade do serviço bioquímico por causa de um cinto e outros motivos.<br>Nesse caso, o trabalho não vai parar? Qual é o efeito protetor? </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-02.jpg" alt=""></div></div></div>

<p>A tripulação também usa máscaras de camada dupla + óculos de proteção </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-03.jpg" alt=""></p>
<p>Depois que o avião subiu, o pequeno mago se conectou ao Wi-Fi do satélite e continuou a atualizar sua família com novidades para que eles não precisem se preocupar. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-05.jpg" alt=""></p>
<p>Embora haja uma epidemia, ainda há refeições fornecidas<br>Não há muitos passageiros, o pequeno feiticeiro está no meio e não há ninguém de cada lado.<br>Então, eu não esperei pelo pico errado para comer, mal podia esperar para comer depois de receber o lanche </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-04.jpg" alt=""></p>
<p>Uma irmã mais velha à esquerda perto da janela o embrulhou com força. Ela não comeu, não bebeu ou foi ao banheiro durante toda a viagem.<br>Também ótimo </p>
<h2 id="Deteccao-de-acido-nucleico-duro"><a href="#Deteccao-de-acido-nucleico-duro" class="headerlink" title="Detecção de ácido nucléico duro"></a>Detecção de ácido nucléico duro</h2><p>21:30 </p>
<p>Verifique o código QR antes de desembarcar<br>Em seguida, cutuque suas narinas novamente para teste de ácido nucléico<br>O pequeno mago disse que já tem experiência.<br>Miss irmã disse que a China é mais rígida, procuro ser mais leve </p>
<p>Então eu esfaqueei mais fundo do que Cingapura e, em seguida, virei o cotonete algumas vezes<br>O pequeno mago pensou que estava tudo acabado e fez um gesto de OK<br>Inesperadamente, depois de esperar alguns segundos, a Srta. Irmã voltou algumas vezes<br>Em seguida, quebre o cotonete e coloque-o no tubo de ensaio<br>O pequeno mago estava prestes a falar, a irmã mais nova pegou outro cotonete<br>Vire a narina direita no sentido horário, pare, no sentido anti-horário e faça o mesmo </p>
<p>O pequeno mago conteve as lágrimas e disse obrigado 🙏<br>Afinal, já é tarde da noite, todos estão trabalhando muito </p>
<h2 id="Entrada"><a href="#Entrada" class="headerlink" title="Entrada"></a>Entrada</h2><p>22:10 </p>
<p>Verifique o formulário de entrada, passaporte </p>
<p>O irmão mais novo na fronteira folheou os vistos do pequeno mago e mudou um capítulo.<br>Então, lembramos que você não deve colocar sua carteira de identidade junto com seu passaporte porque pode ser desmagnetizado </p>
<p>22:20 </p>
<p>Não se esqueça do carrinho durante a verificação de segurança </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-07.jpg" alt=""></div></div></div>

<p>22:30 da noite </p>
<p>Desvio e isolamento local e estrangeiro de Xangai </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-08.jpg" alt=""></div></div></div>

<h2 id="Pesadelo"><a href="#Pesadelo" class="headerlink" title="Pesadelo"></a>Pesadelo</h2><p>Este é o pesadelo de toda a viagem<br>Como hoje há muitos voos, o ônibus fica isolado 🚌 falta de preparo<br>Iniciou uma longa espera ⌛️ </p>
<p>00:40<br>Registro de passaporte </p>
<p>Espere e espere, Xangai está muito frio tarde da noite<br>Felizmente, o amigo da Universidade Nacional de Cingapura, antes de sair, ajudou a comprar um conjunto de equipamentos aquecidos<br>O pequeno mago vestiu um quente e adormeceu em pé </p>
<p>2h33<br>Espere, entre no ônibus, o staff lembra que o passaporte será devolvido a você no hotel </p>
<p>Tremendo e sacudindo no carro, em alta velocidade<br>Adormeceu com o aquecedor<br>Eu desci do carro em alta velocidade e parei, acordei e descobri que eram 10.000 semáforos vermelhos que eu tinha que esperar tarde da noite. </p>
<p>Pare e vá, sofrendo </p>
<p>Como o hotel de isolamento é atribuído aleatoriamente, os bons e caros são baratos<br>Mas desta vez o pequeno mago não consegue mais economizar dinheiro, apenas pensando </p>
<p>Deus, por favor, me designe um hotel melhor 🏨 </p>
<h2 id="Spa-Internacional"><a href="#Spa-Internacional" class="headerlink" title="Spa Internacional"></a>Spa Internacional</h2><p>4h50 </p>
<p>Finalmente chegou ao hotel de isolamento<br>O pequeno mago ergueu os olhos e viu que se tratava de um prédio alto, intuitivamente esse hotel é bom. </p>
<p>Abri o mapa e descobri que era um cinco estrelas<br>Um spa internacional em Xangai </p>
<p>Secretamente feliz<br>Sem cauda de pólo </p>
<p>Mas o ganso ainda não consegue sair<br>É preciso esperar os primeiros ônibus para fazer o check-in </p>
<p>5h50 </p>
<p>Finalmente saia<br>Cadastre-se o passaporte </p>
<ul>
<li>Hotel 350 por dia, você pode usar Alipay, WeChat, UnionPay e outros métodos para transferir dinheiro </li>
<li>Três refeições 100 dias por dia, mas não é um bufê de hotel, mas uma lancheira terceirizada </li>
<li>Você também pode pedir comida para viagem e entregar comida às 12h e 6h todos os dias. </li>
<li>Courier só pode receber, mas não correio </li>
<li>Medir a temperatura duas vezes ao dia </li>
<li>Os sacos de lixo são lacrados e colocados do lado de fora da porta, e a equipe com roupas bioquímicas de corpo inteiro limpa regularmente </li>
</ul>
<h2 id="Check-in"><a href="#Check-in" class="headerlink" title="Check-in"></a>Check-in</h2><p>6h10 </p>
<p>Então o pequeno mago começou uma vida de quarentena de 14 dias<br>Mamãe estava preocupada que o pequeno mago ficasse entediado se não pudesse sair<br>No entanto, o pequeno mago era originalmente uma casa, e agora ele não precisa conhecer pessoas de acordo com a lei, então ele está muito feliz<br>Além disso, este parece ser o hotel M em que me hospedei quando fui para Cingapura pela primeira vez </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-12.jpg" alt=""></div></div></div>

<h2 id="14-dias-de-quarentena"><a href="#14-dias-de-quarentena" class="headerlink" title="14 dias de quarentena"></a>14 dias de quarentena</h2><p>Claro que você não pode tomar isso levianamente durante o isolamento<br>Em comparação com turistas que vieram do mesmo país ao longo do caminho com um certificado duplo-yin<br>No hotel isolado, pessoas de vários países serão encontradas </p>
<ul>
<li>Por exemplo, em 20 de dezembro <a href="https://www.zaobao.com.sg/znews/singapore/story20201220-1110087">13 pessoas foram internadas para isolamento e doença coronariana confirmada</a> </li>
<li>Também há 14 que adoecem no 16º dia após o fim do isolamento </li>
<li>Pequim 14 + 7 Observação Médica </li>
<li>Aumento de 70% na infecciosidade de novas variantes do coronavírus britânico </li>
<li>… </li>
</ul>
<p>Então, por um lado, abra as janelas 🪟 ventilação para garantir a circulação de ar e reduzir a concentração de vírus<br>Por outro lado, lave as mãos com frequência 🧽, não amoleça os olhos e o nariz 👀👃, use uma máscara honestamente 😷 </p>
]]></content>
      <tags>
        <tag>Covid</tag>
      </tags>
  </entry>
  <entry>
    <title>O princípio conjectura e realização de Tudo</title>
    <url>/pt/QSearch/</url>
    <content><![CDATA[<p>conteúdo de pesquisa </p>
<ol>
<li>Ler NTFS MFT </li>
<li>Construção da tabela hash </li>
<li>O caminho do sistema do arquivo </li>
<li>GUI e threads de trabalho </li>
<li>Métodos de pesquisa múltiplos </li>
<li>Interface MFC </li>
</ol>
<p>plano de pesquisa </p>
<ul>
<li>Início de abril a meados de abril para determinar a direção da pesquisa </li>
<li>Do final de abril ao final de abril. Preparação para cada ponto de conhecimento, teste simples </li>
<li>No início de maio, depuração e operação de design e desenvolvimento de programa </li>
<li>Meados de maio-final de maio Redação de tese de design de graduação </li>
</ul>
<p>Recursos e inovação </p>
<ol>
<li>O uso de CPU e memória está dentro de um intervalo razoável </li>
<li>O software é estável e oferece diferentes opções de pesquisa </li>
<li>Comparado com a função de pesquisa do Windows, a velocidade de localização do arquivo é super rápida </li>
</ol>
<h1 id="Localizacao-rapida-de-arquivos-de-disco-NTFS"><a href="#Localizacao-rapida-de-arquivos-de-disco-NTFS" class="headerlink" title="Localização rápida de arquivos de disco NTFS"></a>Localização rápida de arquivos de disco NTFS</h1><p><strong>Resumo</strong> </p>
<blockquote>
<p>Este artigo apresenta como enumerar os nomes de todos os arquivos e pastas no disco rígido no formato de disco Windows NTFS e usar o STL de C ++ para construir uma tabela de hash, bem como a GUI e threads de trabalho do MFC e, finalmente, realizar a implementação com base nas palavras-chave inseridas pelo usuário. Pesquise tão simples quanto a pesquisa por palavra-chave do google e, em seguida, retorne instantaneamente todos os arquivos / pastas correspondentes e obtenha recursivamente o caminho do sistema do arquivo / pasta. </p>
</blockquote>
<p>** Palavras-chave *<em>: *</em> NTFS, rápido, palavra-chave, pesquisa, caminho do arquivo ** </p>
<h2 id="1-Introducao"><a href="#1-Introducao" class="headerlink" title="1. Introdução"></a>1. Introdução</h2><p>A estrutura de diretórios do Windows. Em volumes NTFS, os arquivos são<br>Organize na forma de árvore B +, pressione ao pesquisar por arquivos no diretório<br>O método de pesquisa de árvore B + primeiro pesquisa o nó raiz (começando no diretório raiz) e, em seguida, compara o nome do arquivo a ser encontrado com o nome do arquivo correspondente ao nó filho no nó raiz para determinar qual nó filho corresponde à área de armazenamento a ser pesquisada e, em seguida Use o nó filho como o nó raiz atual e pesquise novamente até que o arquivo seja encontrado. ^ [1] ^ </p>
<p>Embora a pesquisa fornecida pelo sistema Microsoft possa pesquisar conteúdo de texto, a velocidade é muito insatisfatória. Na maioria dos casos, queremos apenas saber em qual pasta do computador o arquivo está armazenado, e este programa resolve isso muito bem. </p>
<h2 id="2-Breve-introducao-ao-NTFS"><a href="#2-Breve-introducao-ao-NTFS" class="headerlink" title="2 Breve introdução ao NTFS"></a>2 Breve introdução ao NTFS</h2><h3 id="2-1-NTFS"><a href="#2-1-NTFS" class="headerlink" title="2.1 NTFS"></a>2.1 NTFS</h3><p>NTFS (New Technology File System) 是 Windows<br>O sistema de arquivos padrão do NT e Windows posterior. O NTFS substitui o sistema de arquivos da tabela de alocação de arquivos (FAT) e fornece um sistema de arquivos para os sistemas operacionais da série Windows da Microsoft. O NTFS fez vários aprimoramentos em FAT e HPFS (High-Performance File System), por exemplo, ele oferece suporte a metadados e usa estruturas de dados avançadas para melhorar o desempenho, a confiabilidade e a utilização do espaço em disco. ^ [2] ^ </p>
<h3 id="2-2-Situacao-atual"><a href="#2-2-Situacao-atual" class="headerlink" title="2.2 Situação atual"></a>2.2 Situação atual</h3><p>Com Windows baseado em NT<br>Com a popularidade do 2000 / XP, muitos usuários individuais começaram a usar o NTFS. O NTFS também usa clusters como uma unidade para armazenar arquivos de dados, mas o tamanho do cluster em NTFS não depende do tamanho do disco ou da partição. A redução do tamanho do cluster não apenas reduz o desperdício de espaço em disco, mas também reduz a possibilidade de fragmentação do disco. NTFS oferece suporte à função de gerenciamento de criptografia de arquivo, que pode fornecer aos usuários um nível mais alto de garantia de segurança. ^ [3] ^ </p>
<h2 id="3-Preparacao"><a href="#3-Preparacao" class="headerlink" title="3 Preparação"></a>3 Preparação</h2><h3 id="3-1-Ideias-de-design"><a href="#3-1-Ideias-de-design" class="headerlink" title="3.1 Idéias de design"></a>3.1 Idéias de design</h3><p>Leia todos os nomes de arquivo do disco como dados e combine os dados de acordo com as palavras-chave inseridas pelo usuário. O caminho correto é retornado ao usuário junto com o caminho para facilitar a abertura do arquivo. </p>
<p>A ideia de design específico é mostrada na Figura 3-1. </p>
<p>! <a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_00.jpg">Figura 3-1 Idéias de design</a> </p>
<p>A maior vantagem de uma tabela de hash é que ela reduz muito o tempo consumido para armazenamento e pesquisa de dados, que pode ser quase considerado um tempo constante, o custo é apenas para consumir mais memória. Porém, com cada vez mais memória disponível, vale a pena trocar espaço por tempo. Além disso, a facilidade de codificação também é uma de suas características. </p>
<h3 id="3-2-O-que-e-USN"><a href="#3-2-O-que-e-USN" class="headerlink" title="3.2 O que é USN"></a>3.2 O que é USN</h3><p>A principal prioridade do programa é ler o USN. </p>
<p>USN 是 Atualizar diário de número de serviço ou alteração<br>A abreviatura de Journal, a função de gravar as informações modificadas no volume NTFS, você pode definir o número de arquivos e diretórios a serem monitorados na partição, e registrar a hora da modificação e o conteúdo do objeto monitorado. </p>
<p>Quando o log USN está habilitado, para cada volume NTFS, quando há informações sobre como adicionar, excluir e modificar arquivos, o NTFS usa o log USN para registrá-lo e armazená-lo como<br>O formato de USN_RECORD. </p>
<h3 id="3-3-Por-que-e-rapido"><a href="#3-3-Por-que-e-rapido" class="headerlink" title="3.3 Por que é rápido"></a>3.3 Por que é rápido</h3><p>O log USN é equivalente ao diretório WORD e fornece um índice. Claro, quando o conteúdo do artigo muda, o log USN registra quando a modificação é feita, mas não registra o que é modificado nele, então o arquivo de índice é muito pequeno. E quando você quiser encontrar o parágrafo específico do artigo, você não precisa girar a roda do mouse descontroladamente, apenas olhe diretamente para o índice analítico e você só precisa manter pressionado ctrl + clique do mouse para localizar. </p>
<p>Da mesma forma, quando você deseja encontrar um determinado arquivo, pode descobrir diretamente se o arquivo existe pesquisando o log USN (ou seja, o índice estabelecido). </p>
<p>PS: Embora o Windows não seja “tudo é um arquivo” (Unix / Linux<br>Uma das filosofias básicas de), mas a pasta também existe na forma de arquivos, então você também pode encontrar a localização através do USN. </p>
<h3 id="3-4-Meio-Ambiente"><a href="#3-4-Meio-Ambiente" class="headerlink" title="3.4 Meio Ambiente"></a>3.4 Meio Ambiente</h3><p>Como o formato NTFS é originalmente uma patente da Microsoft, uma série de funções API são fornecidas para nosso acesso conveniente. </p>
<p>Como um Visual C ++ 6.0 antigo, mas clássico<br>Ferramenta de programação, mas não havia formato NTFS naquela época, então escolhi o VC2005 como o ambiente de desenvolvimento integrado, e ele só pode ser executado em sistemas Windows após 2000. </p>
<h2 id="4-Implementacao-do-programa"><a href="#4-Implementacao-do-programa" class="headerlink" title="4 Implementação do programa"></a>4 Implementação do programa</h2><h3 id="4-1-Leia-USN"><a href="#4-1-Leia-USN" class="headerlink" title="4.1 Leia USN"></a>4.1 Leia USN</h3><p>A seguir estão todas as funções API fornecidas pela Microsoft ^ [4] ^, que estão incluídas no arquivo de cabeçalho <code>&lt;Winioctl.h&gt;</code>. </p>
<h4 id="4-1-1-Determinar-o-formato-do-disco"><a href="#4-1-1-Determinar-o-formato-do-disco" class="headerlink" title="4.1.1 Determinar o formato do disco"></a>4.1.1 Determinar o formato do disco</h4><p>Chame a seguinte função para descobrir o disco no formato NTFS </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">GetVolumeInformation(</span><br><span class="line">	lpRootPathName: PChar;               <span class="comment">// 磁盘驱动器代码字符串</span></span><br><span class="line">	lpVolumeNameBuffer: PChar;           <span class="comment">// 磁盘驱动器卷标名称</span></span><br><span class="line">	nVolumeNameSize: DWORD;              <span class="comment">// 磁盘驱动器卷标名称长度</span></span><br><span class="line">	lpVolumeSerialNumber: PDWORD;        <span class="comment">// 磁盘驱动器卷标序列号</span></span><br><span class="line">	var lpMaximumComponentLength: DWORD; <span class="comment">// 系统允许的最大文件名长度</span></span><br><span class="line">    var lpFileSystemFlags: DWORD;        <span class="comment">// 文件系统标识</span></span><br><span class="line">	lpFileSystemNameBuffer: PChar;       <span class="comment">// 格式类型</span></span><br><span class="line">	nFileSystemNameSize: DWORD           <span class="comment">// 文件操作系统名称长度</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>O lpFileSystemNameBuffer, que é o que desejamos, retornará cadeias de caracteres como “FAT32” e “NTFS”. </p>
<p>Em seguida, use um loop para contar as letras de unidade A-Z no formato NTFS e inicialize </p>
<h4 id="4-1-2-Obter-o-identificador-do-disco-da-unidade"><a href="#4-1-2-Obter-o-identificador-do-disco-da-unidade" class="headerlink" title="4.1.2 Obter o identificador do disco da unidade"></a>4.1.2 Obter o identificador do disco da unidade</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">HANDLE hVol = CreateFile(</span><br><span class="line">	<span class="string">&quot;盘符字符串&quot;</span>,  <span class="comment">// 必须如\.\C: (A-Z)的形式</span></span><br><span class="line">	GENERIC_READ | GENERIC_WRITE, <span class="comment">// 可以为</span></span><br><span class="line">	FILE_SHARE_READ | FILE_SHARE_WRITE, <span class="comment">// 必须包含有FILE_SHARE_WRITE</span></span><br><span class="line">	<span class="literal">NULL</span>, <span class="comment">// 这里不需要</span></span><br><span class="line">	OPEN_EXISTING, <span class="comment">// 必须包含OPEN_EXISTING, CREATE_ALWAYS可能会导致错误</span></span><br><span class="line">	FILE_ATTRIBUTE_READONLY, <span class="comment">// FILE_ATTRIBUTE_NORMAL可能会导致错误</span></span><br><span class="line">	<span class="literal">NULL</span>); <span class="comment">// 这里不需要</span></span><br></pre></td></tr></table></figure>

<p>Pontos a serem observados: </p>
<ol>
<li>CreateFile retorna um identificador, que será usado a seguir; </li>
<li>Como a letra da unidade deve estar no formato <code>\\. \ C:</code>, a barra invertida “//“ na linguagem <code>C ++</code> representa “/“; </li>
<li>Direitos de administrador são necessários (vista, UAC aparecerá no win7) </li>
</ol>
<p>Se <code>hVol! = INVALID_HANDLE_VALUE</code>, significa que o identificador foi obtido com sucesso e você pode continuar para a próxima etapa. </p>
<h4 id="4-1-3-Inicializar-log-USN"><a href="#4-1-3-Inicializar-log-USN" class="headerlink" title="4.1.3 Inicializar log USN"></a>4.1.3 Inicializar log USN</h4><p>Use <code>FSCTL_CREATE_USN_JOURNAL</code> como o código de controle de<code>DeviceIoControl</code>. </p>
<p><code>Cujd</code> é um ponteiro para o buffer de entrada, apontando para a estrutura<code>CREATE_USN_JOURNAL_DATA</code>. </p>
<h4 id="4-1-4-Obter-informacoes-de-registro-USN"><a href="#4-1-4-Obter-informacoes-de-registro-USN" class="headerlink" title="4.1.4 Obter informações de registro USN"></a>4.1.4 Obter informações de registro USN</h4><p>Use <code>FSCTL_QUERY_USN_JOURNAL</code> como o código de controle de<code>DeviceIoControl</code>. </p>
<p><code>lpOutBuffer</code> retorna um<code>USN_JOURNAL_DATA</code>, que é uma estrutura </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    DWORDLONG UsnJournalID;</span><br><span class="line">    USN       FirstUsn;</span><br><span class="line">    USN       NextUsn;</span><br><span class="line">    USN       LowestValidUsn;</span><br><span class="line">    USN       MaxUsn;</span><br><span class="line">    DWORDLONG MaximumSize;</span><br><span class="line">    DWORDLONG AllocationDelta;</span><br><span class="line">&#125; USN_JOURNAL_DATA, *PUSN_JOURNAL_DATA;</span><br></pre></td></tr></table></figure>

<p><code>UsnJournalID</code>,<code>FirstUsn</code>, <code>NextUsn</code> serão usados ​​na próxima etapa </p>
<h4 id="4-1-5-Obtendo-informacoes-do-arquivo-do-USN-Journal"><a href="#4-1-5-Obtendo-informacoes-do-arquivo-do-USN-Journal" class="headerlink" title="4.1.5 Obtendo informações do arquivo do USN Journal"></a>4.1.5 Obtendo informações do arquivo do USN Journal</h4><p>Visto que <code>USN</code> é armazenado na forma de<code>USN_RECORD</code>, sua estrutura é: </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">	DWORD RecordLength; <span class="comment">// 记录长度</span></span><br><span class="line">	WORD MajorVersion; <span class="comment">// 主版本</span></span><br><span class="line">	WORD MinorVersion; <span class="comment">// 次版本</span></span><br><span class="line">	DWORDLONG FileReferenceNumber; <span class="comment">// 文件引用数</span></span><br><span class="line">	DWORDLONG ParentFileReferenceNumber; <span class="comment">// 父目录引用数</span></span><br><span class="line">	USN Usn; <span class="comment">// USN</span></span><br><span class="line">	LARGE_INTEGER TimeStamp; <span class="comment">// 时间戳</span></span><br><span class="line">	DWORD Reason; <span class="comment">// 原因</span></span><br><span class="line">	DWORD SourceInfo; <span class="comment">// 源信息</span></span><br><span class="line">	DWORD SecurityId; <span class="comment">// 安全</span></span><br><span class="line">	ID DWORD FileAttributes; <span class="comment">// 文件属性</span></span><br><span class="line">	WORD FileNameLength; <span class="comment">// 文件长度</span></span><br><span class="line">	WORD FileNameOffset; <span class="comment">// 文件名偏移</span></span><br><span class="line">	DWORD ExtraInfo1;</span><br><span class="line">	DWORD ExtraInfo2; DWORD ExtraInfo3; <span class="comment">// Hypothetically added in version 2.3</span></span><br><span class="line">	WCHAR FileName[<span class="number">1</span>]; <span class="comment">// 文件名第一位的指针</span></span><br><span class="line">&#125; USN_RECORD, *PUSN_RECORD;</span><br></pre></td></tr></table></figure>

<p>Observe o <code>FileReferenceNumber</code>,<code>ParentFileReferenceNumber</code>, <code>FileNameLength</code>,<code>FileName</code> </p>
<p>Essas variáveis ​​são muito importantes </p>
<p><code>DeviceIoControl ()</code> coopera com <code>FSCTL_ENUM_USN_DATA</code> </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">0</span>!=DeviceIoControl(hVol,</span><br><span class="line">	 	FSCTL_ENUM_USN_DATA,</span><br><span class="line">	 	&amp;med,</span><br><span class="line">	 	<span class="keyword">sizeof</span> (med),</span><br><span class="line">	 	Buffer,</span><br><span class="line">	 	BUF_LEN,</span><br><span class="line">	 	&amp;usnDataSize,</span><br><span class="line">	 	<span class="literal">NULL</span>)) &#123;</span><br><span class="line"></span><br><span class="line">	 	DWORD dwRetBytes = usnDataSize - <span class="keyword">sizeof</span> (USN);</span><br><span class="line">	 	<span class="comment">// 找到第一个 USN 记录</span></span><br><span class="line">	 	UsnRecord = (PUSN_RECORD)(((PCHAR)Buffer)+<span class="keyword">sizeof</span> (USN));</span><br><span class="line"></span><br><span class="line">	 	<span class="keyword">while</span> (dwRetBytes&gt;<span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">	 		<span class="comment">// 获取到的信息</span></span><br><span class="line">	 		<span class="function">CString <span class="title">CfileName</span><span class="params">(UsnRecord-&gt;FileName, UsnRecord-&gt;FileNameLength/<span class="number">2</span>)</span></span>;</span><br><span class="line">	 		pfrnName.filename = nameCur.filename = CfileName;</span><br><span class="line">	 		pfrnName.pfrn = nameCur.pfrn = UsnRecord-&gt;ParentFileReferenceNumber;</span><br><span class="line"></span><br><span class="line">	 		<span class="comment">// Vector</span></span><br><span class="line">	 		VecNameCur.push_back(nameCur);</span><br><span class="line"></span><br><span class="line">	 		<span class="comment">// 构建hash...</span></span><br><span class="line">	 		frnPfrnNameMap[UsnRecord-&gt;FileReferenceNumber] = pfrnName;</span><br><span class="line">	 		<span class="comment">// 获取下一个记录</span></span><br><span class="line">	 		DWORD recordLen = UsnRecord-&gt;RecordLength;</span><br><span class="line">	 		dwRetBytes -= recordLen;</span><br><span class="line">	 		UsnRecord = (PUSN_RECORD)(((PCHAR)UsnRecord)+recordLen);</span><br><span class="line"></span><br><span class="line">	 	&#125;</span><br><span class="line">	 	<span class="comment">// 获取下一页数据</span></span><br><span class="line">	 	med.StartFileReferenceNumber = \*(USN \*)&amp;Buffer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Entre eles, <code>Med</code> é: </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">MFT_ENUM_DATA med;</span><br><span class="line"></span><br><span class="line">med.StartFileReferenceNumber = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">med.LowUsn = <span class="number">0</span>;<span class="comment">//UsnInfo.FirstUsn;</span></span><br></pre></td></tr></table></figure>

<p>Depois de testar aqui, descobriu-se que se o uso de <code>FirstUsn</code> às vezes é incorreto, resultando em dados incompletos, é melhor escrever 0 diretamente. </p>
<p><code>med.HighUsn = UsnInfo.NextUsn;</code> </p>
<p>Neste loop, o nome do arquivo obtido a cada vez é inserido no vetor e na tabela hash respectivamente (descrito abaixo). </p>
<h4 id="4-1-6-Excluir-arquivo-de-log-USN"><a href="#4-1-6-Excluir-arquivo-de-log-USN" class="headerlink" title="4.1.6 Excluir arquivo de log USN"></a>4.1.6 Excluir arquivo de log USN</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">DeviceIoControl(hVol,</span><br><span class="line">	FSCTL_DELETE_USN_JOURNAL,</span><br><span class="line">	&amp;dujd,</span><br><span class="line">	<span class="keyword">sizeof</span> (dujd),</span><br><span class="line">	<span class="literal">NULL</span>,</span><br><span class="line">	<span class="number">0</span>,</span><br><span class="line">	&amp;br,</span><br><span class="line">	<span class="literal">NULL</span>)</span><br></pre></td></tr></table></figure>

<h4 id="4-1-7-Resultados-da-enumeracao-de-todos-os-arquivos"><a href="#4-1-7-Resultados-da-enumeracao-de-todos-os-arquivos" class="headerlink" title="4.1.7 Resultados da enumeração de todos os arquivos"></a>4.1.7 Resultados da enumeração de todos os arquivos</h4><p>Salve os dados como Allfile.txt para análise, conforme mostrado na Figura 4-1. </p>
<p>! <a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_01.jpg">图 4-1 Allfile.txt</a> </p>
<p>! <a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_02.jpg">图 4-1 Allfile.txt</a> </p>
<p>Usei a unidade D no meu computador como um teste e enumerei todos os arquivos. Conforme mostrado na figura, existem cerca de arquivos de 40 W, um total de mais de 100 W de dados, e o tamanho do arquivo é de cerca de 20 MB. Isso tem uma estimativa vaga da quantidade de memória ocupada pelos programas subsequentes, que é cerca de 50M. Mesmo para apenas 1G de memória, está dentro de um intervalo razoável. Com os dados originais, a análise é a seguinte: </p>
<p>Por exemplo, o arquivo Linux programming practice.isz, seu caminho de sistema é: <code>D: \ Ghost \ Linux \ Linux programming practice.isz</code>, observe o resultado no arquivo: </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\</span><br><span class="line">Frn: 5000000000005</span><br><span class="line">Pfrn: NULL</span><br><span class="line">……</span><br><span class="line">……</span><br><span class="line">Ghost</span><br><span class="line">Frn: 20000000000fd</span><br><span class="line">Pfrn: 5000000000005</span><br><span class="line">……</span><br><span class="line">……</span><br><span class="line">Linux</span><br><span class="line">Frn: e0000000010d2</span><br><span class="line">Pfrn: 20000000000fd</span><br><span class="line">……</span><br><span class="line">……</span><br><span class="line">Linux编程实践.isz</span><br><span class="line">Frn: 190000000003b2</span><br><span class="line">Pfrn: e0000000010d2</span><br><span class="line">可以得出：</span><br><span class="line">Linux编程实践.isz-&gt;Pfrn &#x3D;&#x3D; Linux-&gt;Frn</span><br><span class="line">Linux-&gt;Pfrn &#x3D;&#x3D; Ghost-&gt;Frn</span><br><span class="line">Ghost-&gt;Pfrn &#x3D;&#x3D; D:\ -&gt; Frn</span><br><span class="line">D:\ -&gt; Pfrn 停止</span><br></pre></td></tr></table></figure>

<p>Assim, com uma função recursiva (chamando direta ou indiretamente sua própria função), você pode obter o caminho completo. </p>
<h3 id="4-2-Construir-dados-de-pesquisa"><a href="#4-2-Construir-dados-de-pesquisa" class="headerlink" title="4.2 Construir dados de pesquisa"></a>4.2 Construir dados de pesquisa</h3><h4 id="4-2-1-Construir-Vetor"><a href="#4-2-1-Construir-Vetor" class="headerlink" title="4.2.1 Construir Vetor"></a>4.2.1 Construir Vetor</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">name_cur</span> &#123;</span></span><br><span class="line">    CString filename;</span><br><span class="line">    DWORDLONG pfrn;</span><br><span class="line">&#125;Name_Cur;</span><br></pre></td></tr></table></figure>

<p>Vetor: </p>
<p>Um contêiner sequencial. Os elementos do vetor são acessados ​​por meio de seu índice de posição. Você pode chamar push_back ou<br>A função de inserção adiciona elementos ao vetor. Em vetor<br>Adicionar elementos ao contêiner pode causar a realocação de espaço de memória para o contêiner e também pode invalidar todos os iteradores. dentro<br>vetor<br>Adicionar (ou excluir) elementos no meio do contêiner invalidará todos os iteradores que apontam para os elementos após o ponto de inserção (ou exclusão). </p>
<p>Use Vector para armazenar &lt;nome do arquivo, diretório atual&gt;. Devido aos requisitos de pesquisa difusa, métodos de pesquisa rápida, como pesquisa binária, não são aplicáveis ​​aqui, e o método de passagem linear do vetor do início ao fim atende a esse requisito. . </p>
<h4 id="4-2-2-Construindo-uma-tabela-hash"><a href="#4-2-2-Construindo-uma-tabela-hash" class="headerlink" title="4.2.2 Construindo uma tabela hash"></a>4.2.2 Construindo uma tabela hash</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">pfrn_name</span> &#123;</span></span><br><span class="line">    DWORDLONG pfrn;</span><br><span class="line">    CString filename;</span><br><span class="line">&#125;Pfrn_Name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">map</span>&lt;DWORDLONG, Pfrn_Name&gt; Frn_Pfrn_Name_Map;</span><br></pre></td></tr></table></figure>

<p>Aqui usamos a função de biblioteca de mapas ^ [5] ^ fornecida pela STL, map é uma coleção de pares de valores-chave. mapa<br>O tipo geralmente pode ser entendido como uma matriz associativa (associativa<br>array): Você pode usar a chave como um subscrito para obter um valor, assim como o tipo de array embutido. A essência da associação é que o valor de um elemento é associado a uma chave específica, em vez de obtido pela posição do elemento na matriz. </p>
<ol>
<li>Considerando que, se você mesmo implementar a função hash, pode haver vários bugs que afetam o progresso, é melhor usar o mapa estável fornecido pelo STL para implementá-lo. </li>
<li>“Não reinvente a roda” Não reinvente a roda ^ [6] ^ <ol>
<li>Por exemplo, o Android do Google, é porque o Google não tem capacidade de desenvolver um kernel do sistema sozinho, então ele usa um kernel Linux muito maduro? Acho que é impossível para um gigante mundial como o Google ficar sem essa capacidade, mas respeita o princípio de não reinventar a roda. </li>
</ol>
</li>
</ol>
<h4 id="4-2-3-Inserir-dados"><a href="#4-2-3-Inserir-dados" class="headerlink" title="4.2.3 Inserir dados:"></a>4.2.3 Inserir dados:</h4><p>Isso é usado aqui na Seção 4.1.5, Get USN Journal<br>No loop de informações do arquivo, as informações <code>USN_RECORD</code> obtidas a cada vez, o<code>nome do arquivo</code>,<br><code>pfrn</code>,<code>frn</code> são inseridos no vetor e na tabela hash, respectivamente. </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pfrnName.filename &#x3D; nameCur.filename &#x3D; CfileName;</span><br><span class="line">pfrnName.pfrn &#x3D; nameCur.pfrn &#x3D; UsnRecord-&gt;ParentFileReferenceNumber;</span><br><span class="line">VecNameCur.push_back(nameCur);</span><br><span class="line">frnPfrnNameMap[UsnRecord-&gt;FileReferenceNumber] &#x3D; pfrnName;</span><br></pre></td></tr></table></figure>

<h3 id="4-3-Interface"><a href="#4-3-Interface" class="headerlink" title="4.3 Interface"></a>4.3 Interface</h3><p>Ao iniciar um projeto, o VC2005 fornece projetos de linha de comando (console) e projetos de GUI. A programação de linha de comando é muito conveniente, rápida, prática e relativamente simples. Se o console puder atender aos requisitos, a interface não será necessária. Ou, às vezes, a plataforma de destino não pode exibir a interface gráfica do usuário. mas,<br>GUI tem vantagens mais óbvias, como sistema de menu e melhor interatividade. Além disso, no processo de seleção de menu e movimentação de dados entre campos,<br>O mouse é muito útil e a GUI é o caminho a percorrer. Portanto, ao escrever o programa, primeiro experimente alguns dados intermediários no console e, em seguida, mude para a interface GUI sem problemas. </p>
<p>MFC: Microsoft Foundation Classes, também conhecido como MFC<br>, É a resposta da Microsoft para “reduzir o Windows<br>A maior contribuição feita pela programação é entediante, entediante e difícil.<br>Torna a geração de caixas de diálogo extremamente simples. Ele também implementa um sistema de entrega de mensagens (mensagem<br>despacho), lidando com os erros fáceis de WPARAM e LP ARAM. MFC<br>É até a força motriz para atrair algumas pessoas para o C ++.<br>Este programa é implementado pelo MFC fornecido pela Microsoft, conforme mostrado na Figura 4-2: </p>
<p>! <a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_04.jpg">Figura 4-2 Interface MFC</a> </p>
<h4 id="4-3-1-Principio-KISS"><a href="#4-3-1-Principio-KISS" class="headerlink" title="4.3.1 Princípio KISS"></a>4.3.1 Princípio KISS</h4><p>O princípio do KISS é “Mantenha uma amostra e<br>A abreviatura de “Stupid”, simplicidade e facilidade de operação são os princípios mais importantes de design. </p>
<p>O princípio KISS é provavelmente o mais respeitado em design, design de reforma da casa, design de interface<br>Em termos de design operacional, coisas complexas estão se tornando cada vez mais populares, enquanto coisas simples estão se tornando cada vez mais reconhecidas. Por exemplo, esses designs de IU e nossas páginas da web em chinês são exemplos negativos. “IKEA” (IKEA) simples e eficientes ideias de design e produção para casa; “Microsoft” (Microsoft) “o que você vê é o que você obtém” conceito; “Google” (Google) estilo de negócios simples e direto, sem exceção, siga O princípio do “beijo”. ^ [7] ^ </p>
<h4 id="4-3-2-Funcao"><a href="#4-3-2-Funcao" class="headerlink" title="4.3.2 Função"></a>4.3.2 Função</h4><p>De acordo com o princípio do beijo, seja o mais conciso possível. Adicionar caixa de lista de botões da caixa de edição<br>menu ^ [8] ^ As funções desses controles são as seguintes: </p>
<ul>
<li>Editbox <ul>
<li>Obtenha a string que precisa ser pesquisada pelo usuário </li>
</ul>
</li>
<li>Botão <ol>
<li>Pegue a string em EditBox </li>
<li>O personagem é muito curto para aparecer um prompt </li>
<li>Adicione uma imagem de lupa, a função é clara à primeira vista </li>
</ol>
</li>
<li>Listbox <ol>
<li>Exibir o nome e o caminho do arquivo correspondente, clique duas vezes para abrir o arquivo </li>
<li>Como o caminho pode ser relativamente longo, adicione uma barra de rolagem horizontal </li>
<li>Clique duas vezes no caminho do arquivo de resultado na caixa de listagem para abrir o arquivo clicado </li>
</ol>
</li>
<li>Cardápio <ul>
<li>Menu, você pode selecionar caso, ordem de pesquisa </li>
</ul>
</li>
</ul>
<h3 id="4-4-Entrar-no-topico"><a href="#4-4-Entrar-no-topico" class="headerlink" title="4.4 Entrar no tópico"></a>4.4 Entrar no tópico</h3><h4 id="4-4-1-Por-que-unir-topicos"><a href="#4-4-1-Por-que-unir-topicos" class="headerlink" title="4.4.1 Por que unir tópicos"></a>4.4.1 Por que unir tópicos</h4><p>Os benefícios dos fios: os fios são baratos. O thread inicia mais rápido, sai mais rápido e tem um impacto menor nos recursos do sistema. </p>
<p>Considere também: </p>
<ol>
<li>Devido à limitação de io, não faz muito sentido usar vários threads para ler MFT ao mesmo tempo no mesmo disco rígido. </li>
<li>O acesso do disco ao MFT localizado em diferentes partições do mesmo disco rígido pode afetar adversamente a velocidade. Para computadores com vários discos rígidos, a eficiência deve ser muito melhorada. No entanto, os usuários de vários discos rígidos podem formar uma matriz RAID. A melhor solução deve ser ler os discos A-Z sequencialmente. </li>
<li>Quando o MFC foi criado pela primeira vez, ele foi executado sequencialmente. Como resultado, a interface não poderia ser exibida até que todas as estatísticas de dados fossem concluídas. Durante este processo, os usuários facilmente perderiam a paciência. </li>
<li>Finalmente decida um thread de IU, uma estatística de plano de fundo do thread de trabalho. </li>
</ol>
<h4 id="4-4-2-Iniciar-um-thread-de-trabalho-no-MFC"><a href="#4-4-2-Iniciar-um-thread-de-trabalho-no-MFC" class="headerlink" title="4.4.2 Iniciar um thread de trabalho no MFC"></a>4.4.2 Iniciar um thread de trabalho no MFC</h4><p>O MFC há muito adicionou suporte para multithreading. Em um MFC típico<br>No programa, o suporte para multithreading está oculto por trás de um grande trabalho incrível. MFC<br>Até tentativas de fortalecer certos conceitos Win32 relacionados ao multithreading. </p>
<p>Ambos GUI e threads de trabalho são iniciados com AfxBeginThread (), mas o MFC usa a natureza de sobrecarga das funções C ++ para fornecer duas declarações diferentes para esta função. O compilador selecionará automaticamente o correto a ser usado com base nos parâmetros fornecidos. ^ [9] ^ </p>
<p>Use AfxBeginThread para iniciar o tópico.<br>pParam Qualquer valor de 4 bytes, usado para passar para o novo segmento. Pode ser um número inteiro, ou um ponteiro, ou apenas um zero. </p>
<p>Apenas os dois primeiros parâmetros são usados ​​aqui, a função de thread no objeto e o ponteiro do objeto </p>
<p>Você pode ver dois threads no gerenciador de tarefas, conforme mostrado na Figura 4-3 </p>
<p>! <a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_03.jpg">Figura 4-3 Gerenciador de tarefas exibe o número de threads</a> </p>
<p>Quando o thread de trabalho concluir sua tarefa, ele encerrará automaticamente e retornará a um thread. </p>
<h4 id="4-4-3-Minimize-para-a-area-de-notificacao"><a href="#4-4-3-Minimize-para-a-area-de-notificacao" class="headerlink" title="4.4.3 Minimize para a área de notificação"></a>4.4.3 Minimize para a área de notificação</h4><p>Agora, mais e mais programas clicam em fechar no canto superior direito, que na verdade é minimizado para o ícone da bandeja. Para sair do programa, você precisa clicar com o botão direito no ícone da bandeja para sair. </p>
<p>Realize a minimização sem sair do programa, você pode encontrar arquivos convenientemente. </p>
<p>1) Minimize a exibição na barra de tarefas. </p>
<p>2) Clique em Fechar para sair do ícone da bandeja sem exibi-lo na barra de tarefas; clique duas vezes para responder à janela de exibição. </p>
<p>3) Adicionar menu ao ícone da bandeja. </p>
<h3 id="4-5-Encontrar"><a href="#4-5-Encontrar" class="headerlink" title="4.5 Encontrar"></a>4.5 Encontrar</h3><h4 id="4-5-1-Wildcard"><a href="#4-5-1-Wildcard" class="headerlink" title="4.5.1 Wildcard"></a>4.5.1 Wildcard</h4><p>Em aplicativos reais, é impossível lembrar o nome do arquivo claramente, como test.2012-5-14.txt, que muitas vezes significa “teste<br>.txt ”, portanto, é necessária uma pesquisa difusa. Porque no console, o nome do arquivo é &lt;nome do arquivo,<br>pfrn&gt; Criar uma tabela de hash. Se você deseja implementar a pesquisa difusa, a tabela de hash se torna desnecessária. Você pode usar diretamente o vetor de contêiner. </p>
<p>De acordo com a situação real, nenhum caractere curinga estrito é necessário, “\ *?”<br>Pode resolver a maioria dos problemas de pesquisa, além de que os usuários geralmente podem não saber o uso de curingas, muito menos expressões regulares. Então comece com “espaço”<br>Em vez de “\ *?”, Implemente o Baidu<br>O método de pesquisa do Google de separar palavras-chave com espaços é uma boa solução. \ * \ * \ * \ * </p>
<h4 id="4-5-2-Caixa-pedido"><a href="#4-5-2-Caixa-pedido" class="headerlink" title="4.5.2 Caixa, pedido"></a>4.5.2 Caixa, pedido</h4><p>Geralmente, existem as duas situações a seguir: </p>
<ol>
<li>O usuário pode não se lembrar do caso do nome do arquivo ou caminho </li>
<li>Às vezes, há muitos arquivos, e letras maiúsculas estritas podem ser necessárias para filtrar os arquivos corretos </li>
<li>Não consigo lembrar a ordem das palavras-chave </li>
</ol>
<p>Portanto, forneça as duas opções a seguir: </p>
<ol>
<li>Caso estrito </li>
<li>Sem ordem </li>
</ol>
<p>De acordo com a situação geral, o padrão é: não diferencia maiúsculas de minúsculas, pesquisa sequencial </p>
<h4 id="4-5-3-Privacidade-do-usuario-e-caminho-do-sistema"><a href="#4-5-3-Privacidade-do-usuario-e-caminho-do-sistema" class="headerlink" title="4.5.3 Privacidade do usuário e caminho do sistema"></a>4.5.3 Privacidade do usuário e caminho do sistema</h4><ol>
<li>Considere que algumas pastas são usadas para armazenar arquivos privados dos usuários. </li>
<li>Pastas do sistema, como: <code>c: \ windows \ *</code>, que não são usadas por usuários em geral. A mesma pesquisa apenas aumentará os arquivos desnecessários e sobrecarregará o sistema. </li>
</ol>
<p>Portanto, é necessário adicionar uma opção de exclusão de pasta, conforme mostrado na Figura 4-4 </p>
<p>! <a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_06.jpg">Figura 4-4 Excluir interface de pasta</a> </p>
<p>A função correspondente é: </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isIgnore</span><span class="params">( <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;\* pignorelist )</span> </span>&#123;</span><br><span class="line">	<span class="built_in">string</span> tmp = CW2A(path);</span><br><span class="line">	<span class="keyword">for</span> ( <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;::iterator it = pignorelist-&gt;begin();</span><br><span class="line">		it != pignorelist-&gt;end(); ++it ) &#123;</span><br><span class="line">			<span class="keyword">size_t</span> i = it-&gt;length();</span><br><span class="line">			<span class="keyword">if</span> ( !tmp.compare(<span class="number">0</span>, i, \*it,<span class="number">0</span>, i) ) &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-5-4-Implementacao"><a href="#4-5-4-Implementacao" class="headerlink" title="4.5.4 Implementação"></a>4.5.4 Implementação</h4><p>Nova classe de string correspondente </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cmpStrStr</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	cmpStrStr(<span class="keyword">bool</span> uplow, <span class="keyword">bool</span> inorder) &#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;uplow = uplow;</span><br><span class="line">		<span class="keyword">this</span>-&gt;isOrder = inorder;</span><br><span class="line">	&#125;</span><br><span class="line">	~cmpStrStr() &#123;&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">cmpStrFilename</span><span class="params">(CString str, CString filename)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">infilename</span><span class="params">(CString &amp;strtmp, CString &amp;filenametmp)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">bool</span> uplow;</span><br><span class="line">	<span class="keyword">bool</span> isOrder;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>Atravesse o VecNameCur em ** 4.2.1 **, passe a função de correspondência cmpStrFilename e obtenha o nome do arquivo correspondente </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ( <span class="built_in">vector</span>&lt;Name_Cur&gt;::const_iterator cit = VecNameCur.begin();</span><br><span class="line">	cit != VecNameCur.end(); ++cit) &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( cmpstrstr.cmpStrFilename(str, cit-&gt;filename) ) &#123;</span><br><span class="line">		path.Empty();</span><br><span class="line">		<span class="comment">// 还原 路径</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">// vol:\  path \ cit-&gt;filename</span></span><br><span class="line">		getPath(cit-&gt;pfrn, path);</span><br><span class="line">		path += cit-&gt;filename;</span><br><span class="line">		<span class="comment">// path已是全路径</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> ( isIgnore(pignorelist) ) &#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		rightFile.push_back(path);</span><br><span class="line">		<span class="comment">//path.Empty();</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cmpStrFilename函数：</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> end = str.GetLength();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ( pos &lt; end ) &#123;</span><br><span class="line">	<span class="comment">// 对于str，取得 每个空格分开为的关键词</span></span><br><span class="line">	pos = str.Find( _T(<span class="string">&#x27; &#x27;</span>) );</span><br><span class="line"></span><br><span class="line">	CString strtmp;</span><br><span class="line">	<span class="keyword">if</span> ( pos == <span class="number">-1</span> ) &#123;</span><br><span class="line">		<span class="comment">// 无空格</span></span><br><span class="line">		strtmp = str;</span><br><span class="line">		pos = end;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		strtmp = str.Mid(<span class="number">0</span>, pos<span class="number">-0</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( !infilename(strtmp, filename) ) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	str.Delete(<span class="number">0</span>, pos);</span><br><span class="line">	str.TrimLeft(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Você pode facilmente reescrever o algoritmo de correspondência de string na função infilename para obter algumas extensões </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">CString <span class="title">filenametmp</span><span class="params">(filename)</span></span>;</span><br><span class="line"><span class="keyword">int</span> pos;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( !uplow ) &#123;</span><br><span class="line">	<span class="comment">// 大小写敏感</span></span><br><span class="line">	filenametmp.MakeLower();</span><br><span class="line">	pos = filenametmp.Find(strtmp.MakeLower());</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	pos = filenametmp.Find(strtmp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="number">-1</span> == pos ) &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( !isOrder ) &#123;</span><br><span class="line">	<span class="comment">// 无顺序</span></span><br><span class="line">	filename.Delete(<span class="number">0</span>, pos+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-5-5-Saida-de-caminho"><a href="#4-5-5-Saida-de-caminho" class="headerlink" title="4.5.5 Saída de caminho"></a>4.5.5 Saída de caminho</h4><p>Depois de obter o nome do arquivo correspondente, a próxima etapa é obter o caminho do sistema do arquivo. Passe o nome completo do nome do arquivo correspondente obtido acima para a tabela hash frnPfrnNameMap construída em ** 4.2.2 ** e obtenha o caminho recursivamente. </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">CString <span class="title">Volume::getPath</span><span class="params">(DWORDLONG frn, CString &amp;path)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 查找2</span></span><br><span class="line">	Frn_Pfrn_Name_Map::iterator it = frnPfrnNameMap.find(frn);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (it != frnPfrnNameMap.end()) &#123;</span><br><span class="line"></span><br><span class="line">		  <span class="keyword">if</span> ( <span class="number">0</span> != it-&gt;second.pfrn ) &#123;</span><br><span class="line">		 	  getPath(it-&gt;second.pfrn, path);</span><br><span class="line">		  &#125;</span><br><span class="line"></span><br><span class="line">		  path += it-&gt;second.filename;</span><br><span class="line">		  path += ( _T(<span class="string">&quot;\&quot;) );</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	return path;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="5-Analise-de-complexidade"><a href="#5-Analise-de-complexidade" class="headerlink" title="5 Análise de complexidade"></a>5 Análise de complexidade</h2><h3 id="5-1-Complexidade-de-tempo"><a href="#5-1-Complexidade-de-tempo" class="headerlink" title="5.1 Complexidade de tempo"></a>5.1 Complexidade de tempo</h3><p>Em teoria, a complexidade do tempo é: </p>
<p>! <a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_05.jpg">Figura 5-1 Análise de complexidade</a> </p>
<p>No processador AMD Athlon (tm) II X2 245 2,9 GHz, o resultado é quase instantâneo. </p>
<h3 id="5-2-Complexidade-do-espaco"><a href="#5-2-Complexidade-do-espaco" class="headerlink" title="5.2 Complexidade do espaço"></a>5.2 Complexidade do espaço</h3><p>Devido ao grande número de arquivos de computador - geralmente 10W-100W, o uso de memória do próprio programa pode ser ignorado. </p>
<p>234.708 arquivos sobre 43M. </p>
<p>Para sistemas com pelo menos 2G de memória hoje, não é um fardo. </p>
<h2 id="6-problemas-encontrados"><a href="#6-problemas-encontrados" class="headerlink" title="6 problemas encontrados"></a>6 problemas encontrados</h2><h3 id="6-1-Incapaz-de-inicializar-o-arquivo-USN"><a href="#6-1-Incapaz-de-inicializar-o-arquivo-USN" class="headerlink" title="6.1 Incapaz de inicializar o arquivo USN"></a>6.1 Incapaz de inicializar o arquivo USN</h3><p>O disco O no computador não pode inicializar o arquivo de log USN. Por meio da depuração, descobriu-se que: </p>
<p>DeviceIoControl retorna 0, GetLastError 0x70 </p>
<p>Verifique o msdn, o motivo é ERROR_SHARING_PAUSED </p>
<p>Acontece que você se esqueceu de inicializar e adicionar o seguinte código, o programa pode acessar o disco O normalmente </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">CREATE_USN_JOURNAL_DATA cujd;</span><br><span class="line">cujd.MaximumSize = <span class="number">0</span>; <span class="comment">// 0表示使用默认值</span></span><br><span class="line">cujd.AllocationDelta = <span class="number">0</span>; <span class="comment">// 0表示使用默认值</span></span><br></pre></td></tr></table></figure>

<h3 id="6-2-O-problema-de-wchar-e-char-sob-Unicode"><a href="#6-2-O-problema-de-wchar-e-char-sob-Unicode" class="headerlink" title="6.2 O problema de wchar e char sob Unicode"></a>6.2 O problema de wchar e char sob Unicode</h3><p>Inicialmente, em termos de processamento de string, a string de função da biblioteca padrão foi usada como método de processamento, mas em Unicode<br>A seguir está um wchar de byte duplo, que teve muitos problemas na conversão de string.Finalmente, CString é usado como string padrão e \ _T (“”) é usado para inicializar a string. </p>
<h3 id="6-3-ifdef-problema-de-posicao"><a href="#6-3-ifdef-problema-de-posicao" class="headerlink" title="6.3 #ifdef problema de posição"></a>6.3 #ifdef problema de posição</h3><p>\ #ifdef, nenhum ponto de interrupção pode ser definido nele, e então percebi que #define foi escrito antes de include. </p>
<h3 id="6-4-Transferencia-de-parametros"><a href="#6-4-Transferencia-de-parametros" class="headerlink" title="6.4 Transferência de parâmetros"></a>6.4 Transferência de parâmetros</h3><p>Comecei a projetar com pensamento orientado a processos e tive o problema de passar o mesmo identificador por meio de parâmetros.Depois, mudou para um método de classe para melhorar muito. </p>
<h2 id="7-pequenas-otimizacoes"><a href="#7-pequenas-otimizacoes" class="headerlink" title="7 pequenas otimizações"></a>7 pequenas otimizações</h2><h3 id="7-1-Velocidade-de-leitura"><a href="#7-1-Velocidade-de-leitura" class="headerlink" title="7.1 Velocidade de leitura"></a>7.1 Velocidade de leitura</h3><p>Ao construir a função hash, três métodos foram pensados ​​e experimentos foram realizados respectivamente, e a função tempo foi usada para contar o tempo gasto. Os resultados são os seguintes: </p>
<p>1) Depois de modificar o código, leia usn uma vez, armazene-o em um arquivo temporário, leia e construa uma tabela hash </p>
<p>Cada corrida, o tempo médio é de cerca de 27s </p>
<p>2) Use o vetor para armazenar dados na memória, após a liberação, </p>
<p>Os resultados são gratificantes e o tempo aumentou quase 10 vezes! ! ! Conforme mostrado na Figura 7-1: </p>
<p>! <a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_06.jpg">7-1 Percorrer todos os discos</a> </p>
<p>Está completamente dentro da faixa aceitável. </p>
<p>A primeira execução foi obviamente demorada e, em seguida, o arquivo foi pré-lido do cache de disco e a velocidade disparou. Os pontos de acesso de análise devem estar no tempo de busca do disco e na leitura do arquivo. </p>
<h3 id="7-2-Metodo-de-abertura-de-arquivo"><a href="#7-2-Metodo-de-abertura-de-arquivo" class="headerlink" title="7.2 Método de abertura de arquivo"></a>7.2 Método de abertura de arquivo</h3><p>Em ** 4.3.2 **, clique duas vezes no caminho do arquivo na ListBox para abrir o arquivo de resposta. No início, a função de sistema system () foi usada, mas uma janela de console preta aparecerá e a janela principal será bloqueada, etc. A execução só pode continuar depois que o arquivo for fechado, o que é muito prejudicial para a experiência do usuário. Em vez disso, chame a função ShellExecute para abrir um novo processo e a janela principal pode continuar em execução. </p>
<h3 id="7-3-Barra-de-progresso"><a href="#7-3-Barra-de-progresso" class="headerlink" title="7.3 Barra de progresso"></a>7.3 Barra de progresso</h3><p>Depois que a versão V1.0 foi lançada, não houve nenhum prompt quando alguns alunos relataram o arquivo de estatísticas de plano de fundo, portanto, não sei quando será concluído. Portanto, uma barra de progresso é adicionada na parte inferior da interface principal para aumentar a interatividade, conforme mostrado na figura<br>7-2: </p>
<p>! <a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_07.jpg">Figura 7-2 Barra de progresso</a> </p>
<p>Claro, a função thread também fez as alterações necessárias: </p>
<h1 id="8-Conclusao"><a href="#8-Conclusao" class="headerlink" title="8 Conclusão"></a>8 Conclusão</h1><p>Neste ponto, as funções básicas do programa estão concluídas.Os testes em vários computadores e sistemas diferentes (XP e séries posteriores do Windows) basicamente não têm animações suspensas e travamentos do programa. </p>
<p>Devido ao tempo e outros motivos, ainda existem muitas funções que não foram implementadas, como a interface não pode ser estendida e os dados do arquivo não podem ser coletados dinamicamente. </p>
<h1 id="referencias"><a href="#referencias" class="headerlink" title="referências"></a>referências</h1><p>[1] Artigo de hardware. Especificação do sistema de arquivos NTFS [OL]. Biblioteca Baidu, 2011: 30.<br>[2] Beiyu. Pesquisa em várias tecnologias de sistema de arquivos NTFS [OL]. 2007: 7.<br>[3] Baby. Enciclopédia interativa [OL]. Http://<a href="http://www.hudong.com/wiki/ntfs">www.hudong.com/wiki/ntfs</a><br>[4] Microsoft. Biblioteca MSDN [OL]. 2012:<br>[5] Stanley B.Lippman / Josée LaJoie / Barbara E.Moo. C \ + \ + Primer [M]. Addison-Wesley Professional, 2006: 10.3<br>[6] Eric S. Raymond. Tradutores: Jiang Hong, He Yuan, Cai Xiaojun. The Art of UNIX Programming [m]. Publishing House of Electronics Industry, 2006:<br>[7] Chen Hao. Alguns princípios de design de software [OL]. Http://coolshell.cn/articles/4535.html<br>[8] Sun Xin. VC ++ explicação detalhada detalhada [m]. Indústria de eletrônicos, 2006<br>[9] Jim Beveridge / Robert Wiener. Aplicativos multithreading no Win32: o guia completo para threads<br>[10] Addison-Wesley Professional, 1996: 223-243 </p>
<h1 id="Resumo-em-ingles"><a href="#Resumo-em-ingles" class="headerlink" title="Resumo em inglês"></a>Resumo em inglês</h1><p>** Posicionamento rápido dos arquivos de disco NTFS ** </p>
<p>LE IH Austria </p>
<p>(Escola de Informação e Computação, Universidade Agrícola de Anhui, Hefei 230036) </p>
<p>** Resumo ** ： Este artigo descreve no disco NTFS do Windows, o<br>enumeração de todos os nomes dos arquivos e pastas no disco rígido,<br>e para construir uma tabela de hash usando C ++ STL, MFC GUI e thread de trabalho.<br>Em última análise, o usuário deve inserir palavras-chave, como uma pesquisa simples como o google<br>pesquisa por palavra-chave e, em seguida, retorna instantaneamente todos os arquivos / pastas correspondentes<br>e seu caminho de sistema. </p>
<p>** Palavras-chave: ** NTFS, Fast, Search, Keywords, File Path </p>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>Everything</tag>
        <tag>NTFS</tag>
      </tags>
  </entry>
  <entry>
    <title>🇮🇹-0-2.</title>
    <url>/pt/italy-0-2/</url>
    <content><![CDATA[<h2 id="Vaticano"><a href="#Vaticano" class="headerlink" title="Vaticano"></a>Vaticano</h2><p>Vaticano original na Itália<br>A área é menor que as faculdades e universidades domésticas<br>Território não está aberto<br>Além dos museus </p>
<a id="more"></a>

<h3 id="egipcio"><a href="#egipcio" class="headerlink" title="egípcio"></a>egípcio</h3><p>Eu vi que a múmia se sente mais horrível.<br>Atreva-se a tirar fotos<br>Eu tenho medo de ser alma perseguida </p>
<p>Há também um Nosbis </p>
<p>Se você joga Creed de Assassino: Origem<br>Vai ver muitos elementos familiares </p>
<h3 id="Heroi-mitico"><a href="#Heroi-mitico" class="headerlink" title="Herói mítico"></a>Herói mítico</h3><p>Infelizmente, o pequeno mago não atingiu o nível correspondente no cultivo de arte.<br>Eu vi a arte desses livros didáticos, e os resultados não sabiam quem é.<br>Estar envergonhado </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-06.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-10.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-14.jpg" alt=""></div></div></div>

<h3 id="Jardim-de-pinho-e-terra-quebrada"><a href="#Jardim-de-pinho-e-terra-quebrada" class="headerlink" title="Jardim de pinho e terra quebrada"></a>Jardim de pinho e terra quebrada</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-17.jpg" alt=""></div></div></div>

<h3 id="Buraco-de-Laoy-e-seu-filho"><a href="#Buraco-de-Laoy-e-seu-filho" class="headerlink" title="Buraco de Laoy e seu filho"></a>Buraco de Laoy e seu filho</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-28.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-25.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-27.jpg" alt=""></div></div></div>

<h3 id="Salao-de-exposicao-circular"><a href="#Salao-de-exposicao-circular" class="headerlink" title="Salão de exposição circular"></a>Salão de exposição circular</h3><p>O centro central é o bidé usado por Nero, Nero. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-29.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-31.jpg" alt=""></div></div></div>

<h3 id="mural"><a href="#mural" class="headerlink" title="mural"></a>mural</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-37.jpg" alt=""></div></div></div>

<h3 id="Quarto-de-pintura-Rafael"><a href="#Quarto-de-pintura-Rafael" class="headerlink" title="Quarto de pintura Rafael."></a>Quarto de pintura Rafael.</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-39.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-40.jpg" alt=""></div></div></div>

<h3 id="Capela-de-Sistina"><a href="#Capela-de-Sistina" class="headerlink" title="Capela de Sistina"></a>Capela de Sistina</h3><p>O teste final e gênese de Michelangelo<br>Não é permitido tirar fotos<br>Você só pode ficar por 15 minutos por pessoa. </p>
<p>O século original que geralmente vê é realmente o mais intermediário, de fato, um total de nove capítulos<br>Escuridão, Dia Criativo, Mês, Grama, Semland, Criando Adam, Criando Eva, Original Sin - Eden Estendido, Dedicação Noé, Grande Inundação, Noairun </p>
<h3 id="Escada-em-espiral"><a href="#Escada-em-espiral" class="headerlink" title="Escada em espiral"></a>Escada em espiral</h3><p>Exportar continua a ficar chocado<br>Acabou por estar aqui </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-41.jpg" alt=""></div></div></div>

<h3 id="Copo-sagrado"><a href="#Copo-sagrado" class="headerlink" title="Copo sagrado"></a>Copo sagrado</h3><p>Fate fica noite </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-44.jpg" alt=""></div></div></div>

<h2 id="Sao-Pedro-Square"><a href="#Sao-Pedro-Square" class="headerlink" title="São Pedro Square"></a>São Pedro Square</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-45.jpg" alt=""></div></div></div>

<h2 id="Anjo-Fort"><a href="#Anjo-Fort" class="headerlink" title="Anjo Fort."></a>Anjo Fort.</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-47.jpg" alt=""></div></div></div>

<p>De repente, o Credo Assassino </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-53.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-54.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-55.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-56.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-57.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-58.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-59.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-60.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-61.jpg" alt=""></div></div></div>

<h2 id="por-do-sol"><a href="#por-do-sol" class="headerlink" title="pôr do sol"></a>pôr do sol</h2><p>Primeira vez assistindo pôr do sol </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-62.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-66.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-67.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-69.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-68.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-70.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-71.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-73.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-74.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-76.jpg" alt=""></div></div></div>

<h2 id="O-proximo-dia"><a href="#O-proximo-dia" class="headerlink" title="O próximo dia"></a>O próximo dia</h2><p>Na estrada, um irmão mais pequeno vem recomendar um ônibus de viagem<br>Recebeu o dinheiro para obter ingressos, então as pessoas desapareceram<br>Quando pensei que era um mentiroso, meu irmão mais pequeno voltou com dois votos.<br>Loop, você pode sair no ônibus em todos os momentos, ou muito bom </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-78.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-79.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-82.jpg" alt=""></div></div></div>

<h2 id="panteao"><a href="#panteao" class="headerlink" title="panteão"></a>panteão</h2><p>Há muitas pessoas, e eu já vi um olho lá fora. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-80.jpg" alt=""></p>
<h2 id="Besta-de-luta-romana"><a href="#Besta-de-luta-romana" class="headerlink" title="Besta de luta romana."></a>Besta de luta romana.</h2><p>Escorpião, última vez que vi a fera, o pequeno mago jogou assassino’s Creed: Apocalipse<br>Subir a fera, veja o pôr do sol<br>Eu fiquei chocado por um longo tempo.<br>Eu não esperava vê-lo no mundo tridimensional.<br>É incrível? </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-92.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-86.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-91.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-89.jpg" alt=""></div></div></div>

<h2 id="Arco-do-Triunfo"><a href="#Arco-do-Triunfo" class="headerlink" title="Arco do Triunfo"></a>Arco do Triunfo</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-87.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-88.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-90.jpg" alt=""></p>
<h2 id="Hermes-pequena-carteira"><a href="#Hermes-pequena-carteira" class="headerlink" title="Hermes pequena carteira"></a>Hermes pequena carteira</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-94.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-95.jpg" alt=""></div></div></div>

<p>Voltar para a rua de construção de luxo CBD<br>Herbed recomendado para comprar amor ma shi bag<br>Diga o que está no luxo, é também uma existência superior </p>
<p>O pequeno mago não ouviu Hermès antes que a Apple tenha lançado a alça.<br>Naturalmente não acredite<br>Eu quero ler menos, não minta para mim.<br>Indo para o Google “Hermes não é um luxo”<br>Surpreso ao descobrir que o poder é realmente verdadeiro </p>
<p>Escove-o, comprei um pacote de cachorrinhos.<br>Tenha cuidado com a caixa em branco<br>Confira para ver uma enorme caixa incomparável na pilha de lixo ao lado dela. </p>
<h2 id="aeroporto"><a href="#aeroporto" class="headerlink" title="aeroporto"></a>aeroporto</h2><p>Tomando todo o caminho, finalmente voltei.<br>Ao contrário do Japão, a Europa pode reembolsar no aeroporto<br>perfeito </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-97.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-98.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Italy</tag>
        <tag>🇮🇹</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-1-0.</title>
    <url>/pt/japan-1-0/</url>
    <content><![CDATA[<h1 id="Quioto"><a href="#Quioto" class="headerlink" title="Quioto"></a>Quioto</h1><p>Onze feriados voltaram de 🇮🇹<br>Talvez porque o cartão de crédito é escovado, China merchants Bank enviado para Zhang Premium </p>
<p>Um dia depois de meio mês, o pequeno mago é enviado para o Japão para ver a folha de bordo.<br>Indica que o planejamento de rotas foi feito<br>Kyoto-&gt; Nara-&gt; Kinosaki-&gt; Osaka<br>Se você não é bom no sistema, por favor falsifique, então você só pode pedir os ingressos no início de novembro, espero pegar a cauda da estação de folhas de bordo. </p>
<p>Little Mestre está assistindo a área de Kansai, eu não estive lá.<br>Imediatamente, o mês de junho é um visto de três anos de viagem.<br>Você também pode ir juntos </p>
<p>Embora seja apenas duas semanas, o tempo é mais urgente<br>Felizmente, comprar ingressos, loucos, fazer duas semanas, completar a tarefa com antecedência<br>Depois de enviar o código para a organização, você iniciou o segundo japonês </p>
<p>Eu ainda não sei como assistir.<br>Quando cheguei ao aeroporto, fui estúpido quando vi este único avião.<br>É apenas Boeing 737<br>Embora os eventos máximos ainda não ocorressem<br>Mas ainda está preocupado que voe onde cair no mar.<br>Abra a linha principal perdida </p>
<a id="more"></a>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-02.webp" alt=""></div></div></div>

<h2 id="Estacao-de-metro-de-Kyoto"><a href="#Estacao-de-metro-de-Kyoto" class="headerlink" title="Estação de metro de Kyoto."></a>Estação de metro de Kyoto.</h2><p>Última vez em Tóquio na mesma plataforma 🚉, etc. </p>
<p>O pequeno mago ainda é a primeira vez, a estação de metrô é um enorme shopping.<br>Um total de 7 andares, coma mais e mais<br>Embora fosse apenas no início de novembro, foi preenchido com o Natal. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-05.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-08.webp" alt=""></div></div></div>

<h2 id="Templo-de-Pavilhao-Dourado"><a href="#Templo-de-Pavilhao-Dourado" class="headerlink" title="Templo de Pavilhão Dourado"></a>Templo de Pavilhão Dourado</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-12.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-10.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-11.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-15.webp" alt=""></div></div></div>

<h2 id="Kyoto-Gyoen"><a href="#Kyoto-Gyoen" class="headerlink" title="Kyoto Gyoen"></a>Kyoto Gyoen</h2><p>Há uma árvore de folhas amarelas especiais entre verde vermelho </p>
<blockquote>
<p>Sem cabeça </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-23.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-24.webp" alt=""></div></div></div>

<p>Hora de vir, ninguém </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-20.webp" alt=""></div></div></div>

<h2 id="Shimizuji"><a href="#Shimizuji" class="headerlink" title="Shimizuji."></a>Shimizuji.</h2><p>Assista a irmã do quimono </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-28.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-32.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-33.webp" alt=""></div></div></div>

<h2 id="tempora"><a href="#tempora" class="headerlink" title="têmpora"></a>têmpora</h2><p>Tocando uma família no casamento de tiro </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-35.webp" alt=""></div></div></div>

<p>Pôr do sol e torneira estranha </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-36.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-38.webp" alt=""></div></div></div>

<p>Vendo que muitas pessoas estão buscando Deus da adoração Buda<br>O pequeno mago também vai lançar a rocha da moeda.<br>Espero que o aplicativo esteja online, não falhe 🙏 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-41.webp" alt=""></div></div></div>

<h2 id="Lushan-pequeno-trem"><a href="#Lushan-pequeno-trem" class="headerlink" title="Lushan pequeno trem"></a>Lushan pequeno trem</h2><p>Na manhã seguinte, fui ao pequeno trem de Lushan no início da manhã. Diz-se que a paisagem é pitoresca.<br>No entanto, certifique-se de comprar o lado da montanha, caso contrário, vou ouvir apenas outros turistas “Uau”, não consigo ver nada. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-47.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-49.webp" alt=""></div></div></div>

<h2 id="Chino-Bamboo-Floresta-Pequeno-Diametro"><a href="#Chino-Bamboo-Floresta-Pequeno-Diametro" class="headerlink" title="Chino Bamboo Floresta Pequeno Diâmetro"></a>Chino Bamboo Floresta Pequeno Diâmetro</h2><p>atordoado </p>
<p>Esta é a floresta de bambu que muitas vezes viu na brochura de Kyoto. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-57.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-52.webp" alt=""></div></div></div>

<blockquote>
<p>Fundo na floresta profunda, copie o musgo </p>
</blockquote>
<p>O musgo aqui é ótimo, uma vez que um papel de parede do telefone móvel pequeno </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-92.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-93.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-54.webp" alt=""></div></div></div>

<p>Mudança </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-62.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-63.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-64.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-65.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-67.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-68.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-69.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-70.webp" alt=""></div></div></div>

<p>Poema de Zhou Enlai Primeiro Ministro </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-73.webp" alt=""></div></div></div>

<p>Você também pode fazer um carro humano. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-78.webp" alt=""></div></div></div>

<p>Embora seja muito com<br>Mesmo que apenas o vermelho também seja bonito, não ganha. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-76.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-81.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-82.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-83.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-84.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-85.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-86.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-87.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-88.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-89.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-90.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-91.webp" alt=""></div></div></div>

<p>Ao contrário da paisagem da cidade de Tóquio </p>
<p>A paisagem aqui em Kyoto também é explosiva. </p>
<p>Da próxima vez, vou tirar um jornal da irmã.<br>Little Mestre está pensando </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-1-1.</title>
    <url>/pt/japan-1-1/</url>
    <content><![CDATA[<h2 id="Mil-aves"><a href="#Mil-aves" class="headerlink" title="Mil aves"></a>Mil aves</h2><p>Acontece que isso é chamado milhares de pássaros. </p>
<p>Escalar<br>O pequeno mago disse que ainda está chegando, é melhor subir ao topo da montanha.<br>Mas não é pequeno.<br>Olhou pelo mapa, os mil aves eram quase pequenos, o pequeno mago sentiu muita imagem.<br>Parece que ainda está no meio da montanha, se você escalar decentemente, tenho medo de que seja necessário atrasar o itinerário restante.<br>Então, basta descer a montanha. </p>
<p>Voltei mais tarde, aprendi que não há muita distância.<br>Porque o pássaro é realmente, menos é </p>
<a id="more"></a>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-04.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-11.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-10.webp" alt=""></div></div></div>

<p>Todo mundo está lavando as mãos por Qingquan<br>O pequeno mestre lavado pelo celular.<br>Eu tenho medo quando quero vir.<br>Eu não sei se há alguma felicidade<br>Ainda não estou sendo explodido por pessoas ao redor das pessoas </p>
<p>Bambu </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-17.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-16.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-15.webp" alt=""></div></div></div>

<p>Jantar, casa de vinho, é um lugar onde a pessoa local está conversando e relaxando.<br>Comparado com o vinho, ainda é uma boa bebida.<br>Ao lado dos supermercados várias revistas em quadrinhos para vender juntos </p>
<h2 id="Kinosaki-Onsen-♨♨"><a href="#Kinosaki-Onsen-♨♨" class="headerlink" title="Kinosaki Onsen ♨♨."></a>Kinosaki Onsen ♨♨.</h2><p>No dia seguinte, faça um pequeno trem para ir para a cidade da cidade.<br>O pequeno mestre não incomodou as fontes termais.<br>No entanto, como um nortista, quero vir e o grande banheiro não é demais. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-20.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-21.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-22.webp" alt=""></div></div></div>

<h2 id="Onsen-Shinual-♨♨"><a href="#Onsen-Shinual-♨♨" class="headerlink" title="Onsen Shinual ♨♨."></a>Onsen Shinual ♨♨.</h2><p>No entanto, o fato está além da imaginação </p>
<p>Primeiro de tudo, as fontes termais têm ar livre, há uma lagoa, o vento do outono sai, mais neve<br>Bolha na água quente da mola, não seja muito feliz </p>
<p>O pequeno mago forçou o pequeno mago forçou mil pássaros antes de chegarem.<br>Arthrofhert dor só pode rastejar em tatami </p>
<p>Depois das fontes termais, acabou por ser mágica. </p>
<p>Não só suspiro<br>A água da caldeira falsa só pode tomar um banho<br>E o verdadeiro spa pode retornar sangue </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-26.webp" alt=""></div></div></div>

<p>Por causa de novembro, perto da primavera, vapor<br>Há também ovos de primavera quentes no lado da estrada, você também pode comprá-lo na primavera quente ♨️ em 20 minutos.<br>Tirá-lo é o ovo do coração de açúcar padrão </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-55.webp" alt=""></div></div></div>

<p>A água é clara ou peixe<br>Há também uma variedade de caranguejos grandes<br>O ônibus 🚌 aqui é como Cingapura<br>Antes de entrar no ônibus, pressione o botão pequeno antes de sair do ônibus. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-24.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-27.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-28.webp" alt=""></div></div></div>

<h2 id="Costa-do-dia-e-da-montanha"><a href="#Costa-do-dia-e-da-montanha" class="headerlink" title="Costa do dia e da montanha"></a>Costa do dia e da montanha</h2><p>Ao contrário de São Francisco, é diferente, o mar aqui é limpo, não há nada cheiro<br>No entanto, o tempo mudou em um instante, apenas ainda vento e linda, de repente chuva, super resfriado<br>Escondendo o aquário ao lado, jogando uma xícara de café quente e ouvindo a chuva é quente </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-30.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-33.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-32.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-49.webp" alt=""></div></div></div>

<h2 id="arco-iris"><a href="#arco-iris" class="headerlink" title="arco-íris"></a>arco-íris</h2><p>A vida viu pela primeira vez o arco-íris<br>Venha a Zhang da Tu para comemorar </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-37.webp" alt=""></p>
<h2 id="aquario"><a href="#aquario" class="headerlink" title="aquário"></a>aquário</h2><p>Eu não posso comprar.<br>Mais de 100 yuan, 7 temas podem ser vistos<br>Mais do que o aquário em Tóquio antes<br>Por causa do mar, o lugar é grande<br>Eu vi um enorme cavalo-marinho<br>Ao lado de você também pode medir o peso corporal, 21 pequeno mago == este cavalo-marinho<br>Finalmente, há um pequeno desempenho de água de pequenos golfinhos. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-39.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-41.webp" alt=""></div></div></div>

<h2 id="Templo-da-mola-quente"><a href="#Templo-da-mola-quente" class="headerlink" title="Templo da mola quente"></a>Templo da mola quente</h2><p>Há uma colina ao lado, você pode fazer o teleférico.<br>A montanha não é alta, mas já há nevando.<br>O design dos beirais é muito bom, e a neve não vai respingar. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-57.webp" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-68.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-59.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-67.webp" alt=""></div></div></div>

<p>Telhas na telha<br>Quando volto para o hotel, encontrei o centro da estrada no sprinkler.<br>Muito mágico, não entenda por que você quer que isso projete </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-71.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-73.webp" alt=""></div></div></div>

<p>Embalado a bagagem de volta para osaka </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-75.webp" alt=""></div></div></div>

<h2 id="Levia-de-caranguejo"><a href="#Levia-de-caranguejo" class="headerlink" title="Levia de caranguejo"></a>Levia de caranguejo</h2><h2 id="Um-bluelavan"><a href="#Um-bluelavan" class="headerlink" title="Um bluelavan."></a>Um bluelavan.</h2><p>Rua gourmet<br>Música de caranguejo, precisa marcar uma consulta antecipadamente, ou a loja não é assento.<br>Pode ser jogado, mas esse tipo de dificuldade é muito difícil, então há um assento que é oco para fingir tatami. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-78.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-82.webp" alt=""></div></div></div>

<hr>
<p><a href="https://twitter.com/leihao0">Siga-me no Twitter</a> </p>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-1-2.</title>
    <url>/pt/japan-1-2/</url>
    <content><![CDATA[<h1 id="Cidade-de-Osaka-Huanshi"><a href="#Cidade-de-Osaka-Huanshi" class="headerlink" title="Cidade de Osaka Huanshi."></a>Cidade de Osaka Huanshi.</h1><p>Tome JR no dia seguinte para ir a Nara para ver o pequeno cervo </p>
<a id="more"></a>

<h2 id="Nara"><a href="#Nara" class="headerlink" title="Nara."></a>Nara.</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-02.webp" alt=""></div></div></div>

<p>Veja Conan. </p>
<p>O chocante é que o pequeno cervo é misturado com o carro e o lapie </p>
<p>Eu não sei se está comendo estômago ruim, eu tenho que ir ao banheiro no espaço público.<br>Descoberta surpresa também levou a tampa do banheiro, e esse pequeno mago não se preocupará com isso no Japão. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-05.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-07.webp" alt=""></div></div></div>

<p>Receba um pequeno cervo depois de sair<br>Eu acidentalmente tirei uma torneira<br>O saco do pequeno mago é aberto, e a brochura de viagem caiu. </p>
<p>então… </p>
<p>Quando eu disse que ouvi que as ovelhas podem comer papel.<br>Eu não esperava que isso veja isso. </p>
<p>Devido aos vários padrões de ataque do pequeno cervo 🦌<br>Eu tenho que ajudar a equipe, mas eu não vi por muito tempo.<br>Os veados bobos só podem perguntar mais do que uma bênção, não diarreia. </p>
<h2 id="Uji"><a href="#Uji" class="headerlink" title="Uji."></a>Uji.</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-08.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-09.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-13.webp" alt=""></div></div></div>

<p>Se você tiver um nome diário, você não esperava exceder as expectativas.<br>Passando por ortopedia japonesa<br>Então vá para Yutu para comer sorvete de chá e chá tat </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-16.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-17.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-18.webp" alt=""></div></div></div>

<p>Eu fui puxado de volta para Osaka quando acabei de comer.<br>Acontece que Yuji é apenas para sorvete … </p>
<h2 id="Cidade-de-Osaka-Huanshi-1"><a href="#Cidade-de-Osaka-Huanshi-1" class="headerlink" title="Cidade de Osaka Huanshi."></a>Cidade de Osaka Huanshi.</h2><p>De manhã cedo para os estúdios globais na manhã seguinte </p>
<p>Há um geofone que muitas vezes aparece em alguns filmes. </p>
<p>Então o pequeno mago é surpreendentemente descoberto<br>Acontece que Xiao Huang, Homem-Aranha, Meng, eu sou ip de estúdios globais. </p>
<p>Porque o estúdio global é particularmente grande, o tema é particularmente<br>Se você quiser jogar, você deve viver pelo menos uma noite nela.<br>No entanto, mais tarde aprendi o maior Los Angeles, Califórnia, por alguns dias.<br>E Singapura é muito pequeno, você pode ter mais de um dia.<br>Claro, isso é uma palavra posterior, e eu não vou mencionar isso. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-20.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-21.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-24.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-27.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-30.webp" alt=""></div></div></div>

<h3 id="Sonho-de-hollywood"><a href="#Sonho-de-hollywood" class="headerlink" title="Sonho de hollywood"></a>Sonho de hollywood</h3><p>Eu ouvi gritos longe.<br>Repetidamente lembra a morte dos deuses para o fragmento do carro da montanha<br>Mas olhando para o povo deste carro.<br>Eu quero vir, não há nada.<br>Eu tenho medo de me ajustar. </p>
<p>O mesmo é verdade.<br>Porque eu comprei um bilhete rápido<br>O pequeno mestre passou o dragão de longo homem, diretamente no ônibus. </p>
<p>Hollywood Dream pode ser feito ou fazer<br>A equipe disse que eles não estavam tão com medo.<br>Essa escolha natural está fazendo </p>
<p>O processo está bem, exceto pela queda vertical, parece mais exagerada.<br>Então várias voltas contínuas se sentem enormes<br>Eu sempre sinto que os trilhos não são suficientes para apoiar a direção, que será esmagada como um filme. </p>
<p>No entanto, não há, ou a segurança acabou. </p>
<p>Portanto, 🎢 também é diferente da pessoa.<br>Eu não posso assustá-lo, eu grito todo o caminho, eu sei que tenho que me sentar, mas não tenho um bilhete rápido para o dragão voador. </p>
<p>E o pequeno mago parecia ainda, toda a jornada e os transeuntes - pelo transeuntes - por<br>O pequeno mago é mesmo pensar, de acordo com o efeito ponte de suspensão, o papel irmã já está apaixonado por si mesmo. </p>
<h3 id="Parque-jurassico"><a href="#Parque-jurassico" class="headerlink" title="Parque jurassico"></a>Parque jurassico</h3><p>Eu verifiquei os Raiders e joguei uma capa de chuva, dizendo que ele será usado por trás disso.<br>No meio, vi alguns falsos dinossauros, e havia uma repentina do dragão do Overlord, e a foto estava assustada.<br>Todo o caminho é indiferente a uma sala preta e escalar lentamente<br>O navio repentino caiu, e a primeira fila de turistas foi espirrada.<br>Bem, não é o mesmo que é </p>
<h3 id="Dragao-de-Tianyi-voando"><a href="#Dragao-de-Tianyi-voando" class="headerlink" title="Dragão de Tianyi voando"></a>Dragão de Tianyi voando</h3><p>E sonho de Hollywood<br>Os jogadores de frascos voadores serão fixados no assento, girarem 90 graus, enfrentar a terra, escalar lentamente </p>
<p>Mas esse pequeno mestre não é demais.<br>Não vamos ser um jornal irmão ao lado, dois é tarde, você não pode ver isso.<br>Eu só senti que eu era desajeitado e tirei algumas voltas, estou indo para baixo. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-36.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-33.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-37.webp" alt=""></div></div></div>

<h3 id="Harry-Potter"><a href="#Harry-Potter" class="headerlink" title="Harry Potter."></a>Harry Potter.</h3><p>Depois de uma longa estrada florestal, acompanhada pelo 🦉 咕 🦉 咕, 境 </p>
<p>Há cerveja de manteiga 🧈 🧈, as coisas queridas de Azkan </p>
<h4 id="Loja-olifan-de-cana"><a href="#Loja-olifan-de-cana" class="headerlink" title="Loja olifan de cana"></a>Loja olifan de cana</h4><p>NPC escolherá aleatoriamente uma criança, tomar uma trama quando Harry primeiro escolhe a varinha mágica<br>Outros estão sob o andar de baixo </p>
<p>Depois de sair, você pode usar a varinha, você pode ver o feitiço. </p>
<h4 id="Hoggaz-Magic-and-Wizard-College"><a href="#Hoggaz-Magic-and-Wizard-College" class="headerlink" title="Hoggaz Magic and Wizard College"></a>Hoggaz Magic and Wizard College</h4><p>Pegue um carro pequeno para ver filme 3D<br>Seguido com Harry Ronggen para participar da competição de quili </p>
<p>Uau, é muito divertido. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-39.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-40.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-41.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-42.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-43.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-44.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-46.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-47.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-49.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-52.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-54.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-55.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-57.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-58.webp" alt=""></div></div></div>

<h2 id="Amigos"><a href="#Amigos" class="headerlink" title="Amigos"></a>Amigos</h2><p>Tem estado atrasado depois de vir do estúdio global.<br>Jogando, eu não esperava enviar um pequeno e o espírito, amigos, todos, comprei o banheiro, fogão de arroz, uma pilha de aparelhos elétricos de volta … </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-59.webp" alt=""></p>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-1-3.</title>
    <url>/pt/japan-1-3/</url>
    <content><![CDATA[<h1 id="Osaka"><a href="#Osaka" class="headerlink" title="Osaka."></a>Osaka.</h1><p>Eu comprei um segundo dia, comprei um cupom de viagem de dois dias em Osaka.<br>Então todos os próximos itens são<br>Livre<br>Livre<br>Livre </p>
<a id="more"></a>

<h2 id="roda-gigante"><a href="#roda-gigante" class="headerlink" title="roda gigante"></a>roda gigante</h2><p>Redhorse Osaka roda dividida em duas caixas<br>Branco é a caixa transparente completa<br>Vermelho e azul é opaco na parte inferior </p>
<p>Depois disso, a montanha-russa de ontem é<br>O pequeno mago é naturalmente um transparente. </p>
<p>E Singapura 🇸🇬 sempre teve que fechar a roda gigante<br>Isso não pode ser comido dentro </p>
<p>Transforme um círculo por aproximadamente meia hora<br>Eu pensei que quero compartilhar com os outros.<br>Eu não esperava que todos estejam sozinhos. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-01.webp" alt=""></p>
<h2 id="Linha-do-capitao"><a href="#Linha-do-capitao" class="headerlink" title="Linha do capitão"></a>Linha do capitão</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-03.webp" alt=""></div></div></div>

<p>De pé no barco, continue a assistir a roda gigante </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-05.webp" alt=""></div></div></div>

<h2 id="Santa-Maria"><a href="#Santa-Maria" class="headerlink" title="Santa Maria."></a>Santa Maria.</h2><p>A cada hora, alternando, cerca de 50 minutos </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-08.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-07.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-09.webp" alt=""></div></div></div>

<h2 id="Corredor-do-oceano"><a href="#Corredor-do-oceano" class="headerlink" title="Corredor do oceano"></a>Corredor do oceano</h2><p>Há um modelo de tubarão de baleia enorme fora da parede do lado de fora do oceano. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-10.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-11.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-12.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-16.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-17.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-19.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-20.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-21.webp" alt=""></div></div></div>

<h3 id="Toque-peixe"><a href="#Toque-peixe" class="headerlink" title="Toque peixe"></a>Toque peixe</h3><p>Precisa lavar as mãos, mas você não pode usar a sola<br>Parece ser porque destruirá a pele da pele dos peixes. </p>
<p>Dizer que o pequeno mestre nunca tocou no peixe antes<br>Pela primeira vez, toquei o tubarão. </p>
<p>Diferente do gelo imaginário<br>A temperatura é macia, macia, como a bezerro que eu tocava a garota. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-24.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-27.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-30.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-32.webp" alt=""></div></div></div>

<p>Bebida única de Haofu 🥤<br>Azul, super boa bebida<br>Eu comi queimada de ferro depois de sair. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-33.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-35.webp" alt=""></div></div></div>

<h2 id="HEP-Cinco-Ferris-Wheel"><a href="#HEP-Cinco-Ferris-Wheel" class="headerlink" title="HEP Cinco Ferris Wheel"></a>HEP Cinco Ferris Wheel</h2><p>Esse recurso é caracterizado pelo chão no shopping.<br>Eu vi o modelo alto e destino alcançado </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-36.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-37.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-39.webp" alt=""></div></div></div>

<p>A última vez que vivi em Roma depois de Roma.<br>Naturalmente, eu vou saber e Hilton </p>
<p>Tem que dizer isso na roda gigante<br>Uma das luzes das luzes<br>Hilton várias grandes palavras cintilantes </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-41.webp" alt=""></div></div></div>

<h2 id="Tianshuge-tempo-e-capsula-espacial"><a href="#Tianshuge-tempo-e-capsula-espacial" class="headerlink" title="Tianshuge tempo e cápsula espacial"></a>Tianshuge tempo e cápsula espacial</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-43.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-44.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-45.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-47.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-48.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-49.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-51.webp" alt=""></div></div></div>

<h2 id="Tianyu-Temple-Zoo"><a href="#Tianyu-Temple-Zoo" class="headerlink" title="Tianyu Temple Zoo."></a>Tianyu Temple Zoo.</h2><p>Eu vi o cisne negro 🦢 em Naxim Niklas Tarebo “Stroller” </p>
<ul>
<li>Urso preto </li>
<li>Pássaro ancestral </li>
<li>Koah (骷髅) </li>
<li>Elefante </li>
<li>Coruja </li>
<li>Corvo </li>
<li>Rinoceronte </li>
<li>Hipopótamo </li>
<li>Camelo </li>
<li>Guaxinim </li>
<li>Cabra (pecuária) </li>
<li>Crocodilo 🐊 (骷髅) </li>
<li>Leão </li>
<li>Girafa </li>
<li>Panda (boneca) </li>
<li>Não há pequenos cavalos em crianças. </li>
</ul>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-54.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-57.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-59.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-60.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-62.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-63.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-65.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-66.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-71.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-68.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-69.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-70.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-73.webp" alt=""></div></div></div>

<h2 id="Tongtiange"><a href="#Tongtiange" class="headerlink" title="Tongtiange."></a>Tongtiange.</h2><p>Devido a amanhã </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-75.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-78.webp" alt=""></div></div></div>

<h2 id="Aeroporto"><a href="#Aeroporto" class="headerlink" title="Aeroporto"></a>Aeroporto</h2><p>Quando o bilhete é verificado, a irmãzinha perguntou ao pequeno mestre. É uma pessoa?<br>O pequeno mago é estranho, dizendo que é claro que é uma pessoa. </p>
<p>Então veja uma série de operações na irmãzinha<br>Então parabéns ao pequeno mago para lhe dar o impulso </p>
<p>Naquela época, eu fiz inexplicavelmente, e fui indiferente ao ingresso.<br>A irmãzinha viu que o pequeno mago não tinha expressão, pensando que ele não entendeu, repeti-lo novamente. </p>
<p>No entanto, ainda é diferente do ingresso de atualização e sua própria despesa.<br>Diferente da primeira vez para o Japão<br>O bilhete de atualização é incapaz de entrar no resto VIP </p>
<p>Então, desta vez você não pode tomar banho.<br>No entanto, o serviço desfrutado após o avião é exatamente o mesmo. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-79.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-80.webp" alt=""></div></div></div>

<p>Depois de voltar, aprendi com o poder do mundo. O aeroporto dará alguma atualização gratuita de clientes em potencial. </p>
<p>Originalmente solteiro, este benefício<br>Pequeno mestre é triste </p>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>Beijing-1.</title>
    <url>/pt/bejing-1/</url>
    <content><![CDATA[<h2 id="2014-2018"><a href="#2014-2018" class="headerlink" title="2014-2018."></a>2014-2018.</h2><p>O pequeno mago viveu no imperador várias primavera e outono. </p>
<p>Acabei de chegar ao Imperador, experimentou uma crítica<br>Embora haja um coração preparando, ainda é chocado por respirar todos os dias. </p>
<a id="more"></a>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-12.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-13.webp" alt=""></div></div></div>

<p>Nos últimos anos<br>Earmily correndo<br>Ou no caminho<br>Ou está pronto para executar </p>
<p>Claro, há também alguns céu azul e nuvens brancas.<br>Até mesmo o Shengguang com efeito Diesider </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-00.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-11.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-05.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-07.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-14.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-16.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-17.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-20.webp" alt=""></div></div></div>

<p>Depois da última vez que voltei do Japão, o pequeno mago de repente pensava<br>Além da paisagem natural, viaja, é apenas para visitar vários locais. Não há doméstico?<br>Então eu verifiquei, descobri que havia muitos imperadores, quase vomitando sangue. </p>
<h2 id="Astronomico"><a href="#Astronomico" class="headerlink" title="Astronômico"></a>Astronômico</h2><p>Diferente do texto japonês, desta vez eu posso finalmente entender. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-30.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-32.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-33.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-36.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-37.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-39.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-41.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-42.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-43.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-44.webp" alt=""></div></div></div>

<h2 id="Corredor-do-oceano"><a href="#Corredor-do-oceano" class="headerlink" title="Corredor do oceano"></a>Corredor do oceano</h2><p>Eu não sei se há um problema com telefones de estrada ou design.<br>Depois de sair ao longo do sinal de estrada, descobri que o enorme corredor médio golfinho não viu … </p>
<p>No entanto, a maior parte do óleo de vidro, eu não sei se ainda é muito tempo ou o estilo. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-47.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-49.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-50.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-53.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-54.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-56.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-57.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-59.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-60.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-62.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-63.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-65.webp" alt=""></div></div></div>

<h2 id="jardim-zoologico"><a href="#jardim-zoologico" class="headerlink" title="jardim zoológico"></a>jardim zoológico</h2><p>Diferença requintada de Osaka Zoo<br>Aqui está um grande objetivo<br>A única coisa ruim é muito cansada<br>Mudar uma criatura para ver o velho </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-67.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-68.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-69.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-70.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-71.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-73.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-75.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-76.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-78.webp" alt=""></div></div></div>

<h2 id="Lua"><a href="#Lua" class="headerlink" title="Lua"></a>Lua</h2><p>Magia<br>Embora a lua seja frequentemente<br>Mas a cena real ainda é na primeira vez. </p>
<p>Naquela época, o iPhone não tinha cena noturna, e a pasta não é </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-79.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-80.webp" alt=""></div></div></div>

<h2 id="Pesquisa-de-mercado"><a href="#Pesquisa-de-mercado" class="headerlink" title="Pesquisa de mercado"></a>Pesquisa de mercado</h2><p>莫名 其 面 作, Deixe o movimento suave funcionar offline para fazer pesquisa de mercado </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-81.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-82.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-84.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-85.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-86.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-87.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-88.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-89.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-90.webp" alt=""></div></div></div>

<h2 id="Delicioso"><a href="#Delicioso" class="headerlink" title="Delicioso"></a>Delicioso</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-24.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-25.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-91.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-92.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-94.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-95.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-98.webp" alt=""></div></div></div>

<h2 id="Diversao"><a href="#Diversao" class="headerlink" title="Diversão"></a>Diversão</h2><p>🏎️, 🎬, 🎭, 👨💻 </p>
<p>Corrida, filme, conversa cruzada, festa ferrugem </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-27.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-93.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-96.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-97.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-03.webp" alt=""></div></div></div>

<p>Finalmente, o final do ano terminou no Imperador. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-22.webp" alt=""></div></div></div>

<ul>
<li>Walden </li>
</ul>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>Beijing</tag>
        <tag>LittleMaster</tag>
        <tag>🇨🇳</tag>
      </tags>
  </entry>
</search>
