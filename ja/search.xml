<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>卒業の10日以上前</title>
    <url>/ja/Before-graduation/</url>
    <content><![CDATA[<p>少し前に思いついたのですが、書く時間がありませんでした。<br>あらゆる種類の集まり、チケットの予約、レンタル情報の確認、レベル6、そしてその夜の家主に会いに急いで、各地区を走り、部屋の書類を確認します。<br>部屋の紙が落ち着くと、ホテルで本をなでて、ようやくリラックスできます。 </p>
<a id="more"></a>

<h2 id="集まる"><a href="#集まる" class="headerlink" title="集まる"></a>集まる</h2><p>これはいつも私の参加するのが一番好きではありませんでした。 Schopenhauerの「下品または孤独のどちらか」はやや極端ですが、いくつかの真実があります。<br>さらに、それは私の内向性と関係があります。MBTIテストでは、内向性は実際に85を破りました。私はいつも混雑して騒々しい機会ではなく静かにとどまるのが好きです。<br>そして、私は写真があまり好きではありません。それが子供の頃に見た「Imprisoned Soul」の断片かどうかはわかりません。写真は私の魂を吸い取り、小さな紙に留めて、Inceptionのような潜在意識を植え付けます。<br>中学・高校卒業後、急いで立ち去りました。高校生の写真では、テーブルの水ガラスは全部そこにありましたが、人はそこにいませんでした。<br>今回は卒業しましたが、たくさん写真を撮りました。もちろん、ほとんどがシスターオレンジやビッグチームと混ざっていました。 </p>
<p>若者、それは本当に素晴らしいです、非常に多くの生来のオーラ、非常に多くの可能性があります<br>新入生も週に一度パッケージナイトに行き、冬休みは毎日3〜4時に就寝するのを覚えています。 ３年生以降は体が良くないことは明らかであり、シニア年はさらに明白です。 ホテルに着いたら、3時まで寝ていませんでした。翌日鏡を見ると、伝説のダークサークルを見つけてびっくりしました。以前、小説のヒロインがダークサークルだと言っていたのかと思っていましたが、何なのかわかりませんでした。 調整できない、健康がわからない、こっそり笑う… </p>
<p>以前は言葉で一年の断片を記録してきましたが、今ではその年の若々しい年を昔ながらの思い出にするしかないと思います。 当時の様子はわかりません。 </p>
<h2 id="退学する"><a href="#退学する" class="headerlink" title="退学する"></a>退学する</h2><p>荷物をまとめて、兄が仕事を辞めるのを待つ<br>そろそろ時間になると、寝室の人々のグループが断固として外食しました…<br>元中学校の同級生であるCuiWeiがパッケージの受け取りを手伝ってくれました、Viagra、ありがとう！ 電話をしたとき、目的地を確認するために電話を取り出したところ、寝室であなたを探すために降りるのを忘れたとき、あなたはもうそこにいなかったことがわかりました。<br>あなたはとても速く走りますが、それでもあなたに感謝しなければなりませんが </p>
<p>兄の家に着いて彼らの新しい家を見たとき、私はシェンマのために紙を買わなければならないことを知っていました。私はいつも借りたいと思っていました… </p>
<h2 id="レベル6"><a href="#レベル6" class="headerlink" title="レベル6"></a>レベル6</h2><p>診察室に到着して座ったところ、元々はリゲグループの一員だった「ミンジ」と名乗る少年がやってきた。<br>彼は2年生だと思ってびっくりしました！ 左がすべて2年生であることがわかりました、ため息をつきます…<br>多くの年長の子供用靴が試験に合格しなかったのも不思議ではありませんが、幸いなことにモニターとオレンジがそこにいました。 最後に座って頑張れば、結果はもう重要ではありません </p>
<h2 id="杭州"><a href="#杭州" class="headerlink" title="杭州"></a>杭州</h2><p>10日以上前、私はオンラインで情報、さまざまな資料、マインドマップの概要を見つけ始めました<br>6年生のテストの翌日の夜、私は彼らと小さな集まりをしました。カワイイは私の人生で最も高価な麺を食べて、それから私は電車に乗りました。<br>6.20の警報が鳴り、小さな旗が魔法の馬に注意を向けさせるように呼びかけ、夜はほとんど眠れないと言った。 そして本当に基本的に1時間に1回目を覚ます<br>朝5時にトイレに行って寝返りました。6時に急に起きてニュートリションエクスプレスを飲みました。グーグルマップで見つけたのですが、ユハン地区にいることがわかりました！<br>6.40ではないですか？ それから「杭州で降りた」と聞いた、O \ _ \ _ O … </p>
<p>駅を降りてからは何も衝撃はなく、故郷の駅は綺麗なようです。<br>グーグルマップ、ルート49を探し、そこにあるバス停を見て、歩き回って、何もないことを見つけます </p>
<p>k49 7:30ユニオンビルに行き、ホームに行き、8時に部屋に入り、ランドセルを保管し、階下の会社に行くことができることを学びます<br>ABから入ってみると、誰かが大地泉を練習しているのを見つけたのですが、とにかく大英都がやって来て、しばらく見てから、陳のボクシングの練習について話しました。 空気感について聞かれると、開けると指が少し膨らんだと言って、他人の気持ちを引っ張って、間違っていると言われましたo(╯□╰)o </p>
<p>雨に間に合うように、家を見つけることは一般的に雨の中で走っています<br>しかし、私がシェンマの預金を支払った後、家が始まり、雨は止みました… </p>
<p>とてもきれいだと知っていたので、電車を降りるとそう感じます。<br>しかし、それはただそう感じます<br>二人の女の子が裸足で道を歩いているのを見るまで…<br>あなたがヘフェイにいるなら、血の滴りは絶対必要です… </p>
<p>カワイイはかつてサンダルを買うと言ったが、感じたことはなかった<br>ある朝出かけた時、ネットの靴がすっかりびしょ濡れでした<br>その時二人の女の子に会いました<br>突然気が変わって、後に多くの人がスリッパを履いていることに気づきました<br>叔父レベルのプログラマーのビーチパンツ+フリップフロップは誤りではないようです </p>
<p>コンピューターでオンラインバンキングを使用して電車のチケットを購入できません<br>この現象はハオ兄弟の家で発生し、当時はパソコンに切り替えてスムーズに購入していました。<br>IE9の問題だと思ったのですが、リセットして初期状態にリセットしました。<br>システムを再インストールするのは無力<br>しかし、ミラーリングが間違っているようで、青い画面が直接…<br>そして、木製ベルトシステムはUSBフラッシュドライブを復元するので、JSにシステムドライブを頼まざるを得ません<br>もともと会社はITだと思っていたので、システムディスクは必須でした。中には小さなIT部門があると思いました。 </p>
<p>今回、Jiaxingのチケットを購入すると、一日のほとんどが遅れてしまい、結局、妹が購入してくれました。<br>この種の地方銀行は、地方外に出ても強くはありません。もちろん、私が安徽に平和に滞在している限り、慧興銀行は私がそれを非難したり非難したりしないと安心して言うことができます。 </p>
<p>初めて外出するのは不思議です<br>午後はまだレベル6の試験を受けていて、夜寝た後は杭州にいました。今日も嘉興に行きます。<br>行ったことのない場所では、リアルタイムの戦略ゲームでは常に未踏の地図のように感じます。暗く、通過したときにのみ地図を照らすことができます。 </p>
<p>ハウスペーパーを見るために多くの場所に走った<br>なじみのない杭州でルームペーパーを探すのを手伝ってくれたYingChildren’sShoesとWearingChildren’sShoesに感謝します。 特に子供用の靴を履いているときは、すでにルームペーパーがセットされていて、外出先で付き添い続けていたのですが、ガールフレンドの絶え間ない衝動で、最後から2番目のルームペーパーにたどり着きました。 </p>
<p>結局、1100という高額で、テレビ、信号機、木の床、スクリーンウィンドウ、マットレス、テーブルと椅子、リビングルーム、会社から遠く離れたリビングルームのある部屋を借りました… </p>
]]></content>
      <tags>
        <tag>AAU</tag>
      </tags>
  </entry>
  <entry>
    <title>さようなら私の大学</title>
    <url>/ja/Bye-my-college/</url>
    <content><![CDATA[<p>前回、初めて杭州に到着したとき、植物がたくさんあるこの美しい街を見て、一度はそれを表現したようだったのを覚えています…<br>このような場所は4年かかり、人生で初めて自由に感じました。また会うだけでは十分ではありません…<br>もちろん、書く価値のある素晴らしい経験はありません。私はそれをはっきりと通過しました。ただ自分の気持ちを表現するだけです。 </p>
<a id="more"></a>

<p>2日前にレベル6に下がった後、3。5年間続いてきたこのことを終えました。<br>私の人生の中で、大学時代は本当に過ぎたと思います </p>
<p>ある夜、たくさんの蚊を夢見て、かゆくなりました。<br>それから私は墓地に立っていました…<br>私は恐れないように警告しますが、夢を見て、ただ感じて、味わってください。<br>さて、私は説得されて、それから私は走りたかったのです、どこに行けばいいですか？<br>うーん、私の両親はすぐ隣にいます、ただ彼らに走ります<br>両親と家は、私たちの怪我の後、常に風からの私たちの避難所でした。 </p>
<p>残念ですが、目が覚めたら一人でいることに気づきました。借家の隣は、今まで会ったことのない見知らぬ人でした。<br>本当に去って育った<br>文を覚えておいてください： </p>
<blockquote>
<p>独立はより大きな社会的責任を意味し、自由はより多くの寛容を意味し、解放はより多くの自己管理を意味し、そして成長はより多くの努力を意味します。<br>「偉大な能力には大きな責任が伴う」という言葉を考えずにはいられません。 </p>
</blockquote>
<p>私はいつも独立と自由を切望していましたが、本当にここに着いたとき、ある瞬間、上司が言ったように、ある種の「軽い悲しみ」がまだありました。 </p>
<p>トピックに目を向ける<br>私の大学はもっと楽しいです<br>私が学校に入学したとき、それは私が高校でいつも軽蔑していた2番目の学校でした<br>真剣に、半年後、何も変わっていません<br>2年生で授業をスキップして専攻を取得しました<br>後輩が二度と授業に行かないときは、学校全体が本です </p>
<h2 id="レベル6"><a href="#レベル6" class="headerlink" title="レベル6"></a>レベル6</h2><p>実は合格や不合格などはありません<br>そして、卒業後、私は証明書がすべてなくなったと感じています<br>しかし、それは両親にとって快適です。 (もともと、父が最後に来たのは、最後に人民元をくれたのだと思っていましたが、今回はまたブラックメールで送れるようですO(∩_∩)O)<br>さらに、それは彼の大学でのキャリアを終わらせるための引き分けと見なすことができます。 </p>
<p>もちろん……<br>彼らが知っていれば… </p>
<p>J.K.ローリングがハーバード大学の卒業式でのスピーチで言ったことを思い出してください。 </p>
<blockquote>
<p>クラシックを勉強していたことを両親に言ったのを覚えていません。 彼らは卒業式の日に初めて知ったかもしれません。 </p>
</blockquote>
<p>大学では、私は遅れて到着し、早すぎて引退し、クラスをスキップし、だまされ、コースを逃し、再受講し、自分の過ちを告白しました。<br>カウントダウンすると、奨学金と奨学金を除いて、私は戦いに参加していないようで、他のすべては基本的に満足のいくものです。 </p>
<p>もちろん、不正行為は常に私が軽蔑し、嫌なことでさえあります。私は60の原則に固執することができます。<br>最も興味深いのは、彼が「Sun Tzu Art of War」で「戦争中の2つの軍隊、心は最高」、そして最後に「戦わない兵士」も練習したことです。<br>ですから、これと戦うとき、私は本当に状況が何であるかを知りません。原則は、「人が私を怒らせなければ、私は怒らせません。誰かが私を怒らせれば、それは状況に依存します」です。 </p>
<p>ジュニアでは不可能と思われていたその他のことは、最後の期間で徐々に完了しました。 </p>
<p>後悔もあります：ブランドが鳴らない、仕事探しや将来の開発が足がかりとして使用できない、水平方向の視界制限などのために戦略的計画があまり完璧ではありません。 </p>
<p>ああ、はい、私が完了する必要があるものがあります：<br>中国科学技術大学に行く </p>
<p>私の学校は(省略)ですが、地理的な場所はユニークです<br>近くに2つの医学校と2つの大きなショッピングモールがあります<br>買い物や買い物に行くのはとても便利です<br>だから私が集まるたびに、他の人が私に来る </p>
<p>最も重要なことは、中国の科学技術大学からそう遠くないです<br>私がそれを使用しなかった、またはそれを考えたことがなかったのは残念です </p>
<p>いつも自分のことを気持ちよく<br>同時に、常に深い劣等性の複合体があったようです<br>初期の頃は、あえて他の学校に入学することすらしなかったのを覚えています<br>通り過ぎるとき、通り過ぎるときは頭を下げてください </p>
<p>私が4年生のときにわずかな給料で走り回っていたとき、私はこの事実に直面しなければなりませんでした。<br>私は毎日HKUSTのジョブフェアを運営しています。 </p>
<p>しかし、私は突然、それらのほとんどが類似していて(普通の人々)、同じものが馬から切り離され、同じものが拒否されていることを発見しました<br>しかし、素晴らしさは異なります。私の意見では、神のような会社の場合、オファーはあなたの指先に届き、それを拒否するのは残念ではありません。 </p>
<p>個人の強さはグループとは何の関係もないということわざはありませんか。<br>そして、グループでは、平均IQが低下します。 </p>
<p>..。 </p>
<p>私は本当に将来去ると思っていました、そして私は一週間以上家に帰ることはありませんでした<br>インターンシップを探すのをやめ、しばらく両親と一緒にいた<br>過去2か月間、毎日出かけさせてください(Sang Xin)<br>ママとパパは、私は毎日家にいて、外出せず、家事を手伝わず、何もしなかったと言ったので、ゲームをして、ぼんやりと寝ました。<br>実はその間、過去3年以上のことを知っていると感じました<br>最も重要なことは精神的な成長です<br>大学の終わりに向かってこの魔法の世界を見ることができてとてもうれしいです<br>あっという間に過ぎてしまったのは残念です。今は落ち着いて勉強する時間がありません。 </p>
<p>最後にHefeiに戻ります。返信するだけです。<br>ヘフェイに別れを告げる前に、私たちは最後にもう一度集まりました </p>
<p>今振り返ってみると、とても感動しました<br>私が去ったとき一人ではない </p>
<h2 id="万一に備えて"><a href="#万一に備えて" class="headerlink" title="万一に備えて"></a>万一に備えて</h2><p>「if」は役に立たないことを知っています。メンタルブックで繰り返し強調されています。時間の無駄です。現在に焦点を当てたほうがいいです。<br>Li Zongrenは、人々が1歳から80歳までではなく、80歳から1歳まで生きれば、2/3の人々が偉大な男性になるだろうと言いました。 </p>
<p>「TheGangof Men」と同じように、時間が戻せればまた別の結末になると思います </p>
<p>ですから、大きな後悔はありませんが<br>でも、もし私が最後の大学にいたら、時間を短縮して半年進めるでしょう<br>結局のところ、レベルが高いほど、時間は厳しくなります<br>大学に行ったばかりで、突然解放され、狂気は必見です<br>私が1年間クレイジーにプレイしたWarcraftゲームは、実際には半年に圧縮する必要があります。新入生の年には、クレイジーにプレイしました。<br>次に、Warcraftよりも興味深いプログラミングを始めます。<br>2年生でCを取得し、データ構造を見てください<br>後輩は家を見つけて学校を卒業します。 インターンシップに行く<br>シニア年の2ヶ月前にジョブフェアを開催する<br>次回はご両親と一緒に<br>真ん中で出かけて、楽しくてかっこいい、運転免許証を渡す<br>あなたはあなたの両親に資金を借りるように頼むことができます(それは「借りている」ことに注意してください) </p>
<p>もちろん、別の可能性もあります。もしその男が今私だったら、今日はまったく違うでしょう…<br>人々の認識は常に現在に限定されています。数年後を振り返ると、以前のアイデアについて考えることは、それがとても素朴で思考に欠けていると感じるだけです。 </p>
<p>もちろん、もちろん、そうでない場合は… </p>
<p>経済学には経路依存理論があり、一度決まった選択をすると、帰ってこない道を歩むようなものだと言われています。慣性の力で常に自己補強し、歩きにくくなります。 出て行け。 </p>
<p>元の選択に関係なく、それはあなた自身によってなされた決定であり、あなたはあなた自身に責任があります </p>
<p>卒業後、いきなり可能性が大きく下がったと感じたのですが、結局、確かな事実になっていることがあり、二度とできません。<br>するといきなり「ソルジャーアサルト」で古いAを見て言った </p>
<blockquote>
<p>22？ 私はあなたが70が好きだと思います！ …もし私があなたなら、絶対に参加します。理由を知っていますか？ 私はまだ30歳なので、とても楽しいことです。まだ十分なことをしていません。<br>ええ、私はたった22歳です。なんて良い22歳、愚かな年齢です。 </p>
</blockquote>
<p>ですから、働かないで、嫌われて、誰かを愛してください。 </p>
<p>数年後、もう一度振り返ってみてください。<br>「強くない時は、一生懸命働かない時がある」ではありません。<br>それは「構築された少しの夢であり、将来あなたは今あなたの努力に感謝するでしょう！」です。 </p>
<p>何千もの言葉、私は十分に言うことはできませんが、終了する時間があります </p>
<p>さようなら、私の大学。 </p>
<p>2012年9月17日0:00:52<br>HangzhouXixi湿地で </p>
<hr>
<p>PS：<br>心が混ざり合い、くしゃくしゃになります </p>
<p>書き込みと削除、削除と書き込み<br>下書きを断続的に数回保存します<br>まだ場違い </p>
<p>泣きたいけどもう子供じゃない気がする </p>
<p>人生で4年<br>まだ十分な自由時間、4年間の心配のない食べ物と衣類があります </p>
<p>その後、私たちは常に理想と現実の間で妥協しなければなりません<br>年をとるにつれ、無力感や青白さは日々増し、次第に消えていく社会への理解が深まります。 </p>
<p>しかし、私が見たのは自分自身にとっての快適さです。 </p>
<blockquote>
<p>この輝かしく急速に変化する生活空間では、誰もが自分で選択できることを知っています。私の考えは非常にシンプルです。美しい服を着る必要はなく、ルージュパウダーを使用する必要もありません。最も真面目でシンプルでアクティブな生活は私にとってです。 真実に魅了されました。 </p>
</blockquote>
]]></content>
      <tags>
        <tag>AAU</tag>
      </tags>
  </entry>
  <entry>
    <title>選んだものについて</title>
    <url>/ja/About-choice/</url>
    <content><![CDATA[<p>中国の教育は無神論に属し、科学を信じています<br>しかし、科学は現在それを説明することができません、実現はどこから来ますか？ それは脳の活動だけなのか？なぜ他の動物には意志がなく、人間だけなのか？ 問題なく存在できますか？ あなたが死ぬとき、すべては本当に空ですか？ ここで何をしているの？ </p>
<a id="more"></a>

<p>現実は残酷です。深さを最初に使用する場合、前提条件は「神モード」です。<br>そうでなければ、それはしばしば壊れて、時間の矢のために戻ってくる機会がありません </p>
<p>読んで、勉強して、より多くの情報を知り、そして最初に幅を使う </p>
<p>しかし、最初に目的を決定し、魂が何を望んでいるのかを自問してください<br>「神との対話」に書かれています </p>
<blockquote>
<p>魂、体、脳は分離されています魂は他の2つの存在から独立していますすべての苦しみは2つの一貫性のない目的によって引き起こされます </p>
</blockquote>
<p>ここで言及されている魂は自由意志だと思います </p>
<h2 id="自由意志"><a href="#自由意志" class="headerlink" title="自由意志"></a>自由意志</h2><p>実際、自由意志についてもっと興味があります<br>エベレットの平行宇宙仮説が真実なら、自由意志は冗談です<br>何を選んだとしても、選んだ瞬間、世界は二つ、つまり選択に分かれます。選択の余地はありません。<br>誕生と死さえ<br>マクロスケールでは、違いはありません </p>
<p>ただし、個人の場合、実際に選択が行われます。引用は次のとおりです。 </p>
<blockquote>
<p>「なぜ私たちはコインが好きなのですか。なぜなら、コインが宇宙に投げ込まれた瞬間、答えはすでに明白だからです。」明白な権威ある答えを除いて、答えはしばしば自分自身にありますが、身体、心理学、洞察力はまだ不必要になるほど強力ではありません。 理由/認識は、純粋に心に従うことができます。 </p>
</blockquote>
<p>少なくとも、あなたが選んだ後、この世界はあなたのために続き、あなたの選択はこの世界でのあなたの旅に影響を与えるだろうと私は信じています。 </p>
<p>したがって、選択方法は最適な解決策を持つことができます </p>
<h2 id="最適なソリューション"><a href="#最適なソリューション" class="headerlink" title="最適なソリューション"></a>最適なソリューション</h2><p>最適な解決策は別の問題です<br>最適な解決策は何ですか？<br>これは、自分の世界観、人生観、価値観と切り離せないものです。 </p>
<p>Fai Moに関する記事があります：あなたの人生の目標を決定し、それに到達するための計画を立てるための9つのステップ<br>しかし、重要なのは、自分の世界観、人生観、価値観も変わるということです…<br>テセウスの船はこれを非常によく説明することができます </p>
<h2 id="テセウスの船"><a href="#テセウスの船" class="headerlink" title="テセウスの船"></a>テセウスの船</h2><ol>
<li>人体のさまざまな種類の細胞を見ると、人体全体の細胞の平均年齢は約7〜10歳です。 (それはそれらすべてを変更することです) </li>
<li>船が海上を長距離移動すると、必然的に損傷するため、船の熟練した職人が定期的に船の一部を交換して、船の通常の航行を維持します。 数年後、船全体のすべての部品が交換されましたが、この船は始動時も同じ船ですか？ もしそうなら、廃棄された部品が集められて船に再組み立てされた場合、2つの船と元の船が出発したときの関係はどうですか？ そうでない場合、この船はいつ元の船と異なったのですか？ </li>
</ol>
<p>この質問は非常に魅力的です。このように数えると、ほぼ3ラウンドになります。 </p>
<p>上記は、教育、環境、過去の経験を追加した場合の物理的な状況についてのみ説明しています </p>
<p>したがって、各段階で、追求は異なります<br>「10年に1本の剣」を持っている人には感心します<br>「天才理論の1万時間」、1日3時間はほぼ10年 </p>
<p>刀研ぎの10年]出典】<br>Tang Jiadaoの「Swordsman」の詩：「剣を研ぐのに10年かかりましたが、霜の刃は試したことがありません。今日は王のようで、誰が不正ですか？」(10年？偶然？) </p>
<p>この種の目的が時々変化し、ロールバックできない場合はありますか？ </p>
<h2 id="お元気ですか"><a href="#お元気ですか" class="headerlink" title="お元気ですか"></a>お元気ですか</h2><p>貪欲なアルゴリズムは、いくつかの最適なソリューションの問題のためのより単純で高速な設計手法です。 貪欲な方法を使用してアルゴリズムを設計することの特徴は、段階的に進めることです。多くの場合、現在の状況に基づいて、考えられるすべての全体的な状況を考慮せずに、最適化の手段に従って最適な選択を行うため、最適なソリューションを見つける必要がなくなります。 すべてが可能であり、多くの時間を費やす必要があります。トップダウンの反復的な方法を採用して、貪欲な選択を連続して行います。貪欲な選択が行われるたびに、問題はより小さなサブ問題に縮小され、各ステップを通じて 貪欲な選択は問題の最適な解決策を得ることができます。各ステップでローカルの最適な解決策を確実に取得できるようにする必要がありますが、結果として得られるグローバルな解決策が必ずしも最適であるとは限らないため、貪欲な方法に戻らないでください。 </p>
<h2 id="やっと"><a href="#やっと" class="headerlink" title="やっと"></a>やっと</h2><p>好きな文章。これもたまたま選択に関するものです。 </p>
<blockquote>
<p>私たちはただの偶然の出会いではなく、山や川を通り抜け、ゆっくりと長い道のりでお互いを見つけます。人間の成長する川で、この短い原因と運命の瞬間、それは偶然ではなく、私たちのものです 選択する。 </p>
</blockquote>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>グランドマスター</title>
    <url>/ja/The-Grandmaster/</url>
    <content><![CDATA[<blockquote>
<p>私たちが今できることは、静かな場所を見つけ、静かに考え、その方法を理解することです。そうすることで、貴重なものや大切な人が再び失われるのを防ぎ、その方法を理解することができます。同じ過ちは起こりません。 再び起こります。 それから学び、力を引き出し、しっかりと前進し続け、好きなものを見つけ、本当に愛する人に会い、正しいことをします。 -Xi Murong </p>
</blockquote>
<a id="more"></a>

<p>最初の2週間は毎日6時に起きて11時に寝ました。とても元気でした。1日16時間働いても問題ありません。<br>副作用が出ました<br>この2日間は残業せず、インターネットのない家に寄り添い、ひどい孤独を深く実感しました。<br>不可解にイライラする、残念ながら携帯電話はインターネットに接続できるので、どこでも嫌がらせ<br>最も一般的なものは、「The GangofMen」のGuXiaobaiの「Soboring、soboring」です。<br>一部の方にご迷惑をおかけして申し訳ありません。 いつ安定するかはわかりません </p>
<h2 id="007とグランドマスター"><a href="#007とグランドマスター" class="headerlink" title="007とグランドマスター"></a>007とグランドマスター</h2><p>大学では、たまに劇場に行って大きな映画を見ていました<br>当時はお金がなく、国際的な大ヒット作+ 3Dだったので、一度だけ行きたいと思っていました。<br>仕事はするが、これらの娯楽を置き去りにした </p>
<p>先日「007」を見に行きました<br>とても心配 </p>
<p>私は出てきて、verycd「Assassin’sCreed」のコメントを思い出しました。 </p>
<blockquote>
<p>しばらく入ってみると、荒れ果てた感じがしました。街は繁栄し、キャラクターも華やかですが、半世紀以上のエツィオと向き合うのは荒涼とした時期です。2代目からは毛むくじゃらの少年からこの子へ。 灰色の顔と髭が壁を登っている老人は、いろいろな思いを持っています。数日前、私も誕生日を祝ったことがありました。年々速くなり、このゲームのようになり、一瞬で自分を見ると年をとっています。<br>この暗殺者の三部作では、人の人生が鮮やかに明らかにされています </p>
</blockquote>
<p>「グレートマスター」は色々なタッチがあるので、一つ一つはお話ししません。<br>最も感動的なポイント：<br>イップマンは羽田の手でケーキを壊しに行き、それを処理することができませんでした。<br>アカウンタント氏は、タイチヤンルチャンは「鳥は飛ばない」というスタントを持っているとコメントしました。ヤンルチャンのトリックが鳥をどこにも集中させなかったため、鳥はヤンルチャンの手のひらに止まり、飛ぶことができませんでした。 見えない檻に閉じ込められた。 </p>
<p>私は特にこの話をここでチェックしました </p>
<blockquote>
<p>「小さなスズメは生きていて蹴っていたが、武道の達人ヤン・ルチャンの手のひらでは、それは病気の足のように見えた。彼は羽ばたきを続けたが、磁気に引っ掛かり、きしみ音を立てて飛びたかった。 飛ぶには、力を入れて足のバランスをとる必要があり、リバウンド力で羽を持ち上げて飛ぶことができます。ヤン・ルチャンのカンフーは完璧のピークに達し、手のひらはスズメの足の瞬間的なキックを感じることができます。スズメはいつでも 足を蹴って飛ぶと、手のひらを沈め、鳥の蹴りの力が一掃された！そのため、小さなスズメは羽ばたきと闘争しかできず、ヤン・ルチャンの手のひらなしでは成し得なかった。」 </p>
</blockquote>
<p>この話は誇張されているかもしれませんが、それが真実であるかどうかにかかわらず、それは太極拳を続けることに私の興味をそそります </p>
<p>公園では、中高年の人々が通常、24の国家標準のスタイルを実践しています。それはヤン家から発展し、実際にはタイチです。<br>ここには歴史がありますが、より敏感なので、それについては説明しません。自分でgoogle TaiChiで適応させることができます。 </p>
<p>新入生の年にこんな柔らかさと弱さを見て、いきなり思いを失いました<br>後に、ヤン家は実際にチェン家から進化したものであり、チェン家は戦うときに声を出すことができることが発見されました。若者に非常に適しており、体調が悪いです。 </p>
<p>しかし、当初の堅固さから現在の遅さまで、ヤンの「硬さと柔らかさは封じ込められているが、深く隠されている」ことに気づきました。<br>私の理解では、ヤンはすでにワンシジンを外部化して具現化しており、外側は少しも見えません。ジンは内側を回ってひっくり返し、手に入れたら完了です… </p>
<p>以前は井戸に座って空をもう一度見ていました </p>
<h2 id="あなたと一緒に座ってコーヒーを飲むのに18年かかりました"><a href="#あなたと一緒に座ってコーヒーを飲むのに18年かかりました" class="headerlink" title="あなたと一緒に座ってコーヒーを飲むのに18年かかりました"></a>あなたと一緒に座ってコーヒーを飲むのに18年かかりました</h2><p>Xue Yuanを見るたびに、私は自分がどれだけのお金を取り、どれだけ節約したかを数えます。そして、それが多すぎるたびに、私は数年で私の夢を実現したと思います。 </p>
<p>これはまったく言葉がなく、もう少しだけです。用途は何ですか？人生は混乱であり、悲観論と不安の端をさまよっています<br>実際、私が言いたいのは、なぜ理由もなくもっとたくさんあるのかということです。 これにいくら払う必要がありますか<br>これまでのところ、私に多くの感銘を与えた記事：<br>「あなたと一緒に座ってコーヒーを飲むのに18年かかりました」 </p>
<p>私の大学は中国の他の大学で、すでに弱いです<br>学校募集の段階で、他の2つの学校の学生と向き合うのは初めてでした。 </p>
<p>ハーバード大学の卒業式でのJ.K.ローリングのスピーチ：<br>失敗のフリンジの利点と想像力の重要性(「失敗の利点と想像力の重要性」)<br>文があります： </p>
<blockquote>
<p>確かに、あなたの失敗の概念は、平均的な人の成功の考えからそれほど遠くないかもしれません、それであなたはすでに学問的に飛んでいます。 </p>
</blockquote>
<p>ですから、私はいつも一流の学校の生徒たちを羨ましがっています。彼らの出発点はすでにとても高いのです。<br>彼らに追いつくのに何回かかりますか、そしてそれはただ可能です </p>
<p>すべての段階ですべての段階で問題が発生します<br>もう少し見えるかわかりませんが、そのせいで惨めになります<br>そのため、ギャップがどれほど大きいかを知っています。弱い自分には何もできません。<br>すべてのこと、すべての方向、それを行うには時間がかかります </p>
<p>私はWeiboが不平を言ったように自分自身を望んでいません： </p>
<blockquote>
<p>私が欲しいものを理解するには遅すぎます、寺院は白くなり始めました;彼らの愛を確認するには遅すぎます、反対側はすでに結婚しています;子供を愛するには遅すぎます、彼は成長してあなたを去りました;有名になるには遅すぎます、私たちは入ろうとしています 墓はなくなった。 すべてが手遅れになるのではないかと心配しています </p>
</blockquote>
<p>残念ながら、2番目はすでに実行されています </p>
<p>若い頃に一番嫌いだった人になりましょう<br>人が成長することを選択するとき、彼はしばしば理解されないことを選択します。なぜなら、あなたはあなたが選択すべきだと彼らが考える道ではなく、あなたが選択した道をたどらなければならないからです。<br>この段階で、ママとパパが私が何を考えているのかわからないかどうかはわかりません<br>実は、他の人はもちろん、自分が何を考えているのかわかりません<br>そして、しばらく前に、私は自分が好きではない人になっていることに気づきました<br>あなたが誰であるかをあえて明らかにするのではなく、すべてが慎重です<br>一文として： </p>
<blockquote>
<p>多くの人々の喪失は、彼らが若い頃の彼らの願望に反しています。 私は過去に成熟していて、熟練していて、抜け目がなく、素朴だと思います。そしてついにそれを透視して着たいと思います。 だから、私たちは若い頃に一番嫌いだったような人になりました </p>
</blockquote>
<p>幸せではないこと<br>悲しいときは誰も私のことを気にしない<br>英語を全画面表示するとめまいがする<br>読みたい本の数は午後のリストと同じです </p>
<p>理論は知っています：<br>時間をかけて、すべてが手遅れです<br>どこが弱いのか、どこにあるのか<br>一度に1つのことだけを行う<br>瞬間の力<br>割り当てられたタスク、世界で最も難しいこと </p>
<p>自己救済の道を進んでいるようです<br>しかし、このように弱いバーストが発生し、時々私は本当に絶望的に感じます </p>
<p>卒業から半年<br>半年経ちました<br>世界の終わりは終わった </p>
<p>客観的に言えば、進歩があるようです<br>しかし、曲線は描かれています、それは水平線に無限に近いです </p>
<p>チャオウェンダオ </p>
<p>私を非常に落ち込ませる別の場所があります </p>
<p>Da Liuのサイエンスフィクションには、「The Way oftheChaos」という記事があります。<br>「TheAnalectsofConfucius」からの引用。<br>それは宇宙の謎を理解するために彼らの命を与えることをいとわない科学者の詳細な説明を与えます。 </p>
<p>一連のヒアリングがありますが、それは大したことです。 </p>
<p>しかし、タオテチンには次のような文章があります。 </p>
<blockquote>
<p>軍人はタオを聞いて熱心に歩きます;軍人はタオが生き残っているならそれを聞きます;彼がタオを聞くと肉体は笑います。 笑わないだけでは十分ではありません。 </p>
</blockquote>
<p>笑っていない、十分ではない<br>２年生の時に図書館で「かわいそうなお父さん」という本を見たのは明らかで、その時はめくっていましたが、コイニングコーナーはつまらなくて、とにかく一人で商売はしないと思いました。 将来的には、プログラミングをキャリアとして使用し、目標を狭めるので、これを見るのに時間を費やすことはありません。 </p>
<p>当時の馬鹿げたことはばかげているようで、目の前にタオがいると言えますが、耳が聞こえません。 </p>
<h2 id="Superego、ego、id"><a href="#Superego、ego、id" class="headerlink" title="Superego、ego、id"></a>Superego、ego、id</h2><p>誰もがあなた自身の3つの状態に住んでいます：親、大人、そして子供。<br>フロイトの人格構造に対応する：superego、ego、id。<br>スーパーエゴは、法、道徳、良心、権威、秩序の擁護者、厳格な検察官、神、神、悟りを開いた禅の達人、そして完璧の原則を表しています。<br>idは幸福の原則に従います。それはすべて原始的な衝動、本能と欲望、意図的、彼らがやりたいことをすること、そして自己中心的です。<br>エゴは現実の原則、コーディネーター、バランサーに従い、自己の欲求を満たすだけでなく、検察官の目を逃れるために真ん中にいて、超自我の意志を完全に侵害することはできません。 エゴはビジネスマンのようなもので、交渉することができます。idとsuperegoはシーソーの両端にあり、エゴは中央にあるため、バランスを取る必要があります。 自己は合理的であり、現実の原則に従います。 </p>
<p>なぜ私はとても悲しいのですか、私は思うに、すべてが超自我であるかもしれません </p>
<p>私はいつも私の心の中に影を持っていました。つまり、私が知っているすべての分野で、プログラミング、太極拳、子午線、心理学、心、そして最近、金融は大きな成功を収め、私をピークに達しました。<br>私は彼と直接会話したことは一度もありません、常に唯一の影があります<br>「神、雪葉、人」で述べたように、「神は私たちの鳥ではない」<br>しかし、私は影を追いかけて、自分の欲望を注意深くコントロールしようとしてきました </p>
<p>些細なことがたくさんあり、内なる声を聞く時間がありません<br>そしてほとんどの場合、私は自分の選択に満足しています<br>しかし、家にいる人がドアや窓を閉め、周りは寂しく、一人でいると<br>スーパーエゴの神のような敵と自己の豚のような味方に直面します </p>
<p>私がとても壊れやすく、臆病で泣いていたことに気づいただけです<br>痛みも利益もありませんが、価格が高すぎるのではないかと思うことがあります。何を投げるのですか。小さな生活を平和に過ごす方がいいです。幸せになりませんか。 </p>
<p>ギャップのバランスをとる方法<br>すべての無力と悲しみはこれから来ると思います </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>死者へ2012</title>
    <url>/ja/For-2012/</url>
    <content><![CDATA[<p>まだ後知恵があります。もともとは新年のまとめでしたが、春祭りまで、そして今日まで延期されました。 </p>
<h2 id="2012年に書かれた"><a href="#2012年に書かれた" class="headerlink" title="2012年に書かれた"></a>2012年に書かれた</h2><p>春祭りの1ヶ月前は落ち着きがなかった<br>外の人と関係があるのか​​わかりません<br>中国の新年の間に家に帰ったとき、私は空を飛んでいる雪と銀で覆われた地球をバスで見ました、そして私の心は平和に戻りました。 </p>
<a id="more"></a>

<p>2012年は私が最も成長した年でした<br>外部環境の変化は別として、私たちはもはや学生の基準を使って自分自身を要求することはできません </p>
<p>今年の前半は、家で本を読んだり、ゲームをしたりすることは何もありませんでした。<br>神のような作品「友達として時間をかけて」を思い出してください<br>心が熱くて一ヶ月間欠的に読んでます<br>その後、世界は違った感じになります<br>おそらくそれ以来、読書に夢中になりました </p>
<h2 id="過修正"><a href="#過修正" class="headerlink" title="過修正"></a>過修正</h2><p>２年生のタイチの硬直から軟化の過程を今でも覚えています。一度先生とおしゃべりをしました。<br>彼は私が震えすぎていると言って、クラスメートに彼らの携帯電話でビデオを撮るように頼みました、そして私は自分で理解するでしょう。<br>その時、私はびっくりして言った、これが唯一の道だと思った。 </p>
<p>はい、これはやり過ぎです </p>
<p>高校生の時も背中の痛みを感じました<br>それ以来、私は伝統医学に触れてきました<br>でも最近は手足や首の枕に痛みを感じました<br>ドンウーの相対性理論で「彼の存在に気づいたら問題になるかもしれない」という文章を聞いた。<br>もっと深刻だと思って死ぬのかしら<br>でも最近は「TheArtof Learning」で見たのですが、太極拳の紹介かもしれませんし、今まで感じたことのないものを感じました<br>要するに、すべてが続き、落ち着いて </p>
<h2 id="一目で"><a href="#一目で" class="headerlink" title="一目で"></a>一目で</h2><p>時々それはとても奇妙です、あなたが群衆の中にいるときあなたは一目で彼女に気付くことができます<br>一目惚れではなくても、しばらくすると大勢の人でこの人に気付くでしょう<br>それを見るだけで、彼女を周りの人々と区別することができます<br>背景、性格、職業、趣味はすべて不明ですが、それでも彼女の特別さを感じることができます </p>
<p>土曜日にウェストサイドアイスリンクに行きます、これは私の人生で2回目のスケートです<br>スケートのように<br>一つは、直立した動物になることの難しさを再び感じさせ、小脳を訓練することです。<br>二つ目はバランスを再理解することです、これと太極拳は補完的な効果を持つはずです<br>だから週末のスポーツのためにそれを一定にすることにしました<br>現在も操舵には摩擦が使われていますが、次回はセントリペタルフォースを使いたいと思います </p>
<h2 id="衝動的"><a href="#衝動的" class="headerlink" title="衝動的"></a>衝動的</h2><p>誰もがこれは衝動的な社会だと言っています </p>
<p>はい、一般的な傾向<br>異常な場所に長期間住んでいると、異常は正当なものと見なされます。 </p>
<p>私は衝動的であることを否定しません<br>何でもやりたい、何もしなかった<br>しかし、私は無力だと感じています。読書と注意を払うことは、4年生から始まりました。<br>GTDを知っている、用途は何ですか<br>重要なのは時間の使用量ではなく質です<br>流れ-心臓の流れ、あなたのために時間が止まります </p>
<p>同じことが衝動性にも当てはまります、私は深くて広い関係にどう対処するかを感じます<br>Qiaoが言ったように、最初は広範囲に渡って発見しようとし続け、最終的にはあなたの興味を見つけるでしょう<br>私は大学で2年間プログラミングに苦労していて、それは一生に一度のことだと素朴に思っていました。<br>そして、あなたがマスターまたは偉大な人と呼ばれている限り、あなたはお金を心配する必要はないと思いました<br>そして、お金ではなく、利益のために働くと主張する<br>今見て、それはとても愚かで素朴でした<br>のんきな4年間の大学時代、私はそれを広めませんでした。今は少し遅れていますが、それでもこれを続けなければなりません。 </p>
<h2 id="引っ越し"><a href="#引っ越し" class="headerlink" title="引っ越し"></a>引っ越し</h2><p>ヘフェイの友達に感謝します(この言葉にうんざりしていましたが、後で別の意味があることがわかりました。中国の文化は本当に広範で深遠です)、私は悲しいときはいつもあなたを引き出していました。<br>そしてしばらく私と一緒にいてください<br>他に、私が5つの科目を持っていて、1つを取り戻したことを知ったとき、心理学の学士号を取得せず、謙虚な給料を求めて急いで大学院に進学せず、私の誕生日の前日に準備しました。 殴られて悲しくてめちゃくちゃになったとき、嫌悪感はなく快適さ </p>
<h2 id="Sanshengshi"><a href="#Sanshengshi" class="headerlink" title="Sanshengshi"></a>Sanshengshi</h2><p>名前を聞くだけでも最高です </p>
<p>最初の連絡先は「SouShenJi」でした。 </p>
<blockquote>
<p>三命の石の上に横たわり、過去と次の人生を実現し、心配のない湧き水を飲み、恨みを忘れてください </p>
</blockquote>
<p>前回杭州を訪れた時、杭州のアトラクションをググったところ、「三生市」という言葉が３つあることに驚きました。 </p>
<p>私の22歳の終わりに、私のビジョンから逸脱した多くのことがありました<br>そして、私がしたことはすべておそらく回避していることがわかりました(何を回避するのですか？) </p>
<p>最も気のめいることは、睡眠後、脳は必要に応じてすべてを再コンパイルして実行することです。 </p>
<p>目が覚めたとき、趙が3年生にBLを持っていると言ったのを聞いたときと同じように、とても深くリラックスして眠っていました。 </p>
<p>それから私は三生石を見に行きましたが、結局のところ、命を取り除くのは私の名前です。 </p>
<h2 id="ユーティリティと自由"><a href="#ユーティリティと自由" class="headerlink" title="ユーティリティと自由"></a>ユーティリティと自由</h2><p>真の自由主義を理解し、相続税の役割を理解し、 </p>
<p>私は独立した見解を持っていないかもしれないことを理解しています、そして批判的思考と批判的思考の間には大きなギャップがあります。 </p>
<p>「ハピネスクラス」以来、自分自身にとても満足していて、過修正さえしていることを理解しています </p>
<p>その人が誰であっても、あなたはまだ他の人に約束をすることができないことを理解してください </p>
<p>私は自分自身や他の人を失望させないために、行動しないことを頻繁に選択することを理解しています </p>
<p>時々機会が待って変化するために使われることを理解してください、最終結果は失われます </p>
<p>イライラした後も悲しい気持ちになることは理解しています </p>
<p>でも私はまだ分かりません何をいつどこで誰がなぜどのように </p>
<p>自分のやっていることはすべて小さな混乱だと感じることがあるので、それを変えても無力感を感じることがあります。 </p>
<p>ゆうゆ川底松、山からの苗<br>茎の直径で、この百フィートを日陰にします </p>
<p>ワンは最近、あなたが一生懸命働くなら、あなたは達成することを発見したと言いました </p>
<p>しかし、私のモデルは、実現されていない可能性があります。少なくとも、実際の結果と私自身のモデリングの間には多くのギャップがあります。 </p>
<h2 id="望む"><a href="#望む" class="headerlink" title="望む"></a>望む</h2><p>もちろん、彼らは自分自身を言い訳し、自分たちの正当な理由を見つけようとしているのかもしれません。<br>もちろん、おそらく、私が言ったことは間違っています<br>しかし、いずれにせよ、あなたがどんなにため息をついたとしても、素晴らしい22は過ぎ去りました。<br>時々それは時計があるように感じ、警報時計を刻みます<br>それは内なる時間の観察であるだけでなく、時間の経過の経験でもあります<br>確かに、死者は夫のようです </p>
<p>私はまた、希望があるかどうかは関係ないことを知っています<br>しかし、私は3番目のサイクルの終わりに向かっていることを願わずにはいられません。<br>マイクロソフトのゲームの名前のように、私は突破口を開くことができます：国の台頭 </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>入社1年近くの気持ち</title>
    <url>/ja/Thinking-in-one-year-of-working/</url>
    <content><![CDATA[<p>早くやれよ<br>ITを実行するだけです、ハハ </p>
<a id="more"></a>

<p>卒業後1ヶ月で1年になりますので、少し書いてください </p>
<p>当時は学校に行くのは簡単で、プログラミングが好きだと思いました<br>でも当時は本当に気に入りました。大学の担当者は誰もいなかったので、自発的に見に行きました。<br>「BetheBest You」という本の影響もあってかと思いますが、データの構造やアルゴリズムを非常に重要視しており、研修生はみんな浮かぶ雲だと愚かにも思っていました。 </p>
<p>今分析すると、それは狭い視野のせいでもありました<br>人々は少し趣味でなければなりません、そうでなければそれはとても空です<br>当時、私はプログラミングしか知りませんでした、そしてそれは栄養であるはずです。 これさえ気に入らず、ガールフレンドがいないなら、この種の生活はひどいです </p>
<p>申し出が署名された後、私はすぐに学校から除かれました<br>その年、私は何もすることがなく、周りを見回してたくさんの素晴らしいものを見つけました。<br>世界がとても魔法のようであることを発見し、多くの可能性があることを発見してください<br>なぜ私は自分自身をプログラムエイプシージライオンと定義するのですか？ </p>
<p>後で入社しました一般的に言って大丈夫です<br>毎日、それは普通の沸騰したお湯のようです </p>
<p>当初、私は遠くに住んでいました。「時間はスポンジの中の水のようなものです。絞りたい限り、いつでもバスに乗ることができます。」<br>明らかにアリの糞バケツ、それについて考えるのは悲しいです<br>後で会社に引っ越しました、お金を節約するために、紙は比較的古いです<br>Daqiangは生まれて初めて見ました。 </p>
<p>仕事の面では、一般的に言って、忙しすぎることはほとんどありません。最初は、暇なときにiOSの開発を見ました。<br>私は後で忙しくなり、私の個人的な時間は無限に絞られました </p>
<p>それが私の江子なのか、業界が江子なのかわかりません<br>どこで火事があったとしても、どこで捕まえられても、私は少し消防士のように感じます<br>最初はAndroidでしたが、上司からiOSを見てほしいと言われました<br>(挿入：勝ち、Appleに連絡することに慣れている人は誰でも、そのデザインにショックを受けると思います。そのため、私は常にエアまたはプロを購入したいと思っています)<br>さて、私はそれを約2週間見て、Android側が忙しすぎると言いました。Androidを見てみましょう。<br>後で、彼はアンドロイドプロジェクトをコンパイルするために捕らえられました<br>今、私は再びウェブページを書いているのを見つけられるでしょう </p>
<p>もちろん、私はただ嘔吐します。私はもう興味がありません。私が何をするかは関係ありません。<br>必要なものは何でも、必要なものを見てください。仕事で処理できるものは次のようになります。<br>深くはできないと言う人もいます<br>はい、わかりませんが、本当に見たくないです<br>同僚がjvmをかじっているのを見ると本当にうらやましいです </p>
<p>私は言語の信念を持っていません、私はその言語のランキングを笑っただけです<br>存在することは合理的であると感じ、すべての言語は特定の問題に対処するために生まれます<br>特に良い言語はありません、その言語は特に悪いです </p>
<p>もちろん、習慣の問題は常にあります。私はいつもCを使ってプログラミングを学びました。Javaを強化して、それが本当にスムーズであることがわかりました。それは人々が見ることができる言語でした。EclipseはVS + VAよりも使いやすいです。自動プロンプトは非常に強力です。 アップ<br>でも2日前に今年のビセットを調べたのですが、まったくわかりません。その年に書いたものですか？<br>Linuxカーネルバージョン0.11もあり、2wコードが実装されています。短く簡潔で、信じられないほどです。 </p>
<p>はい、時間は劈開のようなものです、常に圧迫があります<br>しかし、これを行う人はすべて理解する必要があります。家に帰ったら眠りにつくのが待ちきれません。ガールフレンドのことも気にしたくありません。他のことをするためのエネルギーはどこで得られますか。それには遅れが伴います。<br>はい、<strong>「時間が足りないのではないかと心配することがよくありますが、少し時間が無駄になります。」</strong> </p>
<p>大規模なレイオフの後、去った人々の約半分は、多くの同胞が採用しました<br>私は静かに過半数になり、仕事に出入りし、ゴシップを話したり、周りの人とあまりコミュニケーションをとったりしませんでした。<br>プロジェクトの見通しは楽観的ではありません。TLはすでにフラッシュされており、新しいTLは非常に心配であり、Yaliはますます大きくなっています。<br>ここにはチャンスがたくさんあると思っていたので、2年後にはもっといい会社に飛び込みたいと思いました。 次に、どの会社に行くかを見てください。実際にはそれほど違いはありません。 </p>
<p>私は今本当に疲れています、私はやめたいです、休む場所を見つけます<br>でも学校に行くほど良くはありません </p>
<p>できるだけ早く転職したい場合はどうすればよいですか？ </p>
]]></content>
      <tags>
        <tag>Career</tag>
      </tags>
  </entry>
  <entry>
    <title>とても若い</title>
    <url>/ja/So-Young/</url>
    <content><![CDATA[<p>何か書きたいのですが、どこから始めたらいいのかわかりません </p>
<p>おそらくボトルネックの時期に入って、明らかな変化を感じることはできません </p>
<a id="more"></a>

<p>そして、ブログからWeiboへの移行があるのも不思議ではありません<br>段落全体をコーディングする時間はありません<br>時間は完全に断片化されています </p>
<p>Shuangpinは、tyuやその他の文字を除いて、ようやくスムーズになりました。時々わからないので、試してみる必要があります。ほとんどの場合、バリアフリーです。<br>ライブラリでQuanpinを使用していると、明らかに、タップするにはサブタイトルが多すぎると感じます。 </p>
<hr>
<h2 id="ハングトゥ"><a href="#ハングトゥ" class="headerlink" title="ハングトゥ"></a>ハングトゥ</h2><p>初めてルアンでイヤと一緒に行った時<br>その時、ショックを受けました。本棚が天井に達したので、本を持って棚を登らなければなりませんでした。まるでハリーポッターの映画のようでした。<br>よく来たかった<br>去年の5月の日、ようやく長い間滞在し、トピックリーディングを試しました(実際、並行リーディングはせいぜい考慮されていません)。<br>読書効果については話さないでください。関連する本を取り出して、そのうちのN個を消してください。とても充実しています。クールすぎないでください。 </p>
<hr>
<h2 id="週末"><a href="#週末" class="headerlink" title="週末"></a>週末</h2><p>どのような変化が私たちにもたらすのかはわかりませんが、何が失われるのかは正確にわかっています<br>常に回避し、回避するのも不思議ではありません<br>私は先月上海と河飛に走りましたが、リラックスの効果は言うまでもなく、カードが破裂したのは事実です </p>
<p>私は週末は家政婦でしたが、いつも自分を押しているかのように、またやり過ぎを感じました。<br>リアルタイムマルチタスクオペレーティングシステムのように、タイムスケジュールがいっぱいで、ノンストップで、CPUは常に完全にロードされています<br>結果は疲れていて、週末のようにはまったく感じません。最も気のめいるのは、発散しすぎていることです。すべてをうまくやっていませんでした。暇なときは、どこから始めればよいのかわかりません。 </p>
<p>今回は一週間感じたら<br>いつの日か、ドアを開けずに家にいなければならないようです。<br>金曜日または土曜日は午前1時か2時まで遅らせる必要があります<br>少し休むために </p>
<p>しかし、今日私は別の日に走った<br>午前中にMechanic3を見ましたが、また一人でやったんです、ハハ </p>
<p>トニーも考えているに違いないと思います、その鎧を脱いでください、彼、「アイアンマン」とは何ですか？ 鎧を着ている他の人はどうですか？<br>彼はいつも自分をメカニックと呼んでいたが、後で答えを見つけたようだった。彼はもっと決心し、不安が癒された。最後に彼は「私は鉄人だ」と言った。 </p>
<p>午後は英語コーナーに似たところに行って、オリジナルの「学びの芸術」を読みました<br>私は以前に中国語をブラッシングしたことがありますが、結果はまだ障害と悲劇でいっぱいです </p>
<p>遅くまで起きていて、眠くて眠っていない、モラルがない<br>でも夜は静かで、一日中色褪せて、いきなり無力感が出てきます。この人は私ですか？ </p>
<p>王暁波は、すべての人間の苦しみは本質的に彼の無能に対する怒りであると言いました。 </p>
<p>怒っているのは正しいですが、他の人に嫌がらせをするのに神経質になるのは正しくありません。<br>明日の午後、心理相談に行きます。すでに予約を入れています。 </p>
<hr>
<h3 id="世界の本の日"><a href="#世界の本の日" class="headerlink" title="世界の本の日"></a>世界の本の日</h3><p>4.23 Doubanグループを引き渡した後、私はそれがWorld BookDayであることを知りました<br>蘇生が遅すぎるのは無力で、知るのは人生で初めてです<br>その文を覚えておいてください </p>
<blockquote>
<p>私は200冊の本で生まれ変わり、1000冊の本で生まれ変わりました </p>
</blockquote>
<p>私が注目しているファイティングファルコンは1000+で十分だと思いました<br>Zhihuで壊れた8k +を見た<br>一瞬、目がくらんだと思った<br>それから、それは広範囲にわたる読書だと思いました、そして、メモの数を見た後、それは墜落しました<br>廃墟三関<br>「ドラゴンバブ」の抜本的な僧侶でしょうか？ </p>
<p>最初はそうだと思いましたが、普遍的ではありません<br>しかし、現実は残酷です<br>壊れたkがヒープによって計算されているのを見つけるのは悲しいです<br>これらの人々は変質していますか？ 。 。 </p>
<p>私は一瞬で落ち着きませんでした、私は箱をひっくり返し、キャビネットをひっくり返し、そしてそれらが本である限り、私が以前に読んだすべての本に印を付けました。<br>武道+ファンタジーの貢献のおかげで、それは即座に2倍になり、200以上を突破しましたが、残念ながら何も変わっていません。それ以来、私は通行人です<br>今日に捧げる </p>
<hr>
<h3 id="心から心へ、それでいて独立"><a href="#心から心へ、それでいて独立" class="headerlink" title="心から心へ、それでいて独立"></a>心から心へ、それでいて独立</h3><p>「CangHai」には次のような文があります。 </p>
<blockquote>
<p>あなたのそばに恋人がいなければ、比類のない光があっても、それはどのような用途ですか？ </p>
</blockquote>
<p>「クンルン」の英英と比べて、そんな自立した女性の華暁双が好きです。<br>武道についてはあまり知りませんが、自分が何をしたいのか、何ができるのか、親切で、温かく、楽観的です。 </p>
<p>ShuTingの「TotheOak」のように </p>
<blockquote>
<p>心から心へ、それでいて独立 </p>
</blockquote>
<p>だが </p>
<blockquote>
<p>誰かと恋に落ちたとき、すでに恋に落ちていたことがあります。告白も、握りも、抱擁も、何もありませんが、生まれてから交差点のないこの人を愛しているかのように、ずっと恋をしているような気がします。 </p>
</blockquote>
<p>今、私は以前より少し多くを知っています<br>山を渡ったことがない、わからない、視野が少し広がっている<br>でもその時、船長と一緒に飲み物を飲んだ時、もう少し知ってるけど、役に立つの？ </p>
<p>お気に入り </p>
<blockquote>
<p>後の話ですが、また会えるタイミングを逃してしまい、悲しくて痛いです。 </p>
</blockquote>
<p>私はもっ​​とリベラルです尊敬は真の愛の準備を提供すると思いますその人が現れたら私は全力を尽くします<br>しかし、あなたがそれについて考えるとき、なぜあなた自身をだましてみませんか<br>でも信じられないなら何が信じられますか一つしか選べません人生は無力です </p>
<hr>
<h3 id="死にゆく若者へ"><a href="#死にゆく若者へ" class="headerlink" title="死にゆく若者へ"></a>死にゆく若者へ</h3><p>記事全体が少し悲しみに満ちており、読んだときもとても悲しいです。 悲しいかな、大学はこの薬を経験したことがありません<br>それを読んだとき、私はすでに卒業しました。悲劇。映画が本来の味にならなかったと聞きました。私はそれを見なかったので、二度と沈められたくありません。<br>前回の清明祭を終えて学校に戻った時は、少しうらやましかったです。<br>もともとは階下の14＃寮に行って追悼式の紙を燃やすつもりでしたが、後で諦めました<br>私が非常に早く見た一節は要約できるはずです： </p>
<blockquote>
<p>実際、私はこれらの技術オタクを非常にうらやましく思っています。主に彼らのライフスタイルと団結のためです。彼らはWorld of Warcraftを一緒にプレイしたり、Dungeons and Dragonsボードゲームをプレイしたり、女性について話し合ったり、アニメを一緒にプレイしたり、男性の世界であらゆる種類の喜びを体験したりできます。 楽しいパーティーなどのイベントは、大学にいるときだけ可能だと思います。仕事をしているときは、飲んだり、飲んだり、おしゃべりしたりするキャリアがあります。仕事が遅れることは間違いないので、すべての趣味や趣味が再び利用できるようになる可能性があります。 そして人生、だからあなたが幸せなときは瞬きしないでください、それは30年です。 </p>
</blockquote>
]]></content>
      <tags>
        <tag>Reading</tag>
      </tags>
  </entry>
  <entry>
    <title>Shuangpinを学ぶ方法</title>
    <url>/ja/How-to-Learn-Shuangpin/</url>
    <content><![CDATA[<p>ShuangpinがスマートABCの時代であることを最初に知った<br>当時、右下の入力ステータスバーに「クアンピン」があり、タップするとシュアンピンになりました。数文字試してみましたが、どうしたのかわかりません。<br>その後、そごう入力方式が本格化すると、ピンイン入力が第2世代に進化し、ピンインの入力速度が大幅に加速し、寒さの中、ウビは取り残されました。 </p>
<p>通常、私たちが何かを考えているとき、私たちの頭に浮かぶのは中国語の文字ではなく「音」です<br>つまり、PinyinはWubiよりも話すプロセスと一致しています </p>
<a id="more"></a>

<p>その後、主にLiXiaolai先生の「TakeTimeas a Friend」の一節を見たので、Shuangpinを試しました。 </p>
<blockquote>
<p>読んでいるときにメモをとったり、たくさんメモをとったりすることのメリットを実感したとき、冷たい汗をかいて怖かったことに嬉しい驚きを覚えました。 過去にブラインドタイピングの練習を拒否したことがいかにばかげているかを突然理解しました。 当時、異性の刺激がなくても、少なくとも一週間はかかるのですが、怠惰で勉強や練習を拒否しました。 この考えでグースバンプが発生した場合、5年前にタッチタイピングを1週間学んだとしても、さらにいくつの読書ノートや単語を蓄積できますか？ -言うまでもなく、ほぼ15年前、私には機会があり、ブラインドタイピングを学ぶことは完全に可能でした。 私の神よ、私はどれくらいの時間を無駄にしましたか？ もう考えない。 </p>
</blockquote>
<p>それから私は情報をチェックし始めました、それは難しいことではありません、誰もがバイドゥを読んだ後に理解するでしょう<br>結局のところ、私が子供の頃と同じように、それらはすべてピンインシステムにあります、私は地元の方言を話しました、しかし後で私は基本的に障害なしでマンダリンを学びました </p>
<p>いくつかの問題に直面しています： </p>
<h2 id="1-スピード"><a href="#1-スピード" class="headerlink" title="1.スピード"></a>1.スピード</h2><p>スピードが出ない場合は、愚かな卵はShuangpinに置き換えられます </p>
<p>では、Shuangpinはどこで速いのでしょうか？<br>例えば：<br>「こんにちは、ダブルファイトワールド」を叩きたい<br>完全なスペルは <code>nihao、shuangpinshijie</code>です<br>Shuangpinは <code>nihk、udpnuijx</code>(私が使用した自然なコード)です<br>これはわずか6文字で、キーストロークの数が8分の1になります。1日3kを数えると、4k倍も少なくなります。指を保護することも有益です。<br>もちろん、「私は非常に単純なスペルを持っています」と言うかもしれません、 <code>nh、spsj</code><br>次に、重複するコードについては説明しません。ページをめくってゆっくり見つけることができます<br>また、ShuangpinはPinyinでもあるため、SuperJianpinをサポートしないのは意味がありません。 </p>
<h2 id="2-クロス入力方式"><a href="#2-クロス入力方式" class="headerlink" title="2.クロス入力方式"></a>2.クロス入力方式</h2><p>Quanpin、どの入力方法を使用しても、全員のキーはまったく同じです<br>Shuangpinにはいくつかのスキームがあり、一般的なものは次のとおりです(Sogou設定で確認できます)<br>SogouにもSogouプランがあります </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Shuangpin.jpg" alt=""></p>
<p>どのスキームがより効率的かを前に確認しました<br>触れていない子供用の靴を絡める必要はありません。<br>本当のギャップがあると言いたいのなら、あなたはそれに精通しているだけです </p>
<p>さらに、コーダーでない場合は、Microsoftに精通している人でもかまいません。結局のところ、Microsoftの評判と、QQやShenmaなどの一般的な入力方法がこれをサポートしています。 </p>
<p>FamilyBucketを使用していて、サードパーティの入力方法をインストールしたくない場合は、Sogouのソリューションを使用してください<br>これは、ジェイルブレイクなしでiPhoneとMacの両方をサポートする唯一のものです<br>最初に使用した自然なコードですが、Sogouソリューションに変更できませんでした🤷‍♂️<br>幸いなことに、キーはほとんど同じで、数回クリックするだけで慣れることができます </p>
<p>続けてください </p>
<h2 id="3-クロスプラットフォーム"><a href="#3-クロスプラットフォーム" class="headerlink" title="3.クロスプラットフォーム"></a>3.クロスプラットフォーム</h2><p>私は以前にdvorakキーボードをプレイしたことがあり、キーに1か月慣れた後(qwertyキーボードは数か月後に盲目的にしか入力できません)、それが心理的効果であるかどうかわかりません。実際、速度は元の160から220に速くなっていると感じています </p>
<p>Windowsはレジストリを変更することでqwerty-&gt; dvorakキーマッピングを実装できますが、ubuntuは実装できません。2年後の携帯電話の人気と相まって、2つのキーボードを直接変換するのは非常に苦痛ですが、qwertyに戻るしかありません。 </p>
<p>過去から学んだ教訓を踏まえて、誰かがそれを支持しない場合に備えて、計画を選択する際には非常に注意する必要があります。 </p>
<p>結局、自然なコードが選択されました、それがubuntu、mac、あるいはandroidのQQ pinyinでさえ、この「自然なコード」があります </p>
<h2 id="運動："><a href="#運動：" class="headerlink" title="運動："></a>運動：</h2><p>ボクシングは練習しているがカンフーは練習していない<br>原理、計画、すべてを理解し、ついに最後のステップに到達しました<br>それはまた最も簡単なステップです </p>
<p>はい、あなたはそれを正しく読んでいます、それは最も簡単なステップです<br>前に言ったように、QuanpinからWubiが英語を学ぶようなものであれば、QuanpinからShuangpinはマンダリンを学ぶのと同じくらい簡単です。<br>したがって、Wubiを試し、あきらめた学生には、心理的な影はありません。 </p>
<p>キーの位置を印刷してコンピューターの横に置き、QQを開いて、いつものように毎日他の人とチャットするだけでよいので、言うのが最も簡単です。それで問題ありません。 </p>
<h2 id="自習"><a href="#自習" class="headerlink" title="自習"></a>自習</h2><ul>
<li>2日前：それは奇妙でした(今回は常にShuangPinに切り替えたいと思うでしょう、特にMMはあなたのタイピングがとても遅いと言いました、あなたは他のことに忙しいですか、このプライドのポイントは必要ありません) </li>
<li>次の2日間：それに慣れます(個々の母音を除いて、速度は徐々に増加します。キーテーブルを一瞥する必要があり、自尊心はゆっくりと回復します)<br>一週間後：当然、これからは通行人になります </li>
</ul>
<p>おめでとうございます、ホームトラベルの衣装Bに必要なスキルがもう1つあります！<br>特に他の人があなたのコンピュータを使って一連の不可解な言葉を押し出すとき </p>
]]></content>
      <tags>
        <tag>Shuangpin</tag>
      </tags>
  </entry>
  <entry>
    <title>KindlePaperwhiteは身体検査を使用します</title>
    <url>/ja/UX-of-Kindle-Paperwhite/</url>
    <content><![CDATA[<p>ハイタオ日本語版では、数分後、画面中央に不可解な縦線が現れ、どんどん落ち込んでいく<br>後にグーグルで、電子インクは磁場の近くにあるべきではないと言われました、それは携帯電話のスピーカーによって引き起こされたのでしょうか？<br>現在、私はそれで間に合わせることができます、それは本当に認識ワードに影響を及ぼします、そしてそれからカスタマーサービスに連絡してください<br>日本版は本土では修理できません。 </p>
<a id="more"></a>

<p>同僚のkindle5を見たことがありますが、ページをめくると点滅します<br>携帯電話のリフレッシュ速度に慣れている私にとって、それは突然受け入れられないと感じます<br>これを購入してから数ヶ月が経ちました。mini2はまだリリースされておらず、ここHefeiのライブラリは強力ではありません。 </p>
<p>実際に使ってみて、なぜリーディングアーティファクトと呼ばれるのかを感じます<br>まず第一に、電子インクは目を保護し、携帯電話ほど重くなく、干渉を減らす単一の機能を備えています </p>
<p>そして、携帯電話の読み取りには多くの問題がありました<br>許容できない画面のデッドピクセル、PDF変換後の不十分なフォーマット、カスタムフォント、オンラインチャット、ゲームのプレイなど。 </p>
<p>ある日、私は無意識のうちに上記の問題を無視し、コンテンツの取得に完全に集中していることに気づきました。 </p>
<p>私はこの東洞の経験がとても素晴らしいとため息をつくことができるだけです-それが不快であることにさえ気づいていませんでした、それは本当に超価値です </p>
<h2 id="プッシュの使用方法："><a href="#プッシュの使用方法：" class="headerlink" title="プッシュの使用方法："></a>プッシュの使用方法：</h2><p>チュートリアルを1つ検索し、ステップバイステップで実行し、自分で赤を使用します </p>
<h3 id="1-予約"><a href="#1-予約" class="headerlink" title="1.予約"></a>1.予約</h3><p>TXT RTFおよびその他の形式、yourname @ free.kindle.comに電子メールで送信(amazonが変換に役立ちます)<br>PDFは直接表示できますが、余白があるため、水平画面で問題ありません<br>転送する必要がある場合は、calibreを使用して<a href="mailto:yourname@kindle.com">yourname@kindle.com</a>宛てのmobiメールに変換できます(この効果はあまり良くありませんが、他のいくつかの変換ソフトウェアを試して比較しましたが、どれも良くありません) </p>
<h3 id="2-ニュース、ブログrss"><a href="#2-ニュース、ブログrss" class="headerlink" title="2.ニュース、ブログrss"></a>2.ニュース、ブログrss</h3><ul>
<li>Kindle4rssはすべてセットアップされており、有料ユーザーのみが自動的にプッシュして不正行為を行うことができることがわかりました。 ！ ！ </li>
<li>Aikandouはサーバーをアップグレードしているようです、登録を停止します </li>
<li>犬の耳の名前は好きではありません。これを試しただけです。満足したくありません。 </li>
</ul>
<h2 id="ブラシシステム："><a href="#ブラシシステム：" class="headerlink" title="ブラシシステム："></a>ブラシシステム：</h2><p>Kindleはマルチビューシステムに変えることができます<br>私がとても気に入っている機能は2つありますが、Kindleネイティブシステムにはありません。 </p>
<ul>
<li>マルチプラットフォーム同期 </li>
<li>時間統計の読み取り </li>
</ul>
<p>入手すると、kindle pwシステムはpdfをサポートするようにアップグレードされており、レンガになって修理される可能性があるので、心配する必要はありません。 </p>
]]></content>
      <tags>
        <tag>Kindle</tag>
      </tags>
  </entry>
  <entry>
    <title>インペリアルシティツアー</title>
    <url>/ja/Travel-to-Beijing/</url>
    <content><![CDATA[<p>帝都といえば、この絵が頭に浮かびました。黄色い砂が空でいっぱいで、通りすがりの人は厚いマスクをかぶっています。帝都は雨が降ると海とボートを見ることができます。 </p>
<p>車から降りたくなくて、空がとても弱くて紺碧の青であることに気づきました。「私は空の青です」と宣言するために、車にいくつかの単語を入力するのが待ちきれません。<br>ツアーガイドが手配したホテルに到着した後、私の小さな友人と私はショックを受けました。タイル張りの家とタイル張りの家が並んでいます。 </p>
<a id="more"></a>

<h2 id="初日"><a href="#初日" class="headerlink" title="初日"></a>初日</h2><p>以前、私は床にプラスチックのバッグがあり、YingnanTownの屋台の後ろのストリートシーンのように汚れていて散らかっていました。<br>その後、馬監督の指導の下、帝都での生活はとても難しいと感じました。<br>その間、馬のガイドは、まるでその日の旅をすぐに終わらせたいかのように、止まることなく道路を走っていました。<br>リンボのマイクロステップは小さく、大きな動きはないようですが、彼はすぐに滑り落ちて私たちを捨ててしまいます。<br>半日以内に、私たちは天南門広場、国立博物館、軍事博物館、そしてウォーターキューブ/鳥の巣に急いで行きました </p>
<p>KFCは正午にスモールフォーについて言及しました。verycdで驚くべき0.9ポイントを獲得したのはスモール時代だと知っています。最低スコアは1ポイントのようです。0.9はどのようにして生まれたのですか？ 無意識のうちに<br>それから私はアクロバティックなパフォーマンスを見ることを余儀なくされました<br>夕方のテストの結果は満足のいくものでした。1年のハードワークの後、私はすぐに日焼けしました。 </p>
<p>幸いなことに、一緒に旅行しているカップルのチケットは明後日です。そうでなければ、翌日戻ることを保証することは困難です。<br>Xiabei Piao家の蟻の闘争と、至る所で促進された中国の夢を深く経験しました </p>
<p>夕方、至る所で金と呼ばれる通りにある大きなボウルハウスを食べました。馬の案内を聞いた友人が、帝都にいるのがいかに難しいかを口説きました。私はビジネスユニットにいたか、帝都に来たのかもしれません。<br>私は水を飲んでいて、くそー、あなたが世界で一人でいるようだと思っていました<br>しかし結局のところ、それは御馳走であり、あなたは同情的であるふりをしなければなりません。幸いなことに、笑いはありません<br>最後になりたくなかったので、カップルは顔を欲しがって急いでアカウントを決済し、ツアーガイドは喜んでそれを取り戻し、払い戻しをしました<br>私が出てきたとき、私はガンダルフが映画「ホビット」でビルボ・バギンズに言ったことを真似ました。 </p>
<blockquote>
<p>世界はあなたの地図や本にはありません……あなたが戻ってきたとき、あなたは同じではありません。<br>世界はあなたの地図やメモにはありません…あなたが戻ってきたとき、あなたは他の人とは異なります。 </p>
</blockquote>
<p>PS1：高校1年生で食べられて閉店した大きなボウルハウス？<br>PS2：王府景、同時に@新华视点：30日午後20時42分ごろ、北京王府景の新東安市場の門の前で男が少女をナイフで刺した。 </p>
<h2 id="次の日"><a href="#次の日" class="headerlink" title="次の日"></a>次の日</h2><p>私は禁断の都市に行って調べました。理由はわかりませんが、すべてのレンガとすべてのタイルが厚い確執的な無知を示しています。<br>ツアーガイドは、他に誰もいないバラバラにいます。風水、陰、陽ですが、2人の通行人が無料の観客になっています。 </p>
<p>PS：そのうちの1つはまだHuaweiのコードファーマーです </p>
<p>その間、私は長い髪の外国人の女の子が頭を下げて、静かに手すりに寄りかかって、彼女の顔に素敵なそばかすを持っているのを見ました。 </p>
<p>PS：白人が肌を小麦に日焼けさせているのも不思議ではありません<br>PS：こういう人を見た後、世界は落ち着いた気がします。全部で何度か見ました。 この衝動的で騒々しい社会では、人々に平和をもたらし、異物を使わずにいつこの状態に到達できるかわかりません。 </p>
<p>夜、馬のガイドは五つ星のホテルに変わりました、いや、第五環状道路の外にあるエクスプレスホテル<br>体を目的地に運ぶ方法について意見の相違がありました<br>長い地下鉄の旅をした後、私たちの馬のガイドを含めて、何人かの若者が携帯電話/本を読んでいて、毎分それらを充電しているのを見つけました。 </p>
<p>これはロシア国民の読書量を思い出させ、偉大な王朝はついに良くなっています<br>しかし、これは今後も続くのでしょうか？ 男性と女性の涙 </p>
<p>PS：私はしばしば女の子とデートせず、通知になります </p>
<p>私は怠慢の精神を持っていて、銃を持って横になりたくありません、そして状況は悪化しています<br>初日は時々馬ガイドを吐き出しましたが、今は弱すぎて吐き出せません<br>人々は解体するのが難しいので、ここでは省略します </p>
<h2 id="三日目"><a href="#三日目" class="headerlink" title="三日目"></a>三日目</h2><p>もともと北京大学などの大学や中関村に行きたかった<br>でも最近、新入生が学校に通い始めているそうですが、入学できないかもしれません<br>先日、タイジのちょっとした思いと相まって </p>
<p>時間を見て、何千マイルも一人で乗ってください。<br>南駅で中国国家の西青海チベット高原からボトル入り飲料水を飲むと、すぐに前向きなエネルギーに満ちていました。<br>車の中で本をしばらく読んだ後、降りてアイスクリームを買いました<br>スーパープラスお楽しみください </p>
<p>もちろん、ツーソンの絵は壊れています<br>ちょうどその時、私はテキストメッセージを受け取り、夕食を招待するように頼まれました<br>目がくらむ、疲れているかどうかわかりませんか？<br>帝都から帰ってきたばかりなので、疲れて半死になって、食べに誘って、ボーイフレンドの話をしましょう<br>その後、過去2日間に見た意志力が発揮され、緑の運動を思い出し、深呼吸をして、理由を尋ね、食べなかったと答えました。<br>また、当時のテンアクションに拒絶され、その後はあらゆる不正行為や犬の血の事件に見舞われたと思います。振り返ってみると、地元の人から卑劣な人まで、下品なロマンス小説のようです。<br>去年時計を買ったのですが、決済しなかったら間違えました。 </p>
<p>家に帰ってから1時間以上インターネットに接続したところ、水がないことがわかりました。<br>突然、改訂されたマズローのニーズレベルが正確すぎます </p>
<p>私が水道代を払うために走ったとき、販売員は驚いたように見え、請求書を借りていませんでした。<br>疑わしいことに、地主は正門を閉めたというテキストメッセージを送信しました </p>
<p>くそー、あなたの妹！ ！ ！ 彼らはまだ赤い電車に座っていると思います </p>
<p>後で、家主の妻から、老朽化し​​たラインが原因で彼らの馬車が発火したと聞いた後、警察から記録を記録するように呼ばれました。その時でした。 </p>
<p>だから、あなたはあまり厳しく話すことはできません、そしてあなたは男になることはできません。サンニアン </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>Beijing</tag>
      </tags>
  </entry>
  <entry>
    <title>温かい鍼治療</title>
    <url>/ja/Warm-Acupuncture-Therapy/</url>
    <content><![CDATA[<p>今日、Zha Chengshanは正しい位置を見つけたようですが、それほど苦痛ではありません。1インチ後には酸っぱくなります。<br>針先に愛朱を乗せて発火 </p>
<p>最初は大丈夫です火星はゆっくりと燃えます<br>単一の火花が草原の火を起こす可能性があり、煙はどんどん大きくなっています、それはおそらく怖いです<br>不快感がどんどん強くなっているので、私は強い幻覚を持っています：鍼治療のポイントが焦げています。 </p>
<a id="more"></a>

<p>急いで水を注ぐと、きしむ音が聞こえ、鉄を打つようにたくさんの煙が出ました。<br>発火したくなかったアイ・イランは頑固で、一杯の水を飲まなければなりませんでした<br>やっと未燃の煙のように消えたけど<br>しかし、愛朱と針は一緒に死にかけているようです、彼らは腫れから切り離せません<br>私はあえて大きな動きをしません、結局のところ、もう一方の端は私の肉に詰まっていますo(╯□╰)o </p>
<p>モクサスティックが山積みになっていたので、強く引き抜かなければならず、101がくっついているような気がしてとても痛かったです。 </p>
<p>汗だくですが、顔を洗うと子牛がかなり涼しくなります </p>
<p>分析を思い出してください：<br>ヒットランヒットを使うべきだった<br>横摩擦のない補助防御と相まって、ダメージ値が大幅に増加します<br>暑すぎるのは幻想かもしれませんが、針先の動きが神経線維を引っ張るのが理由です </p>
<p>もちろん、最も可能性の高いことは私が神経質であるということです </p>
]]></content>
      <tags>
        <tag>Acupuncture</tag>
      </tags>
  </entry>
  <entry>
    <title>Githubページをブログとして使用する</title>
    <url>/ja/use-github-pages-as-a-blog/</url>
    <content><![CDATA[<p>最後に、数ヶ月前に自分のブログを持ちたかったので、この場所を見つけました </p>
<p>DoubanやSinaなどの公開ブログはたくさんありますが、どれも私のお気に入りではありません </p>
<p>誰も私を知らず、私の<strong>経験</strong>または<strong>アイデア</strong>の一部を記録できる場所を見つけたいだけです </p>
<a id="more"></a>

<p>Qzoneは私が長い間使ってきたブログですが、その中の人々はすべて私の友人や同僚です。 私は<strong>精神科医</strong>と見なされたくありません。 ^ \ _ ^ </p>
<p><a href="http://jekyllrb.com/">jekyllrb</a>の方法に従って、段階的に成功したようです。ページはオンラインです。 私のウェブサイトに「** Hexo **」があります。 </p>
<p>(現在、jekyllの代わりに** Hexo **を使用しています) </p>
<p>実際、1年ほど前に、クラスメートから<a href="http://github.com/">github</a>をブログとして使用できると聞いたことがあります。 しかし、このタスクは日々遅れていました。 設定はたくさんあるはずだと思います。 <strong>複雑なもの</strong>が嫌いなだけでなく、<strong>プロクラスティネーター</strong>としても嫌いです。 </p>
<hr>
<p><a href="http://www.englishiskillingme.com/">英語が私を夢中にさせている</a>、私にはこれを行うのに十分な能力がありません </p>
]]></content>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Jiaduobaoの2本のボトルによって引き起こされた殺人</title>
    <url>/ja/Two-bottles-of-blood-caused-by-Jiaduobao/</url>
    <content><![CDATA[<p>2つの小さなパートナー、良好な関係<br>1つは警察学校からのもので、もう1つは中国医学からのものです </p>
<p>中国の医師の友人がゲストとしてやって来て、彼が去ったときに喧嘩し、彼が飲んだばかりのジアドゥオバオのボトルを買うために5元の罰金を科されました。<br>市場価格より43％近く高いため、中国の医療パートナーに心理的な不均衡を引き起こした可能性があります。彼は実際にリスクを冒して、ジアドゥオバオをもう1本飲もうとしました。<br>発見された後、自然事件の性質はエスカレートし、警察学校の友人たちは精神的に侮辱されたと感じました<br>そして、TCMの友達は頑固に抵抗し、同時に無意識のうちに挑発的なスキルをもたらしました<br>結局、彼はRMBで事件を解決しようとし、その後殴られました。 </p>
<a id="more"></a>

<p>中国医学を学んだ小さな友達は私のようだと思いました。子供の頃から手を使ったことがなく、人が手を使うのも見たことがありませんでした。その場での経験が少ないので、受動的に殴られ、回避せず、肉体的に惹かれるほど愚かでした。 dps<br>後で私は私の描画ツーソンが壊れていることを知りました </p>
<p>私が反応して引っ張ることを考えたとき、戦いは終わった<br>事件はとても突然で、私はまったく反応しませんでした、そして私の仲間の中国の開業医は打たれました<br>最後の一撃はフライングキック+バックヘッドナイフです<br>アーケードで2倍のコンボを作る方法がわかりません<br>たぶん、私の仲間の警察アカデミーが本当にそうするだろうとは思っていなかったでしょう。私はショックを受けました！ </p>
<p>その後、警察アカデミーの友人がドアをふさいで、漢方薬のパートナーが去ることを阻止しました。当時は理解できませんでしたが、今では覚えています。<br>武道の小説では、手のひらを受け取った後は問題なく、ドアから数歩出た後、血を吐き、地面に倒れたように見えることがよくあります。<br>もちろん、コンセンサスの後、TCMの友人はまだ去りました </p>
<p>安心して、どのように怪我をしたか、蹴られたときに内傷を負ったかどうか、胃に傷があったかどうかを尋ねます。<br>無傷になりたくないし、彼のGLでデートシーンで活躍してきました </p>
<p>-\ _- ||| </p>
<p>ここの警察アカデミーの小さな友人は、手の柔らかい組織が傷ついているようで、彼が動くとそれが痛いと言いました。 </p>
<p>-\ _- ||| </p>
<p>その前に伝統的な漢方薬を持っていた友達に、内面の力を練習していなければ、鍼灸の方法を知っていると聞いた。<br>結果はまだ誓われた </p>
<p>彼のGL姓Zhangを考えると、次のエピソードがその瞬間に起こった可能性があります。 </p>
<blockquote>
<p>沈黙のこの瞬間、中国医学の小さな友人は突然教科書のいくつかの言葉を思い出しました：「彼は彼に強く、そよ風が山を吹きます。彼は水平で、月は川に輝いています。」彼はそこにいました。 研究室でこれらの数冊の文章を読んだとき、その理由はまだわかりませんでした。この瞬間、警察学校の生徒たちの専制政治と凶悪さで、自分は決して敵ではないことを突然思い出しました。教科書の要点によれば、敵がどんなに強くても、 どんなに凶暴でも、山にそよ風が吹き、川に明るい月が反射していると見なすことができます。私には当てはまりますが、少しでも傷つくことはありません。 しかし、どうすれば自分の体を傷つけないのでしょうか？ 以下の文章は、「彼は残酷で、自分自身を憎んでおり、私は本当に怒っている」と述べています。 </p>
</blockquote>
<p>T MDはこれが私を演じています </p>
<p>これらの2人のテロリストは、私たちの半径から5フィート以内に移動することがよくあります。<br>万が一に備えて、今週末はできるだけチュムキウを完成させることにしました。 </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>ゲーム</title>
    <url>/ja/Games/</url>
    <content><![CDATA[<h1 id="それらの年にプレイされたゲーム"><a href="#それらの年にプレイされたゲーム" class="headerlink" title="それらの年にプレイされたゲーム"></a>それらの年にプレイされたゲーム</h1><h2 id="独占"><a href="#独占" class="headerlink" title="独占"></a>独占</h2><p>株式市場は彼らの合計に行きます </p>
<p>その結果、突然の事件、破産。 。 。 </p>
<p>次回保険を購入する </p>
<a id="more"></a>

<h2 id="放射防御"><a href="#放射防御" class="headerlink" title="放射防御"></a>放射防御</h2><p>PCゲームから離れたくなかった後、私はモバイルゲームに夢中になりました<br>植物vs.ゾンビ2レベルを高速でクリアした後でも、意味はまだ十分ではありません<br>私は他の塔の防御を見たかったのですが、 </p>
<p>放射防御、中国人は眩惑防御と呼ばれる<br>名前が示すように、絵はとても美しいです、私はすぐにそれが好きです<br>しかし、最も難しいゲームになりたくない </p>
<p>遊んだ後も、早い段階で悲惨な状況を感じました。技術をアップグレードすれば、後の段階もスムーズになります。<br>逆に、初期段階が比較的スムーズな場合、東壁は必然的に後で破壊されます。 </p>
<p>今日、第10レベル以降、私はいつもそのダイナミックな音楽を頭に入れてきました。 </p>
<p>その後、ZhihuでそのTOPの答えを見ました。 </p>
<p>しばらくして、落ち着いて、考えて、他の人と比較して、自分の道を進んでください </p>
<h2 id="安野2070深海"><a href="#安野2070深海" class="headerlink" title="安野2070深海"></a>安野2070深海</h2><p>このシミュレーションは高すぎ、実際のシミュレーションのようにゲームのペースは非常に遅いです<br>1か月間プレイしても大丈夫です。ウォークラフトのような戦闘では、10分、さらには数分は不可能です。 </p>
<h3 id="1-人々に注意を払う"><a href="#1-人々に注意を払う" class="headerlink" title="1.人々に注意を払う"></a>1.人々に注意を払う</h3><p>過去のゲームでは、人々は獣ではありませんでしたが、少なくとも大砲の餌であり、牛や馬に引き寄せられました。<br>そして、中の人々はルネッサンスを通り抜け、自由への道に乗り出したようです<br>支配者(私)は軍人になり、人々を叔父として扱いたいと思っています<br>さまざまなニーズを満たすために、さまざまな施設、病院、さまざまな食品、公安局、コンサートホールなどを完成させます<br>人々が喜んで来て落ち着くように、税金 </p>
<h3 id="二国の関係"><a href="#二国の関係" class="headerlink" title="二国の関係"></a>二国の関係</h3><p>Win-Winの状況を実現するためにさまざまな協力があります<br>もちろんキラーもあります：スタッフのお金 </p>
<h3 id="3つのリソース"><a href="#3つのリソース" class="headerlink" title="3つのリソース"></a>3つのリソース</h3><p>島はほんの少ししかない<br>核爆弾によって残された不毛の土地のいくつか、そしていくつかは過度の産業化によって残された廃墟であり、しばしば酸性の雨を伴う<br>いくつかの土壌はより穏やかでより大きく、適切な時間と場所を占めており、将来の技術の兆候を示すことさえあります<br>グローバル市場、あなたは土地をつかんで売ることができます<br>他の国にも投資できますが、実際にはリスク管理があります </p>
<h3 id="4つの操作"><a href="#4つの操作" class="headerlink" title="4つの操作"></a>4つの操作</h3><p>キーボード、マウス、さらにはタッチパッドも必要ありません。WarcraftAPMの時代は永遠に過ぎ去りました。<br>これらの作戦を逃したかどうかはわかりません。海を越えた貿易を除いて、他のすべての事柄について私に尋ねなければなりません。<br>島の間で資源のバランスを取る必要があります<br>私はそれをまったく制御できません。<br>私はたまたま「アウト・オブ・コントロール」を見ていました。 </p>
<h3 id="5つの戦争"><a href="#5つの戦争" class="headerlink" title="5つの戦争"></a>5つの戦争</h3><p>Chichengをスキップして、倉庫と港を直接攻撃します。これは、タンクの底からの引き込みを意味し、半分の労力で何もしません。<br>倉庫が破裂した後、周囲の建物は水源のない水、根のない木になり、倒壊しました。 </p>
<p>外交面では、笑顔の人にぶつからずに手を伸ばし、いたるところにお金を詰め込み、近隣諸国の摩擦を見て、楽しく遊んで、静かに成長しました。 </p>
<p>中学生の時、先生にブリッツについて聞いたのを覚えています。なぜヨーロッパの国々は戦わずに降伏したのですか？<br>先生は微笑んで、何百もの戦車が押し倒され、戦う方法<br>当時、私が知っていたのは、帝国が動くと、100の連隊が戦うということだけでした。人口に対する外国戦争の苦しみはわかりません。<br>そして当時の哲学は、兵士は殺されても侮辱されないというものでした。彼らは敵を半歩も許さないよりも、レンガとタイルだけが残るまで戦うことを望んでいました。<br>しかも、国境まで車で走っただけで発砲しなかったのに、なぜひざまずいて舐めたのか(当時はそんなことはなかった)<br>当時、私はまだ戦わずに街にやってきた兵士たちの様子を理解することすらできませんでした。 </p>
<p>私が完全外交で潜水艦を配ったとき、ほぼ同時に倉庫に核爆弾が1つあり、戦争を宣言して相手を直接爆発させたとき、少し理解できたようです。 </p>
<h2 id="暗殺者の信条4"><a href="#暗殺者の信条4" class="headerlink" title="暗殺者の信条4"></a>暗殺者の信条4</h2><p>エツィオの同胞団の啓示の後、一生の軍事奉仕の後、神はいないと思いました </p>
<p>壁を登り、あらゆる種類のものを暗殺する時が来ました。驚きはありません。 </p>
<p>暗殺者の4をverycdで見た、次回のため息をついた、そして黒い旗の下で見た </p>
<p>私は以前にドキュメンタリー、チャイナレボリューションを見たことがあります。赤旗の下で、言うまでもなく、自給自足なので、4の名前はとても威圧的です。 </p>
<p>これは、偉大な航海時代、竜巻、波、嵐の中の海の戦いを再現しています </p>
<p>とても楽しい </p>
<h2 id="セインツロウ4"><a href="#セインツロウ4" class="headerlink" title="セインツロウ4"></a>セインツロウ4</h2><p>これは私を腫れさせますか？ </p>
<p>いつものように面白い、どこでも黒いユーモア </p>
<p>次のことは本当に唖然とします。 </p>
<p>エイリアン！ ！ ！ </p>
<p>それから…そして… </p>
<p>超大国？ ！ </p>
<p>Prototypeをプレイしたことがある場合は、今回はよく知っている必要があります<br>マトリックスを見たことがあれば、あなたは理解するでしょう </p>
<p>その行動を見る<br>ParkourはAlexと同じくらい良いです<br>ジャンプと蓄積力はネオと同じです<br>スーパーマンのように空から来る </p>
<p>コード(๑ ′°︿°๑)に移動して公開しないでください。そうしないと、死を装って強制的に終了するのが簡単になります。 </p>
<p>本当に自由な街 </p>
<p>唯一の欠点は、マップが基本的に3世代と同じであり、スーパーマンにとっては少し小さいことです。 </p>
]]></content>
      <tags>
        <tag>Games</tag>
      </tags>
  </entry>
  <entry>
    <title>なぜヘキソ</title>
    <url>/ja/why-hexo/</url>
    <content><![CDATA[<p>Jekyllを最初に作成したときに使用しましたが、Octopressは試したことはありません。<br>Jekyllのフレームワーク設計は、コード+生成されたWebページの2つの部分に分かれています。<br>githubにアップロードすると、コード部分が押し上げられ、hexoはローカルで生成されたWebページであり、速度に一定の利点があるはずです。<br>デフォルトのテンプレートもきれいだと思ったので、昨日hexoに変更しました </p>
<a id="more"></a>

<p>hexoの最大の特徴は、あらゆる種類の面倒なコマンドを隠すことだと思います<br>ジキルの言葉では、建設から完成まで少なくとも12のアイテム<br>そして、新しい記事を書くには、少なくとも </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jekyll new post xxx</span><br><span class="line">vim _post/<span class="variable">$time</span>-xxx</span><br><span class="line">git commit -a -m xxx</span><br><span class="line">git push remote master</span><br></pre></td></tr></table></figure>

<p>たぶん多くの人の目には、それはすでに非常に単純です </p>
<p>しかし、一部の人々は<strong>包囲ライオン</strong>ではなく、考えずにブログを始めたいだけであり、焦点は<strong>執筆</strong>にあることを知っておいてください。<br>そして書く前に、あなたはパラパラによって非常に多くのコマンドを作らなければなりません、もしそれを忘れたり、パラメータを逃したりしたら、あなたは-hをしなければなりません、あなたの英語が上手でないなら、あなたはグーグルしなければなりません 書いているとき、ポモドーロがいくつあるかわかりません。<br>そして、jekyllには少なくともいくつかのgitの概念があります。中国のブログを書く場合は、rubyを変更する必要があります(utf-8)<br>毎日、毎日、毎日！ </p>
<p>そして、hexoは非常に単純なので、プロセス全体で8文字しか知る必要がありません。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n <span class="comment"># new</span></span><br><span class="line">hexo g <span class="comment"># generate</span></span><br><span class="line">hexo s <span class="comment"># server</span></span><br><span class="line">hexo d <span class="comment"># deploy</span></span><br></pre></td></tr></table></figure>

<p>私や他の非専門家の包囲ライオンにとって、それを使って涙を流すのはとても新鮮です。 </p>
]]></content>
      <tags>
        <tag>Blog</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>私の最初のMacbookPro</title>
    <url>/ja/My-First-Macbook-Pro/</url>
    <content><![CDATA[<p>rMBP ME865 8g 256g<br>香港銀行のタオバオが3日間営業を開始 </p>
<a id="more"></a>

<h2 id="注意を開始します"><a href="#注意を開始します" class="headerlink" title="注意を開始します"></a>注意を開始します</h2><h3 id="ボックス-シャーシ-システムIDが同じかどうか"><a href="#ボックス-シャーシ-システムIDが同じかどうか" class="headerlink" title="ボックス/シャーシ/システムIDが同じかどうか"></a>ボックス/シャーシ/システムIDが同じかどうか</h3><p>3つのコードが1つになっているかどうかにかかわらず、違いを解凍する必要があります </p>
<h3 id="検出パワーサイクル時間"><a href="#検出パワーサイクル時間" class="headerlink" title="検出パワーサイクル時間"></a>検出パワーサイクル時間</h3><p>一般的に5倍以内で、少ないほど良いです(私のものは2倍です) </p>
<h3 id="公式サイトで保証日を確認してください"><a href="#公式サイトで保証日を確認してください" class="headerlink" title="公式サイトで保証日を確認してください"></a>公式サイトで保証日を確認してください</h3><p><a href="https://selfsolve.apple.com/agreementWarrantyDynamic.do">こちら</a>(販売者の購入日を確認できます) </p>
<h3 id="最適化は絶対に使用しないでください"><a href="#最適化は絶対に使用しないでください" class="headerlink" title="最適化は絶対に使用しないでください"></a>最適化は絶対に使用しないでください</h3><p>特に、Windowsに変わったばかりで、きれいな** OCD **をもたらした子供用の靴<br>Macをクリーンアップする必要がないことは知っていましたが、これは新しいものですが、最高のディスククリーンアップであるCleanMyMacを見ると、それでも安っぽく感じます。 </p>
<p>しばらく掃除をしたところ、温度が90を超えていることがわかり、マックの放熱問題を確認しました。<br>その後、CPUを急ぐプロセスがあることが発見されました<br>次に、Dockの多くのアイコンが透明になっていることがわかりました(単語があります。クリックしても再起動しても解決しません)。<br>1つのGoogle、多くの人が実際にシステムを再インストールしました </p>
<p>そして、犯人は実際にはCleanMyMacです<br>血の教訓は、あなたが死ななければ、あなたは死なないということです！ ！ ！ **** </p>
<p>アイコンの透明度のソリューション： </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rm ~/Library/Application\ Support/Dock/*.db; killall Dock</span><br></pre></td></tr></table></figure>

<p>ドックをクリックして復元します。機能しない場合は、最初に移動してからドラッグします。 </p>
]]></content>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>人生はそれほど退屈であってはなりません</title>
    <url>/ja/Life-Should-not-be-so-Boring/</url>
    <content><![CDATA[<p>同級生、人生はとてもつまらないと思いますか<br>毎日ゲームで麻酔をかけますか？ Weiboを何度もブラッシングしますか？<br>それとも、私の神の馬のためのハン/シスターの紙がないのは奇妙ですか？ </p>
<p>実際、世界はまだ非常に強力です。私を信じていない場合は、以下を参照してください:(継続的に照合しています…後でリンクを投稿してください) </p>
<a id="more"></a>

<h3 id="読んだ"><a href="#読んだ" class="headerlink" title="読んだ"></a>読んだ</h3><p>これを説明する必要はありません、それはただ： </p>
<ul>
<li>醜い人は本しかf \ * \ * kできません。 </li>
<li>あなたが醜いならもっと読む </li>
</ul>
<h3 id="シュアンピン"><a href="#シュアンピン" class="headerlink" title="シュアンピン"></a>シュアンピン</h3><p>あなたはみんな弱いですか？ </p>
<h2 id="考え方"><a href="#考え方" class="headerlink" title="考え方"></a>考え方</h2><h3 id="オッカムのかみそり"><a href="#オッカムのかみそり" class="headerlink" title="オッカムのかみそり"></a>オッカムのかみそり</h3><p><a href="http://book.douban.com/subject/1467022/">神はサイコロを転がしますか？</a> </p>
<p>シンプルさは複雑さよりも優れています<br>シンプルは美しい </p>
<h3 id="批判的思考"><a href="#批判的思考" class="headerlink" title="批判的思考"></a>批判的思考</h3><h3 id="独立"><a href="#独立" class="headerlink" title="独立"></a>独立</h3><ul>
<li>経済的 </li>
<li>スピーチ </li>
<li>思想 </li>
</ul>
<p>欠かせない<br>私の天の環境を見てください、わかりました… </p>
<h3 id="貧しい馬場豊かな馬場"><a href="#貧しい馬場豊かな馬場" class="headerlink" title="貧しい馬場豊かな馬場"></a><a href="http://book.douban.com/subject/1033778/">貧しい馬場豊かな馬場</a></h3><p>キャッシュフロー/ ESBI4象限/所得計算書 </p>
<p>Douban BookReviewに衝撃を受けた文章 </p>
<blockquote>
<p>初期にこの本を読んだ人は今では少なくとも百万長者です </p>
</blockquote>
<h3 id="Wuhezhizhong"><a href="#Wuhezhizhong" class="headerlink" title="Wuhezhizhong"></a><a href="http://book.douban.com/subject/1012611/">Wuhezhizhong</a></h3><p>中国の学生が一夜にしてこんなに夢中になった理由を理解していないハーバードの教授がいたようだったのを覚えています<br>彼はこの本を読んだことがないに違いない </p>
<h3 id="架空のゲーム"><a href="#架空のゲーム" class="headerlink" title="架空のゲーム"></a>架空のゲーム</h3><p>自分の人生には直線的な人生が1つしかない<br>何もすることがないときは、周りの人を観察し、周りの人の中から役割を選んで持ち込んでください。<br>まったく異なる生活をシミュレートする </p>
<h3 id="プラト洞窟"><a href="#プラト洞窟" class="headerlink" title="プラト洞窟"></a>プラト洞窟</h3><p>マトリックス？ </p>
<h3 id="制御不能-情報の簡単な歴史-利己的な遺伝子"><a href="#制御不能-情報の簡単な歴史-利己的な遺伝子" class="headerlink" title="制御不能/情報の簡単な歴史/利己的な遺伝子"></a>制御不能/情報の簡単な歴史/利己的な遺伝子</h3><p>この量の情報は多すぎて、3つのビューが破壊され、自分で味わう必要があります<br>自由意志<br>ジーンミーム<br>実は私たちはマシンシルバーに他なりません </p>
<h2 id="物理的な手術"><a href="#物理的な手術" class="headerlink" title="物理的な手術"></a>物理的な手術</h2><h3 id="ジンヨンの武道のケンブリッジ簡潔な歴史"><a href="#ジンヨンの武道のケンブリッジ簡潔な歴史" class="headerlink" title="ジンヨンの武道のケンブリッジ簡潔な歴史"></a><a href="http://book.douban.com/subject/24324704/">ジンヨンの武道のケンブリッジ簡潔な歴史</a></h3><p>trueもfalseの場合、falseはtrue<br>信じないでください、以下を参照してください </p>
<h3 id="太極拳"><a href="#太極拳" class="headerlink" title="太極拳"></a>太極拳</h3><p>太極拳ラジオ体操ではありません<br>チェンスタイルのタイチ、最初に実際の戦闘はさておき、健康維持については何も言うことはありません<br>ヨガは海外で最初に導入されたと言われていますが、その後の研究で太極拳の方がフィットネス効果が高いことがわかっています〜 </p>
<p>今では、より多くの感覚がガイド技術に属し、外部の動きは内部の静けさに達し、小さな周天は大きな週を開くことによって動かされます。 </p>
<h3 id="ヨガ"><a href="#ヨガ" class="headerlink" title="ヨガ"></a>ヨガ</h3><p>これは毎日のテレビでの通常の行動だけではありません </p>
<p>コアは3つのチャクラと7つのチャクラ(中国医学の子午線のように)です<br>Sahasrara Chakra、Brow Chakra、Throat Chakra、Heart Chakra、Manipura Chakra、Sea Chakra、Brahma Chakra </p>
<p>開放の効果はシャオ・チョウティアンを開放すること以上のようです </p>
<h3 id="レンデュエルマイ"><a href="#レンデュエルマイ" class="headerlink" title="レンデュエルマイ"></a>レンデュエルマイ</h3><p>幼い頃に武道の小説を読んでいたとき、ある日、レンとドゥの2本の線を誤って開いて急上昇したことをいつも想像していました。<br><a href="http://news.sina.com.cn/s/2012-05-23/160624465410.shtml">ガンス保健省：41人の医療スタッフが9日間でレンとドゥの2番目のパルスを乗り越えることを学ぶ</a><br>これは実際には真実です、それは何も悪いことではありません！ ！ ！ </p>
<p>実際、それは信頼性の高い<a href="http://book.douban.com/subject/4665276/">Li Shaobo True Qi操作方法</a>から来ています。 </p>
<h3 id="咏春"><a href="#咏春" class="headerlink" title="咏春"></a>咏春</h3><p>Ip Man 1 2前編究極の戦い：グランドマスターその後、誰もがこの武道について知っていました<br>武道のサブパフォーマンス/実際の戦闘を知るために<br>私が最も驚いたのは、ウィング・チュンが本当にテレビのように遊んだことでした </p>
<p>木製のペグが運転されたとき、破壊的なバンカーがありました。 </p>
<p>少し考えが上がった </p>
<h2 id="精神力"><a href="#精神力" class="headerlink" title="精神力"></a>精神力</h2><h3 id="催眠術"><a href="#催眠術" class="headerlink" title="催眠術"></a>催眠術</h3><p>学んだことを他の人にやらせてもらえるわけではありません </p>
<h3 id="清明夢-夢の空間"><a href="#清明夢-夢の空間" class="headerlink" title="清明夢(夢の空間)"></a>清明夢(夢の空間)</h3><p>大規模な3Dゲームのように、最高レベルはドリームメーカーです<br>核となるアイデアは次のとおりです。<strong>夢の中で夢を見ていることに気づきました</strong> </p>
<p>夢をコントロールすれば、何でも何でもできると言われています。<br><a href="http://tieba.baidu.com/f?kw=%C7%E5%C3%F7%C3%CE">Baidu Qingmingmeng Bar</a> </p>
<h3 id="ダヴィンチ睡眠-多相睡眠"><a href="#ダヴィンチ睡眠-多相睡眠" class="headerlink" title="ダヴィンチ睡眠(多相睡眠)"></a>ダヴィンチ睡眠(多相睡眠)</h3><p>伝説(伝説に注意)ダヴィンチ、アインシュタイン、その他の天才は1つの睡眠サイクル(1.5時間)しか使用しないため、1年で一般の人々よりも100日長く生きます…<br>試してみて、また普通の人だと確認しました…T.T </p>
<h3 id="ポモドーロテクニック-現在の力"><a href="#ポモドーロテクニック-現在の力" class="headerlink" title="ポモドーロテクニック/現在の力"></a>ポモドーロテクニック/現在の力</h3><p>私が食べるとき、私は本当に食べていますか？<br>私が歩くとき、私は本当に歩いていますか？<br>私は本当に私の周りの音を聞きますか？ 私は本当にすべてを見ましたか？<br>勉強するとき、10分でも本当に集中できますか </p>
<p>「今」に本当に注意を払うとき、これは<strong>瞑想</strong>の理由でもあります </p>
<h3 id="リュビシェフ-内部時間観測"><a href="#リュビシェフ-内部時間観測" class="headerlink" title="リュビシェフ/内部時間観測"></a>リュビシェフ/内部時間観測</h3><p>私たちのすべての活動、考え、願い、夢は、キャリアとして時間を使わなければなりません<br>死者は夫のようです<br>時間と友達になる方法 </p>
<h2 id="英語"><a href="#英語" class="headerlink" title="英語"></a>英語</h2><h3 id="17日でGREワードを取得"><a href="#17日でGREワードを取得" class="headerlink" title="17日でGREワードを取得"></a>17日でGREワードを取得</h3><p>20年以上経ちましたが、まだ終わっていません、ギャップ… </p>
<h3 id="SSS読み取り方法"><a href="#SSS読み取り方法" class="headerlink" title="SSS読み取り方法"></a>SSS読み取り方法</h3><p>もともと、百万語以上読んだら、オリジナルの電子テキスト本を邪魔されずに読めると思っていました。<br>今では、2番目と3番目があることを知る前にほぼ100Wです… T.T </p>
<h3 id="英語を学ぶことはありません"><a href="#英語を学ぶことはありません" class="headerlink" title="英語を学ぶことはありません"></a>英語を学ぶことはありません</h3><p>注意！ これは<strong>反例</strong>であり、これまで誰も成功していません<br>この方法は使用しないでください </p>
<h3 id="英語の学習方法に関する最初の本を探す"><a href="#英語の学習方法に関する最初の本を探す" class="headerlink" title="英語の学習方法に関する最初の本を探す"></a><a href="http://book.douban.com/subject/11522125/">英語の学習方法に関する最初の本を探す</a></h3><p>Leaking Houseによるこの記事は空で生まれ、英国の新人を待っている私に衝撃を与えました </p>
<h3 id="透析"><a href="#透析" class="headerlink" title="透析"></a>透析</h3><p><a href="http://book.douban.com/subject/3748247/">英語を使う</a><br><a href="http://site.douban.com/195274/">お父さんの英語教室</a><br>一歩一歩、ピットから神々への夜明けを初めて見ました<br>現在、中高レベルのO(∩_∩)O〜に入っています。 </p>
<hr>
<p>もちろん、上記のすべてに関心がない場合は、魔法の武器を使用し、ティーンエイジャーがそれを受け取ります。 </p>
<h3 id="迅速な精神医学的方法"><a href="#迅速な精神医学的方法" class="headerlink" title="迅速な精神医学的方法"></a>迅速な精神医学的方法</h3><p><a href="http://book.douban.com/subject/4242172/">天才は左側、狂人は右側-精神病患者への最初の国内インタビュー</a><br><a href="http://www.guokr.com/post/378641/">そこに座って何も考えない限り、1日1回、一度に1時間、精神的に病気になる可能性があります。 なんてすごい！ </a><br>]最近は特異な機能が普及しており、信頼性も高いようです。 非精神的。 ハイジから話す](<a href="http://www.douban.com/group/topic/29064241/">http://www.douban.com/group/topic/29064241/</a>) </p>
<h2 id="やっと"><a href="#やっと" class="headerlink" title="やっと"></a>やっと</h2><p>私はそれらのほとんどをプレイし、ガイドを作成しました。興味があれば読むことができます。<br>真剣に、私たちのほとんどはちょうどこのように不注意に私たちの生活を歩きました </p>
]]></content>
      <tags>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>時間管理</title>
    <url>/ja/Time-Management/</url>
    <content><![CDATA[<p>私はソフトウェアを投げることを好みます。GTDは以下に限定されません。 </p>
<ul>
<li>しなければならない </li>
<li>Comfortable.do </li>
<li>wunderlist </li>
</ul>
<p>これら3つはすべて、マルチプラットフォーム同期をサポートする優れたツールです(mac ios win android)<br>それぞれに特徴があり、ランキングに関係なく、自分で試して好きなものを選ぶことができます </p>
<p>しかし、それを使用した後、計画はまだ完了していないことがわかります。それは元々「今日」のプロジェクトにありましたが、1週間後もまだ「今日」です。<br>私たち全員が先延ばしについて知っているように、怒りはそれを変えますが、それはしばしば最後の瞬間まで遅れます。上級喫煙者は、喫煙があなたの健康に有害であること、または食事の後に生きている神を打ち負かすことができることを知らないでください<br>したがって、最高のソフトウェアを使用しても、自分自身から発見しなければ、時間の浪費を止めることはできません。 </p>
<a id="more"></a>

<h2 id="「無効な時間」を防ぐ方法"><a href="#「無効な時間」を防ぐ方法" class="headerlink" title="「無効な時間」を防ぐ方法"></a>「無効な時間」を防ぐ方法</h2><p>まず、時間は同等であり、「無効」というものはないと言われています。 先日はあなたが期待していたこととは異なっていて、「別の日はどのように過ぎたのか」がわからないことを表明したいと思います) </p>
<p>「奇妙な人生」は、時間を伴う人を描写します-Liubischev、そして彼の時間統計の方法を紹介します。この人は固有の時間観察を持っていると言われています<br>このTEDビデオでは、PhilipSinbadが<a href="http://v.163.com/movie/2011/9/I/L/M7CEB9FAL_M7CEBDOIL.html">HealthyTimeConcept 
</a>、同じようなものだと思います </p>
<p>リュビシェフの時間の経過、分単位の正確さ、それは難しいことではないと思います(たとえば、私は毎日通常の画面を使用していましたが、何年も何も感じませんでした。Retinaを見て、また戻ってきました。 まさか、たぶん私はそれらの<strong>詳細</strong>)が10分30分に正確であることに気づいたかもしれません、それは常に可能です </p>
<p>したがって、1か月、少なくとも1週間を費やし、最初は何も計画しないでください。30分を単位として使用して、<strong>時間を費やした場所を正確に書き留め</strong>、生データを蓄積して、自分自身を確認してください。 どのように一日を過ごしましたか </p>
<p>Weiboをチェックしたり、インターネットを閲覧したりしたことがあるかもしれません。これらのデータがあれば、次にこのようなことをするときに気付くでしょう。 </p>
<h2 id="Googleカレンダーをうまく活用する方法"><a href="#Googleカレンダーをうまく活用する方法" class="headerlink" title="Googleカレンダーをうまく活用する方法"></a>Googleカレンダーをうまく活用する方法</h2><p>自分でGoogleカレンダーを使って2年になりますが、最初は色んな会社の面接の時期だったようですが、その後ゆっくりと他のことを録音し始めて、実は偉大なる神々の習慣に合った「奇妙な生活」を見ました。 ハッピー<br>..。<br>(疲れたので、戻ってきたらまた書きます) </p>
<p>それ以来録音を続けていましたが、数日前にこの本を見るまでは要約していませんでした。 </p>
<p>まだ読んでいませんが、たくさん得ています。メモは[こちら](<a href="http://leihao0.github.io/2013/12/16/%E6%8A%8A%E6%97%B6%E9%97%">http://leihao0.github.io/2013/12/16/%E6%8A%8A%E6%97%B6%E9%97%</a> B4％E7％95％99％E7％BB％99％E6％9C％80％E9％87％8D％E8％A6％81％E7％9A％84％E4％BA％8B /)<br>(この著者は、自分の興味を見つける方法から夢を実現する方法まで、すべての側面をカバーするマスターのようです。私はこの答えを読みたくありませんが、本を読むことをお勧めします。<em>*強くお勧めします</em> *) </p>
<p>本のカレンダーに色が追加されます。 </p>
<ul>
<li>黒：キャリアと業績 </li>
<li>赤：家族と社会のコミュニケーション </li>
<li>黄色：健康 </li>
<li>青：人生の意味と価値 </li>
</ul>
<p>その時、目が明るくなり、ある種の悟りを感じました。すぐにグーグルカレンダーに行って、数週間をマークしようとしました。<br><img src="https://lh3.googleusercontent.com/1fLFHiN0styGRBRNyOok0ySL0EbBIyCnXxZcfCW6UGL1Lmx6noMFn0ak7pvfGVKigDYUfyWHDcs=s640-h400-e365" alt=""><br>案の定、その後、毎晩、毎週末、それを一瞥する限り、あらゆる面で時間の一般的な消費を知ることができます。<br>しかし、各イベントを1つずつ見る前に、自分が何をしたのかわかりませんでした。 </p>
<p>多くの人は、デスクトップを要約して整理することに消極的だと思います。退屈なことが多すぎて頭が混乱していることが原因かもしれません。整理に時間がかかりすぎて、適切なフレームワークがないためです。 次にドラッグします。 これがおそらくソフトウェア(ツール)を追求することに熱心な理由です </p>
<p>Googleタスクが続く<br>これはリストのようで、採点できます<br>私は最近やるべきことをいくつか記録していましたが、イベントを追加するときは、コピーして貼り付けると便利です(これはGoogleの本来の意図ですか？囧) </p>
<h2 id="マインドマッピング"><a href="#マインドマッピング" class="headerlink" title="マインドマッピング"></a>マインドマッピング</h2><p>上記のMindjet、それを使用する人がもっといます、スキップ<br>私が偶然にZhihuで見た別の種類のマインドマップについて話しましょう：<br>]テレビの主人公が手がかりを整理したら、壁に固定された素材をワイヤーでつなぎ、交差点を見つけます。方法は？ ](<a href="http://www.zhihu.com/question/20176809">http://www.zhihu.com/question/20176809</a>) </p>
<p>** TheBrain **、アーティファクト<br><img src="http://www.liangxiaoxiao.com/wp-content/uploads/2012/10/ScreenClip1.png" alt=""></p>
<h2 id="ガントチャート"><a href="#ガントチャート" class="headerlink" title="ガントチャート"></a>ガントチャート</h2><p>このことの利点は、特に複数のプロジェクトが並行している場合に、進捗状況を明確に知ることができることです。<br>その時、私は必死になって良いソフトウェアを探していました(** Ganttproject <strong>を使用しない理由は、インターフェースが醜いからです、-\ _- |||)<br>後でMindjetが実際にサポートしていることがわかりましたが、操作は非常に不便です<br>Macの</strong> OmniPlan **は良いですが、無料です </p>
<p>だが！ ！ だが！ ！ プロジェクトマネージャーが** Excel **をガントチャートとして使用しているのを見たとき(小さなグリッドは1日を表し、色分けできます)、私はショックを受けました！ ！ </p>
<h2 id="その他"><a href="#その他" class="headerlink" title="その他"></a>その他</h2><p>朝日記、エバーノート、優先順位の4つの象限などもあります。機会があれば、後で説明します。 </p>
<p>私の個人的な価値ランキング： </p>
<ol>
<li>自由恋愛 </li>
<li>健康 </li>
<li>経済的自立 </li>
<li>理想的 </li>
</ol>
<p>私はGoogleカレンダーを2年近く使用していますが、どのように始まったのか思い出せません。これは「奇妙な生活」を意味しますが、これは単なる記録です。<br>この本に色が追加されて目を輝かせたので、すぐにグーグルに行って数週間マークを付けてみました。 </p>
<ul>
<li>黒：キャリアと業績 </li>
<li>赤：家族と社会のコミュニケーション </li>
<li>黄色：健康 </li>
<li>青：人生の意味と価値 </li>
</ul>
<p>元々オールカラーだったカレンダーがすぐにカラフルになり、生き生きと </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/calendar.png" alt=""></p>
<p>本に述べられているように： </p>
<blockquote>
<p>人生の筆は常にあなた自身の手にあります。より多くの黒、青、または赤は完全にあなたの個人的な決定次第です。あなたがあなた自身の内面の要件に従ってこの絵を完成させる限り、それはあなたの心の中で最も美しいに違いないと思います。 傑作。 </p>
</blockquote>
<p>その後、みんなの「夢の見つけ方」の方法になりました </p>
<blockquote>
<p>社会には常に微妙な変化があります。情報伝達が発達しすぎると、真と偽の境界がますます曖昧になります。人々の心理的不安は日々高まり、自己認識はますます強くなっています。 他者への焦点は自己内省に移り、意識と道徳の追求はこれまでのどの歴史的時代よりも緊急に変化しました。 </p>
<blockquote>
</blockquote>
<p>人が自分の人生の意味と価値を疑うとき、彼は病気になります。<br>-フロイト </p>
<blockquote>
</blockquote>
<p>ユートピアの夢とは異なり、未来を見据えることは人類の戦略的行動であり、理想を実行する勇気、強さ、そして確固たる決意が含まれます。<br>-元ドイツ大統領ローマンヘルゾフ<br>人の最も贅沢な楽しみは、彼が彼の時間のマスターであるため、彼が警報時計を必要としないことです<br>トラブルを見つけるのは人間の本性であり、実際には問題がなくても自動的にやってくる<br>時間がないと感じたら、休憩する必要があります<br>自分だけがそれらの不快なことを受け入れるように自分を強制することができます </p>
</blockquote>
<hr>
<p>これはカンフーのようなものです。マスターレベルでは、花を飛ばしたり、葉を摘んだりすると、人を傷つける可能性があります。<br>たとえば、クラスメートの1人が3Mの付箋をメモとして使用しました(後で「TooStupid Book of Heaven」で、一度に3つ以下、1つを完成させ、ディスプレイから1つをはがすと言われました)<br>もちろん、そうでないときにNBソフトウェアを使用することは、虎のようなものです。<br>最も重要なことは、GTDの本来の目的を忘れず、独自の管理システムを形成することです。 </p>
]]></content>
      <tags>
        <tag>GTD</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac VSWindowsのショートカット</title>
    <url>/ja/Mac-VS-windows-shortcuts/</url>
    <content><![CDATA[<p>これまで、Windowsには効率を上げるために非常に多くのショートカットキーがあり、破壊されていました。<br>一部のソフトウェアソフトウェアは実際には<strong>置き換えることができません</strong>、空であるだけです。ご存知の場合は、メッセージを残してください </p>
<a id="more"></a>

<ul>
<li>Ctrl + c == com + c </li>
<li>Ctrl + x / v == opt + com + v </li>
<li>Ctrl + v == com + v </li>
</ul>
<h3 id="Potplayer-MplayerX"><a href="#Potplayer-MplayerX" class="headerlink" title="Potplayer == MplayerX"></a>Potplayer == MplayerX</h3><h3 id="Foobar-iTunes"><a href="#Foobar-iTunes" class="headerlink" title="Foobar == iTunes"></a>Foobar == iTunes</h3><ul>
<li>早送りcom + opt +→ </li>
<li>XLDを変換する </li>
</ul>
<h3 id="すべて-スポットライト"><a href="#すべて-スポットライト" class="headerlink" title="すべて==スポットライト"></a>すべて==スポットライト</h3><h3 id="トータルコマンダー-？"><a href="#トータルコマンダー-？" class="headerlink" title="トータルコマンダー==？"></a>トータルコマンダー==？</h3><h3 id="PDF-Xchange-pro-？"><a href="#PDF-Xchange-pro-？" class="headerlink" title="PDF Xchange pro ==？"></a>PDF Xchange pro ==？</h3><p>xマージ、トリム、編集のアーティファクトを変更します<br>トリミングはブリスだけを見つけました </p>
<p>始めてから2週間近く経ち、チューニングもほぼ終わりました。よく使うソフトウェアを整理していきます。 </p>
<h2 id="効果"><a href="#効果" class="headerlink" title="効果"></a>効果</h2><ol start="2">
<li>Mindjet </li>
<li>Evernote </li>
<li>MPlayerX </li>
<li>Mユーロ </li>
<li>アルフレッド </li>
<li>Idoce5 </li>
<li>オムニシリーズ </li>
<li>colorsnapper </li>
<li>RescueTime </li>
</ol>
<h2 id="プログラミング"><a href="#プログラミング" class="headerlink" title="プログラミング"></a>プログラミング</h2><ol>
<li>PyCharm </li>
<li>WebStorm </li>
<li>ルビミン </li>
<li>崇高なテキスト </li>
</ol>
]]></content>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Codecademy</title>
    <url>/ja/Codecademy/</url>
    <content><![CDATA[<p>2014-01-04 23:39:28<br>ついに終わった<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/codecademy.png" alt=""></p>
<a id="more"></a>

<p>Rubyがあなたに自由を与えるのも不思議ではありません。構文上の砂糖だけの観点からは、Pythonよりも優れています。<br>「終了」の問題のためにRubyは好きではありませんでしたが、全体としてはやりました。 </p>
<ol>
<li>Pythonのようにどこでもインデントに注意を払う必要はなく、自動的にインデントできるので(Pythonはこれまで見たことがない)、心配する必要はありません。<br>2。：などの記号が削減され、関数呼び出しがより自然になります </li>
<li>よりオブジェクト指向(Pythonにはまだ型(int str …)の概念があり、パラメーターの受け渡し、戻り値などは特に明白です。Rubyは弱く、使用すると型の存在を感じることさえできません) </li>
</ol>
<p>全体として、それは実現されます </p>
<ol>
<li>アルゴリズムはコードとは何の関係もありません。Pythonよりはるかに少ないです。 </li>
<li>書くのがより自然です </li>
</ol>
<p>したがって、何かを理解する前に主観的な判断を使用しないことが最善です </p>
<p>PS：<br>JavaとAndroidは1年近く使われていますが、愛はありません。わかりませんよね？ </p>
<hr>
<p>2014-01-03 23:37:58<br>PythonとRubyを同時に使用しないでください </p>
<p>Rubyが前面にあるので、終わりは大丈夫です </p>
<p>Pythonを書いたときは悲しかったし、いつも<strong>コロン</strong>を忘れていて、** return **を忘れがちです。<br>クラスが望んでいる(オブジェクト)、def func(自己)：どこでも人々を拷問する </p>
<p>++ &amp;&amp; Cからのこの書き方も顔です </p>
<p>これら2つの言語の機能は異なります。例： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python.append()  ruby.add()</span><br><span class="line"></span><br><span class="line">len(python) ruby.len</span><br></pre></td></tr></table></figure>

<p>それはしばしば混合され、エラーは提出後にのみ発見され、さらにインターネット速度… </p>
<hr>
<p>プロキシカードを使うのは痛いです、入らなくては入りません… </p>
<p>私はまだ2つの文を書いて、結果を見るために走るような人です<br>提出後、結果を待つのに多くの時間が無駄になります<br>Rubyは遅いと言われていますが、最も誇張されているのは、RORがGOに変換された後、サーバーが30から2に低下したことです。<br>私はまだそれを信じていませんが、それはただの問題です(もちろんそれはインターネットの速度かウェブサーバーでなければなりません)<br>しかし、これは、Rubyが他の誰かの人生で遅いことを人々に伝えるための急いでいます…言葉がありません </p>
<p>愚かなリマインダー<br>本土もカード、久しぶりにループの確認を促されますので、しばらくお待ちください。大丈夫です。<br>特にRuby、N個のメソッドを持つ言語 </p>
<p>フィーリング結果には2つの判断条件があります。 </p>
<ol>
<li>結果文字列の比較 </li>
<li>ソースコードの定期検査 </li>
</ol>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>Ruby</tag>
      </tags>
  </entry>
  <entry>
    <title>両親との難しい会話</title>
    <url>/ja/Difficult-Conversations-with-Parents/</url>
    <content><![CDATA[<p>寒くはありませんが、まったく言葉がありません </p>
<p>卒業後は仕事を選んで大学院に行かせて<br>仕事をしていると、電話をかけるたびに公務員試験を受けるように言われました(時々電話をかけて連絡を取りたいと言っている人はどうしますか？)<br>ギャップイヤー(両親にペニーを求めなかった)、それでも毎日私を軽蔑している </p>
<p>要するに、あなたは彼らの私有財産だと思います。LZはあなたを世界に連れて来ました、私が言ったことではありませんか？<br>沿って！ 大きくなると翼が硬くなり不従順になりますよね？ </p>
<a id="more"></a>

<p>それからあなたの人生を改ざんしようとしてあなたに指を向け始めました： </p>
<ol>
<li>電源と洗脳を使用します(私は若い頃から、今はスイッチをオンにするだけです)<br>不必要な「王は大臣を死なせたい、大臣は死ななければならない。父は息子を死なせたい、そして息子は死ななければならない」を排除する。<br>文脈から外れて「親はここにいるので、遠くに旅行しないでください」(あなたは良い計画を持っている必要があります)<br>最初に親密な敬虔<br>..。 </li>
</ol>
<p>PS：彼らは「1984」を見ましたか？ 私の知識は表面的なものです。 。 。 </p>
<p>しかし、あなたは西洋の平等の考えに浸って読んだかもしれません<br>ルソーの「人間の不平等の起源について」、ラッセルの「西洋哲学の歴史」、ソローの「ヴァルデン」などの傑作<br>ConfuciusやMenciusと同じではなく、心の独立に向けて </p>
<p>大丈夫です： </p>
<p>2.あなたを誘拐するために物質的な手段を使用する<br>   共通：全額支払い、ダウンペイメント、仕事の手配など。 </p>
<p>「影響力」によると、相手に少しの利益を与え、相手があなたに借りがあると感じないでください。そうすれば、相手はより多くの利益を得ることができます。<br>つまり、「人の口を食べて手を柔らかくする」ということです。 </p>
<p>しかし、あなたはクリシュナムルティの「人生で考えてはいけないこと」、ラオスの「タオ・デ・ジン」、そして「現在の力」を弱いときに読んだことがあるかもしれません。<br>人生は自分自身を解放し、内面の静けさを最も求めるべきであることを理解する<br>そして、強さは比較的強く、LZは自立することができます、これらのものは必要ではありません、彼らはまだよく生きています。 </p>
<p>ブラザーは経済的に独立しているので、私には何もできません。 </p>
<p>それは問題ではありません、他に何がありますか： </p>
<p>3.ごめんなさい<br>   あなたが混乱しているとしても、しかし<br>   人々は植物ではなく、冷酷である可能性があります、結局のところ、血は水よりも厚いです<br>   彼らはあなたを家族と誘拐しようとしました<br>   「私はこの人生であなたのために生きています」、「あなたの両親を責めないでください、彼らはあなたに最高を与えました」 </p>
<p>私が行く、あなたは「最高」が私が欲しいものだと思いますか？ </p>
<p>「私たちはあなたのためにこれをしました、あなたは私にふさわしいですか？」<br>Ο\ _ \ _Ο “…<br>この酸っぱいラッシュはどこから来たのですか？ (「TheRoad Few People Walk」は、恥ずかしい、そのような深く犠牲的な両親に言及しました) </p>
<p>「私たちはあなたの両親です、もちろん私たちはあなたのことを気にかけなければなりません」<br>どうか、これは明らかに他人をコントロールしようとしている、誰も気にしない<br>人のことを気にするのにどんな口調が使われていますか？ ？ ？ </p>
<p>PS：恋人の間にもこの問題があります </p>
<hr>
<p>上記の言葉は少し深刻です<br>実際、この世代の親のほとんど(以前は若かったのですが)は教育不足の犠牲者になりました。<br>白黒の思考、他の思考、独立して考える能力はありません </p>
<p>彼らに彼らの思考、思考、態度、そして口調の不適切さを認識させないようにする<br>事実は見ていませんが、正しいと思います。結局、子供のご飯よりも塩を多く食べます。「私が言うのは宇宙の真実」という姿勢です。推論は無意味です。 </p>
<p>子供の頃、それが彼らの理由ではないことを知っているので、その口調で彼らを見るのはとても悲しいです<br>(私が今考えることができる)最善の方法は、おそらく食料調達することだけであり、彼らを幸せにするためにいくつかの「白い嘘」をすることです<br>しかし、主要なイベントになると、紙は火を封じ込めることができず、紛争は依然として避けられません </p>
<p>年齢の関係で、高齢者が新しいアイデアに触れることはほとんど不可能です。前の世代に変更を依頼することはもはや現実的ではありません。<br>しかし、私たちは次の世代を始めることができます-私たちの世代がママとパパになることをあなたは理解しているのだろうか </p>
<p>そのため、「両親とのコミュニケーションの仕方」、「両親の怒りを防ぐ方法」、「両親の提案が正しいと自分自身に思わせる方法はありますか」、「従順な子供になる方法」、「テストしたい」などの質問をすることができます。 公務員/研究者/医師/ポストドクターを彼らの故郷にとどまらせる方法と彼らの両親は彼らを許可しません」 </p>
<p>次に、Shangzhihuを思い出させます </p>
]]></content>
      <tags>
        <tag>Parents</tag>
      </tags>
  </entry>
  <entry>
    <title>詳細、詳細なし</title>
    <url>/ja/Learn-more-study-less/</url>
    <content><![CDATA[<p>私が高校生の時、クラスに生徒がいました。 私の人生で初めて、<strong>インテリジェンス</strong>を見ました。 </p>
<p>彼が勉強しているのを見たことがない。 ゲームをしたり、小説を読んだりするのを見ることができます。 </p>
<p><strong>学習者</strong>もいます。つまり、ハードワークを通じてスコアの<strong>インテリジェンス</strong>に近づくことができます。 </p>
<p>タースが私が彼らの一人ではないのは残念です。 </p>
<a id="more"></a>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/intellect.jpeg" alt=""></p>
<p>一生懸命勉強しましたが、それでもスコアは上がりませんでした。 </p>
<p>当時の私がどれほど絶望的であったかを想像することができます。それは彼らが才能があり、知的であることを示しています。私は何でもありません。 私は敗者として生まれました。 </p>
<p>何年も経って、決心しました。これはまさに脳の魔法です。 </p>
<p>賢者が書いたこの本は、「鋼の作り方」について説明しています。 </p>
<p>神に感謝します、常に希望があります。 </p>
<p>心理図： </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Learn-More-Study-Less.png" alt=""></p>
]]></content>
      <tags>
        <tag>Reading</tag>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>独自のブログを作成する</title>
    <url>/ja/How-to-build-your-own-blog/</url>
    <content><![CDATA[<p>私が一番感じるのは：<br>VPS +ドメイン名WordPressおよびその他のブログフレームワーク。URL、バックグラウンド環境などはすべて自分で制御できます。 </p>
<p>お金を使わないなら、誰かにしか送ることができません<br>たとえば、GAEまたはSAEの下に吊るします </p>
<p>Githubにリンクする最も簡単な方法もあります。<br>一般的なプロセスは </p>
<ol>
<li>Github、xxx.github.comに新しいリポジトリを作成します </li>
<li>JekyllやHexoなどの静的なブログ生成ツール </li>
<li>これ以上 </li>
</ol>
<p>はい、それはとても簡単です、そしてオンラインチュートリアルは少しずつです、それで私はそれを繰り返しません<br>私はHexoを使用しています、<a href="http://leihao0.github.io/">ここ</a>に掛けてください<br>ジキルと比較して、それはより簡単に感じます </p>
<a id="more"></a>

<hr>
<p>無関係なことを言うには： </p>
<p>小学生の頃、毎日エッセイを書いてもらいましたが、その時は本当に虐待されていました。<br>通学時や放課後は毎日(チャオ)宿題を書いていますが、まだ1日1枚しかありません。録音できるのはせいぜい1週間です。<br>どうすればいいですか、サンプルテキストしかコピーできません </p>
<p>当時、理論的なガイダンスがなく、コピーが正確でなかったのは残念でした。小学生がモデルエッセイのコピーを終えた後、それをコピーする方法がなかったので、私はしぶしぶ中国の教科書のアイデアを始めました。<br>タイ・スイは頭を痛め、早く死ぬことはなく、自然に発見されました。 </p>
<p>それから、人間の魂のエンジニアとして知られている3年生の中国人教師が私の日記を取り、クラスの前で私を激しく叩きました。 </p>
<p>ああ(wocao)、鶏と猿を殺すのにそれほど残酷である必要はありません。 </p>
<p>当時は我慢できず、黙ってスキルアップしていました。結局、大学入学試験にはまだ8部構成のエッセイがあります。明日のために、我慢できなければ大きな計画を立てます(まあ、当時はバカでした)。 ニアンはまだ父親が息子をそのように殴ったと思っています) </p>
<p>幸いなことに、大学、最終的にそれらの嫌なことを書く必要はありません<br>私の新入生の年に、ルームメイトは私の悪いスペースを軽蔑し、それからドレスアップに行き、Nフラッシュ以上を切った、カードを開くことができない<br>後で、ログ機能があることに気づき、さりげなく学校のことを書いたところ、何人かの生徒からコメントがあり、とても嬉しかったです。<br>これがブログと呼ばれていることを知るのに1年以上かかりました </p>
<p>その後、プログラミング関連のものがCSDNにハングアップし、左下隅にある千マイル離れたところを静かに見つめました。 </p>
<p>卒業する頃に探していたのですが、Yiyaの書いたものを見て、よく知っていました。来場数が1Wを超えていて、まだランキングが残っていたので、これは誰なのかと思いました。 </p>
<p>後で、誰も知らない場所を見つけて何かを録音したかった </p>
]]></content>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>なぜ哲学を学ぶのか</title>
    <url>/ja/Why-we-learn-Philosophy/</url>
    <content><![CDATA[<p>どんな被験者にも試用範囲があり、有用かどうかは相対的です<br>あなたの生活が比較的スムーズで周囲の環境が良ければ、ボートはありますが、利用するものはなく、兵士はいますが、報告するものはありません。 私は何も<strong>反映</strong>していません、それは役に立たないかもしれません </p>
<p>しかし、政治、研究、ビジネスのいずれであっても、常に好奇心を持ち、探求し続けると、最終的には間違いなく哲学的な問題に直面することになります。<br>哲学は世界の起源についてであるため </p>
<p>ハーバード大学の政治科学教授であるマイケル・J・サンデルは、「正義-私は何をすべきか？」 「最初のレッスンの終わりの段落はとてもとても良いです(人々がアメリカのドラマを追いかけるようにフルセットを見たほど良いです)： </p>
<blockquote>
<p>哲学の本を読むことは、<strong>自分自身の認識</strong>の練習として使用できます。<br>哲学は、私たちが慣れ親しんでいるものをなじみのないものにします。それは私たちに新しい情報を与えることはありませんが、<strong>物事を見る別の方法</strong>を与えてくれます。冒険には、<strong>個人レベルと政治レベル</strong>の2つのレベルがあります。個人レベルでのいわゆる冒険は、それらのなじみのあるものがなじみのないものになると、それらは二度と同じになることはないということです。自己認識は失われた旅行者のようなものであり、彼がどんなに混乱したり邪魔されたりしても、もはやそれについて考えることはできません。このプロセスは難しいですが、それに専念する必要があります。道徳的および政治的哲学は物語のようなものです。それがどこに行くのかはわかりませんが、これがあなたについての物語であることは明らかです。政治的リスクは、あなたがこれらの本を読んでこれらの議論に参加した後、あなたはより良く、より責任ある市民になり、公の政治的領域についてのそれらの仮定を調べ、そしてあなたの政治的判断は運動をすれば、より積極的に公務に参加できるようになりますが、これは一方的で誤解を招く可能性があります。あなたが認める必要があるのは、それはあなたを良い市民ではなく悪い市民にするかもしれない、あるいは少なくともあなたが良い市民になる前にあなたを悪い市民にするかもしれないということです。それは昔の哲学のせいで、少しでも破壊的です。ソクラテス時代の会話を見てみましょう。ソクラテスの友人であるカリコールは、彼に哲学を離れるよう説得することを望んでいました。彼はソクラテスに言った：哲学は確かに美しい。それはあなたがそれに適度に関与しているときだけ美しいが、あなたがそれに中毒しすぎるとあなたを破壊するだろう。私の言うことを聞いて、哲学的な議論はさておき、人生の本当の成果は何かを考えてください。曖昧な哲学的な発言で時間を無駄にする人々から学ぶのではなく、本当によく生きる人々の豊かな生活を見る必要があります。評判やその他のもの。彼は、相棒、現実的であると言うつもりでした。しかし、ケーラーが正しいことの1つは、<strong>哲学は、元の慣習、事前に注文された仮定、および固有のアイデアから私たちを遠ざけることです</strong>。 </p>
</blockquote>
<blockquote>
<p>これらの問題に直面したとき、私たちはそれを回避する特別な方法を持っています。その名前は懐疑論です。これは、このように私たちが学び始めたばかりであり、私たちが一度に主張した事例や原則を完全に解決する方法がないことを意味します。そして、アリストトル、カント、ロック、ミューラーが長年これらの問題を解決していないとしたら、私たちは誰だと思いますか？サンダースホールで一学期過ごしただけで解決できますか？さらに、これはそれぞれの人がそれぞれ異なる原則を持っていることについての質問かもしれません。議論する価値はなく、これらの問題がなぜあるのかは明らかではありません。これは懐疑論が逃れる方法です。これに関して、私はこれに答えることができると思います。確かに、これらの問題は非常に長い間議論されてきましたが、ある意味で<strong>説明することは不可能</strong>であるにもかかわらず、常に議論されているからです。しかし一方で、それらも<strong>回避することはできません</strong>。これらの質問に対する答えは私たちの日常生活の中にあるので、その理由は避けられません。したがって、懐疑論はあなたを手放して考えることを諦めさせます。それは道徳的または哲学的問題を解決しません。カントは懐疑論について非常に素晴らしい説明をしています。「<strong>懐疑論は人々が探検の過程で休むための場所にすぎません。それは私たちがいくつかのドグマをさまようことを可能にしますが、私たちが永遠にとどまることができるというわけではありません。ここで、このコースの目的は、</strong>無限の好奇心と推論を目覚めさせて、私たちがどこに行くのかを確認すること**です。 </p>
</blockquote>
]]></content>
      <tags>
        <tag>Philosophy</tag>
      </tags>
  </entry>
  <entry>
    <title>物語の始まり</title>
    <url>/ja/The-Beginning-of-The-Story/</url>
    <content><![CDATA[<p>昔々、山々に囲まれたゼヤ大陸で生まれた小さな魔道士がいました。 </p>
<p>小さな魔道士がいる学校は、魔法の世界で数千マイル離れたところにランクされています。周りを見渡すと、学校全体に魔法の達人はいません。 </p>
<p>小さな魔道士が卒業するとき、それは静的な魔法にすぎません </p>
<p>この種の魔法は非常にNBですが、時間がかかりすぎますが、時間がかかりすぎます。呪文を唱えるときはじっと立っている必要があります。 </p>
<p>数日前まで、小さな魔道士は突然、歩きながら歌える魔法があると聞いて、とても興味津々になりました。 </p>
<p>最新の魔法の本を読んだ後、すべての動的な魔法の中に、Ruby onOrbitと呼ばれる魔法があることがわかりました </p>
<p>この種の魔法の発音は奇妙で説明のつかないものですが、歌が正しければ、最も致命的な魔法を最短時間で呼び出すことができます。 </p>
<p>それから彼は彼が召喚した魔法によって殺されました </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>復活</title>
    <url>/ja/Resurrection/</url>
    <content><![CDATA[<p>小さな魔道士がトラックでRubyを集中的に訓練した最後の時、彼は血の代償を払った </p>
<p>魔法の本は多くの魔法の達人によって共同で推薦されています。それは11の章に分かれています。それはエルフの言語で書かれていて、非常にNBのサンプルペーパーに見えます。 </p>
<a id="more"></a>

<p>小さな魔道士のエルフはまあまあだった、推測、練習の半分、少し不快な反応 </p>
<p>第9章では、連続鋳造時間が長すぎ、魔法は反発の兆候を示しました。 </p>
<p>これに先立ち、CodecademyAcademyのLittleMageのコースはスムーズに削除されました。ハイパーテキストマークアップスペル、階層スタイルシート、パイソンルビーはすべて利用可能で、本には3つの章しか残っていません。 </p>
<p>リトルマスターがモーメントからたくさんのチキンスープを注がれたのはまさに偶然でした。 </p>
<blockquote>
<p>人、あなたが自分自身を強制しなければ、あなたは自分がどれほど優れているかわかりません。人、あなたが自分自身を強制しなければ、あなたの世界は常に黒くなります </p>
</blockquote>
<p>そしてまた： </p>
<blockquote>
<p>人が優秀になりたい場合は、チャレンジを受け入れる必要があります。人は、できるだけ早く優秀になりたい場合は、チャレンジを見つける必要があります。 </p>
</blockquote>
<p>小さな魔道士は自信と前向きなエネルギーに満ちていると考えられます </p>
<p>メイジは剣士のような強い体を持っておらず、専門的な制限があることを無視すると、それらのほとんどはサブヘルスにあります </p>
<p>マナの不足と相まって、私はテクノロジーをプレイしなければなりません </p>
<p>ついに最終章で赤と青が尽き、召喚したモンスターに殴られて死んだ。 </p>
<hr>
<p>幸いなことに、小さな魔道士はレベルが低く、復活時間が短いです </p>
<p>しかし、理由もなく再生アンクを無駄にしました、小さな魔道士はまだ非常に不幸です </p>
<p>私の周りの人が親切に尋ねると、彼らは自分の歯をノックダウンして血を飲み込むことしかできません。 </p>
<p>結局のところ、メイジとして、彼が召喚した呪文によって殺されるのは恥ずべきことです。 </p>
<p>この事件の後、小さな魔道士もパブロフの制限、つまり特定の刺激に対する動物の反応を形成することを余儀なくされました </p>
<p>エルフを見ると吐き気がする </p>
<p>それで、小さな魔道士はもう魔法に触れないことに決めました </p>
<p>..。 </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>女神</title>
    <url>/ja/Goddess/</url>
    <content><![CDATA[<p>先に述べたように、小さな魔道士はもう魔法を見ることはありません </p>
<p>朱西氏は、「やめるだけで十分だ。貪欲はない」と語った。<br>小さな魔道士の精神的な計画は良いです、隠すために戦うことはできません </p>
<p>人生はしばしばとても面白いか残酷です<br>タオ・テ・チンによれば、「天の道はより多くのダメージを与え、不足を補うでしょうが、人間の道はそうではありません。<br>言われているように、「あなたが病気のとき、私はあなたを殺します」 </p>
<p>魔法に屈辱を与えられた後、マーフィーの法則はその力を示し始めました-小さな魔道士の女神は彼を無視しました </p>
<a id="more"></a>

<p>物事はこのようなものです： </p>
<p>数日前、女神は突然小さな魔道士を呼びました、無意識のうちに、2人は1時間以上おしゃべりしました<br>電話で、女神は最近疲れた小さな魔道士に不平を言い、それから彼女は魔法の本の容器が欲しいと指摘しました。それは邪悪な魔法のグループからの明るい純粋なステッカーと呼ばれる最新の強力な魔法の道具です。 女神は魔法の世界のいくつかのニュースを使って余波に対処しましたが、それは本当に正確です </p>
<p>小さな魔道士は電話を受けたときお世辞になり、数日後にはさらに興奮しました。女神の誕生日が再び近づいているのを見て、それを手放しましょう。 </p>
<p>金のコインは問題ですが、幸いなことに、小さな魔道士は通常、お金を節約し、質素に食べ、そしてほとんど十分に管理しません。<br>長い間価格を比較した後、ついに心の女神のために購入しました </p>
<p>商品が到着してから2日後、女神が「好きです、ありがとう」と答えるのを見ました。<br>小さな魔道士が応答する前に、彼は女神をオフラインで見ました </p>
<p>小さな魔道士は他の人たちに疑いの余地はなく、「卑劣な私2」の小さな黄色い男がヒロインが豊かな連想と想像力を発達させるのを見たように、彼は無限に幸せです </p>
<p>しかし、翌日、女神はまだ応答しませんでした<br>当初、小さな魔道士は自分が女神だと思っていたので、忙しいに違いありませんが、フォーラムのメッセージに返信したり、Weiboで毎日チャットしたりしないのが普通です。 </p>
<p>翌日の夕方までに、リトルメイジは何かがおかしいと感じました。QQ、WeChat、Weibo、SMS、電話、そしてさまざまなコンタクトマジックがすべて使用されました。 </p>
<p>女神は女神になる価値があり、戦争の芸術を柔軟に使用して、すべての変化に同じように、穏やかにそして独創的に対処します。<br><code>&gt; / dev / null</code> </p>
<p>小さな魔道士が考えることができるすべての魔法を一掃し、波紋を残さない </p>
<p>歌われた心は別として、小さな魔道士はまだ彼の心に希望のかすかな光を持っています </p>
<p>それから私はこの残酷な質問を見ました： </p>
<p><strong>スペアタイヤを調達するにはどうすればよいですか？ **</strong><br>回答：<br>スペアタイヤが主導権を握ってあなたと話すなら、あなたはただハハ<br>スペアタイヤはもうアクティブではありません。彼に何をしているのか聞いてください。 </p>
<p>小さな魔道士は、あたかもこれらの2つの文を確認しているかのように、以前にすべてを思い出しました<br>本当に<em>言葉は血のようなものであり、行動は苦情、悲しみ、覚醒のようなものです</em> </p>
<p>小さな魔道士の目は熱く、ついに彼女は涙を流した </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>自由意志</title>
    <url>/ja/Free-Will/</url>
    <content><![CDATA[<p>「自由意志」という言葉をいつ聞いたのかわかりませんが、1年以上のように感じます </p>
<p>この言葉は時々使われますが、私は<strong>自由意志</strong>が何であるかを理解していません </p>
<a id="more"></a>

<p>実際、グーグルはすぐに答えを得ることができますが、私は長い間それをしませんでした。私自身の洞察に基づいてそれを理解したいですか？ </p>
<p>私はこの言葉をDongwuの相対性理論で最初に聞いた<br>私は次の本のいくつかに出くわすことができます<br>後でLuoJiSiweiが聞いた<br>以前のBBCホーキングの世界では、「私たちは皆、星間物質でできています」 </p>
<p>人々は外部の刺激に本能的にではなく合理的に反応するように感じます </p>
<p>「7つの習慣」で引用された著者のエピファニーからの3つの引用： </p>
<blockquote>
<p>刺激と反応の間にスペースがあります<br>この空間では、私たちは自分の反応を選択する自由と能力を持っています<br>私たちの成長と幸福は私たちの反応に依存します </p>
</blockquote>
<p>正直なところ、見たときは何も感じませんでした。<strong>単に知識があります</strong>％&gt; \ _ &lt;％ </p>
<p>それから私は著者の説明、<strong>選択の自由</strong>を見ました、私は冷たい息(冬)で呼吸せざるを得ませんでした-私はエピファニーのためにそれを実現しました。<br>これは自由意志ではありませんか？ ！ </p>
<p>幼い頃に投げて、妻と子供の熱いベッドに落ちて、直接そこに落ちることの違いは、今まで理解したことがありませんでした。 そこに感じますが、違いはわかりません。 </p>
<p>この観点から、それは自由意志の目覚めと、自分の内なる呼びかけを尊重することと、普通の生き物のように単にストレスを与えることとの違いであるべきです。 </p>
<p>静かな場所で雷を聞く </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>スペアタイヤ</title>
    <url>/ja/Spare-Tyre/</url>
    <content><![CDATA[<p>小さな魔道士への女神の打撃は、小さな魔道士の想像をはるかに超えていました<br>このように、最後の死は浮かぶ雲のようでした </p>
<p>ジン王朝の詩人ユアンハオはヨウユンに尋ねました： </p>
<blockquote>
<p>世界の愛とは何かを尋ね、生と死を直接教えますか？<br>-「Moyuer・YanqiuCi」 </p>
</blockquote>
<p>小さな魔道士は感情的な子供です。まだ魔道士アカデミーにいたとき、彼は女の子が好きで、3年間懸命に努力しました。女の子の誕生日のプレゼントを買って階下で待っていたとき、彼は女の子と欲求不満の男が一緒に飛んでいることに気づきました。 </p>
<p>誰もが幻滅の瞬間を持っており、3年間の惨めさはついに小さな魔道士のエピファニーをもたらしました<br>それ以来、魔法に魅了され、最終的にはマスターになります </p>
<a id="more"></a>

<p>もちろんそれは小説で起こった<br>その時、キャンパスの募集が行われ、若いマスターは急いで戦いましたが、恥ずかしい結果に終わりました </p>
<p>もともと、小さな魔道士は、悟りを開いた後、彼はすでに無敵で合理的であり、もはや感情的な問題について混乱することはないと考えていました。 </p>
<p>しかし、彼は古代の哲学者ヘラクリトゥスの有名な言葉を忘れました。 </p>
<blockquote>
<p>同じ川に二度足を踏み入れることはできません </p>
</blockquote>
<p>もちろん、小さな魔道士はそれに違反していませんでした、それはただ別の溝に落ちました。 </p>
<p>すべてのお金がなくなった後、それは戻ってきます、そしてお金の損失は些細なことです。最大の落とし穴は、「あなたは相手を女神として扱い、相手はあなたを愚か者として扱います」です。 </p>
<p>以前の経験では、今回は小さな魔道士が早く目覚めましたが、心痛は避けられません </p>
<p>一般的に言えば、壊れた関係に対処するためのいくつかの実行可能なオプションがあります。 </p>
<ol>
<li>報復 </li>
<li>注意をそらす </li>
<li>昇華 </li>
</ol>
<p>最初のコストが高すぎる、それは負け負けです<br>最後の解決策が最適な解決策ですが、領域が高すぎるため、小さな魔道士は現在それに到達できません </p>
<p>黄金の平均ルートを取る必要がありました：注意をそらす </p>
<p>その後、小さな魔道士は忙しくし続けようとします </p>
<p>..。 </p>
<p>状況はまだ改善されておらず、本土で毎年恒例の春祭りが再び開催されました<br>今年のこの時期、町に戻る巻物は早く売り切れました </p>
<p>小さな魔道士は時間と手間のかかるテレポーテーションを使わなければなりませんでした </p>
<p>家に入る前に、ドアの両側に血のように赤いドアのペアが遠くから見えました。 </p>
<blockquote>
<p>毎年、私たちは私たちなしで毎年結婚します </p>
</blockquote>
<p>水平バッチ： </p>
<blockquote>
<p>もう一年待つ </p>
</blockquote>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>ママとパパ</title>
    <url>/ja/Mon-and-Dad/</url>
    <content><![CDATA[<p>小さな魔道士の父と母はすべてマグルです。周囲には魔術師はいない。彼らはかつて、小さな魔道士が卒業後に魔法の道具を組み立てて修理したと思っていました。 </p>
<p>小さな魔道士は江子の環境で生まれた╮(￣▽￣ “)╭、言葉では言い表せないほどひどいですが、両親とのコミュニケーションがいかに難しいかがわかります。 </p>
<p>今回は毎年恒例の家族の再会の日、小さな魔道士は非常に不本意に戻ってきました </p>
<p>どうして？ これには2つのポイントが含まれます。 </p>
<ol>
<li>中国人の両親 </li>
<li>小​​さな魔道士は辞任した後、仕事を探しませんでした </li>
</ol>
<a id="more"></a>

<p>マグルのママとパパは深い自己犠牲の感覚を持っています<br>今や完全に繁栄している経済環境においても、テーブルの上の料理を魔法のように3、6、9のグレードに分けて、肉質のもの、有機野菜、高繊維食品を自分たちで与えることができます。<br>「私たちはあなたのためにこれをしました、あなたはこのように私たちにふさわしいですか？」は一般的な殺人者です。 </p>
<p>このため、小さな魔道士は「愚かな少年の紙、あなたはまだ死ぬことができます！」を使用できません。同様の禁じられた呪いが破られます。そうしないと、電話を切るのはあなただけであり、死後はうまく生きることができず、無実で絞首刑になります。 不義と不誠実な敬虔さの告発は、マグルスタイルの両親の噂の否定的な例です </p>
<p>小さな魔道士は、うまくいかないことでギャップの遅い年に属していることを両親に何度も説明しました。それは人生の混乱であり、沈黙の期間がかかります…(将来別々に言う機会があれば)<br>しかし、ママとパパはこの種のレトリックを気にしません。仕事がないのなら、それは社会の若者ではありませんか？ママとパパが親戚や友人の前で頭を上げることができないようにする場合は、鞭を使って仕事を見つけさせないでください。 </p>
<p>小さな魔道士は、経済的自立は自由と交換できると固く信じているので、もはや両親に生活費を要求しません<br>これは奇妙な現象を引き起こします。一方で、小さな魔道士は仕事を持たず、他方では、小さな魔道士の生活水準はわずかに低下します。<br>マグルズであるママとパパはそれを全く理解していなかったので、彼らは探偵になり、彼ら自身の推論を始めました：生活費はどこから来たのですか？ rMBPこのような貴重なアーティファクトをゴールドコインと交換するにはどうすればよいですか？ それを盗むのは難しいですか？ なぜ普通の人と違うのですか？精神的に病気ですか？ 私は心理学者に会うべきです… </p>
<p>小さな魔道士は悲しく、水よりも濃い血を嫌い、絶え間ない家族の愛情と年次休暇を断ち切ります。最も誇張されたのは、ZFもこの問題に介入したことです。法律は彼の両親が有罪判決を受けたのを見ておらず、執行後に投獄されました… </p>
<p>小さな魔道士は公権力と戦う勇気がありません。P市民として、自意識を持っている方が良いです。<br>しかし、この春祭りに帰る前に、小さな魔道士はすでに戦争の芸術を読み、十分な準備をしていたので、彼はすでにヘクシアリアリティディストーションフォースフィールド(PS：突然科学を考えた)の西に旅した魔法の世界の前任者の禁じられた呪いを持っていると想像しました 超電磁銃の個人的な現実) </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>フレームマジック</title>
    <url>/ja/Framework-of-Magic/</url>
    <content><![CDATA[<p>フレームマジックの利点は明らかです<br>多くの場合、単一の魔法の力は限られているため、ウィザードは多くの小さな魔法を組み合わせて効果的な大きな魔法を形成します<br>一般的に言って、これはばかげたフレームワークです…毎日歌い、毎晩歌い、歌いすぎます。一部のウィザードは共通点を発見して洗練しました。TIASFを送信するだけで魔法の唱えを完了することができます。 生まれ </p>
<a id="more"></a>

<hr>
<p>トリプルブローの後、小さな魔道士は影の中に住んでいます </p>
<p>魔法使いの世界の魔術師を見ると、あらゆる種類の魔法がすぐに利用できることがよくあります。<br>カーボンマジックの達人であるジャワで生産されたコーヒーも、最初から始める必要がなく、使用するのに適しています。 </p>
<p>小さな魔道士は、この場合、そして邪悪な「感情の合理的な調整」に加えて、忙しくするために、ただ落ち着くほうがよいと考えました。 </p>
<p>その後、ノンストップ、ザナドゥオラ、ガンパウダー、その他のフレームマジックを読み始めました </p>
<p>(追記：プラントのセクション。ポリマーセメントは元々トレーニングの範囲に含まれていましたが、残念ながら私は魔法書「プラントのセクション」を見つけられませんでした。 私自身ではありません)、私はポケットの中で恥ずかしかったので、あきらめなければなりませんでした) </p>
<p>小さな魔道士は「タオテチン」を読んでいて、兵士が勝つということわざがあります<br>大まかに言えば、悲しみと怒りに満ちた敵軍が必ず勝つだろう。 </p>
<p>この時の小さな魔道士の気分は悲しみ以上のものであり、怒りは説明することができます </p>
<p>本土には、数枚のスラブを積み重ねたよりも厚い本があり、9冊に分かれて600年前の本土で記録されています。<br>それを読んだ後、最も印象的なことは戦術ではありませんが、悪者や陰謀があるときはいつでも、彼らはしばしばこの文を追加します： </p>
<blockquote>
<p>IQの制限により </p>
</blockquote>
<p>前任者の失敗、未来の世代への教訓<br>かわいそうな魔道士は毎日魔法の本を読むだけなので、歴史については何も知りません。 </p>
<p>そして、一度にもっと見ることの複雑さのために、徐々に、小さな魔道士は、パイソンの魔法を歌うとき、彼はしばしばそれにルビーの呪文をブレンドし、逆もまた同様であることに気づきました。 </p>
<p>最後に、小さな魔道士は、まともな魔法を放つことすらできないことに驚いた。 </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Webにアクセス</title>
    <url>/ja/Go-Web/</url>
    <content><![CDATA[<p>私はそれを読み終えていません、学齢後、プログラミングの本は見るべき重要な章を選ぶことしかできません、例は一つずつ実行することはできません、私はそれが残念だと言わなければなりません </p>
<p>比較的言えば、カバレッジは比較的包括的であり、例も非常に代表的です。購入は価格の価値があります </p>
<p>著者がインターネット上に本を置いていることは言うまでもなく、あなたはそれを検索することによってそれを見つけることができます </p>
<p>Learning By Doingで、私は水を試すためのWebサイトを作成しました。 </p>
<a id="more"></a>

<p>Http：// direct daily.A horn.what / </p>
<hr>
<p>PythonからRuby、Node.js、Golangへ </p>
<p>Rubyは本当に素晴らしいです。自由度については話さないでください。構文上の砂糖に関しては、疑似コードに最も近いと私が感じる言語です(「終わり」がない場合は、疑似コードを記述していると言えます。Pythonのようである必要はありません。 (インデントへの人間の注意) </p>
<p>Node.js、私はJavaScriptを知らないので、これについてはあまり知りません </p>
<p>それからGoを見ました。私のエントリー言語はCなので、これは自然な親密さと親しみやすさを持っています。 </p>
<p>ただし、RubyからGoに切り替える場合、最も不快な部分は、変数タイプを再度宣言する必要があることです。より複雑なデータは、インターフェイスで変換する必要があります。 </p>
<p>ゆっくりと私はこれがコンパイルする前にBUGをチェックすることであり、動的言語は人間の肉で各ブランチをテストすることしかできないことを学びました。 </p>
<p>卵の痛み </p>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>孤児</title>
    <url>/ja/Single-Forever/</url>
    <content><![CDATA[<p>小さな魔道士はしばらく動かなかったのに、なぜまた現れたのですか？ 今回は特別だから </p>
<p>午後、小さな魔道士はバルコニーで日光浴をし、2日前に女神が勧めた暴徒を見ていました。退屈したとき、彼はQをスワイプし、女神がオンラインになっているのを見て、チャットに行きました。 </p>
<p>女神がすべての文に答えるとは思っていなかったし、反応はとても速かった。 </p>
<a id="more"></a>

<p>小さな魔道士はとても幸せなはずだと言われていますが、彼は本能的に一種の涼しさを感じています-異常すぎる<br>注意深い誘惑： </p>
<p>レイズ？<br>番号<br>昇格しましたか？ </p>
<p>恋愛中？ 小さな魔道士が殴られて送り出されていないとき<br>女神は自動的に小さな魔道士に良い知らせを伝えました<br>小さな魔道士、彼の目は暗くなり、ほとんど気を失いました </p>
<p>現実は常に残酷で、しばしば劇的です<br>ギャップが終わりに近づいているのを見て、彼がすでに未来の絵を描いていたとき、小さな魔道士は彼をひどく叩きました。<br>そして歴史はいつも驚くほど似ています。去年のこの時、小さな魔法使いはすでに絶滅の惨事に劣らず打撃を受けていました。 </p>
<p>原則(私は忘れました、大まかに感情は爬虫類の脳から来て、人間の新皮質を通過しないので、生命を脅かさない状況では、瞬間的な感覚はしばしば有害な判断です)、小さな魔道士は10秒間深呼吸します 、その後..。 </p>
<p>血まみれの心に耐え、電話をかけ、しばらくおしゃべりをしましたが、最後には彼らの幸せを願うことを忘れませんでした<br>一言も言わずに、心の中で本当に思っていること </p>
<p>電話を切った後、丁寧に準備された贈り物を見て、小さな魔道士は悲しみに満ちていました<br>これは孤独な人生に運命づけられているリズムですか？ </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>壊れた愛の合併症</title>
    <url>/ja/Complications-of-Lovelorn/</url>
    <content><![CDATA[<p>一般的に言って、シリーズの主人公が死んだ後、それはしばしば終わりです </p>
<p>たとえば、「氷と雪のファンタジー」では、物語の終わりに、姉が愛を勝ち取り、2つのキノコがレースを冷やし、雄豚の足が動物と一緒にいる必要があります(人生の終わりはしばしば悲しいです) </p>
<p>ただし、これは小説であり、その前に前例があることを考えると、「リワーク」は「BUGを変更すると新しいBUGが導入されることが多い」とも述べています。<br>必死になって、私たちは小さな魔道士が復活できることを黙認します </p>
<p>しかし、小さな魔道士は非常に苦しみ、復活の時間のレベルを突破し、祭壇にとどまり、出てくるのを嫌がったので、彼はいくつかの余分なものを手に入れなければなりませんでした。 </p>
<a id="more"></a>

<hr>
<p>歴史に関する本を読むと、よく「歴史的な限界」という言葉に気づきます。 </p>
<p>独立した個人の場合、それも存在します<br>たとえば、半年後、一年後、精神的に前に進み、いきなり振り返る限り、今思いついたことなど、自分の限界に気付くことが多いのですが、その時は急いでいました。 </p>
<p>やってくる人として、しばしば </p>
<p>言い聞かせる： </p>
<blockquote>
<p>現実はありません<br>女神がいなくなったら、別の女神を見つけてください<br>私が経験した挫折はあなたよりもはるかに大きく、私はそれを乗り越えていません。あなたは完全に弱すぎてストレスに耐えられません。 </p>
</blockquote>
<p>関係者として、過去に殴打することについては話さないでください。結局のところ、彼らは親切ですが、私の心の痛みをあまり和らげることはできません。 </p>
<p>実際、私たち自身が党であるとき、私たちはしばしばこの悪循環から逃れることができません。 </p>
<p>人間には痛みを忘れる機能がありますが、最も明白なのは、最も痛みを伴う出産です。1〜2年のしびれの後、子供を再生するというアイデアが生まれます。 </p>
<p>ですから、時間が十分に長いと、本来の痛みは忘れられ、愛を失うことは大したことではありません。 </p>
<p>現時点では、子供用の靴が壊れている必要があり、私たちも同じ気持ちになります-それは単なる壊れた関係ではありませんか？大したことは、私たちはしばしば「説得」に行きます ` </p>
<hr>
<p>ものを書くときは、浮き沈みに注意を払う必要があります。深い内部スキルを持つ著者は、これを痕跡なしにプロットの雰囲気に内在化し、低レベルではしばしば乾燥した移行トーンが見られます。 </p>
<p><strong>だが</strong> </p>
<p>ほとんどの場合、私たちはなぜ苦しんでいるのかわからないので、「失われた愛」の現象しか使用できません </p>
<p>だから誰もが恋に落ち、なぜ何人かの人々はすぐに他の女の子を追いかけることができます(獣!!!さて、とてもうらやましいです)、そして何人かの人々は愛のために死にたいです </p>
<p>潜在意識の存在により、意識の内容は氷山の一角に過ぎないことがよくあります。 </p>
<p>関係を失うことの痛みは、誰かを失うことほど単純ではありません<br>それはしばしばあなたの愛への憧れ、未来への幻想、そしてあなたの個人的な信念の幻滅さえも含みます </p>
<p>実際、あなたは彼女があなたが思っているほど完璧ではないことも知っていますが、彼女はファンタジーに夢中になり、主観的に無視されています。<br>太陽の下で色とりどりの石鹸の泡のように、それらは無限に美しく、穴を開けるとすべてが消えます。 </p>
<p>非常に短い時間で、人生のすべての良い部分が奪われます(少なくともあなたはそれがすべてだと思うでしょう)<br>3つの見方を覆すのに匹敵するこの種のことは当然のことながら心痛です </p>
<p>あなたはあなたの人生の中で酸素から奪われているように感じます、そしてあなたの心は空です<br>私は通常、みんなの前で笑顔を強要し、親しい友人の前でのみ言及します<br>あなたが不運で自意識があり、他人の邪魔をしていることを知っているなら、あなたはしばしば沈黙を保ち、ほんの少しの言葉を言うだけであなたは沈黙するでしょう<br>私が一人だったとき、空虚は再び四方八方からやって来て、逃げ場はありませんでした </p>
<p>おめでとうございます。現時点で、人類、さらには宇宙の究極の問題である孤独に遭遇したからです。 </p>
<hr>
<p>経済的な観点から、私たちは以前に女神に支払ったすべてがすでに沈没した費用であることを知っています </p>
<p>現時点での科学的アプローチは次のとおりです。心臓は鋼のようであり、時間の損失を止めます。つまり、休憩があり、再生があります。 機会コストの拡大を厳しく管理する </p>
<p>現実には、ストックの神々はしばしば非常に少ないです </p>
<p>人間の感情が論理に先行するから </p>
<p>ほとんどの人間の感情は、コアレベルに属し、より高い権限を持っている、短いパスと速い反応を持つ古代の動物の脳から来ることを理解する必要があります。<br>思考を担当する新しい皮質は、パスが長く、応答速度が遅いため、アプリケーションレイヤーに属し、権限が最も低くなります。<br>amygdalaの強盗、シンギュレートロックなどが発生した場合、アプリケーションレイヤーでのアクセス許可が不十分になり、拒否されます。 </p>
<p>この時点で、人々は感情によって完全に制御されています </p>
<p>その後、小さな魔道士は復活する気がありません、私たちは理解することができます </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>自分を癒す方法</title>
    <url>/ja/Self-Healing/</url>
    <content><![CDATA[<p>前回、背後にあるいくつかの理由を分析しましたが、今回はそれに対処する方法について話します </p>
<p>まず第一に、ここではデフォルトで償還の可能性はありません。女神の前でひざまずいて泣いたり、泣いたり、トラブルを起こしたり、ぶら下がったりするなどの誇張したことをすることはできません。 </p>
<p>あなたが本当にそれをしてそれを取り戻したならば、以下の代わりに恋に落ちる方法を参照してください </p>
<p>個人にとって、苦境からできるだけ早く抜け出し、損失を最小限に抑える方法が、私たちが今最も懸念していることです。 </p>
<a id="more"></a>

<hr>
<p>さて、まずは「黄地ネイジン」で強調されている「予防的治療」の段階を取り上げましょう。 </p>
<p>まず第一に、私たちはスペアタイヤとしてのアイデンティティに直面しなければなりません </p>
<p>ほとんどの人はこの事実を認めたがらないことがよくあります<br>たとえば、私たちの小さな魔道士は女神と一緒にファンタジーに没頭しています<br>たとえば、高く買い、低く売る個人投資家 </p>
<p>経済学には<strong>パス依存</strong>と呼ばれる概念があり、公式の説明は次のとおりです。 </p>
<blockquote>
<p>人々が特定の選択をすると、それは戻りのない道に着手するようなものです。慣性の力はこの選択を常に自己強化し、あなたが簡単に外出するのを防ぎます。 </p>
</blockquote>
<p>たとえば、私たちがよく知っているQWERTYキーボード(私はDvorakを数か月使用していますが、かなりクールな感じがします。それが私の心の中にあるかどうかはわかりません) </p>
<p>「Suwen・FourQi Tiao Shen Dalun」も言及しました： </p>
<blockquote>
<p>夫の病気が病気になり、次に薬になり、混乱が生じ、そして彼が治癒することができれば、遅すぎることはありません。 </p>
</blockquote>
<p>敏感な心を育む、いくつかの小さなことを通して、小さなことを見て、このファンタジーの層を通して、絶えずそれにふけるのではなく、 </p>
<p>幻想から抜け出し、成熟に向かって動き、束縛を切り、過去を打ち破る </p>
<p>もちろん、ヒョウを目で見ることができず、葉が落ちる秋を知っている場合は、悲観的になりすぎないでください </p>
<p>結局のところ、自分でこの幻想から抜け出すことはより困難です。<br>これは、バグをチェックするためにコード内の変数を要求することと同じですが、これはしばしば非現実的です(たとえば、私たちの小さな魔道士は、このような顔の告白に遭遇したときに暴力によって目覚めました) </p>
<hr>
<p>それでは、「手遅れ」の状況に対処しましょう </p>
<p>次のようないくつかの方法がインターネット上で広く流通しています。 </p>
<ol>
<li>ずっと読みたかった本を読む </li>
<li>外出してスポーツを歩く </li>
<li>観光 </li>
<li>友達と一緒にいてチャットする </li>
<li>注意をそらします </li>
</ol>
<p>これらには一定の効果があると言わざるを得ませんが、根本的に問題を解決することはできません。 </p>
<p>これらの方法を使うとき、私はその時話したり笑ったりしましたが、別の角度から見ると、それは別の幻想ではないかもしれません。 </p>
<p>他の人はいつもあなたと一緒にいることができないし、できないからです。誰もが去ったとき、あなたに向かって急いでいる孤独感は、止められない法律で定義された力の威厳のようなものです(留学する子供たちはこの経験をするかもしれません) </p>
<p>だから何をすべきか？ </p>
<p><a href="http://v.163.com/movie/2012/9/P/4/M8I5TK339_M8KTJOSP4.html">スタンフォード大学オープンクラス：心理学者のように考える方法-感情を本当にコントロールできるか</a>、いくつかの洞察が必要です </p>
<p>前回の記事で述べたように、人間の脳にはさまざまな欠陥がありますが、実際には、ハードウェアのバグがトリガーされない限り、スムーズに実行し続けることができます。 </p>
<p>主観的には、脳はシングルコアのシングルプロセスであると感じています。多数の同時実行を強制すると、並列コンピューティングはもちろんのこと、インテリジェンスと判断力が全体的に低下することがよくあります。 </p>
<p>しかし、呼吸や心拍などのシステムプロセスの存在を認識または無視しないことがよくあります。 </p>
<p>カーネルまたはソフトウェアとハ​​ードウェアの保護メカニズムが存在するため、それを自分でメタプログラミングする場合、オペレーティングシステムの監視をバイパスすることは非現実的です(薬物などの異物はカウントされません) </p>
<p>これに基づいて、「フォーク」を試して新しいプロセスを作成し、悲しみや失望などのすべての感情を投入してから、「fg」を占有させる代わりに「disown％」を実行して、日常生活に影響を与えることができます。 </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>ファンワイチャット</title>
    <url>/ja/Side-Story/</url>
    <content><![CDATA[<p>それはただの衝動でした。その時私はRORを見ていました。テストが最初に行われるべきかどうかわかりませんでした。さらに、それはすべてEテキストでした。私が何をしているのかわかりませんでした。一種のキックがありました。 </p>
<p>また、当時の動画を見たところ、基本的には乗客が手仕事で携帯電話で遊べない理由をフライトアテンダントに尋ね続けていたのですが、フライトアテンダントは科学的な観点から説明を続け、ついにマグル、手仕事は魔法で動かされていると言って夢中になりました。 そのような大きなものはどのように空に飛んだのですか？空力と電磁気はあなたの愚かな人間を欺くためにエイリアンによって作られました… </p>
<p>それから私は急いでプログラミングを始めました、そして魔法は少し似ています。私は通常公開の講義を聞きます、そして教授はしばしばここに魔法がないと言います。私は反対に急いで、たくさんの手紙をコーディングしました、そしてそれから私は走ることができました 、これはすごいことではありませんか </p>
<a id="more"></a>

<hr>
<p>10を書けたらGithubでプロジェクトを開くと思います<br>まあ、実際には、魔法の馬をレビューする前に100を書く必要があります </p>
<p>しかし、私は怠惰すぎることを知っています。いつ退屈するかわからず、続行しないので、これは早めに行う方がよいでしょう。 </p>
<p>一桁壊れてびっくりしました<br>その多くは、1つの章の単語数によるもので、合計で12345になります。 </p>
<p>幸いなことに、私自身の目標は非常に低く、プロのコードワードではありません。書きながら楽しむのは良いことです。 </p>
<p>そうは言っても、コードファーマーは強い圧力を受けており、コードは通常退屈です。何かを記録したい場合、フォトジェニックでない限り、あえて現れないでください。<strong>プレーンテキスト</strong>にのみ頼ることができます。 </p>
<p>食べ物の写真ではない、文学的で芸術的な若者を見る<br>ギャップ╮(￣▽￣ “)╭ </p>
<hr>
<p>一般的に言って、このようなことにこだわる中途半端な俳優はほとんどいません。残念ながら、それは素晴らしいイベントです。主人公が突然変わり、サイヤンのようにスキルが100倍に急上昇するか、プロットにターニングポイントがあります。 次の世代が登場します。たとえば、「Evening the Dragon Slayer」のチャン・クイシャンとチャン・ウージが主人公を変えた、または作者が変わったので、新たに始める時が来ました(-\ _- |||) </p>
<p>また、この種の武道ファンタジー、主人公はますます強くなるだけです<br>JinDaxiaの_FlyingSnowは白鹿を撃ちます、そしてBiYuan_に寄りかかっている笑う男はそのような頂点です </p>
<p>大学でまだ「荒野」を見ていると、この質問に興味がありました。なぜ江子なのですか？<br>トゥオバイのように、「ソウシェンジ」の終わりには、彼はすでに不滅のレベルと戦うことができます。「荒野」が終わりに近づいたとき、3人の皇帝の心とすべての混乱は、バグのような最後のシナファンは言うまでもなく、すべてになります。 華<br>もちろん、これで終わりです。これ以上書くことはできません。 </p>
<p>もちろん、ゴールデンスタイルには強い代替感があり、主人公の成長とともに読者が成長できることを知ったので、ユーザーの<strong>返品率、粘着性、忠誠心</strong>は非常に高くなっています。数年経った今でも「彫刻」が見られます。 眠って忘れる衝動 </p>
<p>一方、グロンの作品では、それは神のレベルであり、サスペンスの推論によって駆動されるモンスターと戦う必要はありませんが、私は格下げについて聞いたことがありません<br>市場には「逆成長」モデルはないようです </p>
<p>それから、1万冊の本を壊したルームメイトに聞いたところ、彼が見たすべてのファンタジーの中で、練習したときに弱かったのは1つだけだと彼は言った。 </p>
<p>びっくりしたことが想像できるので、聞いてみませんか？ 彼は他に何が起こるかを言いました。豚の足は最初に数秒で神の王国を殺し、その後ますます弱くなっていきました。彼はすでに彼を虐待した敵に屈辱を与えられ、ついに普通の人でさえも打ち負かすことができないことに気づきました。 </p>
<p>聞いて憂鬱になりました </p>
<p>それから彼は続けて、主人公はゼロから始めてXXXとして復活し、生まれ変わり、そして最終的には美しさを保持してトップになるだろうと言いました </p>
<p>あなたが死ななければ、あなたは死ぬことはありません </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>2013年のまとめ</title>
    <url>/ja/2013-Summary/</url>
    <content><![CDATA[<h3 id="2014-03-31-13-47-59"><a href="#2014-03-31-13-47-59" class="headerlink" title="2014-03-31 13:47:59"></a>2014-03-31 13:47:59</h3><p>うーん〜o(\ * ￣▽￣ \ *)o、本当にまた3月にドラッグしました。賞賛してください。 </p>
<p>その背後にある理由は、人生の次の段階に入るのを恐れているはずです<br>24に入る前に、誕生日が終わるまで待つ必要があります </p>
<p>もう1つは、「HuangdiNeijing」が男性を8年周期にするためです。<br>16歳の時、大きく変わった気がしましたが、今回は腫れ、怖かったです。<br>しかし、24はまだ避けられず、瞬く間に数日が経過しました<del>~</del> </p>
<a id="more"></a>

<h4 id="ギャップイヤー"><a href="#ギャップイヤー" class="headerlink" title="ギャップイヤー"></a>ギャップイヤー</h4><p>最も初期のアイデアは、おおまかにその神のポストから来ました：<br>1年で完全なコンピューターと1週間で線形代数<br>TMを見た後はショックを受けたとしか言えませんが、今でもこのようにプレイできます。 </p>
<p>私は自分を売るしかないのです<br>しかし、私はそうすることを望んでいませんでした、そして私はいつも冷やすために半年または1年かかる機会を見つけたいです </p>
<p>もともと1。5年で企画を始める予定でしたが、もうすぐチャンスが来ると思いました。 </p>
<ol>
<li>上司はやめた </li>
<li>新しいプロジェクトマネージャーはオフィス政治に従事します(私がフラッシュした後、誰もが半分以上を去りました) </li>
<li>プロジェクトは「人月の神話」の死の計画に属しており、急ぐことはありません。 </li>
<li>家主は部屋の紙を一新し、人々を追い出したいと思っています… </li>
<li>少し苦労して稼いだお金 </li>
</ol>
<p>見えない手が私を押しているように感じました<br>この場合、天候に合わせて、安い労働力の販売を続けることを断固として拒否します </p>
<h4 id="親"><a href="#親" class="headerlink" title="親"></a>親</h4><p>ブログで言及されているように、ママとパパは一種の昔ながらのものです<br>それで彼らは私が仕事を辞めたか、仕事を探していなかったと聞きました。彼らは言葉を失いました。 </p>
<p>この点で、私は8つの間違ったことをしていると感じています<br>私は独立しています。しばらくの間、彼らにとって頭がおかしいように見えることをしました。私は以前に彼らと喧嘩したことがなく、毎日私を殴ることさえしません。 </p>
<p>中国の新年は原則として悲惨なはずです。妻がいなければ、まだ仕事はありません。<br>その結果、私はランタンフェスティバルまで滞在して去りました、私の義理の妹はショックを受けました </p>
<h4 id="チーズは力です"><a href="#チーズは力です" class="headerlink" title="チーズは力です"></a>チーズは力です</h4><p>私はフルタイムで勉強しましたが、1年のほとんどで100冊の本を読んだのは残念です。 </p>
<p>しかし、そうは言っても、それはこの数で測定されるべきではありません<br>たぶん、数冊の本で道を啓発できる人もいれば、本を読まない人もいます。 </p>
<h4 id="ブログ"><a href="#ブログ" class="headerlink" title="ブログ"></a>ブログ</h4><p>Githubがついに稼働し、マークダウンが書き込みます<br>脳損傷シリーズを開きました。ゆっくりとコーディングしましょう </p>
<p>しかし、プログラミングで書かれたものはほとんどないことがわかりました </p>
<p>それ￣△￣私は本当にプログラマーですか？ </p>
<p>いろいろな疑問がありますが、見習いとして子供をだましました </p>
<h4 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h4><p>私はrMBPを購入しましたが、最終的にはGhostシステムを毎日使用していません(Xcodeが今までドラッグしていました…)<br>友達のミニを手に入れてとても気分が良かったです。すぐにAirを手に入れました。1か月使用した後、私は本当に本を読んでいて、ゲームをしていなかったことがわかりました…<br>6が出ると、ライン全体がAppleに置き換えられます<br>普段は友達と映画を見たり、バーベキューをしたり、バルコニーで日光浴をしたり、本を読んだりしています。 </p>
<h4 id="やっと"><a href="#やっと" class="headerlink" title="やっと"></a>やっと</h4><p>常に終わりがあるのは残念です<br>ラッセルを引用するには： </p>
<blockquote>
<p>機会があればまたやりたいです </p>
</blockquote>
<h3 id="2014-01-10-23-32-33"><a href="#2014-01-10-23-32-33" class="headerlink" title="2014-01-10 23:32:33"></a>2014-01-10 23:32:33</h3><p>去年のまとめを覚えていますが、一番成長した年だと言いましたが、今年もそう言うようです。<br>未完成のものもあり、年末を振り返って一気に突破することはできません。 </p>
<p>過去2年間の卒業を振り返ると、あらためて生きているような気がします<br>もちろん、実際のプロセスは段階的かつ直線的です。突然の変化があった場合、それは2番目のパーソナリティであると推定されます。 </p>
<p>前者の私は愚かだと要約することはできません </p>
<p>来たい理由： </p>
<blockquote>
<p>古代に良い人は愚かになるでしょう </p>
</blockquote>
<p>後で、私は多くの魔法の概念に触れました、私はこれらのことが真実であると信じて喜んでいます </p>
<p>何もすることがないので、私はマインドマップをレビューしました。ほとんどが1、6か月前です。 </p>
<p>いくつかのポイントが見つかりました： </p>
<ol>
<li>問題が発生し、解決策は直接連絡されませんでした </li>
<li>いくつかの学習理論が正しくないか、私には適していません </li>
<li>非現実的な目標 </li>
<li>いくつかのノードが完成しました(とても幸せなO(∩_∩)O ~~) </li>
</ol>
<h3 id="2013-12-31-23-46-22"><a href="#2013-12-31-23-46-22" class="headerlink" title="2013-12-31 23:46:22"></a>2013-12-31 23:46:22</h3><p>これは…良い要約はどうですか？ ？ ？<br>再びフェイススラップ<br>前のリストは終了していません<br>夕方にCodecademyでRubyをブラッシングしましたが、来年になると思っていました。100％ではなく、EPに関係なく、今まで12ポモドーロでブラッシングしてきました。<br>しかし、時には、最初の鋼で突破口を開くことができるわけではなく、科学的でもありません。 </p>
<p>それは言われています： </p>
<blockquote>
<p>諦める方法を知っている人は、目の前の利益と損失をあまり気にしません。彼らは広い心とビジョンを持っています… </p>
</blockquote>
<p>それを忘れて、自分に嘘をつくのは無意味です<br>何も言わないで、サンシン、私は眠っています、そして私は明日チケットを手に入れなければなりません </p>
<p>これは終わっていません。2日後に再び戦い、要約して続行します<br>つづく… </p>
<hr>
<h3 id="2013-12-20"><a href="#2013-12-20" class="headerlink" title="2013-12-20"></a>2013-12-20</h3><p>最近は頭が痛くて、2013年がもうすぐ過ぎていくのを見てきました。数日前に仕上げ作業をする予定で、タスクを追加しませんでしたが、今は最後の仕上げを見るだけでよくあることです。<br>特にマックが到着した後、あらゆる種類の親しみやすさ、さらに2日間の遅延 </p>
<p>To-Doリストをすばやくリストし、頭から離れます </p>
<ul>
<li>腹立たしい操作 </li>
<li>ウィングチュン：マーキング </li>
<li>10冊以上の未完成の本 </li>
<li>ESL </li>
<li>この要約 </li>
<li>ブログの更新/概要 </li>
</ul>
<p>昨年のまとめは3月まで延期され、今年は暗くなってきています </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>読書計画</title>
    <url>/ja/Reading-Plan/</url>
    <content><![CDATA[<p>2014-04-08 </p>
<p>前回、計算ミスがあったため、Luzhuは高速読み取りが行われたと考えました。<br>訂正後、私は真実を知っています。 </p>
<a id="more"></a>

<hr>
<p>Airを購入した後、私は愚かに数ヶ月を読んで過ごしました<br>たった2日前にゲームセンターを発見しましたが、iPadがゲームのプレイに使われていると言われるのも不思議ではありません。<br>2日間回収できません<br>それから私はゲームの報酬メカニズムと読書の刺激性について考えました </p>
<p>読書は長期的な報酬プロセスであると言ったのを覚えています。そのため、時間単位ではまったく報酬を感じることができません。<br>内部ドライブは意志力の乱用であると盲目的に言う </p>
<p>潜在意識がこれらを理解していない場合、それは非常に退屈に感じ、あなたをコントロールします </p>
<p>1k以上を突破すると癖になってしまう気がしますが、気にしないでくださいが、数百の段階では特に不快です(╯﹏╰) </p>
<p>だから、ある種の視覚化があるのだろうか<br>純粋に使用されるKPIに似ています<br>そして、本のページ数は定量化が容易です </p>
<p>それから、オムニプランとガントチャートを長い間使っていましたが、思ったようには見えませんでした。 </p>
<p>私は怒っていて、自分で書いてウェブサイトやiosアプリにしたかったのですが、後でExcelで十分だとわかりました… </p>
<p>プログラマーモードは毎ターンあなた自身のために車輪を作りますか… </p>
<p>箱から出して考える </p>
]]></content>
      <tags>
        <tag>Reading</tag>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>夢の解釈</title>
    <url>/ja/The-Interpretation-of-Dreams/</url>
    <content><![CDATA[<p>小さな魔道士は自分がいくつかのトリックをしていることに気づきました<br>針は手の甲、赤い血の針管の内側に刺さっています<br>思わずC(一時停止？)キーを押しました </p>
<a id="more"></a>

<p>息苦しくて一瞬で窒息しそうな気がして、まるで真空状態になっていて、ピンホールから体の空気が漏れています。<br>小さな魔道士はおびえ、急いで再び一時停止ボタンを押しました </p>
<p>数秒後、小さな魔道士は安堵のため息をつき、ついに息ができると感じました。<br>彼は深呼吸をしました。「大惨事で死ななければ、祝福があります」と考える前に、彼は深刻な問題を発見しました。心拍はありません。 </p>
<p>今回は小さな魔道士が怖かった<br>なんてこった、どうしてこれが起こるのだろう、小さな魔道士は自分自身に考えた、呼吸はあるが脈拍がない、それの何が問題なのか？ </p>
<p>急性心臓停止は、エルフの最も重要な死因の1つです<br>幸いなことに、小さな魔道士は天の王朝であり、治療をあきらめず、自分でCPRを行いました。このとき、彼はすでにベッドに横たわっていました。 </p>
<p>ただし、高品質のCPRにはいくつかの重要なポイントがあります。 </p>
<ul>
<li>圧縮率は1分あたり少なくとも100回の圧縮です </li>
<li>大人は少なくとも5cmを圧縮します </li>
<li>各圧迫後に胸部のリバウンドを確認する </li>
<li>胸部圧迫の中断を最小限に抑える </li>
<li>過換気を避ける </li>
</ul>
<p>このように、小さな魔道士の現在の状況は単なる冗談です </p>
<p>また、血液循環がないということは、酸素とのエネルギー交換がなく、身体の活動が徐々に止まっていくということです。<br>しかし、私は動くことができ、それでも自分自身に胸部圧迫を行い、そのような明確な意志を持っています<br>小さな魔道士は戸惑いましたが、彼は自分自身を治療するために立ち止まりませんでした。 </p>
<p>しばらく一生懸命働いた後、彼は目を覚ました… </p>
<p>夜遅く、周りに音が出ない<br>悪夢を見るときはいつでも、小さな魔道士が目を覚ますと、彼の手が心臓の位置に押し付けられていることに気付くことがよくありますが、今回は右側にあります。 </p>
<hr>
<p>マスターアカデミーの1年生の時、小さな魔道士は催眠術にさらされ、それをした後はとてもリラックスして快適だったと思います。その後、毎晩寝る前に一度聞いて、睡眠の質が急上昇しました。 </p>
<p>偶然、小さな魔道士は古代の本に変わった<a href="http://book.douban.com/subject/1201821/">人間の心の謎を解き明かす</a><br>この本が厚すぎるのは残念です。本の返却期限に達すると、小さな魔道士は半分しか読めなくなります。 </p>
<p>しかし、チートはチートです。たとえば、メイ・チャオフェンは、チウイン聖書の半分しか手に入れませんでした。これは、キウ・チュジや他の古い方法を数秒で殺すのに十分です。 </p>
<p>小さな魔道士はフロイントのオエディプス理論に唖然としましたが、「夢はある願いを叶えることです」と彼にインスピレーションを与えました<br>いくつかの夢は自分で見つけることができます </p>
<p>一見科学的な説明と催眠ハローのボーナスのおかげで、小さな魔道士の夢は徐々に消えていきます </p>
<p>PS：数年後、小さな魔道士はこの本をもう一度めくり、残りの半分を読み、夢をコントロールするという説明を見ましたが、一文しかありませんでした。 </p>
<blockquote>
<p>夜寝て夢を見ていることをはっきりと知る人もいるので、自分の意志で夢を導く力があるようです。 たとえば、この種の夢想家が夢に満足していないとき、彼は目を覚まさずに夢を中断し、新しい方向に始めることができます。 </p>
</blockquote>
<p>小さな魔道士は幸運が人々を作ることをため息をつくことができるだけです、それはこれに非常に近いです、あなたがそれをひっくり返すことを主張したならば、あなたはそれほど多くの回り道をしなかったかもしれません。<br>同じように別のことがあります。後で機会があれば話します[ピット] </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>複数の睡眠</title>
    <url>/ja/Polyphasic-Sleep/</url>
    <content><![CDATA[<p><a href="http://book.douban.com/subject/7067548/">パワフルスリープ</a>で述べたように </p>
<blockquote>
<p>寝過ぎで、睡眠の質と同じくらい精神状態が悪いのが現実です。 これは、彼らが自分の体の根底にあるエネルギーと睡眠のメカニズム(エネルギーと睡眠のメカニズム)を認識していないために起こります </p>
</blockquote>
<p>この文章は、ずっと昔、小さな魔道士が時々10時間眠ったことを指摘していますが、目が覚めたとき、彼はまだ疲れていて、眠くて、エネルギーが不足していると感じました。 </p>
<p>チーズは力です<br>その後、小さな魔道士は彼の深い睡眠とREMサイクルに従って適切な調整を行い、光を強化しました(それは光合成ではなくメラトニンであることに注意してください) </p>
<p>ヤリの強い仕事の下でも、睡眠の質は直線的に改善されます </p>
<a id="more"></a>

<hr>
<p>その後、小さな魔道士は魔法の[Da Vinci Sleep](<a href="http://zh.wikipedia.org/wiki/%E5%A4%9A%E9%98%B6%E6%AE%B5%E7%9D%">http://zh.wikipedia.org/wiki/%E5%A4%9A%E9%98%B6%E6%AE%B5%E7%9D%</a> A1％E7％9C％A0)、多相睡眠としても知られています </p>
<p>当時、小さな魔道士はかなり馬鹿げていたので、実際に試してみたところ、日中の仕事が遅くなりました。<br>もし彼が<a href="http://book.douban.com/subject/3662227/">私的な神話</a>を見ていたら、彼はそのような愚かなことをしなかっただろう。 </p>
<p>実際、NREMREMにはかけがえのない効果があります<br>第一に、REMは人間の特許ではなく、哺乳類や鳥に発生します。第二に、NREMの段階で「感情」と表現される場合があるため、現時点では夢はありませんが、自由に短縮できるわけではありません。 </p>
<p>同時に、これを試した戦士の中には、ほとんどが月に基づいている人もいます。10年間成功している栗はなかったようです。 </p>
<p>しかし、小さな魔道士は、この方法を使用してTOEFLをテストした子供の論文6 + 3 \ * 20 ‘に触発され(夜6時間、日中3期間で20分)、独自の方法を完成させました。 </p>
<p>その後、夢はありませんでした </p>
<hr>
<p>通常、小さな魔道士は幸せなはずです。このとき、彼は<strong>催眠術</strong> [ピット、背中を埋める]を通してスムーズに深い眠りに入ることができ、目覚めた後、彼は奇妙な子午線[ピット]の8つの子午線を開いたかのように全身が緩んでいます。 </p>
<p>しかし、小さな魔道士はまだ落ち込んでいます。数ヶ月間夢を見ないことは、スキルを失うことと同じであり、このようなことはこれまでに起こったことがなく、彼の人間の脳に何か問題があるかどうかは疑いの余地がありません。 </p>
<p>先に述べたように、小さな魔道士は、フロイトの夢の解釈理論に基づいて、彼の潜在意識が魔法のようなことをしている様子をすでに見ることができます。<br>しかし、今は夢がありません。これはどのように説明できますか？小さな魔道士には欲望や欲望がないのでしょうか？ </p>
<p>小さな魔道士は、<a href="http://book.douban.com/subject/1316093/">Beyond Inferiority Complex</a>を見るまで、長い間戸惑いました。 </p>
<p>アドラーは、個々の心理学における夢の研究で言及しました： </p>
<blockquote>
<p>夢の意味が人生に特定の感情を残すことである場合、感情に影響されたくない人を見つけることがよくあります。ほとんどの場合、彼らは科学だけを信じています。このタイプの人は夢を見る可能性が低くなります。 人々はまったく夢を見ません。 </p>
<blockquote>
</blockquote>
<p>夢の中で提供される解決策は、実際には、目覚めているときに考える解決策よりも悪いものです。 言い換えれば、夢を見ているとき、個人は睡眠の過程で問題を解決することに等しいです。これは過度ではありません。 </p>
</blockquote>
<p>小さな魔道士は安心し、すぐにメモを取り、記憶を強めました。 </p>
<p>残念ながら、これらの本は幼い頃から、暗闇の中で象に触れた半盲の人たちのものだとは知りませんでした。誰もが象全体に触れたと思っていましたが、実際は体幹、足、尻尾にしか触れていませんでした。 開拓者として、エフライムは惜しまず、象の生殖器官に触れただけだったようです。 </p>
<p>江子に関しては、小さな魔道士は常に「感情に影響されたくない人」であることに満足してきました。<br>彼が接触するまで-Qingmingmeng </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>20日でGoを学ぶ</title>
    <url>/ja/Learn-Go-in-20-days/</url>
    <content><![CDATA[<p>ログを見て20日も経っていませんでしたが、タイトルが16で変でした。10の倍数はありません。 </p>
<p>まず第一に、学習時間は環境から切り離すことはできません </p>
<p>デュードロップが大学にいたとき、私は「最初に言語を学ぶ」ことで傷つきました。卒業したとき、私はCしか知りませんでしたが、それを学びませんでした(他の言語はプログラミングの知識を広げます) </p>
<p>だから泥はもっと速いはずです！ ！ ！ </p>
<a id="more"></a>

<p>少しだけ言って疲れる＞﹏＜急いでステップを投稿 </p>
<ol>
<li><p><a href="http://book.douban.com/subject/24316255/">Go Web Programming</a> </p>
<p>後ろの型宣言を除いて、GolangとCの構文は非常に似ており、少なくともObj-Cほど苦痛ではなく、構文上の砂糖を渡すことができます。<br>次に、Webプログラミングの側面があります。詳しく調べるのにそれほど時間はかかりません。 </p>
</li>
<li><p><a href="http://go-tour-zh.appspot.com/#1">Go公式ガイド</a> </p>
<p>これはコンピュータ環境と同等です。いくつかの使用法をテストしてください </p>
<p>上記の2つの手順に慣れたら、楽しみのために何かを書くことができます。<br>たとえば、LuzhuはZhihu DailyホームページのWebバージョンを作成しました。<a href="http://zhihudaily.ahorn.me/">ここをクリック</a>をクリックしてください。<br>当時の開発の一部とソースコードは<a href="https://github.com/leihao0/GO-ZhihuDaily">こちら</a>です。 </p>
<p>もちろん、Githubは別のスキルです </p>
</li>
</ol>
<p>3.フレーム、<a href="https://github.com/go-martini/martini">Martini</a>露滴用 </p>
<p>   フレームワークは別物のように感じますが、話せても、この声に基づくフレームワークは習得に時間がかかります。たとえば、Ruby自体はRORで完全にカバーされています。 </p>
<p>   そのため、フレームワークを開いたときに使用することを期待していませんでしたが、後でルーティングマジックを自分で実装する必要があると書かれたので、 </p>
<p>パフォーマンスについてはいろいろな議論があるので、話はしません </p>
<p>ヒューマンウェアは最も重要なことなので、プログラマーの観点からは、Golangは依然として非常に優れています。これは静的な音声であり、Json変換の苦痛と絶え間ないチェッカーを除いて、ある程度動的言語のように書くことができます。 外(私は本当にそれを黒くしていません!!!) </p>
<p>さて、Rubyを少し使ってここに来ました。Rubyはかっこいいので振り返ってみると違和感があります。 </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>明晰夢</title>
    <url>/ja/Lucid-Dream/</url>
    <content><![CDATA[<p>この世界は本当に素晴らしいと言わざるを得ません。あなたが知らないことは、それが存在しないという意味ではありません。 </p>
<p>小さな魔道士が「夢をコントロールする方法を教えて」の投稿を読んだ後、人全体が唖然としました。<br>前回のインセプションは完全に映画と見なされていたので、見て忘れてしまいました。現実的な根拠があるとは思っていませんでした。<br>本当に専門家が戸口を見て、素人が興奮を見て<br>私自身の愚かさのために、ゴーストプレスのような忘れられないものは二度と現れませんでした </p>
<a id="more"></a>

<p>PS：インセプションの原型は筒井康弘<a href="http://book.douban.com/subject/4887589/">ドリームディテクティブ</a>のようです。時間がない場合は、アニメ映画[レッドペッパー](http：// movie.douban.com/subject/1865703/)<br>ただし、浅いものから深いものへの非決定論的多項式(NP)の問題を説明し、多くの例を示しているため、小説をお勧めします。 </p>
<p>その後、小さな魔道士がグーグルに留まり、バイドゥ・ルシッド・ドリーム・ポスト・バーを見つけ、世界の果てにいる子供たちを見た。あなたは「素晴らしい世界を逃す」ことができ、それから蟻の夢の空間に行くことができる。<br>これらのどれも彼を納得させることができない場合、彼はTEDで[脳卒中後のハーバード神経科学部の医師の気持ち](<a href="http://v.163.com/movie/2013/3/6/B/M92INA100_M92INHT6B">http://v.163.com/movie/2013/3/6/B/M92INA100_M92INHT6B</a> .html) </p>
<p>なぜ小さな魔道士はそんなに興奮しているのですか？<br>Qingming Dreamは大規模な3Dゲームとしてプレイできるだけでなく、最も重要なことは、夢をコントロールすれば、夢の中で何でもできると言われていることです(✧≖´◞౪◟≖｀) </p>
<p>小さな魔道士はすぐに実験を開始し、その後数回成功しましたが、そのすべてが詳細に記録されています、抜粋 </p>
<hr>
<p>初めて： </p>
<blockquote>
<p>リトリートを使用して眠り、ベンベンを抱きしめ、ソフトウェア、6先の尖った星、3つの変換方法(トリガー！実際にはすでに眠っています。それ以外の場合は深夜のどこかからノートブック)を見て、ベッドを叩き、全身に無感覚な毛穴があります。 全部開いたようで、すぐ起きました！ ！ ！<br>体の外？ たった3日目ですが、ワクワクして体に戻ってきました…<br>すると、手足がなく、手足がなく、白く光る東洞であることがわかりましたが、端は弧状でした。これはエネルギー状態ですか？ それなら何があっても出られない次のステップは目を開けないことです<br>すると目を開けると、バルコニーのドアが開いているのがわかりました。外の馬や馬の音が聞こえるのが少し怖かったです。恐らく怖かったのですが、本当に目が覚めたら、ドアがきちんと閉まっていることがわかりました。 音<br>ノートを取り出し続けると、また全身がしびれます…<br>下の漠然とした記憶はカラオケホールに行き、学校に戻り、バス、タクシー、電線の修理、それは普通の夢になりました… </p>
</blockquote>
<p>次回： </p>
<blockquote>
<p>夢の中で学校に通っていたので、ctrlを押さえて飛べると思い、シフトを加速させて、無重力で長時間遊んでいました。<br>それから小動物コンペのQバージョンがあります。私が飛ぶところだったのですが、突然緑色の小動物がマコロフ(Modern Warfare 3)またはTバッグ(Prison Break)になりました…彼は私を捕まえたかったのです。 、私はただ漂流しました… </p>
</blockquote>
<p>次のようなものがあります。<br>ジョブズの「あなたの時間は限られている」は、小さな魔道士に彼の夢の中で重い教訓を教えました<br>そして夢の中で、大学との不明確な関係は閉ループを完了し、前進し続けることができます<br>そして、「人間の心の謎を解き明かす」で述べた夢は、小さな魔道士が生きることの意味をよく疑問に思うので、少し夢の中で彼に与えて殺し、ヤに人生の素晴らしさを知らせます。 </p>
<p>＃＃方法<br>オンラインゲームはたくさんあり、それぞれに独自のプレイ方法があります。実際、必要なのはコアアイデアをマスターすることだけです。<strong>夢を夢見て、夢をコントロールする</strong> </p>
<ol>
<li>朝起きたら、夢を記録する必要があります。夢を思い出せなくても、書いたり描いたりする必要があります。<br>通常の短期記憶は5分でクリアされるので、すぐに夢を記録しないと、夢はすぐに忘れられてしまいます </li>
<li>日常生活の中で、「夢を見ているのか」を思い出してください。<br> 習慣は夢に持ち込むことができます。原則は次のように参照できます。<a href="http://book.douban.com/subject/20507212/">習慣の力-なぜ私たちはこのように生き、このように働くのですか？ </a> </li>
</ol>
<p>詳細については、<a href="http://book.douban.com/subject/4740779/">ドリームガイド-不思議な清明の夢の分析</a>を参照してください。 </p>
<p>また、明快な夢よりも進んでいる可能性のある状態、つまり夢のない状態、つまり純粋な意識の状態についても説明します。 </p>
<p>PS：<br>ここの夢のない人は、催眠術をかけた後、プーケット島で夜明けまで眠るような小さな魔道士ではありません。<br>「現在の力」に完全に存在している状態かもしれません<br>また、脳がREMを進化させたとき、まだ言葉が出ていないので、私たちの夢はしばしば画像の形で提示されます </p>
<hr>
<p>実は、ジメンだとしても、そういう恐怖を感じずにはいられません。<br>奇妙な音、モンスター、骸骨など、日常生活のシーンだとさらに恐ろしいものになります。<br>人間の遺伝子に根ざしたファイトオアフライトのため、この時点で目を覚まさないようにするのは難しいです </p>
<p>なぜなら-それが本当の場合に備えて！ </p>
<p>ドンファンシリーズ<a href="http://book.douban.com/subject/4199618/">TheArt of Dreaming</a>では、清明の夢は別世界と表現されていますが、私たちの日常生活は幻想的です<br>それはアバロンのように聞こえます-英雄的な魂が休むための理想的な家 </p>
<p>ナンセンスに聞こえますが、Zhuang Shengxiaoは蝶を夢見ています。誰が、どの世界が現実であるかを知っていますか？ </p>
<p>##真実は いつも 一つ<br>コナンの言葉を借りれば、多くのことを言ってきました。真実は1つだけです。 </p>
<blockquote>
<p>月収が50,000を超える場合は、ヨーロッパとアメリカでのミッドレンジ旅行を検討してください。<br>月収30,000は、ヨーロッパのローエンド旅行を検討できます<br>月収1万〜2万、東南アジアツアーをお選びください<br>月収は1万円未満ですので、国内旅行をお選びください<br>月収は5000未満です。州ツアーを選択してください<br>月収3000円のお出かけをお選びください<br>2000未満のピーナッツオイルを選択してください<br>1000未満の場合は、トレンチツアーを選択してください<br><strong>収入がない場合</strong>は<strong>スリープウォーキング</strong>を選択してください！<br>みなさん、ハッピーメイデイ！ </p>
</blockquote>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>睡眠麻痺</title>
    <url>/ja/Sleep-Paralysis/</url>
    <content><![CDATA[<p>かつて、小さな魔道士がまだマジックアカデミーで魔法の見習いであったとき、彼は2回経験しました[ゴーストプレス](<a href="http://zh.wikipedia.org/zh/%E7%9D%A1%E7%9C%A0%E7">http://zh.wikipedia.org/zh/%E7%9D%A1%E7%9C%A0%E7</a> ％98％AB％E7％97％AA％E7％97％87 *) </p>
<p>初めてから4年が経ちました。当時の小さな魔道士は、それが「ゴーストプレス」と呼ばれることすら知らなかったのですが、完全に途方に暮れ、「スピリチュアルイベント」と定義しました。 </p>
<p>4年前に戻りましょう(<em>括弧内の「夢の説明」の理論を使用した分析</em>)： </p>
<p>その時、小さな魔道士は正午に買い物から戻ってきて、昼寝のために眠りについた。<br>さらに、彼は風邪をひいていて非常に不快だったので、小さな魔道士は催眠療法を使い続けました<br>前述のように、小さな魔道士はこの方法を使用した後、夢を見るのに問題はなく、2年近く問題はありませんでした。 </p>
<p>そして今度は彼はポンドを食べるでしょう </p>
<a id="more"></a>

<hr>
<p>小さな魔道士はゆっくりとリラックスし、突然彼は内部を見る能力があることに気づき(<em>タオイストの練習では内臓を見ることができます</em>)、胃をスキャンすると大きな腫瘍が見えました。<br>ディジー、小さな魔道士の考え、これは末期の病気であり、その後画面が縮小されます。前の画面は何度も拡大された象です(<em>腫瘍細胞の高校生物学の本</em>) </p>
<p>… </p>
<p>彼が再び意識したとき、小さな魔道士は湖の橋の上にいることに気づきました(<em>地元の湖の地図</em>)<br>突然、水から伸びる手の絵が点滅します(<em>Plants vs. Zombies</em>)<br>橋から湖の半分を渡ったとき、誰かが水に落ちたかのように、右側に暴動がありました(<em>Jumping Lakeのニュース)<br>それから私は水中で子供を見ました(<em>彼が若いときに小さな魔道士が特定のドアを通り過ぎたとき、小さな友人はそれが中に幽霊が出ると言いました、そして彼は中を見てはいけません(*ピンクの象を想像しないでください</em>)、そうでなければ彼は幽霊を持っているでしょう。 中を覗いて、忘れられない写真を垣間見ました*)<br>小さな魔道士は弧を描いて船に降り、水から伸びる彼の手の絵が再び点滅した。 それから彼は飛んだか水に落ちましたか？ 画面が約90度傾いています(_CSが死亡し、2階から落ちました＆「前回水に落ちました」-Angel Beats</em>) </p>
<p>その後、小さな魔道士はそのことに巻き込まれました。 どれくらい経ったかわかりません瞬間かもしれません<br>それから彼は全身にしびれ、頭の中でブーンという音を感じました(<em>映画に登場したUFOの種類は実際には脳の波です</em>) </p>
<p>小さな魔道士はおびえています、幽霊に取り憑かれ、占領されようとしているという恐怖があります<br>彼はいつもそれを取り除きたいと思っていて、それに太陽を3回照らそうとしましたが、最後に少ししかめっ面で赤い炎が出ました(<em>Warcraft Flame Lord’s Lava Creature</em>)<br>この時、ブーンという音がどんどん大きくなり、全身がしびれます。 </p>
<p>彼が自分でそれを思いついたのか、彼の隣で救助している人が思い出したのかはわかりません。目を開けてください。<br>これは間違いなく命を救う藁であり、小さな魔道士は必死にそれをしました、しかし彼は彼の体を制御できないようで、彼は至る所で麻痺し、そして彼は目を開けることさえできませんでした。<br>当時、小さな魔道士は「目を開けないと植物になる」という気持ちしかありませんでした。<br>何度か頑張った後、ようやく右目を開けて寝室の天井が見えたが、薄暗くなり、幻想と音がすぐに消え、昼寝をしていることに気づいた。 </p>
<p>耐えられる「夢の説明」がありましたが、それらのいくつかは小さな魔道士の説明を超えていて、一連の質問が提起されました：<br>それらがすべて幻想であるならば、なぜ全身が麻痺しているのですか？<br>彼はしばらく待ってから腕を操作してイヤホンを外すことができ、手足をどのように動かすかを考える必要はありませんでした。私たちの意識に応じて動くことができました。<br>精神活動は身体的損傷を引き起こす可能性がありますか？<br>また、当時は3時過ぎでした。1日で太陽の陰に属しますが、幽霊が逃げるには十分ではありません。<br>そして、目を開けないとどうなりますか？ 意識を失いました？ そのため、小さな魔道士は感情を感じず、精神的な影響もありませんでした。<br>それはまだ彼の心に残っていますか、それとも彼は出かけましたか？ それとも彼の一部ですか？ </p>
<p>要するに、ゴーストプレスの経験は奇妙で独特であり、特に初めて、科学的な指導なしでは、ゴーストの関連付けを行わないことは困難です<br>それ以来、小さな魔道士はしばらく戸惑い、数週間後に再びそれを経験しました。<br>最初の経験で、小さな魔道士はすぐに目を開けて、彼が終わったと思いました。 </p>
<p>別の期間の後、小さな魔道士はQドメインをブラッシングし、突然、Tiantianfaがブロックする予定の公開アカウントを送信して記事を投稿したことに気付きました。<br>夢をコントロールする方法を教えてください[スーパーテクノロジー] </p>
<p>リトルメイジは完全に愚かです </p>
<hr>
<p>PS：<br>実際、小さな魔道士を本当に納得させる答えは、<a href="http://book.douban.com/subject/5375620/">制御不能-全人類の最終的な運命と終焉</a>にあります。この本はMengbaganと矛盾しています。 AllFoolsからWisdomへの章は次のように述べています。 </p>
<blockquote>
<p>人間には脳がありますが、それは集中型でも中央型でもありません<br>…意識は、多くの小さくて無意識の神経回路の分散ネットワークから生まれます </p>
</blockquote>
<p>「TheSocietyof Mind」(The Society of Mind)からの引用もあります。1988年に発行されたMarvinMinsの哲学と人類の本からの段落： </p>
<blockquote>
<p>人間の精神活動と自然に進化した知覚システムは、無数の「忙しい存在」タイプのエージェントによって完了する単一の単純なプロセスで構成される大規模な社会です。 脳の高度につながった相互作用メカニズムから、さまざまな精神的現象が現れます。 </p>
</blockquote>
<p>不正確に言えば、人間の脳はおそらくGPUのようなもので、多くのコンピューティングユニットがあり、誰もが自分の業務を担当し、一緒になって現在の「あなた」が形成されます。<br>そして、寝ているときに、体をコントロールしている部分が休眠状態で意識細胞の部分が動いていると、目が覚めているのに体をコントロールできないという恐ろしい現象につながる可能性があります(脳卒中患者？) </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac OSXにリーバーをインストールする方法</title>
    <url>/ja/how-to-install-reaver-on-mac-os-x/</url>
    <content><![CDATA[<p>更新：2017-05-24 09:03:10 </p>
<p>申し訳ありませんが、この投稿では、以前は\ * \ *の危険性に気づいていませんでした。 </p>
<a id="more"></a>

<p>去年の10月に私のネットワークは遅れていました、そして私は新しいネットワークが必要とした国民の日の休暇中に一時的に使用されたwifiを再び平均しました。 </p>
<p>NASで<em>オープンエールコース-音楽を聴く</em>をプレイしたところ、私のテレビ(Androidシステム)に「このウェブサイトは私専用です。何か問題がありますか？」というサブタイトルが付いていることがわかりました。 </p>
<p>この文に驚かされました。私のNASにはPandoraBoxシステムがあり、ブリッジとして使用しています。通常、私のテレビはルーターに表示されません。 明らかに、このwifiは釣り用wifiであり、テレビがハッキングされていました。 </p>
<p>したがって、一部の愚かなアプリケーションがまだhttpを使用している場合、すべてのデータが公開されます。 httpsでさえ<a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">MitM</a>に問題があります。 「製品には、iOSとmacOSのキーチェーンにログイン信頼証明書があると書かれていますが、Androidとは何ですか？ 一部のデバイスには独自のバックドアがあります。 </p>
<p>私のテレビは、_Android Debug Bridge(adb)Wireless Debugging OverWi-Fi_である <code>adb connect &lt;TV IPaddress&gt;</code>を使用していると思います。 </p>
<p>しかし、後でほとんどのパスワードを変更しました。 </p>
<p>したがって、技術的な調査のリーバーを試すことはできますが、<strong>使用することはできません</strong>。 </p>
<hr>
<p>更新：2015-07-27 13:14:32 </p>
<p>2014-05-11に書いたのですが、1年遅れて、 <code>Homebrew</code>で簡単にリーバーをインストールできるようになりました。 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install reaver</span><br></pre></td></tr></table></figure>

<p>提案してくれたRustamに感謝します </p>
<hr>
<p>私は常にvmwareでbeiniを使用しており、追加のUSBワイヤレスアダプターをコンピューターに接続するたびに使用します。 </p>
<p>Macを持っていたとき、beiniのVMXをWindowsからMacにコピーしただけでした。つまり、ワイヤレスアダプターを使用する必要がありました。 </p>
<p>実際、 <code>minidwep</code>または<code>inflator</code>はすべて強力なツール <code>Reaver</code>を使用しています…ご存知のとおり)Macはunixベースのシステムですが、<code>Reaver</code>を直接実行できます。 </p>
<ol>
<li>ダウンロード<a href="https://docs.google.com/file/d/0B3tHnfnS08GycG1fVENETEdvazA/edit">reaver-osx.zip</a><br>(ヒント：元のreaver-1.4はMacで直接 <code>make</code>を使用できません) </li>
<li>reaver-osx.zipを解凍します。 </li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> reaver-wps/src/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<p>楽しんで、悪いことをしないでください:-) </p>
]]></content>
      <tags>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>天国にまっすぐ</title>
    <url>/ja/Highway-to-Heaven/</url>
    <content><![CDATA[<p>ビクトリア朝時代の最も偉大な英国の作家であるチャールズ・ディケンズは、2つの都市の物語で次のように述べています。 </p>
<blockquote>
<p>これは最高の時代であり、最悪の時代です。<br>これは賢明な時代であり、これは無知の時代です。<br>これは信頼の時代であり、これは疑いの時代です。<br>これは光の季節であり、これは闇の季節です。<br>これは希望の春であり、これは失望の冬です。<br>私たちはすべてを持っています、私たちは何も持っていません。<br>ここはまっすぐ天国に行き、ここはまっすぐ地獄に行きます </p>
</blockquote>
<a id="more"></a>

<p>もちろん、この記事はこの一節とはほとんど関係がありません<br>ここで引用されている理由は、これらの文が読みやすく、クレイジーでクールだからです。 </p>
<p>しかし、小さな魔道士は去って天国に行きました </p>
<p>天王朝の急速な発展のため息をつく必要があります。2年前、小さな魔道士が2つの太い紙から天国に行ったとき、Kシリーズだけが<br>実際、当時、ダンテの「ディバインコメディ」のように、Gシステムはありませんでした。ルートは次のように分かれています。 </p>
<blockquote>
<p>インフェルノ(インフェルノ)-パーガトリー(パーガトリー)-パラダイス(パラダイス) </p>
</blockquote>
<p>天国に行く前に、小さな魔道士はしばらく魔法の街に行かなければなりません。価格が数倍高いことは言うまでもありませんが、時間的には＞ = Kシリーズになります。 </p>
<p>街に戻ると、友人はお金を節約するためにハードシートを購入し、若いマスターをピットに誘い込むことに成功しました<br>もともと、小さな魔道士は魔道士アカデミーで魔法を練習している間、あまりにも一生懸命に努力しました。それは腰椎にいくつかの小さな問題を引き起こしました。<br>6時間の連続したバンプは、小さな魔道士の細い腰をほとんど壊しました。<br>それ以来、小さな魔道士はチケットを持っている限り横になることを誓った </p>
<p>1年後に直接Gシリーズを持ちたくありません。静かで、速く、きれいで、航海は2.5時間に短縮されます。 </p>
<p>でも江子でも電車の中でかなりつまらない<br>以前は、小さなウィザードは常に本を持ってきたり、電話で直接読んだりしていましたが、今回はコードアーティファクトがあり、当然非常に異なります </p>
<p>しかし、小さな魔道士はまだまだ心配していて、アーティファクトを犠牲にするかどうか迷っています。結局のところ、疫病や死などの通常のアーティファクトがいくつかあります。 </p>
<p>実際、小さな魔道士は、古代の喉が渇いた皮膚から最新の種類の疫病まで、この普通の魔法の武器を長い間使用して使用してきました。死にましょう。そして、小さな魔道士と1千日以上昼夜を過ごします。 </p>
<p>それは本当に良い思い出です。その時、小さな魔道士の腰もすり減り始めたので、機会があれば後で話しましょう。 </p>
<p>実際、メイジの小さな心配は完全に冗長です。理由は次のとおりです。 </p>
<p>小さな魔道士の目の小さな魔道士：<br>うわー、私は若い頃にアーティファクトを手に入れました、この男は簡単ではありません<br>他の人の目に見える小さな魔道士：<br>勤勉なプログラマー、電車の中でバグを修正する必要があります </p>
<hr>
<p>チップ： </p>
<p>実験があります：<br>他の人に物事を見てもらい、盗まれる可能性を減らすことができます<br>それが本当かどうかはわかりませんが、小さな魔道士はよくそれを使います<br>通りすがりの人もとても親切で、黒い白鳥の事件はありませんでした </p>
<hr>
<p>以前、小さな魔道士は小さなパートナーに、移行として一時的に1か月間、自分のコミュニティで農家の家を探すように依頼しました。 </p>
<p>それから彼はアリの闘争と呼ばれるものとベイディアオと呼ばれるものを知っていました </p>
<p>その環境…<br>そのノイズ…<br>その匂い… </p>
<p>また、ここのお店は、まるで話し合ったかのように、大きな音がするたびに次々と閉店し、小さな魔道士に絶え間なく刺激を与えていました。<br>次々と、小さな魔道士の寝室の鼻を鳴らす以上のもの </p>
<p>朝の3時に、最後の店がついに閉店しました<br>リトルメイジは今度はようやく眠れると思った<br>横になっているだけでまた大きな音がして、小さな魔道士は初期の店を売ることが次々とドアを開け始めたことに驚いた。 </p>
<hr>
<p>小さな魔道士は、今年はたくさんの詩や本を読んだので、1か月では足りないと思って、良い精神計画を持っています。 </p>
<p>英国放送公社(BBC)とデンマーク放送公社(DR)が各国のドキュメンタリーディレクターと共同で制作したドキュメンタリー「WhyPoverty？」の第8話を視聴した場合[“Reading to Poverty”](<a href="https://www.youtube">https://www.youtube</a> .com / watch？v = tcMzVgurk-0)、それほどナイーブであってはなりません </p>
<p>案の定、小さな魔道士が激しいショットをした後、数日後、結果は満足のいくものでした<br>面接の電話は2回のみで、コンバージョン率は20％未満であり、面接官は電話を切っています。<br>これは雑多で、アドバンテージがなく、退屈で、空虚な考えであるとも言われていますが、最も重要なことは、それがまだ呪文にうんざりしているということです。 </p>
<p>小さな魔道士は、心が痛むと夕食を食べませんでした。静かに農家の部屋に戻り、ラオジの「タオデジン」を読みに行きました。<br>その文を繰り返し使用します。 </p>
<blockquote>
<p>祝福が宿る不幸;不幸が横たわる幸運 </p>
</blockquote>
<p>自分を慰めに来てください </p>
<p>╮(╯_╰)╭ </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS開発者アカウントとその一覧表示方法</title>
    <url>/ja/ios-developer-account-and-app-store/</url>
    <content><![CDATA[<h2 id="開発者アカウントアプリケーション"><a href="#開発者アカウントアプリケーション" class="headerlink" title="開発者アカウントアプリケーション"></a>開発者アカウントアプリケーション</h2><p>途中、写真の提供が遅れて「スウィフト」のトレンドに追いついたのですが、4〜5日しかかからず、効率は非常に高かったです。 </p>
<p>最初は、2通貨のクレジットカードを使うと思いました。<br>その結果、時代は進み、今(2014年)は普通のクレジットカードでもいいので、とても便利です </p>
<p>PS：<br>99 \ $ == 688円？<br>税金を払わなければならないので… </p>
<p>たぶん私のアカウントはEテキストを転送し、返されたすべての電子メールはEテキストであり、その中には次のような文があります。 </p>
<blockquote>
<p>政府発行の写真付き身分証明書のPDFコピーが必要です。 </p>
</blockquote>
<p>「政府発行のID」がIDカードであることが判明したことを理解するのに長い時間がかかりました… </p>
<a id="more"></a>

<p>これ以上の遅れについてはあまり考えていませんでした。その結果、2日前にチャイナユニコムの公式ウェブサイトにアクセスしてカードを購入しましたが、電話のフィードバックでその理由がわかりました。 </p>
<p>この奇妙なことの理由は：アカウントの譲渡…<br>China Unicomは、ID番号を介して情報を照会できなかったと報告しました(これはなぜですか？)<br>PS：チャイナユニコムもかなり変です。QQメールボックスに送信されました。最初は嘘つきだと思いました… </p>
<h2 id="リストする方法"><a href="#リストする方法" class="headerlink" title="リストする方法"></a>リストする方法</h2><p>参照<a href="http://my.oschina.net/u/1245365/blog/201920">ここ</a><br>非常に詳細で基本的なステップバイステップの比較 </p>
<p>私にとって、私はこれらの2つの行き詰まった場所に遭遇しました： </p>
<h3 id="1-利用可能なIDはありませんでした"><a href="#1-利用可能なIDはありませんでした" class="headerlink" title="1.利用可能なIDはありませんでした"></a>1.利用可能なIDはありませんでした</h3><p>xCodeはこれを促します、私はアカウントを購入しました、どうしたのですか？<br>主に初めての場合は自動設定されない場合があります </p>
<p><a href="http://blog.csdn.net/kafeidev/article/details/8250051">こちら</a>を参照してください<br>インターフェースは同じではありませんが、よく見ると合格です </p>
<h3 id="2-iOS検証でMain-iPad〜ipad-storyboardcが見つかりませんでした"><a href="#2-iOS検証でMain-iPad〜ipad-storyboardcが見つかりませんでした" class="headerlink" title="2. iOS検証でMain_iPad〜ipad.storyboardcが見つかりませんでした"></a>2. iOS検証でMain_iPad〜ipad.storyboardcが見つかりませんでした</h3><p>以前に作成したときに使用したユニバーサルですが、後でどこでもiPhoneに調整しましたが、 <code>plist</code> O \ _ \ _O”の小さな暗いコーナーがあるとは思っていませんでした… </p>
<p>建設への参加：<a href="http://stackoverflow.com/questions/19873058/ios-validation-got-main-iphoneiphone-storyboardc-was-not-found">ここ</a> </p>
<p>その後、しばらくお待ちください。さらに4〜5日かかります〜電話をかけ直さないでください(&gt; \ _ &lt;) </p>
<hr>
<p>2014-07-01<br>7日間待った後、拒否されました、それは悲劇でした… </p>
<blockquote>
<p>2.2：バグを示すアプリは拒否されます<br>22.2：虚偽、詐欺的、誤解を招く表現を含むアプリ、または他のアプリと同様の名前やアイコンを使用するアプリは拒否されます </p>
</blockquote>
<p>よく見る時間がありません。 </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>あなたのライフスタイルを向上させる</title>
    <url>/ja/enhance-your-lifestyle/</url>
    <content><![CDATA[<p>[ある人が奇妙な街でシングルルームを借りています。小さなスペースでの生活をもっと面白くする方法はありますか？] ](<a href="http://www.zhihu.com/question/21752718">http://www.zhihu.com/question/21752718</a>)<br><a href="http://www.zhihu.com/question/23136740/answer/27439893?group_id=447934822">少し高いですが、買う価値のあるアイテムは何ですか？ </a><br><a href="http://www.zhihu.com/question/20840874/answer/27408093?group_id=441891457">購入後、生活の質と幸福が向上したために、お互いに気分が悪くなるのはどれですか？ </a><br>]部外者に知られていない良い商品やブランドはありますか？ ](<a href="http://www.zhihu.com/question/20228439/answer/27418171?group_id=444370212">http://www.zhihu.com/question/20228439/answer/27418171?group_id=444370212</a>) </p>
<a id="more"></a>

<p>1、2年前に初めて仕事をしたとき、小グループで借りた部屋の紙に遊びに行ったところ、女の子がキャビンをいろいろなもので飾っていて、とても暖かかった。 </p>
<p>当時の私の収入は彼女の2倍近くあり、私たちの生活空間と道を見ると、本当に逆のようです。<br>私はすぐに、生活の質と収入の相関係数が比例していないか、少なくとも当初考えられていたほどではないことに気づきました。 </p>
<p>それらの投稿が非常に長いことを知っています。しばらく読んでいますが、まだ読み終えていません。必要に応じていくつかを選択しました。 </p>
<h2 id="Cote＆Cielバックパック"><a href="#Cote＆Cielバックパック" class="headerlink" title="~ Cote＆Cielバックパック"></a><del>~ Cote＆Cielバックパック</del></h2><p>男性の場合、マウスキーが1Kであるかどうかは関係ありませんが、バッグはこの価格で非常に高価です。<br>支払いを待つ </p>
<h2 id="OKOフィルタージャグ"><a href="#OKOフィルタージャグ" class="headerlink" title="~ OKOフィルタージャグ"></a><del>~ OKOフィルタージャグ</del></h2><p>この奇妙なことがコークスを純粋な水に変え、雷は消えます(実際には高濃度のコークスを飲むために→_→)<br>でもまだお茶やコーヒーを作る必要があるので需要は強くありません </p>
<h2 id="Retina-MacBook-Pro-13"><a href="#Retina-MacBook-Pro-13" class="headerlink" title="~ Retina MacBook Pro 13 ~"></a><del>~ Retina MacBook Pro 13 ~</del></h2><p>開発アーティファクト+食べる男<br>このように、それは消費ではなく投資です<br>トップ15にない後悔 </p>
<h2 id="iPad-Air"><a href="#iPad-Air" class="headerlink" title="~ iPad Air ~"></a><del>~ iPad Air ~</del></h2><p>以前はキンドルを買うことに魅了されていましたが、後でパッドを避けられませんでした。<br>PDFを読むのはかっこいいです、キンドルは引き出しに投げ込まれます、キンドルを購入しなくても心配しないでください </p>
<h2 id="iPhone-6"><a href="#iPhone-6" class="headerlink" title="~ iPhone 6 ~"></a><del>~ iPhone 6 ~</del></h2><p>待って待って、最後に大画面が表示され、リリースを待つ </p>
<h2 id="BOSE-QC-20i-アクティブノイズリダクション"><a href="#BOSE-QC-20i-アクティブノイズリダクション" class="headerlink" title="~ BOSE QC 20i(アクティブノイズリダクション)"></a><del>~ BOSE QC 20i(アクティブノイズリダクション)</del></h2><p>全世界は静かです… </p>
<blockquote>
<p>感じる：<br>大きな価値、素晴らしい推奨 </p>
</blockquote>
<h2 id="Logitech-G700s"><a href="#Logitech-G700s" class="headerlink" title="~ Logitech G700s ~"></a><del>~ Logitech G700s ~</del></h2><p>G1からMX518まで、今度はワイヤレスに移行しましょう<br>でも今はゲームを減らして給料を待つ </p>
<blockquote>
<p>感じる：<br>11個のカスタムショートカットキー、実際には必要ありません…<br>1W6 DPI、フローティングのようなものです </p>
</blockquote>
<h2 id="Filco-87"><a href="#Filco-87" class="headerlink" title="~ Filco 87 ~"></a><del>~ Filco 87 ~</del></h2><p>長い間チェックしてみたところ、実際に緑軸、赤軸、茶軸、黒軸が何であるかがわかりました。 </p>
<p>rMBPに付属のキーボード+タッチパッドで十分だと思いました </p>
<p>その結果、Filcoを使用してWarcraftをヒットし、コードを再度コーディングしました<br>ノートブックに切り替えた後、すぐに違いが出てきました。すばやく押すと、キーキャップが柔らかく跳ね返りません(中毒…) </p>
<p>伝説的な<strong>静的容量キーボード</strong>：HHKBまたはRealforce<br>しかし、HHKBにはF1がなく、Realforceはとても醜いです… </p>
<p>また、真央に黙ってもらいたいのですが、オフィスは騒がしいですよね？その上、私はまだQC20を持っています<br>さらに、Warcraftをプレイするときにキーボードがクラッシュするのが好きです。磁気浮上キーボードはまだ概念であり、当然、機械的です。 </p>
<p>Filcoは間違っているように見えます<br>67個のキーがおかしいです。最も重要なことは、ヒーローを選べないということです。ああああああああああああああああああああああああ<br>104のキーパッドは必要ありません<br>だから87自分だけ </p>
<blockquote>
<p>感じる<br>Macbookのトラックパッドエクスペリエンスは実際に整っているとしか言えません<br>コードをコーディングするときは、ボードを使用して位置を特定します。手の動きは大きくなく、マウスはこれを行うことができません。<br>そのため、 <code>Vim</code>や<code>Emacs</code>などの純粋なマウスストリームが登場しました<br>ゲームをしているときにクラッシュする音はありません<br>測定されたAPM、それでもその数…<br>人に関連する… </p>
</blockquote>
<h2 id="ブラウンアイスレイザー"><a href="#ブラウンアイスレイザー" class="headerlink" title="ブラウンアイスレイザー"></a>ブラウンアイスレイザー</h2><h2 id="オーラルB電動歯ブラシS26"><a href="#オーラルB電動歯ブラシS26" class="headerlink" title="オーラルB電動歯ブラシS26 ~"></a><del>オーラルB電動歯ブラシS26 ~</del></h2><blockquote>
<p>感じる：<br>確かに私は間違っていて、両親のためにコピーを購入しました<br>今朝と夜あなたの歯を磨く </p>
</blockquote>
<h2 id="木製SPAバスタブ"><a href="#木製SPAバスタブ" class="headerlink" title="木製SPAバスタブ"></a>木製SPAバスタブ</h2><p>あなた自身の論文を持つことについて話しましょう </p>
<p>まあ、それは収入に関係しているようです… </p>
]]></content>
      <tags>
        <tag>Shopping</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS7プログラミングクックブック</title>
    <url>/ja/ios-7-programming-cookbook/</url>
    <content><![CDATA[<h1 id="クックブックの読み方"><a href="#クックブックの読み方" class="headerlink" title="クックブックの読み方"></a>クックブックの読み方</h1><p>なんてこった、ついに終わった、1000ページ以上！ ！ ！<br>内部のコードの80％を手動で入力したところ、コードに2つのバグが見つかりました<br>さらに、エラーが発生した場合、子供用シューズはGithubで<a href="https://github.com/oreillymedia/iOS7_Programming_Cookbook">oreillymedia / iOS7_Programming_Cookbook</a>に「リクエストをプル」できます。 </p>
<a id="more"></a>

<h2 id="群衆に適しています："><a href="#群衆に適しています：" class="headerlink" title="群衆に適しています："></a>群衆に適しています：</h2><p>一般的に、「クックブック」シリーズは辞書に似ています。何を使用し、何を検索するかについて、上下を確認する必要はありません。 </p>
<p>しかし、もう一度ブラッシングした後、関連する<strong>知識システム</strong>を構築することの利点は明らかです </p>
<p>適切ではありません： </p>
<ol>
<li>新入り </li>
<li>シニアiOS開発者 </li>
</ol>
<p>初心者は最初にこれらの2冊の本を読むことができます：<br><a href="http://book.douban.com/subject/6959487/">ヘッドファーストiPhoneおよびiPad開発</a><br><a href="http://book.douban.com/subject/24538384/">ビッグナードランチガイド</a> </p>
<h2 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h2><ol>
<li><p>まず、クラッシュに備えます→_→<br>放棄された辞書に戻ってひざまずく子供用の靴の数を考えてください </p>
</li>
<li><p><strong>キー</strong>であるチャプターを選択します。つまり、現在の作業に関連するチャプターを選択します<strong>単語を見逃さずにそれを見てください</strong><br>見たものはすぐに使えるので効果がいいです<br>非コード部分は原則とヒントですので、よく見てください </p>
</li>
</ol>
<p>3.約50％に達したら、フォーカス<strong>コードに目を向ける</strong><br>   現時点では、私は基本的に作者の物語の方法に精通しています。タイトルをスキャンし、基本的に何をすべきかを知っています。コードと推測をコードと組み合わせて、テキストをスキャンするだけです。 </p>
<p>4.あきらめる方法を知っている<br>   辞書を覚えても流暢な英語が話せないので、この本を完成させる必要はありません。<br>   たとえば、見てみると、iCloudなどは面倒だと思いました。データを同期するだけなら、バックエンドを直接設定したほうがいいので、スキップします。<br>   これは28番目のルールに沿ったものです。 </p>
<p>5.ペアリング<br>   一人で働くことの効果はグループ学習ほど高くありません<br>   しかし、あなたが見ることができるものは異なります。たとえば、私の友人はPythonクックブックを見ています。相互プロモーションを達成するには十分です。<br>   PS：半分以上見たとき、彼が翻訳版を見ていることに気づきました… </p>
<p>6.英語<br>   iOSのアップデートは速すぎます、最新は英語です、7はまだ翻訳されていません、8の公式バージョンがリリースされようとしています…<br>   だから、英語を上手に学ぶ、サンニアン </p>
]]></content>
      <tags>
        <tag>Books</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>コードの行数</title>
    <url>/ja/count-lines-of-code/</url>
    <content><![CDATA[<ul>
<li>iOS 7プログラミングレシピ*を読んでいたとき、突然、何行のObj-cコードを書いたかを考えました。 </li>
</ul>
<p>以前、まだWindowsオペレーティングシステムを使用していたときに、<a href="https://code.google.com/p/boomworks/">SourceCounter</a>を使用してこれを実行しました。 </p>
<p>ただし、<a href="https://code.google.com/p/boomworks/">SourceCounter</a>はMac OSXをサポートしていません。 </p>
<p>それで、私は興味深いコマンドラインを見つけました： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find . -name <span class="string">&quot;*.m&quot;</span> -or -name <span class="string">&quot;*.h&quot;</span> | xargs grep -v <span class="string">&quot;^$&quot;</span> | wc -l</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>“^$“ 空行<br>「wc-l」は単語数です </p>
<p><code>Perl</code>によって書かれた別のツールをお勧めします。 </p>
<p><a href="http://cloc.sourceforge.net/">CLOC-コードの行数を数える</a> </p>
<h4 id="インストール："><a href="#インストール：" class="headerlink" title="インストール："></a>インストール：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install cloc</span><br></pre></td></tr></table></figure>

<h4 id="使用法"><a href="#使用法" class="headerlink" title="使用法"></a>使用法</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cloc --exclude-dir=<span class="comment">#excludeDir, #dir1 #dir2 ...</span></span><br></pre></td></tr></table></figure>

<p>これが私のコードの結果です </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2014-08-19</span><br><span class="line"></span><br><span class="line">http://cloc.sourceforge.net v 1.60  T=20.51 s (67.8 files/s, 4427.5 lines/s)</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Language                     files          blank        comment           code</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">C++                            409           5440           4917          21968</span><br><span class="line">C/C++ Header                   250           2997           3436          10458</span><br><span class="line">Objective C                    298           3999           3720           9616</span><br><span class="line">XML                            184            408             97           6725</span><br><span class="line">HTML                            27            851             13           4743</span><br><span class="line">Java                           110            732            985           4082</span><br><span class="line">C                               54            492            533           2046</span><br><span class="line">Assembly                        23            234             16            600</span><br><span class="line">Python                          19            200            117            435</span><br><span class="line">Go                               2            109             21            303</span><br><span class="line">CSS                              2             33              7            223</span><br><span class="line">JSP                              4             10              0             66</span><br><span class="line">Javascript                       2              0              9             49</span><br><span class="line">YAML                             5             16             16             44</span><br><span class="line">Ruby                             1             13              3             11</span><br><span class="line">Bourne Shell                     1              4              1              7</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">SUM:                          1391          15538          13891          61376</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>大聖堂とバザール</title>
    <url>/ja/the-cathedral-and-the-bazaar/</url>
    <content><![CDATA[<p>私はいつも変だった<br>一般大衆の目には、プログラマーは一般的に愚かで、論理的に行動し、一日中自分の世界に没頭し、無口で、高IQと低EQです。どのプログラミング言語またはフレームワークが他のものより優れているかについては無限の議論があります。<br>ああ、そして最も重要なもの：Muyoumei紙 </p>
<p>これも私を混乱させます、そしてしばらくの間私は私の心の底からこのラベルにさえ同意しません </p>
<p>海外の大きな牛を見ているので、彼らの素晴らしいコードに加えて、彼らはブログを書いたり、本を出版したり、マーケティングしたり、会社を始めたり、ベンチャー資本を調達したり、ダイビングしたり、登ったり、旅行したりします…<br>そしてそれは単なる味ではなく、空を守るとしか言いようがありません<br>これは…プログラマーですか？ </p>
<p>この本を読んだ後、私はこのレースの名前がハッカーであることに気づきました </p>
<a id="more"></a>

<p>前回「ハッカーと画家」を見た時はとても寒かったです<br>私が最初にC言語を学んだとき、私はハッカーになりたくない、またはセキュリティ関連の仕事に従事したくないと兄に言ったことを今でも覚えています。<br>結局のところ、当時の学校の図書館は「ハッカーの攻撃と防御の練習」や「ハッカーの解体」などでいっぱいでした。 </p>
<p>何年も経った今、私がなりたくないのはクラッカーであることがわかりました </p>
<p>ハッカーのために、エリックは記事でいくつかの提案をします： </p>
<blockquote>
<p>ハッカーになりたいなら、読んでください。 ハッカーになりたい場合は、alt.2600ニュースグループ(news：alt.2600)を読んでください。思ったほど頭が良くない場合は、5〜10回刑務所に行く準備をしてください。 これが私がハッカーに言いたいことです。 </p>
</blockquote>
<p>これに関しては疑問があります。将来、2000年以前のバージョンを確認する時間があります。 </p>
<blockquote>
<p>Javaはプログラミングを学ぶのにも良い言語です。 Pythonより難しいですが、Pythonよりも速くコードを生成できるので、優れた第二言語として使用できると思います </p>
</blockquote>
<p>Pythonをまだ読んでいない場合は、Rubyをご覧ください。これはクールな言語です。また、公開日のため、iOSとAndroidはまだ登場していません。 </p>
<blockquote>
<p>5つの言語すべて(Python、Java、C / C ++、Perl、LISP)を学ぶのが最善です。 これらは最も重要なハッカー言語であるだけでなく、まったく異なるプログラミング方法を表しており、それぞれが多くのメリットをもたらします。 </p>
</blockquote>
<p>車輪を再発明する </p>
<blockquote>
<p>クリエイティブマインドは非常に貴重な限られたリソースです。特に、魅力的な新しい問題がたくさんある場合は、ホイールの再発明に無駄にしないでください。 </p>
</blockquote>
<p>GUI </p>
<blockquote>
<p>主な問題は人間工学に基づいた設計とインターフェース心理学にあり、ハッカーはこれらの分野で常に弱い立場にあります。 ハッカーは他のハッカーのインターフェースをうまく設計しますが、他の95％の思考プロセスをモデル化するのは得意ではないことがよくあります。 </p>
</blockquote>
<p>以下は本の抜粋です、付録は非常に興味深いです </p>
<hr>
<h2 id="2-大聖堂とバザール"><a href="#2-大聖堂とバザール" class="headerlink" title="2.大聖堂とバザール"></a>2.大聖堂とバザール</h2><ol>
<li>優れたソフトウェア作品は、多くの場合、開発者の個人的なニーズから生まれます </li>
<li>優秀なプログラマーは何を書くべきかを知っており、優秀なプログラマーは何を書き直す(そして再利用する)かを知っています </li>
<li>「1つを捨てる計画を立てなさい。遅かれ早かれあなたはそれをするでしょう。」(フレッド・ブルックス、マンムーンの神話の第11章) </li>
<li>あなたが正しい態度を持っていれば、興味深いことが自然にあなたを見つけるでしょう。 </li>
<li>プログラムに興味がなくなったときの最後の責任は、有能な後継者にプログラムを提供することです。 </li>
<li>ユーザーを開発協力者として扱います。これは、コードの品質をすばやく改善し、効果的にトラブルシューティングを行う場合に最も心配のない方法です。 </li>
<li>早期に公開し、頻繁に公開し、ユーザーのフィードバックに耳を傾けます。 </li>
<li>十分な数のベータテスターと共同開発者がいる場合、ほとんどすべての問題がすぐに現れ、当然誰かがそれを解決します。 </li>
</ol>
<ul>
<li>ライナスの法則は、大聖堂モードと市場モードの最も重要な違いを示しています。大聖堂の建設者の目には、バグは扱いにくく、見つけるのが難しく、奥深くに隠されています。数か月の献​​身が必要です。 注意深く検査することで、すべてのエラーが排除されたことを確信できます。 また、リリース間隔が長くなると、待望のリリースバージョンが完全でない場合、人々の失望は避けられなくなります。 </li>
<li>市場モデルの場合、それは完全に異なります。何千もの共同開発者が新しいリリースごとに熱心に研究しているため、バグは簡単に見つけられるか、少なくともすぐに見つけやすくなると考えることができます。 したがって、より多くの修正を取得するために頻繁にリリースし、副作用は無害です。リリースにいくつかの小さな問題があったとしても、それほど多くを失うことはありません。 </li>
</ul>
<p>9.愚かなコードを使用したスマートデータ構造は、他の方法よりもはるかに優れています。<br>10.ベータテスターを最も貴重なリソースとして扱う場合、ベータテスターは最も貴重なリソースになります<br>11.良いアイデアを持つことの次に、ユーザーから良いアイデアを特定することですが、後者の方が良い場合もあります<br>12.通常、最も画期的で革新的な解決策は、問題の基本的な考え方が間違っているという認識から生まれます。<br>13.「デザインの完璧さは、何も追加できないということではなく、何も差し引くことができないということです。」<br>14.どのツールにも期待される機能が必要ですが、優れたツールを使用すると予期しない機能が発生する可能性があります。<br>15.ゲートウェイソフトウェアを作成するときは、データフローをできるだけ妨害しないようにし、受信者から強制されない限り、情報を破棄しないでください。<br>16.あなたの言語がTuring-complete(Turing-complete)から遠く離れているとき、構文上の砂糖はあなたに多くの利益をもたらします。<br>17.システムのセキュリティは、システムが所有する秘密にのみ依存します。 偽りの秘密に注意してください。<br>18.興味深い問題を解決するには、まず興味のある問題を見つけます。<br>19.開発コーディネーターが少なくともインターネットのような優れたコミュニケーション媒体を持っていて、強制なしでリードする方法を知っている場合、複数人の協力は個別の戦闘よりも優れている必要があります </p>
<ul>
<li>作業プロセス中に恐怖と嫌悪感を感じた場合(ディルバート人形をぶら下げるなど、自己非難の形で表現したとしても)、プロセスが間違っていることに気付くはずです。 幸福、ユーモア、遊び心は本当の資産です </li>
<li>「遊び」は、創造的な活動において最も経済的に効果的な作業モードです。 </li>
</ul>
<h2 id="3-メンタルレイヤーを育成する"><a href="#3-メンタルレイヤーを育成する" class="headerlink" title="3.メンタルレイヤーを育成する"></a>3.メンタルレイヤーを育成する</h2><ul>
<li>ギフト文化では、社会的地位はあなたが何をコントロールするかではなく、あなたが何を与えるかに依存します </li>
</ul>
<ol>
<li>思ったように動かないのなら、どんなにスマートで独創的であっても、良くありません。 </li>
<li>精神レベルでの広範な作業は、特定の機能領域での反復作業よりも優れています(既存の作業の場合)。 </li>
<li>メインリリースに入ることができる作品は、入ることができない作品よりも優れています。 すべてのメジャーリリースに含まれる作品は最も立派です。 </li>
<li>「使用」は最も真の褒め言葉であり、カテゴリーキラーは競合他社よりも優れています。 </li>
<li>面白くて単純なタスクだけを選ぶ人と比較して、ハードで退屈なタスク(デバッグやドキュメントの作成など)に長い間取り組んできた人は、より称賛に値します。 </li>
<li>重要な機能拡張は、低レベルの修復よりも優れています。 </li>
</ol>
<h2 id="4-マジックポット"><a href="#4-マジックポット" class="headerlink" title="4.マジックポット"></a>4.マジックポット</h2><ol>
<li>信頼性/安定性/拡張性は非常に重要です。 </li>
<li>独立したピアレビューを除いて、設計と実装の正確さを検証するための便利で簡単な方法は他にありません。 </li>
<li>ソフトウェアは、お客様のビジネスにとって非常に重要です。 </li>
<li>ソフトウェアは、パブリックコンピューティングまたは通信インフラストラクチャを作成または操作します。 </li>
<li>主要な方法(または同等の機能を実現できる方法)は公の知識です </li>
</ol>
<h2 id="5-ハッカーの反撃"><a href="#5-ハッカーの反撃" class="headerlink" title="5.ハッカーの反撃"></a>5.ハッカーの反撃</h2><ul>
<li>理論と言語の欠如は、2つの点で私たちにとって悪いことです。1つは、方法を体系的に改善する方法を考えることができないこと、もう1つは、方法を他の人に説明して販売することが難しいことです。 </li>
</ul>
<h2 id="付録A：ハッカーになる方法"><a href="#付録A：ハッカーになる方法" class="headerlink" title="付録A：ハッカーになる方法"></a>付録A：ハッカーになる方法</h2><h3 id="ハッカーは建設を行い、ハッカーは損害を与えます"><a href="#ハッカーは建設を行い、ハッカーは損害を与えます" class="headerlink" title="ハッカーは建設を行い、ハッカーは損害を与えます"></a>ハッカーは建設を行い、ハッカーは損害を与えます</h3><h3 id="ハッカーの態度"><a href="#ハッカーの態度" class="headerlink" title="ハッカーの態度"></a>ハッカーの態度</h3><ol>
<li>世界は人々が解決するのを待っている魅力的な問題でいっぱいです。 </li>
<li>問題を2回解決しないでください。 </li>
<li>退屈と退屈は有害です </li>
<li>自由は良い </li>
<li>態度は能力に取って代わることはできません。 </li>
</ol>
<h3 id="ハッカーの基本的なスキル"><a href="#ハッカーの基本的なスキル" class="headerlink" title="ハッカーの基本的なスキル"></a>ハッカーの基本的なスキル</h3><ol>
<li>プログラムすることを学ぶ </li>
</ol>
<ul>
<li>知識をスキルに変えるマインドセットを身につけたいのなら、マスターを練習して従うしかありません。 方法は、コードを読んでコードを書くことです </li>
</ul>
<p>2.オープンソースのUNIXを見つけ、その使用方法と実行方法を学びます。<br>3.WWWの使用方法とHTMLの記述方法を学びます。 </p>
<h3 id="ハッカー文化の状況"><a href="#ハッカー文化の状況" class="headerlink" title="ハッカー文化の状況"></a>ハッカー文化の状況</h3><ol>
<li>オープンソースソフトウェアを作成します。 </li>
<li>オープンソースソフトウェアのテストとデバッグを支援します </li>
<li>有用な情報を公開します。 </li>
<li>基本的な作業を手伝ってください。 </li>
<li>ハッカー文化そのものに奉仕します。 </li>
</ol>
<h3 id="スタイルの問題"><a href="#スタイルの問題" class="headerlink" title="スタイルの問題"></a>スタイルの問題</h3><ul>
<li><p>あなたの母国語で上手に書くことを学びなさい。 プログラマーは上手く書くことができないという古い信念がありますが、多くのハッカー(私が知っている最高のハッカーを含む)は良い記事を書き、その数は驚くべきものです。 </p>
</li>
<li><p>サイエンスフィクションを読み、サイエンスフィクションラリーに参加します(これは、ハッカーや潜在的なハッカーを知るための良い方法です)。 </p>
</li>
<li><p>瞑想を学び、および/または武道を学びます。 (メンタルトレーニングは多くの重要な点で似ているようです。) </p>
</li>
<li><p>音楽への感謝を育む。 いくつかのユニークなタイプの音楽を鑑賞することを学びます。 楽器を上手に演奏することを学ぶか、歌う方法を学びます。 </p>
</li>
<li><p>パンや機知に富んだ言葉への感謝を育む。 </p>
<p>しかし、これらのことは、問題の鍵となる可能性のある左脳と右脳のスキルの組み合わせに関連しています(ハッカーは、強力な論理的推論スキルを持っているだけでなく、問題の特定の論理からすばやく脱出できる必要があります) </p>
</li>
</ul>
<h3 id="しないでください"><a href="#しないでください" class="headerlink" title="しないでください"></a>しないでください</h3><ul>
<li>愚かで誇張されたユーザー名やニックネームは使用しないでください。 </li>
<li>Usenet(または他の場所)のオンライン叱責戦争に参加しないでください。 </li>
<li>自分を「サイバーパンク」と呼んだり、自分自身をサイバーパンクと呼んでいる人々と交流する時間を無駄にしないでください。 </li>
<li>投稿やメールに間違ったスペルや悪い文法を詰め込ませないでください。 </li>
</ul>
<p>やっと：<br><strong>「他のハッカーがあなたをハッカーだと思った場合にのみ、あなたはハッカーです」</strong><br>表現された価値観は、中世ヨーロッパの騎兵時代のエリートグループによって宣言された理想に似ています(通常は実現できません)これらの社会的エリートは、彼らがいる希少な経済を超えるのに十分な財源を持っています。 当然のことながら、意欲的な騎士は正義のために戦い、お金ではなく名誉を追求し、弱く抑圧された側に立ち、英雄的な才能の限界に挑戦する機会を絶えず求めています。 彼の能力と行動が他の騎士によって認められ、公式に認められているという条件で、彼が自分自身を人々のリーダーであると見なす(そして他の人からも見なされる)のはまさにこのためです。 アーサー王の物語とchansonsde gesteによって称賛された騎兵隊には、理想主義、自分自身への絶え間ない挑戦、地位の追求が見られます。これらは、今日のハッカーを動機付ける要素に似ています。 </p>
]]></content>
      <tags>
        <tag>Tech</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>テクノロジーが求めるもの</title>
    <url>/ja/what-technology-wants/</url>
    <content><![CDATA[<p>最後の文<br>これは、張暁龍が知っていることを思い出させます<a href="http://www.zhihu.com/question/20198823">この世界が単なるコードの一部である場合、これまでにどのようなバグを見つけましたか？ </a>この質問に対するかなりユーモラスな答え </p>
<blockquote>
<p>コードにバグがないかチェックするためにコードに変数を要求するのは非現実的です。 </p>
</blockquote>
<a id="more"></a>

<h2 id="本の抜粋："><a href="#本の抜粋：" class="headerlink" title="本の抜粋："></a>本の抜粋：</h2><p>自由の意味は、それを無謀に行うことではなく、「選択の自由」にあります。 </p>
<p>生命と技術の両方が非物質的な情報の流れに基づいているようです。 </p>
<p>自律性：自己修復、自己保護、自己維持(エネルギーへのアクセス、廃棄物の排出)、目標の自己管理、自己改善 </p>
<p>自然のように技術的な要素を扱う必要があります。 人生に私たちに従うように頼むことができないのと同じように、私たちはテクノロジーに私たちに従うように頼むことはできません。 時には私たちはその指導に屈服し、そのカラフルさを喜んで感じる必要があります。時には私たちは自分のニーズを満たすためにその真の色を変えるよう努めるべきです。 技術要素のすべての要件を実装する必要はありませんが、この力に反対する代わりに、この力を使用することを学ぶことができます </p>
<p>言語は、思考が自分自身に疑問を投げかけることを可能にする技術です。それは、脳に何を考えているかを伝える魔法の鏡です。それは、思考をツールに変換するジョイスティックです。 言語は、自己認識と自己制御のとらえどころのない目標のない動きを習得したので、思考を制御し、それを新しいアイデアの源にすることができます。 言語の合理的な構造がなければ、私たちは自分の精神的な活動を知ることができず、当然私たちは自分の行動について考えることができません。 </p>
<p>お金は、より多くの材料だけでなく、より多くの選択肢をもたらします(ただし、より多くの材料も結果です)。 設備や経験が増えて幸せにならない私たちを本当に幸せにしているのは、時間と仕事をコントロールし、本当の余暇を楽しみ、戦争、貧困、腐敗によって引き起こされる不確実性から逃れ、個性を追求する機会をつかむことができることです 自由-これはすべて、富の成長とともに起こります。 </p>
<p>人間の本性は順応性があります。 私たちは思考を通じて価値観、期待、自己認識を変えます。 私たちは類人猿の時代から性格を変えてきましたが、それが起こったら、私たちは自分自身を深く変容させ続けます </p>
<p>テクノロジーは寿命の延長であり、2つの共通のニーズは次のとおりです。 </p>
<ul>
<li>効率を向上させる </li>
<li>チャンスを増やす </li>
<li>自発性を向上させる </li>
<li>複雑さと多様性を高める </li>
<li>専門性を高める </li>
<li>普遍性を高める </li>
<li>自由を増やす </li>
<li>共生を促進する </li>
<li>美しさを増す </li>
<li>知覚を改善する </li>
<li>拡張構造 </li>
<li>進化可能性を向上させる </li>
</ul>
<p>自由<br>他のすべてのように、私たちの自由意志はユニークではありません。 潜在意識の自由の選択は、動物の原始的な行動パターンに存在します。 すべての動物には基本的なニーズがあり、それらはこれらのニーズを満たすために選択を行います。 しかし、自由は人生の前にさえ現れます。 フリーマンダイソンを含む一部の理論物理学者は、自由は原子粒子に現れると信じているため、自由な選択はビッグバンの高温で生まれ、それ以来拡大し続けています。 </p>
<p>技術的要素は、宇宙が自己認識を生み出す方法です。 カール・セーガンはこれについて印象的な説明をしました：「私たちは星について考えているスターダストです。 </p>
]]></content>
      <tags>
        <tag>Tech</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>ウィルパワー</title>
    <url>/ja/Willpower/</url>
    <content><![CDATA[<p>現代の魔法の呪文がますます複雑になるにつれて、成功するプロジェクトはしばしば数ヶ月で計算される必要があります。これをよく知っているマジスターは人月の神話として名誉を与えられます </p>
<p>この環境では、精神的な力は非常に貴重であり、魔法使いにとって重要です </p>
<p>精神力と言えば、実際にはエルフの王国では「ウィルパワー」と発音されますが、帝国に導入された後、マグルを知らないことで文字通り自制心または意志力として翻訳されました </p>
<p>非常に神秘的で背が高いように聞こえますが、実際には、2つの特性を把握するだけで済みます </p>
<ol>
<li>電池 </li>
</ol>
<ul>
<li>ウィザードは精神力を使って魔法の要素を制御します </li>
<li>朝&gt;夕方 </li>
<li>利用可能な睡眠/瞑想のコールバック </li>
<li>異なる魔法は異なる電力を消費します </li>
</ul>
<p>2.筋肉 </p>
<ul>
<li>変動する総準備金 </li>
<li>特定の演習で拡張できます </li>
</ul>
<a id="more"></a>

<p>ブルックス氏は頭を下げ、ビジネスパーソンオブザイヤーを受賞したディナーパーティーで静かに祈りました。この祈りは、20世紀で最も有名な祈りの1つであるニーバーの1934年からのものです。 </p>
<blockquote>
<p>私の神は私に、私が変えることができないものを受け入れる静けさ、私ができるものを変える勇気、そして違いを知る知恵を与えてくださいます。 </p>
</blockquote>
<p>(追記：子供用の靴はおなじみですか〜) </p>
<p>機能の中で、<strong>特定の運動方法</strong>と<strong>睡眠</strong>は私たちが変更できるものです </p>
<p>Chip Heath / Dan Heath共著[一時的：世界をより良くする方法](<a href="http://book.douban.com/subject_search?search_text=%E7%9E%AC%E5%">http://book.douban.com/subject_search?search_text=%E7%9E%AC%E5%</a> 8F％98＆cat = 1001に記載) </p>
<blockquote>
<p>私たちの日常の行動の大部分は、監督されているのではなく、自発的です。 そして、これは良いことです。監督するのが難しいので、徐々に自己制御能力を消費します。 </p>
</blockquote>
<p>それから言った </p>
<blockquote>
<p>自己制御能力は尽きることのない資源であり、それは重要な実現です。 私たちが「自制心」について話すとき、私たちはその言葉の表面的な意味について話しているのではなく、意志力が悪徳(喫煙、クッキーを食べる、アルコール)と戦う必要があることを意味します。 </p>
</blockquote>
<p>これを考慮して、本は簡単で効果的な運動方法を与えます：<br><strong>内部化された習慣</strong>-<strong>アクショントリガー</strong>を設定します。その役割は「インスタント習慣」を作成することです。 </p>
<p>そのようなサイクルでは、意識的で意図的なものがなく、これにより、自己制御のための人々のエネルギーの損失を回避することもできます。 </p>
<p>その結果、クラスメートが車を運転しているようで、最初は急いでいましたが、後で(考えて)電話をかけたときに溝に車を運転しませんでした(→_→) </p>
<p>睡眠の側面は、夜の6時間以上の睡眠を指すだけでなく、日中の30分以下の昼寝も含めることができます。<br>最も重要なものは：あなたが眠いときに眠る<br>結局のところ、精神力が不十分な状況では、魔法の要素を強制的に制御すると、魔法の武器が破裂するリスクがあります </p>
<p>それでも諦めない場合は、次の式を呼び出してください。<br>達成=効率X時間 </p>
<p>PS：効率がマイナスの場合… </p>
<hr>
<p>正しいイデオロギーの指導と、悪魔の訓練の期間の後、小さな魔道士は彼の精神力が大幅に改善されたことを知って喜んでいます<br>最も明白なのは、あなたが良い状態にあるとき、あなたは毎日15以上のポモドーロ、そして通常は約12をコントロールできるということです </p>
<p>同時に、小さな魔道士は、彼の精神力の蓄えを無期限に増やすことはできないことも発見しました<br>また、「情報の簡単な歴史」や「制御不能」などの情報量の多い本であれば、消費電力は非常に速くなります。 </p>
<p>だから私は自分の限られたエネルギーをもっと重要なことに捧げることしかできません </p>
<p>勝間和代<a href="http://book.douban.com/subject/3729173/">時間投資法</a><strong>時間投資分布図</strong>(4象限ルール+時間記録)もここに登場 </p>
<p>しかし、最も逆説的なことは、やりたいことを制御した後、他のことが台無しになるということです。 </p>
<p>たとえば、<a href="http://book.douban.com/subject/10786473/">self-control</a>は次のように述べています。 </p>
<blockquote>
<p>ダイエット後、「複数の交配戦略を試す」ことをいとわない </p>
</blockquote>
<p>これは、一部の星が不正行為をする理由の1つでもありますか？ (→_→) </p>
<p>しかし、私たちの小さな魔道士にはガールフレンドさえいないので、それは明らかではありません<br>副作用は、12を超えるポモドーロの後、本を読み続けると、スタックがいっぱいになり、プッシュできなくなることです。<br>また、反応が鈍くなり、図書館が閉鎖された後、帰宅途中に痴呆に見えた。 </p>
<hr>
<p>PS：意志力は免疫に少し似ていますが、強いほど良いわけではありません。過度の意志力=慢性的なストレス<br>PS2：自分自身を統合する人々は正しい意志力を持っています </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>帝都</title>
    <url>/ja/BeiJing/</url>
    <content><![CDATA[<p>私の読書はほぼ5万人なので、私は常にいくつかの段落で高速読書に関するものを紹介したいと思っていました。 </p>
<p>その結果、このシリーズをドラッグした途端、何も残っていませんでした…<br>レベルはまだ限られていると推定されており、書くことは不可能です… </p>
<p>最初に何か他のことをしましょう </p>
<a id="more"></a>

<hr>
<p>Nasim Nicholas Talebは、「Random Wandering Fools」という本全体を使用して「不確実性」を説明し、次に「BlackSwan」全体を使用して予測不可能な未来に対処する方法を説明しました。<br>小さな魔道士は急いで読み通し、彼が本質を持っていると思います </p>
<p>ShenZhenとImperialCapitalの間で、慎重に検討した後(tou nao yi re)、隠しスキルをオンにできるかどうかを確認するために「ハード」モードを選択することにしました。 </p>
<h2 id="周囲"><a href="#周囲" class="headerlink" title="周囲"></a>周囲</h2><p>南部の子供用シューズのほとんどは、常に帝国の首都の印象を持っていました。 </p>
<p>雨が降ると、再び江子になります。 </p>
<p>1週間のフィールドワークの後、小さな魔道士は結論に達しました </p>
<p>「上の写真は誇張されていますが、それは本当です!!!」 </p>
<p>空気が乾燥しすぎて、外出中の女の子の肌が悪いのがわかりませんか<br>ほこりのせいで道端の車や地面がほこりの層で覆われているのがわかりませんか </p>
<p>小さな魔道士は、天国で雨が降ったときにアスファルトの道を裸足で歩いている女の子を見つけたので、靴下を着ることをやめました。<br>その結果、帝国の首都は2つのステップを踏み、サンドペーパーを手に入れました… </p>
<h2 id="アクセント"><a href="#アクセント" class="headerlink" title="アクセント"></a>アクセント</h2><p>地理的に言えば、若いマスターは淮河の北で生まれ、常に北方だと思っていましたが、南方の生活様式に同意しています。<br>初めて天国に着いた時、子供たちから「えー」の音がとても重いと言われ、曲がったとも言われました。 </p>
<p>帝都に来て、小さな魔女が大きな魔女を見たことを知りました<br>この公式の説明はどこにありますか： </p>
<blockquote>
<p><em>マンダリン</em>は<strong>北京声</strong>を標準音色として使用し、北方方言を基本方言として使用しています… </p>
</blockquote>
<p>ここの「えー」の音はとても重くてとても面白く聞こえます、そして小さな魔道士は途中で人々が話しているのを聞くと笑わずにはいられません。<br>しかし、たった2日で、小さな魔道士は彼が溝に連れて行かれたことを知りました… </p>
<p>しかし、道路には曲がったナッツが本当にたくさんあり、それらの多くは英語ではありません(リトルマスターはまだ少し英語を知っているので、アクセントの問題ではないはずです) </p>
<h2 id="仲介"><a href="#仲介" class="headerlink" title="仲介"></a>仲介</h2><p>私がまだ天国にいたとき、家を借りるのはコミュニティの門に立ち寄るだけで、すぐに熱狂的な叔母のグループを囲み、仲介手数料はかかりませんでした。<br>帝都が初めて到着したとき、小さな魔道士は十分な準備ができておらず、天国に似ていると思っていましたが、コミュニティの門に到着したとき、小さな黒板(ほこりの層を除く)がきれいであることがわかりました。 玄関先の警備員に賃貸状況を聞いたところ、警備員は何度も首を横に振って「わからない」と答えた。 </p>
<p>天国の0.8kには10平方メートル以上ありましたが、南向きには1.3kで十分です+大きなバルコニー<br>また、部屋の紙がどんなに安くても、地下にも専用のバスルームがあるので、シャワーを浴びた後は裸で走ることができます。<br>小さな魔道士の江子はまだ不平を言っていた(わずかな給料で) </p>
<p>帝国の首都の価格は2.5倍で、バスルームは共有されています<br>第三環状道路内にも家があり、その中には小さな魔道士が生きていた時代よりも古いものもあります。<br>壁は角にクモの巣で黄ばんでいて、家の中のあらゆる種類の混乱<br>そして、5ベッドルームの部屋のほとんどは、1つの家が若いカップルで混雑している場合、若いマスターを除いて8つあり、朝のWCピーク時に…若いマスターはキューを使用してFIFOを実現することを考えました </p>
<p>夜にホテルに戻って信頼できる仲介業者を探していたところ、帝都には死体がなく、仲介業者であればどんなに大きくても小さくてもハッキングされていた。 </p>
<p>小さな魔道士が到着したばかりで、自分の住む場所に慣れていないのは残念です。「私は魚で、男はナイフです」と知っていますが、他に選択肢はありません。 </p>
<h2 id="助言"><a href="#助言" class="headerlink" title="助言"></a>助言</h2><p>南の子供たち、泥は次のようなチキンスープでいっぱいです： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">趁着年轻，多去看看外面的世界</span><br><span class="line">年轻就应该有梦想，不管最后怎么样，起码尝试过，不后悔</span><br><span class="line">旅行并不是旅游，要在那里 挤公交挤地铁，上下班...</span><br></pre></td></tr></table></figure>

<p>小さな魔道士は泥にロープライフのアドバイスをしました： </p>
<p>何千もの時計がここに来る理由は次のとおりです。<br><strong>本当です！ の！ ！ 会議！ ！ ！ デッド！ ！ ！ ！ の！ ！ ！ ！ ！ **</strong> </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>シンプルなVS。 シナトラとマティーニの間</title>
    <url>/ja/A-simple-VS-between-Sinatra-and-Martini/</url>
    <content><![CDATA[<h1 id="シナトラVS-マティーニ"><a href="#シナトラVS-マティーニ" class="headerlink" title="シナトラVS. マティーニ"></a>シナトラVS. マティーニ</h1><p>インターネット上にはすでに多くの比較データがあります<br>しかし、それはそれほど現実的ではありません </p>
<p>そこで、 <code>VPS</code>では、<code>Martini</code>と <code>Martini</code>を使用して2つの<code>HelloWorld</code>を設定しました<br>テストツールとして <code>Linux</code>で<code>siege</code>を選択 </p>
<a id="more"></a>

<h2 id="パフォーマンス"><a href="#パフォーマンス" class="headerlink" title="パフォーマンス"></a>パフォーマンス</h2><h3 id="マティーニ"><a href="#マティーニ" class="headerlink" title="マティーニ"></a>マティーニ</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">siege -q -c 1000 -r 30 -f sinatra.url</span><br></pre></td></tr></table></figure>

<!--more-->

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Transactions: 29332 hits</span><br><span class="line">Availability: 97.77 %</span><br><span class="line">Elapsed time: 107.10 secs</span><br><span class="line">Data transferred: 0.38 MB</span><br><span class="line">Response time: 1.73 secs</span><br><span class="line">Transaction rate: 273.87 trans&#x2F;sec</span><br><span class="line">Throughput: 0.00 MB&#x2F;sec</span><br><span class="line">Concurrency: 473.90</span><br><span class="line">Successful transactions: 29332</span><br><span class="line">Failed transactions: 668</span><br><span class="line">Longest transaction: 25.45</span><br><span class="line">Shortest transaction: 0.00</span><br></pre></td></tr></table></figure>

<h3 id="マティーニ-1"><a href="#マティーニ-1" class="headerlink" title="マティーニ"></a>マティーニ</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">siege -q -c 1000 -r 30 -f martini.url</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Transactions: 29988 hits</span><br><span class="line">Availability: 99.96 %</span><br><span class="line">Elapsed time: 58.56 secs</span><br><span class="line">Data transferred: 0.34 MB</span><br><span class="line">Response time: 0.46 secs</span><br><span class="line">Transaction rate: 512.09 trans&#x2F;sec</span><br><span class="line">Throughput: 0.01 MB&#x2F;sec</span><br><span class="line">Concurrency: 235.70</span><br><span class="line">Successful transactions: 29988</span><br><span class="line">Failed transactions: 12</span><br><span class="line">Longest transaction: 31.10</span><br><span class="line">Shortest transaction: 0.00</span><br></pre></td></tr></table></figure>

<h2 id="コードの量"><a href="#コードの量" class="headerlink" title="コードの量"></a>コードの量</h2><p>もちろん、サーバーのパフォーマンスだけに焦点を当てた開発は不可能です。<br>「ヒューマンウェア」は、機械と比較して、プログラマーのスピードを優先すべきだと長い間強調してきました。 </p>
<p>_hello world_を出力しているだけなので、コードの量をさらに詳細に比較することはできません(<strong>メッセージを残してください</strong>) </p>
<p><code>Go</code>の現在のライブラリのほとんどは<code>Github</code>からの <code>Get</code>です。コードの品質は保証されていますか？<br>一方、 <code>Ruby</code>は比較的成熟しています(数年前に<code>Python</code>と <code>Ruby</code>を比較した結果のようです…) </p>
<h2 id="結論として"><a href="#結論として" class="headerlink" title="結論として"></a>結論として</h2><p>したがって、1日の訪問数が数千万PV未満であると判断された場合、「Ruby」は完全に問題ありません。 </p>
<p>また、本<a href="http://book.douban.com/subject/6756090/">「松本幸弘のプログラムワールド」</a>には、Rubyの設計理念は「開発効率は運用効率よりも大きく、 の言語 </p>
<p>最も重要なことは、 <code>Ruby</code>は書くのが本当にクールだということです。木があります… </p>
<p>最後に、弱い質問です、あなたは幸せですか？ </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>iOSでUIViewControllerを更新するためにプル</title>
    <url>/ja/Pull-to-Refresh-UIViewController-in-iOS/</url>
    <content><![CDATA[<p><code>UIRefreshControl</code>を<code>UIViewController</code>に強制的に追加すると、エラーが発生します。 </p>
<blockquote>
<p>UIRefreshControlは、1つのUITableViewControllerによってのみ管理できます。 </p>
</blockquote>
<p>だから、ここにトリックがあります </p>
<a id="more"></a>

<h2 id="コード"><a href="#コード" class="headerlink" title="コード"></a>コード</h2><ol>
<li><code>UIViewController</code>でテーブルビューを開始します </li>
</ol>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> refreshControl = <span class="type">UIRefreshControl</span>()</span><br><span class="line"><span class="keyword">var</span> tableView = <span class="type">UITableView</span>()</span><br></pre></td></tr></table></figure>

<p>2.<code>view</code>ではなく <code>refreshControl</code>を<code>tableView</code>に追加します </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">tableView.frame = view.frame</span><br><span class="line"></span><br><span class="line">refreshControl.addTarget(<span class="keyword">self</span>, action: <span class="type">Selector</span>(<span class="string">&quot;refreshView:&quot;</span>), forControlEvents: .<span class="type">ValueChanged</span>)</span><br><span class="line">tableView.addSubview(refreshControl)  <span class="comment">// here it is</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">self</span>.view.addSubview(tableView)</span><br></pre></td></tr></table></figure>

<p>3<code>refreshView</code>関数 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">refreshView</span><span class="params">(refreshControl: UIRefreshControl)</span></span> &#123;</span><br><span class="line">    refreshControl.attributedTitle = <span class="type">NSAttributedString</span>(string: <span class="string">&quot;Refresh&quot;</span>)</span><br><span class="line">    refreshControl.attributedTitle = <span class="type">NSAttributedString</span>(string:<span class="string">&quot;Last updated on&quot;</span> + <span class="type">NSDate</span>().description)</span><br><span class="line"></span><br><span class="line">    refreshControl.endRefreshing()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="私のような-ストーリーボードを使いたいなら"><a href="#私のような-ストーリーボードを使いたいなら" class="headerlink" title="私のような ストーリーボードを使いたいなら"></a>私のような <code>ストーリーボード</code>を使いたいなら</h2><ol>
<li><p>ストーリーボード-&gt; UITableViewController-&gt;更新を有効にする </p>
</li>
<li><p>次に、 <code>UIButton</code>と同じように<code>Ctrl</code>ドラッグできます </p>
</li>
</ol>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>デリゲートの主な原則</title>
    <url>/ja/The-primary-principle-of-Delegate/</url>
    <content><![CDATA[<h1 id="デリゲート原理の分析"><a href="#デリゲート原理の分析" class="headerlink" title="デリゲート原理の分析"></a>デリゲート原理の分析</h1><p>Bのメソッドがどこかで実行される場合、Aにそれ自体の値を通知し、何らかの処理を行う必要があります。 </p>
<p>それを達成する方法は？ </p>
<p>まず、Bは誰に伝えるかを知る必要があり、次にA.aFunc()を呼び出す必要があります。 </p>
<p>原理を知りたいのならコードを見たくないのはわかっているので、単純化しようとしています </p>
<a id="more"></a>

<p>タイプA、B </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">A</span>.swift</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span> &#123;</span><br><span class="line">		<span class="built_in">println</span>(b.value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">B</span>.swift</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> value = <span class="number">0</span></span><br><span class="line">	<span class="function"><span class="keyword">func</span> <span class="title">bFunc</span> <span class="params">()</span></span> &#123;</span><br><span class="line">        value = <span class="number">213</span> <span class="comment">// value 有变化，想通知 A 执行 aFunc()</span></span><br><span class="line">		a.aFunc(b) <span class="comment">// 错误</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<!--more-->

<p>上記が機能しないのはなぜですか？<br>bにはaがないため、Aを直接渡すと、Bのコードを変更する必要があり、パッケージが失われます。 </p>
<p><strong>デリゲート</strong>がこのメカニズムをどのように実装するかを見てみましょう </p>
<h2 id="委任"><a href="#委任" class="headerlink" title="委任"></a>委任</h2><p>Bはメッセージを送信したいので、最初にBから始めます。 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">A</span>.swift</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span> &#123;</span><br><span class="line">		<span class="built_in">println</span>(b.value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b.swift</span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">BDelegate</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span>  <span class="comment">// 1. 把 A 的 aFunc 声明成 BDelegate 的一个方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> delegate:<span class="type">BDelegate?</span>  <span class="comment">// 2. 声明一个 BDelegate 类型的 delegate 变量</span></span><br><span class="line">    <span class="keyword">var</span> value = <span class="number">0</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">bFunc</span> <span class="params">()</span></span> &#123;</span><br><span class="line">        value = <span class="number">213</span></span><br><span class="line">        delegate?.aFunc(<span class="keyword">self</span>) <span class="comment">// 3. 把自己 b，作为参数，调用 aFunc()</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1、2、3を実行しても、まだ機能しません。なぜですか。<br>AはBが試運転したことを知らないため、2つは関連していません </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">a.swift</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>: <span class="title">BDelegate</span> </span>&#123; <span class="comment">// 1. BDelegate</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span> &#123;</span><br><span class="line">        b.delegate = <span class="keyword">self</span> <span class="comment">// 2. 把 b 的 delegate 变量设置成 self，也就是 a</span></span><br><span class="line">        <span class="built_in">println</span>(b.value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b.swift</span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">BDelegate</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> delegate:<span class="type">BDelegate?</span></span><br><span class="line">    <span class="keyword">var</span> value = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">bFunc</span> <span class="params">()</span></span> &#123;</span><br><span class="line">        value = <span class="number">213</span></span><br><span class="line">        delegate?.aFunc(<span class="keyword">self</span>) <span class="comment">// 3. 这下看懂了吧？delegate?.aFunc(self) 等价于  a.aFunc(b)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main.swift</span><br><span class="line"><span class="keyword">let</span> b = <span class="type">B</span>()</span><br><span class="line"><span class="keyword">let</span> a = <span class="type">A</span>()</span><br><span class="line">a.aFunc(b)</span><br><span class="line">b.bFunc()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个可以在 Playground 里看结果了</span></span><br></pre></td></tr></table></figure>

<p>完了です </p>
<p>次のような一般的なコードを思い出してください。 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">mScrollView.delegate = <span class="keyword">self</span></span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MYScrollView</span> : <span class="title">UIScrollView</span>, <span class="title">UIScrollViewDelegate</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">scrollViewDidEndDecelerating</span><span class="params">(scrollView: UIScrollView)</span></span> &#123;</span><br></pre></td></tr></table></figure>

<p>突然の悟りの感覚はありますか？ </p>
<p>2日で <code>SEL</code>と<code>Block</code>について話しましょう </p>
<hr>
<p>明確にすることをお勧めします。不明な点がある場合は、メッセージを残して話し合ってください<del>~</del> </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>FilcoキーボードレイアウトをMacOSXに操作する方法</title>
    <url>/ja/How-to-manipulate-Filco-keyboard-layout-to-Mac-OSX/</url>
    <content><![CDATA[<p>以前に <code>Filco</code>の赤い軸を入力しましたが、ゲームコードは正しいです。 </p>
<p><code>システム設定-&gt;キーボード-&gt;モディファイアキー-&gt;キーボードの選択-&gt; Opt-Cmd Cmd-Opt</code>を使用する前に、<code>Cmd-Opt</code>をAppleのキー位置に調整することができます<br>しかし、StarCraftをプレイするたびに、もう一度変更する必要があります。上記のプロセスから、非常に面倒であることがわかります。 </p>
<p><code>F1-F12</code>は仕方がなく、ロック画面も問題です </p>
<a id="more"></a>

<p>Huangtianは苦労せず、ついにこれを見つけました、そしてそれは無料です：<br><a href="https://pqrs.org/osx/karabiner/index.html.en">カラビナー</a> </p>
<p><code>Opt-Cmd</code>を設定した後、<code>F1-F12</code>をAppleファンクションキーに変更します<br>ちなみに、右下隅の最後から2番目の役に立たないキーはFNに変更されています<br>次に、 <code>Ctrl_R</code>と<code>FN</code>の位置を変更しました<br>右上の「Pa / Br」が「Power」に変わります </p>
<p>次に、 <code>MenuBar-&gt; SettingList-&gt; +</code>で、 <code>Game</code>などのキー変更なしの<code>Profile</code> </p>
<p>今後ゲームをプレイする場合は、ステータスバーのアイコンをクリックし、ワンクリックで「ゲーム」に切り替えてください。 </p>
]]></content>
      <tags>
        <tag>Shopping</tag>
      </tags>
  </entry>
  <entry>
    <title>難消化性のプログラミング言語は悪い言語です</title>
    <url>/ja/An-indigestible-programming-language-is-a-bad-language/</url>
    <content><![CDATA[<p>ギャップイヤーの時、この本を見ました。<a href="http://www.codecademy.com/">codecademy</a>で質問を書いていました。Rubyの章しか見ていませんでした。当時、「Go」はすでにオタクだと思っていました。 </p>
<p>1年後、現在働いている会社がバックエンドのリファクタリングをしているときに、「スカラ」を考えました。友人の一人がゲームの高給を見たので、断固として「エルラン」を見に行きました。「Thoughtworks」イベントの共有があったと聞きました。 Clojure` </p>
<p>この本をもう一度読んだとき、「ルビー、イオ、プロローグ、スカラ、アーラン、クロジュール、ハスケル」が見つかりました。 </p>
<p>私は井戸に座って空を見てきましたが、この本をもう一度読んだところ、この本を読む必要がないことがわかりました。 </p>
<p>ですから、好奇心旺盛で好奇心を満たすなら、見てみてください。真剣に勉強したいなら、スキップしてください。 </p>
<a id="more"></a>

<hr>
<p>プログラミング言語を見ると、次のカテゴリから逃れることができないほどたくさんあります。 </p>
<ol>
<li>モデル </li>
</ol>
<ul>
<li>機能的 </li>
<li>OO </li>
<li>プロトタイプ </li>
</ul>
<p>2.データ構造アルゴリズム </p>
<ol>
<li>データ構造 <ul>
<li>の種類 </li>
<li>リンクリスト </li>
<li>ハッシュ表 </li>
</ul>
</li>
<li>処理する <ul>
<li>判定 </li>
<li>サイクル </li>
</ul>
</li>
<li>同時 </li>
</ol>
<p>並行性に関しては、プロセスが人間の思考に適合していないため、現時点では良い解決策はないようです<br>将来解決したとしても、IQが平凡な人でも「ifelse」と同じくらい簡単に解決できるように、才能のある人が書いてカプセル化するべきだと思います。 </p>
<p>個人的には、言語の人気は次の点から切り離せません。 </p>
<ol>
<li>コマーシャルプロモーション(Java | OC) </li>
<li>安全で安定 </li>
<li>人間は読みやすいですか </li>
</ol>
<p>最初の2点は言う必要はありません。言いすぎると涙になります </p>
<p>それは7週間の7つの言語で言及されています：<br>多くの点で、Clojureは賢明なカンフーマスター、丘の上のオラクル、または謎めいたジェダイのトレーナーです。 </p>
<p>Lispの利点は「ハッカーと画家」から知られており、Emaceは「神の編集者」として歓迎されています </p>
<p>しかし、それはとても良くて素晴らしいです、しかしそれは人気がありません、それは熟考する価値のある質問です </p>
<p>構文シュガーの観点からは、前世代(C / C ++ / Java)のプログラマー(非委任)である <code>Swift</code>を一度使用したところ、戻り値が-&gt;に変更され、変数の型が 後ろから叫んだ<br>私自身は「GoSwift」などの文法的な砂糖を完全に受け入れますが、「Lisp」の接頭辞の表現はすべて不快だと感じています。シンプルさは良く、長いと目がくらむようになり、閉じ括弧は非常に異端です。<br>システムに慣れた後、プログラマーが新しい構文を受け入れることがいかに難しいかがわかります。 </p>
<p>「コードは人々が見ることができるように書かれています」 </p>
<p>ですから、反人間的な読書である言語は消えるか、少なくとも人間の間で普及しないと思います。 </p>
<p>そこでマジは、プログラマーがコードを喜んで書く方法に焦点を当てた別のアプローチを取りました </p>
<p>したがって、最良の言語はなく、最も適切な言語のみがあります </p>
<p>もちろん、上記のいずれも、コンピューターがコードを記述できるように進化した状況には当てはまりません。 </p>
<p>これは人間のパラダイムから脱却したからです </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>徐々に保守的になる理由</title>
    <url>/ja/why-are-we-tend-to-be-conservation/</url>
    <content><![CDATA[<p>ある段階で、両親は年をとっていて頑固で、嫌で、新しいものに触れたがらないといつも感じています。彼らは若くて無知なので、私も彼らを笑いました </p>
<p>今日、私が午前中ずっとIE8で働いていたとき、私はついにWin 8.1からWin7に変更しました(理由は2つの言葉を意味します：オンラインバンキング)、そして最後の手段として新しいシステムを二度と使用しないと思ったとき私はショックを受けました。 </p>
<a id="more"></a>

<p>最近、Microsoftはさまざまなブラウザによってバージョン番号のブラッシングを開始することを余儀なくされています<br>China CITIC Bankのカスタマーサービスによると、IE8はUSBに最適です。 </p>
<p>しかし、IEとシステムはバインドされており、必死になってシステムを変更することしかできません。仮想マシンにインストールされているため、決勝はハッピーエンドですが、朝の時間は戻れません。 </p>
<p>Yosemite 10.10 Devバージョンがリリースされたとき、開発者として安い手がなかったので、公式バージョンがリリースされるまでアップグレードしたことを思い出してください。 </p>
<p>その理由は、大学時代にWin7のプレビュー版が出たばかりで、アップグレードするのが待ちきれなかったため、再起動するたびにブロードバンド接続が切れてしまったことがわかりました。 </p>
<p><a href="http://zh.wikipedia.org/zh/%E5%BE%B7%E6%B2%83%E5%A4%8F%E5%85%8B%E9%8D%">Dvorakキーボード</a>も試しました B5％E7％9B％A4)1か月後、Warcraftの重要な位置に精通していても問題ありません。<br>確かにスピードが上がった気がします。心理的な要因もあるかもしれませんが、中段のキーがもっと押されているように感じます。 </p>
<p>だが！ 他人のコンピューターを使うと、他人の目には完全に馬鹿になります！ 心からの言葉で「ドヴォルザークキーボードを使う」と言うたびに<br>最も致命的なのは、Ubuntuを使用した後、英語は問題なく、システムはそこにあり、中国人は再び悲劇的なことです。<br>Androidの人気と相まって、モバイルキーボードでDvorakレイアウトを使用することはほぼ不可能です。 </p>
<p>その後、私は妥協することしかできません </p>
<p>たとえば、職場では、Ubuntu10.10を使用してAndroidROMをコンパイルします。11の方が美しいですが、10.10でさえ公式にサポートを断念していますが、少し安い場合はまったくコンパイルできません。 </p>
<p>ソースの例は無数にあります </p>
<p>私は設立される前にすでに物事を恐れ始めていたと思います。それで、年配の人々は多くの苦しみとより多くの穴を失ったので、徐々に彼らは新しいものに触れたくないのですか？ ？ </p>
<p>参考[学習した無力実験](<a href="http://zh.wikipedia.org/wiki/%E7%BF%92%E5%BE%97%E6%80%A7%E5%A4%B1%E5%8A">http://zh.wikipedia.org/wiki/%E7%BF%92%E5%BE%97%E6%80%A7%E5%A4%B1%E5%8A</a> ％A9)、これも動物の性質であり、良い方法はないようです </p>
<p>しかし、そのような人は、停滞した水のプールがゆっくりと悪臭を放つように、徐々に退屈になります </p>
<p>あの人になりたくない </p>
<p>何人かの年配の興味深い人々を見て、彼らと話してください、プレッシャーはありません、あなたはあなたの考えをよりよく説明することができます </p>
<p>では、彼らはどのようにして時代に遅れずについていき、好奇心を持ち続けるのでしょうか。 </p>
]]></content>
      <tags>
        <tag>Psychology</tag>
      </tags>
  </entry>
  <entry>
    <title>あなたを救うための10年の仕事の経験</title>
    <url>/ja/Ten-years-of-work-experience/</url>
    <content><![CDATA[<p>アマゾンスペシャル、ドゥバンスコアが低くなければすぐに入ることができます </p>
<p>最初の基準は次のとおりだとは思わないでください。<br><strong>コンピューターで個人的に作業しないでください</strong> </p>
<p>2番目の基準を見ると、実際には次のようになります。<br><strong>専門的な知識をつまずきとしてとらえます</strong> </p>
<p>コードファーマーとして、私はハハしかできません </p>
<a id="more"></a>

<p>幸いなことに3番目と4番目： </p>
<ul>
<li><strong>力の中心に押し込みます</strong> </li>
<li>** HRを信用しないでください** </li>
</ul>
<p>最後に意味があります </p>
<p>次に何をあげましたか </p>
<ul>
<li><strong>時間内にネットワークから役に立たない人を追い出します</strong> </li>
<li><strong>ルールに反して</strong> </li>
<li><strong>大物をキャッチ</strong> </li>
<li>**ラダーを作るために風を見てください </li>
<li><strong>容赦なし</strong> </li>
<li><strong>部下の信用をつかむ</strong> </li>
<li>… </li>
</ul>
<p>そのようなもので、偉大な黒人リーダーの李宗武は「石炭のように真っ黒で、城壁のように顔を向ける」というスタイルを持っています </p>
<p>ひざまずくだけ </p>
<p>本の終わりは、ヴィーゼルのような古いフリッターが豚の足を結婚をあきらめるだろうと思ったちょうどその時、家族とキャリアの重さについてです<br>私は会話の前線を変えたくなかったので、冷静にそれを投げました：<br><strong>これは、あなたの望むことですか？ **</strong> </p>
<p>要するに、本全体の印象は1つだけです。 </p>
<p>あなたが言ったことは理にかなっています、私は言葉を失いました </p>
<p>233333 </p>
]]></content>
      <tags>
        <tag>Career</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>プログラマーのためのデザインブック</title>
    <url>/ja/The-Non-Designer-s-Design-Book/</url>
    <content><![CDATA[<p>私はこの本をとても啓発的に見ています<br>その結果、私たちのCTOはそれを拾い上げ、数日前にそれをめくりました。「絵はとても醜いですが、それはデザインです。 </p>
<p>ぎこちない </p>
<a id="more"></a>

<p>しかし、これは私が大学時代に読んだ<a href="http://book.douban.com/subject/3765227/">みんなのために書かれたC ++本</a>を思い出させます。当時はとても普通に感じましたが、Douban 8+ </p>
<p>したがって、適切な本に適切なタイミングで会うことが非常に重要です </p>
<p><code>C</code>から<code>C ++</code>にジャンプしてからしばらく経ちますが、<code>MFC</code>も使用されているので、おそらくもう誰もがいないでしょう。悟りがないのは普通のことです。 </p>
<p>この本に関して、私は個人的に、その目的はあなたをマスターとして訓練することではなく、<strong>デザインに注意を払わない</strong>または<strong>始めたいが始め方がわからない</strong>子供たちをターゲットにすることだと感じています。 </p>
<p>したがって、内部の使用例は、<strong>設計なし</strong>と<strong>基本的な設計要素</strong>の追加との比較です。これは当然専門家の目には見えません。 </p>
<ol>
<li>4つの原則： </li>
</ol>
<ul>
<li>親密 </li>
<li>整列 </li>
<li>繰り返す </li>
<li>比較 </li>
</ul>
<p>2.色 </p>
<ul>
<li>補完的 </li>
<li>トリコロール </li>
<li>補完的なトリコロールを分割 </li>
<li>似たような色 </li>
<li>暗くて明るい </li>
</ul>
<p>3.フォント </p>
<ul>
<li>オールドスタイル </li>
<li>モダン </li>
<li>スラブセリフ </li>
<li>セリフなし </li>
<li>脚本 </li>
</ul>
<p>デザインをしたことがない人は、これらの基本的なポイントに気付くかもしれませんが、独自のシステムはありません。 </p>
<p>人間の脳は、何かを知ったら、それを知らなかったときの状態に戻ったり、シミュレートしたりすることはできません。これは<strong>知識の呪い</strong>であり、冒頭の段落で述べた「ジョシュアツリー」でもあります。 </p>
<p>したがって、プーケットでデザインされた子供用の靴はすぐに広げる必要があります </p>
]]></content>
      <tags>
        <tag>Design</tag>
      </tags>
  </entry>
  <entry>
    <title>リファクタリングは特効薬ではありません</title>
    <url>/ja/Refactoring-is-not-a-silver-bullet/</url>
    <content><![CDATA[<p>この本が書かれたとき、オブジェクト指向はまだニッチでしたが、今では機能的なプログラミングが人気になっています </p>
<p>今日、リファクタリングのアイデアと方法のほとんどは、少し熱心なプログラマーによって聞かれます。Javaプログラマーの場合、知らないことはさらに困難です。<br>これまでのところ、再構築はコーディングの一部に似ています </p>
<p>この本の第1章から第2章3章では、リファクタリングとは何か、いつ注意深く読むべきかについてはすでに説明しています。<br>4 5 6 7 8 9 10 11は特定の方法であり、Javaに精通している人は見てみることができます<br>次の章をスキップしてください </p>
<a id="more"></a>

<hr>
<p>私はかつて学校で<a href="http://book.douban.com/subject/1477390/">“CodeEncyclopedia”</a>をブラッシングしたことがあるので、この本を読んだ後、<strong>相対</strong>はそれほど重要ではありません </p>
<p>たとえば、私のiOSは弱いですが、会社のプロジェクトを今見ていると、何百行もの関数、たくさんの繰り返しコード、さまざまな魔法の数字に夢中になっています。<br>もちろん、これは前のプロジェクトが良くなかったということではありません。結局のところ、誰もが_deadline_によって馬鹿にされました </p>
<p>一般的に、この本は<strong>パススルー</strong>する必要があります。結局のところ、表紙は次のように印刷されています。 </p>
<blockquote>
<p>通常のプログラマーがプログラミングマスターに進むために練習しなければならない詐欺 </p>
</blockquote>
<p>見ないと、人が通りかかった穴に気づかないかもしれないからです。 </p>
<p>一時変数の私の理解が間違っているように<br><code>let</code>のないパラメーターや、公開されていないものに<code>private</code>を追加しないパラメーターのように、<strong>ランダムすぎる</strong>関数の以前の記述もあります。 </p>
<p>より有益なものは次のとおりです。 </p>
<ul>
<li>一時的な変数を排除する </li>
<li>多形性がスイッチに取って代わります </li>
<li>ヌルオブジェクト </li>
</ul>
<p>現在、iOSを作る時間はまだ短いです。私はジュニアプログラマーに属しています。理解できないことがたくさんあります。試行錯誤しながら機能を実行するたびに、これらすべてを無視して作成します。<br>関数がOKになった直後にリファクタリングを考えることがよくありますが、人々は怠惰で、実行できればすべてがうまくいくことをよく見て、コードを整理してリファクタリングすることを望んでいます。 </p>
<p>理想的な状況は次のとおりです。<br>バージョンコントロール+レビュー+ペアリング+リファクタリング(現在の会社はとても良いです、それはほとんど実装されています) </p>
<p>しかし、これは1987年にFred Brooksによって発行されたソフトウェアエンジニアリングに関する古典的な論文を思い出させます-[“No Silver Bullet”](<a href="http://zh.wikipedia.org/wiki/%E6%B2%">http://zh.wikipedia.org/wiki/%E6%B2%</a> A1％E6％9C％89％E9％93％B6％E5％BC％B9) </p>
<p>リファクタリングは確かに特効薬ではありません </p>
<p>男の子しか書き直せない </p>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>決して考えない</title>
    <url>/ja/Never-Expected/</url>
    <content><![CDATA[<h2 id="追いつかないということは追いつかないということです"><a href="#追いつかないということは追いつかないということです" class="headerlink" title="追いつかないということは追いつかないということです"></a>追いつかないということは追いつかないということです</h2><a id="more"></a>

<h4 id="よくある考え方の間違い"><a href="#よくある考え方の間違い" class="headerlink" title="よくある考え方の間違い"></a>よくある考え方の間違い</h4><p>これは基本的に心理学の本で言及されています </p>
<h4 id="反撃する方法"><a href="#反撃する方法" class="headerlink" title="反撃する方法"></a>反撃する方法</h4><p>ルールの不快感を変更する </p>
<h4 id="ウィルパワー"><a href="#ウィルパワー" class="headerlink" title="ウィルパワー"></a>ウィルパワー</h4><ul>
<li>訓練可能な筋肉 </li>
<li>美しさ </li>
<li>マントラ </li>
</ul>
<h4 id="1W時間"><a href="#1W時間" class="headerlink" title="1W時間"></a>1W時間</h4><p>タイガーウッズが邪魔されると、彼はすぐに行動を中断します。これは間違いなくマスターの目に衝撃的です。 </p>
<p>意図的なトレーニングは間違いなく退屈です。私が以前考えたのは、比較的表面的な段階、つまりエンターテインメントで<strong>中学校</strong>をプレイできるということです。 </p>
<p>幸いなことに、次のように述べています。<strong>関心</strong>はこの退屈なものを相殺することができます </p>
<p>そして遺伝子は持っています： </p>
<blockquote>
<p>ドライブ理論の作成経験 </p>
</blockquote>
<p>「わがままな遺伝子」の一部を読みましたが、まだ理論があります </p>
<p>この本には、私が直面している混乱を説明する段落があります。どんなに頑張っても、幼い頃から始めた人、つまりスタートラインで負けた人との間に大きなギャップがあることがわかったからです。 </p>
<blockquote>
<p>18歳までに、2番目のグループは最初のグループより2000時間以上練習していませんでした。現在、彼らは一生懸命働いていますが、手遅れです。 これは音楽にも当てはまり、スポーツ(プログラミング)にも当てはまります。追いつかないということは、追いつくことができないということです。 </p>
</blockquote>
<!--more-->

<h4 id="理科"><a href="#理科" class="headerlink" title="理科"></a>理科</h4><ul>
<li>限られた想像力 </li>
<li>解釈+予測 </li>
</ul>
<h4 id="思考強度-準備時間-読み取り時間"><a href="#思考強度-準備時間-読み取り時間" class="headerlink" title="思考強度=準備時間/読み取り時間"></a>思考強度=準備時間/読み取り時間</h4><h4 id="読書"><a href="#読書" class="headerlink" title="読書"></a>読書</h4><ul>
<li>トススキムリード </li>
<li>狭い| 幅広いフレーミング </li>
<li>ノート </li>
</ul>
<p>実は「本の読み方」を読んだ後、2回読む予定ですが、実装していないので、その気持ちを覚えていると思います(ほとんどの場合、読書は知識を覚えていません)<br>この本は実装を開始することを決定しました、そして確かに、2回目に多くの脱落が見つかりました </p>
<h4 id="勝者の本当の色"><a href="#勝者の本当の色" class="headerlink" title="勝者の本当の色"></a><a href="http://www.geekonomics10000.com/829">勝者の本当の色</a></h4><ul>
<li>競争-テストステロン-リングフィンガーの長さ </li>
<li>ウォリアーズ-ウォリアーズ </li>
<li>ストレス-COMT(速い|遅い酵素) </li>
<li>有限-無限のゲーム </li>
<li>自信過剰の進化 </li>
</ul>
<p>以前ブログで見ました<br>明らかに私はWorriorsであり、バーストではなく、無制限のターンベースのゲームに適しています。<br>通常は、押して叩き、重要な瞬間に圧力を解放するようにしてください。 </p>
<h4 id="その他"><a href="#その他" class="headerlink" title="その他"></a>その他</h4><p>体力-タイムリーなフィードバック<br>頭脳のない時間 </p>
<p>知人と組んでみませんか？ (YoutubeのYahooとの再会は反例ですが、Sequoiaは確かに弱いリンクです) </p>
<p>生まれ変わりは科学が説明できない状態にあります </p>
<p>集合的な想像力 </p>
]]></content>
      <tags>
        <tag>Tech</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>ランニングについて話すときに私が話すこと</title>
    <url>/ja/What-I-talk-about-when-I-talk-about-running/</url>
    <content><![CDATA[<p>古い息が最初から最後まで本に浸透している<br>時間の経過と身体能力の低下に関しては、代替手段はありません </p>
<p>慌てて抵抗し、古いものに従わないと主張するのとは異なります。そうです、作者は徐々にこの事実を受け入れ、原則としてそれを使って対処しました。 </p>
<p>私が興味を持っている多くの質問、著者はまた反省し、より深く行きました </p>
<p>これは大まかに： </p>
<blockquote>
<p>私は一人でいるのが好きな人です。 </p>
</blockquote>
<a id="more"></a>

<hr>
<blockquote>
<p>私は毎日、もっと書くことができると感じたところで立ち止まります。 そうすれば、翌日の仕事は驚くほどスムーズに進みます。 アーネストヘミングウェイはそのようなことをしたと思います。 続けるには、リズムを維持する必要があります。 これはlongCtermプロジェクトにとって重要なことです。 </p>
</blockquote>
<blockquote>
<p>私は一人でいるのが苦痛ではないと感じるタイプの人です。 毎日1時間か2時間、誰とも話さずに一人で走り、デスクで4時間か5時間一人で過ごすことは、難しくも退屈でもありません。 </p>
</blockquote>
<blockquote>
<p>私はバーを経営していたので、他の人と一緒にいることの重要性と、私たちだけでは生き残れないという明らかなポイントを学びました。 </p>
</blockquote>
<blockquote>
<p>雲は空のただの客であり、空を残して消え去ります。 </p>
</blockquote>
<blockquote>
<p>自分自身を独立させることができるのは、人が他の人と違うからです。 </p>
</blockquote>
<blockquote>
<p>私はそれに私が持っていたすべてを与えなければなりませんでした。 私が失敗した場合、私はそれを受け入れることができました。 でも、中途半端にやってもうまくいかなかったら、いつも後悔していることはわかっていました。 </p>
</blockquote>
<blockquote>
<p>教育制度を経て、いわゆる社会人になった後、勉強を楽しみ始めました。 </p>
</blockquote>
<blockquote>
<p>クラブを閉鎖したので、これからは見たい人だけに会い、見なかった人にはできるだけ会わないようにすることにしました。 私たちは、少なくともしばらくの間、このささやかな耽溺を許すことができると感じました。 </p>
</blockquote>
<blockquote>
<p>それは私の本当の学校教育でした。 しかし、そのような生活を永遠に続けることはできません。 学校と同じように、あなたはそこに入り、何かを学び、そしてそれから去る時が来ました。 </p>
</blockquote>
<blockquote>
<p>私は、あなたが若いときを除いて、あなたが本当に人生で優先順位をつけ、あなたの時間とエネルギーをどのような順序で分けるべきかを理解する必要がある方法に感銘を受けました。 そのようなシステムを特定の年齢までに設定しないと、集中力が失われ、人生のバランスが崩れます。 </p>
</blockquote>
<blockquote>
<p>言い換えれば、みんなを喜ばせることはできません </p>
</blockquote>
<blockquote>
<p>人生は公正ではありません、それが私を襲った方法です。 一部の人々は自分の尻を切り落とし、彼らが目指しているものを決して得ることができませんが、他の人々はまったく努力なしでそれを得ることができます。 </p>
</blockquote>
<blockquote>
<p>それは私に合っています。 または、少なくとも私はそれがそれほど苦痛だとは思わないからです。 </p>
</blockquote>
<blockquote>
<p>私たちが学校で学ぶ最も重要なことは、最も重要なことは学校では学ぶことができないという事実です </p>
</blockquote>
<blockquote>
<p>彼らがこれらを乗り越えている間、彼らは実際に彼らの中に本当の隠された才能を発見するかもしれません </p>
</blockquote>
<blockquote>
<p>私はいつも人生でやりたいと思ったことは何でもしました。 人々は私を止めようとし、私が間違っていると私に納得させるかもしれませんが、私は変わりません。 </p>
</blockquote>
<blockquote>
<p>私自身の、頑固で、非協力的で、しばしば自己中心的な性質であり、それでも自分自身を疑っています。問題が発生すると、状況について何か面白いもの、またはほぼ面白いものを見つけようとします。 </p>
</blockquote>
<blockquote>
<p>もちろん、これには時間がかかりますが、実際には時間がかかることもあります。 </p>
</blockquote>
]]></content>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS CI(Jenkins + pH AB Rica Tor +スラック)</title>
    <url>/ja/iOS-CI-Jenkins-Phabricator-Slack/</url>
    <content><![CDATA[<p><code>shell</code>里<code>brew install jenkins</code><br>次に <code>jenkins</code>が起動し、サーロインデバイスに127.0.0.1:8080と入力して、ピットにジャンプします </p>
<p>Jenkinsに <code>xcode</code>関連のプラグインをインストールします<br>手順は、次のような他のブログ、Google _iosci継続的統合_で利用できます。 </p>
<ul>
<li><a href="http://www.itiger.me/?p=30">Jenkins + Github + TestflightはMacで継続的な統合環境を構築します</a>、 </li>
<li><a href="http://www.jianshu.com/p/63073573e2ee">iOSプロジェクトの継続的な統合のためのTravisCI</a> </li>
</ul>
<a id="more"></a>

<p>バージョンは古いかもしれませんが、あなたはそれを補うことができます </p>
<p>ここで使用するPhabricatorは、iOSであるため、サーバーではなくローカルMacに配置されるため、秘密鍵で十分であり、JenkinsとPhabricator間のコールバックの相互作用は重要ではありません。 </p>
<p>さらに、いくつかの問題があります。 </p>
<h3 id="jenkins-plugins-slack-ActiveNotifier-hudson-model-listeners-npe"><a href="#jenkins-plugins-slack-ActiveNotifier-hudson-model-listeners-npe" class="headerlink" title="jenkins.plugins.slack.ActiveNotifier hudson.model.listeners npe"></a>jenkins.plugins.slack.ActiveNotifier hudson.model.listeners npe</h3><p>テストプッシュメッセージは良いです<br>2時間後、何が起こっているのかわかりません。私は寝ましたが、翌日は正常でした… </p>
<p>理由を知っているようです、_ProjectChannel_を空にすることはできません </p>
<h3 id="ResourceRules-plist"><a href="#ResourceRules-plist" class="headerlink" title="ResourceRules.plist"></a>ResourceRules.plist</h3><p>初日、ResourceRules.plistが間違っているというプロンプトが表示されたため、これがプロジェクトとJenkinsの構成に追加されました。<br><code>カスタムxcodebuild引数$(SDKROOT)/ ResourceRules.plist</code> </p>
<p>その結果、翌日にResourceRules.plistが見つかりませんでした。Jenkinsでこれを削除しても問題ありませんでした。すばらしいです。 </p>
<h3 id="iPhone開発者：IDが見つかりません"><a href="#iPhone開発者：IDが見つかりません" class="headerlink" title="iPhone開発者：IDが見つかりません"></a>iPhone開発者：IDが見つかりません</h3><p><code>swift-stdlib-toolが終了コード1で失敗しました</code> </p>
<p>development.apple.comにアクセスしてさまざまな証明書をダウンロードしますが、いずれも機能しません<br>本当に方法はありません。xcodeを使用して <code>〜/ .jenkins / jobs / ****</code>の下でプロジェクトを直接開きました。比較したかったのですが、キーチェーンに追加の証明書があることが判明し、成功しました… </p>
<hr>
<p><del>また、企業アカウントはまだ購入されておらず、ジェンキンスはアカウントシステムを開いていないので、お待ちください</del> </p>
<h3 id="DUNS-ダン＆ブラッドストリートコード"><a href="#DUNS-ダン＆ブラッドストリートコード" class="headerlink" title="DUNS(ダン＆ブラッドストリートコード)"></a>DUNS(ダン＆ブラッドストリートコード)</h3><p>会社のアカウントは以前ここでスタックしていて、Appleのメールが長い間応答していなかったので、必ずAppleのカスタマーサービスに電話してください。1日か2日で問題ありません。 </p>
<h3 id="バンドル識別子"><a href="#バンドル識別子" class="headerlink" title="バンドル識別子"></a>バンドル識別子</h3><p>以前は、企業アカウントの.alphaと.betaが占有されていて、ここで企業アカウントに対して同じ証明書を作成できなかったため、<em>元のアカウントを削除</em>するか、_IDを変更する必要がありました。 </p>
<p>その結果、削除する場合、アプリはいくつかの状態である必要があることがわかりました。公式ドキュメント：<a href="https://developer.apple.com/library/mac/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/TransferringAndDeletingApps.html">TransferringAndDeletingApps</a> </p>
<p>以前は、ベータ版がテストフライトとして使用され、AppStoreはアップロードされていませんでした。 </p>
<blockquote>
<p>現在、アプリには少なくとも1つの承認済みバージョンがありません。 </p>
</blockquote>
<p>..。<br>IDを変更する必要がありました </p>
<h3 id="無線配信"><a href="#無線配信" class="headerlink" title="無線配信"></a>無線配信</h3><p>すべての準備が整い、すぐにエクスポートします。Xcode6以降、一致する.plistなしでipaをガイドするための.ipaは1つしかないため、自分で作成する必要があります…(幸い、Jenkinsは自動的に生成することもできます)。おおよそ次のようになります。<a href="https://gist.github.com/leihao0/f292d65163b26a2169d4">plist</a>($ $の対応するものを変更します) </p>
<p>次に、 <code>python -m SimpleHTTPServer</code>、iPhoneでSafariを開きますが、結果は…まだ機能していません… </p>
<p>サーバーはhttps …である必要があることが後で発見されました。 </p>
<h3 id="ビルド番号"><a href="#ビルド番号" class="headerlink" title="ビルド番号"></a>ビルド番号</h3><p><code>ターゲット-&gt;ビルドフェーズ-&gt; +新しい実行スクリプトフェーズ</code> </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">buildNumber=$(/usr/libexec/PlistBuddy -c <span class="string">&quot;Print CFBundleVersion&quot;</span> <span class="string">&quot;<span class="variable">$&#123;PROJECT_DIR&#125;</span>/<span class="variable">$&#123;INFOPLIST_FILE&#125;</span>&quot;</span>)</span><br><span class="line">buildNumber=$((<span class="variable">$buildNumber</span> + <span class="number">1</span>))</span><br><span class="line">/usr/libexec/PlistBuddy -c <span class="string">&quot;Set :CFBundleVersion <span class="variable">$buildNumber</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;PROJECT_DIR&#125;</span>/<span class="variable">$&#123;INFOPLIST_FILE&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>スキームがリリースされると、ビルドは自動的に+1されます </p>
<p>PS：<br>実際、これはJenkinsビルドステップのシェルで記述し、origin / masterにプッシュしてから、\ *。ipaをサーバーにアップロードできます。 </p>
<h3 id="OSXサーバー"><a href="#OSXサーバー" class="headerlink" title="OSXサーバー"></a>OSXサーバー</h3><p>ピット、整理する時間があります </p>
<h3 id="DistributionProvisioningProfiles"><a href="#DistributionProvisioningProfiles" class="headerlink" title="DistributionProvisioningProfiles"></a>DistributionProvisioningProfiles</h3><p>ダウンロードした <code>*。mobileprovision</code>を直接ダウンロードし、パスを書き込んで十分ではないことがわかったので、自分で手動でパッケージ化する必要があります </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">xcodebuild -exportArchive -exportFormat IPA -archivePath <span class="string">&quot;<span class="variable">$Yourarchive</span>&quot;</span> \</span><br><span class="line"> -exportPath imeican-Beta-xcodebuild.ipa \</span><br><span class="line"> -exportProvisioningProfile <span class="variable">$YourDistributionProvisioningProfiles</span></span><br></pre></td></tr></table></figure>

<p>総括する：<br>ピットまでずっと </p>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>痛みのない鍼</title>
    <url>/ja/Painless-Acupuncture/</url>
    <content><![CDATA[<p>魔法のグループ粢饭で中国医学について話したところ、同僚の80％が中国医学は欺瞞的だと思っていたので、小さな魔道士はショックを受けました。 </p>
<p>後で、レッドライディングフードの魔術師と話しました。小さな魔道士は、癒しは行進と戦いのようなものだと思いました。 </p>
<p>両陣営の戦闘力：I5敵8 </p>
<a id="more"></a>

<p>西洋医学はウイルスを直接殺し、敵の戦闘力を3に減らします<br>そして、中国医学は私たちの戦闘力を10に増やすためにハローを追加するようなものです </p>
<p>結果に関しては、戦いの後に2つあるので、特定の計画を信じないのが最善です。 </p>
<p>不信仰については、嘘つきが多すぎるかもしれません。たとえば、何度か騙された後は、愛を信じなくなります。<br>一方で、医学には限界があり、西洋医学が比較的完璧である今日でも、一部の疾患に対する効果的な治療法がまだないことは言うまでもなく、癌は依然として誤診される可能性があります。<br>不思議なことに魔法を学ぶ子供が魔法の道具さえ修理できないように、一般の人々が中国医学の理論を誤解している可能性もあります。 </p>
<p>マジックアカデミーの3年目に、小さな魔道士は深刻な病気にかかり、変装して祝福されたくなかったので、[人間の生態学的バランスの理論](<a href="http://leihao0.github.io/2012/05/28/%E4%BA%">http://leihao0.github.io/2012/05/28/%E4%BA%</a> BA％E4％BD％93％E7％94％9F％E6％80％81％E5％B9％B3％E8％A1％A1％E8％AE％BA /)、Dacheの後に病気はありません<br>普段は風邪をひくシャオチャオは、そりナイフで鶏を殺し、[黄ディネイジン]の「スウェン・フォーチーティアオシェンダルン」を直接犠牲にする(<a href="http://book.douban.com/subject/3843957/">http://book.douban.com/subject/3843957/</a>) </p>
<blockquote>
<p>そのため、聖人は病気を治さず、病気を治し、賢人は病気を治さず、病気を治します。 夫の病気が病気になり、次に薬になり、混乱が生じ、そして彼が治癒することができれば、遅すぎることはありません。 </p>
</blockquote>
<p>病気が始まろうとしていて警告が出たら、事前に計算して解消してください </p>
<p>しかし、先ほども言ったように、小さな魔道士は職業上の問題で腰と頸椎に問題があります。たとえば、<a href="http://book.douban.com/subject/25981248/">Magician Health Guide</a>のKWテストは合格できません。 、ヨガのスイングはそれを行うことはできません </p>
<p>しかし、小さな魔道士は怠惰で、運動を続けることができず、何十年もの間、Chun Shang Chun Shuのように走っているので、彼は鍼治療しか期待できません。 </p>
<hr>
<p>正確には、鍼とモキシバストは、鍼とモキシバストに分けられますが、鍼とモキシバストはすべて針刺しだと思われることが多いので、このように説明しましょう。 </p>
<p>Descartesはかつて、<a href="http://book.douban.com/subject/1071023/">方法について話す</a>で、問題の調査方法を4つのステップに分割しました。最初のステップは次のとおりです。 </p>
<blockquote>
<p>私は自分がはっきりしていない真実を決して受け入れません。つまり、無謀や偏見を避けなければならず、疑わしい真実がなくても、自分の判断に基づいて非常に明確で確実になります。 つまり、あなたが個人的に経験した問題を経験していない限り、あなたがどんな権威ある結論を持っていても、あなたはそれを疑うことができます。 これは有名な「すべてを疑う」理論です。 たとえば、アリストトルはかつて、女性の歯は男性より2つ少ないと結論付けていました。 しかし、それは真実ではありません。 </p>
</blockquote>
<p>私は薬を飲んだが何も改善されていないので、小さな魔道士は漢方薬を信じていません。 </p>
<p>しかし、子午線、正確には、尖点は、感じやすいです<br>たとえば、Hegu(Hukou)、Jianjing、自分でつまんでから別の場所をつまむと、普通の肉ではないことがわかります<br>子午線はインドのヨガの3つのチャクラと7つの子午線と衝突するので、懐疑的なのは小さな魔道士です </p>
<p>針の前に何度も、小さな魔道士はプロセス全体をシミュレートしていました：<br>2.5インチのステンレス鋼の針が表皮-&gt;真皮-&gt;皮下組織を楽々と貫通しているのを見ました。尖点の認識が不正確だったため、残念ながらそれは動脈と静脈に触れました。小さな魔道士の痛みを伴う手が震え、次の針を壊しました。 自律運動神経、私の人生の残りの間無効になっています… </p>
<p>マーク・トウェインは晩年に嘆きました </p>
<blockquote>
<p>私は人生のほとんどを、今までにないことを心配して過ごしてきました。何もないことを心配することほど愚かな行動はありません。 </p>
</blockquote>
<p>小さな魔道士は、中国伝統医学大学の小さなパートナーによって数回刺されました。大きな事故もなく跳ね返ることができた後、運動神経は以前の想像のように光ファイバーのようではなかったと思いました。1つしかなく、壊れたときに壊れました。 根はたくさんあり、生物は自分自身を修復する能力を持っています </p>
<p>しかし、小さな友達は遠くに住んでいて、頻繁に来ることはできません。彼は毎回病院の針を持っているので、小さな魔道士は自分の面倒を見てくれます。 </p>
<p>もちろん、小さなパートナーが社会主義の隅を掘る行為は厳しく禁止されるべきです。 しかし、他のものと比べて、自分の家電を使わないために超大型のパワーバンクを購入し、帰ってくるたびにノートを充電し、唖然とした人々の警察に小さな魔道士を知らせました。 </p>
<hr>
<p>しかし、まだ問題があります-小さな魔道士は痛みを恐れています<br>これが彼が毎日身体検査を受けていない理由でもあります </p>
<p>そこで、小さな魔道士は、レンとドゥの2つのチャネルを開くことによってこの問題を完全に解決しようとして、最初に<a href="http://book.douban.com/subject/4665276/">True Qi操作方法</a>から移動し、愚かなことに[ ログ](<a href="http://leihao0.github.io/2014/01/08/%E7%9C%9F%E6%B0%94%E8%BF%90%E8%A1%8C%E6%B3%95-">http://leihao0.github.io/2014/01/08/%E7%9C%9F%E6%B0%94%E8%BF%90%E8%A1%8C%E6%B3%95-</a> ％E6％89％93％E9％80％9A％E5％B0％8F％E5％91％A8％E5％A4％A9％E8％AE％B0％E5％BD％95 /)プロセス全体を記録するのは残念です 気が尻尾に引っかかっているときは、減速することしかできません </p>
<p>しかし、頸椎の速度を落とすことはできません。第一に、それは睡眠に影響を及ぼし、第二に、私は自分自身を恐れています。 </p>
<blockquote>
<p>第二に、劉福を支配し、次に武蔵を支配します。 5人のチベット人を支配する人々は半分死んで半分生きています。 </p>
</blockquote>
<p>それは新年の夜でした。小さな魔道士はベッドを投げて電源を入れていました、そしてこの沈黙の瞬間に、彼はSchopenhauer <a href="http://book.douban.com/subject/1004699/">意志と外観としての世界</a>を思い出しました。 いくつかの言葉： </p>
<blockquote>
<p>存在するものはすべて、主題の存在にすぎないことがわかります。 </p>
</blockquote>
<p>この数文を語っていたとき、その理由がわからなかったのですが、今、首、肩、腰、脚の病気は、治りにくい臓器の病気とは違うことを突然思い出しました。不規則な治療やリハビリ訓練は病気を引き起こすだけです。 繰り返される、あるいは悪化する痛みですが、「意志と外見の世界」の本質によれば、この病気は「私」にのみ存在するようです。<br>これを考えて、小さな魔道士はすぐに立ち上がって本をめくった、と郭西安は再び言った： </p>
<blockquote>
<p>体が外的影響を受けるたびに、この効果は即座に直接私の意志を刺激します…そしてその逆もまた真です。意志のあらゆる激しい興奮、つまり触覚と情熱は体を揺さぶり、体の機能を妨げます。 実行 </p>
</blockquote>
<p>このことを考えると、小さな魔道士は突然、足を組んで座っていることに気づき、「真の気の動き」に示されている方法に従って息を調整しました<br>それから彼は自分の考えを光線に集中させ、針のサンプル紙を形成し、ゆっくりとダジュイに突っ込みました。予想通り、周囲の筋肉は徐々にリラックスしました。<br>その後、小さな魔道士は鳳凰、鳳凰(これは風邪を治療するためではありませんか？)、そして高遼(重病で、本当に鍼治療のポイントです)を連れて行きました。<br>鍼治療が終わった後、軽い針がゆっくりと熱を放散することを想像してください([暖かい針の酸化](<a href="http://leihao0.github.io/2013/09/11/%E6%B8%A9%E9%92%88%E7%">http://leihao0.github.io/2013/09/11/%E6%B8%A9%E9%92%88%E7%</a> 81％B8 /)) </p>
<p>ゆっくりと、小さな魔道士は無事に夢に落ちました </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>リーガルイングリッシュの透析</title>
    <url>/ja/How-to-Learn-English/</url>
    <content><![CDATA[<p>小さな魔道士は彼のエルフの言語レベルがどのようであるかを見たかった<br>マジックアカデミーを卒業する前に、CET6認定を取得しました<br>残念ながら、この証明書は真のレベルに対応できません </p>
<p>以前は、小さな魔道士はエルフの言葉を扱うときにたった1つのトリックしかありませんでした-NCEを引用してください<br>これはまた、小さな魔道士が天体認証に合格するのに役立ちました </p>
<a id="more"></a>

<p>しかし、本を100回読むことは、普遍的なルールではありません。小さな魔道士は、各記事を何百回も読むことはできませんが、彼はそれについて考えたことがないようです。<br>たとえば、高校では、ヤリの下での大学入学試験で、私は、数回、唱えることができなかったために、クラス全体を代表するように罰金を科されました。 </p>
<p>暗闇の中に神の意志があります。約1年前、小さな魔道士が誤って真実の本を手に入れました-<a href="http://book.douban.com/subject/3748247/">ダファの透析</a> </p>
<p>私はたくさん騙されました。最初、小さな魔道士はそれが<a href="http://book.douban.com/subject/1008501/">しない</a>この種の疑似主題であり、_Leakhouse_によって書かれた記事であると思いました[神贴] ](<a href="http://book.douban.com/subject/11522125/)、ヒントは指摘されていますが、対応するトレーニング計画は示されていません">http://book.douban.com/subject/11522125/)、ヒントは指摘されていますが、対応するトレーニング計画は示されていません</a> </p>
<p>ダファの透析は可能な限り優れており、ピットからゴッドシリーズまでのモデルと言えます。各レベルがゴッドホースを練習する必要があることを詳細に記述しているだけでなく、可能なパスも含まれています。 </p>
<p>それから小さな魔道士は練習を始めました </p>
<hr>
<p>一年後… </p>
<p>小さな魔道士の栽培の進捗は本当に遅いと言わざるを得ず、ギャップイヤーは小学校<a href="http://book.douban.com/subject/4201317/">Introductory Phonetics</a>を過ぎたところです。 カウント](<a href="http://book.douban.com/review/6300403/">http://book.douban.com/review/6300403/</a>)) </p>
<p>ミドルレベルのESL(低速)の後、小さな魔道士は忍耐強くトップ80に耳を傾け、テクノロジーに飛び込むしかありませんでした </p>
<p>中〜高レベルのAPWポッドキャストについては、たとえそれが行われたとしても、小さな魔道士は何気なくそれを見て聞いていました。 </p>
<p>次に、次の高レベルのAACをブラッシュオフし、最高レベルのSSSを強制的に練習します。 </p>
<p>もちろん、これらは<strong>ランダムに</strong>運命づけられています… </p>
<hr>
<p>マジックアカデミーの頃、小さな魔道士は西側でIELTSというテストがあると聞いていましたが、その結果から判断すると、地元のエルフは良いバッジを手に入れ、小さな魔道士は試してみる心を持っていました。 </p>
<p>でも料金を確認してみるとショックで、CETのセレスティアルコインの1％が参加できるのではないかと思いました。 </p>
<p>ですから、小さな魔道士は、よく準備し、刃にお金を使い、不必要な犠牲を払わず、経験を与えないことを決心しました。 </p>
<p>虎よりも激しいインフレーションを望まないでください。この料金は年々上昇し、2を破る傾向があります。 </p>
<p>少し前に、小さな魔道士は彼の友人がサインアップしたのを見て、「税の遅れ」の文を追加し、歯を食いしばってそれを報告しました。 </p>
<hr>
<p>テストアドレスは理想的で、現在のマジックグループのすぐ隣にあります </p>
<p>小さな魔道士がサインアップしたとき、小さなそろばんはとても良かったです-試験の後、あなたは食事をするために会社に戻ることができます、それは素晴らしいです </p>
<p>つづく </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>澄んだ水と青い空</title>
    <url>/ja/Blue-Sky-and-Sea/</url>
    <content><![CDATA[<p>遠くのスカイラインに2つの黒い斑点が現れました。ゆっくりと拡大した後、2人の人、ああ、2人のマジスターがいました。<br>彼らの飛行速度は非常に速く、そのような速度をサポートすることは、2つの魔法の力が高いことを示しています </p>
<a id="more"></a>

<p>このようにスピードを上げれば、締め切りに間に合わなくても魔法はほとんど残っていないという魔術師αの話を聞いてみてください。魔法を抑えてスターゲートに行ってみませんか？<br>βはαを見て、長い間前進し続け、失敗した場合はゆっくりと言った<br>α身震いせずにはいられない、寒すぎる高地に刺激されているのかわからない </p>
<p>βが言った後、私はそれを捕まえ、αにソイレントのボトルを投げ、それから彼の魔法を補うために静かにそれを飲みました </p>
<p>いわゆるスターゲートは長距離テレポーテーション用のツールです。マジシャンも簡単に通過できますが、スターゲートがマグルに占領されているのは無力です。入る前に、警備員は同様のトーチオーダーを使用します。 通行人が致命的な武器を持っているかどうかのオブシディアンテスト<br>メイジの99％は親切ですが、持っている魔法の石は聖なる火の叫びを止めず、メイジのレベルに達したメイジは全身に魔法で覆われています。小道具がなくても、オブシディアンを刺激します。<br>時間内に避難しなかったり、必死に行動したりしなければ、州レベルの軍隊が数分で現れ、あなたをつかんで小さな黒い家を閉じます。それ以来、世界は消えます。 </p>
<p>街に近づくと、UFOと間違えられたり、帝国の首都のミサイル防衛システムに撃墜されたりするのを避けるために、彼らはすぐに海抜1500未満に下がりました。 </p>
<hr>
<p>帝都は三方を山に囲まれています<br>西部の山々は[TaihangMountains](<a href="https://www.baidu.com/s?wd=%E5%A4%AA%E8%A1%8C%E5%B1%B1%E8%84%89&amp;hl_tag=textlink&amp;tn=">https://www.baidu.com/s?wd=%E5%A4%AA%E8%A1%8C%E5%B1%B1%E8%84%89&amp;hl_tag=textlink&amp;tn=</a> SE_hldp01350_v6v6zkg6)の北東の残骸<br>北と北東の山は[ヤンシャン山脈](<a href="https://www.baidu.com/s?wd=%E7%87%95%E5%B1%B1%E5%B1%B1%E8%84%89&amp;hl_tag">https://www.baidu.com/s?wd=%E7%87%95%E5%B1%B1%E5%B1%B1%E8%84%89&amp;hl_tag</a> 西部支部の= textlink＆tn = SE_hldp01350_v6v6zkg6)。<br>全体が半盆地の地形です </p>
<p>それぞれの山の頂上を遠くから見ると、ほとんどの魔術師はすでに配置されています<br>正午近く、描かれた巨大な魔法の輪がかすかに点滅した </p>
<blockquote>
<p>その時、太陽は千年前のガラスのように輝いています<br>-明陵孟中の「事件を驚かせる最初の瞬間」第28巻 </p>
</blockquote>
<p>山々は皇帝の姿を見せています </p>
<p>αβそれぞれの位置に飛んで、スタンバイの準備をします </p>
<hr>
<p>正午です、黄色い砂が空中にあり、転がっています </p>
<p>この時、最も高い山で、リリースグランドマジスターは空に一連の神秘的な呪文を描きました<br>7色の光の輝く柱が真っ直ぐ空に突入し、信号を受信した後、各ピークの魔術師は杖を空に向け、魔法の力で呪文を凝縮しました。<br><a href="https://en.wikipedia.org/wiki/Asia-Pacific_Economic_Cooperation">アジア太平洋経済協力</a> </p>
<p>しばらくの間、巨大な透明な水のような<a href="https://en.wikipedia.org/wiki/HEPA">HEPA</a>が、帝国の首都周辺の山々にゆっくりと上昇しました。<br>自然の力が魔法の召喚に接触した瞬間、<a href="https://en.wikipedia.org/wiki/Command-line_interface">シェル</a>の雨の湖面に波紋があります。 </p>
<p>これまでのところ、魔術師が魔法の力を使い果たす前に </p>
<p>ドームの下は空が高く、雲は青白く澄んだ水と青い空 </p>
<hr>
<p>もちろん、装備を持ってこない限り、小さな魔道士のレベルは低すぎます。そうでなければ、通常、スターゲートは、値上げ後に料金を支払えば、それを渡すことができます。<br>したがって、上記のことは彼とは何の関係もなく、彼はそれについて何も知りません。 </p>
<p>小さな魔道士が最近、空は特に青く、空気はたくさんの水蒸気で満たされていると感じているだけです。<br>空を見上げると、青い空は洗うようなもので、人々を酔わせます </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>iOSアプリを書き直すためのヒント</title>
    <url>/ja/Little-tips-about-rewrite-an-iOS-app/</url>
    <content><![CDATA[<p>私はギャップの年を終えて、去年の秋に私の現在の会社に行きました。 </p>
<a id="more"></a>

<p>新規参入者として、最初の1か月はあまり何もしませんでした。10年の経験を持つAMAPのソフトウェアエンジニアがいます。 私が彼に質問することがあるたびに、彼は詳細に説明し、辛抱強く私に刺激を与えるように頼みます。 しかし同時に、プロジェクトには数千行のコピー＆ペーストコードも見つかりました。 はい、<a href="http://cloc.sourceforge.net/">CLOC</a>を使用してカウントしましたが、合計で20,000行近くあることがわかりました。 </p>
<p>Objective-Cは非常に冗長で面倒なプログラミング言語であるため(つまり、同じ関数を実装するには数十行のコードを記述する必要があり、この関数はRubyで1行しかない場合があります)、このプロジェクトの計算は妥当です。 の。 ただし、コピーアンドペーストは常に避ける必要があります。さらに悪いことに、グローバル変数とマジックナンバーがいたるところに見られます。 </p>
<p>これは変ですよね？ 10年の経験があり、ポインタを簡単に処理でき、コンピュータシステムを深く理解しているプログラマーであれば、コードスタイルに注意を払ってみませんか？ 結局のところ、私たちはいつでもチームに新しいメンバーや新しい機能を追加する準備をする必要があります。 </p>
<p>彼は、ほとんどのコードは自分で書いたものであり、バグ修正は迅速だったと述べました。 しかし、彼は来月友人のスタートアップ会社に行く予定です。 それで、彼はちょうど去りました、そしてAnquのコード。😭😭。 </p>
<p>つづく… </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>夏の終わり</title>
    <url>/ja/Summer-Ends/</url>
    <content><![CDATA[<p><a href="http://music.163.com/#/song?id=26152612">夏の終わり</a><br>夏が本当に終わったので、これは良い音楽です。 </p>
<a id="more"></a>

<p>今年は、書くことも読むことも少なく、気分が悪くなりましたが、それ以前はギャップの時期で、生産的かつ効率的で、心が躍りました。 それで、なぜか考え始めて、帰ろうとしました。 </p>
<p>4月にゴーファーチャイナに行ってIT農家に会ったからです。 CTO、彼に言ってください、多分私はボトルネックの時期にいます。 </p>
<p>でも今は9月で夏は終わりました。私は北京に1年しか滞在していませんが、今でもこの人気のある状態で立ち往生しています。 </p>
<p>私はそれを理解したい </p>
<h2 id="モデル"><a href="#モデル" class="headerlink" title="モデル"></a>モデル</h2><p>まず、ライフスタイル(生存契約)は杭州とは異なり、杭州にいたときは、会社の近くにユニットを借りたり、歩いて通勤したり、自分の部屋に自分のバスルームを持っていたりして、気になりました。 しかし、北京では、同じモデルを使用する場合、私より古い古いユニットに住む必要があります！ さらに悪いことに、私は近所の人と暮らし、バスルームからキッチンまですべてを共有しなければなりません。 だからあなたはあなたの隣人が良いことを祈らなければなりません。<br>私にとって、内なる人間として、私はただ一人で生きたいと思っています。 </p>
<p>この事業の規模を調整したら、すぐに新しいユニットを借りて、今月末に引っ越しますが、1年が経過して二度と戻ってこないのです。 </p>
<h2 id="英文"><a href="#英文" class="headerlink" title="英文"></a>英文</h2><p>以前は毎月10冊以上読んでいましたが、英語版に絞り込んだここ数ヶ月で大幅に減少し、1ヶ月で読み終えることはほとんどありませんでした。 </p>
<p>気分が悪くなる本も、入力も出力もありません。 これは、私がブログや「リトルマスター」シリーズを投稿しなくなった重要な理由でもあります。 言うまでもなく、私はすべての新しいブログを英語で書くように強制します。 </p>
<h2 id="怠慢"><a href="#怠慢" class="headerlink" title="怠慢"></a>怠慢</h2><p>これは一般的な問題のようです。 しかし、GTDをあまりにも多く見た後、<a href="https://en.wikipedia.org/wiki/Polyphasic_sleep">Polyphasic Sleep</a>に基づいたヘルスサークルを見つけました。 1日に16個以上の<a href="https://book.douban.com/subject/4198078/">pomodoroes</a>を作成できます。<br>会社に戻ってからはやりたいことだけやっていて、まだまだ効率は高いと思います。 </p>
<p>DIYの代わりにアプリケーションを外部委託しましたが、開始日がわからないだけでなく、同僚も理解できないため、IELTSの準備と懸命な努力は依然として大きな課題です。 私はメインプロジェクトでコードの70％近くを書かなければならず、いくつかの関数を書き直さなければなりません。 新しいチームを管理する方法を見つけたいと思っています(現在、TLアシスタントが好きです)。 </p>
<p>だから、使っていたアプリは全部返却されて、本当に状況が良くなったと思います。 </p>
<h2 id="スラック"><a href="#スラック" class="headerlink" title="スラック"></a>スラック</h2><p>Slackについては話していませんが、将来的にはAPIに基づいてCIのコードを作成する予定です。 </p>
<p>逃げ出したものをいくつか見つけましたが、今後はもっと頑張っていきます。たとえば、同僚にもっと書いてもらい、翻訳版を読んで、切り取ってもらいたいです。 </p>
<p>したがって、私はもう希望しません。 </p>
<p>このように、冬はここにあります。 </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>JenkinsなしでiOSCIを構築する方法</title>
    <url>/ja/How-to-build-an-iOS-CI-without-jenkins/</url>
    <content><![CDATA[<p>半年前、iOSCIとしていくつかのXcodeプラグインでJenkinsを使用しました。 </p>
<p>私が望む主な機能は、毎日深夜にプロジェクトをビルドし、ビルド番号を+1してから、このコミットを「Phabricator」にプッシュすることです。これらの手順のいずれかが失敗すると、「Slack」に通知が送信されます。 。 </p>
<p>ただし、「CocoaPod」の代わりに「Carthage」を使用しようとした後、ビルドする前に「Carthageupdate」を実行する必要があります。 Jenkinsは、ビルドする前にコマンドを実行できません。 そこで、シェルを直接使ってみました。 </p>
<a id="more"></a>

<h2 id="コードを更新"><a href="#コードを更新" class="headerlink" title="コードを更新"></a>コードを更新</h2><p>最初にプロジェクトのフォルダに「cd」してから、新しいコミットをチェックアウトして新しいフレームワークを更新する必要があります </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> $(dirname <span class="variable">$0</span>)</span><br><span class="line">git checkout master</span><br><span class="line">git reset --hard origin/master</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/carthage update</span><br></pre></td></tr></table></figure>

<p>次に、最後の作成者が同僚であるかボット自体であるかを確認します </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">author=$(git <span class="built_in">log</span> -1 | head -2 | tail -1 | cut -d <span class="string">&#x27; &#x27;</span> -f2)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$author</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$author</span> != <span class="string">&quot;bot&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="comment"># すべて： </span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>同僚の場合 </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">projectName=$(find . -name <span class="string">&quot;*.xcodeproj&quot;</span> -depth 1 | cut -d <span class="string">&#x27;/&#x27;</span>  -f 2 | cut -d <span class="string">&#x27;.&#x27;</span> -f 1)</span><br><span class="line">plist=$(find <span class="variable">$projectName</span> -name <span class="string">&quot;*.plist&quot;</span> -d 1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># buildnum +1 </span></span><br><span class="line">shortVersion=$(/usr/libexec/PlistBuddy -c <span class="string">&quot;Print CFBundleShortVersionString&quot;</span> <span class="string">&quot;<span class="variable">$&#123;plist&#125;</span>&quot;</span>)</span><br><span class="line">buildnum=$(/usr/libexec/PlistBuddy -c <span class="string">&quot;Print CFBundleVersion&quot;</span> <span class="string">&quot;<span class="variable">$&#123;plist&#125;</span>&quot;</span>)</span><br><span class="line">buildnum=$(expr <span class="variable">$buildnum</span> + 1)</span><br><span class="line"></span><br><span class="line">/usr/libexec/Plistbuddy -c <span class="string">&quot;Set CFBundleVersion <span class="variable">$buildnum</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;plist&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># AppleWatch用 </span></span><br><span class="line">WatchAppPlist=$(find WatchApp -name <span class="string">&quot;*.plist&quot;</span> -d 1)</span><br><span class="line">WatchAppExtensionPlist=$(find <span class="string">&#x27;WatchApp Extension&#x27;</span> -name <span class="string">&quot;*.plist&quot;</span> -d 1)</span><br><span class="line"></span><br><span class="line">/usr/libexec/Plistbuddy -c <span class="string">&quot;Set CFBundleVersion <span class="variable">$buildnum</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;WatchAppPlist&#125;</span>&quot;</span></span><br><span class="line">/usr/libexec/Plistbuddy -c <span class="string">&quot;Set CFBundleVersion <span class="variable">$buildnum</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;WatchAppExtensionPlist&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>_build_フォルダーでipaをxcodebuildする方法は次のとおりです </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rm -rf build</span><br><span class="line"></span><br><span class="line">xcodebuild clean archive -archivePath build/<span class="variable">$YourApp</span>-Beta \</span><br><span class="line">-scheme <span class="variable">$YourAppScheme</span></span><br><span class="line"></span><br><span class="line">xcodebuild -exportArchive \</span><br><span class="line">-exportFormat ipa \</span><br><span class="line">-archivePath <span class="string">&quot;build/<span class="variable">$YourApp</span>-Beta.xcarchive&quot;</span> \</span><br><span class="line">-exportPath <span class="string">&quot;build/<span class="variable">$YourApp</span>-Beta.ipa&quot;</span> \</span><br><span class="line">-exportProvisioningProfile <span class="string">&quot;<span class="variable">$YourtProvisioningProfile</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>次に、\ *。ipaをサーバーにアップロードできます(たとえば、curlを使用) </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rm -rf build <span class="comment"># clean up</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># リモートにプッシュ </span></span><br><span class="line">git config user.email <span class="string">&quot;bot@yourdomain.com&quot;</span></span><br><span class="line">git config user.name <span class="string">&quot;bot&quot;</span></span><br><span class="line">git commit -a -m <span class="string">&quot;<span class="variable">$buildnum</span>&quot;</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>

<p>Slackにメッセージを投稿する方法 </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Slack $ messageを投稿する </span></span><br><span class="line"><span class="function"><span class="title">post2Slack</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">	SLACK_HOSTNAME=<span class="string">&quot;hooks.slack.com&quot;</span></span><br><span class="line">	SLACK_CHANNEL=“<span class="comment">#YourChannel”</span></span><br><span class="line">	SLACK_BOTNAME=<span class="string">&quot;bot&quot;</span></span><br><span class="line">	ICON=<span class="string">&quot;:x:&quot;</span></span><br><span class="line">	SLACK_BOTEMOJI=<span class="string">&quot;:joy:&quot;</span></span><br><span class="line">	MESSAGE=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Slackにメッセージを送信する </span></span><br><span class="line">PAYLOAD=<span class="string">&quot;payload=&#123;\&quot;channel\&quot;: \&quot;<span class="variable">$&#123;SLACK_CHANNEL&#125;</span>\&quot;, \&quot;username\&quot;: \&quot;<span class="variable">$&#123;SLACK_BOTNAME&#125;</span>\&quot;, \&quot;text\&quot;: \&quot;<span class="variable">$&#123;ICON&#125;</span> <span class="variable">$&#123;MESSAGE&#125;</span>\&quot;, \&quot;icon_emoji\&quot;: \&quot;<span class="variable">$&#123;SLACK_BOTEMOJI&#125;</span>\&quot;&#125;&quot;</span>;</span><br><span class="line">curl -X POST --data-urlencode <span class="string">&quot;<span class="variable">$PAYLOAD</span>&quot;</span> <span class="variable">$getThisURLInYourSlackChannel</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># post2Slack &amp;&amp; exit </span></span><br><span class="line"><span class="function"><span class="title">post2SlackAndExitWithMsg</span></span>() &#123;</span><br><span class="line">	post2Slack <span class="string">&quot;<span class="variable">$&#123;1&#125;</span>&quot;</span> &amp;&amp; <span class="built_in">exit</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>次に、次のようなコマンドを組み合わせることができます。 </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git push origin master || post2SlackAndExitWithMsg <span class="string">&quot;git push failed&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>会社が大きくなったとき</title>
    <url>/ja/When-a-company-become-bigger/</url>
    <content><![CDATA[<p><strong>正しいことをすることは</strong>正しいことをすること**よりも重要です。前の文はあなたがあなた自身の議論と理由を持っていることを意味します。 正しい\ * \ *は、あなたが自分の行動に責任を持つことができるかどうかにかかわらず、あなた自身の正義を測定します。 しかし、あなたが大企業に入るとき、あなたのマネージャーはあなたが物事を正しく行うことができるかどうかを気にします。 これは、スタートアップがより強力である理由でもあります。 </p>
<a id="more"></a>

<p>人間は自然な社会的動物であり、グループの人数が140人未満の場合は、それを単独で管理できます。 誰もが他の人が何をしているのかを知っているので、誰かの共通の見方をするのは簡単で、誰も怠惰になることはできません。 しかし、チームが大きくなると、霧と影が現れます。あなたの能力と能力は、実際の貢献ではなく、マネージャーに大きく依存します。 </p>
<p>ほとんどの企業には数百人の従業員がいます。そのため、大企業ではオフィス政治が非常に一般的です。 オフィスの政治にどう対処するかが最も重要です。 結局のところ、これはあなたの<strong>給与と昇進</strong>に関連しています。 これをやりたいのなら、政治家になるのが一番です。何が起こっているのかは誰もが知っていますが、誰も指摘しません。皇帝の新しい服と同じように、自分を失うリスクがあります。 </p>
<p>だからこそ、良いスタートアップ企業はとても魅力的ですが、ある日、その卓越性のために会社は大きくなります。 ますます多くの見知らぬ人が参加しますが、誰もが友好的であるとは限りません。あなたがまだ自分自身であり、政治を気にしない場合、それは不適切を引き起こす可能性があり、噂はいたるところにあり、新年が来ると 、あなたは理由もなく昇進していません。 </p>
<p>中立的な方法は、感情や感情を共有せずにロボットのように作業することです。これにより、同僚は特定のプロ意識を感じることができます。 不利な点は、友達と見なされる機会がないことですが、会社を変更した(スタートアップではなくなった)人にとっては、前の会社よりも受け入れやすいです。 </p>
]]></content>
      <tags>
        <tag>Career</tag>
      </tags>
  </entry>
  <entry>
    <title>ハーバードのポジティブ心理学</title>
    <url>/ja/Harvard-Positive-Psychology/</url>
    <content><![CDATA[<p>オープン期間中にこのコースを見て、たくさんのスクリーンショットを撮りました。 このコースは私を大いに助けてくれました。 ちなみに今日は古い写真を片付けたので、今度はテキストに変換します。 </p>
<blockquote>
<p>心理的成熟度とは、積極的に視点を変える能力です。 </p>
</blockquote>
<a id="more"></a>

<h2 id="ゴール"><a href="#ゴール" class="headerlink" title="ゴール"></a>ゴール</h2><blockquote>
<p>あなたにとって重要であるとあなたが価値があると考える目的地への道のステップ。 </p>
<blockquote>
</blockquote>
<p>したがって、最終目標はしばしば解放される可能性があります。 </p>
<blockquote>
</blockquote>
<p>その理由の1つは、愛、特に欲望と情熱が時間とともに摩耗するためです。 </p>
<blockquote>
</blockquote>
<p>彼らはまた、非常に敏感で、賢明で、彼らの年をはるかに超えて、聖人で、寛大で、慈悲深いです </p>
</blockquote>
<h2 id="運動"><a href="#運動" class="headerlink" title="運動"></a>運動</h2><blockquote>
<p>不思議な薬：週4回、30分の運動。<br>週に6〜7回、少なくとも15分間の注意深い運動。 </p>
<blockquote>
</blockquote>
<p>やることがたくさんあります。 </p>
<blockquote>
</blockquote>
<p>運動は最後にすべきことです。 それは<strong>投資</strong>です。 </p>
<blockquote>
</blockquote>
<p>あなたはその45分を失うかもしれません。 しかし、あなたはもっと多くを得るでしょう。 とても良い投資です。 あなたが運動するとき、あなたの記憶は実際に良くなります。 ですから、勉強する時間の点で銀行にもっとお金を稼ぐことができます。 あなたの<strong>創造性と集中力</strong>のレベルが上がります </p>
<blockquote>
</blockquote>
<p>あなたがADDを持っているかどうか、特にあなたが持っている場合。 </p>
</blockquote>
<h2 id="関係"><a href="#関係" class="headerlink" title="関係"></a>関係</h2><blockquote>
<p>人々は、これが人生の多くであると考えているので、義務感や習慣から一緒にいます。 </p>
<blockquote>
</blockquote>
<p>代替手段の欠如 </p>
<blockquote>
</blockquote>
<p>「自分にしたいと思うことを他の人に行ってください。」 </p>
<blockquote>
</blockquote>
<p>「他の人にしないことを自分にしないでください。」 </p>
</blockquote>
<h2 id="愛"><a href="#愛" class="headerlink" title="愛"></a>愛</h2><blockquote>
<p>「完璧な愛は確かにまれです。恋人になるには、非常に賢明な繊細さ、子供の柔軟性、芸術家の感性、哲学者の理解、聖人の受け入れ、 学者の寛容と特定の強さ。」 </p>
<blockquote>
</blockquote>
<p>しかし、完全な愛は存在しませんが、<strong>真の愛は線量</strong>です。 真の愛は不完全な人間の間に存在します。 </p>
<blockquote>
</blockquote>
<p>私はその適切な人を見つけます。 私はそれを信じていません。 それは単に真実ではありません。 それは信仰の問題ではありません。 </p>
<blockquote>
</blockquote>
<p>では、何が関係をユニークにするのでしょうか？ その一人の適切な人を見つけることはありません。 もう一度、その1つの選択された関係を育てます。 それは、一緒に働くこと、一緒にいること、一緒に時間を過ごすこと、お互いに献身することのおかげです。 これが、選択した1つの関係を作成する方法です。 これが、選択した1つの関係を作成する方法です。 </p>
</blockquote>
]]></content>
      <tags>
        <tag>Psychology</tag>
      </tags>
  </entry>
  <entry>
    <title>新年に家に帰る</title>
    <url>/ja/Chinese-New-Year/</url>
    <content><![CDATA[<p>2016年の最終日、帝都のほとんどの人が家に帰りました<br>小さな魔道士は、低家賃の住宅の割引ウェブサイトを退屈にスキャンします<br>突然、1万年も動いていないQが突然落ち着きを失い、小さな魔道士がそれを見て、女神であることがわかりました。<br>彼が震えながら頭をクリックしたとき、彼は4つの言葉を見ました：私は結婚しています </p>
<p>突然 </p>
<a id="more"></a>

<hr>
<p>新年に家に帰ることは若い世代にとって苦痛になっています<br>二次元のマスターとして、彼は当然<strong>家族計算の問題</strong>を知っています </p>
<blockquote>
<p>両親がさらに30年間住んでいる場合、年に1回、平均5日間、娯楽、食事、睡眠などの時間を差し引いて家に帰ると、両親と一緒にいることができるのは約24時間、合計720時間です。 、ほぼ1か月 </p>
</blockquote>
<p>また、「高齢者の権利と利益の保護に関する法律」によると </p>
<blockquote>
<p>家族は高齢者の精神的ニーズを心配する必要があり、高齢者を無視したり無視したりしてはなりません。 高齢者とは別居している家族は、頻繁に高齢者を訪ねたり挨拶したりする必要があります </p>
</blockquote>
<p>起訴を避けるために、小さな魔道士は年に2回両親に会おうとします </p>
<hr>
<p>しかし、やがて、それは春祭りと他の休日をずらすでしょう<br>小さな魔道士に大きな心理的影を残した休日があったので：<br>2013年のチンミンフェスティバルだと思いました。若いマスターが女神にウェストレイクに遊びに行くように頼み、音楽の中庭を通過してスディに行ったとき、群衆にショックを受けました。<br>当時、スディの入り口には小さな魔道士が立っていたが、両側の人しか​​見えず、西湖の美しさを少しでも眺めることができず、短い魔道士は、休日に鍋の怒りを投げたことが主な理由だとは考えていなかった。 </p>
<p>春祭りはすべての祭りで一流の市民であり、前世代の伝統により、7人の叔母と8人の叔母が給料と目標について尋ね、子供を産む良い機会について尋ねました。<br>そして、次の世代がこの世界に登場した今、赤い封筒は当然不可欠です。わずかな年末の賞が授与される一方で、彼らはまた、「ああ、この子はとても美しい」と笑わなければなりません。<br>さらに誇張されているのは、郭嘉が2番目の子供を完全に開放し、ダブルの準備ができたということです。 </p>
<hr>
<p>昨年の春祭りでは、小さな魔法使いが[戦争の36の戦略](<a href="https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8D%81%E5%85%AD%E8%">https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8D%81%E5%85%AD%E8%</a> チェーンメーター(25)のAE％A1)<br>マジシャンとして、彼は当然チケットの購入方法を知っているので、彼は自分自身を隠し(1)、仕事を待つ前に故意に5分間遅らせました(4)<br>その後、両親に「チケットはありません」と伝え、(16)に乗り込もうとしたところ、8倍でも帰宅しなければならないとのことでした。<br>当然、小さな魔道士の馬場馬馬はこの苦いトリックにショックを受け(24)、すぐに戻ってくる必要はないと言いました… </p>
<p>昨年の前例により、今年の昨年の成功を再現するのははるかに簡単です </p>
<p>彼が真実を暴露するポスターを見るまで： </p>
<blockquote>
<p>新年の間に家に帰ることは人生の勝者です </p>
</blockquote>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>セフレ</title>
    <url>/ja/Friends-with-Benefits/</url>
    <content><![CDATA[<p>何が起こったのかわかりませんが、銃を共有するためのソフトウェアが全国で人気を博し始めました。 </p>
<p>小さな魔道士は女神テン・ムーブズに拒絶されましたが、学者として、彼はまだとてもきれいです<br>Doubanは常に読書チャンネルと映画チャンネルにのみ再投稿しており、この機能を持つ右側のグループをフォローしたことはありません。 </p>
<p>今日言及された砲兵の友人は、小さな魔道士の基地の友人の砲兵の友人です </p>
<p>昔はリトルメイジとジヨウが星と繋がっていたのですが、当時はまだ群れの心臓部だと思っていたのですが、ある日突然、友達が女神を見つけたとドゥバンのリンクを送ってくれました </p>
<p>小さな魔道士はショックを受け、彼の友達は彼を去りました </p>
<p>終わり </p>
<a id="more"></a>

<hr>
<p>しかし、10日後、ベースの友人は再びオンラインになり、悲しいことに彼は拒否されたと言いました<br>状態が悪いため、StarCraftは小さな魔道士に何度も虐殺されました </p>
<p>StarCraftと言えば、小さな魔道士は実際に現在のImperial CapitalCompanyでStarCraft1時代から来た叔父に会いました。彼は、2 VS AIのラウンドを暫定的に接続し、それが🐔であることに気づいたので、1V1を開きました。しばらくの間、彼は一族を選ぶのを忘れて9Dをしなければなりませんでした。 叔父がブロックされたくないので、勝った場合はルーターが切断されます.2分後、QQで、切断するのが恥ずかしくて接続できなくなったと主張しました… </p>
<p>小さな魔道士は同じ病気を感じ、お互いを憐れみ、彼がその時に要約したすべてのレッスンを彼に教え、そして彼の友人は女神を追いかけました。 </p>
<p>終わり </p>
<hr>
<p>しかし、ル・ヤオは馬力を知っていて、女神ジヨウはただの友達だと思っていました </p>
<p>例🌰：2人目の友人が怒って家から逃げました<br>ジヨウのガンメイトは彼を見つけることができず、生理学的な問題を解決することができなかったので、彼らは通りすがりのガンメイトを見つけるためにドゥバンに行き、泣き、トラブルを起こし、ジヨウの会社のドアにぶら下がった。<br>もちろん、より科学的な説明は、自己虐待を通じて友人の注意を喚起することです<br>ただし、これはゲーム理論ではたまたま負けのオプションです </p>
<p>小さな魔道士がジヨウの常連の大豆油にショックを受けたとき、<br>もちろん、小さな魔道士は誰もが悔い改めてリハビリする機会があるべきだと感じています。賢者でも賢者でもない人は何もできないので、今回は地陽とは話しません。<br>そして結局のところ、次のような他の解決策があります。 </p>
<blockquote>
<p><a href="http://www.solidot.org/story?sid=44714">男はガールフレンドに鎮静剤を与えて、ゲームを続けられるようにします</a><br>ある男性は、ゲームを続けるために元ガールフレンドを鎮静させたため、ドイツのカストロプロクセルの裁判所から500ユーロの罰金を科されました。裁判官は、これを「意図的な攻撃」と見なしました… </p>
</blockquote>
<p>しかし、時間の流れとともに状況はさらに深刻になりました。たとえば、StarCraftの2つのゲーム中に、ベースの友人は、地面に座って、ずる賢いように泣きながら、銃撃者によって繰り返しプラグが抜かれました。 </p>
<p>それから小さな魔道士は彼の友達と密かにそれについて話しました </p>
<p>緑の帽子をかぶっていると聞いたジヨウは激怒し、キッチンナイフを持って友達を斬り、低家賃の住宅に血を流した。 </p>
<p>地陽は逮捕され、情熱的に殺害され、救済で死刑を宣告され、憎しみに終わった </p>
<hr>
<p>友達に女性の権利を信じてほしくないし、あまり気にしない </p>
<p>彼の公式のキャリアと関係がありますが、ベースの友達は人生の最盛期にあり、エネルギーに満ちていて解放する場所がありません。彼らは魂と肉の関係を完全に認識していません。彼らは肉欲に陥り、自分自身を解放することができず、人のLOLの状態に戻ることを恐れています。 </p>
<p>「だから、彼らは解散しないだろう」小さな魔道士は無謀にコメントした </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>ソイレント</title>
    <url>/ja/Soylent/</url>
    <content><![CDATA[<p>小さな魔道士が高レベルの魔術師からソイレントのボトルを高額で購入して以来、彼はこのようなものが好きでした。 </p>
<p>小さな魔道士がまだ天国にいたとき、彼は西湖地区図書館に行っていました<br>当時、7月に火災が発生し、郭嘉ビルとしては当然工業用冷却装置を備えていました。 </p>
<p>小さな魔道士の聖地になって以来、私はよく一日座っています </p>
<p>過去には、小さな魔道士の魔法の武器のエネルギーは最大1時間持続しました<br>その後、「R、13インチ、2013年半ば」を購入しましたが、数時間は問題ありませんでした。次回は本や姉妹紙を読んだだけです。 </p>
<p>しかし、図書館にはたくさんの人がいて、天国の市民はとても勤勉です。週末でも平日でも、ドアは8:30に開き、9時以降は小さな魔道士の居場所がありません。 </p>
<p>ですから、自分を充電する方法が最優先事項になっています。正午に食事をやめてから戻ってきた場合、あなたはすでにデュオであり、マジックアカデミーの席をつかんでいるような気分になります。 </p>
<p>そのため、当時このようなものを持っていた場合は、1Lカップを購入し、750mlの粉末と、図書館から提供された純水を持参するだけで、荒れ地に座ることができます。 </p>
<a id="more"></a>

<hr>
<p>小さな魔道士はかつてタイムアカウントを計算しました： </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [准备, 做饭, 吃饭, 洗碗]</span></span><br><span class="line"><span class="keyword">let</span> 标准耗时 = [<span class="number">10</span>, <span class="number">30</span>, <span class="number">15</span>, <span class="number">10.0</span>]</span><br><span class="line"><span class="keyword">let</span> 系数 = [<span class="number">0.5</span>, <span class="number">1</span>, <span class="number">0.7</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> 一天总耗时 = 标准耗时.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + $<span class="number">1</span> &#125; * 系数.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + $<span class="number">1</span> &#125;</span><br></pre></td></tr></table></figure>

<p>1日たったの3時間です </p>
<p>そのため、小さな魔法使いは、魔法使いが魔法の楽器を充電するときに、物理的な接触によって自分たちと一緒に充電できると想像することがよくあります。<br>たとえば、SC2の輸送機は栗であり、まだ離れています<br>時々私は憤慨します。Embodyの価格は実際にはバイオチャージ機能を実行するのに十分ではありません。 </p>
<p>そして、フィードはこれらの時間のかかるステップを非常にうまく解決します<br>特にバージョンが2.0にアップグレードされた後は、カップを振る必要さえありません<br>さらに、旧バージョン1.5は54 \ $に割引され、送料は100円になります。為替レートが高騰しても、1回の食事は20海以上になります。 </p>
<blockquote>
<p>世界には完璧なものはありません。すべてが良く、不利な点がなければなりません。男性になるには、長所と短所を比較検討し、合理的な選択をすることを学ぶ必要があります-People’s Daily Online </p>
</blockquote>
<p>ただし、飼料には3つの大きな山があります </p>
<ol>
<li>味 </li>
<li>ニッケルと水銀がカナダの基準を超えた </li>
<li>血糖値を上げる </li>
</ol>
<blockquote>
<p>問題を解決する能力は通常、注意深く体系的な思考の産物であり、才能のある人なら誰でもこの能力を身に付けることができます<br>-マッキンジーシンキング </p>
</blockquote>
<ol>
<li>天の王朝はしばしばその美味しさで有名です<br>しかし、18年間のママの料理の訓練の後、小さな魔道士はご飯を食べたくありませんでした。 </li>
</ol>
<p>2.帝国の首都 </p>
<p>最後のものは扱いにくく、満腹感はありますが、噛み心地はありません<br>また、流動性食品としては10分程度しか滞在できませんが、通常は数時間かかります。<br>要するに、変革のみがあり、排除はありません </p>
<p>だから小さな魔道士は朝食ラテの卵、昼食調理油、夕食の餌を持っています </p>
<p>月ごとに安定した入力ボックスに変換 </p>
<hr>
<p>中国の新年の間、私は家に帰りませんでした。小さな魔道士はスーパーマーケットが閉まるのを恐れていたので、事前に箱を予約しました。<br>鼻を半カップつまんだ後、彼は弱い鶏を見て、本物の肉を加える必要があると感じました。<br>頻繁にブラシをかけられる馬を開くのは買う価値がありません。缶詰の牛肉の価格が販売されており、注文する準備ができていることを嬉しく思います。<br>チェックアウトしたとき、突然その横に4つの大きなキャラクターが見つかりました：犬用 </p>
<p>まあ、これは長期の摂食によって引き起こされる必要があります<br>リトルメイジは胃を使って分析しました </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>計算における神</title>
    <url>/ja/Calculating-God/</url>
    <content><![CDATA[<ol>
<li>デザインファイルはまったくありません </li>
<li>無力なAPIリバースエンジニアリングに依存します。 </li>
<li>不安定で頻繁にクラッシュするシステム。最後のクラッシュは、6500万年前に発生しました。 </li>
<li>デッドコードはいたるところにあります </li>
<li>プロトタイプのソースコードと実行可能なバイナリファイルはなくなり、信頼性の低いイラストのみが表示されます。 </li>
<li>品質はctrlc + ctrlvです。 </li>
<li>33つのコードを持つ深刻な恋人 </li>
<li>ゾンビライン </li>
<li>GA(遺伝的アルゴリズム)の発明者。 </li>
<li>IPO後、引退した神を見た人は誰もいません。 </li>
</ol>
]]></content>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>この証明書の有効期限が切れています</title>
    <url>/ja/This-certificate-has-expired/</url>
    <content><![CDATA[<h2 id="この証明書の有効期限が切れています"><a href="#この証明書の有効期限が切れています" class="headerlink" title="この証明書の有効期限が切れています"></a>この証明書の有効期限が切れています</h2><p><code>キーチェーン-&gt;表示-&gt;期限切れの証明書を表示-&gt;システム</code> </p>
<p>「アップルワールドワイドデベロッパリレーションズ認証局」<br>「2016年2月15日月曜日午前2時56分35秒中国標準時」 </p>
<p>証明書を削除します </p>
<p>新しい<a href="https://developer.apple.com/certificationauthority/AppleWWDRCA.cer">AppleWWDRCA.cer</a>をダウンロードします </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>ハイテンプラーメイジ</title>
    <url>/ja/High-Templar/</url>
    <content><![CDATA[<p>リトルメイジギャップの年の間に、彼はさまざまな融合の打撃を経験しました<br>ただし、最も厄介なのはテクノロジーの選択です </p>
<p>Academy of Magic(2011)の早い段階で、小さな魔法使いはiOSを学びたいと思っていました。それを見た後、彼はお金を求めてAndroidに目を向けました。 </p>
<p>当時、小さな魔道士はまだ疫病を使って死にました。Linuxという別のオペレーティングシステムがあることを知りました。ポータブルツールのノキアが広い領域を占めています。当然、私には概念がありません。ニュースのジョブズが癌で亡くなったことを知っているだけです。これは変化です。 世界を失ったのは誰か<br>3つの主要な講義の1つ<a href="http://news.stanford.edu/news/2005/june15/jobs-061505.html">StayHungry。StayFoolish</a>を見た後、それはすでに2年後のことでした。 </p>
<blockquote>
<p>PS：他の2つは、ハーバードのJKローリングによる[失敗のフリンジの利点と想像力の重要性]です(<a href="http://news.harvard.edu/gazette/story/2008/06/text-of-jk-">http://news.harvard.edu/gazette/story/2008/06/text-of-jk-</a> rowling-speech /)、CMUでのRandy Pauschの<a href="http://www.cmu.edu/randyslecture/videos/">最後のレクチャー</a>はすべて、考えさせられる価値のある優れたビデオです。 </p>
</blockquote>
<a id="more"></a>

<hr>
<p>Androidでいくつかのレッスンを見た後、それは886であり、特別な理由はありませんでしたが、Cをプレイすることへの興味はその過程で引き起こされませんでした。 </p>
<p>瞬く間に、遠隔地にあるため、学校の募集、多くの企業がないため、説教は基本的に科学技術大学と合同大学で行われます。小さなマスターは233の大学の学位を持っており、当然のことながら差別を受けています。<br>数十回の惨めな敗北の後、私はついに天国に移されました。NASDAQは、事前調査部門に所属する申し出をしました。場所はまだ夢の楽園です。<br>小さな魔道士は涙を流さず、すぐに契約を結びました </p>
<p>HR MMによると、同社はCファートからAndroidへの変革を遂げているとのことです。<br>それ以来、出入りを恐れる小さな魔道士は、もう一度頭皮を噛んで、3年生のときにAndroidを学びました。 </p>
<p>ツイストメロンは甘くなく、歴史が繰り返され、886 </p>
<hr>
<p>小さな魔道士が最初に想像した<strong>事前調査部門</strong>は、「プログラミングの美しさ」で説明されているアカデミーに似た場所でした。<br>ただし…ほとんどの場合、Philosopher’s Stone(Jar)はJavaで作成され、ソース要素に組み込まれます。その後、小さなウィザードがUbontuで変更されたAndroidを呼び出し、ライブの包囲ライオンによって各場所に焼き付けます。 高レベルのシミュレーション </p>
<p>たくさん言ったので、それは2つの実用的な言葉で要約することができます：shanzhai </p>
<p>また、Androidの単純な効果には、多くのJavaが必要です。さらに、Java自体の特性は変更されないため、さまざまな撮影モードが誕生し、小さなウィザードは使い果たされます。 </p>
<p>ですから今振り返ってみると、シャンザイなのかジャワなのかわかりません。本当に悪いです。<br>今まで、小さな魔道士は、この魔道士の世界が一年中最も頻繁に使用する呪文に対して、いまだにあらゆる種類の不満を持っています(\ * ￣︿￣) </p>
<blockquote>
<p>PS：ラムダとファンクショナルは8で提供されており、はるかに簡潔に見えます </p>
</blockquote>
<p>半年以上後、小さな魔道士が誤って<a href="https://developers.google.com/edu/python/">ガリーのpythonクラス</a>を発見しました。CCassshellJavaとしか接触していなかった小さな魔道士にとって、 強心ショットです </p>
<hr>
<p>ギャップイヤーの間に、小さな魔道士はより良いルビーを見つけました。<a href="https://www.codecademy.com/">Codecademy</a>で質問を終えた後、彼は電話でサンバーストを見るのは不便だと感じただけで、公式声明はそうではありませんでした PC端末として自分で作りたい </p>
<p>しかし、🐶🐺の出現はリトルメイジの計画を混乱させました </p>
<blockquote>
<p>PS：Rubyは弱く型付けされた動的言語です。つまり、さまざまな型を割り当てることができ、実行時に自分自身を変更できるため、コード行が他の人のために何百行ものことをしているように見えることがよくあります。<br>松本幸弘はまた、「プログラムワールド」で、Rubyデザインの主な目標は次のとおりであると述べています。 </p>
</blockquote>
<blockquote>
<p>しかし、問題は、正確さを保証するために、常にテストを使用して制約する必要があることです<br>その結果、テストが長ければ長いほど、より多くの書き込みが行われます。<br>一般的に小さくて美しいですが、大規模なコラボレーションには適していません<br>強く型付けされた静的言語は、コンパイル時に多くのエラーを検出できます </p>
</blockquote>
<blockquote>
<p>Golang自体は強く型付けされていますが、便利な構文上の砂糖を提供します<br>最も衝撃的なのは、過去に多くの需要があったときに、著者が最初にフォーマッターを書いたことです<br>これは私のお気に入りの機能の1つであり、コードのフォーマットにかかる時間を大幅に節約できます。<br>最初のGopher🇨🇳と言えば、著者も上海に来て、この東洞の実現について話しました </p>
</blockquote>
<hr>
<p>ルビーにはすべての利点がありますが、小さな魔道士が2つの呪文をテストした後、彼は🐶🐺を受け入れました </p>
<p>この時点で、計画されたギャップ時間のほとんどが経過しています<br>ソースが下がった場合、小さな魔道士はフルスタックの包囲ライオンに行った可能性があります<br>しかし、決定的なイベントが以前に発生し、マジックスタックによって照らされたブランチを切り替えました </p>
<p>なんらかの理由で、🐶🐺を選んだ後の小さな魔道士は、収入なしで、実際に魔法の装備をアップグレードし、父親の疫病を自分のrMBPに置き換えました </p>
<p>デモレベルのウェブサイトを完成した後、小さな魔道士は証明書を購入し、彼が現れたときにXcodeに驚いていました。Σ(°△°|||)︴、当時のAndroidのイベントに応答するようにボタンをバインドすることを考え、Xcodeで使用したコードをたくさん入手しました。 Ctrl +ドラッグラインはこのエレガントな方法で行われます </p>
<p>次回、小さな魔道士はスタンフォードの<a href="http://cs193p.stanford.edu/">cs193p</a>、_ Head First iPhone Development <em>、</em> iOS 7 Programming Cookbook_、<br>「アートワーク」という言葉がよく思い浮かびます </p>
<p>その後、すべてが順調に進みました </p>
<hr>
<p>古くからアルコンのフルスタック </p>
<p>小さな魔道士はこの方法を避けます、何人が彼自身の小さなそろばんを持っています<br>主な理由は、スタック全体が疲れすぎていることです。ある意味では、すべてが乾燥しています。<br>そしてこれはまた、余暇が無限に圧縮されることを意味します </p>
<p>能力が小さければ小さいほど、責任は小さくなります<br>最終的な分析では、リトルマスターは彼の自由な時間に読むのが好きなちょうど良い子供です。 </p>
<hr>
<p>しかし、彼はあまりにも素朴です </p>
<p>高度なテンプルメイジに向かう途中、&gt;&gt;これらのピット </p>
<h3 id="WWDC"><a href="#WWDC" class="headerlink" title="WWDC"></a>WWDC</h3><p>100歳以上/年、ダウンロード時に小さな魔道士の足が震える<br>しかし、ストックホルムでは、クールのテクノロジーを見て興奮して手をたたきます。 </p>
<h3 id="適応バージョン"><a href="#適応バージョン" class="headerlink" title="適応バージョン"></a>適応バージョン</h3><p>リトルメイジは、iPhoneが1つの画面サイズしかないことを愚かに考えて、さまざまなAndroid画面に苦しめられてきました<br>一年後… </p>
<h3 id="迅速な痛み"><a href="#迅速な痛み" class="headerlink" title="迅速な痛み"></a>迅速な痛み</h3><p>組み込みシステムを含むさまざまなバグ… </p>
<hr>
<p>最も悲劇的なことは、小さな魔道士が別の沈没穴を見つけたことです </p>
<h3 id="設計"><a href="#設計" class="headerlink" title="設計"></a>設計</h3><p>過去には、小さな魔道士はIE 800を聞いている真菌のように盲目であり、色の違いのピクセルを区別していませんでした<br>ピットに入ってから徐々に良くなりましたが、デザインの理解はまだシューティングライオンの範疇にあります </p>
<p>その結果、「人間の月の神話」の作者であるフレデリック・ブルックスは、「デザインのデザイン」という本を出版し、小さな魔道士の顔を撫でました。同様の名前の別の「デザインデザイン」の作者は、母親への無関心で知られていました🐔諮問委員会メンバージャパンプリント デザインマスター原ケニア </p>
<p>この時点で、小さな魔道士のテクノロジーツリーにはさらに3つのブランチがあります </p>
<ul>
<li>スケッチ </li>
<li>写真 </li>
<li>基調 </li>
</ul>
<p>幸いなことに、これらは小さな魔道士が切望しているものです<br>結局のところ、小さな魔道士がピットに入ろうと決心したのは、冷たい機械で「芸術」の感覚を実現できるということでした。 </p>
<p>これは泣いていますね。 </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>観察者</title>
    <url>/ja/Observer/</url>
    <content><![CDATA[<p>オブザーバーが戻ってきたようです。 </p>
<p><em>時間にやさしい</em>を読み終えると、メンタルモデルを知り始め、その簡単な本を読み終えるのに1ヶ月かかりました。 </p>
<a id="more"></a>

<p>私のメンタルモデルが改善されたことに感謝するとき、「PowerNow」。 スピリチュアルエンライトメントガイドは、心は罠であると宣言しています。心の予測能力は未来にのみ焦点を当てています。それはあなたが現在の力を知ることを妨げます。 これらの異なる議論は、当時私を困惑させました。 読み続けると、オブザーバーの概念が目に浮かびました。 </p>
<p>オブザーバーが私の大学にいると初めて聞いたとき。 私はこの言葉を<em>暗い森</em>から読みました。 量子力学に関する本を読んだ後、それは私をさらに魅了しました。 </p>
<p>心理学にはオブザーバーの概念もあります。 上記の考え方(<a href="https://en.wikipedia.org/wiki/Observer_(quantum_physics)">Observer(Quantum Physics)</a>とは異なるだけでなく、* Design Pattern([Observer Mode](https ：//en.wikipedia.org/wiki/Observer_pattern))<em>。1年後に</em> Think on these Things *を終えたとき、私は自分自身についてのオブザーバーを構築しようとしました。<br>通常、他の人がやっているのを見ると、物事はより明確になるからです。 弱点と死角は明らかであり、より良い解決策が見つかります。 </p>
<p>幸いなことに、私はギャップ期間中にこの目標を達成しました。私には2つのバージョンがあり、1つは演技、もう1つはオブザーバーです。<br>オブザーバーはスーパーエゴと同じではないと思いますが、それは明らかにエゴの守護者です。 </p>
<p>しかし、1年半前に北京で働き始めたとき、私が作った作品はすべて台無しになりました。 私のオブザーバーはいなくなった。 時計を頻繁に見るなど、新しいベッドの習慣があり、不安や緊張が露呈しました。 </p>
<p>私が何か間違ったことをすると、私は疲れを感じます。 幸いなことに、私は長い休暇を過ごし、実家に行きました。 その都市は外野ではありませんが、少なくとも私をスーパーシティから追い出しました。 また、両親と夢について深く話し合いました。 私たちの家族は貧しく、ホテルの価格は絶えず上昇しているので、彼らは非常に無力だと感じています。彼らは私がなぜそんなに奇妙に振る舞ったのか理解していません。 </p>
<p>10日後、休暇が切れ、とてもリラックスした気分になりました。 </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>🇺🇸-0-0</title>
    <url>/ja/USA-0-0/</url>
    <content><![CDATA[<h2 id="アメリカ皇帝-0-0"><a href="#アメリカ皇帝-0-0" class="headerlink" title="アメリカ皇帝-0-0"></a>アメリカ皇帝-0-0</h2><div id="googleMap9903" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap9903'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 10,
       'center': new window.google.maps.LatLng( 37.6938029 , -122.4740425 ),
     },
     target = document.getElementById('googleMap9903'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 37.6213129 , -122.3811441 ),
        'map': map,
        'title': 'San Francisco International Airport',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'San Francisco International Airport'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 37.7505427 , -122.4136408 ),
        'map': map,
        'title': '1225 York St',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: '1225 York St'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<h2 id="宝くじ"><a href="#宝くじ" class="headerlink" title="宝くじ"></a>宝くじ</h2><p>リトルメイジは15年間で1年以上Swiftを書き、WWDCセッションを見るように言われました<br>どういうわけか、WWDCが何であるかわからないので、確認してセクションをクリックしました<br>英語が苦手なのに、推測でできることに驚きました。<br>当時のAndroidチュートリアルについて考えると、完全に霧の中にあります<br>それで、私は一瞬で良い気持ちでいっぱいになり、その年のほとんどのビデオを見て、多くの恩恵を受けました。 </p>
<p>後で、開発者アカウント、Visa / MCクレジットカードがあれば、抽選ができることを知りました<br>毎年3月上旬に]公式サイト】(<a href="https://developer.apple.com/wwdc20/)で登録してください。1週間しかないのでご注意ください。">https://developer.apple.com/wwdc20/)で登録してください。1週間しかないのでご注意ください。</a> </p>
<p>人数が多いため、はラッキー(会社から払い戻される)または不運(自費)のリークをランダムに選択して、10,000枚のチケットを提供します🎫<br>その後、行くかどうかにかかわらず、最初にお金を差し引く<br>米国のビザが拒否または拒否された場合でも、返金は行われません。<br>チケットの譲渡も禁止されており、同じ会社の他の開発者アカウントにのみ送信できます<br>要するに、宝くじの払い戻しについても考えないで、宝くじについて考えてください </p>
<p>でも幸いなことに、彼がこのようなことをする番ではなかったので、私は考えずにサインアップしました。 </p>
<h2 id="勝つ"><a href="#勝つ" class="headerlink" title="勝つ"></a>勝つ</h2><p>抽選結果は3月末までに発表されます </p>
<p>突然、夜にチャイナマーチャンツバンクから1599ドルの控除テキストメッセージと盗まれたカードコールを受け取りました<br>彼が彼自身であることを銀行に証明するため<br>翌日の正午に起きて確認メールを受け取る<br>急いで友達に電話して、ビザやホテルを用意するように言われました </p>
<p>は会場の近くにいくつかのホテルを提供することですが、ガチョウの価格は非常にで、最も安いのも1泊229ドルです<br>一人に近いという原則を考えると、弾丸を噛んで約束するしかありません </p>
<p>幸いなことに、同僚は、抽選は行われなかったが、それでも見たかったと言った。<br>さらに、彼にはカナダから🇨🇦と🇺🇸中央アメリカからサンフランシスコに飛んで遊ぶことができる2人の友人がいます </p>
<p>だから私はホテルを辞めて、見栄えの良いAirbnbを予約しました </p>
<p>そして私の友人は運転することができます、ヘルツを予約します </p>
<p>単に完璧 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-01.jpg" alt=""></div></div></div>

<h2 id="ビザ"><a href="#ビザ" class="headerlink" title="ビザ"></a>ビザ</h2><p>最初にパスポートを持っている<br>海外で飛行機を降りたばかりの人とは違う<br>私は前にそこに行ったことがありません<br>幸いなことに、15年後に故郷に戻って両親を訪ねたときにそれをしました。 </p>
<p>次に、<a href="https://www.ustraveldocs.com/cn_zh/index.html">公式ウェブサイト</a>で予約します。<br>オンラインで支払い、面接の予約をする </p>
<p>事実は、自分で適用する方がタオバオエージェントよりも速いことを証明しています<br>支払いページからChinaCITICBankにジャンプします<br>このページは一見古く、フィッシングのウェブサイトだと思っていました… </p>
<h2 id="面と向かって"><a href="#面と向かって" class="headerlink" title="面と向かって"></a>面と向かって</h2><p>北京にある帝都の米国大使館は、チャオヤン地区の三元橋にあります </p>
<p>面接の午後に休暇をとる<br>大使館に到着した後、私は唖然としました。私は以前の春のフェスティバルの間にそのような長いチームを見ただけでした。<br>面接を待っている人は紆余曲折があり、山道には18本の曲がり角が1万本のZ字型のドラゴンが並んでいます。<br>インタビューウィンドウが表示される前に3時間忍び寄る </p>
<p>中国語で合計5〜6のインタビューウィンドウがあり、無人の英語ウィンドウに1つあります。 </p>
<p>私の友人は突然、彼はとにかく英語を話すことができると言いました、英語のウィンドウに行きます、待つ必要はありません<br>それについて考えて、それを試してみることにしました </p>
<p>インタビュアーは祖母であり、彼が当時言ったことを正確に思い出せません。 </p>
<p>..。<br>小：私たちを彼らの会議に招待してください<br>おばあちゃんは驚いて言った<br>あなたはアップルで働いていますか？<br>(考えてみてください：えーと、2019年は本当にですが、残念ながらタイムラインは2016年だけなので、言わなければなりません)<br>小：いいえ、開発者会議です。<br>老：なぜ彼らはあなたを招待するのですか？<br>..。 </p>
<p>フォルダーを開き、の招待状を取り出します。<br>おばあちゃんは隣の中国の窓を指さし、横の中国の窓に行くように頼んだ。 </p>
<p>彼らの隣で秩序を保っていた警備員の女性は、彼らが追い出されたのを見て、何が起こっているのか尋ねました。<br>これを聞いてため息をついたのですが、幸い直接断らなかったので、彼女のそばでしばらく待つように頼みました。 </p>
<p>それから中国人のインタビューは外国人女性でした<br>彼女も混乱しました。会議<br>IT以外のサークルの人々は、会議が何であるかを知らないと推測されます<br>それで彼女は招待状を取り出しました、ミスシスターはそれを読みたくないと言い、理由を説明するように彼に頼み続けました </p>
<p>小さな魔道士は唖然としました。おそらく以前の言語のせいであるのなら、なぜ今回はその資料を読まなかったのですか？<br>他の人は面接の経験が豊富なので、資料を持ってこなかった人は拒否され、聞く前に読んでいないと聞いただけです。<br>幸いなことに、私の友人はそれが開発者会議だと言いました、私の妹は数秒で理解しました(😓…) </p>
<p>それから私は、米国皇帝に親戚がいるかどうか、彼がそこにいた期間、いつ戻ってくるか、そしてどこに住むかを尋ねました。 </p>
<p>長い30分待った<br>ミスシスターは微笑んでおめでとうと言いました、ビザは通過しました<br>パスポートは数営業日で郵送されます </p>
<p>ねじれて曲がる、特に幸せではない<br>私は彼に感謝し、友達と一緒に戻ってきました </p>
<p>その後、ボストンで長寿の人が中国人のインタビューがあったと聞いた<br>二人で会うこともできます<br>家族を一緒に麺にドラッグすることもできます<br>顎が落ちた </p>
<p>米国ビザ<br>落ちる<br>彼は言った </p>
<h2 id="飛行機のチケット"><a href="#飛行機のチケット" class="headerlink" title="飛行機のチケット"></a>飛行機のチケット</h2><p>チケットを購入したとき、ユナイテッドエアラインの評価が悪かったことを知りませんでした。<br>そして、アジア人への悪名高い攻撃はありませんでした </p>
<p>実際、どのフライトでも、12時間の連続フライトで死体になります<br>ユナイテッドエアラインズはシャットダウンについてそれほど厳格ではありません📴、✈️は地平線の写真を撮りました </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-02.jpg" alt=""></div></div></div>

<p>4年後のFANNGの任務でフライト番号UA888に遭遇するとは思ってもみませんでした </p>
<h2 id="エントリ"><a href="#エントリ" class="headerlink" title="エントリ"></a>エントリ</h2><p>飛行機を降りた後、 </p>
<p>どういうわけか常に幻想がありました、狙撃兵のグループは習慣の後ろに待ち伏せします<br>容疑者はその場で殺されます<br>初めて他国の領土に足を踏み入れることと相まって、それはまだ少し緊張しています </p>
<p>税関は、なぜここにいるのか、数日滞在するなど、いくつかの一般的な質問をしました<br>ビザの状況によると、会議とは呼ばれていませんが、開発者会議と呼ばれています<br>それから税関はそれを刻印しました </p>
<p>パスポートを取り戻した後、すぐに落ち着いて見えましたが、実はペースを上げて中に入ってしまいました<br>撃たれるのを恐れて </p>
<p>空港を迎えに来てくれた人を見た後、まだ小さな友達が出てこなかったのを思い出しました<br>長い間待った後、私の小さな友達のGGを思い、彼に会いました。<br>会議はしばらくの間チェックされていたことが判明しました </p>
<p>会議は本当に有毒です😂 </p>
<h2 id="市内中心部"><a href="#市内中心部" class="headerlink" title="市内中心部"></a>市内中心部</h2><p>空港から車を受け取り、Airbnbに荷物を降ろしてください🧳 </p>
<p>サンファン空港✈️からダウンタ​​ウンまではかなり遠いです<br>意外なことに、この種の距離は皇帝の中で10、000年間ブロックされなければならず、それは20分になるでしょう。 </p>
<p>🏠それはAirbnbが見たものとまったく同じで、詐欺はありません<br>ただ、家は木造のように2階建てで、2階には別のテナントがいるので、走ると音がします。<br>後ろに庭があり、とても素敵です </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-04.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-05.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-07.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-08.jpg" alt=""></div></div></div>

<h2 id="ヨセミテ"><a href="#ヨセミテ" class="headerlink" title="ヨセミテ"></a>ヨセミテ</h2><blockquote>
<p>1984年、ヨセミテは世界遺産に選ばれ、その壮大な花崗岩の崖、滝、澄んだ小川、巨大なレッドウッドの森、そして生物多様性が国際的に認められています。 </p>
</blockquote>
<p>山で釣りをする途中、車で約3時間のヨセミテに行く途中、道路に大きな風車のグループが見えました。<br>振り返ると、突然OS XYosemiteの壁紙が表示されました<br>私が以前に中国で見たのは地球の山だけでした⛰️、これは私がこの裸で急な花崗岩を見たのは初めてです<br>そのため、外国の山は中国の山よりも難しいという誤った信念 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-25.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-12.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-14.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-20.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-21.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-24.jpg" alt=""></div></div></div>

<p>本当に信じられない </p>
<p>帰りに夕日を眺める🌇ぼんやりと </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>USA</tag>
        <tag>🇺🇸</tag>
      </tags>
  </entry>
  <entry>
    <title>🇺🇸-0-1</title>
    <url>/ja/USA-0-1/</url>
    <content><![CDATA[<h2 id="アメリカ皇帝-0-1"><a href="#アメリカ皇帝-0-1" class="headerlink" title="アメリカ皇帝-0-1"></a>アメリカ皇帝-0-1</h2><div id="googleMap2338" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap2338'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 12.5,
       'center': new window.google.maps.LatLng( 37.781577 , -122.456913 ),
     },
     target = document.getElementById('googleMap2338'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 37.7781302 , -122.4175138 ),
        'map': map,
        'title': 'Bill Graham Civic Auditorium',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Bill Graham Civic Auditorium'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 37.8019619 , -122.4192982 ),
        'map': map,
        'title': 'Lombard Street',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Lombard Street'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 37.8085488 , -122.41018 ),
        'map': map,
        'title': 'Fisherman&#39;s Wharf',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Fisherman&#39;s Wharf'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 37.7591086 , -122.5116423 ),
        'map': map,
        'title': 'Ocean Beach',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'Ocean Beach'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<p>&lt;！-もっと-&gt; </p>
<h2 id="バッジ"><a href="#バッジ" class="headerlink" title="バッジ"></a>バッジ</h2><p>翌日ビルグラハム市民講堂に行く<br>パスポートを提示するとバッジがもらえます </p>
<p>上の写真は<a href="https://en.wikipedia.org/wiki/San_Francisco_City_Hall">サンフランシスコ市庁舎</a>です。 </p>
<blockquote>
<p>サンフランシスコ市庁舎は、カリフォルニア州サンフランシスコ市と郡の政府の本拠地です。 1915年にシティシビックセンターの広場にリニューアルオープンしました。1880年代から1917年までのアメリカのルネッサンスの縮図であり、美的芸術の記念碑です。 建物のドームは、米国議会議事堂のドームより42フィート高くなっています。 </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-00.jpg" alt=""></div></div></div>

<p>今後数日以内に、バッジをスワイプして会場に入る必要があります </p>
<p>あなたがそれを失ったら、ええと…それは不運だと認めてください、それを失ってはいけません </p>
<p>醜いコートも送った🧥<br>なぜ暑いのかわからないので、Tシャツではなくコートを送ります </p>
<p>サンフランシスコの特徴を理解した後、彼は太陽の下で亡くなりました<br>潮風が吹いて影に震える<br>醜いコート🧥が重要な役割を果たしたように </p>
<p>夜にまた通り過ぎると会場は🏳️‍🌈 </p>
<h2 id="LGBT🏳️‍🌈"><a href="#LGBT🏳️‍🌈" class="headerlink" title="LGBT🏳️‍🌈"></a>LGBT🏳️‍🌈</h2><p>周りに色とりどりの小さな旗がぶら下がっているのに早くから気づきました。最初は楽しかったと思っていたのですが、なぜそれがないのかと思っていました🇺🇸旗<br>別の州から飛んだTはそれがLGBTだと言った<br>そして月末には<a href="https://en.wikipedia.org/wiki/San_Francisco_Pride">SFLGBTパレードとお祝い</a>があります </p>
<blockquote>
<p>通称「サンフランシスコプライド」として知られるサンフランシスコレズビアン、ゲイ、バイセクシュアル、トランスジェンダープライドセレブレーション(旧称インターナショナルレズビアンフリーダムデイ、ゲイフリーダムデイ、クリストファーストリートウエスト)は、毎年6月末にカリフォルニア州サンフランシスコで開催されます。 レズビアン、ゲイ、バイセクシュアル、トランスジェンダー(LGBT)の人々とその仲間を祝うパレードとフェスティバル。 2019年の第49回年次パレードには289のパレードが含まれ、公式ウェブサイトでは「米国で最大のLGBTの人々と同盟国の集まり」と呼ばれていました。 </p>
</blockquote>
<p>後でこのミスTは彼女にガールフレンドがいると言った<br>1万年独身の小さな魔道士は長い間沈黙し、言葉を失いました </p>
<h2 id="ナインミュージックフラワーストリート"><a href="#ナインミュージックフラワーストリート" class="headerlink" title="ナインミュージックフラワーストリート"></a><a href="https://en.wikipedia.org/wiki/Lombard_Street_(San_Francisco)">ナインミュージックフラワーストリート</a></h2><blockquote>
<p>ロンバードストリートで最も有名なセクションは、ロシアの丘にある「ジュクワストリート」です。 Jiuquhua Streetは、HydeStreetとLeeviworthStreetの間のセクションです。 これは、米国で最も曲がりくねった通りであるためです。短い道路には合計8つの急な曲がり角があり、サンフランシスコのケーブルカーがチャイナストリートを走っている間、ハイドストリートからリーバイワースストリートと下り坂への片道のみが許可されます。 -ハイドストリートラインは、このセクションの開始点(つまり、交差点の最も高い点の位置)を通過します。 傾斜が非常に急なこの部分はもともと直線でしたが、交通や歩行者の安全を考慮して、1923年に現在のカーブに変更されました。 [2]このデザインは、オーナーのカール・ヘンリーによって最初に提案されました。 [3]この設計は、スペースと引き換えに長さを使用して、ラインに沿った傾斜サイズ(27％)を遅くすることを目的としています。 [4] Jiuquhua Street全体の長さは600フィート(180メートル)、直線部分の長さは412.5フィート(125.7メートル)で、舗装は摩擦を増やすためにレンガで舗装されています。 開始点には、5 mph(8 km / h)の最大速度制限が設定されています。 </p>
</blockquote>
<p>イニシャルDを読んだ人なら誰でも思いつくと思います<br><a href="https://www.bilibili.com/bangumi/play/ep4643">イニシャルDサードステージ</a><br>匠vsシャオバイハイ、トヨタAE86 vsMR-2<br>55分55秒のコーナリング </p>
<p>残念ながら、上記の👆は単なるアニメです </p>
<p>現実世界では<br>当時、私は運転免許を持っていなかったので、仲間は振り返ることに自信がありませんでした。<br>それで結局彼らは車を道路の脇に駐車し🚗フィッシャーマンズワーフにユーバーを呼びました<br>そして、特にJiuquhua通りを横断するように運転手に指示しました </p>
<p>ドライバーは非常に理解しており、コーナリング時に減速します </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-04.jpg" alt=""></div></div></div>

<p>太陽が輝いていて、緑が滴っていて、花が咲いていて、花はカラフルです </p>
<p>ところで：フィルター(mo)レンズを持参することを忘れないでください🕶️ </p>
<h2 id="フィッシャーマンズワーフ＆アルカトラズ"><a href="#フィッシャーマンズワーフ＆アルカトラズ" class="headerlink" title="フィッシャーマンズワーフ＆アルカトラズ"></a><a href="https://en.wikipedia.org/wiki/Fisherman%27s_Wharf,_San_Francisco">フィッシャーマンズワーフ</a>＆<a href="https://en.wikipedia.org/wiki/Alcatraz_Island">アルカトラズ</a></h2><blockquote>
<p>サンフランシスコのフィッシャーマンズワーフの名前と近隣の特徴は、19世紀半ばから後半にかけて、イタリアの移民漁師がゴールドラッシュによって都市の初期にもたらされた人々の流入を利用したことに由来しています。 ほとんどのイタリア人移民漁師は桟橋近くのノースビーチエリアに定住し、地元の料理やダンジカニを求めて釣りをしました。 それから今日まで、ドックはまだサンフランシスコの漁船団の中心です。 この地域は1970年代と1980年代に観光名所として再開発されましたが、まだ多くの活発な漁師とその艦隊がいます。 </p>
</blockquote>
<p>広場には大きなカニがいます🦀️ </p>
<p>その隣の食料品店は様々な中国製の商品でいっぱいです </p>
<p>悪魔😈島 </p>
<blockquote>
<p>訪問者は、サンフランシスコフェリービルとフィッシャーマンズワーフの間のピア33からフェリーに乗ることができ、島に到達するのに15分もかかりません。 </p>
</blockquote>
<p>埠頭⛵️その隣には第二次世界大戦の英雄、引退した軍艦、潜水艦がいます </p>
<p>広場の何人かの人々は音楽を演奏しています🎵<br>周りに歩行者がいないかのように、とても幸せな曲を演奏しているおじいちゃんがいたのが印象的でした。<br>この流れですか？ だから私は転倒したいという衝動を持っています<br>これも長期的な後悔になっています </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-10.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-14.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-17.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-18.jpg" alt=""></div></div></div>

<p>天国、毒のように青い </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-16.jpg" alt=""></p>
<h2 id="無限ループ"><a href="#無限ループ" class="headerlink" title="無限ループ"></a>無限ループ</h2><p>宇宙船は無限ループだといつも思っていました<br>名前が示すように、無限ループ<br>しかし、ガチョウはそうではありません<br>実はビジターセンターのある公園です </p>
<p>ここに記念のTシャツがあるかどうかわかりません<br>私は金属のものを選びました </p>
<p>パークは<br>まだ建設中です… </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-20.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-21.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-23.jpg" alt=""></div></div></div>

<h2 id="スタンフォード"><a href="#スタンフォード" class="headerlink" title="スタンフォード"></a>スタンフォード</h2><p>周りを回って出てきた<br>若い頃にここに連れてこられたような気がします<br>多分あなたは大学入学試験でさらに50ポイントを取ることができます </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-27.jpg" alt=""></div></div></div>

<h2 id="カリフォルニア州道1号"><a href="#カリフォルニア州道1号" class="headerlink" title="カリフォルニア州道1号"></a>カリフォルニア州道1号</h2><h2 id="カリフォルニアハイウェイワン"><a href="#カリフォルニアハイウェイワン" class="headerlink" title="カリフォルニアハイウェイワン"></a>カリフォルニアハイウェイワン</h2><p>映画の海はロマンチックで、手をつないでゆっくりとビーチを歩いています<br>本土の中に住んでいます<br>姉妹紙を見つけて海を見に行く<br>夢になりました </p>
<p>海の前に太平洋を見た<br>ラングースカリフォルニアビーチ<br>砂はとてもとげだらけです<br>私は海水に注意を払いませんでした🌊ズボンの足を通過せずに急いで<br>怖がっている小さな魔道士は何度も何度も戻ってきます<br>潮風は塩辛くて魚臭く、ビーチのいたるところにケルプの体があります<br>海面を見るとエピファニーはありません<br>それどころか、太陽は特にまぶしいです<br>私が夜に戻ったとき、彼と彼の友人はさまざまな程度の日焼けをしていました </p>
<blockquote>
<p>耳たぶ、頭皮、唇など、体の露出した部分はすべて焼ける可能性があります。 たとえば、紫外線(UV)光が通過できるように織り方が緩んでいる場合、覆われた領域でさえも焼ける可能性があります。 あなたの目は太陽からの紫外線に非常に敏感で、やけどを負う可能性があります </p>
<blockquote>
</blockquote>
<p>UVフォトンが皮膚に当たると、ヒト細胞のDNAに損傷を与えます。 これは、アデノシン、チミン、グアニンの4つのヌクレオチド間の順序付けられた結合を切断することによって行われます。 いわゆるチミン二量体の形成は、2つのチミンヌクレオチドが組み合わされると、DNA分子全体の形状が不均衡になることを意味します。<br>乱雑なDNAを持つ細胞は通常、アポトーシスと呼ばれるプロセスで自殺します。 細胞は非常に多くの放射線を受けたため、アポトーシスを起こします。 </p>
</blockquote>
<p>恥ずかしい😅<br>非常に貧弱な経験<br>まったくロマンチックではありません…<br>映画はすべて欺瞞的です </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-36.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-37.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-38.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-34.jpg" alt=""></p>
<h2 id="ソイレント＆iRobot"><a href="#ソイレント＆iRobot" class="headerlink" title="ソイレント＆iRobot"></a>ソイレント＆iRobot</h2><p>ハオはXiaomiRobot🤖️には十分な吸引力がないことを繰り返し強調したので、iRobotを購入する必要があります<br>北米のアプライアンスは安価で、Amazon 700シリーズの割引に追いつくだけです🈹️、3,000元以上 </p>
<p>しかし、当時、ビジュアルナビゲーションを備えた900シリーズはありませんでした<br>それはまだランダムな衝突アルゴリズムです。あなたが家にいるなら、あなたはロボットを感じるでしょう🤖️超ばかげています<br>しかし、仕事から戻ったとき、ロボットはまだ充電パイルにあり、動かなかったことがわかりました。<br>床がきれいでなければ怠け者だと思った<br>また、品質もかなり良く、留守中に加湿器をノックダウンしました。<br>家に帰ったら、たくさんの水を飲んで壊れたと思ったので、水を捨てました。 </p>
<p>ボトル入りソイレントで送料無料、朝の怠惰なベッドを防ぐためにできるだけ早く箱を購入してください </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-25.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-24.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>USA</tag>
        <tag>🇺🇸</tag>
      </tags>
  </entry>
  <entry>
    <title>🇺🇸-0-2</title>
    <url>/ja/USA-0-2/</url>
    <content><![CDATA[<h2 id="WWDC-16"><a href="#WWDC-16" class="headerlink" title="WWDC 16"></a>WWDC 16</h2><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-20.jpg" alt=""></p>
<a id="more"></a>

<p>このような会議に初めて参加することは、爆発することにとても興奮しています💥<br>以前にソイレントを購入して心配しました<br>無制限のオフサイトの食べ物、果物、飲み物<br>そしてヘルシーなランチ </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-17.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-13.jpg" alt=""></div></div></div>

<h2 id="セッション"><a href="#セッション" class="headerlink" title="セッション"></a>セッション</h2><p>セッションはそれほど重要ではありません、結局のところ、録音があります<br>ライブデモはしばしば覆されます<br>たとえば、StickerのiMessageをデモンストレーションした妹はクラッシュを続けました<br>10分以上投げた後、それはついに成功し、法廷で歓声を上げました<br>これらはすべて後の録音で切り取られました </p>
<p>Swift 2.0、グラフィカルメモリリーク、タブとスペース、メタルエンジンレンダリング、ストーリーボード </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-03.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-04.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-07.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-09.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-14.jpg" alt=""></div></div></div>

<h2 id="ラボ"><a href="#ラボ" class="headerlink" title="ラボ"></a>ラボ</h2><p>本当に重要なのはラボです<br>知らない質問をフレンドリーな<strong>質問</strong>アップルエンジニアに持ち込むことができます </p>
<p>話し言葉は良くありませんが、関連する研究室に行って、戸惑っていた質問をしました。 </p>
<ol>
<li><a href="https://leihao0.github.io/ja/How-to-add-Xib-on-StoryBoard">StoryBoardにXibを追加する方法</a> </li>
<li><a href="https://leihao0.github.io/ja/Reflection-in-Swift-via-Mirror">ミラーリングによるSwiftの反射</a> </li>
<li><a href="https://leihao0.github.io/ja/Swift-Generics-in-protocol-and-enum">Swift Generic in Protocol and Enumeration</a> </li>
</ol>
<p>ナビゲーションバーの下に水平線がある理由についてのゴシップがあることを忘れないでください<br>エンジニアはソースコード(Obj-C)を開いてそれを見て、デザインにはそれが必要だと言いました😓 </p>
<p>中盤間のその他の共有 </p>
<h2 id="祖国とマーベルユニバース"><a href="#祖国とマーベルユニバース" class="headerlink" title="祖国とマーベルユニバース"></a>祖国とマーベルユニバース</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-23.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-25.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-26.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-16.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-15.jpg" alt=""></div></div></div>

<h2 id="バッシュ"><a href="#バッシュ" class="headerlink" title="バッシュ"></a>バッシュ</h2><p>木曜日の夜の午後7時にバッシュ </p>
<p>以前にそのような活動を避けたことがあります<br>シリコンバレーS01E01はそのようなシーンを最初に描いています<br>上記のコンサートは必死に雰囲気を作り出します<br>以下のプログラマーは静かです<br>拍手も迷わない </p>
<p>後で、名前が1文字しか欠けていたTLフレンズグループのクラスメートは言った<br>効果はとても良いです。みんなが次々と音楽に揺れ、とても高い </p>
<h2 id="周囲"><a href="#周囲" class="headerlink" title="周囲"></a>周囲</h2><p>キューが長い<br>しかし、杭州の若い女性は、Tシャツを取り戻さなければならないと言いました<br>買う人がいない最終日まで待つつもりでした<br>子供のモデルしか利用できないことが判明しました… </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-12.jpg" alt=""></div></div></div>

<h2 id="戻る"><a href="#戻る" class="headerlink" title="戻る"></a>戻る</h2><p>その時、国とロックゾーンが利用可能になりました、そしてあなたはまだここでエルフを捕まえることができます </p>
<p>その後、荷物をまとめて空港に行きます<br>私は友人が免税店でBoseQuietComfort25を持ってくるのを手伝いました<br>車を返却し、セキュリティチェックに合格する<br>終了しました </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-21.jpg" alt=""></div></div><div class="group-picture-row"></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>USA</tag>
        <tag>🇺🇸</tag>
        <tag>WWDC</tag>
      </tags>
  </entry>
  <entry>
    <title>いうことがない</title>
    <url>/ja/Nothing-To-Say/</url>
    <content><![CDATA[<p>私は長い間何も書いていません。 おそらく完全に英語で書くことは障害です。 </p>
<p>この2か月であまりにも多くのことが起こりました。 </p>
<p>まず第一に、私の会社のDラウンド融資は失敗しました。 </p>
<a id="more"></a>

<p>私たちのCTOは、アパートを設計するプログラマーの数を3分の1以上減らし、3つのアプリケーションを1つに減らす必要がありました。 プログラマーのほぼ半数が去りました。 すべてがBラウンドのハッピータイムに戻っているようです。<br>ただし、元に戻せないものもあります。 </p>
<p>私のプロジェクトはバージョン1.6に繰り返され、中断されました。 それで、コーディングの仕事はありませんでした。その後、私はWWDC16に参加するためにサンフランシスコに行きました。 </p>
<p>次に、好きなことをします。 </p>
<p>したがって、プログラミングは私の仕事であり、iOS開発者からのギャップの年です。 </p>
<p>私が最初に働き始めたとき、私は多くのテクノロジーブログを購読しましたが、それらは私の注意を引くことはありませんでした。 同時に、私はすべてに興味を失い、誰にも会いたくありませんでした。 </p>
<p>それは私の本当の趣味の欠如が原因かもしれません。私の唯一の趣味はプログラミングでした。 </p>
<p>しかし、2年前に世界で最も息をのむようなスーパーシティである北京に行った後、私はついに私の体と精神をリラックスするために少し贅沢な時間を過ごしました。 </p>
<p>第三に、SFOから戻った後、私は運動の重要性を再調整しました。 先進国では、ほぼすべてのエリートが運動します。 </p>
<p>至る所で青い空を見たとき、広い太平洋、太陽の下の緑の葉、そして山の家々が霧に覆われているのを見ました。<br>私は世界に素晴らしい世界があることを知っています。<br>自分を熱く保つことが最も重要であり、他のすべては二次的なものです。 </p>
]]></content>
      <tags>
        <tag>Self</tag>
      </tags>
  </entry>
  <entry>
    <title>Macで自動ホットキーとしてAppleScriptを使用する</title>
    <url>/ja/Use-AppleScript-as-AutoHotkey-On-Mac/</url>
    <content><![CDATA[<p>Soylent 1.6をテストするために、最近20箱以上購入しました。<br>しかし、問題があります。Safariはフォームの自動入力をサポートしていないため、送料と関税を支払うために、クレジットカードのすべての情報を手動で入力する必要があります。 そのため、送料と関税を計算するには、クレジットカードのすべての情報を手動で入力する必要があります。 </p>
<a id="more"></a>

<p>すべての支払い手順は、番号、日付、再開、パスワードのみです。 </p>
<p>それを何度も繰り返した後、私は倒れました。 </p>
<p>自動である必要があります。 </p>
<p>神のために、私が4年前にまだWindowsを使用していたとき、私はAutoHotkeyについて考えました。 </p>
<p>MacにはAppleScriptがあり、キーボード入力とマウスクリックをシミュレートできます。 </p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">&quot;Safari&quot;</span></span><br><span class="line">	<span class="built_in">activate</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">&quot;System Events&quot;</span></span><br><span class="line">	<span class="keyword">tell</span> process <span class="string">&quot;Safari&quot;</span></span><br><span class="line">		<span class="keyword">set</span> <span class="built_in">frontmost</span> <span class="keyword">to</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">-- you can get the screen coordinate by `cmd+shift+4` easily</span></span><br><span class="line">		click <span class="keyword">at</span> &#123;<span class="number">1420</span>, <span class="number">500</span>&#125;</span><br><span class="line">		<span class="comment">-- delay 1s which is for wait the website to load</span></span><br><span class="line">		<span class="built_in">delay</span> <span class="number">1</span></span><br><span class="line">		click <span class="keyword">at</span> &#123;<span class="number">1305</span>, <span class="number">615</span>&#125;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">delay</span> <span class="number">10</span></span><br><span class="line">		click <span class="keyword">at</span> &#123;<span class="number">1090</span>, <span class="number">369</span>&#125;</span><br><span class="line">		<span class="comment">-- simulate press **6** on keyboard</span></span><br><span class="line">		keystroke <span class="string">&quot;6&quot;</span></span><br><span class="line">		keystroke <span class="string">&quot;6&quot;</span></span><br><span class="line">		keystroke <span class="string">&quot;0&quot;</span></span><br><span class="line">		<span class="comment">-- ...</span></span><br><span class="line">		keystroke <span class="string">&quot;6&quot;</span></span><br><span class="line">		keystroke <span class="string">&quot;4&quot;</span></span><br><span class="line">		<span class="built_in">delay</span> <span class="number">1</span></span><br><span class="line">		click <span class="keyword">at</span> &#123;<span class="number">1083</span>, <span class="number">426</span>&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>そして、その過程で興味深いことを発見しました。つまり、スクリプトで** cvv **をクリックできないということです。 </p>
<p>銀行のウェブサイトはセキュリティの面で実際にいくつかの仕事をしたようです。 </p>
]]></content>
      <tags>
        <tag>Mac</tag>
        <tag>AppleScript</tag>
        <tag>AutoHotkey</tag>
      </tags>
  </entry>
  <entry>
    <title>macOSssh設定をiCloudと同期する</title>
    <url>/ja/Sync-macOS-ssh-config-with-iCloud/</url>
    <content><![CDATA[<p>開発者として、「ベータ」システムのためにバックアップを復元しなければならないことがあります。 </p>
<p>幸いなことに、最近ではほとんどのデータがサーバー上にあります。 Safari、写真、カレンダー、メモ、リマインダー、その他のアプリケーションもiCloudストレージを使用します。 これは大きな進歩です。 システムを再インストールし、AppStoreと <code>brewshell</code>からアプリを再ダウンロードする必要があります。 </p>
<a id="more"></a>

<p>しかし、ssh、構成などの設定は非常に面倒です。 また、秘密鍵を紛失する可能性があります。 </p>
<p>そこで、iCloud Driveフォルダに「macOS」という名前の新しいフォルダを作成し、「。」を含まないすべてのファイルをコピーしました。例： <code>.gitconfig</code>〜&gt;<code>gitconfig</code>。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">macOS=/Users/art/Library/Mobile\ Documents/com~apple~CloudDocs/macOS</span><br><span class="line"></span><br><span class="line">ln -sf <span class="variable">$macOS</span>/gitignore .gitignore</span><br><span class="line">ln -sf <span class="variable">$macOS</span>/gitignore .gitignore_global</span><br><span class="line">ln -sf <span class="variable">$macOS</span>/gitconfig .gitconfig</span><br><span class="line"></span><br><span class="line">ln -sf <span class="variable">$macOS</span>/zshrc .zshrc</span><br><span class="line">ln -sf <span class="variable">$macOS</span>/config  .config</span><br><span class="line">ln -sf <span class="variable">$macOS</span>/ssh  .ssh</span><br><span class="line"></span><br><span class="line">mkdir -p Blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># ヘキソ </span></span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init Blog</span><br><span class="line"><span class="built_in">cd</span> Blog</span><br><span class="line">npm install</span><br><span class="line">rm -rf <span class="built_in">source</span></span><br><span class="line">ln -s ~/Documents/Blog/<span class="built_in">source</span> ~/Blog/<span class="built_in">source</span></span><br><span class="line"></span><br><span class="line">brew install ruby python pandoc</span><br><span class="line"></span><br><span class="line">brew install openssl youtube-dl ffmpeg pyenv rbenv rclone autojump mp4box</span><br><span class="line"></span><br><span class="line"><span class="comment"># ルビー </span></span><br><span class="line">rbenv install 2.7.0</span><br><span class="line">rbenv global 2.7.0</span><br><span class="line"></span><br><span class="line">brew cask install iterm2  sourcetree vmware-fusion flux sublime-text shadowsocksx-ng clashx wwdc spectacle losslesscut iina dropbox typora istat-menus 1password calibre imageoptim plex-media-server vscode osxfuse firefox chromium</span><br><span class="line"></span><br><span class="line"><span class="comment"># プレビュー </span></span><br><span class="line">brew cask install qlvideo qlstephen qlcolorcode quicklook-json qlmarkdown qlprettypatch qlimagesize suspicious-package provisionql</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>どのクラウドドライブ(Dropboxなど)でもこれを実行できますが。<br>プライバシーとティム・クックが書いたこの手紙を考慮して<a href="http://www.apple.com/customer-letter/">顧客向け情報</a> </p>
<p>iCloudが私の選択です😊 </p>
]]></content>
      <tags>
        <tag>macOS</tag>
        <tag>ssh</tag>
        <tag>sync</tag>
      </tags>
  </entry>
  <entry>
    <title>中国人はどのように英語を学ぶのですか</title>
    <url>/ja/How-to-learn-English-as-a-Chinese/</url>
    <content><![CDATA[<p>中国人学生の99％のように、私は残酷な方法で言葉を暗記するのが嫌いです。 若い頃、母国語を無痛で自然に習得しました。 </p>
<p>ですから、貧しい小学校の時、一言も覚えていませんでした。 </p>
<a id="more"></a>

<p>実は言葉が思い出せないのが実情です。 信じられないかもしれませんが、どんなに一生懸命頑張っても思い出せません。 この列の黒板に書く番になるたびに、単語ごとにコピーしながら、左右を注意深く見なければなりません。 </p>
<p>当時のティーンエイジャーとして、私は興味がありました、なぜ彼らはそれをすることができましたか？ その方法は私の脳と両立しないに違いありません。 </p>
<p>幸いなことに、元チャンピオンが言葉を覚えていないと発表したグリッドブックで別の方法を見ました。 彼女がしたのは、100回以上声を出してNCEを繰り返すことだけでした。 </p>
<p>ハンフ、本当にいいのでやってみました。この方法は、大学入学試験でかなり良いスコアを得ることができ、大学でCET6に合格したので、とても役に立ちました。 あなたは何を読んでいる。 </p>
<p>IELTSの前は、初期の英語のテストはすべて単なる冗談でした。 </p>
<p>そして、最近気付いたもう一つの死角があります。試験は試験です。要点をマ​​スターし、できるだけ早く出発する必要があります。 </p>
<p>それまでは、本当のレベルが上がれば、毎日のように手間をかけずに試験ができると固く信じていました。 </p>
<p>しかし実際には、これには非常に質の高い人々が必要であり、試験の要件をはるかに超えています。これは無限の道です。 </p>
<p>初めて英語に触れてから14年が経ちましたが、数ヶ月前に寮と連絡を取り合って、ほんの少しの一歩を踏み出しただけだと感じています。 </p>
<p>言語は人間の本能に似ていることがわかりました。赤ちゃんが成長すると、脳のニューロンが洗浄されます。進化心理学によれば、祖先は若いときに別の言語を学ぶ必要がなかったからです。 </p>
<p>しかし、私たちは今、現代社会にいます。私が知る限り、合理的に聞こえる方法は2つだけであり、さらに重要なのは経済学です。 </p>
<ol>
<li><a href="https://www.goodreads.com/book/show/18868451?from_search=true">英語を使用してください</a> </li>
<li>Lai Shixiong American Phonetic Mark </li>
<li>ESLPOD </li>
<li>アメリカのアクセントトレーニング </li>
<li>毎年少なくとも10冊のオリジナルの本を読む </li>
<li><a href="http://www.geekonomics10000.com/870">英語を学ぶための少し実用的な経験</a> </li>
<li>毎日600のGREワードを学ぶ </li>
<li>Ebbinghausの忘却曲線に従って繰り返します。 </li>
<li>精読 </li>
<li>過去の論文 </li>
</ol>
<p>皮肉なことに、第2条が私を要点に追いやったのです。言葉を覚えておきたいのです！ </p>
<p>でも今回は少なくとも一つ違うので、自由意志で選びました。 </p>
]]></content>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>StoryBoardにXibを追加する方法</title>
    <url>/ja/How-to-add-Xib-on-StoryBoard/</url>
    <content><![CDATA[<blockquote>
<p>1975年、古典的なソフトウェアプロジェクト管理本「MythicalManMonth」。 ソフトウェアエンジニアリングに関するエッセイの中で、フレッドブルックスは、どのプログラミング言語を選択しても、プロの開発者が1日あたり平均10行のコード(LoC)を書き込むことを指摘しました。 </p>
</blockquote>
<p>StoryBoardは、コード行の節約と効率の向上に役立ちます。Appleは、すべてのWWDCでこれを強く推奨し、引き続き改善していきます。 </p>
<a id="more"></a>

<p>貧しいプログラマーにプログラムでUIViewを書くように頼むチームリーダーがまだたくさんいる理由がわかりません。 </p>
<p>一部のCustomViewは非常に再利用可能であり、StoryBoardに貼り付けると、不要な副作用が発生すると考えている可能性があります。 </p>
<p>したがって、このソリューションの主なアイデアは、CustomViewsをXibに凝縮してから、StoryBoardに追加することです。 </p>
<p>Appleは直接サポートしていないため、これにはいくつかの手順が必要です。 </p>
<ol>
<li>IBDesignableの <code>CustomView.Swift</code>と<code>CustomView.Xib</code>を追加します </li>
<li><code>CustomView.xib-&gt; Placeholder-&gt; File Owner-&gt; CustomClass</code>を<code>CustomView</code>に設定します </li>
<li>プログラムで新しいCustomViewを作成し、CustomView.Xibからルートビューをロードします </li>
<li>init関数の <code>CustomView</code>の水平方向と垂直方向の中心に同じ幅と高さのルートビューを追加します </li>
<li>これで、ViewをStoryBoardにドラッグし、そのクラスを <code>CustomView</code>に設定できます。これにより、プレビュー用のスナップショットを生成できます。 </li>
</ol>
<p>ただし、CustomViewのサブビュー(UIButtonなど)をViewController<code>@ IBOutlet</code>に接続することはできません。 </p>
<p><code>Delegate</code>または<code>Block</code>はこの問題を解決できます。 </p>
<p>私は「デリゲート」を半年使って見つけたので「ブロック」方式を提案します </p>
<ul>
<li>ViewControllerのデリゲートが多すぎます </li>
<li><code>delegate = self</code>は<code>viewDidLoad</code>を書く必要があり、 <code>viewDidDisappear</code>に<code>= nil</code>を書くこともあります </li>
</ul>
<p><code>Block</code>のコードはより少なく、より単純になります。 </p>
<p>以下は<a href="https://github.com/leihao0/DesignableView">例</a>で、時間を短縮できる可能性があります。 </p>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Xcode</tag>
      </tags>
  </entry>
  <entry>
    <title>ミラーリングによるSwiftでの反射</title>
    <url>/ja/Reflection-in-Swift-via-Mirror/</url>
    <content><![CDATA[<ul>
<li><p>鏡 </p>
<ul>
<li><code>value</code>：元の反射値にアクセスしますが、タイプはAnyです。 </li>
<li><code>valueType</code>：value.dynamicTypeと同等の元の反射値のタイプ。 </li>
</ul>
</li>
<li><p>純粋なSwiftオブジェクトで <code>$ 0.value</code>に値を割り当てるメソッドが見つからなかったため、<code>Class</code>は <code>NSObject</code>を<code>KVC</code>として継承します。 </p>
</li>
<li><p>簡略化されたオプションのケースは無視しました。 </p>
</li>
<li><p>辞書またはオブジェクトを再帰的に生成する </p>
</li>
</ul>
<a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="keyword">typealias</span> <span class="type">DynamicKVType</span> = [<span class="type">String</span>: <span class="type">Any</span>]</span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">DynamicKV</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">dict</span><span class="params">()</span></span> -&gt; <span class="type">DynamicKVType</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">assignment</span><span class="params">(<span class="number">_</span> with: DynamicKVType)</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">DynamicKV</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">dict</span><span class="params">()</span></span> -&gt; <span class="type">DynamicKVType</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = <span class="type">DynamicKVType</span>()</span><br><span class="line"></span><br><span class="line">        <span class="type">Mirror</span>(reflecting: <span class="keyword">self</span>).children.forEach &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> k = $<span class="number">0</span>.label <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = $<span class="number">0</span>.value <span class="keyword">as</span>? <span class="type">DynamicKV</span> &#123;</span><br><span class="line">                dict[k] = v.dict()</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dict[k] = $<span class="number">0</span>.value</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dict</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">assignment</span><span class="params">(<span class="number">_</span> with: DynamicKVType)</span></span> &#123;</span><br><span class="line">        <span class="type">Mirror</span>(reflecting: <span class="keyword">self</span>).children.forEach &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> obj = <span class="keyword">self</span> <span class="keyword">as</span>? <span class="type">NSObject</span>, <span class="keyword">let</span> dictV = with[$<span class="number">0</span>.label!], <span class="keyword">let</span> k = $<span class="number">0</span>.label <span class="keyword">else</span> &#123; <span class="built_in">fatalError</span>(<span class="string">&quot;child leak&quot;</span>) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> dkvt = dictV <span class="keyword">as</span>? <span class="type">DynamicKVType</span>, <span class="keyword">let</span> v = $<span class="number">0</span>.value <span class="keyword">as</span>? <span class="type">DynamicKV</span> &#123;</span><br><span class="line">                v.assignment(dkvt)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                obj.setValue(dictV, forKey: k)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>: <span class="title">NSObject</span>, <span class="title">DynamicKV</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s: <span class="type">String</span> = <span class="string">&quot;a&quot;</span></span><br><span class="line">    <span class="keyword">var</span> i: <span class="type">Int</span> = -<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>: <span class="title">NSObject</span>, <span class="title">DynamicKV</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="string">&quot;b&quot;</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="type">A</span>()</span><br><span class="line">    <span class="keyword">var</span> array = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> b = <span class="type">B</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b.dict\t&quot;</span>, b.dict())</span><br><span class="line"></span><br><span class="line">b.assignment([<span class="string">&quot;s&quot;</span>: <span class="string">&quot;bbbbbbb&quot;</span>, <span class="string">&quot;a&quot;</span>: [<span class="string">&quot;s&quot;</span>: <span class="string">&quot;aaaaaaa&quot;</span>, <span class="string">&quot;i&quot;</span>: <span class="number">233</span>], <span class="string">&quot;array&quot;</span>: [-<span class="number">3</span>, -<span class="number">2</span>, -<span class="number">1</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b.assignment\t&quot;</span>, b.s, b.a.s, b.a.i, b.array)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Swift</tag>
      </tags>
  </entry>
  <entry>
    <title>UITextFieldとUILabelのヒント</title>
    <url>/ja/UITextField-and-UILabel-Tips/</url>
    <content><![CDATA[<h2 id="UITextFieldのヒント"><a href="#UITextFieldのヒント" class="headerlink" title="UITextFieldのヒント"></a>UITextFieldのヒント</h2><h3 id="キーボードにトップラインを追加する"><a href="#キーボードにトップラインを追加する" class="headerlink" title="キーボードにトップラインを追加する"></a>キーボードにトップラインを追加する</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UITextField</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addTopLineOnKeyboard</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> line = <span class="type">UIView</span>(frame: <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, width: <span class="number">2000</span>, height: <span class="number">0.5</span>))</span><br><span class="line">        line.backgroundColor = <span class="string">&quot;979797&quot;</span>.color</span><br><span class="line"></span><br><span class="line">        inputAccessoryView = line</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="小数点以下2桁の価格番号のみを許可"><a href="#小数点以下2桁の価格番号のみを許可" class="headerlink" title="小数点以下2桁の価格番号のみを許可"></a>小数点以下2桁の価格番号のみを許可</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">textField</span><span class="params">(<span class="number">_</span> textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> str = (textField.text! <span class="keyword">as</span> <span class="type">NSString</span>).replacingCharacters(<span class="keyword">in</span>: range, with: string)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> regex = <span class="string">&quot;^([1-9]\\d&#123;0,7&#125;|0)(\\.\\d&#123;0,2&#125;)?$|^$&quot;</span></span><br><span class="line">    <span class="keyword">let</span> predicte = <span class="type">NSPredicate</span>(format: <span class="string">&quot;SELF MATCHES %@&quot;</span>, regex)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  predicte.evaluate(with: str)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1〜100のみ許可されるか、空白のままにします"><a href="#1〜100のみ許可されるか、空白のままにします" class="headerlink" title="1〜100のみ許可されるか、空白のままにします"></a>1〜100のみ許可されるか、空白のままにします</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">textField</span><span class="params">(<span class="number">_</span> textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> str = (textField.text! <span class="keyword">as</span> <span class="type">NSString</span>).replacingCharacters(<span class="keyword">in</span>: range, with: string)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1-100 or leave blank</span></span><br><span class="line">    <span class="keyword">let</span> regex = <span class="string">&quot;^[1-9]?\\d|100|[1-9]?$&quot;</span></span><br><span class="line">    <span class="keyword">let</span> predicte = <span class="type">NSPredicate</span>(format: <span class="string">&quot;SELF MATCHES %@&quot;</span>, regex)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  predicte.evaluate(with: str)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="UILabelのヒント"><a href="#UILabelのヒント" class="headerlink" title="UILabelのヒント"></a>UILabelのヒント</h2><h3 id="携帯電話番号を-111-1111111にフォーマットします"><a href="#携帯電話番号を-111-1111111にフォーマットします" class="headerlink" title="携帯電話番号を 111 1111111にフォーマットします"></a>携帯電話番号を <code>111 1111111</code>にフォーマットします</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">String</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> phoneNumberFormater: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> s = <span class="keyword">self</span>.replacingOccurrences(of: <span class="string">&quot; &quot;</span>, with: <span class="string">&quot;&quot;</span>)</span><br><span class="line">            <span class="keyword">let</span> <span class="built_in">count</span> = s.characters.<span class="built_in">count</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">count</span> &gt; <span class="number">7</span> &#123;</span><br><span class="line">                s.insert(<span class="string">&quot; &quot;</span>, at: s.index(s.startIndex, offsetBy: <span class="number">3</span>))</span><br><span class="line">                s.insert(<span class="string">&quot; &quot;</span>, at: s.index(s.startIndex, offsetBy: <span class="number">8</span>))</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="built_in">count</span> &gt; <span class="number">3</span> &#123;</span><br><span class="line">                s.insert(<span class="string">&quot; &quot;</span>, at: s.index(s.startIndex, offsetBy: <span class="number">3</span>))</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> s</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="指定された文字列でUILabelの部分文字列を強調表示します"><a href="#指定された文字列でUILabelの部分文字列を強調表示します" class="headerlink" title="指定された文字列でUILabelの部分文字列を強調表示します"></a>指定された文字列でUILabelの部分文字列を強調表示します</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> userInputPhoneNumber = <span class="string">&quot;123&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@IBOutlet</span> <span class="keyword">private</span> <span class="keyword">weak</span> <span class="keyword">var</span> phoneLabel: <span class="type">UILabel!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> phoneNumber:  <span class="type">String</span> = <span class="string">&quot;123456789&quot;</span> &#123;</span><br><span class="line"><span class="keyword">didSet</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> atrStr = <span class="type">NSMutableAttributedString</span>(string: phoneNumber.phoneNumberFormater)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> font = <span class="type">UIFont</span>.systemFont(ofSize: <span class="number">14</span>)</span><br><span class="line">    <span class="keyword">let</span> range = (phoneNumber.phoneNumberFormater <span class="keyword">as</span> <span class="type">NSString</span>).range(of: userInputPhoneNumber.phoneNumberFormater)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> range.location == <span class="number">0</span> &#123;</span><br><span class="line">        atrStr.addAttributes([<span class="type">NSFontAttributeName</span> :  font, <span class="type">NSForegroundColorAttributeName</span>: <span class="type">UIColor</span>.red], range: (phoneNumber.phoneNumberFormater <span class="keyword">as</span> <span class="type">NSString</span>).range(of: userInputPhoneNumber.phoneNumberFormater))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    phoneLabel.attributedText = atrStr</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Xcode</tag>
      </tags>
  </entry>
  <entry>
    <title>PandoraBoxのタイムカプセル</title>
    <url>/ja/Time-Capsule-on-PandoraBox/</url>
    <content><![CDATA[<p>私の「OpenWRT」は「PandoraBox」で、ルーターは「Mimini」です。<br>これらは、公式の<a href="https://wiki.openwrt.org/doc/howto/timemachine">wiki</a>との微妙な違いです。 </p>
<a id="more"></a>

<h2 id="ソフトウェア"><a href="#ソフトウェア" class="headerlink" title="ソフトウェア"></a>ソフトウェア</h2><p><code>システム-&gt;ソフトウェア-&gt;構成</code> </p>
<p>すべてのテキストを次のように調整します。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dest root /</span><br><span class="line">dest ram /tmp</span><br><span class="line">lists_dir ext /var/opkg-lists</span><br><span class="line">option overlay_root /overlay</span><br><span class="line">src/gz r2_base http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/base</span><br><span class="line">src/gz r2_management http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/management</span><br><span class="line">src/gz r2_oldpackages http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/oldpackages</span><br><span class="line">src/gz r2_packages http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/packages</span><br><span class="line">src/gz r2_routing http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/routing</span><br><span class="line">src/gz r2_telephony http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/telephony</span><br><span class="line"></span><br><span class="line">src/gz r2_old_packages http://downloads.openwrt.org.cn/PandoraBox/ralink/mt7620_old/packages/</span><br><span class="line">arch all 100</span><br><span class="line">arch noarch 200</span><br><span class="line">arch ralink 300</span><br></pre></td></tr></table></figure>

<p>次に、PandoraBoxにsshします </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install shadow-useradd shadow-groupadd</span><br><span class="line"><span class="built_in">cd</span> /usr/lib</span><br><span class="line">ln -s libgcrypt.so.20 libgcrypt.so.11</span><br></pre></td></tr></table></figure>

<p>お使いのブラウザに </p>
<p><code>システム-&gt;ソフトウェア-&gt;アクション-&gt;パッケージのダウンロードとインストール</code> </p>
<ul>
<li>netatalk </li>
<li>avahiデーモン </li>
<li>kmod-usb-storage </li>
<li>kmod-fs-hfsplus </li>
<li>ブロックマウント </li>
</ul>
<p><a href="https://wiki.openwrt.org/doc/howto/timemachine">wiki</a>が言ったように、「opkginstall」を試さないでください。そうしないとエラーメッセージが表示されます。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Configuring kmod-fs-hfsplus.</span><br><span class="line">//usr/lib/opkg/info/kmod-fs-hfsplus.postinst: .: line 3: can<span class="string">&#x27;t open &#x27;</span>/etc/functions.sh<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Collected errors:</span></span><br><span class="line"><span class="string"> * pkg_run_script: package &quot;kmod-fs-hfsplus&quot; postinst script returned status 2.</span></span><br><span class="line"><span class="string"> * opkg_configure: kmod-fs-hfsplus.postinst returned 2.</span></span><br></pre></td></tr></table></figure>

<h2 id="フォーマットとマウント"><a href="#フォーマットとマウント" class="headerlink" title="フォーマットとマウント"></a>フォーマットとマウント</h2><p>バックアップハードドライブをMiminiに挿入します </p>
<p><code>blkid</code>を使用してあなたのsdaを見つけてください、これは私のものです </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/dev/sda3: UUID=<span class="string">&quot;dab3d8b8-a87f-3bfb-9fed-f42934d5bcd6&quot;</span> LABEL=<span class="string">&quot;BackUp&quot;</span> TYPE=<span class="string">&quot;hfsplus&quot;</span> PARTLABEL=<span class="string">&quot;Basic data partition&quot;</span> PARTUUID=<span class="string">&quot;27db40be-8ebe-11e6-9e2e-60f81da8c0cd&quot;</span></span><br></pre></td></tr></table></figure>

<p>ext4としてフォーマットします(Miminiは <code>hfsplus</code>をマウントできなかったので、交換として<code>ext4</code>を試しました) </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda3</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd timemachine</span><br><span class="line">useradd -M -G timemachine tmuser</span><br><span class="line">passwd tmuser</span><br><span class="line"><span class="comment"># passwdを入力します </span></span><br><span class="line"></span><br><span class="line">mkdir /mnt/TimeMachine</span><br><span class="line">chown root:timemachine /mnt/TimeMachine</span><br><span class="line">touch /mnt/TimeMachine/USB_DISK_NOT_PRESENT</span><br><span class="line">chmod 555 /mnt/TimeMachine -R</span><br><span class="line">chmod 444 /mnt/TimeMachine/USB_DISK_NOT_PRESENT</span><br></pre></td></tr></table></figure>

<p>ブラウザへ </p>
<p><code>システム-&gt;マウントポイント-&gt;マウントポイント-&gt;追加</code> </p>
<p><code>blkid</code>マウントで取得した<code>UUID</code>を <code>/ mnt / TimeMachine</code>に選択し、サイズ<code>xxx</code> MB、 <code>save</code>を覚えておいてください </p>
<p>「マウントされたファイルシステム」に「/ dev / sda3 / mnt / TimeMachine」が表示される場合があります </p>
<p>それからあなたのsshに </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chown -R tmuser:timemachine /mnt/TimeMachine</span><br></pre></td></tr></table></figure>

<h2 id="Netatalk"><a href="#Netatalk" class="headerlink" title="Netatalk"></a>Netatalk</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/netatalk/afpd.conf</span><br></pre></td></tr></table></figure>

<p>すべてのテキストを次のように変更します。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;TimeMachine&quot;</span> -uampath /usr/lib/uams -uamlist uams_dhx2.so -nodebug -nouservol -icon -nosavepassword -mimicmodel RackMac</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/netatalk/AppleVolumes.default</span><br></pre></td></tr></table></figure>

<p>すべてのテキストをに置き換えます。 (前に取得したxxx、つまりMiBを入力します) </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/mnt/TimeMachine TimeMachine volsizelimit:xxx allow:@timemachine rwlist:@timemachine cnidscheme:dbd options:searchdb,usedots,invisibledots,tm</span><br></pre></td></tr></table></figure>

<h2 id="Avahi"><a href="#Avahi" class="headerlink" title="Avahi"></a>Avahi</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/avahi/avahi-daemon.conf</span><br></pre></td></tr></table></figure>

<p>すべてのテキストを次のように変更します。 </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">server</span>]</span><br><span class="line"><span class="string">host-name=TimeMachine</span></span><br><span class="line"><span class="comment">#domain-name=local</span></span><br><span class="line"><span class="string">use-ipv4=yes</span></span><br><span class="line"><span class="string">use-ipv6=no</span></span><br><span class="line"><span class="string">check-response-ttl=no</span></span><br><span class="line"><span class="string">use-iff-running=no</span></span><br><span class="line"><span class="string">enable-dbus=no</span></span><br><span class="line"><span class="string">allow-interfaces=br-lan</span></span><br><span class="line"></span><br><span class="line">[<span class="string">publish</span>]</span><br><span class="line"><span class="string">publish-addresses=yes</span></span><br><span class="line"><span class="string">publish-hinfo=yes</span></span><br><span class="line"><span class="string">publish-workstation=no</span></span><br><span class="line"><span class="string">publish-domain=yes</span></span><br><span class="line"><span class="comment">#publish-dns-servers=192.168.1.1</span></span><br><span class="line"><span class="comment">#publish-resolv-conf-dns-servers=yes</span></span><br><span class="line"></span><br><span class="line">[<span class="string">reflector</span>]</span><br><span class="line"><span class="string">enable-reflector=no</span></span><br><span class="line"><span class="string">reflect-ipv=no</span></span><br><span class="line"></span><br><span class="line">[<span class="string">rlimits</span>]</span><br><span class="line"><span class="comment">#rlimit-as=</span></span><br><span class="line"><span class="string">rlimit-core=0</span></span><br><span class="line"><span class="string">rlimit-data=4194304</span></span><br><span class="line"><span class="string">rlimit-fsize=0</span></span><br><span class="line"><span class="string">rlimit-nofile=30</span></span><br><span class="line"><span class="string">rlimit-stack=4194304</span></span><br><span class="line"><span class="string">rlimit-nproc=3</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/avahi/services/afpd.service</span><br></pre></td></tr></table></figure>

<p>すべてのテキストを次のように置き換えます。 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; standalone=&quot;no&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">service-group</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;avahi-service.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span> <span class="attr">replace-wildcards</span>=<span class="string">&quot;yes&quot;</span>&gt;</span>Time Capsule<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>_afpovertcp._tcp<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>548<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>_device-info._tcp<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>0<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">txt-record</span>&gt;</span>model=TimeCapsule<span class="tag">&lt;/<span class="name">txt-record</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>_adisk._tcp<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>9<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">txt-record</span>&gt;</span>sys=waMA=XX:XX:XX:XX:XX:XX,adVF=0x100<span class="tag">&lt;/<span class="name">txt-record</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">txt-record</span>&gt;</span>dk1=adVF=0x83,adVN=TimeMachine<span class="tag">&lt;/<span class="name">txt-record</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service-group</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>お使いのブラウザに </p>
<p><code>システム-&gt;スタートアップ</code> <code>有効</code> </p>
<ul>
<li><code>afpd</code> </li>
<li><code>avahi-daemon</code> </li>
</ul>
<p>ルーターを再起動します </p>
<p>Macに移動し、「システム設定」-&gt;「タイムマシン」-&gt;「ディスクの選択」-&gt;「使用可能なディスク」-&gt;「TimeCapsule」で「TimeMachine」を表示します。 </p>
]]></content>
      <tags>
        <tag>PandoraBox</tag>
        <tag>OpenWRT</tag>
        <tag>TimeMachine</tag>
        <tag>Capsule</tag>
      </tags>
  </entry>
  <entry>
    <title>UIStoryboardSegueを使用して、UIViewControllerの表示遷移をカスタマイズします</title>
    <url>/ja/Custom-UIViewController-Presentation-Transitions-with-UIStoryboardSegue/</url>
    <content><![CDATA[<p>最も一般的な方法は <code>UIViewControllerAnimatedTransitioning</code>です </p>
<a id="more"></a>

<p>これを行うには、次のことを行う必要があります。 </p>
<ul>
<li>「XXXTransitioning」と呼ばれる新しいサブクラスを作成し、「NSObject」から継承し、プロトコル「UIViewControllerAnimatedTransitioning」の2つの関数を実装します。 </li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">transitionDuration</span><span class="params">(using transitionContext: UIViewControllerContextTransitioning?)</span></span> -&gt; <span class="type">TimeInterval</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">animateTransition</span><span class="params">(using transitionContext: UIViewControllerContextTransitioning)</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>次に： <ol>
<li>「ViewController」に「XXXTransitioning」の新しいインスタンスを作成します。 </li>
<li><code>transitioningDelegate = self</code>を設定します。 </li>
<li>UIViewControllerTransitioningDelegateを使用して「ViewController」を拡張し、実装します。 </li>
</ol>
</li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">animationController</span><span class="params">(forPresented presented: UIViewController, presenting: UIViewController, source: UIViewController)</span></span> -&gt; <span class="type">UIViewControllerAnimatedTransitioning?</span></span><br></pre></td></tr></table></figure>

<h2 id="退出させる"><a href="#退出させる" class="headerlink" title="退出させる"></a>退出させる</h2><p><code>StoryboardSegue</code>には<code>Custom</code>があることに気づきました </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/CustomUIViewControllerPresentationTransitionsWithUIStoryboardSegue.png" alt=""></p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XXXModalSegue</span>: <span class="title">UIStoryboardSegue</span> </span>&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">perform</span><span class="params">()</span></span> &#123;</span><br><span class="line">    	<span class="keyword">let</span> fromVC = source</span><br><span class="line">        <span class="keyword">let</span> toVC = destination</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> fromView = fromVC.view!</span><br><span class="line">        <span class="keyword">let</span> toView  = toVC.view!</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> (w, h) = (<span class="type">UIScreen</span>.main.bounds.width, <span class="type">UIScreen</span>.main.bounds.height)</span><br><span class="line"></span><br><span class="line">        toView.alpha = <span class="number">0</span></span><br><span class="line">        toView.frame = <span class="type">CGRect</span>(x: w/<span class="number">2</span>, y: <span class="number">0</span>, width: w, height: h)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> window = <span class="type">UIApplication</span>.shared.keyWindow</span><br><span class="line">        window?.insertSubview(toView, aboveSubview: fromView)</span><br><span class="line"></span><br><span class="line">        <span class="type">UIView</span>.animate(withDuration: <span class="number">0.4</span>, animations: &#123;</span><br><span class="line">            toView.alpha = <span class="number">1</span></span><br><span class="line">            toView.frame = toView.frame.offsetBy(dx: -w/<span class="number">2</span>, dy: <span class="number">0</span>)</span><br><span class="line">        &#125;) &#123; (b) <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">self</span>.source.present(<span class="keyword">self</span>.destination, animated: <span class="literal">false</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">            <span class="comment">// OR: self.source.dismiss(animated: false, completion: nil)</span></span><br><span class="line">        s</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>これで、 <code>delegate</code>と<code>Extension</code>をコーディングする必要はありません。 シンプルでクリーン:) </p>
]]></content>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>ダリ-0</title>
    <url>/ja/dali-0/</url>
    <content><![CDATA[<p>アメリカ皇帝から帰国後、暴走モードを開始 </p>
<p>搭乗前にエアチャイナの活動をご覧ください<br>アップグレードするためにお金を追加できます </p>
<p>2015年の新年を忘れないでください<br>冗談を言っているCTOはファーストクラスを購入しました<br>チケットはとても高いです<br>エコノミークラスの前に到着する必要があります </p>
<p>今回は本当にお香になる番です<br>先着はありませんが<br>しかし、優先搭乗、優先下船<br>プロセス全体でエコノミークラスを見たことがない友達 </p>
<hr>
<h2 id="ダリ"><a href="#ダリ" class="headerlink" title="ダリ"></a>ダリ</h2><p>全体的に良い印象<br>ホームステイはとてもきれいです<br>マットレスもとても快適です </p>
<p>少し雨が降っていますが、<br>天傑の小雨はサクサクのように感じます<br>私も本物で美味しかった<br>雲南橋麺 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-01.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-03.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-04.jpg" alt=""></p>
<h2 id="エルハイ"><a href="#エルハイ" class="headerlink" title="エルハイ"></a>エルハイ</h2><p>2016年のエルハイ湖はゲストハウスに囲まれています<br>あなたが周りを回るときだけあなたは家を見ることができます<br>エルハイ湖の素顔が全然見えない </p>
<p>さらに、予定されているルーフリーク<br>エルハイ湖に面したホテルにのみ高額で変更可能 </p>
<p>真夜中にミルキーウェイを見に行く人たち<br>ホテルに戻る道<br>深い路地で吠える犬<br>人々のグループは自分自身を脅かしました<br>もっと恐れる<br>まるでモンスターにぶつかったかのように<br>鳥や獣をする </p>
<p>ホテルでおしゃべりしていた女の子<br>大勢の人が侵入するのを見た<br>彼は奪われたと思った<br>うわー、私は泣いた </p>
<p>一般に<br>非常に貧弱な経験 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-06.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-07.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-08.jpg" alt=""></div></div></div>

<p>しかし、人間の目は暗い空のように見えます<br>ソニーダファアルファ7の下でそれはそのようなシーンを提示します </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-09.jpg" alt=""></p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Dali</tag>
        <tag>🇨🇳</tag>
      </tags>
  </entry>
  <entry>
    <title>ソフトウェアはあなたの学習を加速します</title>
    <url>/ja/Softwares-speed-up-your-learning/</url>
    <content><![CDATA[<p>ポッドキャストとビデオは典型的なオンライン学習方法ですが、それらは多数あり、収集は人間の性質であるため、この速度を向上させる方法がより必要になります。 </p>
<p>通常、人々は母国語を高速で処理できます。<br>私の場合、2xは非常に快適で、3xは許容範囲であり、4xにはサブタイトルがあります。 </p>
<a id="more"></a>

<h2 id="デスクトップコンピューター"><a href="#デスクトップコンピューター" class="headerlink" title="デスクトップコンピューター"></a>デスクトップコンピューター</h2><p>数年前、私がまだ大学にいたとき、私はWindowsを使用しました。KMPlayerは、他のプレーヤーを交換すると音が歪む可能性があるため、すべてのタイプのビデオプレーヤーの中で最高です。 その後、作者は会社を辞め、 <code>C ++</code>で新しいものを書き直し、名前を<a href="https://potplayer.daum.net/">PotPlayer</a>に変更しました。 </p>
<p>macOSでは、Movistが私の最初の選択肢です。これも韓国からのものです。言うまでもなく、その素晴らしさとシンプルさは、多くの損失なしに4倍のオーディオトラックを提供します。<br><a href="https://mpv.io/">MPV</a>などの他のプレーヤーは、無制限のレート制限(はい、好きな速度に加速できます)とオープンソースを提供しますが、デフォルト設定を変更したい場合は、 毎回 <code>〜/ .config / mpv / mpv.conf</code>を変更します。 </p>
<h2 id="モバイル版"><a href="#モバイル版" class="headerlink" title="モバイル版"></a>モバイル版</h2><p>幸いなことに、iPhoneのポッドキャストにはすでに2倍の機能があり(奇妙なことに、iTunesポッドキャストには機能がありません)、多くの学習アプリにもこの便利な機能があります。 </p>
<p>しかし、2倍以上の機能を提供するアプリケーションは見つかりませんでした。 </p>
<p><a href="https://developer.apple.com/reference/avfoundation/avplayer#//apple_ref/occ/instp/AVPlayer/rate"></a>によると </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> player = <span class="type">AVAudioPlayer</span>()</span><br><span class="line">player.prepareToPlay()</span><br><span class="line">player.enableRate = <span class="literal">true</span></span><br><span class="line">player.rate = <span class="number">2.0</span></span><br><span class="line">player.play()</span><br></pre></td></tr></table></figure>

<p>オーディオがファイルベースのメディアの場合、 <code>player.rate = 3.0</code>を変更するだけで実行できるようです。 これは歪みを引き起こしますか？ </p>
<p>いつか時間があればやってみます。 </p>
]]></content>
      <tags>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>プロトコルと列挙で一般的なSwift</title>
    <url>/ja/Swift-Generics-in-protocol-and-enum/</url>
    <content><![CDATA[<ul>
<li>契約には自己または関連するタイプの要件があるため、契約は一般的な制約としてのみ使用できます。 </li>
<li>このプロトコルでは、一般的なパラメーターの使用は許可されていませんが、関連するタイプを使用しています。 </li>
<li>非ユニバーサルに特化することはできません </li>
</ul>
<a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">BaseReq</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Generic Type T in protocol</span></span><br><span class="line">    <span class="keyword">associatedtype</span> <span class="type">T</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">obj</span><span class="params">(<span class="number">_</span> s:String)</span></span> -&gt; <span class="type">T</span></span><br><span class="line">    <span class="keyword">init</span>(completion:((<span class="number">_</span> res: <span class="type">Result</span>&lt;<span class="type">T</span>&gt;)-&gt;())?)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">BaseReq</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">launch</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> s = <span class="string">&quot;network return string&quot;</span></span><br><span class="line">        obj(s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AReq</span>: <span class="title">BaseReq</span> </span>&#123;</span><br><span class="line">    <span class="comment">// declare the Type of T</span></span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">AObj</span></span><br><span class="line">    <span class="keyword">required</span> <span class="keyword">init</span>(completion:((<span class="number">_</span> res: <span class="type">Result</span>&lt;<span class="type">T</span>&gt;)-&gt;())?) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">obj</span><span class="params">(<span class="number">_</span> s: String)</span></span> -&gt; <span class="type">T</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">T</span>(s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BReq</span>: <span class="title">BaseReq</span> </span>&#123;</span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">BObj</span></span><br><span class="line">    <span class="keyword">required</span> <span class="keyword">init</span>(completion:((<span class="number">_</span> res: <span class="type">Result</span>&lt;<span class="type">T</span>&gt;)-&gt;())?) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">obj</span><span class="params">(<span class="number">_</span> s:String)</span></span> -&gt; <span class="type">T</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">T</span>(s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseObj</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AObj</span>: <span class="title">BaseObj</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> a = <span class="string">&quot;a&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> s: <span class="type">String</span>) &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;a&quot;</span>, s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BObj</span>: <span class="title">BaseObj</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> b = <span class="string">&quot;b&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> s: <span class="type">String</span>) &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;b&quot;</span>, s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Launch</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// static func launch(req: BaseReq) -&gt; BaseReq &#123;</span></span><br><span class="line">    <span class="comment">// 如果你像上面那样写，你会得到。</span></span><br><span class="line">    <span class="comment">// 错误：协议&#x27;BaseReq&#x27;只能作为通用约束使用，因为它有Self或相关的类型要求。</span></span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">launch</span>&lt;U: BaseReq&gt;<span class="params">(req: U)</span></span> -&gt; <span class="type">U</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> s = <span class="string">&quot;network return string&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(req)</span><br><span class="line"></span><br><span class="line">        req.obj(s)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> req</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不能对非通用类型进行特殊化</span></span><br><span class="line"><span class="comment">// enum Result &#123;</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Result</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> suc(<span class="type">T</span>)</span><br><span class="line">    <span class="keyword">case</span> err(<span class="type">Error</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> areq = <span class="type">AReq</span> &#123; (r) <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">switch</span> r &#123;</span><br><span class="line">    <span class="keyword">case</span> .suc(<span class="keyword">let</span> s):</span><br><span class="line">        <span class="comment">//S is AObj,  we can s.a</span></span><br><span class="line">        s.a</span><br><span class="line">    <span class="keyword">case</span> .err(<span class="keyword">let</span> r):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">areq.launch()</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="type">Launch</span>.launch(req: areq)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> breq = <span class="type">BReq</span> &#123; (r) <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">switch</span> r &#123;</span><br><span class="line">    <span class="keyword">case</span> .suc(<span class="keyword">let</span> s):</span><br><span class="line">        <span class="comment">//S is BObj,  we can s.b</span></span><br><span class="line">        s.b</span><br><span class="line">    <span class="keyword">case</span> .err(<span class="keyword">let</span> r):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">breq.launch()</span><br><span class="line"><span class="type">Launch</span>.launch(req: breq)</span><br><span class="line">s</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Swift</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-0-0</title>
    <url>/ja/japan-0-0/</url>
    <content><![CDATA[<div id="googleMap1846" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap1846'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 11,
       'center': new window.google.maps.LatLng( 35.6388171 , 139.6897329 ),
     },
     target = document.getElementById('googleMap1846'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.665289 , 139.7241853 ),
        'map': map,
        'title': 'The National Art Center',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'The National Art Center'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.5471701 , 139.7683526 ),
        'map': map,
        'title': 'Haneda Airport',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Haneda Airport'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.695398 , 139.7018829 ),
        'map': map,
        'title': 'Hotel Gracery Shinjuku',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Hotel Gracery Shinjuku'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<h2 id="3年間の返品ビザ"><a href="#3年間の返品ビザ" class="headerlink" title="3年間の返品ビザ"></a>3年間の返品ビザ</h2><p>米国のビザとは異なり、自分で予約することはできず、指定された旅行代理店を通じてのみ処理できます </p>
<ul>
<li>税引き後25W + </li>
<li>タオバオはパスポートや税金の請求書などを郵送します </li>
</ul>
<p>全体のプロセスはすべて郵送です、私はアイテムを失うだろうと思いました<br>2週間でスムーズに進むとは思っていませんでした </p>
<h2 id="ビジネスクラス"><a href="#ビジネスクラス" class="headerlink" title="ビジネスクラス"></a>ビジネスクラス</h2><p>ほとんどのアジアの航空会社のビジネスクラスとファーストクラスは同じです </p>
<p>たとえば、このボーイング787モデルには4つの座席しかありません💺<br>両側に窓があり、隣人はなく、中央にカップル席があります<br>1ビジネスクラスの座席が占める面積== 6エコノミークラス </p>
<p>ANAの活動の料金は2倍しかないので、かなりお買い得です。 </p>
<p>機内でホットタオル、フォローアップシャンパン、さまざまな飲み物を提供する<br>ランチは日本料理または西洋料理のために事前に予約することができます<br>食器は重い磁器のプレートと金属のナイフとフォークに置き換えられました🍴 </p>
<p>一番のメリットは、小さなボタンを押すだけでシートを180度平らにできることです。<br>WC🚾二度と<br>触れた子供たちも礼儀正しく、ずっと泣きませんでした </p>
<p>エンジンの轟音もはるかに小さく、デフォルトのヘッドセット🎧はBose QC25です </p>
<p>帝国の首都が東京に直接飛ぶのに3時間しかかからないので </p>
<p>基本的なプロセスは<br>飛行機に乗って食事と飲み物を楽しむ<br>あなたの名前を見てください<br>横になって寝る<br>ほとんどそこに </p>
<p>全体的な経験は素晴らしいです </p>
<p>しかし、ビジネスクラスの後ろは空です<br>心配したら次回は日本に行きます<br>全日本航空、閉鎖されますか？ </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-04.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-06.jpg" alt=""></div></div></div>

<h2 id="羽田空港"><a href="#羽田空港" class="headerlink" title="羽田空港"></a>羽田空港</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-11.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-19.jpg" alt=""></div></div></div>

<h2 id="展望台"><a href="#展望台" class="headerlink" title="展望台"></a>展望台</h2><p>羽田空港の屋上には巨大な展望台があります<br>航空機の離着陸を見ることができ、IMAXよりもリアルなエンジンの轟音を感じることができます </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-14.jpg" alt=""></div></div></div>

<h2 id="ホテルグレイスリー新宿"><a href="#ホテルグレイスリー新宿" class="headerlink" title="ホテルグレイスリー新宿"></a>ホテルグレイスリー新宿</h2><p>便利な新十九駅に住んでいます<br>意外とゴジラホテルでした<br>その上に大きな頭があります<br>私は通常中国で海賊行為を見ます<br>私は本物の物を聞くことに慣れていません </p>
<p>その隣は歌舞伎町<br>一蘭ラーメンが美味しい<br>夕方11時に夕食のために階下に長い列がありました </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-25.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-26.jpg" alt=""></div></div></div>

<h2 id="かに道楽-amp-鳗鱼饭"><a href="#かに道楽-amp-鳗鱼饭" class="headerlink" title="かに道楽 &amp; 鳗鱼饭"></a>かに道楽 &amp; 鳗鱼饭</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-34.jpg" alt=""></div></div></div>

<p>日本はとてもきれいです<br>いいえ、きれいだと言わなければなりません<br>このアパートはを彷彿とさせる<br>小林さんのドラゴンメイド </p>
<p>ここに住んでとても幸せです<br>家賃はいくらかわかりません </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-37.jpg" alt=""></div></div></div>

<h2 id="国立新博物館"><a href="#国立新博物館" class="headerlink" title="国立新博物館"></a>国立新博物館</h2><p>初めてアートギャラリーを訪れる🎨<br>全く理解できない<br>しかし、これは博物館を訪れる目的​​ではありませんか？ </p>
<p>出てきてポスターを見た<br>広告なのかチャリティーイベントなのかわかりません </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-39.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-40.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-43.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-44.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-45.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-48.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-49.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-50.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-51.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-54.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-55.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-56.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-57.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-62.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-0-1</title>
    <url>/ja/japan-0-1/</url>
    <content><![CDATA[<div id="googleMap8649" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap8649'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 12.5,
       'center': new window.google.maps.LatLng( 35.6888043 , 139.7464185 ),
     },
     target = document.getElementById('googleMap8649'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.6599167 , 139.7287036 ),
        'map': map,
        'title': '六本木ヒルズ展望台',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: '六本木ヒルズ展望台'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.6714459 , 139.6955955 ),
        'map': map,
        'title': '代々木公園',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: '代々木公園'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.7099661 , 139.8098755 ),
        'map': map,
        'title': 'Tokyo Skytree',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Tokyo Skytree'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<h2 id="六本木ヒルズ展望台-東京シティビュー"><a href="#六本木ヒルズ展望台-東京シティビュー" class="headerlink" title="六本木ヒルズ展望台 東京シティビュー"></a>六本木ヒルズ展望台 東京シティビュー</h2><p>東京を一望できます </p>
<p>この作品は相互接続された建物のグループです<br>オープンサンドボックスゲームのプレイとは異なります<br>こちらはモデルから入店できます </p>
<p>今回は、幼い頃に父が言ったことにようやく気づきました<br>オリエンタルパールタワーに立って見下ろす<br>車はマッチ箱のようなもので、男は蟻のようなものです </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-01.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-04.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-07.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-08.jpg" alt=""></div></div></div>

<p>6月だけですが、もう暑いです<br>水を噴霧して熱を放散させることができる人工の噴水を見ました </p>
<p>建物の内部は常にデザイン感があります<br>手をつないでいるカップルにも会いました </p>
<p>それから本物の和牛焼き肉を食べに行きました<br>初めて口の中でとろけるのを体験しました </p>
<p>最も驚くべきことは価格です<br>景色を見るためにここで一杯のコーヒーを飲むことをあえてしませんでした<br>習慣的な思考はそれが床と同じくらい高価になるだろうと思った<br>実際、階下よりもほんの数ドル高いだけです </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-11.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-14.jpg" alt=""></div></div></div>

<h2 id="代々木公園"><a href="#代々木公園" class="headerlink" title="代々木公園"></a>代々木公園</h2><blockquote>
<p>代々木公園はこの場所にあります。1910年12月19日、徳川義敏大尉は日本で初めて動力飛行機の飛行に成功しました。 この地域は後にパレードグラウンドになりました。 1945年9月から、このサイトには、連合国による日本占領中のアメリカ人将校のための「ワシントンハイツ」と呼ばれる軍事兵舎がありました。<br>2014年、東京は100年で最悪のデング発生を経験し、70年ぶりに記録された症例であり、200近くの症例が確認されました。 </p>
</blockquote>
<p>意外にも、デング熱が発生しました </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-19.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-20.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-21.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-22.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-25.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-27.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-28.jpg" alt=""></div></div></div>

<p>1.5Lの動脈を持って出かけていました<br>日本のいたるところに自動販売機があるので、水を持参する必要はありません<br>唯一恥ずかしいのは、ゴミ箱がないことです。飲んだ後は、ボトルしか持てません。次のリサイクルビン付きの自動販売機が楽しみです。 </p>
<p>WCはLGBTも提供しています🏳️‍🌈 </p>
<p>カミナリモンを通り過ぎると、横に小さな電車の展示ポスターがあります </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-32.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-33.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-34.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-35.jpg" alt=""></div></div></div>

<h2 id="すみだ水族館"><a href="#すみだ水族館" class="headerlink" title="すみだ水族館"></a>すみだ水族館</h2><p>スカイツリーの下には水族館があります </p>
<p>ネモを見つけることからのネモ？<br>エルミットクラブ、ロブスター、イカ<br>海底パワー… </p>
<p>🐠🦞🦑 </p>
<p>水族館の床を掃除する従業員 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-57.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-37.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-39.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-41.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-43.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-44.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-47.jpg" alt=""></div></div></div>

<p>もちろんお土産として出てきました<br>とてもかわいいあらゆる種類の毛皮のような海中動物<br>枕として買い戻すのは仕方がない </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-48.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-49.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-50.jpg" alt=""></div></div></div>

<h2 id="進撃の巨人"><a href="#進撃の巨人" class="headerlink" title="進撃の巨人"></a>進撃の巨人</h2><p>アタックオンタイタンのテーマにちょうど間に合う<br>見たことがないのは残念です<br>この2人が誰なのかわかりません<br>波はありません </p>
<p>このアニメを追加した後<br>幸いなことに、私はキャプテンとアレンを撫でました。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-53.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-36.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-52.jpg" alt=""></div></div></div>

<h2 id="東京スカイツリー"><a href="#東京スカイツリー" class="headerlink" title="東京スカイツリー"></a>東京スカイツリー</h2><p>この塔は高河の景勝地だけでなく、ラジオ局のためにも建てられていることがわかりました。 </p>
<blockquote>
<p>タワーは関東地域の主要なテレビおよび放送局です。古い東京タワーは高層ビルに囲まれているため、完全なデジタル地上テレビ放送を提供することはできません。 スカイツリービルは2012年2月29日完成しました<br>東京スカイツリーも日本の歴史的な5階建ての塔に似ています。 [11]塔の底は三脚に似た構造で、高さ約350 m(1,150フィート)以上から始まり、塔の構造は円筒形で、川と街のパノラマの景色を眺めることができます。 [12] 350 m(1,150フィート)で2,000人を収容できる天文台と、450 m(1,480フィート)で900人を収容できる天文台があります。 [13]上部展望台には、ガラスで覆われたらせん状のスカイウォークがあり、訪問者は最後の5メートルで上部プラットフォームの最高点に登ることができます。 ガラスの床の一部は、訪問者が下の通りを直接見ることを可能にします。<br>タワーは耐震性があり、強化コンクリート製の中央シャフトが含まれています。 メインの内部ピラーは、地上125メートル(410フィート)の最初の外部タワー構造に接続されています。 そこから最大375メートル(1,230フィート)まで、柱はショックアブソーバーでタワーに固定されています。ショックアブソーバーは地震時にクッションとして機能します。 追加の弾性は、「追加の品質制御メカニズム」(または調整されたマスダンパー)によって得られます。これは、地震が発生した場合に建物の構造と同期せず、重心をタワーにできるだけ近づけるダンピングシステムです。 の下部。 [15]設計者によると、ダンパーは地震のエネルギーの50％を吸収することができます </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-58.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-60.jpg" alt=""></div></div></div>

<p>高さが怖い<br>幻想なのかしら<br>塔が少し揺れるのを感じる </p>
<p>恐れることはありません<br>実際に震えている<br>上がった後、体は中を歩き続けます<br>勇気を出して外のガラスを見てください </p>
<p>最高点のガラスの床は大丈夫です、少し非現実的です<br>暫定的に足を踏み入れた🦶 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-51.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-55.jpg" alt=""></div></div></div>

<h2 id="戻る"><a href="#戻る" class="headerlink" title="戻る"></a>戻る</h2><p>帰国後、ホテルを利用してあらゆるゴミを捨てました。<br>ゴミは本当に痛いことはありません😂 </p>
<p>窓の外を見た<br>良い時間 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-63.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-64.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-66.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-65.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-67.jpg" alt=""></div></div></div>

<p>その後、タクシーで羽田空港まで🚖<br>10w円💴それだけです </p>
<p>ここの高齢者がタクシーを運転していると聞きました🚕<br>おじいちゃんに荷物を運ばせるために心を支える方法を目撃してください🧳 </p>
<p>チェックインしてまだ早いので、ANAファーストクラスラウンジに来ました<br>果物、牛乳、飲み物、パン、ケーキの無制限の供給<br>🍉🥛🥤🍞🍰<br>私は本当にシャワーを逃した<br>🛀😂 </p>
<p>飛行機で富士山を見ました🗻<br>ラウンジがいっぱいだから<br>私は平らに眠らなければなりませんでした💤 </p>
<p>その後、この最初の短い🇯🇵日本旅行を終了しました </p>
<p>私は日本の清潔さと秩序が本当に好きです<br>私が買った靴は私が去るまで私がちょうど買ったもののようです </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-68.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-69.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-70.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-71.jpg" alt=""></div></div></div>

<p>3年間の往復ビザ<br>次回また来ます </p>
<p>✌️✌️✌️ </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇮🇹-0-0</title>
    <url>/ja/italy-0-0/</url>
    <content><![CDATA[<div id="googleMap6701" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap6701'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 10,
       'center': new window.google.maps.LatLng( 40.6973724 , 14.1294367 ),
     },
     target = document.getElementById('googleMap6701'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 40.853053 , 14.1791543 ),
        'map': map,
        'title': 'Naples',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Naples'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 40.8223812 , 14.4113963 ),
        'map': map,
        'title': 'Mount Vesuvius',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Mount Vesuvius'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 40.7466183 , 14.4761726 ),
        'map': map,
        'title': 'Pompei',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Pompei'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 40.6237862 , 14.3576818 ),
        'map': map,
        'title': 'Sorrento',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'Sorrento'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
     
     
     var opts4 = {
        'position': new window.google.maps.LatLng( 40.5489025 , 14.1960389 ),
        'map': map,
        'title': 'Capri',
        'zIndex' : 4,
        'icon': ''
      };

     var infowindow4 = new window.google.maps.InfoWindow({
       content: 'Capri'
     });

     var marker4 = new window.google.maps.Marker(opts4);

     marker4.addListener('click', function(){
       infowindow4.open(map, marker4)
     })
     
     
     var opts5 = {
        'position': new window.google.maps.LatLng( 0.6295773 , 14.4769233 ),
        'map': map,
        'title': 'Positano',
        'zIndex' : 5,
        'icon': ''
      };

     var infowindow5 = new window.google.maps.InfoWindow({
       content: 'Positano'
     });

     var marker5 = new window.google.maps.Marker(opts5);

     marker5.addListener('click', function(){
       infowindow5.open(map, marker5)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<p>日本から🇯🇵は国民の日の休日に追いつくために3ヶ月以内に戻ってきました </p>
<p>米国の帝国ビザと3年間の日本の帰国ビザのため<br>準備された材料の山は引き続き使用されます<br>だから私はシェンゲンビザについて心配しませんでした </p>
<h2 id="ローマ"><a href="#ローマ" class="headerlink" title="ローマ"></a>ローマ</h2><p>インペリアルキャピタルからアリタリア、ローマへの飛行には11時間かかりました🇷🇴 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-04.jpg" alt=""></div></div></div>

<h2 id="ソレント"><a href="#ソレント" class="headerlink" title="ソレント"></a>ソレント</h2><p>イタリア北部の一般的な初飛行とは異なります<br>ローマ-フィレンツェ-ミラノ-ヴェネツィアルート </p>
<p>友達逆操作<br>ソレントまで南下する小さな電車に乗る </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-14.jpg" alt=""></div></div></div>

<p>遠くにある小さな山の袋はベスビウスでなければなりません。 </p>
<p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex" xmlns="http://www.w3.org/2000/svg" width="145.928ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 64500 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="merror" data-mjx-error="Extra close brace or missing open brace"><rect data-background="true" width="64500" height="950" y="-200"></rect><g data-mml-node="mtext"><text data-variant="-explicitFont" transform="matrix(1 0 0 -1 0 0)" font-size="884px"> z = \ frac {7} {\ sigma \ sqrt {2 \ pi}} ^ {-\ frac {(x &lt;2} + y &lt;2})&lt;2}} {2 \ sigma &lt;2} }}、\ sigma = 0.99 </text></g></g></g></g></svg></mjx-container> </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-100.jpg" alt=""></div></div></div>

<h2 id="ポンペイ"><a href="#ポンペイ" class="headerlink" title="ポンペイ"></a>ポンペイ</h2><blockquote>
<p>発掘された多数の都市が灰の下に保存されており、ローマの生活の独特の小宇宙を提供し、埋葬された瞬間に凍結し、多くの証拠にもかかわらず、住民の日常生活について非常に詳細な洞察を提供します 初期の発掘で失われました。 これは、多くの絶妙な公共の建物と豪華な個人の住居がある裕福な都市です。その豪華な装飾、家具、アートワークは、初期の掘削機の主な魅力です。 木製の物体や人体などの有機遺物が灰に埋もれ、腐敗後にボイドが残ります。考古学者は、これらのボイドが、人生の最後の瞬間にユニークでしばしば恐ろしい人物のプラスターを作るための型として使用できることを発見しました モデル。 壁や部屋にはたくさんの落書きが刻まれており、多くの例が示されています。これは、当時基本的に失われていた口語的なラテン語が、古典的な作家の正式な言語とは対照的であることを示しています。<br>ポンペイはユネスコの世界遺産であり、イタリアで最も人気のある観光名所の1つであり、毎年約250万人の観光客が訪れます。 </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-17.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-19.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-24.jpg" alt=""></div></div></div>

<h2 id="ベスビウス噴火"><a href="#ベスビウス噴火" class="headerlink" title="ベスビウス噴火"></a>ベスビウス噴火</h2><blockquote>
<p>午後1時頃、ベスビウス山が激しく噴火し、高地の火山柱が噴き出し、灰とパミスが落ち始め、全域を覆いました。 この期間中に、いくつかの救助と脱出の事件が発生しました。 夜か翌日の早朝、火山の近くに火のような岩の流れが現れ始めました。 山に見える光は火と解釈された。 ミセナムの人々は彼らの命のために逃げました。 火山の砂利の流れは動きが速く、密度が高く、温度が高く、経路上のすべての構造を完全にまたは部分的に破壊し、残りの人口を燃やしたり窒息させたり、海岸線を含む風景を変えたりします。 同時に、ナポリ湾でわずかな地震とわずかな津波がありました。 翌日の夕方までに、火山の噴火は終わり、霧だけが大気中に残り、太陽はかすかに輝いていました。<br>若いプリニーは、火山の噴火についての記録を書きました。<br>広い炎がベスビウスの多くの部分を照らします;それらの光と明るさは夜よりも鮮やかです…世界の他の地域は今日ですが、そこの暗闇はどの夜よりも暗くて厚いです。 </p>
</blockquote>
<h3 id="ポンペイ劇場"><a href="#ポンペイ劇場" class="headerlink" title="ポンペイ劇場"></a>ポンペイ劇場</h3><blockquote>
<p>ポンペイの劇場地区は、街の南西部にあります。 このエリアを構成する3つの主要な建物があります：グランドシアター、キャロルホール(小さな劇場)、そしてSiheyuan。 市内のエンターテイメントおよび会議センターとして機能します。<br>グランドシアターは、紀元前2世紀に自然の丘の上に建てられました。 劇場は約5,000人の観客を収容でき、ローマで最初の恒久的な石造りの劇場の1つです。<br>劇場は、コンサート、オペラ、演劇を開催するために現代で使用されてきました。 2008年には、修復作業が開始され、さらなる劇場や音楽のパフォーマンスが可能になりました。 再開後、2014年にはプッチーニの「ボヘミア」とビゼーの「カルメン」が上演されました。 </p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-27.jpg" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-29.jpg" alt=""></div></div></div>

<p>暗い雲に押された火山まで🌋<br>マグマがここをカバーできるとは想像しがたいです </p>
<h3 id="ポンペイアリーナ"><a href="#ポンペイアリーナ" class="headerlink" title="ポンペイアリーナ"></a>ポンペイアリーナ</h3><blockquote>
<p>現在の円形劇場は紀元前70年頃に建てられました。これは、最も初期に知られているローマの円形劇場です。石で造られ、かつては木で造られていました。<br>円形劇場は、歴史的建造物や考古学的研究対象であるだけでなく、現代のコンサートやその他の公開イベントにも使用されています。 </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-28.jpg" alt=""></div></div></div>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-32.jpg" alt=""></p>
<h2 id="ベスビウス"><a href="#ベスビウス" class="headerlink" title="ベスビウス"></a>ベスビウス</h2><blockquote>
<p>西暦79年のベスビウス山の噴火により、ローマの都市ポンペイ、エルクラネウム、オプトロンテス、スタビア、およびその他のいくつかの集落が破壊され、最終的な熱放出は広島と長崎でした。 原子爆弾の爆発によって放出される熱エネルギーの10万倍。<br>それ以来、ベスビウス山は何度も噴火しており、過去100年間に噴火したのはヨーロッパ大陸で唯一の火山です。 今日、ベスビウス山は、噴火の影響を受ける可能性のある場所に300万人が住んでおり、そのうち60万人が危険地帯にあり、世界で最も人口が多いため、世界で最も危険な火山の1つと見なされています。 密集した火山地帯であり、プリニアのように暴力的で爆発的な噴火を起こしやすい。 </p>
</blockquote>
<blockquote>
<p>ベスビウス山は、アフリカのプレートとユーラシアのプレートの2つのプレートの衝突によって形成されました。 前者は後者の下、地面の奥深くに潜り込んだ。 アフリカの海洋プレートの水で飽和した堆積物が地球内部のより暖かい深さに押し出されると、水が沸騰し、上部マントルの融点が下がり、岩が部分的に溶けるようになりました。 マグマの密度は周囲の固い岩よりも小さいため、押し上げられます。 地表に弱点が発見され、マグマが突破して火山を形成した。 </p>
</blockquote>
<blockquote>
<p>1995年6月5日、ベスビウス周辺は正式に国立公園に指定されました。 ベスビウスの頂上は訪問者に開放されており、火山の周りには小さな道路網があり、週末には公園当局によって維持されています。 山の頂上(垂直方向に測定)から200メートル(660フィート)以内の道路で入ることができますが、それ以降は徒歩でしか入ることができません。 道路から火口までの火山の周りにはらせん状の通路があります。 </p>
</blockquote>
<p>小さな山袋だと思った<br>実はかなり大きく、海抜約1km </p>
<p>上記のように<br>バスは上り坂を曲がります、斜面の最後のセクションは上がる必要があります<br>タイトな靴を着用するのが最善です。そうでない場合は、すべて火山灰です。 </p>
<p>クレーターの中にマグマはありませんが、いくつかの場所で喫煙しています </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-38.jpg" alt=""></div></div><div class="group-picture-row"></div><div class="group-picture-row"></div></div>

<p>いくつかの雲は、何かがそれらを保持しているかのようにきちんと整頓されています<br>時々あなたを襲う人もいます<br>「到着」で山に雲が浮かぶシーンを彷彿とさせる<br>今回は本当に雲の中に立っていました </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-40.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-41.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-48.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-49.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-50.jpg" alt=""></p>
<h2 id="ポジターノ"><a href="#ポジターノ" class="headerlink" title="ポジターノ"></a>ポジターノ</h2><blockquote>
<p>ポジターノは夢の国であり、あなたがそこにいるときはあまりリアルではありませんが、あなたが去った後、彼女は本物そっくりになります。 </p>
</blockquote>
<p>山に建てられたこの種の小さな家は非常に独特で、パーカーに最適な場所です<br>アサシンクリードをプレイするとき、エツィオはイタリアの壁を越えました </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-53.jpg" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-55.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-57.jpg" alt=""></div></div></div>

<p>海に行くためにビーチに小さなボートがあります </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-62.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-63.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-68.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-69.jpg" alt=""></div></div></div>

<p>戻ってきたのは夜だった<br>映画のワンシーンのように明るく照らされる </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-65.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-66.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-67.jpg" alt=""></p>
<blockquote>
<p>ティンダル効果は、コロイドまたは非常に細かい懸濁液中の粒子による光の散乱です。 ティンダル散乱とも呼ばれ、レイリー散乱(アルドノアゼロ)に似ています。散乱光の強度は波長の4乗に反比例するため、青色光は赤色光よりも強く散乱します。 </p>
</blockquote>
<p>リングの主のように </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-70.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-71.jpg" alt=""></div></div></div>

<h2 id="カプリ"><a href="#カプリ" class="headerlink" title="カプリ"></a>カプリ</h2><blockquote>
<p>カプリは作家や芸術家にとっての楽園であるだけでなく、外国人ゲイの男性にとって比較的安全な場所でもあり、よりオープンな生活を送ることができます。少数の人々がそこに住むことに惹かれ、ある程度は上記と同様です。 到達した創造性のタイプは重複しています。 </p>
</blockquote>
<p>ボートは約1時間回ります<br>友達が飛行機に早く乗るために帰らなければならないのは残念です<br>だから私は1/2くらいだけ行って戻った </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-74.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-76.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-77.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-86.jpg" alt=""></div></div></div>

<h2 id="青い穴"><a href="#青い穴" class="headerlink" title="青い穴"></a>青い穴</h2><blockquote>
<p>光が水を通って洞窟に入ると、赤い反射がフィルターで除去され、青い光だけが洞窟に入ります。 洞窟の水に置かれた物は、銀色の外観で有名です。 これは、水中に置かれたときにオブジェクトの外側を覆う小さな気泡によって引き起こされます。 これらの気泡により、光は周囲の水とは異なる方法で屈折し、銀色の効果を生み出します。 </p>
</blockquote>
<blockquote>
<p>その理由の一つは、水の穴からの光がまぶしい効果を持っており、穴の中の水が空気中の光よりも豊富であるということです。 訪問者は手を水に入れると、この光の下で水が奇妙に「輝く」のを見ることができます。 </p>
</blockquote>
<p>ボートの人々は私たちに島で最も青い青い穴を紹介してくれました<br>信じて<br>夕方、私はスペインの海の向こうの人々の話を聞くために戻ってきました🇪🇸観光の財務ディレクターも彼が最も青い青い穴を見たと言いました </p>
<p>彼女はうそつきにだまされたに違いないと彼女に言いなさい<br>結局のところ、青い穴には </p>
<ul>
<li>青の洞窟(ビシェボ)、クロアチアのビシェボ島の洞窟 </li>
<li>イタリア、カプリ島の洞窟、青の洞窟(カプリ) </li>
<li>青の洞窟(Kastelorizo​​)、ギリシャのKastelorizo​​島の洞窟 </li>
<li>青の洞窟(マルタ)、マルタの洞窟 </li>
<li>ブルーホール、ブルックリン橋のマンハッタンの終わりのエリア </li>
<li>イタリア、アマルフィ海岸の洞窟、グロッタデッロスメラルド </li>
</ul>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-88.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-89.jpg" alt=""></div></div></div>

<h2 id="メディテレニアンブルー"><a href="#メディテレニアンブルー" class="headerlink" title="メディテレニアンブルー"></a>メディテレニアンブルー</h2><p>カリフォルニアで見られるパシフィックブルーとは異なります<br>この地中海の青は濃い染料のようなものです </p>
<blockquote>
<p>地中海はほぼ内陸にあり、地中海の状態に影響を与えます。たとえば、大西洋との接続が狭いため、潮の干満は非常に限られています。 地中海の特徴は、その紺色が一目でわかることです。 </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-83.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-79.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-78.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-85.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-84.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-93.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Italy</tag>
        <tag>🇮🇹</tag>
      </tags>
  </entry>
  <entry>
    <title>スタンフォード大学による機械学習</title>
    <url>/ja/Machine-Learning-by-Stanford-University/</url>
    <content><![CDATA[<p>これは、コースで機械学習を学ぼうとした私のプロセスの記録です。 </p>
<p>一年前に人工知能のことを聞いたのですが、新しいものを受け入れるのが難しい老人として、あまり勉強していません。<br>しかし、私はこの世代のAI🤖️革命で職を失うようです。 ですから、一生懸命勉強します。<br>しかし、私は年を取りすぎて学ぶことができず、いつかそれを習得することを保証する自信もありません。 </p>
<p>😂😂😂 </p>
<a id="more"></a>

<hr>
<h2 id="1つの変数による1つの線形回帰"><a href="#1つの変数による1つの線形回帰" class="headerlink" title="1つの変数による1つの線形回帰"></a>1つの変数による1つの線形回帰</h2><h2 id="2複数の変数を使用した線形回帰"><a href="#2複数の変数を使用した線形回帰" class="headerlink" title="2複数の変数を使用した線形回帰"></a>2複数の変数を使用した線形回帰</h2><h3 id="ex1"><a href="#ex1" class="headerlink" title="ex1"></a>ex1</h3><p>コーディング部分は私のお気に入りです、私はコーディングが好きです😄 </p>
<h4 id="ComputeCost"><a href="#ComputeCost" class="headerlink" title="ComputeCost"></a>ComputeCost</h4><p>ほら、ここのコスト関数<br>(OMG：式コードは <code>J(\ theta)= \ cfrac {1} {2m} \ sum \ limits_ {i = 1} ^ {m}(h_ \ theta(x ^ {(i)})-y ^ {(i)})^ 2</code>マークダウン)🤯 </p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="30.615ex" height="6.484ex" role="img" focusable="false" viewBox="0 -1620 13532 2865.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(3213.6, 0)"><g data-mml-node="mrow" transform="translate(659, 760)"><g data-mml-node="mpadded"><g data-mml-node="mrow"></g></g><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mrow" transform="translate(220, -820)"><g data-mml-node="mpadded"><g data-mml-node="mrow"></g></g><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g><rect width="1578" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(5198.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6642.2, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7031.2, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(7988.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8377.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9793.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10405.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(11405.4, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(12739.5, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="38.662ex" height="2.583ex" role="img" focusable="false" viewBox="0 -891.7 17088.6 1141.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(957.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1346.6, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1918.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2585.4, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(3641.2, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mi" transform="translate(469, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mi" transform="translate(4658, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(5507.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(6563.5, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mn" transform="translate(469, -150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="msub" transform="translate(7436.1, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(572, -150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(8633.9, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(9634.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mn" transform="translate(469, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msub" transform="translate(10506.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(572, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(11704.4, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(12704.6, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(14098.9, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(15099.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mi" transform="translate(469, -150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msub" transform="translate(16042.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(572, -150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></p>
<p>式が示すように、「シータ」* X`ではなく、「オクターブ」による実際の計算では「X *シータ」であることがわかりました。 </p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">J = sum(((X * theta) - y).^<span class="number">2</span>)/<span class="number">2</span>/m</span><br></pre></td></tr></table></figure>

<h4 id="最急降下法"><a href="#最急降下法" class="headerlink" title="最急降下法"></a>最急降下法</h4><p>同様に、ここでの勾配降下 </p>
<p>収束するまで繰り返します：{ </p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="36.031ex" height="6.484ex" role="img" focusable="false" viewBox="0 -1620 15925.6 2865.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mi" transform="translate(469, -150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mo" transform="translate(1088.1, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" transform="translate(278, 0)"></path></g><g data-mml-node="msub" transform="translate(2421.9, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mi" transform="translate(469, -150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mo" transform="translate(3454.4, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4454.7, 0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mfrac" transform="translate(5094.7, 0)"><g data-mml-node="mrow" transform="translate(409, 760)"><g data-mml-node="mpadded"><g data-mml-node="mrow"></g></g><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mrow" transform="translate(220, -820)"><g data-mml-node="mpadded"><g data-mml-node="mrow"></g></g><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g><rect width="1078" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(6579.3, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8023.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8412.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(9370, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9759, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11175, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11786.3, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(12786.5, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14120.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(14509.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(572, -293.8) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="16.16ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7142.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(939, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1424, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mtext" transform="translate(1875, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(2125, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2814.8, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" transform="translate(278, 0)"></path></g><g data-mml-node="mn" transform="translate(4148.6, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(4815.2, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mi" transform="translate(6153.9, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(6753.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p>} </p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">theta = theta - alpha/m*(X' * ((X * theta) - y))</span><br></pre></td></tr></table></figure>

<p>なぜ <code>X '*((X * theta)-y))</code>を使うのか理解するのに数時間かかりました<br>すべての変数X、theta、およびyはそれぞれベクトルであるため、式に示すように、X ‘\ *(…)は <code>sum()</code>の部分に等しくなります。 </p>
<p>テストに合格しましたが、まだわかりません😵 </p>
<h2 id="3ロジスティック回帰"><a href="#3ロジスティック回帰" class="headerlink" title="3ロジスティック回帰"></a>3ロジスティック回帰</h2><p>つづく… </p>
<p>！<a href="https://i.imgur.com/v4JpxOp.png">1つの変数による1つの線形回帰</a><br>！<a href="https://i.imgur.com/G2Yn9nA.png">複数の変数を使用した2線形回帰</a> </p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>🇮🇹-0-1</title>
    <url>/ja/italy-0-1/</url>
    <content><![CDATA[<div id="googleMap734" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap734'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 6.5,
       'center': new window.google.maps.LatLng( 39.286304 , 13.3756614 ),
     },
     target = document.getElementById('googleMap734'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 40.8419184 , 14.2594855 ),
        'map': map,
        'title': 'Naples',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Naples'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 38.1405228 , 13.2872492 ),
        'map': map,
        'title': 'Palermo',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Palermo'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 37.8548943 , 15.2784163 ),
        'map': map,
        'title': 'Taormina',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Taormina'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<h2 id="ナポリ"><a href="#ナポリ" class="headerlink" title="ナポリ"></a>ナポリ</h2><p>夕方、ナポリを離れ、ボートでパレルモに行きます </p>
<p>吊り下げられた救命浮輪と救命ボートは、人々にタイタニックを思い出させるしかない </p>
<p>実際、この船はタイタニック号よりはるかに大きいです<br>車の隣の駐車場全体を処理できます<br>穏やかな地中海でも、氷山はありません。船が沈む心配はありません。<br>この巨大なクルーズ船はGoogleマップでも見ることができます<br>キャビンは小さいですが、独立したトイレがあり、暑くて雨が降ることもあります </p>
<p>揺れるキャビンとサイレンはとても催眠術です </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-03.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-02.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-04.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-05.jpg" alt=""></div></div></div>

<p>翌日起きて日の出を見るのに苦労しています🌄 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-08.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-16.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-14.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-17.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-21.jpg" alt=""></div></div></div>

<p>まだありませんでした<br>はさみの時間がない<br>波は縮まない<br>カモメが後ろ向きに飛んでいる </p>
<p>🌊🐦 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-18.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-24.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-26.jpg" alt=""></div></div></div>

<h2 id="シシリー"><a href="#シシリー" class="headerlink" title="シシリー"></a>シシリー</h2><h3 id="パレルモ"><a href="#パレルモ" class="headerlink" title="パレルモ"></a>パレルモ</h3><p>友達が海沿いの海の見える部屋を借りた<br>約3階、エコーがあります<br>装飾はとてもシチリアです </p>
<p>アルカンタストリーからそう遠くない<br>スコアは非常に低く、海辺の匂いは非常に強いですが<br>でもこのロブスタースパゲッティは本当に美味しいです<br>私はその後の旅でこの習慣に二度と遭遇しませんでした </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-27.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-28.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-29.jpg" alt=""></div></div></div>

<ul>
<li>B＆Bシアターシアター </li>
<li>フォーソングススクエア(パレルモ) </li>
<li>パレルモ大聖堂 </li>
</ul>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-32.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-34.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-36.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-37.jpg" alt=""></div></div></div>

<p>緋色の付箋のように<br>住居の隣のいくつかの通り、あなたはどこでもたわごとを踏むように注意する必要があります<br>プレイ体験に大きな影響を与えた </p>
<p>もちろん、不必要なトラブルを避けるために、付箋は別の友人によって密かに引き剥がされてから去りました </p>
<p>しかし、私はそれを我慢できません。シシリーの首都パレルモはたわごとの町になりました。 </p>
<h3 id="タオルミナ"><a href="#タオルミナ" class="headerlink" title="タオルミナ"></a>タオルミナ</h3><p>たわごとの後にうんざり<br>要約分析はAirbnbアドレスによるものでなければなりません<br>次のすべてのAirbnbから退会<br>急いで、ユーロスターモンテデューロとローママリオットパークを予約してください </p>
<p>Taorminaまで待つ<br>快適に暮らせるので一瞬で幸せになります<br>夜はプールサイドでUNOをプレイ </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-39.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-40.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-41.jpg" alt=""></div></div></div>

<h3 id="アイスクリーム"><a href="#アイスクリーム" class="headerlink" title="アイスクリーム"></a>アイスクリーム</h3><p>イタリアのアイスクリームは本当に特別です<br>ずっとさまよって、ずっと食べて、出くわしたら買う<br>二度と食べられないのが怖い </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-47.jpg" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-43.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-44.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-45.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-48.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-51.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-53.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-54.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-55.jpg" alt=""></div></div></div>

<h3 id="イオニアパール"><a href="#イオニアパール" class="headerlink" title="イオニアパール"></a>イオニアパール</h3><p>狭い道があり、海は常に洗っています、あなたは島に歩くことができます<br>他の人を前後に見ることは、水の上を歩くようなものです<br>自分で試して着実に沈みました<br>海が洗い流されたとき、滑りの兆候がありました </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-63.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-64.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-65.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-66.jpg" alt=""></div></div></div>

<h2 id="最高裁判所"><a href="#最高裁判所" class="headerlink" title="最高裁判所"></a>最高裁判所</h2><p>ローマに戻る<br>最高裁判所を通過<br>それは本当に歴史的な特徴を持っています </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-75.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-74.jpg" alt=""></p>
<p>マリオットに到着したところ、施設が少し貧弱であることがわかりました<br>無料のWi-Fiはなく、アクティベーションには追加のウールが必要です<br>モルモン書と新約聖書は引き出しの中にあります </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-69.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-76.jpg" alt=""></div></div><div class="group-picture-row"></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Italy</tag>
        <tag>🇮🇹</tag>
      </tags>
  </entry>
  <entry>
    <title>ロジスティック回帰</title>
    <url>/ja/Logistic-Regression/</url>
    <content><![CDATA[<h2 id="1-2-1ウォームアップ演習：シグモイド関数"><a href="#1-2-1ウォームアップ演習：シグモイド関数" class="headerlink" title="1.2.1ウォームアップ演習：シグモイド関数"></a>1.2.1ウォームアップ演習：シグモイド関数</h2><p>シグモイド関数は次のように定義されます。 </p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.738ex" xmlns="http://www.w3.org/2000/svg" width="14.957ex" height="4.774ex" role="img" focusable="false" viewBox="0 -1342 6610.9 2110"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(866, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(1331, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(1997.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3053.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(1528.7, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(722.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(1722.4, 0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="TeXAtom" transform="translate(466, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(778, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g></g></g><rect width="3317.4" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">g = <span class="number">1.</span>/(<span class="number">1</span>+<span class="built_in">exp</span>(-z))</span><br></pre></td></tr></table></figure>

<h2 id="1-2-2コスト関数と勾配"><a href="#1-2-2コスト関数と勾配" class="headerlink" title="1.2.2コスト関数と勾配"></a>1.2.2コスト関数と勾配</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="57.509ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 25419 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(4698.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6142.2, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(6420.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(7198.2, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mi" transform="translate(8532.3, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(8830.3, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(9315.3, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(9792.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(10181.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(11138.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(11527.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12393.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12782.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13394.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(14394.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(14783.3, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(15505.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(16505.8, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(17839.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(18228.9, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(18526.9, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(19011.9, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(19488.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(19877.9, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(20600.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(21600.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(22557.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(22946.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(24363, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(24752, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(25141, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.218ex" xmlns="http://www.w3.org/2000/svg" width="6.529ex" height="5.521ex" role="img" focusable="false" viewBox="0 -1460 2886 2440.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 710)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(1199, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1588, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2057, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(754.8, -686)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="2646" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="26.893ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 11886.8 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(1055.8, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(2540.4, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3984.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4373.4, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5331.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(5720.1, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7136.2, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7747.4, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(8747.6, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10081.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(10470.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></svg></mjx-container></p>
<a id="more"></a>

<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">J = (-y'*<span class="built_in">log</span>(sigmoid(X*theta)) - (<span class="number">1</span>-y)'*<span class="built_in">log</span>(<span class="number">1</span>-sigmoid(X*theta)))/m</span><br><span class="line">grad = (X'*(sigmoid(X*theta) - y))/m</span><br></pre></td></tr></table></figure>

<h2 id="2-3コスト関数と勾配"><a href="#2-3コスト関数と勾配" class="headerlink" title="2.3コスト関数と勾配"></a>2.3コスト関数と勾配</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.014ex" xmlns="http://www.w3.org/2000/svg" width="70.383ex" height="6.549ex" role="img" focusable="false" viewBox="0 -1562.5 31109.3 2894.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(4698.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6142.2, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(6420.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(7198.2, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mi" transform="translate(8532.3, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(8830.3, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(9315.3, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(9792.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(10181.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(11138.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(11527.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12393.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12782.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13394.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(14394.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(14783.3, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(15505.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(16505.8, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(17839.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(18228.9, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(18526.9, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(19011.9, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(19488.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(19877.9, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(20600.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(21600.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(22557.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(22946.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(24363, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(24752, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(25141, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(25641.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(26641.5, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(617.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(28626.1, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="msubsup" transform="translate(30236.8, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p>$$\dfrac{\partial J(\theta )}{\partial \theta <em>{j}} = \dfrac{1}{m}\sum</em>{i=1}^{m}(h_{\theta} (x^{(i)}) - y^{(i)})x_{j}^{(i)} + \dfrac{\lambda }{m}\theta _{j}$$</p>
<p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex" xmlns="http://www.w3.org/2000/svg" width="5.08ex" height="1.968ex" role="img" focusable="false" viewBox="0 -666 2245.6 870"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(689.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1745.6, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container>の場合、<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="15.281ex" height="1.756ex" role="img" focusable="false" viewBox="0 -694 6754 776"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mtext" transform="translate(778, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(1028, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1326, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1855, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2733, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(3162, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(3682, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mtext" transform="translate(4211, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(4461, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(4822, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(5398, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(5864, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(6225, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g></svg></mjx-container>部分= 0 </p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">r1 = sum(theta(<span class="number">2</span>:<span class="keyword">end</span>).^<span class="number">2</span>)*lambda/<span class="number">2</span>/m</span><br><span class="line">J = (-y'*<span class="built_in">log</span>(sigmoid(X*theta)) - (<span class="number">1</span>-y)'*<span class="built_in">log</span>(<span class="number">1</span>-sigmoid(X*theta)))/m + r1</span><br><span class="line"></span><br><span class="line">r2 = <span class="built_in">ones</span>(<span class="built_in">size</span>(theta))</span><br><span class="line">r2(<span class="number">1</span>) = <span class="number">0</span></span><br><span class="line">grad = (X'*(sigmoid(X*theta) - y))/m + (theta.*r2)*lambda/m</span><br></pre></td></tr></table></figure>

<p>！<a href="https://i.imgur.com/94LgVsH.png">costFunctionReg</a> </p>
<p>はい、はい、私は合格したことを知っています。 😄 </p>
<p>しかし、神は何が起こったのか知っていますか？ 🤔 </p>
<!--more-->

<p>！<a href="https://i.imgur.com/OFkLk5J.png">3ロジスティック回帰</a> </p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>ニューラルネットワーク表現</title>
    <url>/ja/Neural-Networks-Representation/</url>
    <content><![CDATA[<h1 id="ニューラルネットワーク表現"><a href="#ニューラルネットワーク表現" class="headerlink" title="ニューラルネットワーク表現"></a>ニューラルネットワーク表現</h1><h2 id="1-3ロジスティック回帰のベクトル化"><a href="#1-3ロジスティック回帰のベクトル化" class="headerlink" title="1.3ロジスティック回帰のベクトル化"></a>1.3ロジスティック回帰のベクトル化</h2><p>さて、私はすでにベクトル化されたアプローチを使用しており、最後の演習ではループはありませんでした。 </p>
<a id="more"></a>

<h2 id="1-41対すべての分類"><a href="#1-41対すべての分類" class="headerlink" title="1.41対すべての分類"></a>1.41対すべての分類</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">initial_theta = <span class="built_in">zeros</span>(n + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">options = optimset(<span class="string">'GradObj'</span>, <span class="string">'on'</span>, <span class="string">'MaxIter'</span>, <span class="number">50</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:num_labels</span><br><span class="line">    [theta] = fmincg(@(t)(lrCostFunction(t, X, (y == <span class="built_in">i</span>), lambda)), initial_theta, options);</span><br><span class="line"></span><br><span class="line">all_theta(<span class="built_in">i</span>,:) = [theta];</span><br></pre></td></tr></table></figure>

<p>ここでの重要なポイントは次のとおりです。 </p>
<ul>
<li>ここでは、 <code>1</code>から<code>num_labels</code>にループするために <code>for</code>が必要です。 </li>
<li><code>all_theta</code>には<code>(i、:)</code>を割り当てる必要があります。そうしないと、1次元のベクトルになります。 </li>
</ul>
<h2 id="1-4-11対すべての予測"><a href="#1-4-11対すべての予測" class="headerlink" title="1.4.11対すべての予測"></a>1.4.11対すべての予測</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A = sigmoid(X * all_theta');</span><br><span class="line">[m, p] = <span class="built_in">max</span>(A, [], <span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<p><code>max</code>関数は2次元ベクトルを返し、<code>m</code>は値、 <code>p</code>はその行の最大インデックスです。 </p>
<h2 id="2ニューラルネットワーク"><a href="#2ニューラルネットワーク" class="headerlink" title="2ニューラルネットワーク"></a>2ニューラルネットワーク</h2><p>最後に、私はその後、非常に多くのクラスでニューラルネットワークに触れました。 😳 </p>
<p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex" xmlns="http://www.w3.org/2000/svg" width="17.062ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 7541.6 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(250, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(611, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(1187, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1653, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(2014, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(2543, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(3320.8, 0)"><text data-variant="normal" transform="matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">、</text></g><g data-mml-node="mtext" transform="translate(4498.6, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(4748.6, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(5109.6, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(5685.6, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(6151.6, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(6512.6, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(7041.6, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></svg></mjx-container>は予測するように訓練されています。 </p>
<p>その前に、訓練されたモデルによる予測のプロセスは何であるか疑問に思います。 トレーニングプロセスと同じですか？ </p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a0x = <span class="built_in">ones</span>(m, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">A1 = [a0x, X];</span><br><span class="line">A2 = [a0x, sigmoid(A1 * Theta1')];</span><br><span class="line">A3 = sigmoid(A2 * Theta2');</span><br><span class="line"></span><br><span class="line">[v, p] =  <span class="built_in">max</span>(A3, [], <span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/ailb9HX.png" alt=""></p>
<p>すごいハ！ 🤩 </p>
<p>最初に、隠れ層と出力層を「シグモイド」するのを忘れました。 精度は示しています </p>
<blockquote>
<p>トレーニングセットの精度：69.62 </p>
</blockquote>
<p>また、出力レイヤーに「シグモイド」がない場合も同じ精度が得られます。 以前の** One-vs-all Prediction **でも発生しました。 </p>
<p>したがって、私はまだ質問があります。 🧐 </p>
<p>トレーニングの部分を続ける時が来ました。 💪 </p>
<p><img src="https://i.imgur.com/arYwzJt.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>ニューラルネットワーク学習</title>
    <url>/ja/Neural-Networks-Learning/</url>
    <content><![CDATA[<p>まず第一に、これは私がこのコースを始めたときに私がした最も難しい運動であると言わなければなりません。 </p>
<h2 id="1-3フィードフォワードとコスト関数"><a href="#1-3フィードフォワードとコスト関数" class="headerlink" title="1.3フィードフォワードとコスト関数"></a>1.3フィードフォワードとコスト関数</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.864ex" xmlns="http://www.w3.org/2000/svg" width="36.516ex" height="6.784ex" role="img" focusable="false" viewBox="0 -1733 16140.1 2998.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(4698.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="munderover" transform="translate(6308.9, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(86, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(407.7, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7752.9, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(8030.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(8808.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(490, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mi" transform="translate(10143, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(10441, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(10926, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(11403, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(11792, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(12181, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(13138.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(13527.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msub" transform="translate(14943.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, -150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(15751.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.735ex" xmlns="http://www.w3.org/2000/svg" width="29.41ex" height="3.135ex" role="img" focusable="false" viewBox="0 -1060.7 12999.1 1385.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1167, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1889.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(2889.4, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(490, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4223.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(4612.5, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(4910.5, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(5395.5, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(5872.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(6261.5, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6983.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(7984, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8373, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(9330.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9719.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11135.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msub" transform="translate(11524.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, -150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(12332.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12721.1, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<a id="more"></a>

<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a1 = [<span class="built_in">ones</span>(m, <span class="number">1</span>), X];</span><br><span class="line">z2 = a1*Theta1';</span><br><span class="line">a2 = [<span class="built_in">ones</span>(m, <span class="number">1</span>), sigmoid(z2)];</span><br><span class="line">z3 = a2*Theta2';</span><br><span class="line">a3 = sigmoid(z3);</span><br><span class="line"></span><br><span class="line">I = <span class="built_in">eye</span>(num_labels);</span><br><span class="line">Y = I(y, :);</span><br><span class="line"></span><br><span class="line">J = sum(sum((-Y.*<span class="built_in">log</span>(a3) - (<span class="number">1</span>-Y).*<span class="built_in">log</span>(<span class="number">1</span>-a3) ) / m));</span><br></pre></td></tr></table></figure>

<p>現在、「I(y、:)」についてはまだ混乱していますが、y(5000：1)をY(5000：10)にするにはどうすればよいですか？各行には一致するインデックスがありますか？ </p>
<h2 id="1-4正則化されたコスト関数"><a href="#1-4正則化されたコスト関数" class="headerlink" title="1.4正則化されたコスト関数"></a>1.4正則化されたコスト関数</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.864ex" xmlns="http://www.w3.org/2000/svg" width="36.516ex" height="6.784ex" role="img" focusable="false" viewBox="0 -1733 16140.1 2998.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(4698.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="munderover" transform="translate(6308.9, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(86, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(407.7, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7752.9, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(8030.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(8808.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(490, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mi" transform="translate(10143, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(10441, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(10926, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(11403, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(11792, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(12181, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(13138.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(13527.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msub" transform="translate(14943.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, -150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(15751.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.735ex" xmlns="http://www.w3.org/2000/svg" width="29.41ex" height="3.135ex" role="img" focusable="false" viewBox="0 -1060.7 12999.1 1385.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1167, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1889.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(2889.4, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(490, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4223.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(4612.5, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(4910.5, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(5395.5, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(5872.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(6261.5, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6983.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(7984, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8373, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(9330.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9719.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11135.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msub" transform="translate(11524.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, -150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(12332.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12721.1, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.014ex" xmlns="http://www.w3.org/2000/svg" width="20.004ex" height="6.925ex" role="img" focusable="false" viewBox="0 -1728.7 8841.9 3060.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(778, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(617.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2596, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="munderover" transform="translate(2874, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(368.4, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500, 0)"></path></g></g></g><g data-mml-node="munderover" transform="translate(4484.7, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(86, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(191.7, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500, 0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000, 0)"></path></g></g></g><g data-mml-node="mo" transform="translate(5928.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msubsup" transform="translate(6317.7, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(690, 0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8049.3, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(389, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.014ex" xmlns="http://www.w3.org/2000/svg" width="16.268ex" height="6.908ex" role="img" focusable="false" viewBox="0 -1720.9 7190.6 3053.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="munderover" transform="translate(944.7, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(368.4, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500, 0)"></path></g></g></g><g data-mml-node="munderover" transform="translate(2555.3, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(86, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(368.4, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500, 0)"></path></g></g></g><g data-mml-node="mo" transform="translate(3999.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msubsup" transform="translate(4388.3, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(690, 0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(6120, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(389, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6912.6, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">r = lambda/<span class="number">2</span>/m * (sum(sum(Theta1(:,<span class="number">2</span>:<span class="keyword">end</span>).^<span class="number">2</span>)) + sum(sum(Theta2(:,<span class="number">2</span>:<span class="keyword">end</span>).^<span class="number">2</span>)));</span><br><span class="line">J = J + r;</span><br></pre></td></tr></table></figure>

<h2 id="2-1シグモイド勾配"><a href="#2-1シグモイド勾配" class="headerlink" title="2.1シグモイド勾配"></a>2.1シグモイド勾配</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="31.034ex" height="4.676ex" role="img" focusable="false" viewBox="0 -1370 13717 2067"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477, 413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(721.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1110.5, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(1575.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2242.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3298, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(452.5, 676)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(520, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g><rect width="1185" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mi" transform="translate(4723, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(5200, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5589, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(6054, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6720.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(7776.6, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(8253.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(8642.6, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(9107.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9496.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(9885.6, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(10607.8, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(11608, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(12085, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(12474, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(12939, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13328, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">g = sigmoid(z).*(<span class="number">1</span>-sigmoid(z));</span><br></pre></td></tr></table></figure>

<h2 id="2-3バックプロパゲーション"><a href="#2-3バックプロパゲーション" class="headerlink" title="2.3バックプロパゲーション"></a>2.3バックプロパゲーション</h2><p>$$\delta <em>{k}^{(3)} = (a</em>{k}^{(3)} - y_{k})$$</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="23.754ex" height="2.7ex" role="img" focusable="false" viewBox="0 -943.3 10499.1 1193.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(444, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1125.3, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2181.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(2570.1, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(4301.8, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(5238.6, 0)"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(444, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6636.3, 0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mo" transform="translate(7080.9, 0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(7580.9, 0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477, 413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(8302.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8691.4, 0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(465, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10110.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="24.135ex" height="2.7ex" role="img" focusable="false" viewBox="0 -943.3 10667.9 1193.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="TeXAtom" transform="translate(833, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1921.6, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(2977.4, 0)"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="TeXAtom" transform="translate(833, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4843.5, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(5843.7, 0)"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(444, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1465, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1965, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8002.2, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8391.2, 0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(529, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(9731.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g></g></g></svg></mjx-container></p>
<p>$$\dfrac{\partial }{\partial \Theta <em>{ij}^{(l)}}J(\Theta ) = D</em>{ij}^{(l)} = \dfrac{1}{m}\Delta _{ij}^{(l)}$$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">d3 = a3-Y;</span><br><span class="line">d2 = d3*Theta2.*[<span class="built_in">ones</span>(m, <span class="number">1</span>), sigmoidGradient(z2)];</span><br><span class="line"></span><br><span class="line">D1 = d2(:,<span class="number">2</span>:<span class="keyword">end</span>)'*a1;</span><br><span class="line">D2 = d3'*a2;</span><br><span class="line"></span><br><span class="line">Theta1_grad = Theta1_grad + D1/m;</span><br><span class="line">Theta2_grad = Theta2_grad + D2/m;</span><br></pre></td></tr></table></figure>

<h2 id="2-5正規化されたニューラルネットワーク"><a href="#2-5正規化されたニューラルネットワーク" class="headerlink" title="2.5正規化されたニューラルネットワーク"></a>2.5正規化されたニューラルネットワーク</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.3ex" xmlns="http://www.w3.org/2000/svg" width="10.823ex" height="6.447ex" role="img" focusable="false" viewBox="0 -1391 4783.8 2849.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(1014.4, 676)"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="2354.8" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mi" transform="translate(2594.8, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(3227.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3616.8, 0)"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="mo" transform="translate(4394.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="26.519ex" height="4.613ex" role="img" focusable="false" viewBox="0 -1342 11721.6 2039"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msubsup" transform="translate(1055.8, 0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(828, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(828, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2972.4, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(4028.2, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msubsup" transform="translate(5346.2, 0)"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="TeXAtom" transform="translate(833, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(833, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mstyle" transform="translate(6990, 0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(7990, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(8540, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(9025, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(9476, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(10165.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(11221.6, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.3ex" xmlns="http://www.w3.org/2000/svg" width="10.823ex" height="6.447ex" role="img" focusable="false" viewBox="0 -1391 4783.8 2849.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(1014.4, 676)"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="2354.8" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mi" transform="translate(2594.8, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(3227.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3616.8, 0)"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="mo" transform="translate(4394.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="35.862ex" height="4.676ex" role="img" focusable="false" viewBox="0 -1370 15850.9 2067"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msubsup" transform="translate(1055.8, 0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(828, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(828, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2972.4, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(4028.2, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msubsup" transform="translate(5346.2, 0)"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="TeXAtom" transform="translate(833, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(833, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7212.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(8212.5, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(367.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msubsup" transform="translate(9530.5, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mstyle" transform="translate(11119.3, 0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(12119.3, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(12669.3, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(13154.3, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(13605.3, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(14295.1, 0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mn" transform="translate(15350.9, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">Theta1_grad(:,<span class="number">2</span>:<span class="keyword">end</span>) = Theta1_grad(:,<span class="number">2</span>:<span class="keyword">end</span>) + lambda/m*Theta1(:,<span class="number">2</span>:<span class="keyword">end</span>);</span><br><span class="line">Theta2_grad(:,<span class="number">2</span>:<span class="keyword">end</span>) = Theta2_grad(:,<span class="number">2</span>:<span class="keyword">end</span>) + lambda/m*Theta2(:,<span class="number">2</span>:<span class="keyword">end</span>);</span><br></pre></td></tr></table></figure>

<h2 id="隠しレイヤー"><a href="#隠しレイヤー" class="headerlink" title="隠しレイヤー"></a>隠しレイヤー</h2><p><img src="https://i.imgur.com/LqYfS7h.png" alt=""></p>
<p><img src="https://i.imgur.com/c1wo2Cy.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>機械学習を適用するためのアドバイス</title>
    <url>/ja/Advice-for-Applying-Machine-Learning/</url>
    <content><![CDATA[<h2 id="1-2正則化された線形回帰コスト関数"><a href="#1-2正則化された線形回帰コスト関数" class="headerlink" title="1.2正則化された線形回帰コスト関数"></a>1.2正則化された線形回帰コスト関数</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.014ex" xmlns="http://www.w3.org/2000/svg" width="49.903ex" height="6.972ex" role="img" focusable="false" viewBox="0 -1749.5 22057 3081.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(659, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mrow" transform="translate(5031.6, 0)"><g data-mml-node="mo"><path data-c="28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path></g><g data-mml-node="munderover" transform="translate(792, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2236, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2625, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3582.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3971.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5387.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5998.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(6999.2, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8333.2, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(9125.8, 0)"><path data-c="29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></g></g><g data-mml-node="mo" transform="translate(15171.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(16171.8, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(617.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mrow" transform="translate(17989.8, 0)"><g data-mml-node="mo"><path data-c="28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path></g><g data-mml-node="munderover" transform="translate(792, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="msubsup" transform="translate(2402.7, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3275.2, 0)"><path data-c="29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">J = <span class="number">1</span>/(<span class="number">2</span>*m)*sum( (X*theta - y).^<span class="number">2</span> ) + lambda/(<span class="number">2</span>*m)*sum(theta(<span class="number">2</span>:<span class="keyword">end</span>).^<span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="1-3正則化された線形回帰勾配"><a href="#1-3正則化された線形回帰勾配" class="headerlink" title="1.3正則化された線形回帰勾配"></a>1.3正則化された線形回帰勾配</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="40.137ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 17740.8 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 710)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(1199, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1588, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2057, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(723.7, -686)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><rect width="2646" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(3163.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(4219.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(5704.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7148.2, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7537.2, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8494.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8883.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10299.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10911.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(11911.4, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(13245.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(13634.5, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(15050.5, 0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g><g data-mml-node="mi" transform="translate(15495.2, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(16185, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(17240.8, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.827ex" xmlns="http://www.w3.org/2000/svg" width="51.302ex" height="6.785ex" role="img" focusable="false" viewBox="0 -1749.5 22675.5 2999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 710)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(1199, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1588, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2057, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(754.8, -686)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="2646" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(3163.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(4219.6, 0)"><g data-mml-node="mo"><path data-c="28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path></g><g data-mml-node="mstyle" transform="translate(792, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(2276.7, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3720.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4109.7, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5067.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(5456.3, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6872.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7483.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(8483.8, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9817.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(10206.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11623, 0)"><path data-c="29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></g></g><g data-mml-node="mo" transform="translate(16856.8, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(17857, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(367.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msub" transform="translate(19175, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(19985.3, 0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g><g data-mml-node="mi" transform="translate(20430, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(21119.8, 0)"><path data-c="2A7E" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM674 172Q692 172 694 154Q694 142 687 137Q685 135 395 -2L107 -138H101Q83 -136 83 -118Q83 -106 96 -100Q100 -98 380 35T665 170T674 172Z"></path></g><g data-mml-node="mn" transform="translate(22175.5, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">r = theta; r(<span class="number">1</span>) = <span class="number">0</span>;</span><br><span class="line">grad = <span class="number">1</span>/m*(X'*(X*theta-y)) + lambda/m*r;</span><br></pre></td></tr></table></figure>

<h2 id="2-1学習曲線"><a href="#2-1学習曲線" class="headerlink" title="2.1学習曲線"></a>2.1学習曲線</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.827ex" xmlns="http://www.w3.org/2000/svg" width="36.47ex" height="6.785ex" role="img" focusable="false" viewBox="0 -1749.5 16119.8 2999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="TeXAtom" transform="translate(555, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(812, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1341, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1686, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2221.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2610.4, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(3079.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3746.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(4802, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(659, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mrow" transform="translate(6620, 0)"><g data-mml-node="mo"><path data-c="5B" d="M269 -1249V1750H577V1677H342V-1176H577V-1249H269Z"></path></g><g data-mml-node="munderover" transform="translate(583, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2027, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2416, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3373.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3762.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5178.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5789.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(6790.2, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8124.2, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(8916.8, 0)"><path data-c="5D" d="M5 1677V1750H313V-1249H5V-1176H240V1677H5Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:m</span><br><span class="line">    xi = X(<span class="number">1</span>:<span class="built_in">i</span>,:); yi = y(<span class="number">1</span>:<span class="built_in">i</span>);</span><br><span class="line"></span><br><span class="line">    theta = trainLinearReg(xi, yi, lambda);</span><br><span class="line">    error_train(<span class="built_in">i</span>) = linearRegCostFunction(xi, yi, theta, <span class="number">0</span>)</span><br><span class="line">    error_val(<span class="built_in">i</span>) = linearRegCostFunction(Xval, yval, theta, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h2 id="3多項式回帰"><a href="#3多項式回帰" class="headerlink" title="3多項式回帰"></a>3多項式回帰</h2><p>$$ h_{\theta }(x) = \theta _{0} + \theta _{1}<em>(waterLevel) + \theta _{2}</em>(waterLevel)^{2} + … + \theta _{p}*(waterLevel)^{p} $$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">X_poly = X.^[<span class="number">1</span>:<span class="number">1</span>:p];</span><br></pre></td></tr></table></figure>

<h2 id="3-3交差検定セットを使用したλの選択"><a href="#3-3交差検定セットを使用したλの選択" class="headerlink" title="3.3交差検定セットを使用したλの選択"></a>3.3交差検定セットを使用したλの選択</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">length</span>(lambda_vec)</span><br><span class="line">    lambda = lambda_vec(<span class="built_in">i</span>);</span><br><span class="line"></span><br><span class="line">    theta = trainLinearReg(X, y, lambda);</span><br><span class="line">    error_train(<span class="built_in">i</span>) = linearRegCostFunction(X, y, theta, <span class="number">0</span>)</span><br><span class="line">    error_val(<span class="built_in">i</span>) = linearRegCostFunction(Xval, yval, theta, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/yyXPMcV.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>ベクターマシンのサポート</title>
    <url>/ja/Support-Vector-Machines/</url>
    <content><![CDATA[<p>私は以前に何度もSVMについて聞いたことがありますが、今ではそれがどれほど強力であるかを見てきました。 😄 </p>
<h2 id="1-2-1ガウスカーネル"><a href="#1-2-1ガウスカーネル" class="headerlink" title="1.2.1ガウスカーネル"></a>1.2.1ガウスカーネル</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.268ex" xmlns="http://www.w3.org/2000/svg" width="72.794ex" height="7.668ex" role="img" focusable="false" viewBox="0 -1944.7 32174.8 3389.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"></path></g><g data-mml-node="TeXAtom" transform="translate(849, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(477, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1006, 0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1578, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(2047, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(2516, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2861, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3390, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3720.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(4109.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5525.4, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(5970.1, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7433.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8100.3, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(9156.1, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(9622.1, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(10194.1, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mrow" transform="translate(10697.1, 0)"><g data-mml-node="mo"><path data-c="239B" d="M837 1154Q843 1148 843 1145Q843 1141 818 1106T753 1002T667 841T574 604T494 299Q417 -84 417 -609Q417 -641 416 -647T411 -654Q409 -655 366 -655Q299 -655 297 -654Q292 -652 292 -643T291 -583Q293 -400 304 -242T347 110T432 470T574 813T785 1136Q787 1139 790 1142T794 1147T796 1150T799 1152T802 1153T807 1154T813 1154H819H837Z" transform="translate(0, 790.7)"></path><path data-c="239D" d="M843 -635Q843 -638 837 -644H820Q801 -644 800 -643Q792 -635 785 -626Q684 -503 605 -363T473 -75T385 216T330 518T302 809T291 1093Q291 1144 291 1153T296 1164Q298 1165 366 1165Q409 1165 411 1164Q415 1163 416 1157T417 1119Q417 529 517 109T833 -617Q843 -631 843 -635Z" transform="translate(0, -800.7)"></path></g><g data-mml-node="mo" transform="translate(875, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mstyle" transform="translate(1653, 0)"><g data-mml-node="mfrac"><g data-mml-node="msup" transform="translate(220, 853.3)"><g data-mml-node="mrow"><g data-mml-node="mo"><svg width="278" height="1286.7" y="-393.3" x="27.5" viewBox="0 -159.4 278 1286.7"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1, 1.932)"></path></svg></g><g data-mml-node="msup" transform="translate(333, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1971.3, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(2971.5, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4435, 0)"><svg width="278" height="1286.7" y="-393.3" x="27.5" viewBox="0 -159.4 278 1286.7"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1, 1.932)"></path></svg></g></g><g data-mml-node="mn" transform="translate(4768, 620.4) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mrow" transform="translate(2068.5, -719.9)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="msup" transform="translate(500, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" transform="translate(571, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><rect width="5371.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(7264.5, 0)"><path data-c="239E" d="M31 1143Q31 1154 49 1154H59Q72 1154 75 1152T89 1136Q190 1013 269 873T401 585T489 294T544 -8T572 -299T583 -583Q583 -634 583 -643T577 -654Q575 -655 508 -655Q465 -655 463 -654Q459 -653 458 -647T457 -609Q457 -58 371 340T100 1037Q87 1059 61 1098T31 1143Z" transform="translate(0, 790.7)"></path><path data-c="23A0" d="M56 -644H50Q31 -644 31 -635Q31 -632 37 -622Q69 -579 100 -527Q286 -228 371 170T457 1119Q457 1161 462 1164Q464 1165 520 1165Q575 1165 577 1164Q582 1162 582 1153T583 1093Q581 910 570 752T527 400T442 40T300 -303T89 -626Q78 -640 75 -642T61 -644H56Z" transform="translate(0, -800.7)"></path></g></g><g data-mml-node="mo" transform="translate(19114.4, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(20170.2, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(20636.2, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(21208.2, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mrow" transform="translate(21711.2, 0)"><g data-mml-node="mo"><path data-c="28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path></g><g data-mml-node="mo" transform="translate(792, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mstyle" transform="translate(1570, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 803.3)"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1056, 477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1056, -285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2378.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msubsup" transform="translate(2767.1, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(572, -317.1) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(4405.4, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(5405.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(572, -317.1) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="msup" transform="translate(6869.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(3313.5, -719.9)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="msup" transform="translate(500, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" transform="translate(571, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><rect width="7861.6" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(9671.6, 0)"><path data-c="29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">sim = <span class="built_in">exp</span>(-sum((x2-x1).^<span class="number">2</span>)./(<span class="number">2</span>*sigma.^<span class="number">2</span>));</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="1-2-3データセットの例3"><a href="#1-2-3データセットの例3" class="headerlink" title="1.2.3データセットの例3"></a>1.2.3データセットの例3</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">l = [<span class="number">0.01</span>, <span class="number">0.03</span>, <span class="number">0.1</span>, <span class="number">0.3</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">30</span>];</span><br><span class="line">mix = <span class="built_in">realmax</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c = l</span><br><span class="line">    <span class="keyword">for</span> s = l</span><br><span class="line">        model= svmTrain(X, y, c, @(x1, x2) gaussianKernel(x1, x2, s));</span><br><span class="line"></span><br><span class="line">        p = svmPredict(model, Xval);</span><br><span class="line">        m = <span class="built_in">mean</span>(double(p ~= yval));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> m &lt; mix</span><br><span class="line">            C = c;sigma = s;mix = m;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>シグマをベクトルとして渡してアナログベクトルを取得できるようにガウスカーネル関数を作成したので、 <code>g = gaussianKernel(x1、x2、s)</code>はベクトルであり、 <code>for c = l</code>ループで余分な計算をスキップできます <code>for s = l</code>。 したがって、 <code>svmTrain</code>をベクトルとして計算できる場合は、<code>for c = l</code>もスキップできます。 </p>
<p>しかし、それはできません。 😢 </p>
<p>機能プログラミングと関係がありますか？ </p>
<h2 id="2-1-1語彙リスト"><a href="#2-1-1語彙リスト" class="headerlink" title="2.1.1語彙リスト"></a>2.1.1語彙リスト</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">i</span> = <span class="built_in">find</span>(strcmp(vocabList, str));</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">i</span></span><br><span class="line">    word_indices = [word_indices; <span class="built_in">i</span>];</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h2 id="2-2電子メールからの特徴の抽出"><a href="#2-2電子メールからの特徴の抽出" class="headerlink" title="2.2電子メールからの特徴の抽出"></a>2.2電子メールからの特徴の抽出</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.469ex" xmlns="http://www.w3.org/2000/svg" width="25.684ex" height="4.07ex" role="img" focusable="false" viewBox="0 -1149.5 11352.4 1799"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(849.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(1905.6, 0)"><g data-mml-node="mo"><path data-c="5B" d="M224 -649V1150H455V1099H275V-598H455V-649H224Z"></path></g><g data-mml-node="mtable" transform="translate(472, 0)"><g data-mml-node="mtr" transform="translate(0, -275)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(500, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(750, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(1028, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(1278, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mtext" transform="translate(1778, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(2028, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(2528, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2778, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(3056, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(3306, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mtext" transform="translate(3806, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(4056, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(4556, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4806, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(5084, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(5334, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(5834, 0)"><path data-c="A0" d=""></path></g></g></g></g><g data-mml-node="mo" transform="translate(6556, 0)"><path data-c="5D" d="M16 1099V1150H247V-649H16V-598H196V1099H16Z"></path></g></g><g data-mml-node="mo" transform="translate(9211.3, 0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="msup" transform="translate(10156.1, 0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="211D" d="M17 665Q17 672 28 683H221Q415 681 439 677Q461 673 481 667T516 654T544 639T566 623T584 607T597 592T607 578T614 565T618 554L621 548Q626 530 626 497Q626 447 613 419Q578 348 473 326L455 321Q462 310 473 292T517 226T578 141T637 72T686 35Q705 30 705 16Q705 7 693 -1H510Q503 6 404 159L306 310H268V183Q270 67 271 59Q274 42 291 38Q295 37 319 35Q344 35 353 28Q362 17 353 3L346 -1H28Q16 5 16 16Q16 35 55 35Q96 38 101 52Q106 60 106 341T101 632Q95 645 55 648Q17 648 17 665ZM241 35Q238 42 237 45T235 78T233 163T233 337V621L237 635L244 648H133Q136 641 137 638T139 603T141 517T141 341Q141 131 140 89T134 37Q133 36 133 35H241ZM457 496Q457 540 449 570T425 615T400 634T377 643Q374 643 339 648Q300 648 281 635Q271 628 270 610T268 481V346H284Q327 346 375 352Q421 364 439 392T457 496ZM492 537T492 496T488 427T478 389T469 371T464 361Q464 360 465 360Q469 360 497 370Q593 400 593 495Q593 592 477 630L457 637L461 626Q474 611 488 561Q492 537 492 496ZM464 243Q411 317 410 317Q404 317 401 315Q384 315 370 312H346L526 35H619L606 50Q553 109 464 243Z"></path></g></g><g data-mml-node="mi" transform="translate(722, 413) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = word_indices</span><br><span class="line">    x(<span class="built_in">i</span>) = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/rBji3uP.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>監視されていない学習</title>
    <url>/ja/Unsupervised-Learning/</url>
    <content><![CDATA[<h2 id="1-1-1最も近い重心を見つける"><a href="#1-1-1最も近い重心を見つける" class="headerlink" title="1.1.1最も近い重心を見つける"></a>1.1.1最も近い重心を見つける</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.469ex" xmlns="http://www.w3.org/2000/svg" width="25.825ex" height="4.07ex" role="img" focusable="false" viewBox="0 -1149.5 11414.7 1799"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" transform="translate(433, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1554.9, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" transform="translate(278, 0)"></path></g><g data-mml-node="mi" transform="translate(2888.6, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(3300.6, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3745.3, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4623.3, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4968.3, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mrow" transform="translate(5568.3, 0)"><g data-mml-node="mo"><path data-c="28" d="M180 96T180 250T205 541T266 770T353 944T444 1069T527 1150H555Q561 1144 561 1141Q561 1137 545 1120T504 1072T447 995T386 878T330 721T288 513T272 251Q272 133 280 56Q293 -87 326 -209T399 -405T475 -531T536 -609T561 -640Q561 -643 555 -649H527Q483 -612 443 -568T353 -443T266 -270T205 -41Z"></path></g><g data-mml-node="msup" transform="translate(597, 0)"><g data-mml-node="mrow"><g data-mml-node="mo"><svg width="278" height="1386.7" y="-443.3" x="27.5" viewBox="0 -171.8 278 1386.7"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1, 2.082)"></path></svg></g><g data-mml-node="msup" transform="translate(333, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1971.3, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(2971.5, 0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(603, -150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mo" transform="translate(3915.9, 0)"><svg width="278" height="1386.7" y="-443.3" x="27.5" viewBox="0 -171.8 278 1386.7"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1, 2.082)"></path></svg></g></g><g data-mml-node="mn" transform="translate(4248.9, 670.4) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(5249.4, 0)"><path data-c="29" d="M35 1138Q35 1150 51 1150H56H69Q113 1113 153 1069T243 944T330 771T391 541T416 250T391 -40T330 -270T243 -443T152 -568T69 -649H56Q43 -649 39 -647T35 -637Q65 -607 110 -548Q283 -316 316 56Q324 133 324 251Q324 368 316 445Q278 877 48 1123Q36 1137 35 1138Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">v = [];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:K</span><br><span class="line">    v = [v, sum((X - centroids(<span class="built_in">j</span>,:)).^<span class="number">2</span>, <span class="number">2</span>)];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">[v, idx] = <span class="built_in">min</span>(v, [], <span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.564ex" xmlns="http://www.w3.org/2000/svg" width="12.31ex" height="2.26ex" role="img" focusable="false" viewBox="0 -749.5 5441 999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(250, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(548, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1014, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(1564, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mtext" transform="translate(1925, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(2175, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mtext" transform="translate(2453, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(2703, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3154, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3499, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(3976, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(4552, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mtext" transform="translate(4913, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(5163, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g></g></svg></mjx-container>記号は、<a href="https://en.wikipedia.org/wiki/Norm_(mathematics)">Norm</a>を意味します。私が最初に思ったように、絶対値ではありません。 😂 </p>
<a id="more"></a>

<h2 id="1-1-2重心平均の計算"><a href="#1-1-2重心平均の計算" class="headerlink" title="1.1.2重心平均の計算"></a>1.1.2重心平均の計算</h2><p>$$\mu <em>k := \dfrac{1}{\left | C_k \right |}\sum</em>{i\in  C_k}^{ }x^{(i)}$$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:K</span><br><span class="line">    <span class="built_in">j</span> = (idx == <span class="built_in">i</span>);</span><br><span class="line">    v = X(<span class="built_in">j</span>, :);</span><br><span class="line">    n = <span class="built_in">size</span>(v, <span class="number">1</span>);</span><br><span class="line">    centroids(<span class="built_in">i</span>, :) = sum(v)/n;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/UEBpwso.gif" alt=""></p>
<h2 id="2-2PCAの実装"><a href="#2-2PCAの実装" class="headerlink" title="2.2PCAの実装"></a>2.2PCAの実装</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.464ex" xmlns="http://www.w3.org/2000/svg" width="22.436ex" height="2.481ex" role="img" focusable="false" viewBox="0 -891.7 9916.6 1096.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(250, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(719, 0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1291, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2446.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mtext" transform="translate(3502.6, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3752.6, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(4272.6, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(4822.6, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5273.6, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(5802.6, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6235.6, 0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6735.6, 0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msup" transform="translate(7613.6, 0)"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mi" transform="translate(903.2, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mi" transform="translate(9064.6, 0)"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">sigma = X'*X/m;</span><br><span class="line">[U, S, V] = svd(sigma);</span><br></pre></td></tr></table></figure>

<h2 id="2-3-1データを主成分に投影する"><a href="#2-3-1データを主成分に投影する" class="headerlink" title="2.3.1データを主成分に投影する"></a>2.3.1データを主成分に投影する</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">Z = X * U;</span><br><span class="line">Z = Z(:,<span class="number">1</span>:K);</span><br></pre></td></tr></table></figure>

<h2 id="2-3-2データの近似値の再構築"><a href="#2-3-2データの近似値の再構築" class="headerlink" title="2.3.2データの近似値の再構築"></a>2.3.2データの近似値の再構築</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">X_rec = Z * U(:,<span class="number">1</span>:K)';</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/TjyYT8G.gif" alt=""></p>
<p><img src="https://i.imgur.com/duSTjdI.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>異常検出および推奨システム</title>
    <url>/ja/Anomaly-Detection-Recommender-Systems/</url>
    <content><![CDATA[<h2 id="異常検出"><a href="#異常検出" class="headerlink" title="異常検出"></a>異常検出</h2><div style="width: 400px">
<img src="https://i.imgur.com/slIPtvp.gif">
</div>

<h3 id="1-1ガウス分布"><a href="#1-1ガウス分布" class="headerlink" title="1.1ガウス分布"></a>1.1ガウス分布</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.308ex" xmlns="http://www.w3.org/2000/svg" width="27.169ex" height="5.385ex" role="img" focusable="false" viewBox="0 -1360.3 12008.8 2380.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(503, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(892, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1464, 0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g><g data-mml-node="mi" transform="translate(1908.7, 0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mo" transform="translate(2511.7, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(2956.3, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mn" transform="translate(571, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(3930.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4597.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(5653.4, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(1418.8, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="msqrt" transform="translate(220, -962)"><g transform="translate(853, 0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="msup" transform="translate(1070, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mn" transform="translate(571, 289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(0, 142)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="2044.6" height="60" x="853" y="882"></rect></g><rect width="3097.6" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msup" transform="translate(8991, 0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="TeXAtom" transform="translate(466, 480.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(778, 0)"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(961, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1739, 0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="msup" transform="translate(2342, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 363)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(806.9, -515.3) scale(0.707)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="msup" transform="translate(500, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mn" transform="translate(571, 289)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><rect width="2520" height="60" x="120" y="220"></rect></g></g></g></g></g></svg></mjx-container></p>
<a id="more"></a>

<h3 id="1-2ガウス分布のパラメーターの推定"><a href="#1-2ガウス分布のパラメーターの推定" class="headerlink" title="1.2ガウス分布のパラメーターの推定"></a>1.2ガウス分布のパラメーターの推定</h3><p>$$\mu <em>{i} = \dfrac {1}{m}\sum</em>{j=1}^{m}x _{i}^{(j)}$$</p>
<p>$$\sigma <em>{i}^{2} = \dfrac{1}{m}\sum</em>{j=1}^{m}(x _{i}^{(j)} - \mu _{i})^2$$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">mu = sum(X)/m;</span><br><span class="line">sigma2 = sum((X-mu).^<span class="number">2</span>)/m;</span><br></pre></td></tr></table></figure>

<p>pdfツアーでは、確率が最も高い領域が赤い楕円として表示されないため、これらの方程式に問題があると思いました。 </p>
<p>少しデバッグしたところ、ガウス分布の輪郭の中心色が黄色であることがわかりました。これは、Retinaがない画面ではほとんど見えません。 😂😂😂 </p>
<h3 id="1-3しきい値の選択ε"><a href="#1-3しきい値の選択ε" class="headerlink" title="1.3しきい値の選択ε"></a>1.3しきい値の選択ε</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.991ex" xmlns="http://www.w3.org/2000/svg" width="18.027ex" height="5.027ex" role="img" focusable="false" viewBox="0 -1342 7968 2222"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mn" transform="translate(643, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1324.3, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(2380.1, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 676)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(722.2, 0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(1222.4, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(1725.4, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2176.4, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2642.4, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(3297.7, 0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(3797.9, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4248.9, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(4714.9, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g><g data-mml-node="mrow" transform="translate(581.2, -686)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(2075.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(3075.4, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3526.4, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(3992.4, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g><rect width="5347.9" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.016ex" xmlns="http://www.w3.org/2000/svg" width="15.308ex" height="4.962ex" role="img" focusable="false" viewBox="0 -1302 6766 2193"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(2130.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3186.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(1357.7, 676)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1086.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2086.4, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(2636.4, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g><rect width="3339.4" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.016ex" xmlns="http://www.w3.org/2000/svg" width="14.389ex" height="4.962ex" role="img" focusable="false" viewBox="0 -1302 6360 2193"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(451, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(917, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(1627.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(2683.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(1406.2, 676)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1086.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2086.4, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(2636.4, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="3436.4" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">p = (pval &lt; epsilon);</span><br><span class="line">tp = sum((p == <span class="number">1</span>) &amp; (yval == <span class="number">1</span>));</span><br><span class="line">fp = sum((p == <span class="number">1</span>) &amp; (yval == <span class="number">0</span>));</span><br><span class="line">fn = sum((p == <span class="number">0</span>) &amp; (yval == <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">prec = tp/(tp+fp);</span><br><span class="line">rec = tp/(tp+fn);</span><br><span class="line"></span><br><span class="line">F1 = <span class="number">2</span>*prec*rec/(prec+rec);</span><br></pre></td></tr></table></figure>

<h2 id="レコメンダーシステム"><a href="#レコメンダーシステム" class="headerlink" title="レコメンダーシステム"></a>レコメンダーシステム</h2><h3 id="2-1映画のレイティングデータセット"><a href="#2-1映画のレイティングデータセット" class="headerlink" title="2.1映画のレイティングデータセット"></a>2.1映画のレイティングデータセット</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.469ex" xmlns="http://www.w3.org/2000/svg" width="96.292ex" height="4.07ex" role="img" focusable="false" viewBox="0 -1149.5 42561.3 1799"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(1129.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(2185.6, 0)"><g data-mml-node="mo"><path data-c="5B" d="M224 -649V1150H455V1099H275V-598H455V-649H224Z"></path></g><g data-mml-node="mtable" transform="translate(472, 0)"><g data-mml-node="mtr" transform="translate(0, -275)"><g data-mml-node="mtd"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1167, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(2692.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(3851.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(4851.9, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(5324.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(6324.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(6713.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8239.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(9398.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(10398.3, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(10648.3, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(10926.3, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(11398.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(12398.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(12787.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1659.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(14858.5, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(16017.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(17017.7, 0)"><path data-c="A0" d=""></path></g></g></g></g><g data-mml-node="mo" transform="translate(17739.7, 0)"><path data-c="5D" d="M16 1099V1150H247V-649H16V-598H196V1099H16Z"></path></g></g><g data-mml-node="mo" transform="translate(20397.3, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(20842, 0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mi" transform="translate(21546, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(22122, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(22588, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(22949, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(23755.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(24811.5, 0)"><g data-mml-node="mo"><path data-c="5B" d="M224 -649V1150H455V1099H275V-598H455V-649H224Z"></path></g><g data-mml-node="mtable" transform="translate(472, 0)"><g data-mml-node="mtr" transform="translate(0, -275)"><g data-mml-node="mtd"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1167, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(2589.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(3748.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(4748.9, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(5221.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(6221.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(6610.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8033.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(9192.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(10192.3, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(10442.3, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(10720.3, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(11192.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(12192.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(12581.7, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1443.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(14396.5, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(15555.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(16555.7, 0)"><path data-c="A0" d=""></path></g></g></g></g><g data-mml-node="mo" transform="translate(17277.7, 0)"><path data-c="5D" d="M16 1099V1150H247V-649H16V-598H196V1099H16Z"></path></g></g></g></g></svg></mjx-container></p>
<h3 id="2-2-1協調フィルタリングコスト関数"><a href="#2-2-1協調フィルタリングコスト関数" class="headerlink" title="2.2.1協調フィルタリングコスト関数"></a>2.2.1協調フィルタリングコスト関数</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="61.104ex" height="6.258ex" role="img" focusable="false" viewBox="0 -1342 27007.9 2766.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1022, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2547.7, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(2992.3, 0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="msup" transform="translate(4331, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1659.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6401.8, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(6846.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8269.1, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(8713.8, 0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="msup" transform="translate(10052.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1443.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11867.2, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12534, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(13589.8, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220, -686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="700" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(14696.4, 0)"><g data-mml-node="mo" transform="translate(1269.6, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(1813, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(2091, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2542, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2931, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3276, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3554, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(3966, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4355, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5133, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1991.6, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(18679.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(19068.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(19457.5, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(20818, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(21754.8, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(23393.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(24393.3, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(26215.3, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">tmp = X*Theta' .* R - Y;</span><br><span class="line">J = sum(sum(tmp.^<span class="number">2</span>))/<span class="number">2</span>;</span><br></pre></td></tr></table></figure>

<h3 id="2-2-2協調フィルタリング勾配"><a href="#2-2-2協調フィルタリング勾配" class="headerlink" title="2.2.2協調フィルタリング勾配"></a>2.2.2協調フィルタリング勾配</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="36.275ex" height="6.369ex" role="img" focusable="false" viewBox="0 -1391 16033.3 2815.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(611.5, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><rect width="2182.1" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2699.9, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(3755.6, 0)"><g data-mml-node="mo" transform="translate(774.2, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(690, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1141, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1530, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1875, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2153, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2565, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2954, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3732, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1496.2, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(6748.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(7137.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(7526.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8886.6, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(9823.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11461.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(12461.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14283.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(14672.9, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="36.4ex" height="6.369ex" role="img" focusable="false" viewBox="0 -1391 16089 2815.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(635.2, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><rect width="2229.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2747.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(3803, 0)"><g data-mml-node="mo" transform="translate(750.5, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(623, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1074, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1463, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1808, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2086, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2498, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2887, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3665, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1472.5, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(6748.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(7137.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(7526.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8886.6, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(9823.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11461.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(12461.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14283.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(14672.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">X_grad = tmp*Theta;</span><br><span class="line">Theta_grad = tmp'*X;</span><br></pre></td></tr></table></figure>

<h3 id="2-2-3正則化されたコスト関数"><a href="#2-2-3正則化されたコスト関数" class="headerlink" title="2.2.3正則化されたコスト関数"></a>2.2.3正則化されたコスト関数</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="61.104ex" height="6.258ex" role="img" focusable="false" viewBox="0 -1342 27007.9 2766.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1022, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2547.7, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(2992.3, 0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="msup" transform="translate(4331, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1659.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6401.8, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(6846.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8269.1, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(8713.8, 0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="msup" transform="translate(10052.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1443.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11867.2, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12534, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(13589.8, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220, -686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="700" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(14696.4, 0)"><g data-mml-node="mo" transform="translate(1269.6, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(1813, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(2091, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2542, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2931, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3276, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3554, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(3966, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4355, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5133, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1991.6, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(18679.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(19068.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(19457.5, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(20818, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(21754.8, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(23393.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(24393.3, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(26215.3, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p>$$+ \left ( \dfrac{\lambda }{2} \sum<em>{j=1}^{n_u} \sum</em>{k=1}^{n} (\theta _{k}^{(j)} )^2 \right )$$</p>
<p>$$+ \left ( \dfrac{\lambda }{2} \sum<em>{i=1}^{n_m} \sum</em>{k=1}^{n} (x _{k}^{(i)} )^2 \right )$$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">J = J + lambda/<span class="number">2</span>*(sum(sum(Theta.^<span class="number">2</span>))) + lambda/<span class="number">2</span>*(sum(sum(X.^<span class="number">2</span>)));</span><br></pre></td></tr></table></figure>

<h3 id="2-2-4正則化された勾配"><a href="#2-2-4正則化された勾配" class="headerlink" title="2.2.4正則化された勾配"></a>2.2.4正則化された勾配</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.044ex" xmlns="http://www.w3.org/2000/svg" width="7.976ex" height="6.191ex" role="img" focusable="false" viewBox="0 -1391 3525.2 2736.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(635.2, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><rect width="2229.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2747.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="27.67ex" height="6.05ex" role="img" focusable="false" viewBox="0 -1250 12230.3 2674.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="munderover"><g data-mml-node="mo" transform="translate(774.2, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(690, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1141, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1530, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1875, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2153, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2565, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2954, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3732, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1496.2, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(2992.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(3381.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3770.5, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(5130.9, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(6067.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7706, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(8706.3, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10528.2, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(10917.2, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.735ex" xmlns="http://www.w3.org/2000/svg" width="6.39ex" height="3.135ex" role="img" focusable="false" viewBox="0 -1060.7 2824.5 1385.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(778, 0)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="msubsup" transform="translate(1361, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.044ex" xmlns="http://www.w3.org/2000/svg" width="7.743ex" height="6.191ex" role="img" focusable="false" viewBox="0 -1391 3422.2 2736.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(583.7, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><rect width="2126.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2644.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="31.112ex" height="6.05ex" role="img" focusable="false" viewBox="0 -1250 13751.4 2674.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="munderover"><g data-mml-node="mo" transform="translate(750.5, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(623, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1074, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1463, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1808, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2086, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2498, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2887, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3665, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1472.5, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(2945.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(3334.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3723.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(5083.6, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(6020.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7658.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(8658.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10480.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(10869.9, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(11664.1, 0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(12386.3, 0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(521, 421.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.735ex" xmlns="http://www.w3.org/2000/svg" width="6.157ex" height="3.135ex" role="img" focusable="false" viewBox="0 -1060.7 2721.5 1385.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(778, 0)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="msubsup" transform="translate(1361, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">X_grad = X_grad + lambda*X;</span><br><span class="line">Theta_grad = Theta_grad + lambda*Theta;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/yRhMwb9.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>プログラミング割り当てScroogeCoin</title>
    <url>/ja/Programming-Assignment-Scrooge-Coin/</url>
    <content><![CDATA[<p>これは私が今までにした中で最悪の仕事です。 </p>
<p><code>TxHandler.java</code>をビルドして実行することはできません。すべてが推測です。 私は <code>JAVA</code>に精通していないため、送信後に何百万もの構文エラーが発生しました。 </p>
<p>しなければならない： </p>
<ul>
<li>パッケージを手動でインポートする </li>
<li>各行の後に「;」を追加します。 </li>
<li><code>if</code>の後の<code>()</code>。 </li>
<li>変数タイプを宣言する </li>
</ul>
<p>これが私がJAVAを嫌う理由です😡😡😡 </p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TxHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UTXOPool utxoPool;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a public ledger whose current UTXOPool (collection of unspent transaction outputs) is</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> utxoPool&#125;. This should make a copy of utxoPool by using the UTXOPool(UTXOPool uPool)</span></span><br><span class="line"><span class="comment">     * constructor.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TxHandler</span><span class="params">(UTXOPool utxoPool)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.utxoPool = <span class="keyword">new</span> UTXOPool(utxoPool);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true if:</span></span><br><span class="line"><span class="comment">     * (1) all outputs claimed by &#123;<span class="doctag">@code</span> tx&#125; are in the current UTXO pool,</span></span><br><span class="line"><span class="comment">     * (2) the signatures on each input of &#123;<span class="doctag">@code</span> tx&#125; are valid,</span></span><br><span class="line"><span class="comment">     * (3) no UTXO is claimed multiple times by &#123;<span class="doctag">@code</span> tx&#125;,</span></span><br><span class="line"><span class="comment">     * (4) all of &#123;<span class="doctag">@code</span> tx&#125;s output values are non-negative, and</span></span><br><span class="line"><span class="comment">     * (5) the sum of &#123;<span class="doctag">@code</span> tx&#125;s input values is greater than or equal to the sum of its output</span></span><br><span class="line"><span class="comment">     *     values; and false otherwise.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValidTx</span><span class="params">(Transaction tx)</span> </span>&#123;</span><br><span class="line">        UTXOPool utxoSet = <span class="keyword">new</span> UTXOPool();</span><br><span class="line">        <span class="keyword">double</span> pSum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tx.numInputs(); i++) &#123;</span><br><span class="line">            Transaction.Input in = tx.getInput(i);</span><br><span class="line">            UTXO u = <span class="keyword">new</span> UTXO(in.prevTxHash, in.outputIndex);</span><br><span class="line">            Transaction.Output out = utxoPool.getTxOutput(u);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ((!utxoPool.contains(u)) || (!Crypto.verifySignature(out.address, tx.getRawDataToSign(i), in.signature)) || (utxoSet.contains(u))) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            utxoSet.addUTXO(u, out);</span><br><span class="line">            pSum += out.value;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Transaction.Output out : tx.getOutputs()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (out.value &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sum += out.value;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (pSum &lt; sum) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Handles each epoch by receiving an unordered array of proposed transactions, checking each</span></span><br><span class="line"><span class="comment">     * transaction for correctness, returning a mutually valid array of accepted transactions, and</span></span><br><span class="line"><span class="comment">     * updating the current UTXO pool as appropriate.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Transaction[] handleTxs(Transaction[] possibleTxs) &#123;</span><br><span class="line">        Set&lt;Transaction&gt; vTxs = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Transaction tx : possibleTxs) &#123;</span><br><span class="line">            <span class="keyword">if</span> (isValidTx(tx)) &#123;</span><br><span class="line">                vTxs.add(tx);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (Transaction.Input in : tx.getInputs()) &#123;</span><br><span class="line">                    UTXO u = <span class="keyword">new</span> UTXO(in.prevTxHash, in.outputIndex);</span><br><span class="line">                    utxoPool.removeUTXO(u);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tx.numOutputs(); i++) &#123;</span><br><span class="line">                    Transaction.Output out = tx.getOutput(i);</span><br><span class="line">                    UTXO u = <span class="keyword">new</span> UTXO(tx.getHash(), i);</span><br><span class="line">                    utxoPool.addUTXO(u, out);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Transaction[] vTxArr = <span class="keyword">new</span> Transaction[vTxs.size()];</span><br><span class="line">        <span class="keyword">return</span> vTxs.toArray(vTxArr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>BlockChain</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-0</title>
    <url>/ja/Japan-2-0/</url>
    <content><![CDATA[<h1 id="日本-2-0"><a href="#日本-2-0" class="headerlink" title="日本-2-0"></a>日本-2-0</h1><p>🇯🇵 </p>
<p>シーケンス </p>
<p>リトルマスターの姉がいきなり箱根に行くと言った </p>
<p>したがって、いくつかの(多くの)章をスキップして、これを最初に書いてください </p>
<p>なぜ伝統的になったのか<br>姉が台湾人だから<br>彼女は簡略化された文字を理解できますが </p>
<a id="more"></a>

<hr>
<p>それは81023🈷️で起こりました </p>
<p>当時、小さな魔道士は前の会社に3。5年間勤めていましたが、その後果物会社に行って床を掃除しました🧹そして彼の誕生日🎂はピットと同じ日でした<br>卒業と同じような走りをするつもりです🎓その前に旅行 </p>
<p>結局のところ、転職は非常に面倒であり、劣っていることは間違いなく屈辱になります<br>だから私は精神的にも肉体的にも事前に準備するつもりです </p>
<p>当時、小さな魔道士はまだ若く、遊びに出かけたいという段階でした。リラックスする方法は、世界がとても大きいので見たいです。<br>だから世界地図を見るとどこにでも行きたい気がする </p>
<p>でもソロなので、運転免許を取得したばかりで、インターンシップの前に運転する勇気はありませんでした<br>当然、欧米はそれについて考えることはできませんが、都市の風景を選ぶ<br>ついに取得した3年間の返品ビザを見てみましょう。🇯🇵にしか行けません。 </p>
<hr>
<p>木ノ崎で最後に小さな魔道士が偽の温泉がボイラーウォーターであり、本物の温泉♨️が病気を治すことができることを発見したという事実を考慮して、彼は行くことを決して忘れません🇯🇵一度浸します </p>
<p>だからルートはずっと北です </p>
<p>箱根-鎌倉榎島-横浜-東京 </p>
<div id="googleMap136" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap136'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 9.3,
       'center': new window.google.maps.LatLng( 35.460 , 139.233 ),
     },
     target = document.getElementById('googleMap136'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.2719403 , 138.9279284 ),
        'map': map,
        'title': 'Hakone 箱根町',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Hakone 箱根町'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.3338798 , 139.4707656 ),
        'map': map,
        'title': 'Kamakura 鎌倉市',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Kamakura 鎌倉市'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.3011464 , 139.4766161 ),
        'map': map,
        'title': 'Enoshima 江の島',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Enoshima 江の島'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 35.4526928 , 139.5250756 ),
        'map': map,
        'title': 'Yokohama 横浜市',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'Yokohama 横浜市'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
     
     
     var opts4 = {
        'position': new window.google.maps.LatLng( 35.6681625 , 139.6007859 ),
        'map': map,
        'title': 'Tokyo 東京',
        'zIndex' : 4,
        'icon': ''
      };

     var infowindow4 = new window.google.maps.InfoWindow({
       content: 'Tokyo 東京'
     });

     var marker4 = new window.google.maps.Marker(opts4);

     marker4.addListener('click', function(){
       infowindow4.open(map, marker4)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<p>東京に行ったことがありますが、初めて他の人をフォローしていたので、小さな魔道士は記憶力が乏しく、6日も短いので印象がありません。<br>さすがに、スカイツリーを知っていることを除けば、また東京に来たときは、他の場所に行ったことがないようでした。 </p>
<hr>
<h2 id="小田急"><a href="#小田急" class="headerlink" title="小田急"></a>小田急</h2><p>今回はJAL、成田空港に着陸🛬️<br>もともと、小魔道士は信州に行き、小田急ロマンスエクスプレス(ロマンチックではないと言われている)に直行して箱根に向かう予定だった。<br>結局、たった4時で、小田急の終電は6時です。成田から信州まで行っても、完全に遅いです。<br>しかし、日本に飢えている🇯🇵時間は1時間早く、空港の時間同期の後、小さな魔道士は唖然とします </p>
<p>慌てて、目の前の熱狂的な老人は、言語が利用できないときに、新川への成田エクスプレスのチケットを購入するのを手伝いました🚄。🎫 </p>
<p>電車の男に似た広明をキャッチすると、とても安定していて快適です。地図で場所を確認し、すばやく前に進むことができます。<br>小田原(小田原)では、すでに日が沈んでおり、バスはなく、山岳列車のみ </p>
<p>駅を出た後、戸惑い、どこに行けばいいのかわからず、たくさんの人が歩いてきて、綺麗な妹に会いました。すぐに上がって、小さな電車はどこにあるのかと聞いてきました。<br>妹が優しく道を譲った後、小さな魔道士は長い道のりを歩き、振り返ると、妹がうなずいて正しい馬車​​を見つけたことを示しました。 </p>
<p>山を登った後、徐々に雨が降り、気温が急激に下がりました。小さな魔道士は、座席が熱くなり、暖房が爆発していることに気づきました。<br>本当に人道的 </p>
<p>コワキダニに到着後、スイカ🍉カードの残高が駅を出るには不十分です<br>小さな魔道士がひっくり返りたいと思って捕まるとき、周りには誰もいません<br>警官がどこからともなく現れ、一枚の紙を渡して地下鉄のドアを開け、姿を消した </p>
<p>駅を出ると丘が見え、何度も地図を見てみると、影に隠れている縦のはしごが地図に写っている道だとは信じられませんでした。 </p>
<p>幸い、階段を上った後、普通の国道に着きました<br>上り坂わずか1.3km </p>
<p>小さな魔道士は傘を持って荷物を引きずりながら一人で道を歩いています<br>大きな7-11を通り過ぎる<br>まだ一人じゃない </p>
<p>..。 </p>
<h2 id="天悠"><a href="#天悠" class="headerlink" title="天悠"></a>天悠</h2><p>雨の夜に二人のキャラクター、天陽が現れたとき、小さな魔道士は元気がなかった </p>
<p>温泉が楽しめると思いました<br>長い間お腹が空いていて、ホテルの入り口が見つかりませんでした<br>ホテルに電話しなければならなかった </p>
<p>当時、小さな師匠の英語はまだ非常に貧弱で、相手の日本語英語では何を言っているのか全く理解できず、一人でしか話せませんでした。 </p>
<p>それから私は動かないように言われました、そして私は彼を迎えに行くために車を送りました<br>しばらく待っても動きがなかったので、山道を歩き続けなければなりませんでした。<br>その間、山から車が降りてきて誰も経験しなかったのですが、小さな魔道士が最初に思いついたのは、山に車があるのか​​？ ！ </p>
<p>底に道を譲り、上昇し続ける </p>
<p>しばらく歩いた後、小さな魔道士が突然口を開けました。今は車ではありません。 </p>
<p>すぐに戻る </p>
<p>ちょうど今バス停に戻ると、車が本当にそこで止まっていることがわかりました<br>ドライバーと一緒に予約の詳細を示した後、彼はマスターを拾いました </p>
<p>その間、小天元駅にシャトルはないかと運転手に聞いた。<br>答えは遠すぎます<br>この駅の見つけ方がわかりません<br>名前で見つけたバス停が近くにいくつかあります </p>
<p>小さな魔道士が血を吐くのは、車が戻ってきたのと同じルートに戻ったということです。さらに500m進んだだけで、ホテルの入り口にUターンが到着しました… </p>
<p>小さな魔道士が盲目であるというわけではありません、それは本当に暗すぎて、道を見るのに雨が降っています。 </p>
<p>成田空港から箱根に行くなら、おだきゅうをお見逃しなく </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-2-0</title>
    <url>/ja/Japan-2-2-0/</url>
    <content><![CDATA[<h1 id="藤沢"><a href="#藤沢" class="headerlink" title="藤沢"></a>藤沢</h1><p>幸いなことに、荷物は失われませんでした </p>
<p>鎌倉に住む予定でした<br>旅程を予約せざるを得なかったとき、予約にホテルはありませんでした<br>近くの藤沢に住んでいます </p>
<p>実は鎌倉にとても近い<br>榎島電気鉄道の1日券を購入すれば40分で行けます<br>バスを降りて、途中で榎島を一周できます。 </p>
<p>事実は藤沢が負けないことを証明している<br>湘南ウイングインターナショナルに到着後、特別なアクセスコントロールを取得したので </p>
<div style="width: 300px">
<img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22000.jpg" />
</div>

<a id="more"></a>

<p>受付とエレベーターはすべて前世紀のスタイルです </p>
<p>素晴らしい気分です </p>
<h2 id="朝早本店"><a href="#朝早本店" class="headerlink" title="朝早本店"></a>朝早本店</h2><p>体力不足のため、毎日外出する小さな魔道士は正午近くになります<br>バスを降りた後、隣にウナギのご飯が見えました<br>また、以前東京で一度ウナギを食べました<br>日本のウナギが食べ尽くされるというニュースを聞きました<br>入って見てみました </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22002.jpg" alt=""></p>
<p>百年前の店だとは思っていませんでした<br>当時を振り返ると、それはまだ清王朝でした </p>
<h2 id="鶴岡八幡宮"><a href="#鶴岡八幡宮" class="headerlink" title="鶴岡八幡宮"></a>鶴岡八幡宮</h2><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22001.jpg" alt=""></p>
<p>中には仏像がたくさんあります </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22004.jpg" alt=""></p>
<p>それなら？ 幸せな家族👪？ ？ ？ </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22005.jpg" alt=""></p>
<p>裏中庭 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22006.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22007.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22008.jpg" alt=""></p>
<h2 id="鎌倉大仏"><a href="#鎌倉大仏" class="headerlink" title="鎌倉大仏"></a>鎌倉大仏</h2><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22009.jpg" alt=""></p>
<p>当時、小さな魔道士はまだ中学2年生でした<br>雄大な仏を見る<br>なに、グレートバーニングプラジナ、慈悲の黄金の輪、ティアニン寺院、私の頭脳がすべて出てきた </p>
<p>ただ、ホイゲンはまだ開いておらず、遠くに浮かぶ自然の音も聞こえなかったと思います。 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22010.jpg" alt=""></p>
<p>大仏の後ろを迂回した後、あなたは幻滅するでしょう<br>これは何ですか？ ガンダムのテールインターフェース </p>
<p>振り向く直前、突然右側に<strong>入口</strong>と書かれた小さなドアを見つけました。 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22011.jpg" alt=""></p>
<p>ええと、この仏像は実際に入ることができます </p>
<p>すると、今見た後部翼は内側から見ると窓で、登って眺めることができました╮(￣▽￣ “”)╭ </p>
<h2 id="鎌倉高校"><a href="#鎌倉高校" class="headerlink" title="鎌倉高校"></a>鎌倉高校</h2><p>搭乘江ノ島電鉄 </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22000.mp4">
</video>

<p>鎌倉高校に行く前に </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22012.jpg" alt=""></p>
<p>年齢を明らかにする<br>小さな魔道士は子供の頃スラムダンクを見たことがなかった<br>ですから、レールの上に立っている人たちの状況はわかりません🛤️正面から🚃 </p>
<p>私のヒーローアカデミアと同じように、燃えていると聞きましたか？<br>共鳴がないので、遠くから写真を撮り、目の前のビーチに行って日光浴をし、榎島までハイキングしました。 </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-1-0</title>
    <url>/ja/Japan-2-1-0/</url>
    <content><![CDATA[<h1 id="箱根0"><a href="#箱根0" class="headerlink" title="箱根0"></a>箱根0</h1><p>このホテルを選ぶだけで、何度か行ったことがありますが、箱根ではとても良いとされています<br>リトルメイジの友達は言った </p>
<p>価格を見た後、小さな魔道士は尋ねざるを得ませんでした </p>
<p>「私は一人で行きます、なぜ私はそのような良いホテルに滞在するのですか？」<br>良いホテルは温泉に建てられるので♨️春の目、次に水を引く必要があるとき、温度は保証されません </p>
<p>「一人で行きなさい、なぜあなたはそのような良いホテルに滞在したいのですか？」<br>このホテルは、男性と女性の風呂に行く代わりに、バルコニーに温泉のある部屋を選ぶことができます、それは非常にプライベートです </p>
<p>「私は一人で行きます」<br>長い間働き続けた後、リラックスして卒業旅行に出かけましょう🎓✈️ </p>
<p>それから小さな魔道士は誘惑を助けることができず、箱根コワキエン天竜を命じました<br>名前を聞くと安心します </p>
<a id="more"></a>

<hr>
<h2 id="天悠"><a href="#天悠" class="headerlink" title="天悠"></a>天悠</h2><p>シャトルで小さな魔道士がホテルに引っ張られた後、雨で荷物が濡れていた<br>受付の妹が新しいタオルを取り出して荷物を拭きました🧳そして部屋への配達を手伝いました </p>
<p>小さな魔道士は心の中で不必要だと感じ、長い間山道を登った後、話す力がなく、ため息をつくだけでサービスが良かった。 </p>
<p>ハオが言ったように、温泉はバルコニーにあります<br>横に小さなボタンがあり、硫黄の匂いがする温泉を押すだけでポップアップします。<br>自動販売機に行き、脱水を防ぐためにたくさんのエナジードリンクを購入してから、料理を始めましょう </p>
<p>バルコニーの外には小雨と霧があり、カーテンは山のそよ風でざわめいていた。 </p>
<p>小さな魔道士は、夜遅くまで暑さの上昇を見ながら温泉にとどまり、外の風と雨の音を聞き、すべてが価値があると感じました </p>
<hr>
<p>翌日目を覚ます、霧は晴れていません </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21000.mp4">
</video>

<p>小さな魔道士はとても恥ずかしがり屋で、人に会うのが好きではありません<br>バルコニーに2日間横になる予定でした </p>
<p>しかし、空腹と空腹で、彼は最上階の男性のスープに行きました<br>あっという間にびっくりしました </p>
<p>iPhoneX📱は防水ですが<br>プールには一人しかいなかったが、小さな魔道士が来たとき、彼は去った。 </p>
<p>しかし、この種の率直な場所は公式の写真しか盗むことができません </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21020.jpg" alt=""></p>
<p>うわー、それはポー郡のマリーナベイサンズの無限のプールのように感じます<br>スイミングプールが温泉に取って代わられただけです </p>
<p>それから小さな魔道士は隣に女性のスープがあると思って遠くの山々を見ました<br>階下に行って、女性のスープが実際には階下にあることを見つけてください、そして男性と女性はそれを毎日変えます<br>☯️陰と陽のバランスが良いかどうかわかりません </p>
<p>ですから、最上階のようにすべきではありませんが、家からは山しか見えません。 </p>
<p>それは退屈です、小さな魔道士は翌日部屋を出ないことを計画しています </p>
<p>事実は<br>5階は落ち葉のある小さな池です🍂<br>10メートル以上離れた丘から流れ落ちる滝があります<br>この滝は温泉です </p>
<p>どうしようもなく、当局は写真を与えなかった<br>それは大きな驚きです </p>
<p>朝食も素晴らしいです<br>日本式または洋式をお選びいただけます<br>窓の外は竹林 </p>
<hr>
<h2 id="星の王子さま"><a href="#星の王子さま" class="headerlink" title="星の王子さま"></a>星の王子さま</h2><p>やっぱり調理されます<br>リトルメイジは外に出て散歩しなければなりませんでした </p>
<p>隣に小さな王子様のお寺(美術館)があるのでびっくりしました </p>
<p>PS：小さな魔道士の最初の愛は小さな王子を愛しています </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21000.jpg" alt=""></p>
<p>早くも3102年1月、小さな魔道士は小さな王子を研究していました<br>このシリーズのタイムラインも後で発生します<br>そのため、名前は多かれ少なかれインスピレーションを得ました </p>
<h3 id="リトルプリンス航空機"><a href="#リトルプリンス航空機" class="headerlink" title="リトルプリンス航空機"></a>リトルプリンス航空機</h3><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21001.jpg" alt=""></p>
<h3 id="リトルプリンスローズ"><a href="#リトルプリンスローズ" class="headerlink" title="リトルプリンスローズ"></a>リトルプリンスローズ</h3><blockquote>
<p>私のバラ、他の人は彼女があなたのようだと思っていますが、彼女だけがあなたのすべてよりも優れています。 彼女は私に水をやられたからです。 彼女をフラワーカバーに入れたからです。 彼女はスクリーンで守られていたからです。 彼女の毛虫を取り除いたからです。 彼女の不満、自慢、そして時には沈黙を聞いたからです。 彼女は私のバラだからです。 </p>
</blockquote>
<blockquote>
<p>広大な星の海に咲く花が好きなら、星を見上げると満足感があります </p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21002.jpg" alt=""></p>
<hr>
<p>とてもお腹がすいた、初恋は小さな魔道士をマジックアカデミーで3年間待たせました<br>そしてついに集まって一週間で彼を捨てた<br>だから小さな魔道士は家を嫌い、ウーは小さな王子に愛情を持っていません<br>なぜ世界中で尊敬されているのか分かりません </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21003.jpg" alt=""></p>
<p>ラウンド後、クリスタルミュージアムに出かけました </p>
<h2 id="箱根ガラスの森美術館"><a href="#箱根ガラスの森美術館" class="headerlink" title="箱根ガラスの森美術館"></a>箱根ガラスの森美術館</h2><p>次のようになっているはずです。 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21021.jpg" alt=""></p>
<p>小さな魔道士が見たのはこれでした： </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21022.jpg" alt=""></p>
<p>ここだけがおとぎ話のようです<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21004.jpg" alt=""></p>
<h2 id="強羅公園"><a href="#強羅公園" class="headerlink" title="強羅公園"></a>強羅公園</h2><p>次のようになっているはずです。 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21003.jpeg" alt=""></p>
<p>小さな魔道士が駆け寄って見ました： </p>
<p>閉じたティールーム<br>ベアモスガーデン<br>バラ園はロマンチックではありません🌹🌹🌹 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21011.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21023.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21009.jpg" alt=""></div></div></div>

<p>だから最近、小さな魔道士は彼女の姉にパンフレットのような絵を作る方法を教えるようにせがんでいます<br>🐶🐶🐶 </p>
<hr>
<p>それでも、小さな魔道士はまだ苔竹林のそびえ立つ木々と白い雲を見ました </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21008.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21006.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21010.jpg" alt=""></div></div></div>

<p>秦以前の古代人の書物にも同じ風景があります </p>
<blockquote>
<p>Bai Hua Jian Xi、Bai Mao Shu Xi 私の息子は遠く離れていて、私を放っておいてくれます！<br>Yingying Baiyun、スワロフスキーを披露。 日は難しいです、息子は嫉妬していません！<br>-「シャオヤバイファ」 </p>
</blockquote>
<hr>
<p>季節は正しくありません、利益と損失があります </p>
<p>戻って肉を調理しましょう<br>小さな魔道士は自分を慰めた </p>
<p>次に、ドイツの🇩🇪姉妹紙が強制的に飲み物をアムウェイします🥤 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21005.jpg" alt=""></p>
<p>次に、追加の缶を購入して、ギフトとして持ち帰ります🎁 </p>
<h2 id="ポーラ美術館"><a href="#ポーラ美術館" class="headerlink" title="ポーラ美術館"></a>ポーラ美術館</h2><p>ポーラ美術館 </p>
<p>小さな魔道士は良いことを見ました </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21100.jpg" alt=""></p>
<p>私はすぐにそれを写真に撮り、それをママとパパに送りました👨👩あなたが2セットを購入したいかどうか尋ねました<br>パーキンソンのディナーをお持ちの場合は、転ぶことを恐れません </p>
<!--more-->

<h2 id="バス"><a href="#バス" class="headerlink" title="バス"></a>バス</h2><p>いつも使いやすいグーグルマップが箱根を吸い込む </p>
<p>ここのバス🚌はとても魅力的です<br>大都市でこれまで問題に遭遇したことはありません </p>
<p>ただし、お腹が空いたら、日本が左側を旅しているとは言わないでください。地図は読みやすいです。<br>最も嘔吐する血は、バス停の標識が出発駅-ターミナル駅を示していないということです<br>山道には車がないので方向がわかりにくい<br>通りすがりの人は少なく、出会う人は英語があまりわからない </p>
<p>バス停まで歩くたびに、車が来るのを見て追いかけるべきかどうかわかりません。<br>そして、常にドライバーに正しいことをしたかどうか尋ねてください </p>
<h2 id="大脇谷"><a href="#大脇谷" class="headerlink" title="大脇谷"></a>大脇谷</h2><p>彼らはあなたを憎む </p>
<p>強羅でケーブルカーをやってください🚠 </p>
<p>ふと富士山を見た🗻 </p>
<p>ケーブルカーではありますが、エレガントなアークはまだ素晴らしいです </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21101.jpg" alt=""></p>
<p>2か月前にCourseraでAndrewNgの機械学習を終えたばかりなので<br>前の<a href="https://leihao0.github.io/Logistic-Regression/">メモ📒</a>を裏返します<br>ガウス分布方程式を思い出してください </p>
<p>$$g(x)=\frac{1}{\sigma \sqrt{2\pi }}^{-\frac{1}{2}( \frac{(x-\mu )}{\sigma} )^{2}}$$</p>
<p>富士山🗻は二次元要素ではないため、直接使用することはできません。式を変形して$ \ mu $を削除する必要があります。 </p>
<p>$$z=\frac{20}{\sigma \sqrt{2\pi }}^{-\frac{R^{2}}{2\sigma^{2}} }, \sigma= 2, R = \sqrt{ x^{2} + y^{2}}$$</p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21100.mp4">
</video>

<p>もちろん高さと傾斜は間違っています<br>線形回帰を使用して試してみることができます。当然、人間のトーンは必要ありません。<br>もちろん🗻上部は凹んでいて、スマイルカーブを重ねる必要があります </p>
<p>..。 </p>
<p>ちょうどその時、ケーブルカー🚠が最高点を通過しました </p>
<p>山のそよ風が吹き、🚠が激しく揺れ始めました<br>⛰の下の山はまだ煙を出している<br>とても背が高いですが、それでも刺激的な硫黄のにおいがします </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21101.mp4">
</video>

<p>ここに温泉があるのも不思議ではありません♨️ </p>
<p>車を降りたとき、人間よりも大きな卵がありました🥚<br>後ろに富士山が見えます🗻今は雲のようです </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan-2113.jpg" alt=""></p>
<p>ドイツの女の子🇩🇪は小さな魔道士に、食べるには卵を買わなければならないと言いました🥚 </p>
<p>小さな魔道士ははっきりしていませんが、外国の卵🥚は本土の庭園よりも優れていますか？ </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan-2112.jpg" alt=""></p>
<p>さて、ここの卵は黒いです🌚🌚🌚 </p>
<p>一度に5つ食べましたが、違和感はありませんでした </p>
<p>その間に、ヨーロッパとアメリカの女の子が小さな魔道士に卵殻を割る方法を尋ねました<br>どうしようもないノックする方法がわからない<br>ドアを指さした </p>
<p>驚いた姉妹紙<br>「ドアに対して???」 </p>
<p>ああ、私はに対して使用しました </p>
<h2 id="箱根芦ノ湖-成川美術館"><a href="#箱根芦ノ湖-成川美術館" class="headerlink" title="箱根芦ノ湖 成川美術館"></a>箱根芦ノ湖 成川美術館</h2><p>🚠下車後、東源台港から船に乗り込み、箱根海賊船が芦湖を一周して元羽港で下船 </p>
<p>搭乗前にファーストクラスを購入することを忘れないでください。そうしないと、チケットを持っていない可能性があり、それを補うことができません。<br>外の山風に邪魔されます </p>
<p>でも以前大阪で似たようなことをしたので新しさはあまりありません<br>アートギャラリーで彫刻を見ました </p>
<p>とても微妙<br>素材はアイボリーであることが判明 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21102.jpg" alt=""></p>
<p>これはさらに素晴らしいです<br>これが花です<br>それで、これはWan ** hua **チューブの名前ですが、その起源は？ </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21102.mp4">
</video>

<p>美しく静かな雪景色 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21103.jpg" alt=""></p>
<p>次に、アートギャラリーのコーヒーショップ☕️ショップで<br>富士山を見る🗻閉まるまでぼんやり </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21104.jpg" alt=""></p>
<hr>
<p>一般的に言って、旅行メモは良い面だけに言及しています<br>まるでこれらの人々が荷物や備品なしでアトラクションにパラシュートで移動したかのようです </p>
<p>リトルメイジも例外ではありません<br>温泉で荷物をチェックできるので♨️ホテル<br>住所を追加するだけで、荷物が自動的に渡されます🧳 </p>
<p>小さな電車を北に乗ると、とてもいい音がします。<br>かつて藤沢駅(藤沢駅)に到着した疑い<br>荷物🧳は永遠に箱根にとどまります </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-3-0</title>
    <url>/ja/Japan-2-3-0/</url>
    <content><![CDATA[<h1 id="Yokohama-横浜市"><a href="#Yokohama-横浜市" class="headerlink" title="Yokohama 横浜市"></a>Yokohama 横浜市</h1><p>しばらくの間、小さな魔道士は彼が帝国の首都に戻ったと思った </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23000.jpg" alt=""></p>
<a id="more"></a>

<p>帝都で3。5年間生き残ったから<br>チャイナタウンには興味がない<br>ええと、日本人でも興味がないです </p>
<p>決して考えない<br>ここまで飛んでも北京ホテルが見える<br>直接無視してください。昼休みにチェックインしてください </p>
<p>モントレーは海のそばにあるので<br>どれくらい寝たかはわかりませんが、遠くの笛で目が覚めました<br>カーテンを開けて見た<br>フィルターを追加するのは美術館で見られる油絵だと思います </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23001.jpg" alt=""></p>
<p>サイレンに目覚めたのは気持ちいいから<br>出てきて海を歩いた </p>
<p>岸に浮かんでいるかわいいアヒルがいます<br>準備するとき📷、シャオ🦆は釣りをするために水に飛び込みました🐟行きました<br>ええと、🦆ダイビングできます🤿ああ </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23003.jpg" alt=""></p>
<p>日本の海はとてもきれいで、臭いはありません </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23002.jpg" alt=""></p>
<h2 id="氷川丸"><a href="#氷川丸" class="headerlink" title="氷川丸"></a>氷川丸</h2><p>ＮＹＫ ひかわまる<br>日本郵船氷川丸 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23004.jpg" alt=""></p>
<p>この船を訪れることができることがわかりました<br>当初は巡航船でしたが、後に第二次世界大戦に参加しました<br>引退後、故郷に帰る </p>
<p>これは前のサイレンの音ですか？<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23009.jpg" alt=""></p>
<p>これから女性用トイレはありません<br>幸いなことに、小さな魔道士は男性です </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23007.jpg" alt=""></p>
<p>ファーストクラスのキャビンには、食べたり、読んだり、シャワーを浴びたりできる大きな窓が複数あります🛀<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23008.jpg" alt=""></p>
<p>三等キャビンは小さな魔道士のようなもので、マジックアカデミーの寮は絞って寝るしかありません<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23010.jpg" alt=""></p>
<p>残念ながら、昭和16にはこんなに大きなギャップはありますか？ </p>
<h2 id="象の鼻防波堤"><a href="#象の鼻防波堤" class="headerlink" title="象の鼻防波堤"></a>象の鼻防波堤</h2><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23005.jpg" alt=""></p>
<h2 id="大さん橋ホール"><a href="#大さん橋ホール" class="headerlink" title="大さん橋ホール"></a>大さん橋ホール</h2><p>飛行機が羽田空港の屋上で離着陸するのを見て以来<br>知っておいてください🇯🇵ほとんどの大きな建物は観光である必要があります </p>
<p>しかし、これは単なるドックです<br>冷凍、劇場も素晴らしい気がします </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23006.jpg" alt=""></p>
<hr>
<p>ひかわ丸の近くで横浜観光フェリーのチケットを購入できます<br>海上で1〜2時間、船上で夕食を提供します。お腹を空かせることはありません。 </p>
<p>飲む🥤その後ろにはキャンドルがあります🕯️、キャンドルライトはボートでちらつきます🚢 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23000.gif" alt=""></p>
<p>ロマンチックに見えない<br>確かに、他のテーブルはペアになっています<br>ここの小さな魔道士だけが立ってぶら下がっている人です </p>
<p>悲しいかな、姉妹紙があればいいのに </p>
<h2 id="原鉄道模型博物館"><a href="#原鉄道模型博物館" class="headerlink" title="原鉄道模型博物館"></a>原鉄道模型博物館</h2><p>原鉄道模型博物館 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23100.jpg" alt=""></p>
<!--more-->

<p>突然巨大な建物を見た<br>リトルメイジはシェルドンほど取りつかれていませんが<br>でも、中のあらゆる種類の小さな電車を見るのはまだ楽しいです </p>
<p>例えば、前に山を登った箱根ナンバーを見ました<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23101.jpg" alt=""></p>
<p>それは学校で家に帰る小さな緑の電車のようなものです<br>もちろんこれはトラムです🚃<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23102.jpg" alt=""></p>
<p>南海忍者？<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23103.jpg" alt=""></p>
<p>ハリーポッターの種類<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23104.jpg" alt=""></p>
<p>そして空に<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23105.jpg" alt=""></p>
<p>私は本当にショックを受けました<br>大きな部屋全体<br>岩場、トンネル、都市と地方の中央駅があります </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23100.mp4">
</video>

<p>最初は後ろのアンテナを見て、高電圧ケーブルだと思いました<br>後で、ケーブルカー🚠が岩場からゆっくりと降りてくるのを見つけました⛰️ </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23102.mp4">
</video>

<p>子供がいる場合は、ディスパッチャになることができます<br>レールを制御する🛤️方向 </p>
<p>後ろに横浜のモデルがあります<br>フェリスホイールには時間があります🎡、約3分は1日です<br>6時に出発し、地下鉄は996,233を超えて夕方10時までに時間通りに停止します </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23101.mp4">
</video>

<p>本当にバンカーだとしか言えない<br>それが男の子なら、それは超お勧めです </p>
<h2 id="三菱みなとみらい技術館"><a href="#三菱みなとみらい技術館" class="headerlink" title="三菱みなとみらい技術館"></a>三菱みなとみらい技術館</h2><p>みつびし みなとみらい いんづｓｔりあｌ むせうｍ </p>
<p>自然の力<br>数分であなたを押しつぶします </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23107.jpg" alt=""></p>
<p>ああ、ANAがあります<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23108.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23109.jpg" alt=""></p>
<p>大艦 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23110.jpg" alt=""></p>
<p>箱根丸 鎌倉丸<br>すべての有名な都市に船があるということでしょうか？<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23116.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23117.jpg" alt=""></p>
<p>駐車場の半分を食べた巨大なクルーズ船🇮🇹をもう一度思い出しました🚢<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23118.jpg" alt=""></p>
<h2 id="横浜ランドマークタワー"><a href="#横浜ランドマークタワー" class="headerlink" title="横浜ランドマークタワー"></a>横浜ランドマークタワー</h2><p>横浜ランドマークタワー </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23106.jpg" alt=""></p>
<p>中には世界最速のエレベーターがあります<br>しかし、2004年には私の姉がいる台北101に追い抜かれました。<br>これは40秒で頂点に達することができます。最高速度は750m / minです。<br>実際には非常に安定していますが、耳が痛い場合があります </p>
<h2 id="スカイガーデン"><a href="#スカイガーデン" class="headerlink" title="スカイガーデン"></a>スカイガーデン</h2><p>スカイガーデン </p>
<p>上に360の観測デッキがあります<br>フェリスホイール🎡も非常に小さくなりました </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23111.jpg" alt=""></p>
<p>最も楽しいのは、建物の上の薄暗い合計が階下のものとあまり変わらないということです<br>また、建物の高さに応じて巨大なアイスクリームを提供します🍦 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23113.jpg" alt=""></p>
<p>安心して座って食事をし、夕日を眺めましょう(なぜまた夕日になるのですか🌄) </p>
<p>核爆発現場<br>太陽🌞が富士山に当たる🗻<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23112.jpg" alt=""><br>さて、これは通常の回折現象であるはずですか？ </p>
<p>アイスクリームが大きすぎるので<br>暗くなるまで食べた<br>私は本当に夜のシーンを見ることから意図的に離れていませんでした </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23114.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23115.jpg" alt=""></p>
<hr>
<p>21世紀のミラエ港になるにふさわしい<br>あなたはそれが90年代に建設を始めたことを知っています<br>ランドマークタワーは1993年にすでにそこにありました </p>
<p>海辺の埠頭のサイレンかどうか⛵️<br>まだきれいな海<br>そして現代の都市<br>小さな魔道士にそれが素晴らしい、素晴らしい、素晴らしいと思わせる </p>
<p>残念ながら、旅程はたった2日です<br>ゴージャスなフェリスホイールを見て、東京に戻る準備ができました </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23100.gif" alt=""></p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-4-0</title>
    <url>/ja/Japan-2-4-0/</url>
    <content><![CDATA[<h1 id="東京"><a href="#東京" class="headerlink" title="東京"></a>東京</h1><div id="googleMap5495" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap5495'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 11,
       'center': new window.google.maps.LatLng( 35.710 , 139.808 ),
     },
     target = document.getElementById('googleMap5495'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.7100627 , 139.8085117 ),
        'map': map,
        'title': 'Tokyo Skytree',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Tokyo Skytree'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.6267108 , 139.8828892 ),
        'map': map,
        'title': 'Tokyo DisneySea',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Tokyo DisneySea'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.6398972 , 139.859985 ),
        'map': map,
        'title': 'Tokyo Sea Life Park',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Tokyo Sea Life Park'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 35.6193359 , 139.7742108 ),
        'map': map,
        'title': 'National Museum of Emerging Science and Innovation',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'National Museum of Emerging Science and Innovation'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<h2 id="東京スカイツリー"><a href="#東京スカイツリー" class="headerlink" title="東京スカイツリー"></a>東京スカイツリー</h2><p>東京に着いたのはもう正午でした<br>今回は隣のリッチモンドホテルに泊まりましたが、部屋はいつものように小さくて絶妙です<br>道の向こうには澄んだ空の木があります<br>ホテルの特別なレストランは、実際には北京を頻繁に訪れるシズラーです。 </p>
<a id="more"></a>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-00.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-03.jpg" alt=""></div></div></div>

<p>前回来た時は上がって見てみました。その時はアタックジャイアントというテーマがありましたが、残念ながらキャプテンを知りませんでした。 </p>
<p>また、時間が短かったので、下に巨大なモールがあることに気づきませんでした。 </p>
<p>昼寝後、夕方に目が覚めました🌆、散歩のためにモールに行きました </p>
<p>ハリーポッターのテーマに取り組んでいることがわかりました </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-04.jpg" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-07.jpg" alt=""></div></div></div>

<p>もっとたくさんのポケモンがあります<br>特別なポケモンしか見たことがないので、初代のポケモンしか知りません。<br>ジェニータートル、ファットディン、ワンダーフロッグタッドポール、ガウス、リトルファイアドラゴン、クイックドラゴン、ピカチュウ、カビモンなど。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-10.jpg" alt=""></div></div></div>

<p>最後のアニメは何ですか？ ライブが大好き！サンシャイン？ これは他に何ですか？ </p>
<h2 id="東京ディズニーシー"><a href="#東京ディズニーシー" class="headerlink" title="東京ディズニーシー"></a>東京ディズニーシー</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-13.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-14.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-16.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-17.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-19.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-20.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-21.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-22.jpg" alt=""></div></div></div>

<p>🇯🇵世界で唯一のDisneySeaテーマパークと言われています<br>だから隣のディズニーパークには行かなかった </p>
<p>タイタニック、火山🌋、寺院🛕 </p>
<p>でも雨が降っていた<br>スタッフはまだ熱心に雰囲気を作っていますが<br>でも、スウィッシュな天気には耐えられない<br>さわやか </p>
<p>プラスエクスプレスチケットなし<br>ポップコーン🍿️整列するのに1時間かかります<br>2時間のバンパーボートのような他のプロジェクト </p>
<p>急いで<br>出てきた </p>
<p>非常に貧弱な経験<br>前回の大阪のユニバーサルスタジオよりもはるかに楽しい </p>
<p>ディズニーは1日遊べると思いました<br>結果は10時に出ました<br>恥ずかしすぎて歩き回るしかない </p>
<h2 id="東京シーライフパーク"><a href="#東京シーライフパーク" class="headerlink" title="東京シーライフパーク"></a>東京シーライフパーク</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-25.jpg" alt=""></div></div></div>

<p>遠くからの展望台だと思った<br>大きな顔、あなたは笑っていますか😂<br>そして小さなペンギン </p>
<h2 id="国立新興科学革新博物館"><a href="#国立新興科学革新博物館" class="headerlink" title="国立新興科学革新博物館"></a>国立新興科学革新博物館</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-27.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-28.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-29.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-31.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-32.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-33.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-34.jpg" alt=""></div></div></div>

<p>BSOD、AIホラーバレー、胎児 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-37.jpg" alt=""></div></div></div>

<p>出てきて隣にボートを見つけました🚢<br>よく見ると、建物、船の科学博物館であることがわかりました<br>残念ながら閉鎖されています </p>
<p>後ろの建物の真ん中にあるボールはプラネタリウムです </p>
<h2 id="大台場の自由の女神のレプリカ"><a href="#大台場の自由の女神のレプリカ" class="headerlink" title="大台場の自由の女神のレプリカ"></a>大台場の自由の女神のレプリカ</h2><p>回り続ける<br>遠くから見た👀、待って、それは自由の像🗽ですか？ ？ ？<br>後ろにあるのはゴールデンゲートブリッジですか？ ？ ？ </p>
<p>入って見てみました、本当に…<br>私の心🧠はきらびやかな文<strong>偽物</strong>を点滅させました </p>
<p><a href="https://en.wikipedia.org/wiki/Replicas_of_the_Statue_of_Liberty">自由の像の複製</a> </p>
<blockquote>
<p>1998年4月から1999年5月までの「日本のフランスの年」を記念して、シグネス島からフランスの自由の像が東京の大台場にやって来ました。 [3]その人気のために、フランスの自由の像のレプリカが2000年に同じ場所に建てられました。 また、日本では、大阪のアメリカ村(アメリカンビレッジ)のショッピング街に小さな自由の像があります。 もう一つのレプリカは、青森県美沢市南部下田町近くの及瀬[71]にあり、8000人の米空軍基地です。 2011年の東北地震と津波により、宮城県石ノ巻市の自由の像の複製が破損した。 [72]豊山県大矢部市にもレプリカがある。 [73] </p>
</blockquote>
<p>それでおしまい </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-40.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-39.jpg" alt=""></div></div></div>

<h2 id="まで"><a href="#まで" class="headerlink" title="まで"></a>まで</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-42.jpg" alt=""></div></div></div>

<p>ワオ </p>
<p>ガンダムシードを見たり、クラスメートからディスクを借りたりすることを忘れないでください👨‍🎓私が高校生だったとき💽家でこっそり見てください<br>数年前にリメイクがありましたが、やっぱり見たことがありません<br>私の若さは終わった </p>
<p>プロットか何かを今思い出せない<br>キラの自由ガンダムを覚えておいてください<br>雰囲気を突破する<br>スティックをたくさん切る<br>それから飛び去った </p>
<p>しかし、これはUniqloの前にあります<br>ハローとコーナーを見る<br>これはユニコーンでなければなりません🦄️<br>幸いなことに、後でUCの映画、ラプラスのアンデッドなどを見ました。それ以外の場合は、もう一度わかりません。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-43.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-44.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-41.jpg" alt=""></div></div></div>

<p>隣のお店にバイヤーがいます </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-45.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-46.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-4-1</title>
    <url>/ja/Japan-2-4-1/</url>
    <content><![CDATA[<h1 id="東京"><a href="#東京" class="headerlink" title="東京"></a>東京</h1><div id="googleMap5528" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap5528'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 13,
       'center': new window.google.maps.LatLng( 35.705 , 139.774 ),
     },
     target = document.getElementById('googleMap5528'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.6853037 , 139.756059 ),
        'map': map,
        'title': 'Ninomaru Garden',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Ninomaru Garden'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.6943813 , 139.7517535 ),
        'map': map,
        'title': 'Science Museum',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Science Museum'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.7166529 , 139.7691198 ),
        'map': map,
        'title': 'Ueno Zoo',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Ueno Zoo'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 35.7096274 , 139.7982875 ),
        'map': map,
        'title': 'Azumabashi',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'Azumabashi'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<h2 id="皇居"><a href="#皇居" class="headerlink" title="皇居"></a>皇居</h2><p>実際、皇居に入ることができず、裏庭しか見ることができません </p>
<p>江戸城 二の丸庭園 </p>
<p>まだ3月下旬なので、桜の一部だけが満開です🌸<br>真ん中にオレンジもあります🍊… </p>
<p>Xiaoqiao Liushui Renjia<br>真ん中には水やおやつ、お土産を売る小さなパビリオンがあります </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-01.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-04.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-12.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-14.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-18.jpg" alt=""></div></div></div>

<h2 id="国立近代美術館、東京"><a href="#国立近代美術館、東京" class="headerlink" title="国立近代美術館、東京"></a>国立近代美術館、東京</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-20.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-21.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-22.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-25.jpg" alt=""></div></div></div>

<h2 id="科学技術博物館"><a href="#科学技術博物館" class="headerlink" title="科学技術博物館"></a>科学技術博物館</h2><p>初期の自転車🚴、アクロバットをするような<br>なんて大きなダイヤモンド💎<br>シンカンセン🚄ホイール<br>多次元空間のふりをする<br>まったく目がくらむことのないターンテーブル </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-27.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-29.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-30.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-32.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-33.jpg" alt=""></div></div></div>

<p>夕方に🌃戻ってモールを通過し、たくさんの幸運な猫を見てください🐱<br>会社を始めた小さなパートナーは、1つを取り戻したいと思っていました </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-34.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-35.jpg" alt=""></div></div></div>

<p>ホテルに戻ると、スカイツリーの形をしたボトル入りの水を見つけました<br>鉛筆を買った<br>季節の桜もあります🌸風味のコーラ😂<br>味は神が好むストックよりもはるかに普通です </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-66.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-37.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-38.jpg" alt=""></div></div></div>

<h2 id="国立科学博物館"><a href="#国立科学博物館" class="headerlink" title="国立科学博物館"></a>国立科学博物館</h2><p>若い頃に見た恐竜🦕化石をたくさん見ました<br>私のお気に入りの3つ </p>
<h3 id="ティラノサウルス🦖"><a href="#ティラノサウルス🦖" class="headerlink" title="ティラノサウルス🦖"></a>ティラノサウルス🦖</h3><blockquote>
<p>ティラノサウルスとしても知られるティラノサウルスレックス(学名：ティラノサウルスレックス)は、現在、ティラノサウルスの唯一の有効な種です。ティラノサウルスファミリーの巨大な恐竜に属しています。名前のラテン語の意味は「トカゲの中」です。 暴君”。 長さは最大13メートル[1]、腰の高さは約4メートル[2]、平均重量は約9メートルトンと推定されています。 …その咬合力はほぼ6メートルトンで、象の体重に相当します[3]。 </p>
</blockquote>
<h3 id="トリセラトプス"><a href="#トリセラトプス" class="headerlink" title="トリセラトプス"></a>トリセラトプス</h3><blockquote>
<p>TriceratopsおよびTriceratopsとして一般に知られているTriceratops属(属名：Triceratops)は、植物を食べる恐竜であるOrnithischianCeratosaurusの属です。 Triceratopsは中型、4本足、長さ約7〜10メートルです…これはすべての恐竜の中で最新の恐竜種の1つであり、<strong>鳥の形をしていない恐竜</strong>を占める最大かつ最後のセラトプサウルス恐竜でもあります。 地球上の最後の期間の陸域生態系の大部分(後期白亜紀) </p>
</blockquote>
<h3 id="ステゴサウルス"><a href="#ステゴサウルス" class="headerlink" title="ステゴサウルス"></a>ステゴサウルス</h3><blockquote>
<p>ステゴサウルスは、本、漫画、テレビ、映画に最も頻繁に登場する恐竜の1つであり、植物を食べる恐竜の非常に有名な代表ですが、ステゴサウルス、ティラノサウルス、トリセラトプスは同じ時代に住んでいません(ステゴサウルス) ジュラ紀では、トリセラトプスとティラノサウルスは白亜紀でした)、ステゴサウルスの主な敵はアロサウルス、バルバロサウルス、リザルディボラスでした </p>
</blockquote>
<h3 id="トリロバイト"><a href="#トリロバイト" class="headerlink" title="トリロバイト"></a>トリロバイト</h3><blockquote>
<p>それは最初にカンブリア人に現れ、古生代初期にピークに達し、その後徐々に減少して消滅しました。 最新のトリロバイト(セノプテラ)は、2億5000万年前のペルミアン時代の終わりに生物相の絶滅で姿を消しました </p>
</blockquote>
<p>そしてクジラ🐳<br>象🐘家族の歴史 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-39.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-40.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-41.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-43.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-44.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-45.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-47.jpg" alt=""></div></div></div>

<h3 id="人類パビリオン"><a href="#人類パビリオン" class="headerlink" title="人類パビリオン"></a>人類パビリオン</h3><p>この長い時間の川の中で、人間の進化は容易ではないと感じています<br>教科書にあるラッキーのコピーが目の前にあり、たった1メートルほどです<br>骨でできた家に住む<br>老人が私より背が高くなるまで待つ </p>
<blockquote>
<p>今日、すべての人間は単一のグループ、Homo sapiens sapiensに属しており、種の区分はありません。 ただし、「アフリカ原産」モデルによると、これはホモ属の最初の種ではありません。ホモの最初の種であるホモ属は、少なくとも200万年前に進化し、ホモの人々はアフリカでの生活が異なります。 この地域の時間は比較的短いです。「ホモエレクトゥス」は180万年以上前に進化し、150万年前までに旧世界に広がりました。 </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-50.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-51.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-48.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-49.jpg" alt=""></div></div></div>

<h3 id="赤い巨人"><a href="#赤い巨人" class="headerlink" title="赤い巨人"></a>赤い巨人</h3><p>今の巨大なダイヤモンドと組み合わせると💎、ダイヤモンドリングを購入する必要があるかどうかの質問が含まれます<br>よく知られている </p>
<blockquote>
<p>カーボンには、ダイヤモンド、グラファイト、フラーレンの3つの既知のアロトロープがあります。 熱力学の観点から、ダイヤモンドはグラファイトよりも安定性が低く、<strong>自然にグラファイト</strong>に変化する可能性がありますが、常温常圧下でのこの変化の速度は非常に遅く、無視できるため、ダイヤモンド💎は安定して存在できます。 自然界に形成されるダイアモンドは、一般に地球内部の高温高圧環境で形成され、その後、火山噴火などの地質構造運動によって地表に運ばれるため、火山の近くに多くのダイアモンドが見られます。 現代の産業は、合成ダイヤモンドと呼ばれる高温高圧下でダイヤモンドを生産することができます </p>
</blockquote>
<p>したがって、ダイヤモンドリングには、他の人の目を盲目にする🦚機能以外の用途はありません。<br>太陽の拡大鏡は言うまでもなく🌞🔍は蒸発します </p>
<p>そして金やプラチナなどの重金属 </p>
<blockquote>
<p>金の原子数は、宇宙に自然に存在する要素の中でより高いです。 この重い元素は、2つの中性子星が衝突した超新星核合成中に生成されたと考えられており[4]、太陽系が形成される前にすでに塵の中に存在していた。 地球は形成された時点ではまだ溶融状態であったため、初期の地球のほとんどすべての金がコアに沈んでいます。 したがって、地球の地殻と外套の金の大部分は、小惑星の衝突の後の激しい爆撃期間(約40億年前)によるものです。<br>ゴールドは、歴史に記録される前は人気のある貴金属であり、通貨、価値の保存、宝石、芸術に使用されていました。 過去には、金ベースの金標準通貨システムは一般的に国内外で実施されていましたが、金貨は1930年代に流通しなくなりました。 1970年代、ブレトンウッズ協定の終了とともに、世界的なゴールドスタンダードがついに法定入札制度に取って代わられました。 しかし、その希少性、容易な製錬、加工および造語、独特の色、耐食性、および他の物質に対する耐性のために、金の価値は低下しません。 </p>
</blockquote>
<p>またね </p>
<p>もちろん、それは悪いお金でも購入でもありません💎<br>もちろん、結婚したいガールフレンドがいることが前提です🎎 </p>
<h3 id="重力波"><a href="#重力波" class="headerlink" title="重力波"></a>重力波</h3><blockquote>
<p>重力波観測所(英語：重力波観測所)は、重力波天文学で重力波を検出するために使用されるデバイスです。 重力波は、空間と時間の質量を加速することによって引き起こされる波紋です。 アルバートアインシュタインは1916年に最初に重力波の概念を提案しました。 [1]重力波を検出することにより、一般的な相対性を実験的に検証できます。 一般的に使用される検出器には、ロッド検出器とレーザー干渉計があります。これらの検出器の主な動作原理は、2つの離れた場所の間の距離に対する重力波の影響を測定することです。 1960年代以降、複数の重力波検出器が次々と構築され、起動され、検出器の感度が継続的に向上しています。 </p>
</blockquote>
<p>そして様々な動物モデル<br>パビリオンの外に巨大な青いクジラがいます </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-53.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-54.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-56.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-57.jpg" alt=""></div></div></div>

<h2 id="上野動物園"><a href="#上野動物園" class="headerlink" title="上野動物園"></a>上野動物園</h2><p>以前動物園に行くたびに、タイガーパビリオンは改装中か閉店間近でした。<br>ついに虎を見た🐯<br>ヘッドスカーフを身に着けているゴリラ<br>誤って見つめ合って目を見た<br>猿の惑星を考えて、即座にコールドバック </p>
<p>Anteaterまたは？<br>オーストラリアに行く前にカンガルーを見たことがあることがわかりました🦘 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-58.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-61.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-62.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-59.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-60.jpg" alt=""></div></div></div>

<p>クロージングを見た後、戻る<br>あずま橋を通過<br>前回スカイツリーで見た黄色い点を見てください☁️または🍦？ </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-64.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-65.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-67.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-68.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-69.jpg" alt=""></div></div></div>

<h2 id="戻る"><a href="#戻る" class="headerlink" title="戻る"></a>戻る</h2><p>翌日のチェックアウト後、階下に行き、成田空港線で空港に戻ります。<br>チケットを受け取るとき、女性は彼女が一人であるかどうか尋ねました<br>なぜ単一の王にまだダメージがあるのか​​説明できない🐶 </p>
<p>それから若い女性は喜んで知らせました：<br>ビジネスクラスにアップグレードしました<br>今後もJALで飛んでいきたいと思います </p>
<p>航空会社がアップグレードのためにランダムに一部の顧客を選択したことが判明しました </p>
<p>幸運な </p>
<p>ただし、このガチョウのアップグレードは、航空機のビジネスクラスに限定されています<br>以前の自己資金によるANAオールニッポンエアウェイズとは異なり<br>シャワー付きのファーストクラスのラウンジへのアクセス </p>
<hr>
<p>もちろん、ビジネスクラスはいつものように快適です<br>飛行機で寝た<br>これでこの10日間の🇯🇵旅行は終わりです </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>MacでiMessageをスケジュールする方法</title>
    <url>/ja/How-to-schedule-iMessages-on-Mac/</url>
    <content><![CDATA[<p>最初にMacで <code>Terminal</code>を開き、次に以下の手順に従って、次のコマンドラインをコピーして貼り付けます。 </p>
<h2 id="ShellでiMessageを送信する"><a href="#ShellでiMessageを送信する" class="headerlink" title="ShellでiMessageを送信する"></a><code>Shell</code>でiMessageを送信する</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">file=<span class="string">&quot;<span class="variable">$HOME</span>/Documents/sendiMessage.sh&quot;</span></span><br><span class="line">str=<span class="string">&#x27;tell application &quot;Messages&quot; to send &quot;TEXT&quot; to buddy &quot;NAME&quot;&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;#!/bin/zsh \nosascript -e &#x27;<span class="variable">$str</span>&#x27;&quot;</span> &gt; <span class="variable">$file</span></span><br><span class="line">open <span class="variable">$file</span></span><br></pre></td></tr></table></figure>

<p>デフォルトのテキスト編集アプリケーションで開かれたファイルが表示されます。次のように表示されます。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#/bin/zsh</span></span><br><span class="line">osascript -e <span class="string">&#x27;tell application &quot;Messages&quot; to send &quot;TEXT&quot; to buddy &quot;NAME&quot;&#x27;</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p><code>TEXT</code>を送信したいテキストに置き換え、<code>NAME</code>を <code>Contacts</code>アプリケーションの名前に置き換える必要があることに注意してください。<br>ファイルを<strong>保存</strong>することを忘れないでください。 </p>
<h2 id="Macの-Crontab"><a href="#Macの-Crontab" class="headerlink" title="Macの Crontab"></a>Macの <code>Crontab</code></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo touch /etc/crontab</span><br></pre></td></tr></table></figure>

<p><code>com.vix.cron</code>は<code>/ etc / crontab</code>がmacOSに存在するかどうかをチェックするため、上記の行を実行する必要があります。<br>Macのパスワードを入力します。 </p>
<h2 id="Crontabでシェルをスケジュールします"><a href="#Crontabでシェルをスケジュールします" class="headerlink" title="Crontabでシェルをスケジュールします"></a><code>Crontab</code>でシェルをスケジュールします</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">00 10 25 3 * zsh ~/Documents/sendiMessage.sh</span><br></pre></td></tr></table></figure>

<p><a href="http://www.adminschoice.com/crontab-quick-reference">Crontab –クイックリファレンス</a>が示すように： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">00    10    *   *    *        command to be executed</span><br><span class="line">- -------- </span><br><span class="line">|     |     |   |    |</span><br><span class="line">|     |     |   |    +----- day of week (0 - 6) (Sunday&#x3D;0)</span><br><span class="line">|     |     |   +------- month (1 - 12)</span><br><span class="line">|     |     +--------- day of        month (1 - 31)</span><br><span class="line">|     +----------- hour (0 - 23)</span><br><span class="line">+------------- min (0 - 59)</span><br></pre></td></tr></table></figure>

<p>このシェルは、Macが3月25日の10:00にiMessageを送信することを意味します。 </p>
<p>次に、それを理想的な時間に変更します。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure>

<p>次のステップでは、最も難しい部分である <code>vim</code>を使用しています。 </p>
<ol>
<li><code>i</code>を押すと、<code>Terminal</code>の左下隅に <code>--INSERT--</code>が表示されます。 </li>
<li><code>00 10 25 3 * zsh〜 / Documents / sendiMessage.sh</code>を貼り付けます </li>
<li><code>shift +：</code>を押して、 <code>wq</code>、<code>enter</code>を入力します </li>
</ol>
<h2 id="Crontabを確認してください"><a href="#Crontabを確認してください" class="headerlink" title="Crontabを確認してください"></a><code>Crontab</code>を確認してください</h2><p><code>crontab -l</code> </p>
<p>すべてが正しければ、 <code>00 10 25 3 * zsh〜 / Documents / sendiMessage.sh</code>を見ることができます。 </p>
]]></content>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Struct Codable Alamofire Generics</title>
    <url>/ja/Struct-Codable-Alamofire-Generics/</url>
    <content><![CDATA[<p>ネットワーク応答データのジェネリックへの変換の問題を解決するために、半年前に<a href="https://leihao0.github.io/Swift-Generics-in-protocol-and-enum/">プロトコルと列挙のSwift Generics</a>を作成しました。 タイプタイプ。 </p>
<p>Swift 4以降、<a href="https://developer.apple.com/documentation/foundation/jsonserialization">JSONSerialization</a>メソッドは少し古くなっています </p>
<p>進捗状況を更新しながら、私はより良い方法を見つけました </p>
<a id="more"></a>

<h2 id="ツール"><a href="#ツール" class="headerlink" title="ツール"></a>ツール</h2><ul>
<li><a href="https://app.quicktype.io">クイックタイプ</a> </li>
<li><a href="https://github.com/Alamofire/Alamofire">Alamofire</a> </li>
</ul>
<p>Json構造があると仮定します。 </p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;id&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;List&quot;</span>: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">  <span class="attr">&quot;C&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>選択した** Alamofire拡張機能**を使用してQuicktypeに貼り付けると、次のようになります。 </p>
<!--more-->

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">import</span> Alamofire</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span>: <span class="title">Codable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> id: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">let</span> list: [<span class="type">Int</span>]? <span class="comment">// optional, in case some date has no list</span></span><br><span class="line">    <span class="keyword">let</span> <span class="built_in">c</span>: <span class="type">C</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">CodingKeys</span>: <span class="title">String</span>, <span class="title">CodingKey</span> </span>&#123;</span><br><span class="line">        <span class="keyword">case</span> id</span><br><span class="line">        <span class="keyword">case</span> list = <span class="string">&quot;List&quot;</span></span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">c</span> = <span class="string">&quot;C&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">C</span>: <span class="title">Codable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> id: <span class="type">Int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MARK: - Alamofire response handlers</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">DataRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">fileprivate</span> <span class="function"><span class="keyword">func</span> <span class="title">decodableResponseSerializer</span>&lt;T: Decodable&gt;<span class="params">()</span></span> -&gt; <span class="type">DataResponseSerializer</span>&lt;<span class="type">T</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">DataResponseSerializer</span> &#123; <span class="number">_</span>, response, data, error <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">guard</span> error == <span class="literal">nil</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> .failure(error!) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> data = data <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> .failure(<span class="type">AFError</span>.responseSerializationFailed(reason: .inputDataNil))</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="type">Result</span> &#123; <span class="keyword">try</span> <span class="type">JSONDecoder</span>().decode(<span class="type">T</span>.<span class="keyword">self</span>, from: data) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@discardableResult</span></span><br><span class="line">    <span class="keyword">fileprivate</span> <span class="function"><span class="keyword">func</span> <span class="title">responseDecodable</span>&lt;T: Decodable&gt;<span class="params">(queue: DispatchQueue? = <span class="literal">nil</span>, completionHandler: @escaping <span class="params">(DataResponse&lt;T&gt;)</span></span></span> -&gt; <span class="type">Void</span>) -&gt; <span class="type">Self</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> response(queue: queue, responseSerializer: decodableResponseSerializer(), completionHandler: completionHandler)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@discardableResult</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">responseA</span><span class="params">(queue: DispatchQueue? = <span class="literal">nil</span>, completionHandler: @escaping <span class="params">(DataResponse&lt;A&gt;)</span></span></span> -&gt; <span class="type">Void</span>) -&gt; <span class="type">Self</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> responseDecodable(queue: queue, completionHandler: completionHandler)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>func responseA</code>は静的タイプであり、貼り付けたJSONに応答する空間APIにのみ適用されることに注意してください。 したがって、すべてのAPIに汎用型が必要です。 </p>
<p>したがって、 <code>func responseA</code>を削除し、プロトコル<code>MYRequest</code>を次のように定義できます。 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">MYRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> router: <span class="type">String</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> api: <span class="type">String</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">associatedtype</span> <span class="type">T</span>: <span class="type">Decodable</span> <span class="comment">// generics type</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">MYRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> api: <span class="type">String</span> &#123; <span class="keyword">return</span> <span class="string">&quot;v1&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> domain: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;https://domain.com&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// T is used in DataResponse&lt;T&gt;</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">request</span><span class="params">(completionHandler: @escaping <span class="params">(DataResponse&lt;T&gt;)</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> url = <span class="string">&quot;\(domain)/\(api)/\(router)&quot;</span></span><br><span class="line">        <span class="type">Alamofire</span>.request(url).responseDecodable(completionHandler: completionHandler)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>これで、必要に応じてさまざまなリクエストを実装できます。 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ARequset</span>: <span class="title">MYRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> router = <span class="string">&quot;a&quot;</span></span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">A</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BRequset</span>: <span class="title">MYRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> router = <span class="string">&quot;b&quot;</span></span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">B</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>さらに、新しい <code>CRequset</code>があり、APIがv2にアップグレードされている場合、<code>MYRequest</code>で同じプロトコル <code>var api：String &#123;get&#125;</code>を使用して別のプロトコルを定義できます。 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">V2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> api: <span class="type">String</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">V2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> api: <span class="type">String</span> &#123; <span class="keyword">return</span> <span class="string">&quot;v2&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">C</span>: <span class="title">Request</span>, <span class="title">V2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> router = <span class="string">&quot;c&quot;</span></span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">C</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最後に、ViewControllerのリクエストは次のようになります。 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">ARequset</span>().request &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] response <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> a = response.result.value &#123; <span class="comment">// a is A, not Any</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">BRequset</span>().request &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] response <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> b = response.result.value &#123; <span class="comment">// b is B, not Any</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Swift</tag>
      </tags>
  </entry>
  <entry>
    <title>macOSでtesseract4ベータを構築する方法</title>
    <url>/ja/How-to-build-tesseract-4-beta-on-macOS/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew info tesseract</span><br><span class="line"></span><br><span class="line">tesseract: stable 3.05.01 (bottled), HEAD</span><br><span class="line">OCR (Optical Character Recognition) engine</span><br></pre></td></tr></table></figure>

<p>「簡略化された中国語」を特定した結果は少し怖いです。<br>4.0.0以降にLSTMに基づく新しいニューラルネットワークシステムが追加されていることに気づきました。<br>ただし、macOSのソースコードからビルドする必要があります。<br>幸い、このマニュアルのREADME.mdに詳細な説明があります。 </p>
<a id="more"></a>

<h2 id="依存関係をインストールする"><a href="#依存関係をインストールする" class="headerlink" title="依存関係をインストールする"></a>依存関係をインストールする</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install automake autoconf autoconf-archive libtool</span><br><span class="line">brew install pkgconfig</span><br><span class="line">brew install icu4c</span><br><span class="line">brew install leptonica</span><br><span class="line">brew install gcc</span><br></pre></td></tr></table></figure>

<h2 id="コンパイル"><a href="#コンパイル" class="headerlink" title="コンパイル"></a>コンパイル</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/tesseract-ocr/tesseract/</span><br><span class="line"><span class="built_in">cd</span> tesseract</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure CC=gcc CXX=g++ CPPFLAGS=-I/usr/<span class="built_in">local</span>/opt/icu4c/include LDFLAGS=-L/usr/<span class="built_in">local</span>/opt/icu4c/lib</span><br><span class="line">make -j</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>彼らの最高の訓練を受けた<a href="https://github.com/tesseract-ocr/tessdata_best">モード</a>、言語 <code>chi_sim.traineddata</code>をダウンロードし、<code>tesseract / 4.0.0.1 / tessdata /</code>の下に置きます </p>
<h2 id="使用法"><a href="#使用法" class="headerlink" title="使用法"></a>使用法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tesseract image.png image -l chi_sim</span><br><span class="line">cat image.txt</span><br></pre></td></tr></table></figure>

<p>さて、それはまだ <code>songfont</code>フォントを吸い込みます。 新しいモデルで自分自身を訓練する必要があります。 </p>
<hr>
<p>最後に、 <code>tesseract</code>を無視し、<code>image</code>を <code>OneNote</code>にドラッグすると、<code>Ctrl +クリック</code>-&gt;<code>画像からテキストをコピー</code>の方が精度が高くなることがわかりました。 😓 </p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>LSTM</tag>
      </tags>
  </entry>
  <entry>
    <title>ラマに会う</title>
    <url>/ja/Rendezvous-with-Rama/</url>
    <content><![CDATA[<div style="width: 300px">
<img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Rendezvous%20with%20Rama.jpg" />
</div>

<p>私は長い間ベースシリーズを賞賛してきました。これは完全に読まれた最初のクラーク小説です。 </p>
<a id="more"></a>

<h3 id="翻訳"><a href="#翻訳" class="headerlink" title="翻訳"></a>翻訳</h3><p>翻訳について話させてください </p>
<p>約2年前、私は元のバージョンを持っていて、翻訳を読まないことに決めました<br>私はそれを読んでいません。別の以前のバージョンがラマと会ったので、私は比較を投稿しませんでした。<br>このバージョンに関する限り、架空の違反感はありません。<br>名前に関する限り、元のテキストには次のものが含まれているため、Ramaは間違っている必要があります。 </p>
<blockquote>
<p>今、彼らはギンドゥのパンテオンを通して働いていました。 そして31/439はラマと名付けられました。 </p>
</blockquote>
<h3 id="カバー"><a href="#カバー" class="headerlink" title="カバー"></a>カバー</h3><p>そして、私はこのカバーが好きです<br>この本を最初に手に入れたとき、それは重力レンズのようなものだと思いました。私は完全に誤解されました。それがラマであるとは思っていませんでした。 </p>
<h3 id="技術"><a href="#技術" class="headerlink" title="技術"></a>技術</h3><p>全体として、気分が悪いのは星間宇宙船と雑用をするチンパンジーだけです<br>現在の技術レベルから判断すると、これらのことを行う人は、星間でのロボットのようになっているはずです(ラマ文明も江子によって作られています)<br>この本で説明されている人間の生理学は、今と比べてあまり改善されていません<br>人間がプルートまで移動したときに、まだこのようになっているとは想像しがたいです(本では、プルートはまだ矮星ではなく惑星です)。 </p>
<p>11時間のフライトでヨーロッパに行くと死ぬ気がします。このような星間旅行をするとき、そこに着いたときはまだ死体ではありません。 </p>
<p>したがって、「Life 3.0」で説明されているように、人間が繰り返しアップグレードしない場合<br>人間と比較して、ニールオートマトンのヒューマノイドロボットは星間旅行に適しています </p>
<p>他は素晴らしいです<br>たとえば、ラマの知的な生活は最後には現れませんでしたが、それは人間に似ているはずだと推測されます。<br>これまでの科学の主流の見方は、炭素ベースの生活は次の理由によるものです。 </p>
<ol>
<li>高分子はリンカーになるために炭素とシリコンを必要とします </li>
<li>シリコンがアクティブになるには、非常に高い温度が必要です </li>
<li>宇宙全体の炭素はシリコンの10倍です </li>
</ol>
<p>そして、ラマは特定の機能と弱い人工知能を持ち、意識する必要がないロボットです </p>
<h3 id="ラマの人々"><a href="#ラマの人々" class="headerlink" title="ラマの人々"></a>ラマの人々</h3><p>この本は劉里神社だけにあります(ガラスを見てごめんなさい、寺院が神社になっています⛩️)その章は水晶の生き物について説明しています、なぜこれがラマの高度な知的な生き物だと思いますか？ </p>
<p>宇宙で📱を見た場合、それが自然に形成されたとは絶対に思わないので、それはある種の知的な生命によって作成されたに違いありません </p>
<h3 id="マーキュリーからの核爆弾"><a href="#マーキュリーからの核爆弾" class="headerlink" title="マーキュリーからの核爆弾"></a>マーキュリーからの核爆弾</h3><p>それを見たとき、ラマが破壊されるのではないかと心配しました。<br>しかし、私にとって、マーキュリーの人々は間違っていません、彼らのスピーチも理にかなっています </p>
<p>ここで一時停止する場合は、思考実験として扱います<br>結局、ラマは本当に太陽に近い軌道を占領しました。もともとは人類の文明を守る機会があったのです。その結果、人の偽善によって人類の文明は姿を消しました。核爆弾を爆発させた人は英雄ではなく罪人でした。 </p>
<blockquote>
<p>生存は文明の最初の必要性です </p>
</blockquote>
<p>また、太陽光発電を降りたばかりの人間にとって、アフリカを降りたときの状況と変わらず、再び危険な環境に直面しているのですが、どうすれば地球の現代文明と同じように宇宙を扱うことができるのでしょうか。 </p>
<blockquote>
<p>そのおやすみに優しくしないでください </p>
</blockquote>
<p>しかし、太陽がわずか500万キロ遅れているラマの観点からは、保護カバーを開き、エネルギーを引き出し、ニュートンの第3運動法則に違反します。核爆弾がそうであるかどうかは重要ではありませんが、それは実際には人類レベルの闘争であることを強調しています。 </p>
<h3 id="文明"><a href="#文明" class="headerlink" title="文明"></a>文明</h3><p>人間の進化は、毎日のレベルを超える異常なサイズの概念をもたらしませんでした </p>
<p>本の説明によると、長さ50キロ、直径20キロ、周囲62.8キロ、内壁全体で3,140キロのようですが、コンセプトは？ </p>
<ul>
<li>私たちの領土の3万分の1 </li>
<li>北京第六環状道路2,267km² </li>
<li>上海6,340km² </li>
<li>深セン2,050km² </li>
<li>香港2,754km² </li>
</ul>
<p>自分で感じてください </p>
<p>これらの都市の現在の人口について考えてください。そうすれば、そのような地域は人間の文明が必要とする人口基盤を完全に運ぶことができます。<br>ラマの真ん中の低重力は言うまでもなく、都市の高層ビルはわずか数百メートルの距離にありますが、ラマは10キロメートルの距離にあり、2桁悪いため、実際の容量は<br>表面積ではなく体積<br>さらに、結局のところ、ラマはそれらの1つにすぎないはずです </p>
<blockquote>
<p>ラーマはヴィシュヌ神の7番目のアバターです </p>
</blockquote>
<blockquote>
<p>理由別のDashavataraWarisのアバターのリスト：Matsya、Kurma、Varaha、Narasimha、Vamana、Parashurama、Rama、Krishna、Balarama、Kalki </p>
</blockquote>
]]></content>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>ビデオをテキストに変換する方法</title>
    <url>/ja/How-to-convert-video-to-text/</url>
    <content><![CDATA[<p>音声がマンダリンの場合、XFyun FlySpeechRecognizerはこの問題でうまく機能し、混合言語の音声でいくつかの単純な英語の単語を認識することさえできます。 </p>
<p>そのようなことをするために最初から機械学習モデルを訓練する必要はありません。 </p>
<a id="more"></a>

<p>XFyun APIにはいくつかの制限があります。サイズは2MB以下で、オーディオの長さは60秒以下である必要があります。 </p>
<p>使用法 <code>./test.sh test.mp4</code> </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/zsh</span></span><br><span class="line">filename=$(<span class="built_in">echo</span> <span class="variable">$1</span> | cut -d. -f1)</span><br><span class="line"><span class="built_in">type</span>=$(<span class="built_in">echo</span> <span class="variable">$1</span> | cut -d. -f2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># $ filename。$ typeを出力します </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># スプリットビデオ&lt;= 2MB </span></span><br><span class="line">mp4box -splits 2000 <span class="variable">$filename</span>.<span class="variable">$type</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># エコービデオ→オーディオpcm </span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> <span class="variable">$filename</span>\_*.<span class="variable">$type</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;ffmpeg <span class="variable">$name</span> to pcm&quot;</span></span><br><span class="line">  ffmpeg -y  -i <span class="variable">$name</span> -acodec pcm_s16le -f s16le -ac 1 -ar 16000 <span class="variable">$name</span>.pcm</span><br><span class="line">  rm <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 音声からテキストへ </span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> <span class="variable">$filename</span>\_*.pcm; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;xfyun.py <span class="variable">$name</span>&quot;</span></span><br><span class="line">  python3 xfyun.py <span class="variable">$name</span></span><br><span class="line">  rm <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>これで、XFyunを使用してオーディオを認識できます。 </p>
<p>これは彼らのドキュメント<a href="https://doc.xfyun.cn/rest_api/%E8%AF%AD%E9%9F%B3%E5%90%AC%E5%86%99.html">XFyunIFlySpeechRecognizer</a>です。 しかし、サンプルコードを実行できなかったので、いくつか修正しました。 </p>
<p><code>xfyun.py</code>と<code>Python3</code>： </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*-コーディング：UTF-8-*- </span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">argv</span>):</span></span><br><span class="line">    f = open(argv[<span class="number">1</span>], <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">    file_content = f.read()</span><br><span class="line">    base64_audio = base64.b64encode(file_content)</span><br><span class="line">    body = urllib.parse.urlencode(&#123;<span class="string">&#x27;audio&#x27;</span>: base64_audio&#125;).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    url = <span class="string">&#x27;http://api.xfyun.cn/v1/service/v1/iat&#x27;</span></span><br><span class="line">    api_key = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    x_appid = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    param = &#123;<span class="string">&quot;engine_type&quot;</span>: <span class="string">&quot;sms16k&quot;</span>, <span class="string">&quot;aue&quot;</span>: <span class="string">&quot;raw&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    param_str = json.dumps(param)</span><br><span class="line">    param_utf8 = param_str.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    param_b64 = base64.b64encode(param_utf8)</span><br><span class="line">    param_b64str = param_b64.decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    x_time = str(int(time.time()))</span><br><span class="line">    checksum = (api_key + x_time + param_b64str).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    x_checksum = hashlib.md5(checksum).hexdigest()</span><br><span class="line">    x_header = &#123;<span class="string">&#x27;X-Appid&#x27;</span>: x_appid,</span><br><span class="line">                <span class="string">&#x27;X-CurTime&#x27;</span>: x_time,</span><br><span class="line">                <span class="string">&#x27;X-Param&#x27;</span>: param_b64str,</span><br><span class="line">                <span class="string">&#x27;X-CheckSum&#x27;</span>: x_checksum&#125;</span><br><span class="line"></span><br><span class="line">    req = urllib.request.Request(url, data=body, headers=x_header)</span><br><span class="line">    response = urllib.request.urlopen(req)</span><br><span class="line">    result = response.read().decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    data = json.loads(result)[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">    <span class="keyword">print</span> (data)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main(sys.argv)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>ビデオをテキストに変換する方法の詳細</title>
    <url>/ja/More-how-to-convert-video-to-text/</url>
    <content><![CDATA[<p>XFyunを試しましたが、認識できる結果には適していないため、いくつかのテストを実行する別の認識機能を探しています。 </p>
<ul>
<li><a href="Http：//a.k.com/product/access.html">カカ</a> </li>
<li><a href="Http：//a.Baidu.com/docs#/user-online-python-add/top">バイドゥ</a> </li>
<li><a href="https://cloud.google.com/speech-to-text/">Google</a> </li>
</ul>
<p>幸いなことに、これらはすべて以前に変換された <code>PCM</code>タイプをサポートしているため、シェルにいくつかの変更を加える必要があります。 異なるレコグナイザーからの結果を比較したい場合は、以下を実行するだけです。 </p>
<p><code>test.sh xfyun.py | baidu.py | qq.py test.mp4 | .m4a</code> </p>
<a id="more"></a>

<p>正直なところ、Googleの結果は人間の目にはよく見えます。 </p>
<p><code>test。is</code> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/zsh</span></span><br><span class="line"></span><br><span class="line">py=$<span class="number">1</span></span><br><span class="line"></span><br><span class="line">filename=$(echo $<span class="number">2</span> | cut -d. -f1)</span><br><span class="line">type=$(echo $<span class="number">2</span> | cut -d. -f2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># $ filename。$ typeを出力します </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分割ビデオ&lt;= 1MB </span></span><br><span class="line">mp4box -splits <span class="number">2000</span> $filename.$type</span><br><span class="line"></span><br><span class="line"><span class="comment"># エコービデオ→オーディオpcm </span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> $filename\_*.$type; do</span><br><span class="line">  <span class="keyword">print</span> <span class="string">&quot;ffmpeg $name to pcm&quot;</span></span><br><span class="line">  ffmpeg -y  -i $name -acodec pcm_s16le -f s16le -ac <span class="number">1</span> -ar <span class="number">16000</span> $name.pcm</span><br><span class="line">  rm $name</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment"># 音声からテキストへ </span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> $filename\_*.pcm; do</span><br><span class="line">  <span class="keyword">print</span> <span class="string">&quot;$py $name&quot;</span></span><br><span class="line">  python3 $py $name</span><br><span class="line">  <span class="comment"># rm $ name </span></span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<!--more-->

<h2 id="ID-はい。友達"><a href="#ID-はい。友達" class="headerlink" title="ID_はい。友達"></a>ID_はい。友達</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dic = &#123;</span><br><span class="line">    <span class="string">&quot;xfyun&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;baidu&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;secret&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;qq&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="グーグル"><a href="#グーグル" class="headerlink" title="グーグル"></a>グーグル</h2><p>彼らはファイルをオンラインで提出したので、私は\ *。pyの書き込みをスキップしました😝 </p>
<h2 id="Baidu。フレンズ"><a href="#Baidu。フレンズ" class="headerlink" title="Baidu。フレンズ"></a>Baidu。フレンズ</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipSpeech</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> id_key</span><br><span class="line">app_id = id_key.dic[<span class="string">&#x27;baidu&#x27;</span>][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">app_key = id_key.dic[<span class="string">&#x27;baidu&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line">secret = id_key.dic[<span class="string">&#x27;baidu&#x27;</span>][<span class="string">&#x27;secret&#x27;</span>]</span><br><span class="line"></span><br><span class="line">client = AipSpeech(app_id, app_key, secret)</span><br><span class="line"></span><br><span class="line">print(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file_content</span>(<span class="params">filePath</span>):</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">return</span> fp.read()</span><br><span class="line"></span><br><span class="line">res=client.asr(get_file_content(sys.argv[<span class="number">1</span>]), <span class="string">&#x27;pcm&#x27;</span>, <span class="number">16000</span>, &#123;</span><br><span class="line">    <span class="string">&#x27;dev_pid&#x27;</span>: <span class="number">1537</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure>

<h2 id="QQ。フレンズ"><a href="#QQ。フレンズ" class="headerlink" title="QQ。フレンズ"></a>QQ。フレンズ</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*-コーディング：UTF-8-*- </span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> time, random, base64, json</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> id_key</span><br><span class="line">app_id = id_key.dic[<span class="string">&#x27;qq&#x27;</span>][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">app_key = id_key.dic[<span class="string">&#x27;qq&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line"></span><br><span class="line">api_url=<span class="string">&#x27;https://api.ai.qq.com/fcgi-bin/aai/aai_asr&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span>(<span class="params">string</span>):</span></span><br><span class="line">    md = hashlib.md5()</span><br><span class="line">    md.update(string)</span><br><span class="line">    md5 = md.hexdigest().upper()</span><br><span class="line">    <span class="keyword">return</span> md5</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">signify</span>(<span class="params">args, app_key</span>):</span></span><br><span class="line">    query_str = urlencode(args)</span><br><span class="line">    query_str = query_str + <span class="string">&#x27;&amp;app_key=&#x27;</span> + app_key</span><br><span class="line">    signiture = md5(query_str.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> signiture</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">urlencode</span>(<span class="params">args</span>):</span></span><br><span class="line">    tuples = [(k, args[k]) <span class="keyword">for</span> k <span class="keyword">in</span> sorted(args.keys()) <span class="keyword">if</span> args[k]]</span><br><span class="line">    query_str = urllib.parse.urlencode(tuples)</span><br><span class="line">    <span class="keyword">return</span> query_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">http_post</span>(<span class="params">api_url, args</span>):</span></span><br><span class="line">    resp = requests.post(url=api_url, data=args)</span><br><span class="line">    resp = json.loads(resp.text)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseASR</span>(<span class="params">object</span>):</span></span><br><span class="line">    ext2idx = &#123;<span class="string">&#x27;pcm&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;wav&#x27;</span>: <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;amr&#x27;</span>: <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;slk&#x27;</span>: <span class="string">&#x27;4&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, api_url, app_id, app_key</span>):</span></span><br><span class="line">        self.api_url = api_url</span><br><span class="line">        self.app_id = app_id</span><br><span class="line">        self.app_key = app_key</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stt</span>(<span class="params">self, audio_file, ext, rate</span>):</span></span><br><span class="line">        <span class="keyword">raise</span> Exceptin(<span class="string">&quot;Unimplemented!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BasicASR</span>(<span class="params">BaseASR</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot; Online ASR from Tencent</span></span><br><span class="line"><span class="string">    https://ai.qq.com/doc/aaiasr.shtml</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        super(BasicASR, self).__init__(api_url, app_id, app_key)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stt</span>(<span class="params">self, audio_file, ext=<span class="string">&#x27;pcm&#x27;</span>, rate=<span class="number">16000</span></span>):</span></span><br><span class="line">        <span class="keyword">if</span> ext == <span class="string">&#x27;pcm&#x27;</span>:</span><br><span class="line">            <span class="comment"># wf = wave.open(audio_file) </span></span><br><span class="line">            <span class="comment"># nf = wf.getnframes() </span></span><br><span class="line">            <span class="comment"># audio_data = wf.readframes(nf) </span></span><br><span class="line">            f = open(audio_file, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">            audio_data = f.read()</span><br><span class="line">            f.close()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;Unsupport audio file format!&quot;</span>)</span><br><span class="line"></span><br><span class="line">        args = &#123;</span><br><span class="line">            <span class="string">&#x27;app_id&#x27;</span>: self.app_id,</span><br><span class="line">            <span class="string">&#x27;time_stamp&#x27;</span>: str(int(time.time())),</span><br><span class="line">            <span class="string">&#x27;nonce_str&#x27;</span>: <span class="string">&#x27;%.x&#x27;</span> % random.randint(<span class="number">1048576</span>, <span class="number">104857600</span>),</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: self.ext2idx[ext],</span><br><span class="line">            <span class="string">&#x27;rate&#x27;</span>: str(rate),</span><br><span class="line">            <span class="string">&#x27;speech&#x27;</span>: base64.b64encode(audio_data),</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        signiture = signify(args, self.app_key)</span><br><span class="line">        args[<span class="string">&#x27;sign&#x27;</span>] = signiture</span><br><span class="line">        resp = http_post(self.api_url, args)</span><br><span class="line">        print(resp)</span><br><span class="line">        text = resp[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;text&#x27;</span>].encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># デバッグの場合： </span></span><br><span class="line">        <span class="keyword">return</span> text</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">asr_engine = BasicASR()</span><br><span class="line">text = asr_engine.stt(sys.argv[<span class="number">1</span>])</span><br><span class="line">print(text)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="西洋の運。友達"><a href="#西洋の運。友達" class="headerlink" title="西洋の運。友達"></a>西洋の運。友達</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*-コーディング：UTF-8-*- </span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> id_key</span><br><span class="line">app_id = id_key.dic[<span class="string">&#x27;xfyun&#x27;</span>][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">api_key = id_key.dic[<span class="string">&#x27;xfyun&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://api.xfyun.cn/v1/service/v1/iat&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">argv</span>):</span></span><br><span class="line">    f = open(argv[<span class="number">1</span>], <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">    file_content = f.read()</span><br><span class="line">    base64_audio = base64.b64encode(file_content)</span><br><span class="line">    body = urllib.parse.urlencode(&#123;<span class="string">&#x27;audio&#x27;</span>: base64_audio&#125;).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    param = &#123;<span class="string">&quot;engine_type&quot;</span>: <span class="string">&quot;sms16k&quot;</span>, <span class="string">&quot;aue&quot;</span>: <span class="string">&quot;raw&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    param_str = json.dumps(param)</span><br><span class="line">    param_utf8 = param_str.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    param_b64 = base64.b64encode(param_utf8)</span><br><span class="line">    param_b64str = param_b64.decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    x_time = str(int(time.time()))</span><br><span class="line">    checksum = (api_key + x_time + param_b64str).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    x_checksum = hashlib.md5(checksum).hexdigest()</span><br><span class="line">    x_header = &#123;<span class="string">&#x27;X-Appid&#x27;</span>: app_id,</span><br><span class="line">                <span class="string">&#x27;X-CurTime&#x27;</span>: x_time,</span><br><span class="line">                <span class="string">&#x27;X-Param&#x27;</span>: param_b64str,</span><br><span class="line">                <span class="string">&#x27;X-CheckSum&#x27;</span>: x_checksum&#125;</span><br><span class="line"></span><br><span class="line">    req = urllib.request.Request(url, data=body, headers=x_header)</span><br><span class="line">    response = urllib.request.urlopen(req)</span><br><span class="line">    result = response.read().decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    dic = json.loads(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> dic[<span class="string">&#x27;data&#x27;</span>] != <span class="string">&quot;&quot;</span>:</span><br><span class="line">        print(dic[<span class="string">&#x27;data&#x27;</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(result)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main(sys.argv)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Toutubeからビデオを同時にダウンロードし、サブタイトルをバッチで埋め込む方法</title>
    <url>/ja/How-to-download-videos-concurrently-from-youtube-and-batch-embed-their-subtitles/</url>
    <content><![CDATA[<p>私がしなければならないのは、youtubeで私にとって非常に役立ついくつかのコースをダウンロードし、ビデオにZh-Hansの字幕を埋め込んでから、外部字幕をサポートしていない中国のWebサイトに送信することです。 </p>
<p>このツールは、英語を上手に話せず、youtubeにアクセスできない中国人学生を支援することができます。 </p>
<a id="more"></a>

<h2 id="Youtube-dl-config"><a href="#Youtube-dl-config" class="headerlink" title="Youtube-dl config"></a>Youtube-dl config</h2><p>ファイルパスは <code>〜/ .config / youtube-dl / config</code>です </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--o <span class="string">&#x27;%(playlist_index)02ds - %(title)s.%(ext)s&#x27;</span></span><br><span class="line">--no-mtime</span><br><span class="line">--proxy socks5://127.0.0.1:1080</span><br><span class="line"></span><br><span class="line">--ignore-errors</span><br><span class="line"></span><br><span class="line">-f bestvideo[height&lt;=?1080]+bestaudio/best</span><br><span class="line"></span><br><span class="line">--merge-output-format <span class="string">&#x27;mkv&#x27;</span></span><br><span class="line"></span><br><span class="line">--write-auto-sub --sub-lang <span class="string">&#x27;zh-Hans&#x27;</span></span><br><span class="line"></span><br><span class="line">--convert-subs <span class="string">&#x27;ass&#x27;</span></span><br><span class="line"></span><br><span class="line">--embed-subs</span><br></pre></td></tr></table></figure>

<h2 id="同時ダウンロード"><a href="#同時ダウンロード" class="headerlink" title="同時ダウンロード"></a>同時ダウンロード</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">playlist=<span class="string">&#x27;https://www.youtube.com/playlist?list=...&#x27;</span></span><br><span class="line">num=70</span><br><span class="line">i=1</span><br><span class="line"><span class="keyword">while</span> ((<span class="variable">$i</span> &lt;= <span class="variable">$num</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    end=$(( i+<span class="number">1</span> ))</span><br><span class="line">    youtube-dl --playlist-start <span class="variable">$i</span> --playlist-end <span class="variable">$end</span> <span class="variable">$playlist</span> &gt; <span class="string">&quot;log-<span class="variable">$i</span>-<span class="variable">$end</span>.txt&quot;</span>  2&gt;&amp;1  &amp;</span><br><span class="line">    i=$((<span class="variable">$end</span>+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="ファイル名のバッチ変換"><a href="#ファイル名のバッチ変換" class="headerlink" title="ファイル名のバッチ変換"></a>ファイル名のバッチ変換</h2><p>リスト内のすべてのビデオをダウンロードした後、 </p>
<p><code>ls | grep mkv | sed &quot;s/\。mkv//&quot;</code> </p>
<p>次に、コピーしてGoogleに貼り付け、翻訳されたテキストを取得して、 <code>zh.txt</code>に保存します。 </p>
<h2 id="一括埋め込み字幕"><a href="#一括埋め込み字幕" class="headerlink" title="一括埋め込み字幕"></a>一括埋め込み字幕</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tmp=<span class="string">&quot;tmp.mkv&quot;</span></span><br><span class="line">mkdir -p embedSub</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> *.mkv; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">read</span> -r zh &lt;&amp;3</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$f</span>\n<span class="variable">$zh</span>&quot;</span></span><br><span class="line">  <span class="comment"># ass = &quot;$(echo $ f | sed&#x27;s /\。mkv//&#x27;)。zh-Hans.ass&quot; </span></span><br><span class="line">  cp <span class="variable">$f</span> <span class="variable">$tmp</span></span><br><span class="line">  ffmpeg -nostats -loglevel 24 -n -i <span class="variable">$tmp</span> -vf subtitles=<span class="variable">$tmp</span> <span class="string">&quot;embedSub/<span class="variable">$zh</span>.mkv&quot;</span>;</span><br><span class="line"><span class="keyword">done</span> 3&lt;zh.txt</span><br><span class="line"></span><br><span class="line">rm <span class="variable">$tmp</span></span><br></pre></td></tr></table></figure>

<p>Intel Core i7では、通常、一晩中20本のビデオを録画し、1時間のビデオで字幕を埋め込むのに20分かかります。 </p>
]]></content>
      <tags>
        <tag>youtube</tag>
        <tag>ffmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title>React Native＆Flutter</title>
    <url>/ja/React-Native-Flutter/</url>
    <content><![CDATA[<p>すでに多くの賛否両論があります。 </p>
<p>| | 長所| 短所|<br>|：———– | ———————————— ————————————————– —————————- | ——————— ————————————————– ———————— |<br>| React Native | ホットリロード<br/>オンラインホットフィックス<br/>フロントエンドフレンドリー<br/>クロスプラットフォーム<br/>一度修正<br/> | JavaScript <br/>両方のプラットフォームでのネイティブUIの知識<br/>デバッグ<br/> |<br>| フラッター| Flutter Engine <br/>クロスプラットフォーム<br/>同じUXとUI <br /> | Dartを学ぶ<br/>不安定(1.0リリース)<br/>醜いコードスタイル<br/> iOS 13？<br/>デバッグ<br/> |<br>| ネイティブ| iOSパーツ<br/>はるかに簡単<br/> AutoLayout、ストーリーボード<br />迅速で、書き込みを減らし、より多くのことを実行<br /> SpriteKit、UIDynamic | 3人の開発者(fontend、iOS、android)の3倍の予算| </p>
<a id="more"></a>

<p>の手順を楽しく実行するiOS開発者として、私が最初にiOS開発者として足を踏み入れたとき、私はSwift、Storyboard、およびAutoLayoutを使用しました。 </p>
<p>これが、ほとんどのネイティブ開発者がReactNativeを学ぶ気さえない理由だと思います。 </p>
<p>2年前、私はMattermostを設立し、前の会社でSlackに代わるいくつかの変更を加えました。これは、私が接触した最初のReactNativeプロジェクトでした。 </p>
<p>残念ながら、コードを失うのは非常に簡単です。何かを変更したいときはいつでも、プロジェクト全体を検索する必要があります。誰が誰に言ったかを知らせるストーリーボードはありません。 </p>
<p>高度なフロントエンドだった元同僚と話をしました。 彼は私が更新サーバーを起動するのを手伝ってくれました。これもNode.jsで書かれています。 私が去ったとき、私はこのプロジェクトを彼に手渡した。 </p>
<p>彼によると、これは、React ReactがReact.jsに似ているように、ネイティブコードの記述方法がわからないためです。これを使用して、iOSとAndroidの両方を試してみませんか。 それから私は彼に、彼がどのように迅速に開発するか、そして彼がどんな種類の技術を望んでいるか知っているかどうか尋ねました。 あなたは答えを推測することができます😄。 </p>
<p>私の見解では、高速コードでも関数を実装するのが難しい場合があります。これは、別のテクノロジーで実現するには間違いなく長い道のりです。 </p>
<p>それから、最近、ネストされたマグネットスクロールビュー、ボタン、ナビゲーションを使ってデモを行う機会があります。 ネイティブコードを使用する代わりに、コンフォートゾーンから出て、ReactNativeとFlutterを試しました。 </p>
<ul>
<li>ビュー <ul>
<li>ListView、ScrollView、Labels、Texts、TextFields </li>
</ul>
</li>
<li>行動 <ul>
<li>ドラッグ、クリック、スクロール </li>
<li>ビューイベントでのコールバックブロックまたは委任 </li>
</ul>
</li>
</ul>
<p>したがって、それらのいずれかに習熟している場合、残っているのは、Googleがフレームワークに実装する方法、またはマニュアルを読む方法だけです。 </p>
<h2 id="リアクトネイティブ"><a href="#リアクトネイティブ" class="headerlink" title="リアクトネイティブ"></a>リアクトネイティブ</h2><p>React Nativeの印象的な点は、<strong>状態</strong>です。 </p>
<p>これは、Swiftの変数の <code>didSet</code>を介して実現でき、RxSwift、PromiseKitなど、それを実行できる多くのフレームワークがあります。 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> state: <span class="type">Any</span> &#123;</span><br><span class="line">    <span class="keyword">didSet</span> &#123;</span><br><span class="line">        updateViews()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="フラッター"><a href="#フラッター" class="headerlink" title="フラッター"></a>フラッター</h2><p>UXがこのマシンで開発されたものと非常に似ているという特定のアプリケーションに興味を持っていましたが、ある意味で奇妙に感じます。 今、私はそれが揺れていることを知っています。 </p>
<ul>
<li>2つのアプリを作成して入手するのはこれが初めてです(AndroidでReact Nativeをセットアップするのに多くの問題があります) </li>
<li>0.9ホットインストールでエラーが発生しました </li>
<li>Visual Studio Codeの開発は非常に優れており、Golangの過去を思い出させます。 </li>
<li>醜いコードスタイル(彼らはそれについて真剣ですか？これは公式の例です) </li>
</ul>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeroAnimation</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    timeDilation = <span class="number">5.0</span>; <span class="comment">// 1.0 means normal animation speed.</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: <span class="keyword">const</span> Text( <span class="string">&#x27;Basic Hero Animation&#x27;</span>)、 </span><br><span class="line">      ),</span><br><span class="line">      body: Center(</span><br><span class="line">        child: PhotoHero(</span><br><span class="line">          photo: <span class="string">&#x27;images/flippers-alpha.png&#x27;</span>,</span><br><span class="line">          width: <span class="number">300.0</span>,</span><br><span class="line">          onTap: () &#123;</span><br><span class="line">            Navigator.of(context).push(MaterialPageRoute&lt;<span class="keyword">void</span>&gt;(</span><br><span class="line">              builder: (BuildContext context) &#123;</span><br><span class="line">                <span class="keyword">return</span> Scaffold(</span><br><span class="line">                  appBar: AppBar(</span><br><span class="line">                    title: <span class="keyword">const</span> Text( <span class="string">&#x27;Flippers Page&#x27;</span>)、 </span><br><span class="line">                  ),</span><br><span class="line">                  body: Container(</span><br><span class="line">                    <span class="comment">// The blue background emphasizes that it&#x27;s a new route.</span></span><br><span class="line">                    color: Colors.lightBlueAccent,</span><br><span class="line">                    padding: <span class="keyword">const</span> EdgeInsets.all(<span class="number">16.0</span>),</span><br><span class="line">                    alignment: Alignment.topLeft,</span><br><span class="line">                    child: PhotoHero(</span><br><span class="line">                      photo: <span class="string">&#x27;images/flippers-alpha.png&#x27;</span>,</span><br><span class="line">                      width: <span class="number">100.0</span>,</span><br><span class="line">                      onTap: () &#123;</span><br><span class="line">                        Navigator.of(context).pop();</span><br><span class="line">                      &#125;,</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                );</span><br><span class="line">              &#125;</span><br><span class="line">            ));</span><br><span class="line">          &#125;,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>いずれにせよ、私は本当に感銘を受けました。それは「ネイティブコンポーネント」をスキップし、独自の2Dレンダリングエンジンを作成しました。 ReactNativeよりもはるかに才能があります。 </p>
<p>したがって、個人的には、FlutterはReactNativeよりも可能性が高いと思います。 そして、地元にロールバックする多くの企業があります。 </p>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>React Native</tag>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>SpriteKitシーンsksのSKEmitterNode</title>
    <url>/ja/SKEmitterNode-in-SpriteKit-Scene-sks/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/33lUmpg.gif" alt=""><br>iOSのパーティクルにはSpriteKitが必要です。 </p>
<a id="more"></a>

<ol>
<li>MyScene.sksファイルをプロジェクトに追加します </li>
<li>SpriteKitビューをストーリーボードにドラッグします </li>
<li>2つのランチャーを <code>MyScene.sks</code>にドラッグします </li>
<li>送信機のプロパティを設定します </li>
<li>各ランチャーに追加するアクションをドラッグします </li>
</ol>
<p>私の以前の理解はです。 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> node = <span class="type">SKEmitterNode</span>(fileNamed: <span class="string">&quot;Fire&quot;</span>)</span><br><span class="line"><span class="keyword">let</span> scene = <span class="type">SKScene</span>(fileNamed: <span class="string">&quot;MyScene&quot;</span>)</span><br><span class="line">scene?.addChild(node)</span><br><span class="line"><span class="comment">// SKAction(...</span></span><br></pre></td></tr></table></figure>

<p>私にとって、SpriteKitがStoryboardを使用するのと同様の開発経験を持つことができるのは驚くべきことです。 </p>
<p>Paul Hegarty ctrlがボタンをドラッグしてクラスのコードを作成するのを見たとき、私がiOSDevに引き渡した主な理由はStoryboardでした。 </p>
<p>優秀な！ </p>
<p>さらに、コードを介して設定するために使用したUIDynamicのものをたくさん見ました。 </p>
<p>この簡単な調査を実施できることをうれしく思います。 </p>
<p><img src="https://i.imgur.com/LYmt4PZ.png" alt=""></p>
<p><img src="https://i.imgur.com/eL15HjC.png" alt=""></p>
<p><img src="https://i.imgur.com/PHiz4VU.png" alt=""></p>
<p><img src="https://i.imgur.com/qtYdAsH.png" alt=""></p>
]]></content>
      <tags>
        <tag>Xcode</tag>
        <tag>SpriteKit</tag>
      </tags>
  </entry>
  <entry>
    <title>Staxripを備えたCUDAGPUは、h264 / h265 / HEVCビデオエンコーディングを高速化します</title>
    <url>/ja/CUDA-GPU-Accelerated-h264-h265-HEVC-Video-Encoding-with-Staxrip/</url>
    <content><![CDATA[<p>ゲームは私の人生を変えました。 </p>
<p>私は長年都市に行ってきましたが、これらの都市は「Sleeping Dog 2」、「GTA」など、アサシンクリードシリーズで旅行をしました。<br>私が実際に現実の世界に入るとき、それは大きな影響を与えるでしょう。 ですから、戻るたびにゲームで体験したいです。 </p>
<a id="more"></a>

<p>しかし、年を重ねるにつれて👴、ゲームをする時間もどんどん少なくなっていきます👱。 </p>
<p>再生中に🎮を録音しています📹、これは良い考えかもしれません。 </p>
<h2 id="ShadowPlay"><a href="#ShadowPlay" class="headerlink" title="ShadowPlay"></a>ShadowPlay</h2><p>深層学習モデルをトレーニングするためのギガバイトGeforceGTX 1080を持っているので、必要なのはゲームの記録に非常に適したNvidiaShadowPlayだけです。 </p>
<p>ただし、最小ビットレートは10Mbpsであり、6kbps未満に減らしたいので、圧縮が必要です🗜️。 </p>
<h2 id="Staxrip"><a href="#Staxrip" class="headerlink" title="Staxrip"></a>Staxrip</h2><p>以前はいつもFFmpegを使っていましたが、Macbookの音が聞こえるたびにパニックになり、一晩中バッチ動画を変換しています。 </p>
<p>幸い、今回はGPUの加速を連想させるCudaのロゴを見ました。 </p>
<p>それから私は<a href="https://github.com/stax76/staxrip">staxrip</a>を見つけました。これはすごいです。 </p>
<ol>
<li>** x264 <strong>をクリックし、</strong> NVIDIA H.265 **を選択します(1080でテストしました。速度はNVIDIA H.264に似ています。以前は、264は265よりもはるかに速いはずだと思っていました)。 GPUアクセラレーションを使用できます。 </li>
<li>「エンコーダオプション」をクリックし、モードを「VBR」に変更すると、「ビデオビットレート」が表示されます。 </li>
</ol>
<p>CPUが40％、GPUが35％の場合、毎秒250フレームに達する可能性があります。 </p>
]]></content>
      <tags>
        <tag>CUDA GPU</tag>
      </tags>
  </entry>
  <entry>
    <title>SFSpeechRecognizerを介したテキストへのオーディオファイル</title>
    <url>/ja/Audio-File-to-Text-via-SFSpeechRecognizer/</url>
    <content><![CDATA[<p>APIを呼び出すのと同じように、(実際には)思ったよりもはるかに簡単です😄😄😄 </p>
<h3 id="スピーチのインポート"><a href="#スピーチのインポート" class="headerlink" title="スピーチのインポート"></a><a href="https://developer.apple.com/documentation/speech/sfspeechrecognizer">スピーチのインポート</a></h3><h3 id="Info-plist"><a href="#Info-plist" class="headerlink" title="Info.plist"></a>Info.plist</h3><ul>
<li>プライバシー-マイクの使用法の説明 </li>
<li>プライバシー-音声認識の使用法の説明 </li>
</ul>
<h3 id="承認"><a href="#承認" class="headerlink" title="承認"></a>承認</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">SFSpeechRecognizer</span>.requestAuthorization &#123; authStatus <span class="keyword">in</span></span><br><span class="line">    <span class="type">OperationQueue</span>.main.addOperation &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">switch</span> authStatus &#123;</span><br><span class="line">        <span class="keyword">case</span> .notDetermined, .denied, .restricted:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;.notDetermined, .denied, .restricted&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> .authorized:</span><br><span class="line">            <span class="keyword">self</span>?.startRecognizeFile()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="SelectAudio"><a href="#SelectAudio" class="headerlink" title="SelectAudio"></a>SelectAudio</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protocol ShareText &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">extension ShareText where Self: UIViewController &#123;</span><br><span class="line">    func shareText(_ title: String, text: String) &#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; set up activity view controller</span><br><span class="line">        let textToShare &#x3D; [text]</span><br><span class="line">        let activityViewController &#x3D; UIActivityViewController(activityItems: textToShare, applicationActivities: nil)</span><br><span class="line">        activityViewController.popoverPresentationController?.sourceView &#x3D; self.view &#x2F;&#x2F; so that iPads won&#39;t crash</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; exclude some activity types from the list (optional)</span><br><span class="line">        activityViewController.excludedActivityTypes &#x3D; [ UIActivity.ActivityType.airDrop, .message, .copyToPasteboard ]</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; present the view controller</span><br><span class="line">        self.present(activityViewController, animated: true, completion: nil)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">SeletctAudio</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">SeletctAudio</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectAudio</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> types: [<span class="type">String</span>] = [<span class="string">&quot;public.movie&quot;</span>, <span class="string">&quot;public.audio&quot;</span>]</span><br><span class="line">        <span class="keyword">let</span> documentPicker = <span class="type">UIDocumentPickerViewController</span>(documentTypes: types, <span class="keyword">in</span>: .<span class="keyword">import</span>)</span><br><span class="line">        documentPicker.delegate = <span class="keyword">self</span> <span class="keyword">as</span>? <span class="type">UIDocumentPickerDelegate</span></span><br><span class="line">        documentPicker.modalPresentationStyle = .formSheet</span><br><span class="line">        <span class="keyword">self</span>.present(documentPicker, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="RecognizeFile"><a href="#RecognizeFile" class="headerlink" title="RecognizeFile"></a>RecognizeFile</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">RecognizeFile</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">RecognizeFile</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">recognizeFile</span><span class="params">(<span class="number">_</span> url: URL, completion: @escaping <span class="params">(Bool, Bool, String)</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">self</span>.divide(url) &#123; urls <span class="keyword">in</span></span><br><span class="line">                <span class="keyword">let</span> s = <span class="type">DispatchSemaphore</span>(value: <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                urls.enumerated().forEach &#123; i, url <span class="keyword">in</span></span><br><span class="line">                    <span class="type">DispatchQueue</span>.global().async &#123;</span><br><span class="line">                        <span class="number">_</span> = s.wait(timeout: <span class="type">DispatchTime</span>.distantFuture)</span><br><span class="line">                        <span class="built_in">print</span>(url)</span><br><span class="line">                        <span class="keyword">self</span>.recognizeUrl(url) &#123; b, str <span class="keyword">in</span></span><br><span class="line">                            completion(b, urls.last == url, str)</span><br><span class="line">                            <span class="keyword">if</span> b &#123;</span><br><span class="line">                                <span class="built_in">print</span>(str)</span><br><span class="line">                                s.signal()</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">recognizeUrl</span><span class="params">(<span class="number">_</span> url: URL, completion: @escaping <span class="params">(Bool, String)</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> myRecognizer = <span class="type">SFSpeechRecognizer</span>(locale: <span class="type">Locale</span>(identifier: <span class="string">&quot;zh_CN&quot;</span>)) <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// A recognizer is not supported for the current locale</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> !myRecognizer.isAvailable &#123;</span><br><span class="line">            <span class="comment">// The recognizer is not available right now</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> request = <span class="type">SFSpeechURLRecognitionRequest</span>(url: url)</span><br><span class="line">        <span class="comment">//        request.shouldReportPartialResults = true</span></span><br><span class="line">        myRecognizer.recognitionTask(with: request) &#123; (result, error) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> result = result <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Recognition failed, so check error for details and handle it</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;err: &quot;</span>, error.debugDescription)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Print the SpeechTester that has been recognized so far</span></span><br><span class="line">            <span class="comment">//            if result.isFinal &#123;</span></span><br><span class="line">            <span class="keyword">let</span> str = result.bestTranscription.formattedString</span><br><span class="line">            <span class="type">OperationQueue</span>.main.addOperation &#123;</span><br><span class="line">                completion(result.isFinal, str)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//            &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">divide</span><span class="params">(<span class="number">_</span> url: URL, completion: @escaping <span class="params">([URL])</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> asset = <span class="type">AVURLAsset</span>(url: url)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> n = <span class="type">Int</span>(<span class="type">CMTimeGetSeconds</span>(asset.duration) / <span class="number">60</span>)</span><br><span class="line">        <span class="keyword">var</span> urls = <span class="type">Array</span>(repeating: <span class="type">URL</span>(string: <span class="string">&quot;&quot;</span>), <span class="built_in">count</span>: n+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> group = <span class="type">DispatchGroup</span>()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>...n &#123;</span><br><span class="line">            group.enter()</span><br><span class="line">            exportAsset(asset, start: i) &#123; url <span class="keyword">in</span></span><br><span class="line">                urls[i] = url</span><br><span class="line">                group.leave()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        group.notify(queue: .main) &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;divide complete&quot;</span>)</span><br><span class="line">            completion(urls.<span class="built_in">compactMap</span>(&#123;$<span class="number">0</span>&#125;))</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">exportAsset</span><span class="params">(<span class="number">_</span> asset: AVAsset, start: Int, completion: @escaping <span class="params">(URL?)</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;\(#function)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> documentsDirectory = <span class="type">FileManager</span>.<span class="keyword">default</span>.urls(<span class="keyword">for</span>: .documentDirectory, <span class="keyword">in</span>: .userDomainMask)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">let</span> tmpFolder = documentsDirectory.appendingPathComponent(<span class="string">&quot;tmp/&quot;</span>)</span><br><span class="line">        <span class="keyword">try</span>? <span class="type">FileManager</span>.<span class="keyword">default</span>.createDirectory(at: tmpFolder, withIntermediateDirectories: <span class="literal">true</span>, attributes: <span class="literal">nil</span>)</span><br><span class="line">        <span class="keyword">let</span> trimmedSoundFileURL = documentsDirectory.appendingPathComponent(<span class="string">&quot;tmp/\(start).m4a&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;saving to \(trimmedSoundFileURL.absoluteString)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="type">FileManager</span>.<span class="keyword">default</span>.fileExists(atPath: trimmedSoundFileURL.path) &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;sound exists, removing \(trimmedSoundFileURL.absoluteString)&quot;</span>)</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">try</span> trimmedSoundFileURL.checkResourceIsReachable() &#123;</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;is reachable&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> <span class="type">FileManager</span>.<span class="keyword">default</span>.removeItem(atPath: trimmedSoundFileURL.path)</span><br><span class="line">            &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;could not remove \(trimmedSoundFileURL)&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(error.localizedDescription)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;creating export session for \(asset)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> exporter = <span class="type">AVAssetExportSession</span>(asset: asset, presetName: <span class="type">AVAssetExportPresetAppleM4A</span>) &#123;</span><br><span class="line">            exporter.outputFileType = <span class="type">AVFileType</span>.m4a</span><br><span class="line">            exporter.outputURL = trimmedSoundFileURL</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> duration = <span class="type">CMTimeGetSeconds</span>(asset.duration)</span><br><span class="line">            <span class="keyword">if</span> duration &lt; <span class="number">5.0</span> &#123;</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;sound is not long enough&quot;</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// e.g. the first 5 seconds</span></span><br><span class="line">            <span class="keyword">let</span> startTime = <span class="type">CMTime</span>(seconds: <span class="type">Double</span>(start*<span class="number">60</span>), preferredTimescale: <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">let</span> stopTime = <span class="type">CMTime</span>(seconds: <span class="type">Double</span>(start+<span class="number">1</span>)*<span class="number">60</span>, preferredTimescale: <span class="number">1</span>)</span><br><span class="line">            exporter.timeRange = <span class="type">CMTimeRangeFromTimeToTime</span>(start: startTime, end: stopTime)</span><br><span class="line"></span><br><span class="line">            <span class="comment">// do it</span></span><br><span class="line">            exporter.exportAsynchronously(completionHandler: &#123;</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;export complete \(exporter.status)&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">switch</span> exporter.status &#123;</span><br><span class="line">                <span class="keyword">case</span>  .failed, .cancelled:</span><br><span class="line">                    completion(<span class="literal">nil</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;export \(String(describing: exporter.error))&quot;</span>)</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    completion(trimmedSoundFileURL)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;export complete&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            completion(<span class="literal">nil</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;cannot create AVAssetExportSession for asset \(asset)&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>SFSpeechRecognizer</tag>
      </tags>
  </entry>
  <entry>
    <title>フィードバック</title>
    <url>/ja/Feedback/</url>
    <content><![CDATA[<p>1万年前のセクション24 <a href="https://leihao0.github.io/Feedback/">高等テンプラーマスター</a>で前進する方法について述べました </p>
<p>実際、魔法の向上に加えて、シニアは魔法のスキルを持っています </p>
<ul>
<li>フィードバック </li>
</ul>
<p>この方法は、最初に相手(ペンシャ)を確認します<br>次に、何を強化する必要があるかを傲慢に指摘します(quedian)<br>最終的には、対戦相手のマナをゼロにする効果を達成します </p>
<a id="more"></a>

<hr>
<p>小さな魔道士と何人かの先輩の友達を見て<br>また、ドラッグ、ドラッグ、ドラッグ、ドラッグ、ドラッグ、デッドラインへのドラッグも行っています。<br>これを行います </p>
<p>フィードバックは確かに高レベルのスキルのようです </p>
<p>私たちの小さな魔道士が長い間ジュニアステージにいるのは残念です </p>
<p>さらに、次の2つの理由があります。 </p>
<ol>
<li>ゴミが話された </li>
<li>社会的恐怖 </li>
</ol>
<p>フィードバックはリトルメイジにとって乗り越えられない障害となっています </p>
<hr>
<p>ある日の午後、小さな魔道士は狂ったようにコーヒーを飲むことを心配していました<br>カフェインの影響下で、気まぐれ<br>私は弱いですが<br>しかし、それはシェンロンをまったく召喚できないという意味ではありません。 </p>
<p>たとえば、錬金術(shenduxuexi)のRNNは、現在の状況に非常に適しています </p>
<h2 id="錬金術"><a href="#錬金術" class="headerlink" title="錬金術"></a>錬金術</h2><p>錬金術といえば、最初はかなり不思議でした<br>謎を理解しているウィザードはごくわずかです </p>
<p>真実を知らない小さな魔道士<br>コースラでアンドリュー・ングのMLコースをブラッシュし、彼の無実を示すために証明書を購入しました📄<br>私はそれをすべて忘れましたが、私はまだいくつかの概念を持っています </p>
<p>そして今は9012です<br>考えずに資料を準備するだけで済むように簡略化されています </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir feedback</span><br><span class="line">cd feedback</span><br><span class="line">mkdir -p datasets weights outputs</span><br></pre></td></tr></table></figure>

<p>小さな魔道士が最初に検索して見つけた<a href="https://status.net/articles/performance-review-phrases-examples/">フレーズの例</a> </p>
<p>コンテンツを <code>datasets / data.txt</code>にコピーするだけです </p>
<p>次に、正のフィードバックと負のフィードバックを除外します </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> datasets</span><br><span class="line"></span><br><span class="line">cat data.txt | grep ✓ | sed <span class="string">&#x27;s/✓ //&#x27;</span> &gt; 👍.txt</span><br><span class="line">cat data.txt | grep ✗ | sed <span class="string">&#x27;s/✗ //&#x27;</span> &gt; 👎.txt</span><br></pre></td></tr></table></figure>

<p>材料の準備ができたら、ピル炉を設置できます </p>
<p>小さな魔道士が探していたのですが、<a href="https://github.com/minimaxir/textgenrnn">textgenrnn</a>は良くてわかりやすいと思います </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">pip3 install -I textgenrnn tensorflow</span><br></pre></td></tr></table></figure>

<p>錬金術のステップを設定する </p>
<p>オープンリファイニング </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python3training.py </span></span><br><span class="line">from textgenrnn import textgenrnn</span><br><span class="line"></span><br><span class="line">textgen = textgenrnn()</span><br><span class="line"></span><br><span class="line">textgen.train_from_file(<span class="string">&#x27;datasets/👍.txt&#x27;</span>, num_epochs=1)</span><br><span class="line">textgen.save(<span class="string">&#x27;weights/👍.hdf5&#x27;</span>)</span><br><span class="line"></span><br><span class="line">textgen.train_from_file(<span class="string">&#x27;datasets/👎.txt&#x27;</span>, num_epochs=1)</span><br><span class="line">textgen.save(<span class="string">&#x27;weights/👎.hdf5&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>その後、リトルメイジのMBPのCPUがワイルドになり、楽しい花火に突入しました🎆 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Instructions for updating:</span><br><span class="line">Use tf.where in 2.0, which has the same broadcast rule as np.where</span><br><span class="line">Epoch 1&#x2F;1</span><br><span class="line">328&#x2F;559 [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt;.............] - ETA: 36s - loss: 1.2788</span><br></pre></td></tr></table></figure>

<p>練習した🥚ルックをロードします </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python3testing.py </span></span><br><span class="line"><span class="keyword">from</span> textgenrnn <span class="keyword">import</span> textgenrnn</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;👍&#x27;</span>)</span><br><span class="line">textgenrnn(<span class="string">&#x27;weights/👍.hdf5&#x27;</span>).generate_samples(prefix=<span class="string">&quot;He&quot;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;👎&#x27;</span>)</span><br><span class="line">textgenrnn(<span class="string">&#x27;weights/👎.hdf5&#x27;</span>).generate_samples(prefix=<span class="string">&quot;He&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>emmmmmmmmmmmm </p>
<p>しかし、ガチョウは非常にスパイシーな目であることが判明しました💔💔💔 </p>
<p><img src="https://i.imgur.com/RT2msrl.gif" alt=""></p>
<hr>
<p>計画が失敗する </p>
<p>実験を続けなかった<br>ただし、エポックまたはレイヤーを追加すると改善される場合があります </p>
<p>リポジトリ：<a href="https://github.com/leihao0/feedback">フィードバック</a> </p>
<p>だが： </p>
<blockquote>
<p>データが不十分である必要があります </p>
</blockquote>
<p>小さな魔道士は断固として言った </p>
<p>😠😠😠 </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>グラブとアップル</title>
    <url>/ja/Grab-refer-a-candidate/</url>
    <content><![CDATA[<h2 id="更新2021"><a href="#更新2021" class="headerlink" title="更新2021"></a>更新2021</h2><p>辞任しました、今あなたはフルーツ会社をプッシュすることができます<br>しかし、GRAB(GRIE技術)はIPOについてです。<br>気分が良くなったら、友達に内部プッシュを支援し続けることができます。 </p>
<a id="more"></a>

<hr>
<p>私は一定期間働いています、それについて話しましょう。 </p>
<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul>
<li>降りて仕事を降りるのに通常の場所(No 996または007、北京事務所はそうではありません) </li>
<li>月は1日または2日遠隔があります(グループを参照) </li>
<li>多文化(どの国があります) </li>
<li>中国語と英語の環境(非常に多くの中国語) </li>
<li>グローバルオフィス(インサイド転送にすることができます) </li>
<li>18年の偽物、プローブの3日間 </li>
<li>他の私は忘れました </li>
</ul>
<p>全体的に、移行の会社。 </p>
<h2 id="勧誘"><a href="#勧誘" class="headerlink" title="勧誘"></a>勧誘</h2><p>最近のフードチームクレイジー、多くのHCSがあります<br>私は他のポジション、イギリス人を知りません </p>
<ul>
<li>準備 </li>
<li>ブラシアルゴリズム </li>
<li>梳くプロジェクト </li>
<li>少し態度 </li>
</ul>
<p>入ってくる可能性は非常に大きいです </p>
<p>直接シンガポールへの本土パスポートはEPを必要としています<br>会社は約2ヶ月に役立ちます<br>心配しないで、あなたは面接が良いことを保証することができます。 </p>
<p>シンガポールが死んでいると感じたら、北京を見ることができます。<br>南道、ハイダイアン地区 </p>
<p>あなたが非大陸パスポートを保持しているなら、あなたはまたシアトルで米国の皇帝を見ることができます。 </p>
<p>すべての位置はこちらです。<br>https：//grab.carers/<br>あなた自身のチームとその国を検索してください<br>家主への§CV(英語を送ることを忘れないでください) </p>
<h2 id="内部プッシュ"><a href="#内部プッシュ" class="headerlink" title="内部プッシュ"></a>内部プッシュ</h2><p>内部システムで詳細な形式を記入する必要がある<br>HRに投げ込まれるのは前方ではありません。<br>だから、私がいるとき、私はフォーマットが次のとおりです。 </p>
<p>メール名： </p>
<blockquote>
<p>V2-Grab-Position-Location.<br>如く：V2-Grabバックエンドエンジニア - シンガポール </p>
</blockquote>
<p>電子メールの内容： </p>
<blockquote>
<p>国：<br>名：<br>苗字： </p>
</blockquote>
<blockquote>
<p>国の電話コード：(中国は86)<br>電話番号：<br>Eメール： </p>
</blockquote>
<blockquote>
<p>ジョブのタイトル： </p>
</blockquote>
<p>オプション： </p>
<blockquote>
<p>コメント(あなたは彼をどのように勧めますか？|彼の利点は？) </p>
</blockquote>
<blockquote>
<p>LinkedIn Earp：<br>Twitterのユーザー名：<br>Facebook URL：<br>gogonga +アール： </p>
</blockquote>
<blockquote>
<p>市：<br>郵便番号： </p>
</blockquote>
<blockquote>
<p>附属書📎CV </p>
</blockquote>
<hr>
<h2 id="やっと"><a href="#やっと" class="headerlink" title="やっと"></a>やっと</h2><p>に送る：<br>leihao.sg {at} gmail {dot} </p>
<hr>
<p>家主はあなたがあなたが尋ねたいあなたの多くを持っていることを知っています。<br>そしてなぜあなたは滞在しませんか？ </p>
<p>だからあなたは家主のブログを参照することができます<br>家主を嘘つきとして入れないでください </p>
<p>さらに、家主は単なる一番下の掃引ではありません。<br>だから私はさまざまな式の問題に答えることはできません<br>私を許してください </p>
<p>質問は左など、履歴書を尋ねています。<br>彼らは家主よりも専門です </p>
<p>最後の最後の<br>あなたがあなたの仕事を渡すならば、あなたはあなたのEメールに感謝します。 </p>
<p>本館は社会恐怖症を持っています<br>私に来ないで233 </p>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Refer</tag>
        <tag>Grab</tag>
        <tag>Apple</tag>
      </tags>
  </entry>
  <entry>
    <title>Telegramを使用して自動的に返信する方法</title>
    <url>/ja/How-to-auto-reply-send-msg-with-telegram/</url>
    <content><![CDATA[<p>男性として、59秒以内に返信する理由はたくさんあります。そうしないと、何か悪いことが起こります。 </p>
<p>幸い、TelegramはAPIを提供します。 </p>
<ol>
<li>ボットトークンの代わりに<a href="https://my.telegram.org/">ここ</a>で開発者トークンを取得します </li>
<li><code>pip3</code>を使用してtelethonをインストールします </li>
<li>RTFMはpyを機能させます </li>
</ol>
<a id="more"></a>

<h2 id="Telethon"><a href="#Telethon" class="headerlink" title="Telethon"></a>Telethon</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install -U telethon --user</span><br></pre></td></tr></table></figure>

<p>カタリナでは、「インポートテレソン」はインポート後すぐに中止され、他の有用なログがないため、午後中ずっと問題を解決できませんでした。 </p>
<ul>
<li><code>pyenv</code>を使用してpythonバージョンを切り替えようとしましたが、機能しませんでした </li>
<li>Ubuntuで実行すると、機能します </li>
<li>最後にここで見つかりました、[macOS 10.15でPythonがクラッシュします](<a href="https://stackoverflow.com/questions/58272830/python-crashing-on-macos-10-15-beta-19a582a-with-usr-lib-libcrypto-">https://stackoverflow.com/questions/58272830/python-crashing-on-macos-10-15-beta-19a582a-with-usr-lib-libcrypto-</a> dylib)、 <code>OpenSSL</code>がありません </li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/Cellar/openssl/1.0.2t/lib</span><br><span class="line">sudo cp libssl.1.0.0.dylib libcrypto.1.0.0.dylib /usr/<span class="built_in">local</span>/lib/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/lib</span><br><span class="line">mv libssl.dylib libssl_bak.dylib</span><br><span class="line">mv libcrypto.dylib libcrypto_bak.dylib</span><br><span class="line">sudo ln -s libssl.1.0.0.dylib libssl.dylib</span><br><span class="line">sudo ln -s libcrypto.1.0.0.dylib libcrypto.dylib</span><br></pre></td></tr></table></figure>

<h2 id="自動返信"><a href="#自動返信" class="headerlink" title="自動返信"></a>自動返信</h2><p>「彼女に返事を。友達」 </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> telethon <span class="keyword">import</span> TelegramClient, events</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># my.telegram.orgの独自の値を使用してください </span></span><br><span class="line">api_id = <span class="number">123456</span></span><br><span class="line">api_hash = <span class="string">&#x27;xxxx&#x27;</span></span><br><span class="line">phone = <span class="string">&#x27;123456789&#x27;</span></span><br><span class="line"></span><br><span class="line">client = TelegramClient(<span class="string">&#x27;session&#x27;</span>, api_id, api_hash)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">greetings = [<span class="string">&#x27;ok&#x27;</span>, <span class="string">&#x27;cool&#x27;</span>, <span class="string">&#x27;😂&#x27;</span>, <span class="string">&#x27;em&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@client.on(events.NewMessage)</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">handle_new_message</span>(<span class="params">event</span>):</span></span><br><span class="line"></span><br><span class="line">    from_user = <span class="keyword">await</span> event.client.get_entity(event.from_id)</span><br><span class="line">    <span class="keyword">if</span> from_user.phone == phone:</span><br><span class="line">        print(time.asctime(), <span class="string">&#x27;-&#x27;</span>, event.message)</span><br><span class="line">        <span class="comment"># 本物の女の子でテストしたところ、彼女は2回目の返信でそれを理解しました </span></span><br><span class="line">        <span class="comment"># したがって、5〜59秒以内にランダムに返信することを選択します </span></span><br><span class="line">        <span class="keyword">await</span> asyncio.sleep(random.randrange(<span class="number">5</span>, <span class="number">59</span>))</span><br><span class="line">        <span class="keyword">if</span> random.choice([<span class="literal">True</span>, <span class="literal">False</span>]):</span><br><span class="line">            i, s = random.randrange(<span class="number">2</span>, <span class="number">5</span>), random.choice(greetings)</span><br><span class="line">            <span class="comment"># 2〜5秒入力 </span></span><br><span class="line">            <span class="keyword">async</span> <span class="keyword">with</span> client.action(phone, <span class="string">&#x27;typing&#x27;</span>):</span><br><span class="line">                <span class="keyword">await</span> asyncio.sleep(i)</span><br><span class="line">                <span class="keyword">await</span> client.send_message(phone, s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(time.asctime(), <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;Auto-replying...&#x27;</span>)</span><br><span class="line">client.start()</span><br><span class="line">client.run_until_disconnected()</span><br><span class="line">print(time.asctime(), <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;Stopped!&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="予約メッセージ"><a href="#予約メッセージ" class="headerlink" title="予約メッセージ"></a>予約メッセージ</h2><p>「彼女をスパムします。友達」 </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> telethon <span class="keyword">import</span> TelegramClient, events</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">api_id = <span class="number">123456</span></span><br><span class="line">api_hash = <span class="string">&#x27;xxxx&#x27;</span></span><br><span class="line">phone = <span class="string">&#x27;123456789&#x27;</span></span><br><span class="line"></span><br><span class="line">client = TelegramClient(<span class="string">&#x27;session&#x27;</span>, api_id, api_hash)</span><br><span class="line">greetings = [<span class="string">&#x27;Yo!&#x27;</span>, <span class="string">&#x27;Hi&#x27;</span>, <span class="string">&#x27;Hello&#x27;</span>, <span class="string">&#x27;How have you been?&#x27;</span>, <span class="string">&#x27;How are you?&#x27;</span>, <span class="string">&#x27;What\&#x27;s up today?&#x27;</span>, <span class="string">&#x27;How are you doing?&#x27;</span>, <span class="string">&#x27;How\’s it going?&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">asking</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">await</span> client.send_message(phone, s)</span><br><span class="line"></span><br><span class="line">hour = <span class="number">60</span>*<span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">await</span> asking(random.choice(annoyingStrings))</span><br><span class="line">        i = random.randrange(<span class="number">12</span>*hour, <span class="number">24</span>*hour)</span><br><span class="line">        time.sleep(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> client:</span><br><span class="line">    client.loop.run_until_complete(main())</span><br></pre></td></tr></table></figure>

<hr>
<p>いずれにせよ、リストテンプレートの機能は、会話を1分以上持続させるのに十分ではありません。 </p>
<p><code>Her.msg-&gt;テレソン-&gt; AIボット</code><br><code>彼女&lt;-テレソン&lt;-bot.msg</code> </p>
<p>良い解決策かもしれません🌚🌚🌚 </p>
]]></content>
      <tags>
        <tag>Tech</tag>
        <tag>Auto</tag>
      </tags>
  </entry>
  <entry>
    <title>ユーバー予約アニメーション</title>
    <url>/ja/Uber-Booking-Animation/</url>
    <content><![CDATA[<p>今年の6月にサンノゼのWWDCに参加しました。クパチーノ図書館でUberを使って友達に会ったときに見た待ち合わせアニメーションでした。 </p>
<p>アニメーションは素晴らしいです！ </p>
<p>彼らがどうやってそれをしたのか興味があったので、私はいくつかの調査をしました。 </p>
<h2 id="プレビュー"><a href="#プレビュー" class="headerlink" title="プレビュー"></a>プレビュー</h2><video width="360" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/UberBookingAnimation.mp4">
</video>

<p>まあ、ポリラインアニメーションはまだ十分に滑らかではありません。 誰かもっと良いアイデアがありますか？ </p>
<a id="more"></a>

<h2 id="ステップバイステップ"><a href="#ステップバイステップ" class="headerlink" title="ステップバイステップ"></a>ステップバイステップ</h2><h3 id="マップを回転させる"><a href="#マップを回転させる" class="headerlink" title="マップを回転させる"></a>マップを回転させる</h3><p>次の2つの理由から、デフォルトのマップとしてMapを選択しました。 </p>
<ul>
<li>WWDC19以降、SimulatorはMapKitに含まれるすべてのAppleフレームワークのメタレイヤーとコアレイヤーに構築され、Metalは基盤となるMacシステムのGPUを使用します。 </li>
<li>Google Mapにアクセスするには開発者キーが必要です。つまり、GitHubからリポジトリをフォークした後は、エミュレータで直接実行することはできません。 </li>
</ul>
<p>マップトランザクションは、 <code>UIView.animate</code>ブロックに埋め込むことで調整できます </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">UIView</span>.animate(withDuration: <span class="number">1</span>, delay: <span class="number">0</span>, options: .curveEaseInOut, animations: &#123;  [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">self</span>?.mapView.setCamera(<span class="type">MKMapCamera</span>(lookingAtCenter: center, fromDistance: fromDistance, pitch: pitch, heading: <span class="number">0</span>), animated: <span class="literal">true</span>)</span><br><span class="line">&#125;) &#123; b <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">self</span>.pinAnimation()</span><br><span class="line">    <span class="type">UIView</span>.animate(withDuration: <span class="number">180</span>, delay: <span class="number">0</span>, options: [.curveLinear, .autoreverse], animations: &#123;  [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">self</span>?.mapView.setCamera(<span class="type">MKMapCamera</span>(lookingAtCenter: center, fromDistance: fromDistance, pitch: pitch, heading: heading), animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>GoogleMapは <code>CATransaction</code>を使用する必要があります </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">CATransaction</span>.begin()</span><br><span class="line"><span class="type">CATransaction</span>.setValue(<span class="type">NSNumber</span>(float: <span class="number">1.0</span>), forKey: kCATransactionAnimationDuration)</span><br><span class="line"><span class="comment">// change the camera, set the zoom, whatever.</span></span><br><span class="line"><span class="type">CATransaction</span>.commit()</span><br></pre></td></tr></table></figure>

<h3 id="アニメーションを修正"><a href="#アニメーションを修正" class="headerlink" title="アニメーションを修正"></a>アニメーションを修正</h3><p>アニメーションを作成するには、2つの <code>CAShapeLayer</code>が必要です。1つは円用、もう1つはプッシュピン用です。<br>最大値に達すると円が消え、ピンには「easyIn」カーブがあることに注意してください。 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">//   Pin Animation</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">MainViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">setUpLayers</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        circleLayer.lineWidth = <span class="number">1.5</span></span><br><span class="line">        circleLayer.strokeColor = <span class="type">UIColor</span>.white.cgColor</span><br><span class="line">        circleLayer.fillColor = <span class="type">UIColor</span>.clear.cgColor</span><br><span class="line">        circleLayer.path = <span class="type">UIBezierPath</span>(ovalIn: circleView.bounds).cgPath</span><br><span class="line"></span><br><span class="line">        circleLayer.shadowColor = <span class="type">UIColor</span>.white.cgColor</span><br><span class="line"></span><br><span class="line">        pinLayer.fillColor = <span class="type">UIColor</span>.white.cgColor</span><br><span class="line">        pinLayer.path = <span class="type">UIBezierPath</span>(roundedRect: pinView.bounds, cornerRadius: <span class="number">1</span>).cgPath</span><br><span class="line">        pinLayer.opacity = <span class="number">0.9</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">pinAnimation</span><span class="params">()</span></span> &#123;</span><br><span class="line">        setUpLayers()</span><br><span class="line"></span><br><span class="line">        circleView.layer.addSublayer(circleLayer)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.circleView.transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">0.01</span>, y: <span class="number">0.01</span>)</span><br><span class="line">        <span class="keyword">self</span>.circleView.alpha = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="type">UIView</span>.animate(withDuration: <span class="number">2</span>, delay: <span class="number">0</span>, options: [.<span class="keyword">repeat</span>], animations: &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">self</span>?.circleView.transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">1</span>, y: <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">self</span>?.circleView.alpha = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        &#125;, completion: <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        pinView.layer.addSublayer(pinLayer)</span><br><span class="line">        <span class="type">UIView</span>.animate(withDuration: <span class="number">1</span>, delay: <span class="number">0</span>, options: [.curveEaseIn, .<span class="keyword">repeat</span>, .autoreverse], animations: &#123;  [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">self</span>?.pinView.transform = <span class="type">CGAffineTransform</span>(translationX: <span class="number">0</span>, y: -<span class="number">4</span>)</span><br><span class="line">            <span class="keyword">self</span>?.pinView.transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">0.5</span>, y: <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="地図上にポリラインを描く"><a href="#地図上にポリラインを描く" class="headerlink" title="地図上にポリラインを描く"></a>地図上にポリラインを描く</h3><p>マップは <code>MKMapViewDelegate</code>を使用して描画を処理します。 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">mapView</span><span class="params">(<span class="number">_</span> mapView: MKMapView, rendererFor overlay: MKOverlay)</span></span> -&gt; <span class="type">MKOverlayRenderer</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> overlay = overlay <span class="keyword">as</span>? <span class="type">MKPolyline</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> polyline = <span class="type">MKPolylineRenderer</span>(overlay: overlay)</span><br><span class="line">        polyline.strokeColor = .white</span><br><span class="line">        polyline.lineWidth = <span class="number">1.5</span></span><br><span class="line">        <span class="keyword">return</span> polyline</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="type">MKOverlayRenderer</span>(overlay: overlay)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>これはポリラインを追加する方法です </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> currentSegment = <span class="type">MKPolyline</span>(coordinates: subCoordinates, <span class="built_in">count</span>: subCoordinates.<span class="built_in">count</span>)</span><br><span class="line"><span class="keyword">self</span>.mapView.addOverlay(currentSegment)</span><br></pre></td></tr></table></figure>

<h3 id="アニメーションポリライン"><a href="#アニメーションポリライン" class="headerlink" title="アニメーションポリライン"></a>アニメーションポリライン</h3><p>それはトリッキーな部分です。 </p>
<p>Uberのアニメーションが十分に近いことがわかると、ポリラインはマップと一緒に回転してマップ上に描画されます。 </p>
<p>私がやりたいのは、それがアニメーションであるかのように見せかけるために、マップ上でポリラインを追加および削除し続けることです。<br>同様に、プッシュピンの最初と最後に表示される場合、行にはタイトルとテールがあります。 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">animate</span><span class="params">(route: [CLLocationCoordinate2D], duration: TimeInterval, completion: <span class="params">(<span class="params">()</span></span></span></span> -&gt; <span class="type">Void</span>)? = <span class="literal">nil</span>) &#123;</span><br><span class="line">    <span class="keyword">guard</span> route.<span class="built_in">count</span> &gt; <span class="number">0</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> currentStep = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> delta = <span class="number">25</span>, opt = <span class="number">3.0</span></span><br><span class="line">    <span class="keyword">let</span> totalSteps = route.<span class="built_in">count</span> + delta</span><br><span class="line">    <span class="keyword">let</span> stepDrawDur = duration / <span class="type">TimeInterval</span>(totalSteps) * opt</span><br><span class="line">    <span class="keyword">var</span> prePolyline: <span class="type">MKPolyline?</span></span><br><span class="line"></span><br><span class="line">    drawingTimer = <span class="type">Timer</span>.scheduledTimer(withTimeInterval: stepDrawDur, repeats: <span class="literal">true</span>) &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] timer <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">defer</span> &#123; completion?() &#125;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> <span class="keyword">self</span> = <span class="keyword">self</span> <span class="keyword">else</span> &#123;</span><br><span class="line">            timer.invalidate()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> previous = prePolyline &#123;</span><br><span class="line">            <span class="keyword">self</span>.mapView.removeOverlay(previous)</span><br><span class="line">            prePolyline = <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> currentStep &gt; totalSteps &#123;</span><br><span class="line">            timer.invalidate()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> start = currentStep-delta &lt; <span class="number">0</span> ? <span class="number">0</span> : currentStep-delta</span><br><span class="line">        <span class="keyword">let</span> end = currentStep &gt; route.<span class="built_in">count</span> ? route.<span class="built_in">count</span> : currentStep</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> subCoordinates = <span class="type">Array</span>(route[start..&lt;end])</span><br><span class="line">        <span class="keyword">let</span> currentSegment = <span class="type">MKPolyline</span>(coordinates: subCoordinates, <span class="built_in">count</span>: subCoordinates.<span class="built_in">count</span>)</span><br><span class="line">        <span class="keyword">self</span>.mapView.addOverlay(currentSegment)</span><br><span class="line"></span><br><span class="line">        prePolyline = currentSegment</span><br><span class="line">        currentStep += <span class="type">Int</span>(opt)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>こちらが<a href="https://github.com/leihao0/UberBookingAnimation">リポジトリ</a>です。もっと良いアイデアがあれば教えてください:) </p>
<h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><p>画面の更新速度は60fpsな​​ので、合計ステップ数/期間は約60になります。 </p>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>MapKit</tag>
      </tags>
  </entry>
  <entry>
    <title>ディープラーニングコース2</title>
    <url>/ja/Deep-Learning-Course-2/</url>
    <content><![CDATA[<h2 id="ディープニューラルネットワークの改善：ハイパーパラメータの調整、正則化、最適化"><a href="#ディープニューラルネットワークの改善：ハイパーパラメータの調整、正則化、最適化" class="headerlink" title="ディープニューラルネットワークの改善：ハイパーパラメータの調整、正則化、最適化"></a>ディープニューラルネットワークの改善：ハイパーパラメータの調整、正則化、最適化</h2><h2 id="1週目"><a href="#1週目" class="headerlink" title="1週目"></a>1週目</h2><h2 id="2週目"><a href="#2週目" class="headerlink" title="2週目"></a>2週目</h2><h3 id="1-最急降下法"><a href="#1-最急降下法" class="headerlink" title="1-最急降下法"></a>1-最急降下法</h3><p><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="min-width: 30.301ex"><svg style="vertical-align: -0.784ex; min-width: 30.301ex" xmlns="http://www.w3.org/2000/svg" width="100%" height="2.7ex" role="img" focusable="false"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0) scale(0.0181) translate(0, -846.7)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078, 0) translate(-2078, 0)"><g transform="translate(0 846.7) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="4618.6 -846.7 1 1193.3"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0, -96.7)"><g data-mml-node="mtd"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2034.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(3090.6, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5069.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(6070.1, 0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mtext" transform="translate(6710.1, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(6960.1, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(7480.1, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -846.7 1 1193.3"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn-1" transform="translate(0, -96.7)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(389, 0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889, 0)"></path></g></g></g></svg></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="min-width: 25.725ex"><svg style="vertical-align: -0.784ex; min-width: 25.725ex" xmlns="http://www.w3.org/2000/svg" width="100%" height="2.7ex" role="img" focusable="false"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0) scale(0.0181) translate(0, -846.7)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078, 0) translate(-2078, 0)"><g transform="translate(0 846.7) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="3607.3 -846.7 1 1193.3"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0, -96.7)"><g data-mml-node="mtd"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="TeXAtom" transform="translate(429, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1360.6, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(2416.4, 0)"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="TeXAtom" transform="translate(429, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3721.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4721.7, 0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mtext" transform="translate(5361.7, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(5611.7, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(6131.7, 0)"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="TeXAtom" transform="translate(429, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -846.7 1 1193.3"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn-2" transform="translate(0, -96.7)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(389, 0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889, 0)"></path></g></g></g></svg></g></g></g></g></svg></mjx-container></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">parameters[<span class="string">"W"</span>+i] = parameters[<span class="string">"W"</span>+i] - learning_rate * grads[<span class="string">'dW'</span>+i]</span><br><span class="line">parameters[<span class="string">"b"</span>+i] = parameters[<span class="string">"b"</span>+i] - learning_rate * grads[<span class="string">'db'</span>+i]</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="2-ミニバッチ最急降下法"><a href="#2-ミニバッチ最急降下法" class="headerlink" title="2-ミニバッチ最急降下法"></a>2-ミニバッチ最急降下法</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="17.124ex" height="4.106ex" role="img" focusable="false" viewBox="0 -1118 7569 1815"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(444, 0)"><g data-mml-node="mi" transform="translate(2901.5, 676)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1223, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1823, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2168, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(2597, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3126, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3487, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(3920, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(4496, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(4965, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5310, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(5775, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="6441" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(7125, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="38.762ex" height="4.106ex" role="img" focusable="false" viewBox="0 -1118 17132.9 1815"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1100.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(2100.4, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2978.4, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3323.4, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3923.4, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4268.4, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(4697.4, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(5226.4, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(5587.4, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(6020.4, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(6596.4, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(7065.4, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(7410.4, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(7875.4, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(8563.7, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mo" transform="translate(9563.9, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(10007.9, 0)"><g data-mml-node="mi" transform="translate(2901.5, 676)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1223, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1823, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2168, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(2597, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3126, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3487, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(3920, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(4496, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(4965, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5310, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(5775, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="6441" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(16688.9, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mini_batch_X = shuffled_X[:, k * mini_batch_size: (k+<span class="number">1</span>) * mini_batch_size]</span><br><span class="line">mini_batch_Y = shuffled_Y[:, k * mini_batch_size: (k+<span class="number">1</span>) * mini_batch_size]</span><br><span class="line"><span class="comment"># ..。 </span></span><br><span class="line">mini_batch_X = shuffled_X[:, mini_batch_size * num_complete_minibatches]</span><br><span class="line">mini_batch_Y = shuffled_Y[:, mini_batch_size * num_complete_minibatches]</span><br></pre></td></tr></table></figure>

<h3 id="3-勢い"><a href="#3-勢い" class="headerlink" title="3-勢い"></a>3-勢い</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">v[<span class="string">"dW"</span>+i] = np.zeros_like(parameters[<span class="string">'W'</span>+i])</span><br><span class="line">v[<span class="string">"db"</span>+i] = np.zeros_like(parameters[<span class="string">'b'</span>+i])</span><br></pre></td></tr></table></figure>

<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="72.114ex" height="2.7ex" role="img" focusable="false" viewBox="0 -943.3 31874.4 1193.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2422.9, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mtext" fill="red" stroke="red" transform="translate(3478.7, 0)"><path data-c="5C" d="M56 731Q56 740 62 745T75 750Q85 750 92 740Q96 733 270 255T444 -231Q444 -239 438 -244T424 -250Q414 -250 407 -240Q404 -236 230 242T56 731Z"></path><text data-variant="normal" transform="translate(500, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">ベ</text></g><g data-mml-node="mo" transform="translate(5156.5, 0)"><text data-variant="normal" transform="matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">ー</text><text data-variant="normal" transform="translate(900, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">タ</text></g><g data-mml-node="msub" transform="translate(7234.2, 0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(9601.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(10601.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(10990.8, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(11713, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" fill="red" stroke="red" transform="translate(12713.3, 0)"><path data-c="5C" d="M56 731Q56 740 62 745T75 750Q85 750 92 740Q96 733 270 255T444 -231Q444 -239 438 -244T424 -250Q414 -250 407 -240Q404 -236 230 242T56 731Z"></path><text data-variant="normal" transform="translate(500, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">ベ</text></g><g data-mml-node="mo" transform="translate(14391, 0)"><text data-variant="normal" transform="matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">ー</text><text data-variant="normal" transform="translate(900, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">タ</text></g><g data-mml-node="mo" transform="translate(16191, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(16580, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(17100, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="msup" transform="translate(18857.1, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(20892, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(21947.7, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(23927, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(24927.2, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(25177.2, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(25706.2, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(26004.2, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(26507.2, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(27083.2, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="msub" transform="translate(27612.2, 0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mtext" transform="translate(29757.4, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(30007.4, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(30368.4, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(30897.4, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(31374.4, 0)"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container><br>$$</p>
<p>v <span>\</span> * {db ^ {[l]}} = \ beta v <span>\</span> * {db ^ {[l]}} +(1- \ beta)db ^ {[l]}<br>b ^ {[l]} = b ^ {[l]}-\ alpha v <span>\</span> _ {db ^ {[l]}}<br>\ tag {4} <span>\</span> <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="0.566ex" height="0" role="img" focusable="false" viewBox="0 0 250 0"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="A0" d=""></path></g></g></g></svg></mjx-container> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">v[<span class="string">"dW"</span>+i] = beta * v[<span class="string">"dW"</span>+i] + (<span class="number">1</span> - beta) * grads[<span class="string">'dW'</span>+i]</span><br><span class="line">v[<span class="string">"db"</span>+i] = beta * v[<span class="string">"db"</span>+i] + (<span class="number">1</span> - beta) * grads[<span class="string">'db'</span>+i]</span><br><span class="line"><span class="comment"># パラメータを更新します </span></span><br><span class="line">parameters[<span class="string">"W"</span>+i] = parameters[<span class="string">"W"</span>+i] - learning_rate * v[<span class="string">"dW"</span>+i]</span><br><span class="line">parameters[<span class="string">"b"</span>+i] = parameters[<span class="string">"b"</span>+i] - learning_rate * v[<span class="string">"db"</span>+i]</span><br></pre></td></tr></table></figure>

<h3 id="4-アダム"><a href="#4-アダム" class="headerlink" title="4-アダム"></a>4-アダム</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">v[<span class="string">"dW"</span>+i] = np.zeros_like(parameters[<span class="string">"W"</span>+i])</span><br><span class="line">v[<span class="string">"db"</span>+i] = np.zeros_like(parameters[<span class="string">"b"</span>+i])</span><br><span class="line">s[<span class="string">"dW"</span>+i] = np.zeros_like(parameters[<span class="string">"W"</span>+i])</span><br><span class="line">s[<span class="string">"db"</span>+i] = np.zeros_like(parameters[<span class="string">"b"</span>+i])</span><br></pre></td></tr></table></figure>

<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.813ex" xmlns="http://www.w3.org/2000/svg" width="30.121ex" height="4.96ex" role="img" focusable="false" viewBox="0 -1391 13313.5 2192.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2055.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3111, 0)"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="mn" transform="translate(566, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msub" transform="translate(4080.5, 0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(6080.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(7080.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(7469.4, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8191.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(9191.9, 0)"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="mn" transform="translate(566, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(10161.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mfrac" transform="translate(10550.4, 0)"><g data-mml-node="mrow" transform="translate(782, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -779.3)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g><rect width="2523.1" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p>
<p>$$v^{corrected}<em>{dW^{[l]}} = \frac{v</em>{dW^{[l]}}}{1 - (\beta_1)^t}$$</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.813ex" xmlns="http://www.w3.org/2000/svg" width="34.386ex" height="4.96ex" role="img" focusable="false" viewBox="0 -1391 15198.4 2192.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2406.9, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3462.7, 0)"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="mn" transform="translate(566, -150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="msub" transform="translate(4432.2, 0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(6783.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(7783.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(8172.8, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8895, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(9895.3, 0)"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="mn" transform="translate(566, -150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(10864.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11253.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mfrac" transform="translate(11642.8, 0)"><g data-mml-node="mrow" transform="translate(679, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="4A" d="M148 78Q148 16 189 -17T286 -50Q319 -50 348 -33T396 10T426 59T444 101L471 204Q498 306 521 372Q575 532 649 605L659 614H591Q517 613 494 607Q433 591 400 550T360 477Q353 454 325 437T275 419Q256 419 260 435Q280 523 376 597T583 681Q603 683 713 683H830Q839 674 839 671Q839 654 810 634T754 614Q735 614 721 601Q688 571 654 495T600 351T561 209T541 132Q507 29 412 -45T213 -119Q141 -119 94 -77T47 33Q47 55 50 69T58 90T71 103Q105 131 135 131Q152 131 152 120Q152 119 151 114T149 99T148 78Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(220, -779.3)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g><rect width="2523.1" height="60" x="120" y="220"></rect></g><g data-mml-node="msup" transform="translate(14405.9, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p>$$s^{corrected}<em>{dW^{[l]}} = \frac{s</em>{dW^{[l]}}}{1 - (\beta_2)^t}$$</p>
<p>$$W^{[l]} = W^{[l]} - \alpha \frac{v^{corrected}<em>{dW^{[l]}}}{\sqrt{s^{corrected}</em>{dW^{[l]}}} + \varepsilon}$$</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">v[<span class="string">"dW"</span>+i] = beta1 * v[<span class="string">"dW"</span>+i] + (<span class="number">1</span> - beta1) * grads[<span class="string">'dW'</span>+i]</span><br><span class="line">v[<span class="string">"db"</span>+i] = beta1 * v[<span class="string">"db"</span>+i] + (<span class="number">1</span> - beta1) * grads[<span class="string">'db'</span>+i]</span><br><span class="line"></span><br><span class="line">v_corrected[<span class="string">"dW"</span>+i] = v[<span class="string">"dW"</span>+i] / (<span class="number">1</span> - beta1**t)</span><br><span class="line">v_corrected[<span class="string">"db"</span>+i] = v[<span class="string">"db"</span>+i] / (<span class="number">1</span> - beta1**t)</span><br><span class="line"></span><br><span class="line">s[<span class="string">"dW"</span>+i] = beta2 * s[<span class="string">"dW"</span>+i] + (<span class="number">1</span> - beta2) * (grads[<span class="string">'dW'</span>+i])**<span class="number">2</span></span><br><span class="line">s[<span class="string">"db"</span>+i] = beta2 * s[<span class="string">"db"</span>+i] + (<span class="number">1</span> - beta2) * (grads[<span class="string">'db'</span>+i])**<span class="number">2</span></span><br><span class="line"></span><br><span class="line">s_corrected[<span class="string">"dW"</span>+i] = s[<span class="string">"dW"</span>+i] / (<span class="number">1</span> - beta2**t)</span><br><span class="line">s_corrected[<span class="string">"db"</span>+i] = s[<span class="string">"db"</span>+i] / (<span class="number">1</span> - beta2**t)</span><br><span class="line"></span><br><span class="line">parameters[<span class="string">"W"</span>+i] = parameters[<span class="string">"W"</span>+i] - learning_rate * (v_corrected[<span class="string">"dW"</span>+i] / (np.sqrt(s_corrected[<span class="string">"dW"</span>+i]) + epsilon))</span><br><span class="line">parameters[<span class="string">"b"</span>+i] = parameters[<span class="string">"b"</span>+i] - learning_rate * (v_corrected[<span class="string">"db"</span>+i] / (np.sqrt(s_corrected[<span class="string">"db"</span>+i]) + epsilon))</span><br></pre></td></tr></table></figure>

<h2 id="3週目"><a href="#3週目" class="headerlink" title="3週目"></a>3週目</h2><h3 id="1-1-線形関数"><a href="#1-1-線形関数" class="headerlink" title="1.1-線形関数"></a>1.1-線形関数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X = np.random.randn(<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line">W = np.random.randn(<span class="number">4</span>,<span class="number">3</span>)</span><br><span class="line">b = np.random.randn(<span class="number">4</span>,<span class="number">1</span>)</span><br><span class="line">Y = tf.add(tf.matmul(W, X), b)</span><br><span class="line"></span><br><span class="line">sess = tf.Session()</span><br><span class="line">result = sess.run(Y)</span><br></pre></td></tr></table></figure>

<h3 id="1-2-S状結腸の計算"><a href="#1-2-S状結腸の計算" class="headerlink" title="1.2-S状結腸の計算"></a>1.2-S状結腸の計算</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = tf.placeholder(tf.float32, name = <span class="string">"x"</span>)</span><br><span class="line">sigmoid = tf.sigmoid(x)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    result = sess.run(sigmoid, feed_dict = {x: z})</span><br></pre></td></tr></table></figure>

<h3 id="1-3-コストの計算"><a href="#1-3-コストの計算" class="headerlink" title="1.3-コストの計算"></a>1.3-コストの計算</h3><p>$$ J = - \frac{1}{m}  \sum_{i = 1}^m  \large ( \small y^{(i)} \log a^{ <a href="i">2</a>} + (1-y^{(i)})\log (1-a^{ <a href="i">2</a>} )\large )\small\tag{2}$$</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">z = tf.placeholder(tf.float32, name=<span class="string">'z'</span>)</span><br><span class="line">y = tf.placeholder(tf.float32, name=<span class="string">'y'</span>)</span><br><span class="line"></span><br><span class="line">cost = tf.nn.sigmoid_cross_entropy_with_logits(logits = z,  labels = y)</span><br><span class="line"></span><br><span class="line">sess = tf.Session()</span><br><span class="line">cost = sess.run(cost, feed_dict = {z: logits, y: labels})</span><br><span class="line">sess.close()</span><br></pre></td></tr></table></figure>

<h3 id="1-4-1つのホットエンコーディングを使用する"><a href="#1-4-1つのホットエンコーディングを使用する" class="headerlink" title="1.4-1つのホットエンコーディングを使用する"></a>1.4-1つのホットエンコーディングを使用する</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C = tf.constant(C)</span><br><span class="line">one_hot_matrix = tf.one_hot(labels, C, axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">sess = tf.Session()</span><br><span class="line">one_hot = sess.run(one_hot_matrix)</span><br><span class="line">sess.close()</span><br></pre></td></tr></table></figure>

<h3 id="1-5-ゼロと1で初期化します"><a href="#1-5-ゼロと1で初期化します" class="headerlink" title="1.5-ゼロと1で初期化します"></a>1.5-ゼロと1で初期化します</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ones = tf.ones(shape)</span><br><span class="line"></span><br><span class="line">sess = tf.Session()</span><br><span class="line">ones = sess.run(ones)</span><br><span class="line">sess.close()</span><br></pre></td></tr></table></figure>

<h3 id="2-1-プレースホルダーを作成する"><a href="#2-1-プレースホルダーを作成する" class="headerlink" title="2.1-プレースホルダーを作成する"></a>2.1-プレースホルダーを作成する</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X = tf.placeholder(tf.float32, [n_x, <span class="literal">None</span>])</span><br><span class="line">Y = tf.placeholder(tf.float32, [n_y, <span class="literal">None</span>])</span><br></pre></td></tr></table></figure>

<h3 id="2-2-パラメータの初期化"><a href="#2-2-パラメータの初期化" class="headerlink" title="2.2-パラメータの初期化"></a>2.2-パラメータの初期化</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">W1 = tf.get_variable(<span class="string">"W1"</span>, [<span class="number">25</span>,<span class="number">12288</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">1</span>))</span><br><span class="line">b1 = tf.get_variable(<span class="string">"b1"</span>, [<span class="number">25</span>,<span class="number">1</span>], initializer = tf.zeros_initializer())</span><br><span class="line">W2 = tf.get_variable(<span class="string">"W2"</span>, [<span class="number">12</span>,<span class="number">25</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">1</span>))</span><br><span class="line">b2 = tf.get_variable(<span class="string">"b2"</span>, [<span class="number">12</span>,<span class="number">1</span>], initializer = tf.zeros_initializer())</span><br><span class="line">W3 = tf.get_variable(<span class="string">"W3"</span>, [<span class="number">6</span>,<span class="number">12</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">1</span>))</span><br><span class="line">b3 = tf.get_variable(<span class="string">"b3"</span>, [<span class="number">6</span>,<span class="number">1</span>], initializer = tf.zeros_initializer())</span><br></pre></td></tr></table></figure>

<h3 id="2-3-テンソルフローの順伝播"><a href="#2-3-テンソルフローの順伝播" class="headerlink" title="2.3-テンソルフローの順伝播"></a>2.3-テンソルフローの順伝播</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Z1 = tf.matmul(W1, X) + b1</span><br><span class="line">A1 = tf.nn.relu(Z1)</span><br><span class="line">Z2 = tf.matmul(W2, A1) + b2</span><br><span class="line">A2 = tf.nn.relu(Z2)</span><br><span class="line">Z3 = tf.matmul(W3, A2) + b3</span><br></pre></td></tr></table></figure>

<h3 id="2-4計算コスト"><a href="#2-4計算コスト" class="headerlink" title="2.4計算コスト"></a>2.4計算コスト</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cost = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits = logits, labels = labels))</span><br></pre></td></tr></table></figure>

<h3 id="2-5-後方伝播とパラメータの更新"><a href="#2-5-後方伝播とパラメータの更新" class="headerlink" title="2.5-後方伝播とパラメータの更新"></a>2.5-後方伝播とパラメータの更新</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X, Y = create_placeholders(n_x, n_y)</span><br><span class="line">parameters = initialize_parameters()</span><br><span class="line">Z3 = forward_propagation(X, parameters)</span><br><span class="line">cost = compute_cost(Z3, Y)</span><br><span class="line">optimizer = tf.train.AdamOptimizer(learning_rate = learning_rate).minimize(cost)</span><br><span class="line"><span class="comment"># ..。 </span></span><br><span class="line">_ , minibatch_cost = sess.run([optimizer, cost], feed_dict={X: minibatch_X, Y: minibatch_Y})</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>ディープラーニングコース4</title>
    <url>/ja/Deep-Learning-Course-4/</url>
    <content><![CDATA[<h2 id="1週目-畳み込みニューラルネットワーク"><a href="#1週目-畳み込みニューラルネットワーク" class="headerlink" title="1週目-畳み込みニューラルネットワーク"></a>1週目-畳み込みニューラルネットワーク</h2><h2 id="ステップバイステップ"><a href="#ステップバイステップ" class="headerlink" title="ステップバイステップ"></a>ステップバイステップ</h2><h3 id="3-1-ゼロパディング"><a href="#3-1-ゼロパディング" class="headerlink" title="3.1-ゼロパディング"></a>3.1-ゼロパディング</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X_pad = np.pad(X, ((<span class="number">0</span>, <span class="number">0</span>), (pad, pad), (pad, pad), (<span class="number">0</span>,<span class="number">0</span>)), mode=<span class="string">'constant'</span>, constant_values = (<span class="number">0</span>,<span class="number">0</span>))</span><br></pre></td></tr></table></figure>

<h3 id="3-2-畳み込みのシングルステップ"><a href="#3-2-畳み込みのシングルステップ" class="headerlink" title="3.2-畳み込みのシングルステップ"></a>3.2-畳み込みのシングルステップ</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">s = a_slice_prev * W</span><br><span class="line">Z = np.sum(s)</span><br><span class="line">Z = Z + np.sum(b)</span><br></pre></td></tr></table></figure>

<h3 id="3-3-畳み込みニューラルネットワーク-フォワードパス"><a href="#3-3-畳み込みニューラルネットワーク-フォワードパス" class="headerlink" title="3.3-畳み込みニューラルネットワーク-フォワードパス"></a>3.3-畳み込みニューラルネットワーク-フォワードパス</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="32.029ex" height="5.011ex" role="img" focusable="false" viewBox="0 -1518.1 14156.7 2215.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g><g data-mml-node="mo" transform="translate(1555.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2611.5, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(3055.5, 0)"><g data-mml-node="mrow" transform="translate(220, 813.1)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="TeXAtom" transform="translate(831, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2447.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3447.9, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4220.1, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(5220.3, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(5942.6, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(6942.8, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(7445.8, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(7974.8, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mrow" transform="translate(3161.4, -686)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1281, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1626, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2146, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="8694.8" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(11990.3, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g><g data-mml-node="mo" transform="translate(12656.5, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(13656.7, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="32.465ex" height="5.011ex" role="img" focusable="false" viewBox="0 -1518.1 14349.7 2215.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g></g><g data-mml-node="mo" transform="translate(1668.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2724.6, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(3168.6, 0)"><g data-mml-node="mrow" transform="translate(220, 813.1)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(944, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2527.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3527.8, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4300, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(5300.3, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(6022.5, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(7022.7, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(7525.7, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(8054.7, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mrow" transform="translate(3201.3, -686)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1281, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1626, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2146, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="8774.7" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(12183.3, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g><g data-mml-node="mo" transform="translate(12849.5, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(13849.7, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="45.029ex" height="1.97ex" role="img" focusable="false" viewBox="0 -705 19903 870.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g></g><g data-mml-node="mo" transform="translate(1465.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mtext" transform="translate(2521, 0)"><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(556, 0)"></path><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1112, 0)"></path><path data-c="62" d="M307 -11Q234 -11 168 55L158 37Q156 34 153 28T147 17T143 10L138 1L118 0H98V298Q98 599 97 603Q94 622 83 628T38 637H20V660Q20 683 22 683L32 684Q42 685 61 686T98 688Q115 689 135 690T165 693T176 694H179V543Q179 391 180 391L183 394Q186 397 192 401T207 411T228 421T254 431T286 439T323 442Q401 442 461 379T522 216Q522 115 458 52T307 -11ZM182 98Q182 97 187 90T196 79T206 67T218 55T233 44T250 35T271 29T295 26Q330 26 363 46T412 113Q424 148 424 212Q424 287 412 323Q385 405 300 405Q270 405 239 390T188 347L182 339V98Z" transform="translate(1945, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(2501, 0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(2945, 0)"></path><path data-c="20" d="" transform="translate(3337, 0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(3587, 0)"></path><path data-c="66" d="M273 0Q255 3 146 3Q43 3 34 0H26V46H42Q70 46 91 49Q99 52 103 60Q104 62 104 224V385H33V431H104V497L105 564L107 574Q126 639 171 668T266 704Q267 704 275 704T289 705Q330 702 351 679T372 627Q372 604 358 590T321 576T284 590T270 627Q270 647 288 667H284Q280 668 273 668Q245 668 223 647T189 592Q183 572 182 497V431H293V385H185V225Q185 63 186 61T189 57T194 54T199 51T206 49T213 48T222 47T231 47T241 46T251 46H282V0H273Z" transform="translate(4087, 0)"></path><path data-c="20" d="" transform="translate(4393, 0)"></path><path data-c="66" d="M273 0Q255 3 146 3Q43 3 34 0H26V46H42Q70 46 91 49Q99 52 103 60Q104 62 104 224V385H33V431H104V497L105 564L107 574Q126 639 171 668T266 704Q267 704 275 704T289 705Q330 702 351 679T372 627Q372 604 358 590T321 576T284 590T270 627Q270 647 288 667H284Q280 668 273 668Q245 668 223 647T189 592Q183 572 182 497V431H293V385H185V225Q185 63 186 61T189 57T194 54T199 51T206 49T213 48T222 47T231 47T241 46T251 46H282V0H273Z" transform="translate(4643, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(4949, 0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(5227, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(5505, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(5894, 0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(6338, 0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(6730, 0)"></path><path data-c="20" d="" transform="translate(7124, 0)"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(7374, 0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(7930, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(8324, 0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(8768, 0)"></path><path data-c="20" d="" transform="translate(9324, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(9574, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(9852, 0)"></path><path data-c="20" d="" transform="translate(10408, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(10658, 0)"></path><path data-c="68" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 124T102 167T103 217T103 272T103 329Q103 366 103 407T103 482T102 542T102 586T102 603Q99 622 88 628T43 637H25V660Q25 683 27 683L37 684Q47 685 66 686T103 688Q120 689 140 690T170 693T181 694H184V367Q244 442 328 442Q451 442 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(11047, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(11603, 0)"></path><path data-c="20" d="" transform="translate(12047, 0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(12297, 0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(12741, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(13241, 0)"></path><path data-c="76" d="M338 431Q344 429 422 429Q479 429 503 431H508V385H497Q439 381 423 345Q421 341 356 172T288 -2Q283 -11 263 -11Q244 -11 239 -2Q99 359 98 364Q93 378 82 381T43 385H19V431H25L33 430Q41 430 53 430T79 430T104 429T122 428Q217 428 232 431H240V385H226Q187 384 184 370Q184 366 235 234L286 102L377 341V349Q377 363 367 372T349 383T335 385H331V431H338Z" transform="translate(13797, 0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(14325, 0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(14825, 0)"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(15103, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(15659, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(16048, 0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(16326, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(16826, 0)"></path></g></g></g></svg></mjx-container></p>
<a id="more"></a>

<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">(m, n_H_prev, n_W_prev, n_C_prev) = A_prev.shape</span><br><span class="line">(f, f, n_C_prev, n_C) = W.shape</span><br><span class="line"></span><br><span class="line">stride = hparameters[<span class="string">"stride"</span>]</span><br><span class="line">pad = hparameters[<span class="string">"pad"</span>]</span><br><span class="line"></span><br><span class="line">n_H = int((n_H_prev - f + <span class="number">2</span> * pad) / stride) + <span class="number">1</span></span><br><span class="line">n_W = int((n_W_prev - f + <span class="number">2</span> * pad) / stride) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">Z = np.zeros((m, n_H, n_W, n_C))</span><br><span class="line"></span><br><span class="line">A_prev_pad = zero_pad(A_prev, pad)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line">    a_prev_pad = A_prev_pad[i]</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(n_H):</span><br><span class="line">        vert_start = h * stride</span><br><span class="line">        vert_end = vert_start + f</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> range(n_W):</span><br><span class="line">            horiz_start = w * stride</span><br><span class="line">            horiz_end = horiz_start + f</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(n_C):</span><br><span class="line">                a_slice_prev = a_prev_pad[vert_start:vert_end, horiz_start:horiz_end, :]</span><br><span class="line"></span><br><span class="line">                weights = W[:, :, :, c]</span><br><span class="line">                biases = b[:, :, :, c]</span><br><span class="line">                Z[i, h, w, c] =  conv_single_step(a_slice_prev, weights, biases)</span><br></pre></td></tr></table></figure>

<h3 id="4-1-フォワードプーリング"><a href="#4-1-フォワードプーリング" class="headerlink" title="4.1-フォワードプーリング"></a>4.1-フォワードプーリング</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="21.855ex" height="5.011ex" role="img" focusable="false" viewBox="0 -1518.1 9659.8 2215.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g><g data-mml-node="mo" transform="translate(1555.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2611.5, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(3055.5, 0)"><g data-mml-node="mrow" transform="translate(220, 813.1)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="TeXAtom" transform="translate(831, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2447.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3447.9, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g><g data-mml-node="mrow" transform="translate(913, -686)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1281, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1626, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2146, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="4197.9" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(7493.4, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g><g data-mml-node="mo" transform="translate(8159.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(9159.8, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="22.292ex" height="5.011ex" role="img" focusable="false" viewBox="0 -1518.1 9852.9 2215.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g></g><g data-mml-node="mo" transform="translate(1668.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2724.6, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(3168.6, 0)"><g data-mml-node="mrow" transform="translate(220, 813.1)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(944, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2527.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3527.8, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g><g data-mml-node="mrow" transform="translate(952.9, -686)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1281, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1626, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2146, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="4277.8" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(7686.4, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g><g data-mml-node="mo" transform="translate(8352.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(9352.9, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.799ex" xmlns="http://www.w3.org/2000/svg" width="10.553ex" height="2.118ex" role="img" focusable="false" viewBox="0 -583 4664.4 936.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g></g><g data-mml-node="mo" transform="translate(1465.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(2521, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(715, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g></g></g></svg></mjx-container></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(n_H):</span><br><span class="line">        vert_start = h * stride</span><br><span class="line">        vert_end = vert_start + f</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> range(n_W):</span><br><span class="line">            horiz_start = w * stride</span><br><span class="line">            horiz_end = horiz_start + f</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range (n_C):</span><br><span class="line">                a_prev_slice = A_prev[i, vert_start:vert_end, horiz_start:horiz_end, c]</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> mode == <span class="string">"max"</span>:</span><br><span class="line">                    A[i, h, w, c] = np.max(a_prev_slice)</span><br><span class="line">                <span class="keyword">elif</span> mode == <span class="string">"average"</span>:</span><br><span class="line">                    A[i, h, w, c] = np.mean(a_prev_slice)</span><br></pre></td></tr></table></figure>

<h3 id="5-2プーリングレイヤー-バックワードパス"><a href="#5-2プーリングレイヤー-バックワードパス" class="headerlink" title="5.2プーリングレイヤー-バックワードパス"></a>5.2プーリングレイヤー-バックワードパス</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">mask = np.max(x) == x</span><br></pre></td></tr></table></figure>

<h3 id="5-2-2-平均プーリング-バックワードパス"><a href="#5-2-2-平均プーリング-バックワードパス" class="headerlink" title="5.2.2-平均プーリング-バックワードパス"></a>5.2.2-平均プーリング-バックワードパス</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">(n_H, n_W) = shape</span><br><span class="line">average = dz / (n_H * n_W)</span><br><span class="line">a = np.ones(shape) * average</span><br></pre></td></tr></table></figure>

<h3 id="5-2-3まとめ：後方プール"><a href="#5-2-3まとめ：後方プール" class="headerlink" title="5.2.3まとめ：後方プール"></a>5.2.3まとめ：後方プール</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">(A_prev, hparameters) = cache</span><br><span class="line"></span><br><span class="line">stride = hparameters[<span class="string">"stride"</span>]</span><br><span class="line">f = hparameters[<span class="string">"f"</span>]</span><br><span class="line"></span><br><span class="line">m, n_H_prev, n_W_prev, n_C_prev = A_prev.shape</span><br><span class="line">m, n_H, n_W, n_C = dA.shape</span><br><span class="line"></span><br><span class="line">dA_prev = np.zeros(A_prev.shape)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line"></span><br><span class="line">    a_prev = A_prev[i]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(n_H):</span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> range(n_W):</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(n_C):</span><br><span class="line"></span><br><span class="line">                vert_start = h * stride</span><br><span class="line">                vert_end = vert_start + f</span><br><span class="line">                horiz_start = w * stride</span><br><span class="line">                horiz_end = horiz_start + f</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> mode == <span class="string">"max"</span>:</span><br><span class="line">                    a_prev_slice = a_prev[vert_start:vert_end, horiz_start:horiz_end, c]</span><br><span class="line">                    mask = create_mask_from_window(a_prev_slice)</span><br><span class="line"></span><br><span class="line">                    dA_prev[i, vert_start: vert_end, horiz_start: horiz_end, c] += (dA[i, h, w, c] * mask)</span><br><span class="line">                <span class="keyword">elif</span> mode == <span class="string">"average"</span>:</span><br><span class="line">                    da = dA[i, h, w, c]</span><br><span class="line">                    shape = (f, f)</span><br><span class="line">                    dA_prev[i, vert_start: vert_end, horiz_start: horiz_end, c] += distribute_value(da, shape)</span><br></pre></td></tr></table></figure>

<h2 id="応用"><a href="#応用" class="headerlink" title="応用"></a>応用</h2><h3 id="1-1-プレースホルダーを作成する"><a href="#1-1-プレースホルダーを作成する" class="headerlink" title="1.1-プレースホルダーを作成する"></a>1.1-プレースホルダーを作成する</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = tf.placeholder(tf.float32, shape=[<span class="literal">None</span>, n_H0, n_W0, n_C0])</span><br><span class="line">Y =  tf.placeholder(tf.float32, shape=[<span class="literal">None</span>, n_y])</span><br></pre></td></tr></table></figure>

<h3 id="1-2-パラメータを初期化する"><a href="#1-2-パラメータを初期化する" class="headerlink" title="1.2-パラメータを初期化する"></a>1.2-パラメータを初期化する</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">W1 = tf.get_variable(<span class="string">"W1"</span>, [<span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">0</span>))</span><br><span class="line">W2 = tf.get_variable(<span class="string">"W2"</span>, [<span class="number">2</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">16</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">0</span>))</span><br></pre></td></tr></table></figure>

<h3 id="1-3-順伝播"><a href="#1-3-順伝播" class="headerlink" title="1.3-順伝播"></a>1.3-順伝播</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">Z1 = tf.nn.conv2d(X, W1, strides = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>], padding = <span class="string">'SAME'</span>)</span><br><span class="line">A1 = tf.nn.relu(Z1)</span><br><span class="line">P1 = tf.nn.max_pool(A1, ksize = [<span class="number">1</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">1</span>], strides = [<span class="number">1</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">1</span>], padding = <span class="string">'SAME'</span>)</span><br><span class="line">Z2 = tf.nn.conv2d(P1, W2, strides = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>], padding = <span class="string">'SAME'</span>)</span><br><span class="line">A2 = tf.nn.relu(Z2)</span><br><span class="line">P2 = tf.nn.max_pool(A2, ksize = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>], strides = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>], padding = <span class="string">'SAME'</span>)</span><br><span class="line">F = tf.contrib.layers.flatten(P2)</span><br><span class="line">Z3 = tf.contrib.layers.fully_connected(F, <span class="number">6</span>, activation_fn=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>

<h3 id="1-4-コストの計算"><a href="#1-4-コストの計算" class="headerlink" title="1.4-コストの計算"></a>1.4-コストの計算</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">cost = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits = Z3, labels = Y))</span><br></pre></td></tr></table></figure>

<h3 id="1-5モデル"><a href="#1-5モデル" class="headerlink" title="1.5モデル"></a>1.5モデル</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X, Y = create_placeholders(n_H0, n_W0, n_C0, n_y)</span><br><span class="line">parameters = initialize_parameters()</span><br><span class="line">Z3 = forward_propagation(X, parameters)</span><br><span class="line">cost = compute_cost(Z3, Y)</span><br><span class="line">optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(cost)</span><br><span class="line"><span class="comment">### ..。 </span></span><br><span class="line">    _ , temp_cost = sess.run([optimizer, cost], feed_dict={X: minibatch_X, Y: minibatch_Y})</span><br></pre></td></tr></table></figure>

<h2 id="2週目-残余ネットワーク"><a href="#2週目-残余ネットワーク" class="headerlink" title="2週目-残余ネットワーク"></a>2週目-残余ネットワーク</h2><h3 id="2-1-IDブロック"><a href="#2-1-IDブロック" class="headerlink" title="2.1-IDブロック"></a>2.1-IDブロック</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = Conv2D(filters = F2, kernel_size = (f, f), strides = (<span class="number">1</span>,<span class="number">1</span>), padding = <span class="string">'same'</span>, name = conv_name_base + <span class="string">'2b'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X)</span><br><span class="line">X = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'2b'</span>)(X)</span><br><span class="line">X = Activation(<span class="string">'relu'</span>)(X)</span><br><span class="line"></span><br><span class="line">X = Conv2D(filters = F3, kernel_size = (<span class="number">1</span>, <span class="number">1</span>), strides = (<span class="number">1</span>,<span class="number">1</span>), padding = <span class="string">'valid'</span>, name = conv_name_base + <span class="string">'2c'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X)</span><br><span class="line">X = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'2c'</span>)(X)</span><br><span class="line"></span><br><span class="line">X = layers.Add()([X, X_shortcut])</span><br><span class="line">X = Activation(<span class="string">'relu'</span>)(X)</span><br></pre></td></tr></table></figure>

<h3 id="2-2-畳み込みブロック"><a href="#2-2-畳み込みブロック" class="headerlink" title="2.2-畳み込みブロック"></a>2.2-畳み込みブロック</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = Conv2D(F2, (f, f), strides = (<span class="number">1</span>,<span class="number">1</span>), padding = <span class="string">'same'</span>, name = conv_name_base + <span class="string">'2b'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X)</span><br><span class="line">X = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'2b'</span>)(X)</span><br><span class="line">X = Activation(<span class="string">'relu'</span>)(X)</span><br><span class="line"></span><br><span class="line">X = Conv2D(F3, (<span class="number">1</span>, <span class="number">1</span>), strides = (<span class="number">1</span>,<span class="number">1</span>), name = conv_name_base + <span class="string">'2c'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X)</span><br><span class="line">X = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'2c'</span>)(X)</span><br><span class="line"></span><br><span class="line">X_shortcut = Conv2D(F3, (<span class="number">1</span>, <span class="number">1</span>), strides = (s,s), name = conv_name_base + <span class="string">'1'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X_shortcut)</span><br><span class="line">X_shortcut = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'1'</span>)(X_shortcut)</span><br><span class="line"></span><br><span class="line">X = layers.Add()([X, X_shortcut])</span><br><span class="line">X = Activation(<span class="string">'relu'</span>)(X)</span><br></pre></td></tr></table></figure>

<h3 id="3-最初のResNetモデルの構築-50レイヤー"><a href="#3-最初のResNetモデルの構築-50レイヤー" class="headerlink" title="3-最初のResNetモデルの構築(50レイヤー)"></a>3-最初のResNetモデルの構築(50レイヤー)</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = convolutional_block(X, f = <span class="number">3</span>, filters = [<span class="number">128</span>, <span class="number">128</span>, <span class="number">512</span>], stage = <span class="number">3</span>, block=<span class="string">'a'</span>, s = <span class="number">2</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">128</span>, <span class="number">128</span>, <span class="number">512</span>], stage=<span class="number">3</span>, block=<span class="string">'b'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">128</span>, <span class="number">128</span>, <span class="number">512</span>], stage=<span class="number">3</span>, block=<span class="string">'c'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">128</span>, <span class="number">128</span>, <span class="number">512</span>], stage=<span class="number">3</span>, block=<span class="string">'d'</span>)</span><br><span class="line"></span><br><span class="line">X = convolutional_block(X, f = <span class="number">3</span>, filters = [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage = <span class="number">4</span>, block=<span class="string">'a'</span>, s = <span class="number">2</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'b'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'c'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'d'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'e'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'f'</span>)</span><br><span class="line"></span><br><span class="line">X = convolutional_block(X, f = <span class="number">3</span>, filters = [<span class="number">512</span>, <span class="number">512</span>, <span class="number">2048</span>], stage = <span class="number">5</span>, block=<span class="string">'a'</span>, s = <span class="number">2</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">512</span>, <span class="number">512</span>, <span class="number">2048</span>], stage=<span class="number">5</span>, block=<span class="string">'b'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">512</span>, <span class="number">512</span>, <span class="number">2048</span>], stage=<span class="number">5</span>, block=<span class="string">'c'</span>)</span><br><span class="line"></span><br><span class="line">X = AveragePooling2D((<span class="number">2</span>,<span class="number">2</span>), name=<span class="string">'avg_pool'</span>)(X)</span><br></pre></td></tr></table></figure>

<h2 id="3週目-自動運転-車の検出"><a href="#3週目-自動運転-車の検出" class="headerlink" title="3週目-自動運転-車の検出"></a>3週目-自動運転-車の検出</h2><h3 id="2-1-モデルの詳細"><a href="#2-1-モデルの詳細" class="headerlink" title="2.1-モデルの詳細"></a>2.1-モデルの詳細</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">box_scores = np.multiply(box_confidence, box_class_probs)</span><br><span class="line"></span><br><span class="line">box_classes = K.argmax(box_scores, axis=<span class="number">-1</span>)</span><br><span class="line">box_class_scores = K.max(box_scores, axis=<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">filtering_mask = K.greater_equal(box_class_scores, threshold)</span><br><span class="line"></span><br><span class="line">scores = tf.boolean_mask(box_class_scores, filtering_mask)</span><br><span class="line">boxes = tf.boolean_mask(boxes, filtering_mask)</span><br><span class="line">classes = tf.boolean_mask(box_classes, filtering_mask)</span><br></pre></td></tr></table></figure>

<h3 id="2-3-非最大抑制"><a href="#2-3-非最大抑制" class="headerlink" title="2.3-非最大抑制"></a>2.3-非最大抑制</h3><h4 id="ウイルス"><a href="#ウイルス" class="headerlink" title="ウイルス"></a>ウイルス</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">xi1 = max(box1_x1, box2_x1)</span><br><span class="line">yi1 = max(box1_y1, box2_y1)</span><br><span class="line">xi2 = min(box1_x2, box2_x2)</span><br><span class="line">yi2 = min(box1_y2, box2_y2)</span><br><span class="line">inter_width = xi2 - xi1</span><br><span class="line">inter_height = yi2 - yi1</span><br><span class="line">inter_area = max(inter_width, <span class="number">0</span>) * max(inter_height, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">box1_area = (box1_y2 - box1_y1) * (box1_x2 - box1_x1)</span><br><span class="line">box2_area = (box2_y2 - box2_y1) * (box2_x2 - box2_x1)</span><br><span class="line">union_area = (box1_area + box2_area) - inter_area</span><br><span class="line"></span><br><span class="line">iou = inter_area / union_area</span><br></pre></td></tr></table></figure>

<h4 id="yolo-non-max-suppression"><a href="#yolo-non-max-suppression" class="headerlink" title="yolo_non_max_suppression"></a>yolo_non_max_suppression</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">nms_indices = tf.image.non_max_suppression(boxes, scores, max_boxes_tensor, iou_threshold=iou_threshold)</span><br><span class="line"></span><br><span class="line">scores = K.gather(scores, nms_indices)</span><br><span class="line">boxes = K.gather(boxes, nms_indices)</span><br><span class="line">classes = K.gather(classes, nms_indices)</span><br></pre></td></tr></table></figure>

<h3 id="2-4フィルタリングのまとめ"><a href="#2-4フィルタリングのまとめ" class="headerlink" title="2.4フィルタリングのまとめ"></a>2.4フィルタリングのまとめ</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">box_confidence, box_xy, box_wh, box_class_probs = yolo_outputs</span><br><span class="line"></span><br><span class="line">boxes = yolo_boxes_to_corners(box_xy, box_wh)</span><br><span class="line"></span><br><span class="line">scores, boxes, classes = yolo_filter_boxes(box_confidence, boxes, box_class_probs, threshold = score_threshold)</span><br><span class="line"></span><br><span class="line">boxes = scale_boxes(boxes, image_shape)</span><br><span class="line"></span><br><span class="line">scores, boxes, classes = yolo_non_max_suppression(scores, boxes, classes, max_boxes = max_boxes, iou_threshold = iou_threshold)</span><br></pre></td></tr></table></figure>

<h3 id="3-5-画像でグラフを実行する"><a href="#3-5-画像でグラフを実行する" class="headerlink" title="3.5-画像でグラフを実行する"></a>3.5-画像でグラフを実行する</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">out_scores, out_boxes, out_classes = sess.run([scores, boxes, classes], feed_dict={yolo_model.input: image_data, K.learning_phase(): <span class="number">0</span>})</span><br></pre></td></tr></table></figure>

<h2 id="4週目"><a href="#4週目" class="headerlink" title="4週目"></a>4週目</h2><h3 id="ディープラーニングとアート：ニューラルスタイルの転送"><a href="#ディープラーニングとアート：ニューラルスタイルの転送" class="headerlink" title="ディープラーニングとアート：ニューラルスタイルの転送"></a>ディープラーニングとアート：ニューラルスタイルの転送</h3><h4 id="3-1-コンテンツコストの計算"><a href="#3-1-コンテンツコストの計算" class="headerlink" title="3.1-コンテンツコストの計算"></a>3.1-コンテンツコストの計算</h4><p><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="min-width: 64.612ex"><svg style="vertical-align: -2.328ex; min-width: 64.612ex" xmlns="http://www.w3.org/2000/svg" width="100%" height="5.786ex" role="img" focusable="false"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0) scale(0.0181) translate(0, -1528.8)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078, 0) translate(-2078, 0)"><g transform="translate(0 1528.8) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="12201.3 -1528.8 1 2557.5"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0, 186.8)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="TeXAtom" transform="translate(555, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(918, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1518, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(1879, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2345, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2945, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2942.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3331.7, 0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(4091.7, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4536.4, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(5322.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5989.1, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(7044.9, 0)"><g data-mml-node="mn" transform="translate(3981.8, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(722.2, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msub" transform="translate(1722.4, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g><g data-mml-node="mo" transform="translate(3222.6, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msub" transform="translate(4222.8, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g></g><g data-mml-node="mo" transform="translate(5836.1, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msub" transform="translate(6836.3, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g></g></g><rect width="8223.7" height="60" x="120" y="220"></rect></g><g data-mml-node="munder" transform="translate(15675.3, 0)"><g data-mml-node="mo" transform="translate(764, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mtext"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(500, 0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(778, 0)"></path><path data-c="20" d="" transform="translate(1056, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1306, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1750, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(2306, 0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(2695, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(3087, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(3365, 0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(3809, 0)"></path></g></g></g><g data-mml-node="mo" transform="translate(18647.2, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(19036.2, 0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(529, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1149, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(20925, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(21925.2, 0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(529, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1175, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(23610.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -1528.8 1 2557.5"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn-1" transform="translate(0, 186.8)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(389, 0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889, 0)"></path></g></g></g></svg></g></g></g></g></svg></mjx-container></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a_C_unrolled = tf.transpose(a_C)</span><br><span class="line">a_G_unrolled = tf.transpose(a_G)</span><br><span class="line"></span><br><span class="line">J_content = (<span class="number">1</span>/ (<span class="number">4</span>* n_H * n_W * n_C)) * tf.reduce_sum(tf.pow((a_G_unrolled - a_C_unrolled), <span class="number">2</span>))</span><br></pre></td></tr></table></figure>

<h4 id="3-2-1-スタイルマトリックス"><a href="#3-2-1-スタイルマトリックス" class="headerlink" title="3.2.1-スタイルマトリックス"></a>3.2.1-スタイルマトリックス</h4><p>$$\mathbf{G}<em>{gram} = \mathbf{A}</em>{unrolled} \mathbf{A}_{unrolled}^T$$</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">GA = tf.matmul(A, tf.transpose(A))</span><br></pre></td></tr></table></figure>

<h4 id="3-2-2-スタイルコスト"><a href="#3-2-2-スタイルコスト" class="headerlink" title="3.2.2-スタイルコスト"></a>3.2.2-スタイルコスト</h4><p>$$J_{style}^{[l]}(S,G) = \frac{1}{4 \times {n_C}^2 \times (n_H \times n_W)^2} \sum <em>{i=1}^{n_C}\sum</em>{j=1}^{n_C}(G^{(S)}<em>{(gram)i,j} - G^{(G)}</em>{(gram)i,j})^2\tag{2} $$</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">m, n_H, n_W, n_C = a_G.get_shape().as_list()</span><br><span class="line"></span><br><span class="line">a_S = tf.transpose(tf.reshape(a_S, [n_H*n_W, n_C]))</span><br><span class="line">a_G = tf.transpose(tf.reshape(a_G, [n_H*n_W, n_C]))</span><br><span class="line"></span><br><span class="line">GS = gram_matrix(a_S)</span><br><span class="line">GG = gram_matrix(a_G)</span><br><span class="line"></span><br><span class="line">J_style_layer = <span class="number">1.</span>/(<span class="number">4</span> * n_C**<span class="number">2</span> * (n_H*n_W)**<span class="number">2</span>) * tf.reduce_sum(tf.pow((GS - GG), <span class="number">2</span>))</span><br></pre></td></tr></table></figure>

<h4 id="3-2-3スタイルの重み"><a href="#3-2-3スタイルの重み" class="headerlink" title="3.2.3スタイルの重み"></a>3.2.3スタイルの重み</h4><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.667ex" xmlns="http://www.w3.org/2000/svg" width="37.11ex" height="2.364ex" role="img" focusable="false" viewBox="0 -750 16402.6 1045"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1808, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2474.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3530.6, 0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="msub" transform="translate(4170.6, 0)"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="TeXAtom" transform="translate(555, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(918, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1518, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(1879, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2345, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2945, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7113.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(7502.3, 0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(8262.3, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(8706.9, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(9492.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10104.1, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(11104.4, 0)"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="msub" transform="translate(11670.4, 0)"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="TeXAtom" transform="translate(555, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1320, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1618, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g><g data-mml-node="mo" transform="translate(13749, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(14138, 0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(14783, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(15227.6, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(16013.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">J = alpha * J_content + beta * J_style</span><br></pre></td></tr></table></figure>

<h3 id="顔認識"><a href="#顔認識" class="headerlink" title="顔認識"></a>顔認識</h3><h4 id="1-2-トリプレットロス"><a href="#1-2-トリプレットロス" class="headerlink" title="1.2-トリプレットロス"></a>1.2-トリプレットロス</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">pos_dist = tf.reduce_sum(tf.square(tf.subtract(anchor, positive)), axis=<span class="literal">None</span>)</span><br><span class="line">neg_dist = tf.reduce_sum(tf.square(tf.subtract(anchor, negative)), axis=<span class="literal">None</span>)</span><br><span class="line">basic_loss = tf.add(tf.subtract(pos_dist, neg_dist), alpha)</span><br><span class="line"></span><br><span class="line">loss = tf.reduce_sum(tf.maximum(basic_loss, <span class="number">0</span>))</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>ディープラーニングコース5</title>
    <url>/ja/Deep-Learning-Course-5/</url>
    <content><![CDATA[<p>うわー、締め切り前に終えました。 </p>
<p>😃😃😃 </p>
<p><a href="https://www.coursera.org/account/accomplishments/specialization/8BQ77WBNDVQH">ディープラーニングスペシャライゼーション証明書</a> </p>
<h2 id="1週目"><a href="#1週目" class="headerlink" title="1週目"></a>1週目</h2><h3 id="リカレントニューラルネットワークの構築-ステップバイステップ"><a href="#リカレントニューラルネットワークの構築-ステップバイステップ" class="headerlink" title="リカレントニューラルネットワークの構築-ステップバイステップ"></a>リカレントニューラルネットワークの構築-ステップバイステップ</h3><h3 id="1-1-RNNセル"><a href="#1-1-RNNセル" class="headerlink" title="1.1-RNNセル"></a>1.1-RNNセル</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a_next = np.tanh(np.matmul(Waa, a_prev) + np.matmul(Wax, xt) + ba)</span><br><span class="line"></span><br><span class="line">yt_pred = softmax(np.matmul(Wya, a_next) + by)</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="1-2-RNNフォワードパス"><a href="#1-2-RNNフォワードパス" class="headerlink" title="1.2-RNNフォワードパス"></a>1.2-RNNフォワードパス</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">xt = x[:,:,t]</span><br><span class="line">a_next, yt_pred, cache = rnn_cell_forward(xt, a_next, parameters)</span><br><span class="line"></span><br><span class="line">a[:,:,t] = a_next</span><br><span class="line"></span><br><span class="line">y_pred[:,:,t] = yt_pred</span><br><span class="line"></span><br><span class="line">caches.append(cache)</span><br></pre></td></tr></table></figure>

<h3 id="2-長短期記憶-LSTM-ネットワーク"><a href="#2-長短期記憶-LSTM-ネットワーク" class="headerlink" title="2-長短期記憶(LSTM)ネットワーク"></a>2-長短期記憶(LSTM)ネットワーク</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">concat = np.concatenate((a_prev, xt), axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">ft = sigmoid(np.matmul(Wf, concat) + bf)        <span class="comment"># forget gate</span></span><br><span class="line">it = sigmoid(np.matmul(Wi, concat) + bi)        <span class="comment"># update gate</span></span><br><span class="line">cct = np.tanh(np.matmul(Wc, concat) + bc)       <span class="comment"># candidate value</span></span><br><span class="line">c_next = ft*c_prev + it*cct    <span class="comment"># cell state</span></span><br><span class="line">ot = sigmoid(np.matmul(Wo, concat) + bo)        <span class="comment"># output gate</span></span><br><span class="line">a_next = ot * np.tanh(c_next)    <span class="comment"># hidden state</span></span><br><span class="line"></span><br><span class="line">yt_pred = softmax(np.matmul(Wy, a_next) + by)</span><br></pre></td></tr></table></figure>

<h3 id="2-2-LSTMのフォワードパス"><a href="#2-2-LSTMのフォワードパス" class="headerlink" title="2.2-LSTMのフォワードパス"></a>2.2-LSTMのフォワードパス</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">Wy = parameters[<span class="string">'Wy'</span>]</span><br><span class="line">n_x, m, T_x = x.shape</span><br><span class="line">n_y, n_a = parameters[<span class="string">'Wy'</span>].shape</span><br><span class="line"></span><br><span class="line">a = np.zeros((n_a, m, T_x))</span><br><span class="line">c = np.zeros((n_a, m, T_x))</span><br><span class="line">y = np.zeros((n_y, m, T_x))</span><br><span class="line"></span><br><span class="line">a_next = a0</span><br><span class="line">c_next = c[:,:,<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> range(T_x):</span><br><span class="line">    xt = x[:,:,t]</span><br><span class="line">    a_next, c_next, yt, cache = lstm_cell_forward(xt, a_next, c_next, parameters)</span><br><span class="line">    a[:,:,t] = a_next</span><br><span class="line">    c[:,:,t]  = c_next</span><br><span class="line">    y[:,:,t] = yt</span><br><span class="line">    caches.append(cache)</span><br></pre></td></tr></table></figure>

<p>..。 </p>
<p>コードが多すぎて、証明書を取得したので記録する時間がありませんでした。 </p>
]]></content>
      <tags>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode配列101</title>
    <url>/ja/LeetCode-Arrays-101/</url>
    <content><![CDATA[<h2 id="最大連続のもの"><a href="#最大連続のもの" class="headerlink" title="最大連続のもの"></a>最大連続のもの</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMaxConsecutiveOnes</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">split</span>(separator: <span class="number">0</span>).<span class="built_in">map</span> &#123;$<span class="number">0</span>.<span class="built_in">count</span>&#125;.<span class="built_in">max</span>() ?? <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="偶数桁の数字を探す"><a href="#偶数桁の数字を探す" class="headerlink" title="偶数桁の数字を探す"></a>偶数桁の数字を探す</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findNumbers</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">filter</span>(&#123;<span class="type">String</span>($<span class="number">0</span>).<span class="built_in">count</span> &amp; <span class="number">1</span> == <span class="number">0</span> &#125;).<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ソートされた配列の二乗"><a href="#ソートされた配列の二乗" class="headerlink" title="ソートされた配列の二乗"></a>ソートされた配列の二乗</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortedSquares</span><span class="params">(<span class="number">_</span> A: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>, ans = <span class="type">A</span></span><br><span class="line">        <span class="keyword">while</span> j &lt; <span class="type">A</span>.<span class="built_in">count</span>, <span class="type">A</span>[j] &lt; <span class="number">0</span> &#123;</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        i = j - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span>, j &lt; <span class="type">A</span>.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> (ai, aj) = (<span class="type">A</span>[i]*<span class="type">A</span>[i], <span class="type">A</span>[j]*<span class="type">A</span>[j])</span><br><span class="line">            ai &lt; aj ? (ans[k] = ai, i -= <span class="number">1</span>) : (ans[k] = aj, j += <span class="number">1</span>)</span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> i &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            ans[k...] = <span class="type">A</span>[...i].reversed().<span class="built_in">map</span> &#123;$<span class="number">0</span>*$<span class="number">0</span>&#125;.suffix(from: <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> j &lt; <span class="type">A</span>.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans[k...] = <span class="type">A</span>[k...].<span class="built_in">map</span> &#123; $<span class="number">0</span>*$<span class="number">0</span> &#125;.suffix(from: <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="重複するゼロ"><a href="#重複するゼロ" class="headerlink" title="重複するゼロ"></a>重複するゼロ</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">duplicateZeros</span><span class="params">(<span class="number">_</span> arr: <span class="keyword">inout</span> [Int])</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> na = <span class="type">Array</span>(repeating: <span class="number">0</span>, <span class="built_in">count</span>: arr.<span class="built_in">count</span>), i = <span class="number">0</span>, j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> j &lt; na.<span class="built_in">count</span> &#123;</span><br><span class="line">            na[j] = arr[i]</span><br><span class="line">            <span class="keyword">if</span> arr[i] == <span class="number">0</span>, j &lt; na.<span class="built_in">count</span>-<span class="number">1</span> &#123; j += <span class="number">1</span>; na[j] = <span class="number">0</span> &#125;</span><br><span class="line">            i += <span class="number">1</span>; j += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        arr = na</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ソートされた配列をマージする"><a href="#ソートされた配列をマージする" class="headerlink" title="ソートされた配列をマージする"></a>ソートされた配列をマージする</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(<span class="number">_</span> nums1: <span class="keyword">inout</span> [Int], <span class="number">_</span> m: Int, <span class="number">_</span> nums2: [Int], <span class="number">_</span> n: Int)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> nums0 = nums1[..&lt;m]</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums0.<span class="built_in">count</span>, j &lt; nums2.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums0[i] &lt; nums2[j] &#123;</span><br><span class="line">                nums1[k] = nums0[i]</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                nums1[k] = nums2[j]</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt; nums0.<span class="built_in">count</span> &#123;</span><br><span class="line">            nums1[k] = nums0[i]</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> j &lt; nums2.<span class="built_in">count</span> &#123;</span><br><span class="line">            nums1[k] = nums2[j]</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="要素を削除"><a href="#要素を削除" class="headerlink" title="要素を削除"></a>要素を削除</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeElement</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int], <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] == val &#123;</span><br><span class="line">                <span class="keyword">while</span> nums[j] == val &#123; j -= <span class="number">1</span> &#125;</span><br><span class="line">                nums.swapAt(i, j)</span><br><span class="line">            &#125;</span><br><span class="line">            i += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ソートされた配列から重複を削除する"><a href="#ソートされた配列から重複を削除する" class="headerlink" title="ソートされた配列から重複を削除する"></a>ソートされた配列から重複を削除する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeDuplicates</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] != nums[j] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">                nums[i] = nums[j]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums.isEmpty ? <span class="number">0</span> : i+<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Nとその二重が存在するかどうかを確認します"><a href="#Nとその二重が存在するかどうかを確認します" class="headerlink" title="Nとその二重が存在するかどうかを確認します"></a>Nとその二重が存在するかどうかを確認します</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">checkIfExist</span><span class="params">(<span class="number">_</span> arr: [Int])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = <span class="type">Dictionary</span>&lt;<span class="type">Int</span>, <span class="type">Int</span>&gt;()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> arr &#123;</span><br><span class="line">            dict[i] = (dict[i] ?? <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> arr &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[i*<span class="number">2</span>], v &gt;= ((i==<span class="number">0</span>) ? <span class="number">2</span> : <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="有効なマウンテンアレイ"><a href="#有効なマウンテンアレイ" class="headerlink" title="有効なマウンテンアレイ"></a>有効なマウンテンアレイ</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">validMountainArray</span><span class="params">(<span class="number">_</span> A: [Int])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; <span class="type">A</span>.<span class="built_in">count</span>-<span class="number">1</span>, <span class="type">A</span>[i] &lt; <span class="type">A</span>[i+<span class="number">1</span>] &#123; i += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span> || i == <span class="type">A</span>.<span class="built_in">count</span>-<span class="number">1</span> &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt; <span class="type">A</span>.<span class="built_in">count</span>-<span class="number">1</span>, <span class="type">A</span>[i] &gt; <span class="type">A</span>[i+<span class="number">1</span>] &#123; i += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> i == <span class="type">A</span>.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="要素を右側の最大要素に置き換えます"><a href="#要素を右側の最大要素に置き換えます" class="headerlink" title="要素を右側の最大要素に置き換えます"></a>要素を右側の最大要素に置き換えます</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">replaceElements</span><span class="params">(<span class="number">_</span> arr: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = arr.<span class="built_in">count</span>-<span class="number">1</span>, rMax = -<span class="number">1</span>, newArr = arr</span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            newArr[i] = rMax</span><br><span class="line">            rMax = <span class="built_in">max</span>(rMax, arr[i])</span><br><span class="line">            i -= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newArr</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ソートされた配列から重複を削除する-1"><a href="#ソートされた配列から重複を削除する-1" class="headerlink" title="ソートされた配列から重複を削除する"></a>ソートされた配列から重複を削除する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeDuplicates</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] != nums[j] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">                nums[i] = nums[j]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums.isEmpty ? <span class="number">0</span> : i+<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="ゼロを移動"><a href="#ゼロを移動" class="headerlink" title="ゼロを移動"></a>ゼロを移動</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">moveZeroes</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int])</span></span> &#123;</span><br><span class="line">        nums = <span class="type">Array</span>(nums.<span class="built_in">split</span>(separator: <span class="number">0</span>).joined()) + <span class="type">Array</span>(nums.<span class="built_in">filter</span>(&#123;$<span class="number">0</span> == <span class="number">0</span>&#125;))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="配列をパリティで並べ替える"><a href="#配列をパリティで並べ替える" class="headerlink" title="配列をパリティで並べ替える"></a>配列をパリティで並べ替える</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortArrayByParity</span><span class="params">(<span class="number">_</span> A: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> even = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">A</span> &#123;</span><br><span class="line">            i &amp; <span class="number">1</span> == <span class="number">0</span> ? (even.append(i)) : (odd.append(i))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> even + odd</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ソートされた配列の二乗-1"><a href="#ソートされた配列の二乗-1" class="headerlink" title="ソートされた配列の二乗"></a>ソートされた配列の二乗</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortedSquares</span><span class="params">(<span class="number">_</span> A: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>, ans = <span class="type">A</span></span><br><span class="line">        <span class="keyword">while</span> j &lt; <span class="type">A</span>.<span class="built_in">count</span>, <span class="type">A</span>[j] &lt; <span class="number">0</span> &#123;</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        i = j - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span>, j &lt; <span class="type">A</span>.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> (ai, aj) = (<span class="type">A</span>[i]*<span class="type">A</span>[i], <span class="type">A</span>[j]*<span class="type">A</span>[j])</span><br><span class="line">            ai &lt; aj ? (ans[k] = ai, i -= <span class="number">1</span>) : (ans[k] = aj, j += <span class="number">1</span>)</span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> i &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            ans[k...] = <span class="type">A</span>[...i].reversed().<span class="built_in">map</span> &#123;$<span class="number">0</span>*$<span class="number">0</span>&#125;.suffix(from: <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> j &lt; <span class="type">A</span>.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans[k...] = <span class="type">A</span>[k...].<span class="built_in">map</span> &#123; $<span class="number">0</span>*$<span class="number">0</span> &#125;.suffix(from: <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="高さチェッカー"><a href="#高さチェッカー" class="headerlink" title="高さチェッカー"></a>高さチェッカー</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">heightChecker</span><span class="params">(<span class="number">_</span> heights: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">zip</span>(heights, heights.sorted()).<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; <span class="keyword">return</span> $<span class="number">0</span> + ($<span class="number">1.0</span> == $<span class="number">1.1</span> ? <span class="number">0</span> : <span class="number">1</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Max-Consecutive-Ones-II"><a href="#Max-Consecutive-Ones-II" class="headerlink" title="Max Consecutive Ones II"></a>Max Consecutive Ones II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMaxConsecutiveOnes</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> z0 = <span class="number">0</span>, z1 = <span class="number">0</span>, maxZ = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">1</span> &#123;</span><br><span class="line">                z1 += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                z0 = z1</span><br><span class="line">                z1 = <span class="number">0</span></span><br><span class="line">            &#125;</span><br><span class="line">            maxZ = <span class="built_in">max</span>(maxZ, z0+z1+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">min</span>(maxZ, nums.<span class="built_in">count</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3番目の最大数"><a href="#3番目の最大数" class="headerlink" title="3番目の最大数"></a>3番目の最大数</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">thirdMax</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> maxs = [<span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">min</span>]</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> n &gt; maxs[<span class="number">2</span>], maxs.firstIndex(of: n) == <span class="literal">nil</span> &#123;</span><br><span class="line">                maxs[<span class="number">2</span>] = n</span><br><span class="line">                <span class="keyword">if</span> maxs[<span class="number">2</span>] &gt; maxs[<span class="number">1</span>] &#123;</span><br><span class="line">                    maxs.swapAt(<span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">if</span> maxs[<span class="number">1</span>] &gt; maxs[<span class="number">0</span>] &#123;</span><br><span class="line">                        maxs.swapAt(<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxs[<span class="number">2</span>] == <span class="type">Int</span>.<span class="built_in">min</span> ? maxs[<span class="number">0</span>] : maxs[<span class="number">2</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="配列に消えたすべての数字を見つける"><a href="#配列に消えたすべての数字を見つける" class="headerlink" title="配列に消えたすべての数字を見つける"></a>配列に消えたすべての数字を見つける</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDisappearedNumbers</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> nums = nums, ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> ..&lt; nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> index = <span class="built_in">abs</span>(nums[i])-<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> nums[index] &gt; <span class="number">0</span> &#123; nums[index] *= -<span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] &gt; <span class="number">0</span> &#123; ans.append(i+<span class="number">1</span>) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCodeリンクリスト</title>
    <url>/ja/LeetCode-Linked-List/</url>
    <content><![CDATA[<h2 id="デザインリンクリスト"><a href="#デザインリンクリスト" class="headerlink" title="デザインリンクリスト"></a>デザインリンクリスト</h2><a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> val: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">var</span> prev: <span class="type">Node?</span>, next: <span class="type">Node?</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> val: <span class="type">Int</span>, prev: <span class="type">Node?</span> = <span class="literal">nil</span>, <span class="number">_</span> next: <span class="type">Node?</span> = <span class="literal">nil</span>) &#123; <span class="keyword">self</span>.val = val; <span class="keyword">self</span>.prev = prev; <span class="keyword">self</span>.next = next &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyLinkedList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">let</span> head: <span class="type">Node</span> = <span class="type">Node</span>(-<span class="number">1</span>), tail: <span class="type">Node</span> = <span class="type">Node</span>(-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>() &#123;  head.next = tail; tail.prev = head &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">get</span><span class="params">(<span class="number">_</span> index: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findNode(index)?.val ?? -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addAtHead</span><span class="params">(<span class="number">_</span> val: Int)</span></span> &#123;</span><br><span class="line">        addAtIndex(<span class="number">0</span>, val)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addAtTail</span><span class="params">(<span class="number">_</span> val: Int)</span></span> &#123;</span><br><span class="line">        addAtIndex(<span class="built_in">count</span>, val)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addAtIndex</span><span class="params">(<span class="number">_</span> index: Int, <span class="number">_</span> val: Int)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= <span class="built_in">count</span>, <span class="keyword">let</span> node = findNode(index) &#123;</span><br><span class="line">            <span class="keyword">let</span> newNode = <span class="type">Node</span>(val)</span><br><span class="line">            newNode.next = node</span><br><span class="line">            newNode.prev = node.prev</span><br><span class="line">            node.prev?.next = newNode</span><br><span class="line">            node.prev = newNode</span><br><span class="line">            <span class="built_in">count</span> += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// printList()</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deleteAtIndex</span><span class="params">(<span class="number">_</span> index: Int)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> index &gt;= <span class="number">0</span> &amp;&amp; index &lt; <span class="built_in">count</span>, <span class="keyword">let</span> node = findNode(index) &#123;</span><br><span class="line">            node.prev?.next = node.next</span><br><span class="line">            node.next?.prev = node.prev</span><br><span class="line">            node.prev = <span class="literal">nil</span>; node.next = <span class="literal">nil</span></span><br><span class="line">            <span class="built_in">count</span> -= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// printList()</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">findNode</span><span class="params">(<span class="number">_</span> index: Int)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p: <span class="type">Node?</span>, i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> index &lt;= (<span class="built_in">count</span>/<span class="number">2</span>) &#123;</span><br><span class="line">            p = head.next</span><br><span class="line">            <span class="keyword">while</span> p != <span class="literal">nil</span>, i &lt; index &#123;</span><br><span class="line">                p = p?.next; i += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            p = tail; i = <span class="built_in">count</span></span><br><span class="line">            <span class="keyword">while</span> p != <span class="literal">nil</span>, i &gt; index &#123;</span><br><span class="line">                p = p?.prev; i -= <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">printList</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = head.next, i: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span>, i &lt; <span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(p!.val, terminator: <span class="string">&quot;-&gt;&quot;</span> )</span><br><span class="line">            p = p?.next; i += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="リンクリストサイクル"><a href="#リンクリストサイクル" class="headerlink" title="リンクリストサイクル"></a>リンクリストサイクル</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasCycle</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> fast = head?.next, slow = head</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fast != <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="リンクリストサイクルII"><a href="#リンクリストサイクルII" class="headerlink" title="リンクリストサイクルII"></a>リンクリストサイクルII</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">detectCycle</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> slow = head, fast = head?.next</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        slow = head; fast = fast?.next</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fast</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2つのリンクリストの共通部分"><a href="#2つのリンクリストの共通部分" class="headerlink" title="2つのリンクリストの共通部分"></a>2つのリンクリストの共通部分</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getIntersectionNode</span><span class="params">(<span class="number">_</span> headA: ListNode?, <span class="number">_</span> headB: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> tailA = headA</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> p = tailA?.next &#123; tailA = p &#125;</span><br><span class="line">        tailA?.next = headB</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> fast = detectCycle(headA)</span><br><span class="line"></span><br><span class="line">        tailA?.next = <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fast</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">detectCycle</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> slow = head, fast = head?.next</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        slow = head; fast = fast?.next</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fast</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="リストの最後からN番目のノードを削除します"><a href="#リストの最後からN番目のノードを削除します" class="headerlink" title="リストの最後からN番目のノードを削除します"></a>リストの最後からN番目のノードを削除します</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeNthFromEnd</span><span class="params">(<span class="number">_</span> head: ListNode?, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> pHead = <span class="type">ListNode</span>(-<span class="number">1</span>, head), p0: <span class="type">ListNode?</span> = pHead, p1 = p0, i = <span class="number">0</span>, j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> q = p1?.next, j &lt; n &#123;</span><br><span class="line">            p1 = q; j += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> q = p1?.next &#123;</span><br><span class="line">            p1 = q; p0 = p0?.next</span><br><span class="line">        &#125;</span><br><span class="line">        p0?.next = p0?.next?.next</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pHead.next</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="逆リンクリスト"><a href="#逆リンクリスト" class="headerlink" title="逆リンクリスト"></a>逆リンクリスト</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> head?.next == <span class="literal">nil</span> &#123; <span class="keyword">return</span> head &#125;</span><br><span class="line">        <span class="keyword">let</span> h = reverseList(head?.next)</span><br><span class="line">        head?.next?.next = head</span><br><span class="line">        head?.next = <span class="literal">nil</span></span><br><span class="line">        <span class="keyword">return</span> h</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> prev: <span class="type">ListNode?</span> = <span class="literal">nil</span>, cur = head</span><br><span class="line">        <span class="keyword">while</span> cur != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> p = cur?.next</span><br><span class="line">            cur?.next = prev</span><br><span class="line">            prev = cur</span><br><span class="line">            cur = p</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prev</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="リンクリスト要素を削除する"><a href="#リンクリスト要素を削除する" class="headerlink" title="リンクリスト要素を削除する"></a>リンクリスト要素を削除する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeElements</span><span class="params">(<span class="number">_</span> head: ListNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> pHead = <span class="type">ListNode</span>(-<span class="number">1</span>, head); <span class="keyword">var</span> p: <span class="type">ListNode?</span> = pHead</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> pn = p!.next, pn.val == val &#123;</span><br><span class="line">                p!.next = pn.next</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                p = p!.next</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pHead.next</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="奇数のリンクリスト"><a href="#奇数のリンクリスト" class="headerlink" title="奇数のリンクリスト"></a>奇数のリンクリスト</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">oddEvenList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> evenHead = head, oddHead = head?.next</span><br><span class="line">        <span class="keyword">var</span> evenP = evenHead, oddP = oddHead</span><br><span class="line">        <span class="keyword">while</span> oddP?.next != <span class="literal">nil</span> &#123;</span><br><span class="line">            evenP?.next = evenP?.next?.next</span><br><span class="line">            oddP?.next = oddP?.next?.next</span><br><span class="line">            evenP = evenP?.next</span><br><span class="line">            oddP = oddP?.next</span><br><span class="line">        &#125;</span><br><span class="line">        evenP?.next = oddHead</span><br><span class="line">        <span class="keyword">return</span> evenHead</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="回文リンクリスト"><a href="#回文リンクリスト" class="headerlink" title="回文リンクリスト"></a>回文リンクリスト</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isPalindrome</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> tail = reverseList(center(head))</span><br><span class="line">        <span class="keyword">return</span> compare(head, tail)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">compare</span><span class="params">(<span class="number">_</span> head: ListNode?, <span class="number">_</span> tail: ListNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = head, q = tail</span><br><span class="line">        <span class="keyword">while</span> q != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> p == <span class="literal">nil</span> || q!.val != p!.val &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">            p = p!.next; q = q!.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">center</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span>  -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> fast = head?.next, slow = head</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">reverseList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> prev: <span class="type">ListNode?</span> = <span class="literal">nil</span>, cur = head</span><br><span class="line">        <span class="keyword">while</span> cur != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> p = cur?.next</span><br><span class="line">            cur?.next = prev</span><br><span class="line">            prev = cur; cur = p</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prev</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2つのソートされたリストをマージする"><a href="#2つのソートされたリストをマージする" class="headerlink" title="2つのソートされたリストをマージする"></a>2つのソートされたリストをマージする</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mergeTwoLists</span><span class="params">(<span class="number">_</span> l1: ListNode?, <span class="number">_</span> l2: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p1 = l1 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l2 &#125;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p2 = l2 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l1 &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> (p, q) = p1.val &lt;= p2.val ? (p1, p2) : (p2, p1)</span><br><span class="line">        p.next = mergeTwoLists(p.next, q)</span><br><span class="line">        <span class="keyword">return</span> p</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2つの数字を追加する"><a href="#2つの数字を追加する" class="headerlink" title="2つの数字を追加する"></a>2つの数字を追加する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addTwoNumbers</span><span class="params">(<span class="number">_</span> l1: ListNode?, <span class="number">_</span> l2: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> head = <span class="type">ListNode</span>(-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">var</span> p1 = l1, p2 = l2, p3: <span class="type">ListNode?</span> = head, v = <span class="number">0</span>, carry = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> p1 != <span class="literal">nil</span> || p2 != <span class="literal">nil</span> &#123;</span><br><span class="line">            v = (p1?.val ?? <span class="number">0</span>)+(p2?.val ?? <span class="number">0</span>)+carry</span><br><span class="line">            carry =  v/<span class="number">10</span>; v %= <span class="number">10</span></span><br><span class="line">            p3?.next = <span class="type">ListNode</span>(v)</span><br><span class="line">            p1 = p1?.next; p2 = p2?.next; p3 = p3?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> carry != <span class="number">0</span> &#123; p3?.next = <span class="type">ListNode</span>(carry) &#125;</span><br><span class="line">        <span class="keyword">return</span> head.next</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="マルチレベルの二重リンクリストをフラット化する"><a href="#マルチレベルの二重リンクリストをフラット化する" class="headerlink" title="マルチレベルの二重リンクリストをフラット化する"></a>マルチレベルの二重リンクリストをフラット化する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">flatten</span><span class="params">(<span class="number">_</span> head: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        getTail(head)</span><br><span class="line">        <span class="keyword">return</span> head</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">getTail</span><span class="params">(<span class="number">_</span> head: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> head = head <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> child = head.child &#123;</span><br><span class="line">            <span class="keyword">let</span> tail = getTail(child)</span><br><span class="line">            tail?.next = head.next</span><br><span class="line">            head.next?.prev = tail</span><br><span class="line">            head.next = head.child</span><br><span class="line">            head.child?.prev = head</span><br><span class="line">            head.child = <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> p = head.next &#123;</span><br><span class="line">            <span class="keyword">return</span> getTail(p)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="循環ソートリストに挿入"><a href="#循環ソートリストに挿入" class="headerlink" title="循環ソートリストに挿入"></a>循環ソートリストに挿入</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> head: Node?, <span class="number">_</span> insertVal: Int)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> head == <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">Node</span>(insertVal)</span><br><span class="line">            n.next = n</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> p = head</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (p!.val &lt;= insertVal &amp;&amp;  p!.next!.val &gt;= insertVal) ||</span><br><span class="line">            (p!.val &gt; p!.next!.val &amp;&amp; (insertVal &lt;= p!.next!.val || insertVal &gt;= p!.val ) ||</span><br><span class="line">             p!.next == head</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="keyword">let</span> n = <span class="type">Node</span>(insertVal)</span><br><span class="line">                n.next = p!.next</span><br><span class="line">                p!.next = n</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">            p = p!.next</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> head</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ランダムポインタでリストをコピー"><a href="#ランダムポインタでリストをコピー" class="headerlink" title="ランダムポインタでリストをコピー"></a>ランダムポインタでリストをコピー</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">copyRandomList</span><span class="params">(<span class="number">_</span> head: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = head, nNode = head</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">Node</span>(p!.val)</span><br><span class="line">            n.next = p?.next</span><br><span class="line">            p?.next = n</span><br><span class="line">            p = p?.next?.next</span><br><span class="line">        &#125;</span><br><span class="line">        p = head</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            p?.next?.random = p?.random?.next</span><br><span class="line">            p = p?.next?.next</span><br><span class="line">        &#125;</span><br><span class="line">        p = head; nNode = head?.next</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> q = p?.next</span><br><span class="line">            p?.next = p?.next?.next</span><br><span class="line">            q?.next = q?.next?.next</span><br><span class="line">            p = p?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nNode</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="リストを回転"><a href="#リストを回転" class="headerlink" title="リストを回転"></a>リストを回転</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">rotateRight</span><span class="params">(<span class="number">_</span> head: ListNode?, <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> length = <span class="number">0</span>, fast = head, slow = head, i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span> &#123; fast = fast!.next; length += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> length &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> head &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> k = k % length</span><br><span class="line"></span><br><span class="line">        fast = head</span><br><span class="line">        <span class="keyword">while</span> i &lt; k &#123; fast = fast?.next; i += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> fast?.next != <span class="literal">nil</span> &#123;</span><br><span class="line">            slow = slow?.next; fast = fast?.next</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fast?.next = head</span><br><span class="line">        <span class="keyword">let</span> node = slow?.next</span><br><span class="line">        slow?.next = <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> node</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Swift4スニペット</title>
    <url>/ja/Swift-4-Snippets/</url>
    <content><![CDATA[<h3 id="ClassName、FileRW、VideoPlayer、VideoPicker、ExcelFilePicker、FileCrypto、dateFormatter、Notification、GradientView、ShowAlertController、LoadingView、AddAnchorConstraints"><a href="#ClassName、FileRW、VideoPlayer、VideoPicker、ExcelFilePicker、FileCrypto、dateFormatter、Notification、GradientView、ShowAlertController、LoadingView、AddAnchorConstraints" class="headerlink" title="ClassName、FileRW、VideoPlayer、VideoPicker、ExcelFilePicker、FileCrypto、dateFormatter、Notification、GradientView、ShowAlertController、LoadingView、AddAnchorConstraints"></a>ClassName、FileRW、VideoPlayer、VideoPicker、ExcelFilePicker、FileCrypto、dateFormatter、Notification、GradientView、ShowAlertController、LoadingView、AddAnchorConstraints</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NSObjectProtocol</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">var</span> className: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">String</span>(describing: <span class="type">Self</span>.<span class="keyword">self</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">FileRW</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">readFile</span><span class="params">(<span class="number">_</span> url: URL?)</span></span> -&gt; <span class="type">Data?</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">saveFile</span><span class="params">(<span class="number">_</span> data: Data, name: String, ext: String)</span></span> -&gt; <span class="type">URL?</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">FileRW</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">readFile</span><span class="params">(<span class="number">_</span> url: URL?)</span></span> -&gt; <span class="type">Data?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> url = url <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">try</span> <span class="type">Data</span>(contentsOf: url)</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;read encryted data err&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">saveFile</span><span class="params">(<span class="number">_</span> data: Data, name: String, ext: String)</span></span> -&gt; <span class="type">URL?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> tempDirectoryURL = <span class="type">NSURL</span>.fileURL(withPath: <span class="type">NSTemporaryDirectory</span>(), isDirectory: <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> targetURL = tempDirectoryURL.appendingPathComponent(<span class="string">&quot;\(name).\(ext)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> data.write(to: targetURL)</span><br><span class="line">            <span class="keyword">return</span> targetURL</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">VideoPlayer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">playVideo</span><span class="params">(url: URL, view: UIView? = <span class="literal">nil</span>, playerViewController: AVPlayerViewController? = <span class="literal">nil</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> player = <span class="type">AVPlayer</span>(url: url)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> view = view &#123;</span><br><span class="line">            <span class="comment">//            let playerLayer = AVPlayerLayer(player: player)</span></span><br><span class="line">            <span class="comment">//            playerLayer.frame = view.bounds</span></span><br><span class="line">            <span class="comment">//            view.layer.addSublayer(playerLayer)</span></span><br><span class="line">            <span class="comment">//            player.play()</span></span><br><span class="line">			<span class="comment">// OR</span></span><br><span class="line">            <span class="keyword">let</span> avpvc = <span class="type">AVPlayerViewController</span>()</span><br><span class="line">            addChild(avpvc)</span><br><span class="line">            view.addOverlay(avpvc.view)</span><br><span class="line">            <span class="comment">//            avpvc.view.frame = view.bounds</span></span><br><span class="line">            <span class="comment">//            view.addSubview(avpvc.view)</span></span><br><span class="line">            avpvc.didMove(toParent: <span class="keyword">self</span>)</span><br><span class="line">            avpvc.player = player</span><br><span class="line">            avpvc.player?.play()</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="keyword">let</span> avpvc = playerViewController &#123;</span><br><span class="line">            avpvc.player = player</span><br><span class="line">            avpvc.player?.play()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> avpvc = <span class="type">AVPlayerViewController</span>()</span><br><span class="line">            avpvc.player = player</span><br><span class="line">            <span class="keyword">self</span>.present(avpvc, animated: <span class="literal">true</span>) &#123;</span><br><span class="line">                avpvc.player?.play()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">VideoPicker</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> imagePickerController: <span class="type">UIImagePickerController</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">openVideoPicker</span><span class="params">()</span></span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateThumbnail</span><span class="params">(<span class="number">_</span> url: URL?)</span></span> -&gt; <span class="type">UIImage?</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">VideoPicker</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">openVideoPicker</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> delegate = <span class="keyword">self</span> <span class="keyword">as</span>? <span class="type">UINavigationControllerDelegate</span> &amp; <span class="type">UIImagePickerControllerDelegate</span> &#123;</span><br><span class="line">            imagePickerController.delegate = delegate</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        imagePickerController.navigationBar.tintColor = systemPinkColor</span><br><span class="line">        imagePickerController.videoQuality = .type640x480</span><br><span class="line">        imagePickerController.sourceType = .savedPhotosAlbum</span><br><span class="line">        imagePickerController.mediaTypes = [<span class="string">&quot;public.movie&quot;</span>]</span><br><span class="line">        imagePickerController.modalPresentationStyle = .overCurrentContext</span><br><span class="line">        show(imagePickerController, sender: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateThumbnail</span><span class="params">(<span class="number">_</span> url: URL?)</span></span> -&gt; <span class="type">UIImage?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> url = url <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> asset = <span class="type">AVURLAsset</span>(url: url, options: <span class="literal">nil</span>)</span><br><span class="line">        <span class="keyword">let</span> imgGenerator = <span class="type">AVAssetImageGenerator</span>(asset: asset)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> cgImage = <span class="keyword">try</span>? imgGenerator.copyCGImage(at: <span class="type">CMTime</span>(seconds: <span class="number">2</span>, preferredTimescale: <span class="number">60</span>) , actualTime: <span class="literal">nil</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">UIImage</span>(cgImage: cgImage)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">FilePicker</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectExcelFile</span><span class="params">()</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">FilePicker</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> excelDocumentTypes: [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&quot;com.microsoft.Excel.xls&quot;</span>, <span class="string">&quot;org.openxmlformats.spreadsheetml.sheet&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectExcelFile</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> dpvc = <span class="type">UIDocumentPickerViewController</span> (documentTypes: excelDocumentTypes, <span class="keyword">in</span>: .<span class="keyword">import</span>)</span><br><span class="line">        dpvc.view.tintColor = systemPinkColor</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> delegate = <span class="keyword">self</span> <span class="keyword">as</span>? <span class="type">UIDocumentPickerDelegate</span> &#123;</span><br><span class="line">            dpvc.delegate = delegate</span><br><span class="line">        &#125;</span><br><span class="line">        present(dpvc, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectedUrl</span><span class="params">(<span class="number">_</span> urls: [URL])</span></span> -&gt; <span class="type">URL?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> url = urls.first, <span class="keyword">let</span> vals = <span class="keyword">try</span>? url.resourceValues(forKeys: [.typeIdentifierKey]), <span class="keyword">let</span> id = vals.typeIdentifier,</span><br><span class="line">            excelDocumentTypes.<span class="built_in">contains</span>(id)</span><br><span class="line">            <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> url</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">FileCrypto</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">encrypt</span><span class="params">(<span class="number">_</span> data: Data, pw: String)</span></span> -&gt; <span class="type">Data</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">decrypt</span><span class="params">(<span class="number">_</span> data: Data, pw: String)</span></span> -&gt; <span class="type">Data?</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> pw = <span class="string">&quot;xxxx-xxxx-xxxx&quot;</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">FileCrypto</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">encrypt</span><span class="params">(<span class="number">_</span> data: Data, pw: String)</span></span> -&gt; <span class="type">Data</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">RNCryptor</span>.encrypt(data: data, withPassword: pw)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">decrypt</span><span class="params">(<span class="number">_</span> data: Data, pw: String)</span></span> -&gt; <span class="type">Data?</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">try</span> <span class="type">RNCryptor</span>.decrypt(data: data, withPassword: pw)</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">TimeInterval</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> yyyymmdd: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> date = <span class="type">Date</span>(timeIntervalSince1970: <span class="keyword">self</span>)</span><br><span class="line">        <span class="keyword">let</span> dateFormatter = <span class="type">DateFormatter</span>()</span><br><span class="line">        <span class="comment">//        dateFormatter.timeStyle = DateFormatter.Style.medium //Set time style</span></span><br><span class="line">        dateFormatter.dateStyle = <span class="type">DateFormatter</span>.<span class="type">Style</span>.medium <span class="comment">//Set date style</span></span><br><span class="line">        <span class="keyword">let</span> localDate = dateFormatter.string(from: date)</span><br><span class="line">        <span class="keyword">return</span> localDate</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data)</span></span> &#123;</span><br><span class="line"><span class="comment">//        self.enableRemoteNotificationFeatures()</span></span><br><span class="line"><span class="comment">//        self.forwardTokenToServer(token: deviceToken)</span></span><br><span class="line">    <span class="keyword">let</span> token = deviceToken.<span class="built_in">map</span> &#123; <span class="type">String</span>(format: <span class="string">&quot;%02.2hhx&quot;</span>, $<span class="number">0</span>) &#125;.joined()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;deviceToken: &quot;</span>, token)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">registerForPushNotifications</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="type">UNUserNotificationCenter</span>.current().requestAuthorization(options: [.alert, .sound, .badge]) &#123;</span><br><span class="line">        (granted, error) <span class="keyword">in</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Permission granted: \(granted)&quot;</span>)</span><br><span class="line">        <span class="comment">// 1. Check if permission granted</span></span><br><span class="line">        <span class="keyword">guard</span> granted <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="comment">// 2. Attempt registration for remote notifications on the main thread</span></span><br><span class="line">        <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">            <span class="type">UIApplication</span>.shared.registerForRemoteNotifications()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> CoreGraphics</span><br><span class="line"></span><br><span class="line"><span class="meta">@IBDesignable</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GradientView</span>: <span class="title">UIView</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@IBInspectable</span> <span class="keyword">var</span> fromColor: <span class="type">UIColor</span> = .clear</span><br><span class="line">    <span class="meta">@IBInspectable</span> <span class="keyword">var</span> toColor: <span class="type">UIColor</span> = .clear &#123;</span><br><span class="line">        <span class="keyword">didSet</span> &#123;</span><br><span class="line">            gradientOfView(colours: [fromColor, toColor])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">layoutSubviews</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.layoutSubviews()</span><br><span class="line"></span><br><span class="line">        gradientOfView(colours: [fromColor, toColor])</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> grad = <span class="type">CAGradientLayer</span>()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">gradientOfView</span><span class="params">(colours: [UIColor])</span></span> &#123;</span><br><span class="line">        grad.removeFromSuperlayer()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> cgColours = [<span class="type">CGColor</span>]()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> colour <span class="keyword">in</span> colours &#123;</span><br><span class="line">            cgColours.append(colour.cgColor)</span><br><span class="line">        &#125;</span><br><span class="line">        grad.frame = bounds</span><br><span class="line">        grad.colors = cgColours</span><br><span class="line">        layer.addSublayer(grad)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">protocol</span> <span class="title">ShowAlertController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">extension</span> <span class="title">ShowAlertController</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">alert</span><span class="params">(<span class="number">_</span> title: String? = <span class="literal">nil</span>, <span class="number">_</span> message: String? = <span class="literal">nil</span>, sender: UIBarButtonItem? = <span class="literal">nil</span>, buttons: [ <span class="params">(title:String, handler: <span class="params">(<span class="params">()</span></span></span></span></span> -&gt; <span class="type">Void</span>)? )]? = <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> alertC = <span class="type">UIAlertController</span>(title: title, message: message, preferredStyle: .alert)</span><br><span class="line">        buttons?.forEach &#123; button <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">let</span> style = (button.handler == <span class="literal">nil</span> ? <span class="type">UIAlertAction</span>.<span class="type">Style</span>.cancel : .<span class="keyword">default</span>)</span><br><span class="line">            alertC.addAction(<span class="type">UIAlertAction</span>(title: button.title, style: style) &#123; <span class="number">_</span> <span class="keyword">in</span></span><br><span class="line">                button.handler?()</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> popoverController = alertC.popoverPresentationController &#123;</span><br><span class="line">            popoverController.barButtonItem = sender</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.present(alertC, animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">toast</span><span class="params">(<span class="number">_</span> message: String, delay: Double = <span class="number">1</span>, sender: UIBarButtonItem? = <span class="literal">nil</span>, completion: <span class="params">(<span class="params">()</span></span></span></span> -&gt; <span class="type">Void</span>)?) &#123;</span><br><span class="line">        <span class="keyword">let</span> alertC = <span class="type">UIAlertController</span>(title: <span class="literal">nil</span>, message: message, preferredStyle: .alert)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> popoverController = alertC.popoverPresentationController &#123;</span><br><span class="line">            popoverController.barButtonItem = sender</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.present(alertC, animated: <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="type">DispatchQueue</span>.main.asyncAfter(deadline: <span class="type">DispatchTime</span>.now() + delay) &#123;</span><br><span class="line">            alertC.dismiss(animated: <span class="literal">true</span>, completion: completion)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">protocol</span> <span class="title">LoadingView</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> progressView: <span class="type">UIProgressView</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> coverView: <span class="type">UIView</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">extension</span> <span class="title">LoadingView</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">startLoading</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> v = coverView</span><br><span class="line"></span><br><span class="line">        v.backgroundColor = .white</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> pv = progressView</span><br><span class="line">        pv.progress = <span class="number">0</span></span><br><span class="line">        v.addConstraints(pv, l: <span class="number">0</span>, r: <span class="number">0</span>, t: navigationController?.navigationBar.bounds.height ?? <span class="number">0</span>, h: <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> aiv = <span class="type">UIActivityIndicatorView</span>(style: .gray)</span><br><span class="line">        aiv.startAnimating()</span><br><span class="line">        v.addConstraints(aiv, cx: <span class="number">0</span>, cy: <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        view.addOverlay(v)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">stopLoading</span><span class="params">()</span></span> &#123;</span><br><span class="line">        coverView.removeFromSuperview()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">extension</span> <span class="title">UIView</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">addOverlay</span><span class="params">(<span class="number">_</span> subView: UIView)</span></span> &#123;</span><br><span class="line">        addConstraints(subView, l: <span class="number">0</span>, r: <span class="number">0</span>, t: <span class="number">0</span>, b: <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">addConstraints</span><span class="params">(<span class="number">_</span> subView: UIView, l:CGFloat? = <span class="literal">nil</span>, r: CGFloat? = <span class="literal">nil</span>, t: CGFloat? = <span class="literal">nil</span>, b:CGFloat? = <span class="literal">nil</span>, h: CGFloat? = <span class="literal">nil</span>, w: CGFloat? = <span class="literal">nil</span>, cx: CGFloat? = <span class="literal">nil</span>, cy: CGFloat? = <span class="literal">nil</span>)</span></span> &#123;</span><br><span class="line">        addSubview(subView)</span><br><span class="line">        subView.translatesAutoresizingMaskIntoConstraints = <span class="literal">false</span></span><br><span class="line"><span class="comment">//        let margins = layoutMarginsGuide</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> l = l &#123;</span><br><span class="line">            subView.leadingAnchor.constraint(equalTo: leadingAnchor, constant: l).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> r = r &#123;</span><br><span class="line">            subView.trailingAnchor.constraint(equalTo: trailingAnchor, constant: r).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> t = t &#123;</span><br><span class="line">            subView.topAnchor.constraint(equalTo: topAnchor, constant: t).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> b = b &#123;</span><br><span class="line">            subView.bottomAnchor.constraint(equalTo: bottomAnchor, constant: b).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> h = h &#123;</span><br><span class="line">            subView.heightAnchor.constraint(equalToConstant: h).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> w = w &#123;</span><br><span class="line">            subView.widthAnchor.constraint(equalToConstant: w).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> cx = cx &#123;</span><br><span class="line">            subView.centerXAnchor.constraint(equalTo: centerXAnchor, constant: cx).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> cy = cy &#123;</span><br><span class="line">            subView.centerYAnchor.constraint(equalTo: centerYAnchor, constant: cy).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>Autolayout</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCodeバイナリツリー</title>
    <url>/ja/LeetCode-Binary-Tree/</url>
    <content><![CDATA[<h2 id="二分木プレオーダートラバーサル"><a href="#二分木プレオーダートラバーサル" class="headerlink" title="二分木プレオーダートラバーサル"></a>二分木プレオーダートラバーサル</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// iterative</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> p = stack.popLast() &#123;</span><br><span class="line">            ans.append(p.val)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> r = p.<span class="keyword">right</span> &#123; stack.append(r) &#125;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> l = p.<span class="keyword">left</span> &#123; stack.append(l) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// recursive</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorderTraversal0</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">return</span> [root.val] + preorderTraversal(root.<span class="keyword">left</span>) + preorderTraversal(root.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="二分木順序トラバーサル"><a href="#二分木順序トラバーサル" class="headerlink" title="二分木順序トラバーサル"></a>二分木順序トラバーサル</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// iteratively</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">inorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> || !stack.isEmpty &#123;</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">let</span> l = p &#123;</span><br><span class="line">                stack.append(l)</span><br><span class="line">                p = l.<span class="keyword">left</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> n = stack.popLast() &#123;</span><br><span class="line">                ans.append(n.val)</span><br><span class="line">                p = n.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二分木ポストオーダートラバーサル"><a href="#二分木ポストオーダートラバーサル" class="headerlink" title="二分木ポストオーダートラバーサル"></a>二分木ポストオーダートラバーサル</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Recursive</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">postorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">return</span> postorderTraversal(root.<span class="keyword">left</span>) + postorderTraversal(root.<span class="keyword">right</span>) + [root.val]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二分木レベルの順序走査"><a href="#二分木レベルの順序走査" class="headerlink" title="二分木レベルの順序走査"></a>二分木レベルの順序走査</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        helper(root, <span class="number">0</span>, &amp;ans)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> level: Int, <span class="number">_</span> ans: <span class="keyword">inout</span> [[Int]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> level &gt;= ans.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans.append( [root.val] )</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ans[level].append(root.val)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        helper(root.<span class="keyword">left</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">        helper(root.<span class="keyword">right</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二分木の最大深さ"><a href="#二分木の最大深さ" class="headerlink" title="二分木の最大深さ"></a>二分木の最大深さ</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> root != <span class="literal">nil</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">max</span>(maxDepth(root?.<span class="keyword">left</span>), maxDepth(root?.<span class="keyword">right</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="対称ツリー"><a href="#対称ツリー" class="headerlink" title="対称ツリー"></a>対称ツリー</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isSymmetric</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> inOrder(root) == inOrder(<span class="built_in">reverse</span>(root))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">reverse</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="built_in">reverse</span>(root.<span class="keyword">left</span>); <span class="built_in">reverse</span>(root.<span class="keyword">right</span>)</span><br><span class="line">        <span class="built_in">swap</span>(&amp;root.<span class="keyword">left</span>, &amp;root.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">inOrder</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int?</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> root == <span class="literal">nil</span> ? [<span class="literal">nil</span>] : [root!.val] + inOrder(root!.<span class="keyword">left</span>) + inOrder(root!.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="パスの合計"><a href="#パスの合計" class="headerlink" title="パスの合計"></a>パスの合計</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasPathSum</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> sum: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.<span class="keyword">left</span> == <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> == <span class="literal">nil</span> &amp;&amp; root.val == sum &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> hasPathSum(root.<span class="keyword">left</span>, sum-root.val) || hasPathSum(root.<span class="keyword">right</span>, sum-root.val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="単一値サブツリーを数える"><a href="#単一値サブツリーを数える" class="headerlink" title="単一値サブツリーを数える"></a>単一値サブツリーを数える</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">countUnivalSubtrees</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        isUni(root)</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">isUni</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.<span class="keyword">left</span> == <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> == <span class="literal">nil</span> &#123;</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> lv = root.<span class="keyword">left</span>?.val ?? root.<span class="keyword">right</span>!.val</span><br><span class="line">        <span class="keyword">let</span> rv = root.<span class="keyword">right</span>?.val ?? root.<span class="keyword">left</span>!.val</span><br><span class="line">        <span class="keyword">let</span> l = root.<span class="keyword">left</span> == <span class="literal">nil</span> ? <span class="literal">true</span> : isUni(root.<span class="keyword">left</span>)</span><br><span class="line">        <span class="keyword">let</span> r = root.<span class="keyword">right</span> == <span class="literal">nil</span> ? <span class="literal">true</span> : isUni(root.<span class="keyword">right</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> ans = l &amp;&amp; r &amp;&amp; (lv == root.val &amp;&amp; rv == root.val)</span><br><span class="line">        <span class="keyword">if</span> ans &#123; num += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="インオーダートラバーサルとポストオーダートラバーサルから二分木を構築する"><a href="#インオーダートラバーサルとポストオーダートラバーサルから二分木を構築する" class="headerlink" title="インオーダートラバーサルとポストオーダートラバーサルから二分木を構築する"></a>インオーダートラバーサルとポストオーダートラバーサルから二分木を構築する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">buildTree</span><span class="params">(<span class="number">_</span> inorder: [Int], <span class="number">_</span> postorder: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> dict = inorder.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">Int</span>:<span class="type">Int</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> inRange: <span class="params">(Int, Int)</span></span></span>, <span class="number">_</span> postI: <span class="type">Int</span>) -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> postI &lt; <span class="number">0</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> v = postorder[postI]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> i = dict[v], i &gt;= inRange.<span class="number">0</span> &amp;&amp; i &lt;= inRange.<span class="number">1</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> n = <span class="type">TreeNode</span>(v)</span><br><span class="line">                n.<span class="keyword">left</span> = helper((inRange.<span class="number">0</span>, i-<span class="number">1</span>), postI-<span class="number">1</span>)</span><br><span class="line">                n.<span class="keyword">right</span> = helper((i+<span class="number">1</span>, inRange.<span class="number">1</span>), postI-<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> n</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> helper(inRange, postI-<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper((<span class="number">0</span>, inorder.<span class="built_in">count</span>-<span class="number">1</span>), postorder.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="プレオーダーおよびインオーダートラバーサルからバイナリツリーを構築する"><a href="#プレオーダーおよびインオーダートラバーサルからバイナリツリーを構築する" class="headerlink" title="プレオーダーおよびインオーダートラバーサルからバイナリツリーを構築する"></a>プレオーダーおよびインオーダートラバーサルからバイナリツリーを構築する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">buildTree</span><span class="params">(<span class="number">_</span> preorder: [Int], <span class="number">_</span> inorder: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> dict = inorder.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">Int</span>: <span class="type">Int</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> inRange: <span class="params">(Int, Int)</span></span></span>, <span class="number">_</span> preI: <span class="type">Int</span>) -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> preI &gt;= preorder.<span class="built_in">count</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> v = preorder[preI]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> i = dict[v], i &gt;= inRange.<span class="number">0</span> &amp;&amp; i &lt;= inRange.<span class="number">1</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> n = <span class="type">TreeNode</span>(v)</span><br><span class="line">                n.<span class="keyword">left</span> = helper((inRange.<span class="number">0</span>, i-<span class="number">1</span>), preI+<span class="number">1</span>)</span><br><span class="line">                n.<span class="keyword">right</span> = helper((i+<span class="number">1</span>, inRange.<span class="number">1</span>), preI+<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> n</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> helper(inRange, preI+<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper((<span class="number">0</span>, inorder.<span class="built_in">count</span>-<span class="number">1</span>), <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="各ノードに次の右ポインタを入力する"><a href="#各ノードに次の右ポインタを入力する" class="headerlink" title="各ノードに次の右ポインタを入力する"></a>各ノードに次の右ポインタを入力する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">connect</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        root.<span class="keyword">left</span>?.next = root.<span class="keyword">right</span></span><br><span class="line">        root.<span class="keyword">right</span>?.next = root.next?.<span class="keyword">left</span></span><br><span class="line">        connect(root.<span class="keyword">left</span>)</span><br><span class="line">        connect(root.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="各ノードIIに次の右ポインタを入力する"><a href="#各ノードIIに次の右ポインタを入力する" class="headerlink" title="各ノードIIに次の右ポインタを入力する"></a>各ノードIIに次の右ポインタを入力する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">connect</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> nodes = [[<span class="type">Node</span>]</span><br><span class="line">        helper(root, <span class="number">0</span>, &amp;nodes)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nodes.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;(nodes[i].<span class="built_in">count</span>-<span class="number">1</span>) &#123;</span><br><span class="line">                nodes[i][j].next = nodes[i][j+<span class="number">1</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: Node?, <span class="number">_</span> level: Int, <span class="number">_</span> nodes: <span class="keyword">inout</span> [[Node]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        level &lt; nodes.<span class="built_in">count</span> ? nodes[level].append(root) : nodes.append([root])</span><br><span class="line">        helper(root.<span class="keyword">left</span>, level+<span class="number">1</span>, &amp;nodes)</span><br><span class="line">        helper(root.<span class="keyword">right</span>, level+<span class="number">1</span>, &amp;nodes)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二分木の最も低い共通祖先"><a href="#二分木の最も低い共通祖先" class="headerlink" title="二分木の最も低い共通祖先"></a>二分木の最も低い共通祖先</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">lowestCommonAncestor</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root, <span class="keyword">let</span> p = p, <span class="keyword">let</span> q = q <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> l = lowestCommonAncestor(root.<span class="keyword">left</span>, p, q), r = lowestCommonAncestor(root.<span class="keyword">right</span>, p, q)</span><br><span class="line">        <span class="keyword">if</span> root.val == p.val || root.val == q.val || (l != <span class="literal">nil</span> &amp;&amp; r != <span class="literal">nil</span>) &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">return</span> l ?? r</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二分木をシリアル化および逆シリアル化"><a href="#二分木をシリアル化および逆シリアル化" class="headerlink" title="二分木をシリアル化および逆シリアル化"></a>二分木をシリアル化および逆シリアル化</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">serialize</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="string">&quot;#&quot;</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;\(root.val),\(serialize(root.left)),\(serialize(root.right))&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">(<span class="number">_</span> data: String)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> vals = data.<span class="built_in">split</span>(separator: <span class="string">&quot;,&quot;</span>)</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">()</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> i &lt; vals.<span class="built_in">count</span>, <span class="keyword">let</span> v = <span class="type">Int</span>(vals[i]) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">TreeNode</span>(v)</span><br><span class="line">            i += <span class="number">1</span>; n.<span class="keyword">left</span> = helper()</span><br><span class="line">            i += <span class="number">1</span>; n.<span class="keyword">right</span> = helper()</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> helper()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode再帰1</title>
    <url>/ja/LeetCode-Recursion-1/</url>
    <content><![CDATA[<h2 id="リバースストリング"><a href="#リバースストリング" class="headerlink" title="リバースストリング"></a>リバースストリング</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseString</span><span class="params">(<span class="number">_</span> s: <span class="keyword">inout</span> [Character])</span></span> &#123;</span><br><span class="line">        s.<span class="built_in">reverse</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="ペアでノードを交換"><a href="#ペアでノードを交換" class="headerlink" title="ペアでノードを交換"></a>ペアでノードを交換</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">swapPairs</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> h = <span class="built_in">swap</span>(head)</span><br><span class="line">        h?.next?.next = swapPairs(h?.next?.next)</span><br><span class="line">        <span class="keyword">return</span> h</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">swap</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> h0 = head, <span class="keyword">let</span> h1 = h0.next &#123;</span><br><span class="line">            h0.next = h1.next</span><br><span class="line">            h1.next = h0</span><br><span class="line">            <span class="keyword">return</span> h1</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> head</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="逆リンクリスト"><a href="#逆リンクリスト" class="headerlink" title="逆リンクリスト"></a>逆リンクリスト</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> prev: <span class="type">ListNode?</span> = <span class="literal">nil</span>, cur = head</span><br><span class="line">        <span class="keyword">while</span> cur != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> p = cur?.next</span><br><span class="line">            cur?.next = prev</span><br><span class="line">            prev = cur</span><br><span class="line">            cur = p</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prev</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二分探索木で検索する"><a href="#二分探索木で検索する" class="headerlink" title="二分探索木で検索する"></a>二分探索木で検索する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == val &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">left</span>, val)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">right</span>, val)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="パスカルの三角形II"><a href="#パスカルの三角形II" class="headerlink" title="パスカルの三角形II"></a>パスカルの三角形II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getRow</span><span class="params">(<span class="number">_</span> rowIndex: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> arr = [<span class="number">1</span>], j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;rowIndex &#123;</span><br><span class="line">            arr.append(<span class="number">1</span>)</span><br><span class="line">            j = arr.<span class="built_in">count</span> - <span class="number">2</span></span><br><span class="line">            <span class="keyword">while</span> j &gt; <span class="number">0</span> &#123;</span><br><span class="line">                arr[j] += arr[j-<span class="number">1</span>]</span><br><span class="line">                j -= <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="フィボナッチ数"><a href="#フィボナッチ数" class="headerlink" title="フィボナッチ数"></a>フィボナッチ数</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = <span class="type">Array</span>(repeating: <span class="number">0</span>, <span class="built_in">count</span>: <span class="number">31</span>)</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fib</span><span class="params">(<span class="number">_</span> N: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        arr[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> <span class="type">N</span> &lt; <span class="number">2</span> || arr[<span class="type">N</span>] != <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> arr[<span class="type">N</span>]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            arr[<span class="type">N</span>-<span class="number">1</span>] = fib(<span class="type">N</span>-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> arr[<span class="type">N</span>-<span class="number">1</span>] + arr[<span class="type">N</span>-<span class="number">2</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="階段を上る"><a href="#階段を上る" class="headerlink" title="階段を上る"></a>階段を上る</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] + <span class="type">Array</span>(repeating: <span class="number">0</span>, <span class="built_in">count</span>: <span class="number">127</span>)</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">climbStairs</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">4</span> || arr[n] != <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> arr[n]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            arr[n-<span class="number">1</span>] = climbStairs(n-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> arr[n-<span class="number">1</span>] + arr[n-<span class="number">2</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二分木の最大深さ"><a href="#二分木の最大深さ" class="headerlink" title="二分木の最大深さ"></a>二分木の最大深さ</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">max</span>(maxDepth(root.<span class="keyword">left</span>), maxDepth(root.<span class="keyword">right</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Pow-x、n"><a href="#Pow-x、n" class="headerlink" title="Pow(x、n)"></a>Pow(x、n)</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">myPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dic = [<span class="type">Int</span>:<span class="type">Double</span></span><br><span class="line">        dic[-<span class="number">1</span>] = <span class="number">1</span>/x; dic[<span class="number">0</span>] = <span class="number">1</span>; dic[<span class="number">1</span>] = x</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fastPow(x, n, &amp;dic)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fastPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int, <span class="number">_</span> arr: <span class="keyword">inout</span> [Int:Double])</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> v = arr[n] &#123; <span class="keyword">return</span> v &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> l = n / <span class="number">2</span>, r = n - l</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> arr[l] == <span class="literal">nil</span> &#123;</span><br><span class="line">            arr[l] = fastPow(x, l, &amp;arr)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> arr[r] == <span class="literal">nil</span> &#123;</span><br><span class="line">            arr[r] = fastPow(x, r, &amp;arr)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr[l]! * arr[r]!</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2つのソートされたリストをマージする"><a href="#2つのソートされたリストをマージする" class="headerlink" title="2つのソートされたリストをマージする"></a>2つのソートされたリストをマージする</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mergeTwoLists</span><span class="params">(<span class="number">_</span> l1: ListNode?, <span class="number">_</span> l2: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p1 = l1 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l2 &#125;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p2 = l2 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l1 &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> (p, q) = p1.val &lt;= p2.val ? (p1, p2) : (p2, p1)</span><br><span class="line">        p.next = mergeTwoLists(p.next, q)</span><br><span class="line">        <span class="keyword">return</span> p</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="文法のK番目の記号"><a href="#文法のK番目の記号" class="headerlink" title="文法のK番目の記号"></a>文法のK番目の記号</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">kthGrammar</span><span class="params">(<span class="number">_</span> N: Int, <span class="number">_</span> K: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="type">N</span> &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> (kthGrammar(<span class="type">N</span>-<span class="number">1</span>, (<span class="type">K</span>+<span class="number">1</span>)/<span class="number">2</span>) == <span class="number">0</span>) ? <span class="number">1</span>-<span class="type">K</span>%<span class="number">2</span> : <span class="type">K</span>%<span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ユニークな二分探索木II"><a href="#ユニークな二分探索木II" class="headerlink" title="ユニークな二分探索木II"></a>ユニークな二分探索木II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateTrees</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">1</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(<span class="number">1</span>, n)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> i1: Int, <span class="number">_</span> i2:Int)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> i1 &gt; i2 &#123; <span class="keyword">return</span> [<span class="literal">nil</span>] &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> tn = [<span class="type">TreeNode</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> i1...i2 &#123;</span><br><span class="line">            <span class="keyword">let</span> l = helper(i1, i-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">let</span> r = helper(i+<span class="number">1</span>, i2)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> li <span class="keyword">in</span> l &#123;</span><br><span class="line">                <span class="keyword">for</span> ri <span class="keyword">in</span> r &#123;</span><br><span class="line">                    <span class="keyword">let</span> n = <span class="type">TreeNode</span>(i)</span><br><span class="line">                    n.<span class="keyword">left</span> = li</span><br><span class="line">                    n.<span class="keyword">right</span> = ri</span><br><span class="line">                    tn.append(n)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> tn</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode再帰2</title>
    <url>/ja/LeetCode-Recursion-2/</url>
    <content><![CDATA[<h2 id="配列を並べ替える"><a href="#配列を並べ替える" class="headerlink" title="配列を並べ替える"></a>配列を並べ替える</h2><a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortArray</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> nums &#125;</span><br><span class="line">        <span class="keyword">let</span> i = nums.<span class="built_in">count</span>/<span class="number">2</span>, l = sortArray(<span class="type">Array</span>(nums[..&lt;i])), r = sortArray(<span class="type">Array</span>(nums[i...]))</span><br><span class="line">        <span class="keyword">return</span> merge(l, r)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(<span class="number">_</span> n1: [Int], <span class="number">_</span> n2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i1 = <span class="number">0</span>, i2 = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> arr = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> i1 &lt; n1.<span class="built_in">count</span>, i2 &lt; n2.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> n1[i1] &lt; n2[i2] &#123;</span><br><span class="line">                arr.append(n1[i1])</span><br><span class="line">                i1 += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                arr.append(n2[i2])</span><br><span class="line">                i2 += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i1 &lt; n1.<span class="built_in">count</span> &#123;</span><br><span class="line">            arr.append(n1[i1])</span><br><span class="line">            i1 += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i2 &lt; n2.<span class="built_in">count</span> &#123;</span><br><span class="line">            arr.append(n2[i2])</span><br><span class="line">            i2 += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二分探索木を検証する"><a href="#二分探索木を検証する" class="headerlink" title="二分探索木を検証する"></a>二分探索木を検証する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidBST</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">max</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> node: TreeNode?, <span class="number">_</span> lower: Int, <span class="number">_</span> upper: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> n = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> n.val &lt;= lower || n.val &gt;= upper &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper(n.<span class="keyword">left</span>, lower, n.val) &amp;&amp; helper(n.<span class="keyword">right</span>, n.val, upper)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2DマトリックスIIを検索する"><a href="#2DマトリックスIIを検索する" class="headerlink" title="2DマトリックスIIを検索する"></a>2DマトリックスIIを検索する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchMatrix</span><span class="params">(<span class="number">_</span> matrix: [[Int]], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> n = matrix.<span class="built_in">count</span>-<span class="number">1</span>, m = matrix.first?.<span class="built_in">count</span> ?? <span class="number">0</span>; <span class="keyword">var</span> i = n, j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span> &amp;&amp; j &lt; m &#123;</span><br><span class="line">            <span class="keyword">if</span> target &gt; matrix[i][j] &#123;</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> target &lt; matrix[i][j] &#123;</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="N-クイーンズII"><a href="#N-クイーンズII" class="headerlink" title="N-クイーンズII"></a>N-クイーンズII</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">totalNQueens</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">1</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(n-<span class="number">1</span>, <span class="type">Array</span>(repeating: <span class="type">Array</span>(repeating: <span class="number">1</span>, <span class="built_in">count</span>: n), <span class="built_in">count</span>: n)).<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> i: Int, <span class="number">_</span> board: [[Int]])</span></span> -&gt; [[[<span class="type">Int</span>]]] &#123;</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span> &#123; <span class="keyword">return</span> put(i, board) &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(i-<span class="number">1</span>, board).<span class="built_in">reduce</span>( [[[<span class="type">Int</span>]]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> i: Int, <span class="number">_</span> board: [[Int]])</span></span> -&gt; [[[<span class="type">Int</span>]]] &#123;</span><br><span class="line">        <span class="keyword">var</span> boards = [[[<span class="type">Int</span>]]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;board.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> board[i][j] == <span class="number">1</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> board = put((i,j), board)</span><br><span class="line">                boards.append(board)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> boards</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> p: <span class="params">(Int, Int)</span></span></span>, <span class="number">_</span> board: [[<span class="type">Int</span>]]) -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">let</span> n = board.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> board = board</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;n &#123; board[i][p.<span class="number">1</span>] = <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;n &#123; board[p.<span class="number">0</span>][j] = <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> p0 = p.<span class="number">0</span>, p1 = p.<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> p0 &lt; n, p1 &lt; n, p0 &gt;= <span class="number">0</span>, p1 &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            board[p0][p1] = <span class="number">0</span></span><br><span class="line">            p0 += <span class="number">1</span>; p1 += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        p0 = p.<span class="number">0</span>; p1 = p.<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> p0 &lt; n, p1 &lt; n, p0 &gt;= <span class="number">0</span>, p1 &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            board[p0][p1] = <span class="number">0</span></span><br><span class="line">            p0 += <span class="number">1</span>; p1 -= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        board[p.<span class="number">0</span>][p.<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> board</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ロボットルームクリーナー"><a href="#ロボットルームクリーナー" class="headerlink" title="ロボットルームクリーナー"></a>ロボットルームクリーナー</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">cleanRoom</span><span class="params">(<span class="number">_</span> robot: Robot)</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> visited = <span class="type">Set</span>&lt;[<span class="type">Int</span>]&gt;()</span><br><span class="line">        <span class="keyword">let</span> directions = [[-<span class="number">1</span>,<span class="number">0</span>], [<span class="number">0</span>,<span class="number">1</span>], [<span class="number">1</span>,<span class="number">0</span>], [<span class="number">0</span>,-<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">backtrack</span><span class="params">(<span class="number">_</span> cell: [Int] = [<span class="number">0</span>,<span class="number">0</span>], <span class="number">_</span> d: Int = <span class="number">0</span>)</span></span> &#123;</span><br><span class="line">            <span class="function"><span class="keyword">func</span> <span class="title">goBack</span><span class="params">()</span></span> &#123;</span><br><span class="line">                <span class="function"><span class="keyword">func</span> <span class="title">uTurn</span><span class="params">()</span></span> &#123; robot.turnRight(); robot.turnRight() &#125;</span><br><span class="line">                uTurn(); robot.move(); uTurn()</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            visited.insert(cell)</span><br><span class="line">            robot.clean()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">4</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> d = (d+i)%<span class="number">4</span>, cell = [cell[<span class="number">0</span>]+directions[d][<span class="number">0</span>], cell[<span class="number">1</span>]+directions[d][<span class="number">1</span>]]</span><br><span class="line">                <span class="keyword">if</span> !visited.<span class="built_in">contains</span>(cell) &amp;&amp; robot.move() &#123;</span><br><span class="line">                    backtrack(cell, d)</span><br><span class="line">                    goBack()</span><br><span class="line">                &#125;</span><br><span class="line">                robot.turnRight()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        backtrack()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="数独ソルバー"><a href="#数独ソルバー" class="headerlink" title="数独ソルバー"></a>数独ソルバー</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">solveSudoku</span><span class="params">(<span class="number">_</span> board: <span class="keyword">inout</span> [[Character]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> chars: [<span class="type">Character</span>] = [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>,<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;7&quot;</span>,<span class="string">&quot;8&quot;</span>,<span class="string">&quot;9&quot;</span>]</span><br><span class="line">        <span class="keyword">var</span> boxes = <span class="type">Array</span>(repeating: <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">3</span>), <span class="built_in">count</span>: <span class="number">3</span>),  rows = (<span class="number">0</span>..&lt;<span class="number">9</span>).<span class="built_in">map</span> &#123; <span class="type">Set</span>(board[$<span class="number">0</span>]) &#125;, cols = (<span class="number">0</span>..&lt;<span class="number">9</span>).<span class="built_in">map</span> &#123; i <span class="keyword">in</span> <span class="type">Set</span>( (<span class="number">0</span>..&lt;<span class="number">9</span>).<span class="built_in">map</span> &#123; j <span class="keyword">in</span> board[j][i] &#125; )&#125;</span><br><span class="line">        (<span class="number">0</span>..&lt;<span class="number">9</span>).forEach &#123; i <span class="keyword">in</span> (<span class="number">0</span>..&lt;<span class="number">9</span>).forEach &#123; j <span class="keyword">in</span> boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].insert(board[i][j]) &#125; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> <span class="built_in">c</span>: Character, <span class="number">_</span> i: Int, <span class="number">_</span> j: Int)</span></span> &#123;</span><br><span class="line">            board[i][j] = <span class="built_in">c</span>; rows[i].insert(<span class="built_in">c</span>); cols[j].insert(<span class="built_in">c</span>); boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].insert(<span class="built_in">c</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">restore</span><span class="params">(<span class="number">_</span> <span class="built_in">c</span>: Character, <span class="number">_</span> i: Int, <span class="number">_</span> j: Int)</span></span> &#123;</span><br><span class="line">            board[i][j] = <span class="string">&quot;.&quot;</span>; rows[i].remove(<span class="built_in">c</span>); cols[j].remove(<span class="built_in">c</span>); boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].remove(<span class="built_in">c</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">backtrack</span><span class="params">(<span class="number">_</span> k: Int = <span class="number">0</span>)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> i = k/<span class="number">9</span>, j = k%<span class="number">9</span></span><br><span class="line">            <span class="keyword">if</span> k &gt;= <span class="number">81</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> board[i][j] != <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">return</span> backtrack(k+<span class="number">1</span>) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">c</span> <span class="keyword">in</span> chars.<span class="built_in">filter</span>(&#123; !rows[i].<span class="built_in">contains</span>($<span class="number">0</span>) &amp;&amp; !cols[j].<span class="built_in">contains</span>($<span class="number">0</span>) &amp;&amp; !boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].<span class="built_in">contains</span>($<span class="number">0</span>) &#125;) &#123;</span><br><span class="line">                put(<span class="built_in">c</span>, i, j)</span><br><span class="line">                <span class="keyword">if</span> backtrack(k+<span class="number">1</span>) &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">                restore(<span class="built_in">c</span>, i, j)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        backtrack()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="組み合わせ"><a href="#組み合わせ" class="headerlink" title="組み合わせ"></a>組み合わせ</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">combine</span><span class="params">(<span class="number">_</span> n: Int, <span class="number">_</span> k: Int)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">if</span> k &gt; n &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">let</span> b = (k...n).<span class="built_in">map</span> &#123; [$<span class="number">0</span>] &#125;</span><br><span class="line">        <span class="keyword">if</span> k == <span class="number">1</span> &#123; <span class="keyword">return</span> b &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> a = combine(n-<span class="number">1</span>, k-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> a &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> b &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> last = i.last, <span class="keyword">let</span> first = j.first, last &lt; first &#123;</span><br><span class="line">                    ans.append(i + j)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="同じ木"><a href="#同じ木" class="headerlink" title="同じ木"></a>同じ木</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isSameTree</span><span class="params">(<span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> p = p, <span class="keyword">let</span> q = q, p.val == q.val &#123;</span><br><span class="line">            <span class="keyword">return</span> isSameTree(p.<span class="keyword">left</span>, q.<span class="keyword">left</span>) &amp;&amp; isSameTree(p.<span class="keyword">right</span>, q.<span class="keyword">right</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p == <span class="literal">nil</span> &amp;&amp; q == <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="括弧を生成する"><a href="#括弧を生成する" class="headerlink" title="括弧を生成する"></a>括弧を生成する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateParenthesis</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">String</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">backtrack</span><span class="params">(<span class="number">_</span> s: String = <span class="string">&quot;&quot;</span>, <span class="number">_</span> l: Int = <span class="number">0</span>, <span class="number">_</span> r: Int = <span class="number">0</span>)</span></span> &#123;</span><br><span class="line">            <span class="keyword">if</span> s.<span class="built_in">count</span> == n*<span class="number">2</span> &#123;</span><br><span class="line">                ans.append(s); <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> l &lt; n &#123; backtrack(s+<span class="string">&quot;(&quot;</span>, l+<span class="number">1</span>, r) &#125;</span><br><span class="line">            <span class="keyword">if</span> r &lt; l &#123; backtrack(s+<span class="string">&quot;)&quot;</span>, l, r+<span class="number">1</span>) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        backtrack()</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二分木順序トラバーサル"><a href="#二分木順序トラバーサル" class="headerlink" title="二分木順序トラバーサル"></a>二分木順序トラバーサル</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// iteratively</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">inorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> || !stack.isEmpty &#123;</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">let</span> l = p &#123;</span><br><span class="line">                stack.append(l)</span><br><span class="line">                p = l.<span class="keyword">left</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> n = stack.popLast() &#123;</span><br><span class="line">                ans.append(n.val)</span><br><span class="line">                p = n.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二分木レベルの順序走査"><a href="#二分木レベルの順序走査" class="headerlink" title="二分木レベルの順序走査"></a>二分木レベルの順序走査</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        helper(root, <span class="number">0</span>, &amp;ans)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> level: Int, <span class="number">_</span> ans: <span class="keyword">inout</span> [[Int]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> level &gt;= ans.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans.append( [root.val] )</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ans[level].append(root.val)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        helper(root.<span class="keyword">left</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">        helper(root.<span class="keyword">right</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二分探索木をソートされた二重リンクリストに変換する"><a href="#二分探索木をソートされた二重リンクリストに変換する" class="headerlink" title="二分探索木をソートされた二重リンクリストに変換する"></a>二分探索木をソートされた二重リンクリストに変換する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">treeToDoublyList</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> first: <span class="type">Node?</span>, last: <span class="type">Node?</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> cur = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            helper(cur.<span class="keyword">left</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> last = last &#123;</span><br><span class="line">                last.<span class="keyword">right</span> = cur</span><br><span class="line">                cur.<span class="keyword">left</span> = last</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                first = cur</span><br><span class="line">            &#125;</span><br><span class="line">            last = cur</span><br><span class="line">            helper(cur.<span class="keyword">right</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        helper(root)</span><br><span class="line">        last?.<span class="keyword">right</span> = first</span><br><span class="line">        first?.<span class="keyword">left</span> = last</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> first</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ヒストグラムで最大の長方形"><a href="#ヒストグラムで最大の長方形" class="headerlink" title="ヒストグラムで最大の長方形"></a>ヒストグラムで最大の長方形</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">largestRectangleArea</span><span class="params">(<span class="number">_</span> heights: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> i: Int, <span class="number">_</span> j: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> i &lt;= j <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">            <span class="keyword">var</span> index = <span class="number">0</span>, v = <span class="type">Int</span>.<span class="built_in">max</span></span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> i...j &#123;</span><br><span class="line">                <span class="keyword">if</span> heights[k] &lt; v &#123; index = k; v = heights[k] &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">max</span>(v*(j-i+<span class="number">1</span>), helper(i, index-<span class="number">1</span>), helper(index+<span class="number">1</span>, j))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(<span class="number">0</span>, heights.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="順列"><a href="#順列" class="headerlink" title="順列"></a>順列</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">permute</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> [nums] &#125;</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> arr = nums; arr.remove(at: i)</span><br><span class="line">            ans += permute(arr).<span class="built_in">map</span> &#123; [nums[i]] + $<span class="number">0</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="電話番号の文字の組み合わせ"><a href="#電話番号の文字の組み合わせ" class="headerlink" title="電話番号の文字の組み合わせ"></a>電話番号の文字の組み合わせ</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">let</span> dict : [<span class="type">Character</span>: [<span class="type">String</span>]] = [<span class="string">&quot;2&quot;</span>:[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>],<span class="string">&quot;3&quot;</span>:[<span class="string">&quot;d&quot;</span>,<span class="string">&quot;e&quot;</span>,<span class="string">&quot;f&quot;</span>],<span class="string">&quot;4&quot;</span>:[<span class="string">&quot;g&quot;</span>,<span class="string">&quot;h&quot;</span>,<span class="string">&quot;i&quot;</span>],<span class="string">&quot;5&quot;</span>:[<span class="string">&quot;j&quot;</span>,<span class="string">&quot;k&quot;</span>,<span class="string">&quot;l&quot;</span>],<span class="string">&quot;6&quot;</span>:[<span class="string">&quot;m&quot;</span>,<span class="string">&quot;n&quot;</span>,<span class="string">&quot;o&quot;</span>],<span class="string">&quot;7&quot;</span>:[<span class="string">&quot;p&quot;</span>,<span class="string">&quot;q&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="string">&quot;s&quot;</span>],<span class="string">&quot;8&quot;</span>:[<span class="string">&quot;t&quot;</span>,<span class="string">&quot;u&quot;</span>,<span class="string">&quot;v&quot;</span>],<span class="string">&quot;9&quot;</span>:[<span class="string">&quot;w&quot;</span>,<span class="string">&quot;x&quot;</span>,<span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">letterCombinations</span><span class="params">(<span class="number">_</span> digits: String)</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> digits.isEmpty ? [] : digits.<span class="built_in">reduce</span>([<span class="string">&quot;&quot;</span>]) &#123; (ans, digit) <span class="keyword">in</span></span><br><span class="line">            ans.flatMap &#123; s <span class="keyword">in</span> dict[digit, <span class="keyword">default</span>: [<span class="string">&quot;&quot;</span>]].<span class="built_in">map</span> &#123; <span class="built_in">c</span> <span class="keyword">in</span> s + <span class="built_in">c</span> &#125; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="スカイラインの問題"><a href="#スカイラインの問題" class="headerlink" title="スカイラインの問題"></a>スカイラインの問題</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getSkyline</span><span class="params">(<span class="number">_</span> buildings: [[Int]])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">let</span> n = buildings.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">0</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> [[buildings[<span class="number">0</span>][<span class="number">0</span>], buildings[<span class="number">0</span>][<span class="number">2</span>]], [buildings[<span class="number">0</span>][<span class="number">1</span>], <span class="number">0</span>]]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> l = getSkyline(<span class="type">Array</span>(buildings[..&lt;(n/<span class="number">2</span>)]))</span><br><span class="line">        <span class="keyword">let</span> r = getSkyline(<span class="type">Array</span>(buildings[(n/<span class="number">2</span>)...]))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> merge(l, r)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(<span class="number">_</span> l: [[Int]], <span class="number">_</span> r: [[Int]])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">let</span> ln = l.<span class="built_in">count</span>, rn = r.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> lp = <span class="number">0</span>, rp = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> curY = <span class="number">0</span>, lY = <span class="number">0</span>, rY = <span class="number">0</span> , output = [[<span class="type">Int</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">update</span><span class="params">(<span class="number">_</span> x: Int, <span class="number">_</span> y: Int)</span></span> &#123;</span><br><span class="line">            <span class="keyword">if</span> output.isEmpty || output.last?.first != x &#123;</span><br><span class="line">                output.append([x, y])</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                output[output.<span class="built_in">count</span>-<span class="number">1</span>][<span class="number">1</span>] = y</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">append</span><span class="params">(<span class="number">_</span> p: Int, <span class="number">_</span> lst: [[Int]], <span class="number">_</span> n: Int, <span class="number">_</span> curY: Int)</span></span> &#123;</span><br><span class="line">            <span class="keyword">var</span> p = p, curY = curY</span><br><span class="line">            <span class="keyword">while</span> p &lt; n &#123;</span><br><span class="line">                <span class="keyword">let</span> (x, y) = (lst[p][<span class="number">0</span>], lst[p][<span class="number">1</span>])</span><br><span class="line">                p += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> curY != y &#123;</span><br><span class="line">                    update(x, y)</span><br><span class="line">                    curY = y</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> lp &lt; ln &amp;&amp; rp &lt; rn &#123;</span><br><span class="line">            <span class="keyword">let</span> lPoint = l[lp], rPoint = r[rp]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> x = <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> lPoint[<span class="number">0</span>] &lt; rPoint[<span class="number">0</span>] &#123;</span><br><span class="line">                (x, lY) = (lPoint[<span class="number">0</span>], lPoint[<span class="number">1</span>])</span><br><span class="line">                lp += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                (x, rY) = (rPoint[<span class="number">0</span>], rPoint[<span class="number">1</span>])</span><br><span class="line">                rp += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> maxY = <span class="built_in">max</span>(lY, rY)</span><br><span class="line">            <span class="keyword">if</span> curY != maxY &#123;</span><br><span class="line">                update(x, maxY)</span><br><span class="line">                curY = maxY</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        append(lp, l, ln, curY)</span><br><span class="line">        append(rp, r, rn, curY)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCodeバイナリ検索</title>
    <url>/ja/LeetCode-Binary-Search/</url>
    <content><![CDATA[<h2 id="二分探索"><a href="#二分探索" class="headerlink" title="二分探索"></a>二分探索</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123; i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; j = mid-<span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="Sqrt-x"><a href="#Sqrt-x" class="headerlink" title="Sqrt(x)"></a>Sqrt(x)</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mySqrt</span><span class="params">(<span class="number">_</span> x: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> target = <span class="type">Int</span>(sqrt(<span class="type">Double</span>(x)))</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = x</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> mid == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            mid &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="数が多いか少ないかを推測する"><a href="#数が多いか少ないかを推測する" class="headerlink" title="数が多いか少ないかを推測する"></a>数が多いか少ないかを推測する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> : <span class="title">GuessGame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">guessNumber</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">switch</span> guess(mid) &#123;</span><br><span class="line">                <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">                    j = mid-<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    i = mid+<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> mid</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="回転したソート済み配列で検索"><a href="#回転したソート済み配列で検索" class="headerlink" title="回転したソート済み配列で検索"></a>回転したソート済み配列で検索</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j - i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &gt;= nums[i] &#123;</span><br><span class="line">                (target &gt;= nums[i] &amp;&amp; target &lt; nums[mid]) ? (j = mid-<span class="number">1</span>) : (i = mid+<span class="number">1</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                (target &lt;= nums[j] &amp;&amp; target &gt; nums[mid]) ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="最初の悪いバージョン"><a href="#最初の悪いバージョン" class="headerlink" title="最初の悪いバージョン"></a>最初の悪いバージョン</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>: <span class="title">VersionControl</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">firstBadVersion</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> h = i + (j-i)/<span class="number">2</span></span><br><span class="line">            isBadVersion(h) ? (j = h-<span class="number">1</span>) : (i = h + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ピーク要素を見つける"><a href="#ピーク要素を見つける" class="headerlink" title="ピーク要素を見つける"></a>ピーク要素を見つける</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[mid+<span class="number">1</span>] ? (r = mid) : (l = mid+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> l: Int, <span class="number">_</span> r: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (l == r) &#123; <span class="keyword">return</span> l &#125;</span><br><span class="line">            <span class="keyword">let</span> mid = l + (r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> (nums[mid] &gt; nums[mid+<span class="number">1</span>]) ? search(l, mid) : search(mid+<span class="number">1</span>, r)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> search(<span class="number">0</span>, nums.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="回転したソート済み配列で最小値を見つける"><a href="#回転したソート済み配列で最小値を見つける" class="headerlink" title="回転したソート済み配列で最小値を見つける"></a>回転したソート済み配列で最小値を見つける</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="範囲を検索する"><a href="#範囲を検索する" class="headerlink" title="範囲を検索する"></a>範囲を検索する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchRange</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> [-<span class="number">1</span>, -<span class="number">1</span>] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                i = mid; j = mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123;</span><br><span class="line">                i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                j = mid-<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i-<span class="number">1</span> &gt;= <span class="number">0</span>, nums[i-<span class="number">1</span>] == target &#123; i -= <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j+<span class="number">1</span> &lt; nums.<span class="built_in">count</span>, nums[j+<span class="number">1</span>] == target &#123; j += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i] == target ? [i, j] : [-<span class="number">1</span>, -<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="K個の最も近い要素を見つける"><a href="#K個の最も近い要素を見つける" class="headerlink" title="K個の最も近い要素を見つける"></a>K個の最も近い要素を見つける</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findClosestElements</span><span class="params">(<span class="number">_</span> arr: [Int], <span class="number">_</span> k: Int, <span class="number">_</span> x: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.isEmpty &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = arr.<span class="built_in">count</span>, ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> arr[mid] == x &#123; i = mid &#125;</span><br><span class="line">            arr[mid] &lt; x ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        j = i+k &lt; arr.<span class="built_in">count</span> ? i+k : arr.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        i = (i-k) &gt;= <span class="number">0</span> ? (i-k) : <span class="number">0</span></span><br><span class="line">        ans = <span class="type">Array</span>(arr[i...j])</span><br><span class="line">        <span class="keyword">while</span> ans.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">            <span class="built_in">abs</span>(x-ans.first!) &lt;= <span class="built_in">abs</span>(x-ans.last!) ? ans.removeLast() : ans.removeFirst()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="最も近い二分探索木の値"><a href="#最も近い二分探索木の値" class="headerlink" title="最も近い二分探索木の値"></a>最も近い二分探索木の値</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">closestValue</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> target: Double)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = root, v = p!.val</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">abs</span>(<span class="type">Double</span>(p!.val)-target) &lt; <span class="built_in">abs</span>(<span class="type">Double</span>(v)-target) &#123; v = p!.val &#125;</span><br><span class="line">            p = target &lt; <span class="type">Double</span>(p!.val) ? p!.<span class="keyword">left</span> : p!.<span class="keyword">right</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="サイズ不明のソートされた配列で検索"><a href="#サイズ不明のソートされた配列で検索" class="headerlink" title="サイズ不明のソートされた配列で検索"></a>サイズ不明のソートされた配列で検索</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> reader: ArrayReader, <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> reader.<span class="keyword">get</span>(<span class="number">0</span>) == target &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> reader.<span class="keyword">get</span>(j) &lt; target &#123;</span><br><span class="line">            i = j; j &lt;&lt;= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)&gt;&gt;<span class="number">1</span>, v = reader.<span class="keyword">get</span>(mid)</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            v &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Pow-x、n"><a href="#Pow-x、n" class="headerlink" title="Pow(x、n)"></a>Pow(x、n)</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">myPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="number">0</span>: <span class="number">1.0</span>, <span class="number">1</span>: x]</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">fastPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n] &#123; <span class="keyword">return</span> v &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> h = fastPow(x, n/<span class="number">2</span>), v = n&amp;<span class="number">1</span> == <span class="number">0</span> ? h*h : x*h*h</span><br><span class="line">            dict[n] = v</span><br><span class="line">            <span class="keyword">return</span> v</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> v = fastPow(x, <span class="built_in">abs</span>(n))</span><br><span class="line">        <span class="keyword">return</span> n &lt; <span class="number">0</span> ? <span class="number">1</span>/v : v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="有効なパーフェクトスクエア"><a href="#有効なパーフェクトスクエア" class="headerlink" title="有効なパーフェクトスクエア"></a>有効なパーフェクトスクエア</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isPerfectSquare</span><span class="params">(<span class="number">_</span> num: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> x = (num+<span class="number">1</span>)/<span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> x*x &gt; num &#123;</span><br><span class="line">            x = (x + num/x) / <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> x*x == num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ターゲットよりも大きい最小の文字を見つける"><a href="#ターゲットよりも大きい最小の文字を見つける" class="headerlink" title="ターゲットよりも大きい最小の文字を見つける"></a>ターゲットよりも大きい最小の文字を見つける</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">nextGreatestLetter</span><span class="params">(<span class="number">_</span> letters: [Character], <span class="number">_</span> target: Character)</span></span> -&gt; <span class="type">Character</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">c</span> <span class="keyword">in</span> letters &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">c</span> &gt; target &#123; <span class="keyword">return</span> <span class="built_in">c</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> letters.first!</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="回転したソート済み配列で最小値を見つける-1"><a href="#回転したソート済み配列で最小値を見つける-1" class="headerlink" title="回転したソート済み配列で最小値を見つける"></a>回転したソート済み配列で最小値を見つける</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            nums[mid] &gt;= nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="回転ソートされた配列IIで最小値を見つける"><a href="#回転ソートされた配列IIで最小値を見つける" class="headerlink" title="回転ソートされた配列IIで最小値を見つける"></a>回転ソートされた配列IIで最小値を見つける</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] &gt; nums[r] &#123; l = mid+<span class="number">1</span> &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; nums[r]  &#123; r = mid &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123; r -= <span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2つのアレイの交差"><a href="#2つのアレイの交差" class="headerlink" title="2つのアレイの交差"></a>2つのアレイの交差</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2つのアレイの交差点II"><a href="#2つのアレイの交差点II" class="headerlink" title="2つのアレイの交差点II"></a>2つのアレイの交差点II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Two-SumII-入力配列がソートされます"><a href="#Two-SumII-入力配列がソートされます" class="headerlink" title="Two SumII-入力配列がソートされます"></a>Two SumII-入力配列がソートされます</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(<span class="number">_</span> numbers: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = numbers.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> v =  numbers[i]+numbers[j]</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            v &lt; target ? (i+=<span class="number">1</span>) : (j-=<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> [i+<span class="number">1</span>, j+<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="重複する番号を見つける"><a href="#重複する番号を見つける" class="headerlink" title="重複する番号を見つける"></a>重複する番号を見つける</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;(), i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(nums[i]) &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(nums[i]); i+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2つのソートされた配列の中央値"><a href="#2つのソートされた配列の中央値" class="headerlink" title="2つのソートされた配列の中央値"></a>2つのソートされた配列の中央値</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> nums = nums1+nums2</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span>, j &lt; nums2.<span class="built_in">count</span> &#123;</span><br><span class="line">            nums1[i] &lt; nums2[j] ? (nums[k] = nums1[i], i+=<span class="number">1</span>) : (nums[k] = nums2[j], j+=<span class="number">1</span>); k+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span> &#123; nums[k] = nums1[i]; i+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j &lt; nums2.<span class="built_in">count</span> &#123; nums[k] = nums2[j]; j+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> h = nums.<span class="built_in">count</span>/<span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">count</span>&amp;<span class="number">1</span> == <span class="number">1</span> ? <span class="type">Double</span>(nums[h]) : <span class="type">Double</span>(nums[h-<span class="number">1</span>]+nums[h])/<span class="number">2.0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="K番目に小さいペア距離を見つける"><a href="#K番目に小さいペア距離を見つける" class="headerlink" title="K番目に小さいペア距離を見つける"></a>K番目に小さいペア距離を見つける</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">smallestDistancePair</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> nums = nums.sorted()</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, h = nums.last!-nums.first!</span><br><span class="line">        <span class="keyword">while</span> l &lt; h &#123;</span><br><span class="line">            <span class="keyword">let</span> m = (l+h)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span>, l1 = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> r1 <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (nums[r1]-nums[l1]) &gt; m &#123; l1 += <span class="number">1</span> &#125;</span><br><span class="line">                <span class="built_in">count</span> += r1-l1</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">count</span> &gt;= k ? (h = m): (l = m+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="分割配列の最大合計"><a href="#分割配列の最大合計" class="headerlink" title="分割配列の最大合計"></a>分割配列の最大合計</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCodeN-aryツリー</title>
    <url>/ja/leetcode-n-ary-tree/</url>
    <content><![CDATA[<h2 id="N-aryツリープレオーダートラバーサル"><a href="#N-aryツリープレオーダートラバーサル" class="headerlink" title="N-aryツリープレオーダートラバーサル"></a>N-aryツリープレオーダートラバーサル</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    	<span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children.reversed()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="N-およびツリーポストオーダートラバーサル"><a href="#N-およびツリーポストオーダートラバーサル" class="headerlink" title="N-およびツリーポストオーダートラバーサル"></a>N-およびツリーポストオーダートラバーサル</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">postorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    	<span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans.reversed()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="N-aryツリーレベルの順序走査"><a href="#N-aryツリーレベルの順序走査" class="headerlink" title="N-aryツリーレベルの順序走査"></a>N-aryツリーレベルの順序走査</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> cur = [root], ans = [[root.val]]</span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            <span class="keyword">let</span> children = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            <span class="keyword">if</span> !children.isEmpty &#123; ans.append( children.<span class="built_in">map</span> &#123; $<span class="number">0</span>.val &#125; ) &#125;</span><br><span class="line">            cur = children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="N-aryツリーの最大深さ"><a href="#N-aryツリーの最大深さ" class="headerlink" title="N-aryツリーの最大深さ"></a>N-aryツリーの最大深さ</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> cur = root == <span class="literal">nil</span> ? [] : [root!], depth = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            cur = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            depth += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> depth</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="N-aryツリーをバイナリツリーにエンコードする"><a href="#N-aryツリーをバイナリツリーにエンコードする" class="headerlink" title="N-aryツリーをバイナリツリーにエンコードする"></a>N-aryツリーをバイナリツリーにエンコードする</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">encode</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> tn = <span class="type">TreeNode</span>(root.val); <span class="keyword">var</span> p: <span class="type">TreeNode?</span> = tn</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> n = root.children.first &#123;</span><br><span class="line">            p?.<span class="keyword">left</span> = encode(n); p = p?.<span class="keyword">left</span></span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> root.children[<span class="number">1</span>...] &#123;</span><br><span class="line">                p?.<span class="keyword">right</span> = encode(n); p = p?.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tn</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">decode</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = <span class="type">Node</span>(root.val); <span class="keyword">var</span> p = root.<span class="keyword">left</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> l = decode(p) &#123; n.children.append(l) &#125;</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> q = p?.<span class="keyword">right</span>, <span class="keyword">let</span> r = decode(q) &#123;</span><br><span class="line">            n.children.append(r); p = q</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="N-aryツリーのシリアル化と逆シリアル化"><a href="#N-aryツリーのシリアル化と逆シリアル化" class="headerlink" title="N-aryツリーのシリアル化と逆シリアル化"></a>N-aryツリーのシリアル化と逆シリアル化</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">serialize</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="string">&quot;$&quot;</span> &#125;</span><br><span class="line">    	<span class="keyword">var</span> s = <span class="string">&quot;\(root.val),\(root.children.count),&quot;</span></span><br><span class="line">        <span class="keyword">for</span> child <span class="keyword">in</span> root.children &#123;</span><br><span class="line">            s += serialize(child)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">(<span class="number">_</span> data: String)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> arr = data.components(separatedBy: <span class="string">&quot;,&quot;</span>).<span class="built_in">compactMap</span> &#123; <span class="type">Int</span>($<span class="number">0</span>) &#125;; <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">()</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> i &gt;= arr.<span class="built_in">count</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">Node</span>(arr[i])</span><br><span class="line">            i += <span class="number">2</span>; <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;arr[i-<span class="number">1</span>] &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> a = deserialize() &#123; n.children.append(a) &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deserialize()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCodeバイナリ検索ツリー</title>
    <url>/ja/LeetCode-Binary-Search-Tree/</url>
    <content><![CDATA[<h2 id="バイナリ検索ツリーを確認する"><a href="#バイナリ検索ツリーを確認する" class="headerlink" title="バイナリ検索ツリーを確認する"></a>バイナリ検索ツリーを確認する</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidBST</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">max</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> node: TreeNode?, <span class="number">_</span> lower: Int, <span class="number">_</span> upper: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> n = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> n.val &lt;= lower || n.val &gt;= upper &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper(n.<span class="keyword">left</span>, lower, n.val) &amp;&amp; helper(n.<span class="keyword">right</span>, n.val, upper)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="バイナリ検索ツリーイテレータ"><a href="#バイナリ検索ツリーイテレータ" class="headerlink" title="バイナリ検索ツリーイテレータ"></a>バイナリ検索ツリーイテレータ</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BSTIterator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> queue = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        helper(root.<span class="keyword">left</span>)</span><br><span class="line">        queue.append(root.val)</span><br><span class="line">        helper(root.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> root: <span class="type">TreeNode?</span>) &#123;</span><br><span class="line">        helper(root)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">next</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> queue.removeFirst()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasNext</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !queue.isEmpty</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="バイナリ検索ツリーで検索"><a href="#バイナリ検索ツリーで検索" class="headerlink" title="バイナリ検索ツリーで検索"></a>バイナリ検索ツリーで検索</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == val &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">left</span>, val)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">right</span>, val)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="バイナリ検索ツリーに操作を挿入します"><a href="#バイナリ検索ツリーに操作を挿入します" class="headerlink" title="バイナリ検索ツリーに操作を挿入します"></a>バイナリ検索ツリーに操作を挿入します</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insertIntoBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> root: TreeNode? = root, <span class="number">_</span> val: Int = val)</span></span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> l = root.<span class="keyword">left</span> &#123;</span><br><span class="line">                    insert(l, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">left</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> r = root.<span class="keyword">right</span> &#123;</span><br><span class="line">                    insert(r, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">right</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        insert()</span><br><span class="line">        <span class="keyword">return</span> root ?? <span class="type">TreeNode</span>(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="バイナリ検索ツリーのノードを削除します"><a href="#バイナリ検索ツリーのノードを削除します" class="headerlink" title="バイナリ検索ツリーのノードを削除します"></a>バイナリ検索ツリーのノードを削除します</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deleteNode</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == key &#123;</span><br><span class="line">            <span class="keyword">if</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> != <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> p = root.<span class="keyword">right</span></span><br><span class="line">                <span class="keyword">while</span> p?.<span class="keyword">left</span> != <span class="literal">nil</span> &#123;  p = p?.<span class="keyword">left</span> &#125;</span><br><span class="line">                p?.<span class="keyword">left</span> = root.<span class="keyword">left</span></span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">right</span></span><br><span class="line">            &#125; <span class="keyword">else</span>  &#123;</span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> ? root.<span class="keyword">left</span> : root.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> key &lt; root.val &#123;</span><br><span class="line">            root.<span class="keyword">left</span> = deleteNode(root.<span class="keyword">left</span>, key)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            root.<span class="keyword">right</span> = deleteNode(root.<span class="keyword">right</span>, key)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="データストリームのK番目に大きい要素"><a href="#データストリームのK番目に大きい要素" class="headerlink" title="データストリームのK番目に大きい要素"></a>データストリームのK番目に大きい要素</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KthLargest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">var</span> k = <span class="number">0</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> k: <span class="type">Int</span>, <span class="number">_</span> nums: [<span class="type">Int</span>]) &#123;</span><br><span class="line">        <span class="keyword">self</span>.k = k</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123; add(i) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.<span class="built_in">count</span> &lt; k || val &gt; arr.first! &#123;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> i &lt; arr.<span class="built_in">count</span>, val &gt; arr[i] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            arr.insert(val, at: i)</span><br><span class="line">            <span class="keyword">if</span> arr.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">                arr.removeFirst()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr.first!</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="バイナリ検索ツリーの最も近い共通の祖先"><a href="#バイナリ検索ツリーの最も近い共通の祖先" class="headerlink" title="バイナリ検索ツリーの最も近い共通の祖先"></a>バイナリ検索ツリーの最も近い共通の祖先</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">lowestCommonAncestor</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root, <span class="keyword">let</span> pv = p?.val, <span class="keyword">let</span> qv = q?.val <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val &gt;= <span class="built_in">min</span>(pv, qv) &amp;&amp; root.val &lt;= <span class="built_in">max</span>(pv, qv) &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">return</span> root.val &gt; <span class="built_in">max</span>(pv, qv) ? lowestCommonAncestor(root.<span class="keyword">left</span>, p, q) : lowestCommonAncestor(root.<span class="keyword">right</span>, p, q)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="重複する要素がありますIII"><a href="#重複する要素がありますIII" class="headerlink" title="重複する要素がありますIII"></a>重複する要素がありますIII</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="バランスの取れたバイナリツリー"><a href="#バランスの取れたバイナリツリー" class="headerlink" title="バランスの取れたバイナリツリー"></a>バランスの取れたバイナリツリー</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isBalanced</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root).<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; (<span class="type">Int</span>, <span class="type">Bool</span>) &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> r = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> (<span class="number">0</span>, <span class="literal">true</span>) &#125;</span><br><span class="line">        <span class="keyword">let</span> rl = helper(r.<span class="keyword">left</span>), rr = helper(r.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span> + <span class="built_in">max</span>(rl.<span class="number">0</span>, rr.<span class="number">0</span>), rl.<span class="number">1</span> &amp;&amp; rr.<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(rl.<span class="number">0</span> - rr.<span class="number">0</span>) &lt;= <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="順序付けられた配列をバイナリ検索ツリーに変換します"><a href="#順序付けられた配列をバイナリ検索ツリーに変換します" class="headerlink" title="順序付けられた配列をバイナリ検索ツリーに変換します"></a>順序付けられた配列をバイナリ検索ツリーに変換します</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortedArrayToBST</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = nums.<span class="built_in">count</span>, h = n/<span class="number">2</span>, h1 = h+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> r = <span class="type">TreeNode</span>(nums[n/<span class="number">2</span>])</span><br><span class="line">        r.<span class="keyword">left</span> = sortedArrayToBST(<span class="type">Array</span>(nums[<span class="number">0</span>..&lt;h]))</span><br><span class="line">        r.<span class="keyword">right</span> = sortedArrayToBST(<span class="type">Array</span>(nums[h1...]))</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCodeハッシュテーブル</title>
    <url>/ja/LeetCode-Hash-Table/</url>
    <content><![CDATA[<h2 id="デザインハッシュセット"><a href="#デザインハッシュセット" class="headerlink" title="デザインハッシュセット"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashSet">デザインハッシュセット</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: <span class="literal">false</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">         bucket[key] = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">contains</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="デザインハッシュマップ"><a href="#デザインハッシュマップ" class="headerlink" title="デザインハッシュマップ"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashMap">デザインハッシュマップ</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashMap</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: -<span class="number">1</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> key: Int, <span class="number">_</span> value: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">get</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="重複が含まれています"><a href="#重複が含まれています" class="headerlink" title="重複が含まれています"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate">重複が含まれています</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(i) &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(i)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="単一番号"><a href="#単一番号" class="headerlink" title="単一番号"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Single-Number">単一番号</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">singleNumber</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> ^ $<span class="number">1</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2つの配列の交差"><a href="#2つの配列の交差" class="headerlink" title="2つの配列の交差"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-Arrays">2つの配列の交差</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ハッピー数"><a href="#ハッピー数" class="headerlink" title="ハッピー数"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Happy-Number">ハッピー数</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> setI = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isHappy</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = n, r = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &gt; <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> t = i%<span class="number">10</span></span><br><span class="line">            r += t*t</span><br><span class="line">            i /= <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> setI.<span class="built_in">contains</span>(r) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        setI.insert(r)</span><br><span class="line">        <span class="keyword">return</span> isHappy(r)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2つのリストの最小インデックス合計"><a href="#2つのリストの最小インデックス合計" class="headerlink" title="2つのリストの最小インデックス合計"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Minimum-Index-Sum-of-Two-Lists">2つのリストの最小インデックス合計</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 452 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict2 = [<span class="type">String</span>: <span class="type">Int</span>](), least = <span class="type">Int</span>.<span class="built_in">max</span>, arr = [<span class="type">String</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list2.<span class="built_in">count</span> &#123;</span><br><span class="line">            dict2[ list2[i] ] = i</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list1.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> j = dict2[ list1[i] ] &#123;</span><br><span class="line">                <span class="keyword">let</span> n = i+j</span><br><span class="line">                <span class="keyword">if</span> n &lt; least &#123;</span><br><span class="line">                    arr = [list1[i]]</span><br><span class="line">                    least = n</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> n == least &#123;</span><br><span class="line">                    arr.append(list1[i])</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2104 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> dict1 = list1.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict2 = list2.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict = <span class="type">Set</span>(dict1.keys).intersection(dict2.keys).<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>] = dict1[$<span class="number">1</span>]! + dict2[$<span class="number">1</span>]! &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value == dict.<span class="built_in">map</span>(&#123; $<span class="number">0</span>.value &#125;).<span class="built_in">min</span>()  &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.key &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2つのアレイの交差II"><a href="#2つのアレイの交差II" class="headerlink" title="2つのアレイの交差II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-Arrays-II">2つのアレイの交差II</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span>](), ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="重複IIを含む"><a href="#重複IIを含む" class="headerlink" title="重複IIを含む"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate-II">重複IIを含む</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsNearbyDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: [<span class="type">Int</span>]]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> n = nums[i]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> arr = dict[n] &#123;</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> arr &#123;</span><br><span class="line">                    <span class="keyword">if</span> i-j &lt;= k &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                dict[n] = arr + [i]</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dict[n] = [i]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ロガーレートリミッター"><a href="#ロガーレートリミッター" class="headerlink" title="ロガーレートリミッター"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Logger-Rate-Limiter">ロガーレートリミッター</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> logs = [<span class="type">String</span>: <span class="type">Int</span>]()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">shouldPrintMessage</span><span class="params">(<span class="number">_</span> timestamp: Int, <span class="number">_</span> message: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> lastTimestamp = logs[message], timestamp - lastTimestamp &lt; <span class="number">10</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        logs[message] = timestamp</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="グループシフト文字列"><a href="#グループシフト文字列" class="headerlink" title="グループシフト文字列"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Group-Shifted-Strings">グループシフト文字列</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">groupStrings</span><span class="params">(<span class="number">_</span> strings: [String])</span></span> -&gt; [[<span class="type">String</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [[<span class="type">Int</span>]: [<span class="type">String</span>]]()</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> strings &#123;</span><br><span class="line">            <span class="keyword">let</span> arrS = <span class="type">Array</span>(s)</span><br><span class="line">            <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">1</span>..&lt;arrS.<span class="built_in">count</span>) &#123;</span><br><span class="line">                arr.append((<span class="type">Int</span>(arrS[i].asciiValue!)-<span class="type">Int</span>(arrS[i-<span class="number">1</span>].asciiValue!)+<span class="number">26</span>)%<span class="number">26</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            dict[arr, <span class="keyword">default</span>: []] += [s]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="有効な数独"><a href="#有効な数独" class="headerlink" title="有効な数独"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Valid-Sudoku">有効な数独</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidSudoku</span><span class="params">(<span class="number">_</span> board: [[Character]])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[i].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[i].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[j].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[j].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> setC = <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;()</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                        <span class="keyword">let</span> <span class="built_in">c</span> = board[i*<span class="number">3</span>+k][j*<span class="number">3</span>+l]</span><br><span class="line">                        <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                        <span class="keyword">if</span> setC.<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            setC.insert(<span class="built_in">c</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="重複するサブツリーを検索"><a href="#重複するサブツリーを検索" class="headerlink" title="重複するサブツリーを検索"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Find-Duplicate-Subtrees">重複するサブツリーを検索</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicateSubtrees</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        dfs(root)</span><br><span class="line">        <span class="keyword">return</span> nodeDict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value.<span class="number">1</span> &gt; <span class="number">1</span> &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value.<span class="number">0</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> nodeDict = [[<span class="type">Int?</span>]: (<span class="type">TreeNode</span>, <span class="type">Int</span>)]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">dfs</span><span class="params">(<span class="number">_</span> node: TreeNode?)</span></span> -&gt; [<span class="type">Int?</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> node = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> [<span class="literal">nil</span>] &#125;</span><br><span class="line">        <span class="keyword">let</span> key: [<span class="type">Int?</span>] = [node.val] + dfs(node.<span class="keyword">left</span>) + dfs(node.<span class="keyword">right</span>)</span><br><span class="line">        nodeDict[key, <span class="keyword">default</span>: (node, <span class="number">0</span>)].<span class="number">1</span> += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> key</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="宝石と石"><a href="#宝石と石" class="headerlink" title="宝石と石"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Jewels-and-Stones">宝石と石</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">numJewelsInStones</span><span class="params">(<span class="number">_</span> J: String, <span class="number">_</span> S: String)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> j = <span class="type">Set</span>(<span class="type">J</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">S</span>.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + (j.<span class="built_in">contains</span>($<span class="number">1</span>) ? <span class="number">1</span> : <span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="文字を繰り返さない最長の部分文字列"><a href="#文字を繰り返さない最長の部分文字列" class="headerlink" title="文字を繰り返さない最長の部分文字列"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Longest-Substring-Without-Repeating-Characters">文字を繰り返さない最長の部分文字列</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Two-Sum-III-データ構造設計"><a href="#Two-Sum-III-データ構造設計" class="headerlink" title="Two Sum III-データ構造設計"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Two-Sum-III---Data-structure-design">Two Sum III-データ構造設計</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TwoSum</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> numbers = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> number: Int)</span></span> &#123;</span><br><span class="line">        numbers[number, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">find</span><span class="params">(<span class="number">_</span> value: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (k, v) <span class="keyword">in</span> numbers &#123;</span><br><span class="line">            <span class="keyword">let</span> rest = value-k</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> num = numbers[rest], (num &gt; ((rest == k) ? <span class="number">1</span> : <span class="number">0</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4Sum-II"><a href="#4Sum-II" class="headerlink" title="4Sum II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#4Sum-II">4Sum II</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fourSumCount</span><span class="params">(<span class="number">_</span> A: [Int], <span class="number">_</span> B: [Int], <span class="number">_</span> C: [Int], <span class="number">_</span> D: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">0</span>, ab = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">A</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">B</span> &#123;</span><br><span class="line">                ab[i+j, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">C</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">D</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> v = ab[-i-j] &#123; num += v &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="トップKの頻繁な要素"><a href="#トップKの頻繁な要素" class="headerlink" title="トップKの頻繁な要素"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Top-K-Frequent-Elements">トップKの頻繁な要素</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">topKFrequent</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(into: [<span class="type">Int</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span> &#125;.sorted(by: &#123;$<span class="number">0</span>.value &gt; $<span class="number">1</span>.value&#125;)[..&lt;k].<span class="built_in">map</span>&#123;$<span class="number">0</span>.key&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="一意の単語の略語"><a href="#一意の単語の略語" class="headerlink" title="一意の単語の略語"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Unique-Word-Abbreviation">一意の単語の略語</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ValidWordAbbr</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> abbrDict = [<span class="type">String</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;]()</span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> dictionary: [<span class="type">String</span>]) &#123;</span><br><span class="line">        dictionary.forEach &#123; abbrDict[abbreviate($<span class="number">0</span>), <span class="keyword">default</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;()].insert($<span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isUnique</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> abbrSet = abbrDict[abbreviate(word)] &#123;</span><br><span class="line">            <span class="keyword">return</span> abbrSet.<span class="built_in">contains</span>(word) &amp;&amp; abbrSet.<span class="built_in">count</span> == <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">abbreviate</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> word.<span class="built_in">count</span> &lt; <span class="number">3</span> ? word : (<span class="type">String</span>(word.first!) + <span class="type">String</span>(word.<span class="built_in">count</span>-<span class="number">2</span>) + <span class="type">String</span>(word.last!))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="削除GetRandomO-1-を挿入"><a href="#削除GetRandomO-1-を挿入" class="headerlink" title="削除GetRandomO(1)を挿入"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Insert-Delete-GetRandom-O(1)">削除GetRandomO(1)を挿入</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 220 ms, 30.27%</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RandomizedSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> vals = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.insert(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> !vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.remove(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getRandom</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> vals.randomElement() ?? <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>ビデオを縮小してiCloudストレージを削減する方法</title>
    <url>/ja/How-to-reduce-iCloud-storage-by-shrink-videos/</url>
    <content><![CDATA[<p>実際、4kビデオから不要なクリップを差し引くと、スペースをより効果的に節約できます </p>
<hr>
<p>「写真」で動画をギャラリーすると、いつどこで撮ったかが表示されます </p>
<p>これは私の思い出を思い出すのに役立つ素晴らしい機能です<br>しかし、元の4kはiCloudであまりにも多くのスペースを占有します </p>
<p>たとえば、HEVC(High Efficiency Video Coding)を使用しても、2：30のビデオは1GBのスペースを占有します<br>私の200GiCloudプランはほぼ満杯です </p>
<p>したがって、スペースを節約するために、ビデオを少し圧縮する予定です。 </p>
<a id="more"></a>

<p>だが、 </p>
<h2 id="FFmpegはビデオを変換します。メタデータがあっても、GPSは失われます。"><a href="#FFmpegはビデオを変換します。メタデータがあっても、GPSは失われます。" class="headerlink" title="FFmpegはビデオを変換します。メタデータがあっても、GPSは失われます。"></a>FFmpegはビデオを変換します。メタデータがあっても、GPSは失われます。</h2><p>幸いなことに、私は方法を見つけました </p>
<h3 id="ツール"><a href="#ツール" class="headerlink" title="ツール"></a>ツール</h3><ul>
<li>FFmpeg </li>
<li>Exiftool </li>
</ul>
<h4 id="元のビデオをフォルダにエクスポートする"><a href="#元のビデオをフォルダにエクスポートする" class="headerlink" title="元のビデオをフォルダにエクスポートする"></a>元のビデオをフォルダにエクスポートする</h4><p>「写真」からフォルダにビデオをドラッグする一般的な方法は、「写真」にビデオを変換させることです </p>
<p>したがって、エクスポートするすべてのビデオを選択する必要があります。 </p>
<p><code>ファイル-&gt;エクスポート-&gt;変更されていないオリジナルをエクスポート...</code> </p>
<h4 id="各ビデオを縮小する"><a href="#各ビデオを縮小する" class="headerlink" title="各ビデオを縮小する"></a>各ビデオを縮小する</h4><p>iPhoneのデフォルトストリームは </p>
<p><code>＃0：0(および)：ビデオ：hevc(メイン)(hvc1 / 0x31637668)、yuv420p(tv、bt709)</code> </p>
<p>したがって、 <code>-pix_fmtyuv420p10le</code>を使用して10ビットに再エンコードしても役に立ちません </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">ffmov</span></span>() &#123;</span><br><span class="line">    mkdir -p shrunk</span><br><span class="line"></span><br><span class="line">    <span class="comment"># h265でffmpeg </span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v libx265 -crf 28 -c:a copy -c:s copy -tag:v hvc1 shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    overwriteExif <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Exif情報を元のビデオから縮小された* .movにコピーします </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## すべての* .movをウォークスルーします </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$f</span></span><br><span class="line">        ffmov <span class="variable">$f</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>次に、これらのコードをコピーして <code>Terminal</code>と<code>cd VideoFolder</code>に貼り付け、次に <code>shrinkVideos</code>に貼り付けることができます。 </p>
<p>収縮には時間がかかります </p>
<p>私のMacBookPro(15インチ、2018)では、わずか0.3回<br>しかし、通常、ビデオはあまり品質を失うことなく5分の1に削減されます </p>
<p>すべてが完了すると、縮小されたビデオは <code>shrunk /</code>フォルダーの下に配置されます </p>
<p>次に、縮小されたビデオをインポートする前に、それらを比較して元のビデオを削除できます </p>
<p>さて、結局私は極端に遅い速度に耐えられないので、私は加速のためにNvidia 1080 GPUを使用して詳細を学びます：[CUDA GPU Accelerated h264 / h265 / HEVC Video Encoding with Staxrip](<a href="https://leihao0.github.io">https://leihao0.github.io</a> / CUDA-GPU-Accelerated-h264-h265-HEVC-Video-Encoding-with-Staxrip /) </p>
<p>次のステップは、変換されたビデオを <code>hvc1</code>としてマークすることです。そうしないと、写真のインポート時にエラーが発生します。 </p>
<p><strong>無効：操作を完了できませんでした。 (PHPhotosErrorDomainエラー-1。)</strong> </p>
<p>つまり、全体のステップは </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">ffhvc1</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> -&gt; <span class="variable">$1</span>.mov&quot;</span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v copy -c:a copy -c:s copy -tag:v hvc1 <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>.mov -&gt; <span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm <span class="string">&quot;<span class="variable">$1</span>&quot;</span>; mv <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line">    <span class="comment"># Exif情報を元のビデオから縮小された* .movにコピーします </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## すべての* .movをウォークスルーします </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">        ffhvc1 <span class="string">&quot;shrunk/<span class="variable">$f</span>&quot;</span></span><br><span class="line">        overwriteExif <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Staxripを使用してすべてのビデオを縮小/に変換します </span></span><br><span class="line"><span class="comment"># 次に、 `shrinkVideos`を実行します </span></span><br></pre></td></tr></table></figure>

<hr>
<p>それがあなたを助けることを願っています </p>
]]></content>
      <tags>
        <tag>FFmpeg</tag>
        <tag>Exiftool</tag>
        <tag>iCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>SwiftUIのヒント</title>
    <url>/ja/SwiftUI-Tips/</url>
    <content><![CDATA[<h2 id="UserDefaultsへのバインド"><a href="#UserDefaultsへのバインド" class="headerlink" title="UserDefaultsへのバインド"></a>UserDefaultsへのバインド</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UD</span>: <span class="title">ObservableObject</span> </span>&#123;</span><br><span class="line">    @<span class="type">Published</span> <span class="keyword">var</span> date: <span class="type">Date</span> = <span class="type">UserDefaults</span>.standard.value(forKey: <span class="string">&quot;date&quot;</span>) <span class="keyword">as</span>? <span class="type">Date</span> ?? <span class="type">Date</span>() &#123;</span><br><span class="line">        <span class="keyword">didSet</span> &#123;</span><br><span class="line">            <span class="type">UserDefaults</span>.standard.<span class="keyword">set</span>(<span class="keyword">self</span>.date, forKey: <span class="string">&quot;date&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="AppDelegate-gt-SceneDelegate"><a href="#AppDelegate-gt-SceneDelegate" class="headerlink" title="AppDelegate-&gt; SceneDelegate"></a>AppDelegate-&gt; SceneDelegate</h2><p>多くの代表者が <code>AppDelegate.swift</code>から<code>SceneDelegate.swift</code>に移動しました </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> app: UIApplication, <span class="keyword">open</span> url: URL, options: [UIApplication.OpenURLOptionsKey : <span class="keyword">Any</span>] = [:])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// to</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">scene</span><span class="params">(<span class="number">_</span> scene: UIScene, openURLContexts URLContexts: Set&lt;UIOpenURLContext&gt;)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="NavigationView、NavigationBarItems、NavigationLink"><a href="#NavigationView、NavigationBarItems、NavigationLink" class="headerlink" title="NavigationView、NavigationBarItems、NavigationLink"></a>NavigationView、NavigationBarItems、NavigationLink</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ContentView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">EnvironmentObject</span> <span class="keyword">var</span> ud: <span class="type">UD</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> url = <span class="string">&quot;Title:status?date=\(String(ud.firstDate.timeIntervalSince1970))&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                qrCodeImage(<span class="keyword">for</span>: url)!</span><br><span class="line"></span><br><span class="line">                <span class="type">Spacer</span>().frame(height: <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">                <span class="type">Text</span>(<span class="string">&quot;\(ud.firstDate)&quot;</span>)</span><br><span class="line">            &#125;.navigationBarTitle(<span class="string">&quot;Title&quot;</span>)</span><br><span class="line">                .navigationBarItems(trailing:</span><br><span class="line">                    <span class="type">HStack</span> &#123;</span><br><span class="line">                        <span class="type">NavigationLink</span>(destination: <span class="type">PickerView</span>(firstDate: $ud.firstDate)) &#123;</span><br><span class="line">                            <span class="type">Image</span>(systemName: <span class="string">&quot;gear&quot;</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="PickerViewバインディング"><a href="#PickerViewバインディング" class="headerlink" title="PickerViewバインディング"></a>PickerViewバインディング</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PickerView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">Binding</span> <span class="keyword">var</span> date: <span class="type">Date</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                <span class="type">DatePicker</span>(selection: $date, <span class="keyword">in</span>: ...<span class="type">Date</span>(), displayedComponents: .date) &#123;</span><br><span class="line">                    <span class="type">Text</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="SwiftUI画像の空白のビューを修正"><a href="#SwiftUI画像の空白のビューを修正" class="headerlink" title="SwiftUI画像の空白のビューを修正"></a>SwiftUI画像の空白のビューを修正</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ciContext = <span class="type">CIContext</span>()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">qrCodeImage</span><span class="params">(<span class="keyword">for</span> string: String)</span></span> -&gt; <span class="type">Image?</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> data = string.data(using: <span class="type">String</span>.<span class="type">Encoding</span>.utf8)</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> qrFilter = <span class="type">CIFilter</span>(name: <span class="string">&quot;CIQRCodeGenerator&quot;</span>) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">    qrFilter.setValue(data, forKey: <span class="string">&quot;inputMessage&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">10</span>, y: <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> ciImage = qrFilter.outputImage?.transformed(by: transform) <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cgImage = ciContext.createCGImage(ciImage, from: ciImage.extent)</span><br><span class="line">    <span class="comment">// convert to UIImage</span></span><br><span class="line">    <span class="keyword">let</span> uiImage = <span class="type">UIImage</span>(cgImage: cgImage!)</span><br><span class="line">    <span class="keyword">let</span> image = <span class="type">Image</span>(uiImage: uiImage)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> image</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>SwiftUI</tag>
      </tags>
  </entry>
  <entry>
    <title>墓地の本</title>
    <url>/ja/The-Graveyard-Book/</url>
    <content><![CDATA[<h1 id="アミューズメントパーク🎠予約"><a href="#アミューズメントパーク🎠予約" class="headerlink" title="アミューズメントパーク🎠予約"></a>アミューズメントパーク🎠予約</h1><div style="width: 300px">
<img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/The%20Graveyard%20Book.jpg" />
</div>

<p>子供たちは生と死の概念を持っておらず、墓地は彼らにとって娯楽公園のようなものです </p>
<a id="more"></a>

<hr>
<p>別の本を送ってくれてありがとう🙏🐼読者 </p>
<p>恥ずかしいことに、海外に行った後、測定値の数は急落しました<br>以前は年間数百冊の本から突然一桁になりました </p>
<p>読書は実用的であってはならず、興味によって動かされるべきであるという古いことわざについて考えてください<br>今、それは本当にクソ顔です </p>
<p>しかし、客観的な理由もあります。 </p>
<p>一つは、今読みたい本のほとんどがオリジナル版になっていることです<br>元のバージョンがあるので、翻訳されたバージョンはあまり見たくありません </p>
<p>第二に、私は電話をしていて、シンガポール国立大学の友人に聞いた。<br>その後、彼女は繰り返し「あなたのプラスチック英語」を軽蔑した </p>
<p>しかし、私は頑固で、遅いのは遅いですが、元のバージョンに固執します<br>中国の本と同じくらい早く起きることができる日があるはずです </p>
<p>三つ目は、ポー郡は島であり、海外には良い山や川などないので寂しいです<br>そして、この流行の初めに、私はかつてこの場所が混乱した先進国だと思っていました<br>また、一年中夏ですが、暑い以外はとても快適です<br>青い空と白い雲、大雨と雷、時間が凍ったように感じます、それは良いです </p>
<p>実用主義がなければ、当然、読む動機はありません </p>
<p>サーキットブレーカーは今なので、時間と気分があります </p>
<hr>
<p>私は最初にこの本を手に入れました<br>最初はサイエンスフィクションだと思っていました<br>見えないかもしれないと聞いて、ファンタジーだと思った<br>姉妹紙に出会った時は愛だと思った<br>学校に行って、キャンパスだと思った<br>お父さんがゲームに来て、それが親子だと思った<br>家族全員が殺され、サスペンドだと思った<br>結局、私は成長について話していました </p>
<p>最後の著者が書いたように： </p>
<blockquote>
<p>ニューオーリンズのぼろぼろのホテルで第6章「バーティーズスクールデイズ」を終えました。 庭のガゼボの最後のページを書き終え、涙をこらえて書いた。 その時だけ、私が父親の時にこの本を書かなかった理由を理解しました。 なぜなら、創造する前に、私は子供たちの成長過程に同行し、子供たちを育て、愛し、そして最後に手放すことを学ばなければならないからです。 </p>
</blockquote>
<hr>
<p>さらに、読書プロセスに参加するのは難しいです<br>本全体が私にハリーポッターのコピーの感覚を与え続けています </p>
<p>しかし、今回の読書には大きな違いがあります<br>昔、そんな小説を読んでいると、主人公の視点で本に入ることが多かったです。<br>年齢とともに<br>今回はSilasの視点からです </p>
<p>この本が中国で一般的なファンタジールーチンである場合<br>ボッドは間違いなく姉妹スカーレットを迎え、スレアを飼いならし、マスターになり、ジャックを引き裂き、ブラザーフッドのボスとして座ります </p>
<p>しかし、アメリカの神々について書いたニールでは、これは何も起こりませんでした。<br>ボッドがモンスターを演じた後👾、姉妹紙は怖がっていました。ボッドはごく普通の<strong>世界はとても大きいので、見たいです</strong> </p>
<p>父親として、あなたはあなたの体が田舎のものになるのを見たいですか、それとも本の中のものになるのを見たいですか📖？ </p>
<hr>
<p>反抗期に行われた愚かなこともあり、両親はそれを支払う必要があります<br>年をとった今、両親のさまざまな禁止事項の難しさを理解しています。 </p>
<p>しかし、私はそれについて考えずにはいられません<br>私は今何を知っているのか分かりませんでした </p>
<p>私は、今の自分とその時の自分が<br>その時は絶対に従わない<br>目を覚ますには、社会の鉄の拳で顔を殴られなければなりません<br>断固として何かをする </p>
<hr>
<p>総務を扱った後、いつの日かおとぎ話の世界から出て人生に入る </p>
<blockquote>
<p>「さようなら、それでは、サイラス。」 ボッドは小さな男の子の時と同じように手を差し出し、シラスはそれを冷たい手で古い象牙の色で手に取り、それを激しく振った。<br>「さようなら、誰もオーエンス。」<br>ボッドは小さなスーツケースを手に取った。 彼は地下室から抜け出すためにドアを開け、振り返らずに小道への緩やかな斜面を歩いて戻った。」 </p>
</blockquote>
<p>私が出てきたとき私は惨めでした、誰も私を与えませんでした、さようならもありません<br>北京の家賃が払い戻され、片道チケットを購入しました<br>すべての持ち物は3つのスーツケースに詰められています<br>午前4時に空港までタクシーに乗る<br>委託終了後、搭乗、退去 </p>
<blockquote>
<p>振り返らずに </p>
</blockquote>
<p>ボッドの聴覚幻覚も聞いてほしいと思います。 </p>
<blockquote>
<p>彼は一歩前進しました…「息子よ、あなたをとても誇りに思います」という声がありました。 </p>
</blockquote>
]]></content>
      <tags>
        <tag>Reading</tag>
      </tags>
  </entry>
  <entry>
    <title>iOSトークンに基づくAPN</title>
    <url>/ja/iOS-Token-Based-APNs/</url>
    <content><![CDATA[<p>Appleは、APNを実行するための新しいメソッド(認証トークン)を提供します </p>
<p>以前の方法(プロバイダー証明書)と比較して、証明書 <code>* .p12</code>は毎年期限切れになります </p>
<p>トークンベースの <code>* .p8</code> <strong>有効期限はありません</strong> </p>
<a id="more"></a>

<ul>
<li><a href="https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/establishing_a_token-based_connection_to_apns">APNとのトークンベースの接続を確立する</a> </li>
<li><a href="https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html">APNとの通信</a> </li>
</ul>
<h2 id="お客様向け"><a href="#お客様向け" class="headerlink" title="お客様向け"></a>お客様向け</h2><p>クライアントの唯一の違いは </p>
<ol>
<li><a href="https://developer.apple.com/で認証トークン署名キーを作成します">https://developer.apple.com/で認証トークン署名キーを作成します</a> </li>
<li><code>* .p8</code>をダウンロードして、バックエンドエンジニアに送信します </li>
</ol>
<h2 id="バックエンドの場合"><a href="#バックエンドの場合" class="headerlink" title="バックエンドの場合"></a>バックエンドの場合</h2><p>多くのフレームワークは <code>* .p8</code>をサポートしています。 </p>
<p>例えば： </p>
<p><a href="https://firebase.google.com/docs/cloud-messaging/ios/certs">Firebase</a> </p>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>APNs</tag>
      </tags>
  </entry>
  <entry>
    <title>ラズベリー4.</title>
    <url>/ja/Raspberry-Pi-4/</url>
    <content><![CDATA[<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Pi-Hole.png" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Raspberrypi.png" alt=""></div></div></div>

<a id="more"></a>

<h2 id="モニターなしで起動します"><a href="#モニターなしで起動します" class="headerlink" title="モニターなしで起動します"></a>モニターなしで起動します</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span></span><br><span class="line"><span class="string">update_config=1</span></span><br><span class="line"><span class="string">country=CN</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">network=&#123;</span></span><br><span class="line"><span class="string"> ssid=&quot;xxx&quot;</span></span><br><span class="line"><span class="string"> psk=&quot;xxx&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; wpa_supplicant.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># WPA_Supplicant、SSHまたはSSH.TXTをSDカードのルートにコピーする </span></span><br><span class="line"></span><br><span class="line">sudo raspi-config</span><br><span class="line"></span><br><span class="line"><span class="comment"># crontab -e. </span></span><br><span class="line"><span class="comment"># @reboot sudo ifdown Wlan1. </span></span><br><span class="line">sudo iwconfig wlan1 txpower off</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># epr </span></span><br><span class="line">sudo apt -y update</span><br><span class="line">sudo apt -y upgrade</span><br><span class="line">sudo apt -y install rpi-eeprom</span><br><span class="line">sudo rpi-eeprom-update</span><br><span class="line">sudo rpi-eeprom-update -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># OH-MY-ZSH </span></span><br><span class="line">sudo apt-get install zsh</span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line">sudo apt -y install vim</span><br><span class="line"></span><br><span class="line">sudo chsh -s /bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># PIホール </span></span><br><span class="line">curl -sSL https://install.pi-hole.net | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pivpn. </span></span><br><span class="line">curl -L https://install.pivpn.io | bash</span><br><span class="line">pivpn add</span><br><span class="line">pivpn remove</span><br><span class="line">pivpn list</span><br><span class="line">pivpn -qr</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="パスワードのないSSHアクセス"><a href="#パスワードのないSSHアクセス" class="headerlink" title="パスワードのないSSHアクセス"></a>パスワードのないSSHアクセス</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="comment"># ラズベリーパイ </span></span><br><span class="line">cat raspberrypi.pub</span><br><span class="line">cat ~/.ssh/raspberrypi.pub | ssh pi@192.168.2.2 <span class="string">&#x27;mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="静的IPアドレス"><a href="#静的IPアドレス" class="headerlink" title="静的IPアドレス"></a>静的IPアドレス</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dhcpcd.conf. </span></span><br><span class="line"></span><br><span class="line">interface eth0</span><br><span class="line">static ip_address=192.168.0.4/24</span><br><span class="line">static routers=192.168.0.254</span><br><span class="line">static domain_name_servers=192.168.0.254 8.8.8.8</span><br></pre></td></tr></table></figure>

<h2 id="vnc"><a href="#vnc" class="headerlink" title="vnc."></a>vnc.</h2><p>https：//马果.Raspberry Skin .org /記事/ VNC-Raspberry-Skin </p>
<h2 id="Rclone＆Googleドライブ"><a href="#Rclone＆Googleドライブ" class="headerlink" title="Rclone＆Googleドライブ"></a>Rclone＆Googleドライブ</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt -y install fuse</span><br><span class="line"></span><br><span class="line">curl -L https://raw.github.com/pageauc/rclone4pi/master/rclone-install.sh | bash</span><br><span class="line">rclone config</span><br><span class="line"></span><br><span class="line">mkdir -p /tmp/gdrive</span><br><span class="line">fusermount -u /tmp/gdrive</span><br><span class="line"></span><br><span class="line">sudo vim /etc/fuse.conf</span><br><span class="line"><span class="comment"># user_allow_other </span></span><br></pre></td></tr></table></figure>

<h2 id="この心"><a href="#この心" class="headerlink" title="この心"></a>この心</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo blkid</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo vim / etc / fstab </span></span><br><span class="line"></span><br><span class="line">UUID=633a8bc8 /media/3T ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=d271d018 /media/TM ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=53f3ce6b /media/8G ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo chown -R pi:pi /media/3T /media/TM</span><br></pre></td></tr></table></figure>

<h2 id="RamDisk＆Logs"><a href="#RamDisk＆Logs" class="headerlink" title="RamDisk＆Logs."></a>RamDisk＆Logs.</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sudoサービスrsyslog stop. </span></span><br><span class="line"><span class="comment"># sudo systemctl rsyslogを無効にします </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo vim / etc / fstab </span></span><br><span class="line"></span><br><span class="line">tmpfs /var/lib/plexmediaserver tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /home/pi./cache tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /tmp tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /var/<span class="built_in">log</span> tmpfs defaults,noatime 0 0</span><br></pre></td></tr></table></figure>

<h2 id="ext4を修正しました"><a href="#ext4を修正しました" class="headerlink" title="ext4を修正しました"></a>ext4を修正しました</h2><p><code>sudo fsck.ext4 -vy / dev / sda2</code> </p>
<h2 id="外付けハードドライブのスワップスペース"><a href="#外付けハードドライブのスワップスペース" class="headerlink" title="外付けハードドライブのスワップスペース"></a>外付けハードドライブのスワップスペース</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/dphys-swapfile</span><br><span class="line"></span><br><span class="line">CONF_SWAPFILE=/media/3T/swapfile</span><br><span class="line">CONF_SWAPSIZE=8192</span><br></pre></td></tr></table></figure>

<h2 id="AFP＆タイムマシン"><a href="#AFP＆タイムマシン" class="headerlink" title="AFP＆タイムマシン"></a>AFP＆タイムマシン</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt -y install netatalk gparted</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo mkfs.ext4 / dev / sda2 </span></span><br><span class="line"><span class="comment"># SUDA  -  4 /ゲスト/頭痛 </span></span><br><span class="line"><span class="comment"># sudo mkdir / media / tm </span></span><br><span class="line"><span class="comment"># スーダモンテ/ゲスト/ヘッドカッシュ/メディア/完了 </span></span><br><span class="line"><span class="comment"># Suddo Poon -R PI：PI / Media / ZT </span></span><br><span class="line"><span class="comment"># SUDO CHENG -RPI：皮膚/メディア/ TM </span></span><br><span class="line"></span><br><span class="line">sudo vim /etc/netatalk/afp.conf</span><br><span class="line"><span class="comment"># 3T </span></span><br><span class="line"><span class="comment"># ; 聖書= /メディア/ DT / </span></span><br><span class="line"><span class="comment"># ; [TMP] </span></span><br><span class="line"><span class="comment"># ; パス= / tmp / </span></span><br><span class="line"><span class="comment"># [TM] </span></span><br><span class="line"><span class="comment"># パス= /メディア/ TUM / </span></span><br><span class="line"><span class="comment"># タイムマシン=はい </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo systemctl restart netatalk</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="サンバ"><a href="#サンバ" class="headerlink" title="サンバ"></a>サンバ</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install samba samba-common-bin</span><br><span class="line"></span><br><span class="line">sudo vim /etc/samba/smb.conf</span><br><span class="line"><span class="comment"># [Pimylifeup Share] </span></span><br><span class="line"><span class="comment"># 聖書= /メディア/ DT / </span></span><br><span class="line"><span class="comment"># 書き込み可能=はい </span></span><br><span class="line"><span class="comment"># MASK = 0777を作成します </span></span><br><span class="line"><span class="comment"># ディレクトリマスク= 0777 </span></span><br><span class="line"><span class="comment"># 公共=ノー </span></span><br><span class="line"><span class="comment"># [TMP] </span></span><br><span class="line"><span class="comment"># パス= / tmp / </span></span><br><span class="line"><span class="comment"># 書き込み可能=はい </span></span><br><span class="line"><span class="comment"># MASK = 0777を作成します </span></span><br><span class="line"><span class="comment"># ディレクトリマスク= 0777 </span></span><br><span class="line"><span class="comment"># 公共=ノー </span></span><br><span class="line">sudo smbpasswd -a pi</span><br><span class="line">sudo systemctl restart smbd</span><br></pre></td></tr></table></figure>

<h2 id="プレックスサーバー"><a href="#プレックスサーバー" class="headerlink" title="プレックスサーバー"></a>プレックスサーバー</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkdir -p <span class="string">&quot;/tmp/plexmediaserver&quot;</span></span><br><span class="line">sudo mount -t tmpfs -o size=1000M tmpfs /tmp/plexmediaserver</span><br><span class="line">sudo chown -R pi:pi /var/lib/plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo apt -y install apt-transport-https</span><br><span class="line">curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list</span><br><span class="line">sudo apt -y install plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo vim /etc/default/plexmediaserver</span><br><span class="line"><span class="comment"># 輸出PLEX_MEDIA_SERVER_USER = PI </span></span><br><span class="line"></span><br><span class="line">hostname -I</span><br><span class="line">sudo vim /boot/cmdline.txt</span><br><span class="line"><span class="comment"># ip = ipaddress. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo apt -y pmountをインストールします </span></span><br><span class="line"><span class="comment"># sudo apt-getインストールNTFS-3G exfat-fuse exfat-utils pmount </span></span><br><span class="line"><span class="comment"># sudo apt-get hfsplus hfsutils hfsprogs gdisk. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># LSBLK </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># /週/システム/システム/写真X Media Server.Service </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Piへのユーザープレックス </span></span><br><span class="line">sudo mkdir -p /etc/systemd/system/plexmediaserver.service.d</span><br><span class="line">sudo vim /etc/systemd/system/plexmediaserver.service.d/override.conf</span><br><span class="line"><span class="comment"># [サービス] </span></span><br><span class="line"><span class="comment"># ユーザー= Pi </span></span><br><span class="line"><span class="comment"># group =スキン </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [サービス] </span></span><br><span class="line"><span class="comment"># EXECSTARTPRE = / BIN / SLEEP 120; / bin / sh -c &#x27;/ usr / bin / test -d &quot;$ &#123;plex_media_server_application_support_dir&#125;&quot; || / bin / mkdir -p &quot;$ &#123;plex_media_server_application_support_dir&#125;&quot; &quot; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># データフォルダ </span></span><br><span class="line"></span><br><span class="line">sudo systemctl stop plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo service plexmediaserver stop</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> plexmediaserver.service</span><br><span class="line">sudo systemctl restart plexmediaserver.service</span><br></pre></td></tr></table></figure>

<h2 id="crontab-e"><a href="#crontab-e" class="headerlink" title="crontab -e."></a>crontab -e.</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt -y install php php-curl</span><br></pre></td></tr></table></figure>

<p><code>crontab -e</code> </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># rclone. </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;mkdir -p /tmp/gdrive</span></span><br><span class="line"><span class="string">fusermount -u /tmp/gdrive</span></span><br><span class="line"><span class="string">/usr/bin/rclone mount Plex:Plex /tmp/gdrive --umask 0000 --default-permissions --allow-non-empty --allow-other --buffer-size 64M --dir-cache-time 48h --vfs-read-chunk-size 128M --vfs-read-chunk-size-limit 1500M &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; rclone.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># バックアップ </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tar --exclude = &quot;$ plexpath / logs&quot; --exclude = &quot;$ plexpath / cache&quot; --exclude = &quot;$ plexpath / crashレポート&quot; -czf /tmp/gdrive/backup/plex.tar.gz / var / lib /プレックスメディアサーバー </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">mkdir -p /tmp/gdrive/backup/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">tar cf - --exclude=&quot;$PlexPath/Logs&quot; --exclude=&quot;$PlexPath/Cache&quot; --exclude=&quot;$PlexPath/Crash Reports&quot; /var/lib/plexmediaserver | lz4 -f - /tmp/gdrive/backup/plex.tar.lz4</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; backup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 戻す </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">lz4 -d /tmp/gdrive/backup/plex.tar.lz4 | tar -xC /</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">mkdir -p &quot;$PlexPath/Logs&quot; &quot;$PlexPath/Cache&quot; &quot;$PlexPath/Crash Reports&quot;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; restore.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chmod a+x backup.sh restore.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">sudo apt update &amp;&amp; sudo apt upgrade &amp;&amp; sudo apt autoremove &amp;&amp; sudo apt clean</span></span><br><span class="line"><span class="string">pihole -up &amp;&amp; pihole -g</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; update.sh</span><br><span class="line"></span><br><span class="line">chmod a+x update.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">@reboot vncserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># @ rubwite pmots2 Zt. </span></span><br><span class="line"><span class="comment"># 頭痛で@ラブワ </span></span><br><span class="line"></span><br><span class="line">@reboot /home/pi/rclone.sh</span><br><span class="line">@reboot sleep 30 &amp;&amp; /home/pi/restore.sh</span><br><span class="line"></span><br><span class="line">*/30 * * * * /home/pi/backup.sh</span><br><span class="line">0 3 * * * /home/pi/update.sh</span><br><span class="line"></span><br><span class="line">0 22 * * * <span class="built_in">cd</span> ~/Bot;python3 autoPill.py</span><br><span class="line">0 9 * * * php ~/Bot/bilibiliRun.ph</span><br></pre></td></tr></table></figure>

<p><code>sudo crontab -e</code> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 0 4 * * * &#x2F; SBIN &#x2F; SHUTDOWN -R </span><br><span class="line">@reboot sleep 90 &amp;&amp; sudo service plexmediaserver start</span><br></pre></td></tr></table></figure>

<h2 id="jellyfin"><a href="#jellyfin" class="headerlink" title="~ jellyfin ~"></a><del>~ jellyfin ~</del></h2><p>https：// jelly fat.org/ </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt install apt-transport-https</span><br><span class="line">wget -O - https://repo.jellyfin.org/jellyfin_team.gpg.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$( dpkg --print-architecture )</span>] https://repo.jellyfin.org/<span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^ID=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> <span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^VERSION_CODENAME=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> main&quot;</span> | sudo tee /etc/apt/sources.list.d/jellyfin.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># サービスJellyfinのステータス </span></span><br><span class="line"><span class="comment"># systemctl jellyfinを再起動します </span></span><br><span class="line"><span class="comment"># sudo /etc/init.d/jellyfin stop. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># .local / share / jellyfin </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;#!/bin/zsh</span></span><br><span class="line"><span class="string">JELLYFINTMP=&quot;/tmp/jellyfin&quot;</span></span><br><span class="line"><span class="string">USRBIN=&quot;/usr/bin&quot;</span></span><br><span class="line"><span class="string">mkdir -p $JELLYFINTMP/log $JELLYFINTMP/cache $JELLYFINTMP/transcodes \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/data \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/metadata \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/config</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$USRBIN/jellyfin \</span></span><br><span class="line"><span class="string"> -C $JELLYFINTMP/cache \</span></span><br><span class="line"><span class="string"> -l $JELLYFINTMP/log \</span></span><br><span class="line"><span class="string"> -d $JELLYFINTMP/data \</span></span><br><span class="line"><span class="string"> -c $JELLYFINTMP/config \</span></span><br><span class="line"><span class="string"> --ffmpeg $USRBIN/ffmpeg &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; jellyfin.sh</span><br><span class="line"></span><br><span class="line">chmod a+x jellyfin.sh</span><br><span class="line">nohup ./jellyfin.sh &lt;/dev/null &amp;</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># https：// jelly fin.org/docs/general/administration/hardware-acceleration.html. </span></span><br><span class="line">sudo usermod -aG video jellyfin</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Raspberry</tag>
      </tags>
  </entry>
  <entry>
    <title>子供のためのPython対Java</title>
    <url>/ja/Python-vs-Java-for-Kids/</url>
    <content><![CDATA[<p><em>The</em> <a href="https://junilearning.com/blog/guide/python-vs-java/">_Article _</a><em>元々は</em> <a href="https://junilearning.com/">_junilearning.com _</a>に登場しました </p>
<h1 id="PythonとJava：使用法、パフォーマンス、学習"><a href="#PythonとJava：使用法、パフォーマンス、学習" class="headerlink" title="PythonとJava：使用法、パフォーマンス、学習"></a>PythonとJava：使用法、パフォーマンス、学習</h1><p>コンピュータサイエンスの分野には多くのプログラミング言語があり、他の言語より優れているものはありません。 言い換えれば、<strong>各言語は特定の問題を解決するのに最適です</strong>。実際、特定のプログラミングプロジェクトでは、通常、選択できる最適な言語はありません。 したがって、ソフトウェアを開発したり、コードを介して興味深い問題を解決したりする学生にとって、コンピュータサイエンスの強力な基盤を持つことが非常に重要です<strong>あらゆるプログラミング言語に適用できます</strong>。 </p>
<a id="more"></a>

<p>プログラミング言語は、メモリ使用量の処理やオブジェクトの使用強度など、動作方法で特定の特性を共有する傾向があります。 学生がより多くの言語に触れるようになるにつれて、彼らはこれらのパターンを見始めるでしょう。 この記事では、世界で最も広く使用されている2つのプログラミング言語であるPythonとJavaに焦点を当てます。 各プログラミング言語の成長率を正確に測定することは困難ですが、<strong>これらは今日の業界で使用されている2つの最も人気のあるプログラミング言語です</strong>。 </p>
<p>PythonとJavaの主な違いは、Pythonは<strong>動的に型付け</strong>されるのに対し、Javaは<strong>静的に型付け</strong>されることです。 大まかに言えば、これは、Javaがコード内の変数を定義および使用する方法についてより厳格であることを意味します。 *<em>その結果、Javaの構文は冗長になる傾向があります。これが、初心者がJavaの前にPythonを学ぶことをお勧めする理由の1つです。 *</em>たとえば、これは <code>numbers</code>が0から9までの数字を保持する名前変数をPythonで作成する方法です。 </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numbers = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">numbers.append(i)</span><br></pre></td></tr></table></figure>

<p>Javaで同じことを行う方法は次のとおりです。 </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ArrayList numbers = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    numbers.add(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>もう1つの大きな違いは、Javaは<strong>コンパイルされた言語</strong>であるため、通常はPythonよりも高速にプログラムを実行することです。 これは、コンパイラが実際にプログラムを実行する前に、Javaコードをマシンレベルのコードに変換することを意味します。 対照的に、Pythonは<strong>解釈された</strong>言語です。つまり、コンパイル手順はありません。 </p>
<h2 id="使用法と実用性"><a href="#使用法と実用性" class="headerlink" title="使用法と実用性"></a>使用法と実用性</h2><p>歴史的に、Javaは、その長い歴史もあって、より人気のある言語になりました。 ただし、Pythonは急速に人気を集めています。 <a href="https://octoverse.github.com/">Githubの10月のステータスレポート</a>によると、最近、最も広く使用されているプログラミング言語としてJavaを上回っています。 2018 Developer Surveyによると、** Pythonは現在最も急速に成長しているコンピュータープログラミング言語**です。 </p>
<p>PythonとJavaの両方に大規模な開発者コミュニティがあり、<a href="https://stackoverflow.com/">Stack Overflow</a>Webサイトで質問に答えることができます。 <a href="https://insights.stackoverflow.com/trends?tags=python%2Cjava">Stack Overflow Trends</a>から、2017年にStackOverflowでPythonが尋ねた質問の割合がJava **を上回っていることがわかります。 これを書いている時点で、Stack Overflowに関する質問の約13％がPythonでマークされており、約8％がJavaでマークされています。 </p>
<h2 id="ウェブ開発"><a href="#ウェブ開発" class="headerlink" title="ウェブ開発"></a>ウェブ開発</h2><p>** PythonとJavaの両方をバックエンドWeb開発に使用できます**。 通常、開発者はPythonの場合は<a href="https://stackify.com/python-frameworks/">Django and Flask</a>フレームワークを使用し、Javaの場合は<a href="https://spring.io/">Spring</a>を使用します。 Pythonはコードの読みやすさで知られています。つまり、Pythonコードはクリーンで、読みやすく、簡潔です。 Pythonには、多数の包括的なモジュール、パッケージ、およびライブラリもあります。これらのモジュール、パッケージ、およびライブラリは、標準のライブラリに加えて、Python愛好家コミュニティによって開発されています。 Javaにも同様のエコシステムがありますが、程度は低いです。 </p>
<h2 id="モバイルアプリケーション開発"><a href="#モバイルアプリケーション開発" class="headerlink" title="モバイルアプリケーション開発"></a>モバイルアプリケーション開発</h2><p><strong>モバイルアプリケーションの開発に関しては、</strong> Java <strong>がAndroidアプリケーションとゲームの構築に使用される主要な言語であるため、Javaが支配的な位置を占めています</strong>。 これらのオーダーメイドのライブラリの助けを借りて、開発者は、オペレーティングシステム用に特別に構築された強力なフレームワークと開発ツールを使用してAndroidアプリケーションを作成することを選択できます。 現在、<a href="https://kivy.org/">Kivy</a>や<a href="https://beeware.org/">BeeWare之</a>のように、一度コードを書いてWindows、OS X、iOS、 Androidにアプリケーションをデプロイしますが、モバイル開発にはPythonはあまり使用されません。 </p>
<h2 id="機械学習とビッグデータ"><a href="#機械学習とビッグデータ" class="headerlink" title="機械学習とビッグデータ"></a>機械学習とビッグデータ</h2><p>対照的に、機械学習と<a href="https://junilearning.com/blog/coding-and-data-science">データサイエンス</a>では、Pythonが最も人気のある言語です。 Pythonは、ビッグデータ、科学コンピューティング、および人工知能(AI)プロジェクトで一般的に使用されています。 <strong>感情分析を含むプロジェクトに取り組む場合、ほとんどのデータサイエンティストと機械学習プログラマーはJavaの代わりにPythonを使用することを選択します</strong>。 同時に、多くの機械学習プログラマーが、ネットワークセキュリティ、ネットワーク攻撃防止、および不正検出に関連するプロジェクトで作業するときにJavaを使用することを選択する可能性があることは注目に値します。 </p>
<h2 id="どこから始めれば"><a href="#どこから始めれば" class="headerlink" title="どこから始めれば"></a>どこから始めれば</h2><p>プログラミングの基礎を学ぶとき、<strong>多くの研究が結論に達しました</strong>。Pythonのシンプルで直感的な構文のため、** Javaよりも簡単です<strong>** \ * \ *</strong> [Pythonを学ぶ](https 前の例に示したように、：//junilearning.com/coding)*<em>。 Pythonと比較して、Javaプログラムは通常、より多くの定型コードを持っています-それらは多くの場所でほとんどまたはまったく変更なしでコードの一部を含まなければなりません。 そうは言っても、Javaにはいくつかの重要な利点があります。特に、コンパイルされた言語としての速度です。 *</em> PythonとJavaを学習すると、学生は2つの言語に触れることができます。これらの言語は、類似したコンピューターサイエンスの概念に基づいていますが、教育が異なります。 \ * \ * </p>
<p>全体として、PythonとJavaはどちらも実際には強力なプログラミング言語であることは明らかです。したがって、意欲的なソフトウェア開発者にとっては、両方の言語を上手に学ぶことが最善です。 プログラマーは、単に好きな言語を学ぶのではなく、各ソフトウェア開発プロジェクトの特定のニーズに基づいてPythonとJavaを比較する必要があります。 つまり、<strong>ある言語が別の言語より優れているわけではないため、プログラマーは両方の言語を両方のエンコーディングで使用するように努める必要があります</strong>。 </p>
<table>
<thead>
<tr>
<th></th>
<th>Python</th>
<th>Java</th>
</tr>
</thead>
<tbody><tr>
<td>ランタイムパフォーマンス</td>
<td></td>
<td>勝者</td>
</tr>
<tr>
<td>学習のしやすさ</td>
<td>勝者</td>
<td></td>
</tr>
<tr>
<td>実用的な敏捷性</td>
<td>ネクタイ</td>
<td>ネクタイ</td>
</tr>
<tr>
<td>モバイルアプリ開発</td>
<td></td>
<td>勝者</td>
</tr>
<tr>
<td>ビッグデータ</td>
<td>勝者</td>
<td></td>
</tr>
</tbody></table>
<hr>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>MacBookのほこりやファンをきれいにする方法</title>
    <url>/ja/How-to-Clean-MacBook-Dust-Fan/</url>
    <content><![CDATA[<h2 id="kernel-taskがMacCPUの大部分を使用している場合"><a href="#kernel-taskがMacCPUの大部分を使用している場合" class="headerlink" title="kernel_taskがMacCPUの大部分を使用している場合"></a>kernel_taskがMacCPUの大部分を使用している場合</h2><p><code>kernel_task</code>は毎ターン100％スタックすることに気づきましたが、これは<code>System</code>プロセスであり、方法はありません。 </p>
<p>根発生的文档<a href="https://support.apple.com/en-us/HT207359">kernel_taskがMacCPUの大部分を使用している場合</a> </p>
<blockquote>
<p>言い換えると、kernel_taskは、Macが熱く感じられなくても、** CPUが熱くなりすぎる**原因となる条件に応答します。 それ自体はそれらの状態を引き起こしません。 CPUの温度が下がると、kernel_taskは自動的にそのアクティビティを減らします。 </p>
</blockquote>
<p>これは、CPUが熱すぎるためです🔥熱くないと思っていても🥶… </p>
<p>また、 <code>kernel_task</code>は原因ではありません。CPUが高温でない場合、その占有率は自動的に低下します… </p>
<a id="more"></a>

<p>また、左側にあるべきではないこともわかりました👈充電🔋、信じてください </p>
<h3 id="左側でMacBookProを充電しない理由は次のとおりです-https-www-digitaltrends-com-computing-why-you-shouldnt-charge-macbook-pro-left-side-text-％20chargeing％20the％20MacBook％20Proの間、％20the％20right％2Dhand％20portsを使用します。"><a href="#左側でMacBookProを充電しない理由は次のとおりです-https-www-digitaltrends-com-computing-why-you-shouldnt-charge-macbook-pro-left-side-text-％20chargeing％20the％20MacBook％20Proの間、％20the％20right％2Dhand％20portsを使用します。" class="headerlink" title="[左側でMacBookProを充電しない理由は次のとおりです](https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text =％20chargeing％20the％20MacBook％20Proの間、％20the％20right％2Dhand％20portsを使用します。)"></a>[左側でMacBookProを充電しない理由は次のとおりです](<a href="https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text">https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text</a> =％20chargeing％20the％20MacBook％20Proの間、％20the％20right％2Dhand％20portsを使用します。)</h3><blockquote>
<p>MacBook Proを充電し、周辺機器を左側のポートに接続していると、デバイスのポートが熱くなる可能性があります。 何らかの理由で、これにより、kernel_taskが少し混乱し、システムリソースのボート全体を使い果たす可能性があります。 </p>
</blockquote>
<p>しかし、数日後に右に切り替えた後👉充電🔋、しばらくすると100％になります </p>
<p>絶望… </p>
<p>突然、片付けが必要だったのではないかと思いました </p>
<h2 id="MacBookのほこりとファンを掃除する方法"><a href="#MacBookのほこりとファンを掃除する方法" class="headerlink" title="MacBookのほこりとファンを掃除する方法"></a>MacBookのほこりとファンを掃除する方法</h2><p>自分で分解できることをGoogleが知るのに時間がかかりました<br>私のは16歳の本で、保証されています<br>不然根購入<a href="https://www.apple.com/legal/warranty/products/embedded-mac-warranty-rest-of-apac-english.html">Mac保証</a><br>あなたがそれを自分で解体するならば、あなたはそれを失うべきです </p>
<blockquote>
<p>この保証は適用されません： </p>
<blockquote>
</blockquote>
<p>-(c)アップル製品の仕様を満たさないサードパーティのコンポーネントまたは製品の使用によって引き起こされた損傷 </p>
</blockquote>
<h3 id="ツール🔧"><a href="#ツール🔧" class="headerlink" title="ツール🔧"></a>ツール🔧</h3><ul>
<li>ペンタスクリュー🔩ナイフ </li>
<li>スートボール、小さなブラシ </li>
<li>放棄されたクレジットカード💳 </li>
</ul>
<h3 id="ステップ"><a href="#ステップ" class="headerlink" title="ステップ"></a>ステップ</h3><ol>
<li>ネジを緩めます </li>
<li>側面に小さなスリットを入れます </li>
<li>未使用のクレジットカードを挿入します💳そして青い矢印の方向にスライドさせます <ol>
<li>カチッという音がします </li>
<li>図2では、中央の水平線に4つのバックルがあることがわかります。 </li>
<li>何かを壊す代わりに(私はそう願っています😓) </li>
</ol>
</li>
<li>右側で対称的に使用します💳スライドします </li>
<li>次に、赤い矢印を押して水平に引きます <ol>
<li>図2カードスロットはファンの上に見えます </li>
<li>水平に力を入れ、左右に少し対称に引っ張る↔️ </li>
</ol>
</li>
<li>裏表紙を開けます </li>
</ol>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-3.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-0.jpg" alt=""></div></div></div>

<p>本当に汚い </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-1.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-2.jpg" alt=""></div></div></div>

<p>ほこりを片付けた後、 <code>kernel_task</code>はあまり表示されず、💻も復活します<br>16年間のノートブック💻は5年間使用できるとすぐに感じます👨‍💻 </p>
]]></content>
      <tags>
        <tag>Macbook</tag>
      </tags>
  </entry>
  <entry>
    <title>Pythonの目的は何ですか</title>
    <url>/ja/What-is-Python-Used-for/</url>
    <content><![CDATA[<h1 id="実世界でPythonを使用する方法"><a href="#実世界でPythonを使用する方法" class="headerlink" title="実世界でPythonを使用する方法"></a>実世界でPythonを使用する方法</h1><p>** Python **は、世界で最も人気のあるコーディング言語の1つです。 </p>
<p>米国のトップ大学のほとんどは、入門コーディングコースでPythonを使用しています。Pythonを使用して簡単なゲームを作成したり、Webページから情報を解析したり、言語処理を実行したりする方法を学生に教えてください。 </p>
<p>それにもかかわらず、多くの親や学生は、Pythonが実際に会社やさまざまな分野でどのように使用されているかを知りたいと思うことがよくありますか？ </p>
<p>** Python <strong>が今日の主要な業界をどのように推進し</strong>、多くのコンピューターサイエンス分野で重要な役割を果たしているかを学ぶために読んでください。 **** </p>
<a id="more"></a>

<h2 id="なぜPythonを選ぶのですか？"><a href="#なぜPythonを選ぶのですか？" class="headerlink" title="なぜPythonを選ぶのですか？"></a>なぜPythonを選ぶのですか？</h2><p>[Python](<a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJJMxTc?utm_source=gout_mx">https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJJMxTc?utm_source=gout_mx</a> <strong>および</strong>ユニバーサルコーディング言語**-これは、理解しやすく、さまざまな問題の解決に使用できることを意味します。 </p>
<p>シンプルな構文、高い読みやすさ、オペレーティングシステム全体での使用により、Pythonは、さまざまなアプリケーションでの学習と使用に使用できる貴重な言語です。 </p>
<p>！<a href="https://images.ctfassets.net/mrop88jh71hl/70P7f6p7J1Bk4VY8GDzm95/58d544a1044609e94a001523d9583f22/python-code-application.jpeg">画面上のPythonコード。 </a> </p>
<p>エンジニアの画面に表示されるPythonのコード例。 </p>
<p>したがって、Pythonが今日の求人市場だけでなく、私たちが毎日使用する一般的なテクノロジーでも普及していることは驚くべきことではありません。 </p>
<p>** Pythonプログラミング<strong>は、ほぼすべての業界で使用できるスキルであり、その役割はソフトウェア開発をはるかに超えています。 **金融、ヘルスケア、</strong>および<strong>保険</strong>などの業界から<strong>航空宇宙</strong>から<strong>エンターテイメント</strong>まで-[Pythonベースのテクノロジー](<a href="https://appdevelopermagazine.com/ten">https://appdevelopermagazine.com/ten</a> -industries-using-python-programming /)は、<strong>イノベーションと新しいソリューション</strong>を促進することです。 </p>
<p>「<a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjut_mx9ACq">Python101とは」ガイド</a>、Pythonと、<strong>テクノロジー</strong>、<strong>ファイナンス</strong>、<strong>バイオテクノロジー</strong>など、Pythonで使用されるいくつかの領域を紹介しました。 ただし、この記事では、Pythonの幅広い使用法、特に次の分野について詳しく説明します。 </p>
<ul>
<li><strong>ウェブ開発</strong> </li>
<li><strong>データサイエンス</strong> </li>
<li><strong>機械学習</strong> </li>
<li><strong>人工知能</strong> </li>
</ul>
<h2 id="Pythonアプリケーション"><a href="#Pythonアプリケーション" class="headerlink" title="Pythonアプリケーション"></a>Pythonアプリケーション</h2><h3 id="ウェブ開発"><a href="#ウェブ開発" class="headerlink" title="ウェブ開発"></a>ウェブ開発</h3><p>HTML、CSS、Javascriptは** Web開発**の一般的なツールかもしれませんが、Pythonも良い選択です。 </p>
<p>[Web開発](<a href="https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before">https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before</a> -getting-started /)は、静的なプレーンテキストページから動的なeコマースWebサイトやインタラクティブなインターネットアプリケーションまで、インターネット上にWebサイトを構築することを指します。 </p>
<p>コーディングは、Web開発がサイトの機能を構築し、ユーザーエクスペリエンスを最適化し、情報が適切に整理されるようにするために不可欠です。 Pythonの** Django <strong>や</strong> Flask **などのWebフレームワークは、Webサイト開発の一般的な選択肢になっています。 </p>
<p>！<a href="https://images.ctfassets.net/mrop88jh71hl/6prH9NRKgybllrNcEqeCBy/c7fbc7b6960e8f94efb9eaa0b70a97d2/python-web-development-applications.png">PythonはWebページの作成に使用されます。 </a> </p>
<p>Pythonは、バックエンドWeb開発に最適であり、現在多くの企業で使用されています。 </p>
<p>これらのオープンソースフレームワークにより、Pythonには大量のデータを処理してタスクを自動化する機能があるため、ユーザーはWebアプリケーションをより効率的に構築できます。 実際、** Instagram <strong>、</strong> Pinterest <strong>、</strong> Google **はすべて[バックエンドWeb開発]にあります(<a href="https://learn.onemonth.com/10-famous-websites-built">https://learn.onemonth.com/10-famous-websites-built</a> -using-python /)はPythonを使用します。 </p>
<h3 id="データサイエンス"><a href="#データサイエンス" class="headerlink" title="データサイエンス"></a>データサイエンス</h3><p>[データサイエンス](<a href="https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_reach=">https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_reach=</a> ](<a href="https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_outm_reach">https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_outm_reach</a> </p>
<p><strong>ビッグデータ</strong>の時代には、ナビゲーション(GPS)、オンラインショッピング、エネルギー使用、スマートウォッチなどのウェアラブルデバイスを通じて、日常生活のデータと頻繁に接触します。 </p>
<p>平均して、各世帯には約[11台のデバイス](<a href="https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should">https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should</a> -push-that-even-higher-1203431225 /)そして、この数は将来増加する可能性があります！ 非常に多くのデバイスがあるため、企業はサービスを提供するために大量のデータを処理する必要があります。 </p>
<p>！<a href="https://images.ctfassets.net/mrop88jh71hl/3XS43f9pqDhRuft9GdnvZq/2d0513d9f0079c572923a49cd214add5/python-data-analysis-applications.png">データ分析のためのPythonのプロセスの説明</a> </p>
<p>Pythonベースのツールは、大量のデータを視覚化、処理、分析するためによく使用されます。 </p>
<p><strong>データサイエンス</strong>には、データの処理と傾向の推測が含まれます<strong>-Python **には、</strong> scipy <strong>、</strong> numpy <strong>、</strong> pandas **などの高密度パッケージが含まれているため、この分野で非常に役立ちます。 </p>
<p>さらに、** matplotlib <strong>ソフトウェアパッケージを使用して、データの視覚化を構築できます。 これにより、Pythonは</strong> bioinformatics **などの分野で人気があり、大量のデータやモデリングも含まれます。 </p>
<p>これらのPythonベースのツールは、使いやすさと拡張性のために人気があります。 たとえば、<a href="https://www.edureka.co/blog/how-netflix-uses-python/#hownetflixusespython">Netflix</a>は、クロスプラットフォームユーザーを管理するための数値計算に** scipy <strong>と</strong> numpy **を使用します フロー。 </p>
<p>▶<strong>試してみてください：</strong> [高度なデータサイエンスとPythonチュートリアル](<a href="https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMT9Cutj_HBXf">https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMT9Cutj_HBXf</a> = gf＆utm_medium = what_is_python_used_for＆utm_campaign = outreach) </p>
<h3 id="機械学習"><a href="#機械学習" class="headerlink" title="機械学習"></a>機械学習</h3><p>大量のデータを分析することにより、** Machine Learning ** [Algorithm](<a href="https://junilearning.com/blog/guide/what-are-algorithms/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTium">https://junilearning.com/blog/guide/what-are-algorithms/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTium</a> パターン化して、将来の動作に適用します。 </p>
<p>製品での機械学習の最も明白な使用法は、推奨システムです。 ** Netflix <strong>、</strong> Spotify <strong>、</strong> Youtube **などの企業は、ユーザーの行動を収集して、プレイリストやビデオを予測および提案します。 </p>
<p>** Scikit-learn <strong>および</strong> tensorflow **は、大規模なデータセットの分類、クラスタリング、および回帰のアルゴリズムに使用できるPythonライブラリです。 これらのライブラリの高性能と幅広い機能により、これらのライブラリはあらゆる機械学習の探索に不可欠です。 </p>
<p>▶<strong>詳細：</strong> [子供のアルゴリズムの重要性](<a href="https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjM">https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjM</a> what_is_python_used_for＆utm_campaign = outreach) </p>
<h3 id="人工知能"><a href="#人工知能" class="headerlink" title="人工知能"></a>人工知能</h3><p>機械学習は、実際には<strong>人工知能</strong>の1つの側面にすぎません。 AIとは、機械のインテリジェンスと、知覚や意思決定などの人間指向のタスクを実行するためのコンピューターシステムの開発を指します。 </p>
<p>人工知能の優れた例は、** Uber <strong>や</strong> Lyft **などのライドヘイリングアプリケーションです。 </p>
<p>！<a href="https://images.ctfassets.net/mrop88jh71hl/dlvfPv6HAIV4YaMb1TRCl/88739612a93476c94733255a94a567d7/python-artificial-intelligence-in-ride-sharing.png">カープーリングアプリケーションで使用される人工知能のPythonイラスト。 </a> </p>
<p>Pythonは、LyftやUberなどのアプリケーションの人工知能で使用されます。 AIシステムは、ユーザーのニーズや到着予定時刻などを予測できます。 </p>
<p>UberはAIを使用して、<strong>ユーザーのニーズを予測</strong>および<strong>推定到着時間</strong>(およびその他の機能)を行います。これらのほとんどは<a href="https://eng.uber.com/uber-ai-blog">Python</a>を介して行われます。 -2019 /)完了しました。 </p>
<p>前述のPythonライブラリの一部に加えて、** keras <strong>や</strong> pytorch **などの他のライブラリを使用してAI関数(予測モデルやニューラルネットワークなど)を作成することもできます。 </p>
<h2 id="Pythonはどこにでもあります！"><a href="#Pythonはどこにでもあります！" class="headerlink" title="Pythonはどこにでもあります！"></a>Pythonはどこにでもあります！</h2><p>人気のあるプログラミング言語の中で、Pythonはそのアプリケーションで最も多様な言語の1つです。 さらに、それは私たちと今日の主要企業と深く統合されています。 </p>
<p>Pythonに関連する職業には、<strong>ソフトウェアエンジニア、Web開発者、データサイエンティスト、製品マネージャー、ビジネスアナリスト</strong>などが含まれます。 業界に関係なく、この技術時代の企業はデータ主導の意思決定に依存しており、Pythonはこれを行うのに最適なツールです。 </p>
<p>あなたやあなたの子供が上記の分野や役割に興味があるなら、Pythonを学ぶことは良い選択です！ </p>
<h2 id="Pythonプログラマーになりたいですか？"><a href="#Pythonプログラマーになりたいですか？" class="headerlink" title="Pythonプログラマーになりたいですか？"></a>Pythonプログラマーになりたいですか？</h2><p>Pythonの最大の利点の1つは、新しいコーダーが基本的な概念を学び、プログラミングに慣れることを支援することです。 すべての年齢の新しいプログラマーのために、Pythonを広範囲に学ぶための多くのリソースもあります。 </p>
<h3 id="子供のためのPythonクラス"><a href="#子供のためのPythonクラス" class="headerlink" title="子供のためのPythonクラス"></a>子供のためのPythonクラス</h3><p>！<a href="https://images.ctfassets.net/mrop88jh71hl/2dK37wFC5SF8HNKm4nGmqr/c256e7002d196ea54e4c10817a68f8a7/learning-python-with-juni.png">Pythonを使用するJuniインストラクター。 </a> </p>
<p>インストラクターのジュニは、若い学生に基本的なPythonを教えています。 </p>
<p>Juni Learningでは、経験豊富なコーディング教師の助けを借りて、若いコーダーに[Pythonを教える](<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACutjMEHBXfCjJMxT=c">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACutjMEHBXfCjJMxT=c</a> gf＆utm_medium = what_is_python_used_for＆utm_campaign = outreach)。 <strong>コーディング基盤の統合からアルゴリズムの構築およびデータセットの分析</strong>まで、これらのコースではPythonのさまざまなアプリケーションを探索し、独自のコーディングプロジェクトを構築する方法を学生に教えます。 </p>
<p>詳しく読む[コーディングコース](<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_medium=ed_is=_python_usと到達についての詳細についてのhttps：//キャンペーン]">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_medium=ed_is=_python_usと到達についての詳細についてのhttps：//キャンペーン]</a> [<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTcを？">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTcを？</a> join.junilearning.com/)入学チームと一緒に、お子様のコーディングの旅に最適なコースを学びましょう。 </p>
<hr>
<p><em>This</em> [_article _](<a href="https://junilearning.com/blog/guide/what-is-python-used-for-major-industries/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc？">https://junilearning.com/blog/guide/what-is-python-used-for-major-industries/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc？</a> _junilearning.com _](<a href="https://junilearning.com/?utm_source=gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach)。">https://junilearning.com/?utm_source=gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach)。</a> </p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>米国株で口座を開設する方法</title>
    <url>/ja/how-to-buy-us-stocks/</url>
    <content><![CDATA[<p>コード <code>0CM1QE</code>を参照してください </p>
<p>この2日間の米国の選挙<br>時差があるため、リークとして共有しないでください。<br>真夜中に起きて肉を切る<br>現在、🚀は一般的に上昇していますが、市場の恥ずかしさに参入する勇気はありません </p>
<p>その時に口座を開設するという悲しい旅を共有してください </p>
<a id="more"></a>

<h2 id="米国の証券会社"><a href="#米国の証券会社" class="headerlink" title="米国の証券会社"></a>米国の証券会社</h2><p>多くの米国の証券会社は手数料を免除されているため、最初に見てください </p>
<ul>
<li>ロビンフッド(より良いユーザーインターフェース) </li>
<li>TDアメリトレード(旧ブランド) </li>
<li>Firstrade(中国のカスタマーサービス) </li>
</ul>
<p>ロビンフッド両当事者は招待されたときに株を送ることができるので、私は米国の友人にコードを入手するように頼みました、そしてそれから私は公式ウェブサイトに行きました、そして彼らが米国内でのみ提出できることを知りました…<br>TD AmeritradeにはSGとウェブサイトがありますが、情報を送信した後の最後のステップで立ち往生する方法がわかりません。過去に誰もメールを確認していません。<br>Firstrade、非アメリカ人は自動的に免税フォームの提出を手伝いました。情報を提出した後、アカウントは数営業日後にようやく開設され、預金はACH、Check、WireTrannsferのみであることがわかりました。 </p>
<p>ACHとCheckの両方が私の米国の銀行口座に送金する必要があるので、絶対に必要ありません<br>WireTrannsferには別の料金があります </p>
<h2 id="シンガポール証券会社"><a href="#シンガポール証券会社" class="headerlink" title="シンガポール証券会社"></a>シンガポール証券会社</h2><p>それから私はシンガポールを調査し、これらの人々が実際にUOBまたはDBS銀行の取引口座に行ったことを発見しました<br>手数料が高すぎて価値がないと聞いただけです </p>
<h2 id="国内証券会社"><a href="#国内証券会社" class="headerlink" title="国内証券会社"></a>国内証券会社</h2><p>さて、私は周りを回って戻ってきました… </p>
<ul>
<li>Xiaomiのタイガー </li>
<li>テンセントのフツ </li>
<li>スノーボール </li>
</ul>
<p>嬉しいです🐯シンガポールの口座開設をサポートします、はい </p>
<ul>
<li>米国株、香港株、シンガポール株、オーストラリア株.. </li>
<li>プレポストマーケット、フューチャーズをサポート </li>
<li>レバー </li>
</ul>
<p>もともとパスポートなどの情報をアップロードする予定でしたが、とにかく前もって準備しました<br>Singpass認証がサポートされていることが判明し、クリックして前後にジャンプし、認証されました… </p>
<p>神はそれがとても簡単であることを知っていました<br>去年開けましたか？ </p>
<p>そうでなければ、それはすでに数回です<br>または屋上から飛び降りた </p>
<h2 id="取引料金"><a href="#取引料金" class="headerlink" title="取引料金"></a>取引料金</h2><p>私はオプションを(あえて)購入しないので<br>通常の取引には3つの追加費用があります </p>
<ul>
<li>2 \ $を購入する </li>
<li>総在庫の0.1％ </li>
<li>2 \ $を売る </li>
</ul>
<p>だから、下着を全部持っていても🐯いっぱいになります </p>
<h2 id="コードを参照"><a href="#コードを参照" class="headerlink" title="コードを参照"></a>コードを参照</h2><p>あなたは私のコード <code>0CM1QE</code>を使うことができます </p>
<p>現在の活動は双方だと思います </p>
<ul>
<li>5コミッション無料 </li>
<li>2000SGDを充電して30SGDを取得し、3Wを充電して100SGDを取得します </li>
</ul>
<p>まあ、参照したいという欲求はまったくありません<br>以前はアリの株を配っていたのを覚えていますが、今は高すぎるのでしょうか？ </p>
<h2 id="トランスクリプト"><a href="#トランスクリプト" class="headerlink" title="トランスクリプト"></a>トランスクリプト</h2><p>過去2日間の世界的な株式市場のブームを見てみましょう。夜は眠れないのではないかと心配し、激しい手術の後にレポートカードを持っていました。 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/how-to-buy-us-stocks.jpeg" alt=""></p>
<p>だからあなたは何を待っていますか、サインアップしてください </p>
<p>屋上でお待ちしております<del>~</del> </p>
]]></content>
      <tags>
        <tag>Stock</tag>
        <tag>Broker</tag>
      </tags>
  </entry>
  <entry>
    <title>コロナウイルスの陰で中国に戻る</title>
    <url>/ja/fly-back-to-china-under-covid-19/</url>
    <content><![CDATA[<p>新しい美術館の世界的な流行状況は2020年の終わりに改善されません<br>そして冬の到来とともに、徐々に別の発生の兆候があります<br>しかし最近、小さな魔道士は家に帰る必要があります<br>さまざまなワクチンが世界中でワクチン接種されていますが </p>
<table>
<thead>
<tr>
<th>会社</th>
<th>タイプ</th>
<th>投与量</th>
<th>有効性</th>
<th>保管℃</th>
</tr>
</thead>
<tbody><tr>
<td>BioNTech / Pfizer</td>
<td>mRNA</td>
<td>x2</td>
<td>95％</td>
<td>-70</td>
</tr>
<tr>
<td>モダン</td>
<td>mRNA</td>
<td>x2</td>
<td>95％</td>
<td>-20</td>
</tr>
<tr>
<td>オックスフォード/アストラゼネカ</td>
<td>アデノウイルスベクター</td>
<td>x2</td>
<td>62-90％</td>
<td>0</td>
</tr>
</tbody></table>
<p>しかし、それでも家に帰るには14日間の隔離が必要です </p>
<a id="more"></a>

<h2 id="準備ができました"><a href="#準備ができました" class="headerlink" title="準備ができました"></a>準備ができました</h2><p>地元の大使館にアクセスして、エントリー情報を入手してください<br><a href="http://www.chinaembassy.org.sg/chn/lsfw/zytzs/t1838128.htm">ニュージーランド大使館</a>によると、シンガポールを例にとると </p>
<p>10月以降の搭乗は、おそらくいくつかの段階を経て、段階的に引き締められます </p>
<ol>
<li>核酸増幅試験 </li>
<li>核酸+血清IgMダブルネガティブ証明書 </li>
<li>WeChatミニプログラムで流行予防健康コードを申請する必要があります </li>
</ol>
<h2 id="核酸増幅試験"><a href="#核酸増幅試験" class="headerlink" title="核酸増幅試験"></a>核酸増幅試験</h2><p>11月に検査の予約をする必要があり、12月に予約をする必要はありません。承認された病院を見つけたら、直接検査を行うことができます。<br>小さな魔道士が住んでいるアパートのすぐ隣に診療所があります。5分間歩きます。<br>予定がないので人が多すぎて1時間くらい待ちました<br>血を引いて鼻を刺した<br>私は以前にこのテストを恐れていましたが、シンガポールの医師はより穏やかで、それほど不快ではありません </p>
<p>採血後しばらく押す必要があることをお知らせします。採血前の弟が採血し、バンドエイドを慎重に使用しませんでした🩹押してください<br>その結果、血が川に流れ込み、地面の服が血で覆われ、ひどいものでした😨 </p>
<h2 id="健康コード"><a href="#健康コード" class="headerlink" title="健康コード"></a>健康コード</h2><p>SMSと翌朝の電子メールで受信した二重陰影証明<br>ただし、WeChatアップルはドキュメントを送信できません<br>メイジとして、小さなメイジはそれがDNS解決の問題であると大胆に推測しました<br>Cloudflareは、アップルトのサーバーIPを正しく返しませんでした。<br>電話📱DNSを114.114.114.114に変更すると、すばらしいでしょう<br>Mugglesをどうするかため息をつくだけではありません </p>
<p>約1時間後にヘルスコードを受け取りました<br>万が一に備えてスクリーンショットを保存する </p>
<h2 id="生化学スーツ"><a href="#生化学スーツ" class="headerlink" title="生化学スーツ"></a>生化学スーツ</h2><p>空港で生化学スーツを着て帰国する人々に怯えていた。<br>小さな魔道士が揺れていて、+大人のおむつセットを購入しました<br>密かに試着するのは不快でした<br>北半球が年末の冬であることを考えると、トロピカルTシャツを着て飛行機に乗り、服を着ずに飛行機から降りると、その場で間違いなくひどい寒さになります。 </p>
<p>生化学スーツの着用と服の追加が大きな問題になります </p>
<p>CDCの<a href="https://chinese.cdc.gov/coronavirus/2019-ncov/travelers/travel-during-covid19.html">COVID-19流行中の国内旅行</a>を繰り返し読んだ後、小さなマスターは結論を出しました </p>
<ul>
<li>飛行機は新鮮な空気を持っています </li>
<li>マスクを着用してください </li>
<li>柔らかな目と鼻ではない </li>
</ul>
<p>新しい王冠の主な感染経路は呼吸器系です。小さな魔道士は、** N95 +外科用マスク+ゴーグル**を身に着けているのは安心できるはずだと感じています。 </p>
<h2 id="帰りのフライト"><a href="#帰りのフライト" class="headerlink" title="帰りのフライト"></a>帰りのフライト</h2><p>現在、シンガポールから北京への直行便はありません。<br>最初に上海に行き、14回の隔離後に転送することしか選択できません </p>
<p>シンガポールから上海への直行便は週に3回のみです。<br>月曜日はシンガポール航空、木曜日はイースタン航空、金曜日の夜はジュネヤオ航空 </p>
<p>イースタンエアラインズは1枚の荷物しかチェックできず、追加の荷物を購入する必要があります。1枚は500RMBです。<br>アプリでの事前購入の20％割引 </p>
<p>搭乗直前の健康コードに加えて、税関旅客ミニプログラムを使用してエントリー情報を入力する必要もあります </p>
<h2 id="イースタンエアラインズ"><a href="#イースタンエアラインズ" class="headerlink" title="イースタンエアラインズ"></a>イースタンエアラインズ</h2><p>午後3:00 </p>
<p>搭乗口を待つ間、約半数の人が生化学スーツを着てしっかりと覆っていました。<br>実際、フロントセキュリティチェックでは、ベルトなどの理由で生化学サービスの半分を負担しなければならなかったため、非常に恥ずかしかったです。<br>この場合、作業は中断されませんか？どのような保護効果がありますか？ </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-02.jpg" alt=""></div></div></div>

<p>乗組員はまた、2層マスク+ゴーグルを着用しています </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-03.jpg" alt=""></p>
<p>飛行機が登った後、小さな魔道士は衛星Wi-Fiに接続し、家族が心配する必要がないように最新のニュースで家族を更新し続けました。 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-05.jpg" alt=""></p>
<p>流行はありますが、食事はまだ提供されています<br>乗客は少なく、小さな魔法使いが真ん中にいて、どちらの側にも誰もいません。<br>だから、間違ったピークが食べるのを待つのではなく、スナックを受け取ってから食べるのが待ちきれませんでした。 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-04.jpg" alt=""></p>
<p>窓際の左側の姉がしっかりと包み込み、旅行中ずっと食べたり、飲んだり、トイレに行ったりしませんでした。<br>また素晴らしい </p>
<h2 id="ハード核酸検出"><a href="#ハード核酸検出" class="headerlink" title="ハード核酸検出"></a>ハード核酸検出</h2><p>午後21時30分 </p>
<p>下船前にQRコードを確認してください<br>それから、核酸検査のために彼の鼻を再び突く<br>小さな魔道士は彼がすでに経験を持っていると言いました。<br>ミスシスターは中国がより厳しいと言いました、私はより軽くしようとします </p>
<p>それから私はそれをシンガポールよりも深く刺し、それから綿の綿棒を数回回しました<br>小さな魔道士はそれが終わったと思い、OKのジェスチャーをしました<br>意外にも、数秒待った後、ミスシスターは数回引き返しました<br>次に、綿の綿棒を壊して、テストチューブに入れます<br>小さな魔道士が話しかけようとしていた、妹は別の綿の綿棒を取り出した<br>右の鼻を時計回りに向け、停止し、反時計回りに、同じようにします </p>
<p>小さな魔道士は涙をこらえ、ありがとうと言いました🙏<br>結局のところ、夜遅く、みんな一生懸命働いています </p>
<h2 id="エントリ"><a href="#エントリ" class="headerlink" title="エントリ"></a>エントリ</h2><p>午後22時10分 </p>
<p>エントリーフォーム、パスポートを確認してください </p>
<p>国境の弟は、小さな魔道士のビザをめくり、章を変えました。<br>次に、IDカードは消磁される可能性があるため、パスポートと一緒にしないでください。 </p>
<p>午後22時20分 </p>
<p>セキュリティチェック中にトロリーを忘れないでください </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-07.jpg" alt=""></div></div></div>

<p>夕方22時30分 </p>
<p>上海の国内および海外の迂回と孤立 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-08.jpg" alt=""></div></div></div>

<h2 id="悪夢"><a href="#悪夢" class="headerlink" title="悪夢"></a>悪夢</h2><p>これは旅行全体の悪夢です<br>今日はフライトが多すぎるため、バスは孤立しています🚌準備が不十分です<br>長い待ち時間を始めました⌛️ </p>
<p>00:40 AM<br>パスポート登録 </p>
<p>待って待って、上海は夜遅くまでとても寒い<br>幸いなことに、出発する前に、シンガポール国立大学の友人が暖かい機器のセットを購入するのを手伝ってくれました<br>小さな魔道士は暖かいものを着て立ち上がって眠りに落ちました </p>
<p>2:33 AM<br>待って、バスに乗ると、スタッフはパスポートがホテルであなたに返されることを思い出させます </p>
<p>高速で、車の中で揺れと揺れ<br>ヒーターで眠りに落ちた<br>高速車を降りて立ち止まりました。目を覚ますと、夜遅くまで待たなければならなかったのは1万個の赤信号でした。 </p>
<p>立ち止まって行き、苦しみ </p>
<p>隔離ホテルはランダムに割り当てられているので、良い高価なものは安いです<br>しかし今回は、小さな魔道士はもはやお金を節約することはできません。 </p>
<p>神様、私にもっと良いホテルを割り当ててください🏨 </p>
<h2 id="インターナショナルスパ"><a href="#インターナショナルスパ" class="headerlink" title="インターナショナルスパ"></a>インターナショナルスパ</h2><p>午前4時50分 </p>
<p>ついに隔離ホテルに到着<br>小さな魔道士が見上げると、それが高い建物であることがわかりました。直感的にこのホテルは良いです。 </p>
<p>地図を開いてみると、5つ星でした。<br>上海の国際スパ </p>
<p>ひそかに幸せ<br>ポールテールなし </p>
<p>しかし、ガチョウはまだ降りることができません<br>最初の数台のバスがチェックインするのを待つ必要があります </p>
<p>午前5時50分 </p>
<p>最後に降りる<br>パスポートIDを登録する </p>
<ul>
<li>ホテル350日、Alipay、WeChat、UnionPayおよびその他の方法を使用して送金できます </li>
<li>1日100日3回の食事ですが、ホテルのケータリングではなく、外注のボックスランチです。 </li>
<li>自分でテイクアウトを注文して、毎日12時と6時に配達することもできます。 </li>
<li>クーリエはメールのみを受信できますが、メールは送信できません </li>
<li>1日2回体温を測る </li>
<li>ゴミ袋は密閉されてドアの外に置かれ、全身の生化学スーツを着たスタッフは定期的に掃除をします </li>
</ul>
<h2 id="チェックイン"><a href="#チェックイン" class="headerlink" title="チェックイン"></a>チェックイン</h2><p>午前6時10分 </p>
<p>それから小さな魔道士は14日間の検疫生活を始めました<br>ママは小さな魔道士が退屈するのではないかと心配していました<br>しかし、小さな魔道士はもともと家でしたが、今では法律に従って人に会う必要はありません。<br>また、初めてシンガポールに行ったときに泊まったMホテルのようです </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-12.jpg" alt=""></div></div></div>

<h2 id="14日間の隔離"><a href="#14日間の隔離" class="headerlink" title="14日間の隔離"></a>14日間の隔離</h2><p>もちろん、隔離中に軽く取ることができません<br>途中で同じ国から来た観光客との比較<br>孤立したホテルでは、さまざまな国の人々と出会うでしょう </p>
<ul>
<li>たとえば、12月20日<a href="https://www.zaobao.com.sg/znews/singapore/story20201220-1110087">13人が隔離され、冠状動脈疾患が確認された</a> </li>
<li>検疫終了後16日目に病気になる14人もいます </li>
<li>北京14 + 7医学的観察 </li>
<li>英国コロナウイルスの新しい亜種の感染性が70％増加 </li>
<li>..。 </li>
</ul>
<p>そのため、一方では窓を開けて🪟換気を行い、空気の循環を確保してウイルス濃度を減らします<br>一方、頻繁に手を洗ってください🧽、目や鼻を柔らかくするのではなく👀👃、正直にマスクを着用してください😷 </p>
]]></content>
      <tags>
        <tag>Covid</tag>
      </tags>
  </entry>
  <entry>
    <title>トレーニングを感じる</title>
    <url>/ja/FEEL-Training/</url>
    <content><![CDATA[<h2 id="初日"><a href="#初日" class="headerlink" title="初日"></a>初日</h2><p>トレーニングの初日、幹部が交代で紹介しました。<br>本当のCEOCOO CTOCFOを初めて見た<br>正午に昼食をとるのはかなり恥ずかしいことで、幹部専用の個室のようです。 その結果、すべての幹部が戻ってきて、数人が入った。 幸いなことに、何人かの同僚が次々とやって来ました。<br>午後に契約書にサインした後、私は自分の家に行きました。<br>窓際のカーテンの隙間が大きく、LCDモニターに灼熱の太陽が何の障害もなく広がり、何も見えません…<br>もちろん、後で自分が最悪ではないことに気づきました。最悪だったのは上司でした。別の同僚が直接、日光浴をするためにここにいると言いました… </p>
<a id="more"></a>

<p>コンピューターをインストールし、アンチウイルス暴君を取り除き、通常の環境に構成します。<br>もちろん、会社のインターネット速度は遅すぎます…戻っていくつかの大きなソフトウェアをコピーしてください。<br>それから、妹のあなたに会いました。 ムーは私を知っていると思いました。しばらくおしゃべりした後、ブラウザ部門全体が小さな会議を開きました。 </p>
<p>残念ながら、この文は機知に富んでいます。 誰もが技術的で、とても静かで、私は言葉を失います。<br>上司に戻って仕事を割り当てたところ、しばらくすると6時過ぎだとわかりましたが、休みではないですか？ シェンマの周りに動きがないので？ グループで尋ねられたところ、誰もが仕事を辞めるのに苦労していることがわかりました。<br>じっと立っているしかない。 20歳の時、インストラクターが点滅しているのを見ました。 メンター、私は彼の足跡をたどらなければならず、上司に挨拶し、そして逃げました〜 </p>
<h2 id="次の日"><a href="#次の日" class="headerlink" title="次の日"></a>次の日</h2><p>ランダムにチームに分けられ、チーム名とスローガンを与えました<br>最初に連絡したときの意見の要約方法<br>結局、私たちはバブルフィッシュに決めました/私はバブルフィッシュです、私はチーム名とスローガンとしてバブルフィッシュが大好きです<br>(3日目にかわいいピエロの魚を見て、それを遊びに持ってきて、「バブリングフィッシュ」を詳しく見てみました。<br>ポスター：UIのY +は牛です。泡立つ魚の絵は鮮やかで、とてもQです。 </p>
<p>さまざまなプロセスが複雑で複雑です。現時点で使用できるのは管理部門だと思います。引き出しキーは1つだけで、太陽はまぶしいです。 </p>
<p>結局、模倣が多すぎて、観察の問題ではなく、思考の誤解だと感じています。思考の本をたくさん読んだのですが、今でも見ています。<br>または、xiがこの種の問題に長けている場合、それを最初に実行します。 </p>
<h2 id="三日目"><a href="#三日目" class="headerlink" title="三日目"></a>三日目</h2><p>時間はどんどん厳しくなっています。昨日はまだ空き時間がありました。開発環境を構成するために戻ってきましたが、今日はなくなりました。<br>SKYのロゴを描きましょう。<br>本来の目的は、規範を遵守することをすべての人に知らせることです </p>
<p>それから私はいくつかのランダムな写真を与え、新聞をタイプセットしました<br>Appleを買うことを考えたのですが、幸い、私たちのグループは話し合いを始めませんでしたが、他のグループもこれを使っていることがわかったので、あきらめることにしました。<br>いくつかのデリケートな問題があります、Xiaodongはそれについて言及しないで、そして忘れると言いました </p>
<p>ヤンヤン姉妹は10の質問を投稿しましたが、それは夕方に実行するスケッチに変更され、質問が挿入されます<br>正午に簡単な食事をして、質問への回答を収集します<br>午後のトレーニング時間はそれほど時間はかかりませんでした<br>洗脳訓練だと主張し、その中でもモバイルインターネットでYYの動画を見ました。100年後に生まれたいです。<br>グループは革新的なパフォーマンスを行うように割り当てられ、私たちは元の意見を採用しました。<br>元兄弟は少しMMですが、彼は非常にオープンで情熱的です。<br>趙楊はホストとして本当に才能があり、プロセス全体を通してシーンを埋めるために多くのナンセンスを使用しました。<br>シャオドンはうまくできないと言い続けますが、その場でうまくいきました<br>私は審判です、それは純粋な醤油です〜 </p>
<p>その後、夕方のスケッチについて話し合うのに1時間しかありません<br>元兄弟は常により積極的な思考を持っていましたが、話し合いの過程の後半で、私は本当に90年代以降ではなく、脳の損傷ではないことに気づきました。 </p>
<p>最初のグループがフィールドに来るまで、私たちはまだ最終的な結末を決定していませんでした、これは次に注意を払うべき場所です。<br>スケッチの全体的なパフォーマンスは、真ん中のカードのすぐ下で非常に良好です。 </p>
<p>この時、「他人の世界に住んではいけない」と見て、外に出て水を飲んだところ、久しぶりにインターンをしていた新入社員2人に出くわしました。 もう一人は、ヘフェイの状況とどの大学について私に尋ね続けました。<br>もちろん、それはチャイナ・アザー・ユニバーシティです。2回言った後、彼らは皆混乱しているように見えたので、私の自信は急激に落ちました、そして私の口頭の英語はまだ失敗しました…<br>私を驚かせたのは、HangdianがCOUでもあることです(グーグルで検索しただけです。もちろん、そのようなNB学校はこのようなものを必要とせず、基本的に私のものとは異なります)。<br>私たちの学校が地元で見つける仕事のほとんど、通常は約2kかそこらで、彼は口を開いたと言いました、そして私はそれについて考えました、私は彼がHefeiの低価格を忘れたと思います。<br>それからJSがやって来て、バイディの図書館が金曜日に本を借りることができることを知りました。<br>Wiiをプレイした後、私は教室に戻りました、めまい、ショーオーバーです… </p>
<p>すべてが終わった後、シスターヤンヤンは言いました…<br>..。<br>さて、確かに十分な時間が厳しくなっています。マーケティング計画の配布について大まかに話しましょう。結局、それは遅すぎて解散しました。 </p>
<p>門に着くと、元兄弟に出くわし、荷物を持って行きたいと言った。 とにかくもう遅いので、マンションガーデンでついてきます。<br>このような女の子の紙を持って歩くと、もっと危険な気分になります。<br>長い間歩き回った後、ようやくユンダポイントを見つけ、知り合いに連れ去られたことを知りました。<br>今、私に何が起こったのか、フラッシュ。 </p>
<p>最初のタクシーは止まらなかった！ シスター、2台目の車に乗った後、私は運転手に車が先に拒否されたと言いましたか？ 私の顔が沈黙しているのを見て、彼はまた、私が文句を言うのをやめるという趣旨で、前の顔を長い間説明しました。 悲しいかな、私は実際に疲れています。それだけです。どうすれば苦情を申し立てることができますか？ </p>
<p>帰ってきたら洗濯をしなきゃいけない。ささいなことがたくさんある… </p>
<h2 id="四日目"><a href="#四日目" class="headerlink" title="四日目"></a>四日目</h2><p>ハオ兄弟は、私の喉が時期尚早にかすれた場合、一度にほんの数時間で本当に言うことができます<br>後で、私は以前に講師であり、練習したことがあることを知りました。<br>思考の嵐のリンク、鉄の服のラックの使用があります。 バランスがあまり良くないので、score = total / 10アルゴリズムを使用してバランスに戻すことができます<br>もちろん、市場は公平ではなく、最終決定権を持つ独占企業は常に存在します。私は、他人をあまり気にしないようにグループに言いました。<br>しゃがむ、悲しいかな、TaiChiはこれを忘れるだけです<br>しゃがむのは2分もかからないと推定されているので、酸っぱいです。<br>私の心には小さな声があります。私は知的な英雄であり、その位置を認識できず、ただそれをやろうとします。あなたが倒れた場合、チームは明日不完全になります。<br>私はこれを理解してすぐにジャンプしました(私はまだジャンプする力があります…)<br>夕方のボードゲームの前に、私は夕食の間に姉妹ヤンヤンに出くわし、彼女が管理部門で何かを動かすのを手伝いました。<br>それからテーブルテニスに走り、2つのボールをこすりました<br>ボードゲームは殺人ゲームです、みんな元気に遊んでいますこんにちは<br>元兄弟はたくさん話します、バラバラはみんなを混乱させました<br>Y +が夜間にワイヤレス接続を修正し、洗って寝るのを手伝ってください </p>
<h2 id="5日目"><a href="#5日目" class="headerlink" title="5日目"></a>5日目</h2><p>今日のトレーニングの後、私はそれを上司に注意深く話し、そこに座って何もしませんでした。私にできることは何もありません。<br>上司はすぐにセンがすでに仕事を準備していると言ったが、彼は何も言わなかった。<br>(T.Tさん、こんな感じでした)<br>..。 </p>
<h2 id="6日目"><a href="#6日目" class="headerlink" title="6日目"></a>6日目</h2><p>ウェストレイクオリエンテーション<br>私たちは6.50に出発し、壊れた橋に着くのに約1時間半かかりました。<br>私もバスで船長に会いました、そしてヤンジアオもこのバスにいました… </p>
<p>西湖は暑すぎるので、チームはファンを何人か購入しました<br>タスクを取得して出発します </p>
<p>新しい白人女性の伝説の古典的な断片、美しく、美しく、おいしい食べ物は、外国人観光客に「こんにちは、Hangzhou …」と他のタスクを書き留めさせます<br>大勢の人が迎えてくれて、元兄弟のイジアがすぐに駆け寄った<br>ええと、英語は本当に断続的です、そして私はまだ翻訳するためにツアーガイドに頼っています…<br>彼らの間の対話はまだ理解できますが、私に言わせてください…<br>私の隣には黄色い人種のように見える短い女性がいて、私は何歳でしたか。彼女は当時苦労していましたが、ついに初めて外国人と話し、比較的2つの質問をしました。「どこにいますか」 から？”<br>アメリカオーストラリアか何か<br>それなら何と言ったらいいのかわからない…本当に馬鹿げた英語だ… </p>
<p>最初のタスクは目隠しされ、チームは10メートルのロープを通常の五角形に伸ばしました。 </p>
<p>私はXiaodong1.78を同じ長さと側面の長さとして使い始め、たくさんのロープを残しました<br>実際、インストラクターはそれを明確にしなかったので、これ以上はあり得ません<br>もちろん、私たちは皆自分の過ちを認めます、そしてその怠慢は言及しませんでした </p>
<p>最初は手で角度を測ることを考えました108。<br>後で私は彼らが角までの距離を測定していることに気づきました、それはより便利で正確です </p>
<p>普通の五角形だと思ったら終わります<br>目隠しを外す前はまだ不安でしたが、やっぱり気持ちが悪くなりました。<br>グラフィックを見た後、安堵のため息をついた。協力は本当に素晴らしいとため息をついた。<br>ついに満点の最初のアイテムを完成させました </p>
<p>美術館に着いたら、エアコンを入れて吹き飛ばしてクールダウンすることを強くお勧めしますが、時間が足りず出られないのではないかと心配する方もいらっしゃるので(囧)、みんなで旅を続けます </p>
<p>2番目のタスクは単語を推測します </p>
<p>私はまだ反応していません、元兄弟はすでに両方をしました…<br>Ο\ _ \ _Ο “…<br>私の唯一の貢献は、行き詰まったものを脇に置き、次のものに進み、最後に除去方法を使用して、ブレークスルーがあるかどうかを確認することです。<br>最終的には3分以上かけて完了しましたが、残念ながら2つの間違いを犯しました(正解率が最も高く、時間が最も短いことが後でわかりました)。 </p>
<p>3番目のタスク：アウトスマート核弾頭 </p>
<p>一辺が4メートルの正方形のエリアで、中にはカップがあります。ロープ、ゴムバンド、箸、ストローを使って、ボトルの水を入れたり取り出したりします。プロセス全体を通して、人がそのエリアに入ることができず、ロープやその他の物体が地面に落ちることはありません。 </p>
<p>私の提案は、2つの穴を開けて、ボトルをカップの上に持ち上げるだけでよいようにすることです。ただし、道路には水がこぼれます。<br>しかし、彼らはそれが遅くなることを恐れています<br>後で、FanxiのQianjiang No. 7グループがこの方法を使用していることを知りました。今考えてみると、これは遅いかもしれませんが、ロープを結ぶ+水を注ぐ時間を節約できます。<br>最後に、最も伝統的な方法である水を注ぐことを使用しました </p>
<p>カップを取り出します<br>もっと巻き、反対方向に巻き、引き抜いたいのですが、動画を見ると、この方法の別のグループが失敗しました。幸い、不安定だと言われました。スリップノットを使って、この計画を拒否しました。<br>それから、船長が箸とゴムバンドをいじくり回しているのを見たので、私は彼に何を考えているのか尋ねました(私は結び目を滑らせません、あそこを助けることはできません)<br>後で、私は元兄弟がゴムバンドを持っているのを見たと思いました。彼女は突然飛び越えて、「わかっています、わかっています」と叫びました。 </p>
<p>N個のゴムバンドを一緒に折り、4本のロープで引き離し、キルトを包んで緩め、ゴムバンドがカップをフープするのを待ち、ゆっくりと持ち上げます<br>聞きましょう！ ！ ！<br>そこですぐに気をつけた点をいくつか考えました。結局、ゴムバンドの方が弾力性があり、フープカップがうまく合わないとカップが落ちやすくなります。<br>それから始まりました<br>今回は観察を担当しています<br>ジェペンは少し緊張しているようで、ロープがリラックスできず、カップが揺れました<br>私たちの声が調整され、最終的にこの最後のイベントをフルスコアで終了しました </p>
<p>バスに乗ります<br>ジェペンは、他のグループは完了していて、十分な時間がないと言いました(そのようなインセンティブがなければ、私たちが戻った後に到着していないグループがまだたくさんあります)<br>私たちは戻ったが、幸いにも戻ってこなかった…<br>突然バスが来て、みんなが道路の反対側に駆けつけました(シャオドンと私は人生がまだ重要だと感じています、それは道路を横断するのが最も遅いです)<br>バスの船長が最後のバス停で急に連絡担当者の電話番号を見たのですが、まだ待っているので、何か言う必要があると思います。<br>電話の後、私は戻ってきたことを知った… </p>
<p>君の<br>ボボ姉妹が写真を撮るとは思っていませんでした。本当に面白かったです。<br>私は目隠しをしてそこに立っているのを見ました、良い2ああ、言わないでください…<br>Yanjiaoのグループは、「Smart Nuclear Warhead」で、ボトルを絞って2メートル離れたカップに水を注ぐ方法を使用し、後に木に登りたいと考えました。<br>人を縛って吊るしたい人もいます<br>NBが多すぎる </p>
<p>やっと<br>最後でない限り、ランキングは気になりません。<br>もちろん、間違いなく1位を獲得しました<br>グループの最初のグループミーティングである夕方におばあちゃんの家に行き、とても幸せです<br>元兄弟の部屋の紙を見た </p>
<p>考え<br>私はいつも大学で一人でいます。チームワークが非常に重要であることは知っていますが、それを感じたことはありません。昨年のインタビューでは、チームは根拠がないと述べました。 このトレーニングでは、私は個人的にチームワークの魔法を体験しました。それは本当に素晴らしいです… </p>
<p>FEELトレーニングはもうすぐ終わります。毎日疲れていますが、バブルフィッシュの皆さん、本当にありがとうございます、O(∩_∩)Oありがとうございます </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>すべての原則的な推測と実現</title>
    <url>/ja/QSearch/</url>
    <content><![CDATA[<p>研究内容 </p>
<ol>
<li>NTFSMFTを読む </li>
<li>ハッシュテーブルの作成 </li>
<li>ファイルのシステムパス </li>
<li>GUIとワーカースレッド </li>
<li>複数の検索方法 </li>
<li>MFCインターフェース </li>
</ol>
<p>研究計画 </p>
<ul>
<li>研究の方向性を決定するための4月上旬から4月中旬 </li>
<li>4月末から4月末まで。各知識ポイントの準備、簡単なテスト </li>
<li>5月初旬、プログラムの設計と開発のデバッグと運用 </li>
<li>5月中旬〜5月末卒業デザイン論文を書く </li>
</ul>
<p>機能と革新 </p>
<ol>
<li>CPUとメモリの使用量は妥当な範囲内です </li>
<li>ソフトウェアは安定しており、さまざまな検索オプションを提供します </li>
<li>ウィンドウの検索機能と比較して、ファイルを見つける速度は超高速です </li>
</ol>
<h1 id="NTFSディスクファイルの高速ロケーション"><a href="#NTFSディスクファイルの高速ロケーション" class="headerlink" title="NTFSディスクファイルの高速ロケーション"></a>NTFSディスクファイルの高速ロケーション</h1><p><strong>概要</strong> </p>
<blockquote>
<p>この記事では、Windows NTFSディスク形式でハードディスク上のすべてのファイルとフォルダの名前を列挙し、C ++のSTLを使用してハッシュテーブルとMFCのGUIおよびワーカースレッドを構築し、最終的にユーザーが入力したキーワードに基づいて実装を実現する方法を紹介します。 googleキーワード検索と同じくらい簡単に検索すると、一致するすべてのファイル/フォルダーが即座に返され、ファイル/フォルダーのシステムパスが再帰的に取得されます。 </p>
</blockquote>
<p><strong>キーワード</strong>：** NTFS、高速、キーワード、検索、ファイルパス** </p>
<h2 id="1はじめに"><a href="#1はじめに" class="headerlink" title="1はじめに"></a>1はじめに</h2><p>Windowsのディレクトリ構造。NTFSボリュームでは、ファイルは<br>B +ツリーの形式で配置され、ディレクトリ内のファイルを検索するときにを押します<br>B +ツリー検索方法では、最初にルートノード(ルートディレクトリから開始)を検索し、次に、検索するファイル名をルートノードの子ノードに対応するファイル名と比較して、検索するストレージ領域に対応する子ノードを決定します。 子ノードを現在のルートノードとして使用し、ファイルが見つかるまで再度検索します。 ^ [1] ^ </p>
<p>Microsoftシステムが提供する検索ではテキストコンテンツを検索できますが、速度は非常に不十分です。 ほとんどの場合、ファイルが保存されているコンピューター上のフォルダーを知りたいだけで、このプログラムはこれを非常にうまく解決します。 </p>
<h2 id="2NTFSの簡単な紹介"><a href="#2NTFSの簡単な紹介" class="headerlink" title="2NTFSの簡単な紹介"></a>2NTFSの簡単な紹介</h2><h3 id="2-1-NTFS"><a href="#2-1-NTFS" class="headerlink" title="2.1 NTFS"></a>2.1 NTFS</h3><p>NTFS(新技術ファイルシステム)是Windows<br>NT以降のWindowsの標準ファイルシステム。 NTFSは、ファイル割り当てテーブル(FAT)ファイルシステムを置き換え、MicrosoftのWindowsシリーズオペレーティングシステム用のファイルシステムを提供します。 NTFSは、FATおよびHPFS(High-Performance File System)にいくつかの改善を加えました。たとえば、メタデータをサポートし、高度なデータ構造を使用して、パフォーマンス、信頼性、およびディスクスペース使用率を改善します。 ^ [2] ^ </p>
<h3 id="2-2現状"><a href="#2-2現状" class="headerlink" title="2.2現状"></a>2.2現状</h3><p>NTベースのWindowsの場合<br>2000 / XPの人気により、多くの個人ユーザーがNTFSを使用し始めています。 NTFSは、データファイルを格納するためのユニットとしてクラスターも使用しますが、NTFSのクラスターサイズは、ディスクまたはパーティションのサイズに依存しません。 クラスターサイズを縮小すると、ディスクスペースの浪費が減るだけでなく、ディスクの断片化の可能性も減ります。 NTFSは、ファイル暗号化管理機能をサポートしており、ユーザーに高レベルのセキュリティ保証を提供できます。 ^ [3] ^ </p>
<h2 id="3準備"><a href="#3準備" class="headerlink" title="3準備"></a>3準備</h2><h3 id="3-1デザインのアイデア"><a href="#3-1デザインのアイデア" class="headerlink" title="3.1デザインのアイデア"></a>3.1デザインのアイデア</h3><p>ディスクのすべてのファイル名をデータとして読み取り、ユーザーが入力したキーワードに従ってデータを照合します。 ファイルを簡単に開くことができるように、正しいパスがパスとともにユーザーに返されます。 </p>
<p>具体的な設計思想を図3-1に示します。 </p>
<p>！<a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_00.jpg">図3-1デザインのアイデア</a> </p>
<p>ハッシュテーブルの最大の利点は、データの保存と検索にかかる時間が大幅に短縮されることです。これはほぼ一定の時間と見なすことができます。コストは、より多くのメモリを消費するだけです。 ただし、使用可能なメモリが増えるにつれ、スペースを時間と交換する価値があります。 また、コーディングのしやすさも特徴のひとつです。 </p>
<h3 id="3-2USNとは"><a href="#3-2USNとは" class="headerlink" title="3.2USNとは"></a>3.2USNとは</h3><p>プログラムの最優先事項は、USNを読むことです。 </p>
<p>USN是更新サービス番号ジャーナルまたは変更<br>変更された情報をNTFSボリュームに記録する機能であるJournalの略語で、パーティションで監視するファイルとディレクトリの数を設定し、監視対象の変更時間と内容を記録できます。 </p>
<p>USNログが有効になっている場合、NTFSボリュームごとに、ファイルの追加、削除、および変更に関する情報があると、NTFSはUSNログを使用して、次のように記録および保存します。<br>USN_RECORDの形式。 </p>
<h3 id="3-3なぜ速いのですか"><a href="#3-3なぜ速いのですか" class="headerlink" title="3.3なぜ速いのですか"></a>3.3なぜ速いのですか</h3><p>USNログはWORDディレクトリと同等であり、インデックスを提供します。もちろん、記事の内容が変更されると、USNログは変更が行われたときに記録されますが、変更内容は記録されないため、インデックスファイルは非常に小さくなります。 また、記事の特定の段落を見つけたい場合は、マウスホイールを大きく回す必要はなく、目次を直接見るだけで、ctrl +マウスクリックを押したままにして見つけるだけで済みます。 </p>
<p>同様に、特定のファイルを検索する場合は、USNログ(つまり、確立されたインデックス)を検索することで、そのファイルが存在するかどうかを直接確認できます。 </p>
<p>PS：Windowsは「すべてがファイル」ではありませんが(Unix / Linux<br>)の基本的な考え方の1つですが、フォルダはファイルの形式でも存在するため、USNから場所を見つけることもできます。 </p>
<h3 id="3-4環境"><a href="#3-4環境" class="headerlink" title="3.4環境"></a>3.4環境</h3><p>NTFS形式は元々Microsoftの特許であるため、アクセスに便利な一連のAPI関数が提供されています。 </p>
<p>古いが古典的なVisualC ++ 6.0として<br>プログラミングツールですが、当時はNTFS形式がなかったため、統合開発環境としてVC2005が選択され、2000年以降はWindowsシステムでのみ実行できます。 </p>
<h2 id="4プログラムの実施"><a href="#4プログラムの実施" class="headerlink" title="4プログラムの実施"></a>4プログラムの実施</h2><h3 id="4-1USNを読む"><a href="#4-1USNを読む" class="headerlink" title="4.1USNを読む"></a>4.1USNを読む</h3><p>以下は、Microsoft ^ [4] ^によって提供されるすべてのAPI関数であり、 <code>&lt;Winioctl.h&gt;</code>ヘッダーファイルに含まれています。 </p>
<h4 id="4-1-1ディスクフォーマットを決定する"><a href="#4-1-1ディスクフォーマットを決定する" class="headerlink" title="4.1.1ディスクフォーマットを決定する"></a>4.1.1ディスクフォーマットを決定する</h4><p>次の関数を呼び出して、NTFS形式のディスクを見つけます </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">GetVolumeInformation(</span><br><span class="line">	lpRootPathName: PChar;               <span class="comment">// 磁盘驱动器代码字符串</span></span><br><span class="line">	lpVolumeNameBuffer: PChar;           <span class="comment">// 磁盘驱动器卷标名称</span></span><br><span class="line">	nVolumeNameSize: DWORD;              <span class="comment">// 磁盘驱动器卷标名称长度</span></span><br><span class="line">	lpVolumeSerialNumber: PDWORD;        <span class="comment">// 磁盘驱动器卷标序列号</span></span><br><span class="line">	var lpMaximumComponentLength: DWORD; <span class="comment">// 系统允许的最大文件名长度</span></span><br><span class="line">    var lpFileSystemFlags: DWORD;        <span class="comment">// 文件系统标识</span></span><br><span class="line">	lpFileSystemNameBuffer: PChar;       <span class="comment">// 格式类型</span></span><br><span class="line">	nFileSystemNameSize: DWORD           <span class="comment">// 文件操作系统名称长度</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>必要なlpFileSystemNameBufferは、「FAT32」、「NTFS」およびその他の文字列を返します。 </p>
<p>次に、ループを使用してNTFS形式のA-Zドライブ文字をカウントし、初期化します </p>
<h4 id="4-1-2ドライブディスクハンドルを取得する"><a href="#4-1-2ドライブディスクハンドルを取得する" class="headerlink" title="4.1.2ドライブディスクハンドルを取得する"></a>4.1.2ドライブディスクハンドルを取得する</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">HANDLE hVol = CreateFile(</span><br><span class="line">	<span class="string">&quot;盘符字符串&quot;</span>,  <span class="comment">// 必须如\.\C: (A-Z)的形式</span></span><br><span class="line">	GENERIC_READ | GENERIC_WRITE, <span class="comment">// 可以为</span></span><br><span class="line">	FILE_SHARE_READ | FILE_SHARE_WRITE, <span class="comment">// 必须包含有FILE_SHARE_WRITE</span></span><br><span class="line">	<span class="literal">NULL</span>, <span class="comment">// 这里不需要</span></span><br><span class="line">	OPEN_EXISTING, <span class="comment">// 必须包含OPEN_EXISTING, CREATE_ALWAYS可能会导致错误</span></span><br><span class="line">	FILE_ATTRIBUTE_READONLY, <span class="comment">// FILE_ATTRIBUTE_NORMAL可能会导致错误</span></span><br><span class="line">	<span class="literal">NULL</span>); <span class="comment">// 这里不需要</span></span><br></pre></td></tr></table></figure>

<p>注意点： </p>
<ol>
<li>CreateFileは、以下で使用されるハンドルを返します。 </li>
<li>ドライブ文字は <code>\\。\ C：</code>の形式である必要があるため、 <code>C ++</code>言語のバックスラッシュ “//“は “/“を表します。 </li>
<li>管理者権限が必要です(vista、UACはwin7でポップアップします) </li>
</ol>
<p><code>hVol！= INVALID_HANDLE_VALUE</code>の場合、ハンドルが正常に取得され、次の手順に進むことができることを意味します。 </p>
<h4 id="4-1-3USNログの初期化"><a href="#4-1-3USNログの初期化" class="headerlink" title="4.1.3USNログの初期化"></a>4.1.3USNログの初期化</h4><p><code>DeviceIoControl</code>の制御コードとして<code>FSCTL_CREATE_USN_JOURNAL</code>を使用します。 </p>
<p><code>Cujd</code>は入力バッファへのポインタであり、<code>CREATE_USN_JOURNAL_DATA</code>構造を指します。 </p>
<h4 id="4-1-4USNログ情報の取得"><a href="#4-1-4USNログ情報の取得" class="headerlink" title="4.1.4USNログ情報の取得"></a>4.1.4USNログ情報の取得</h4><p><code>DeviceIoControl</code>の制御コードとして<code>FSCTL_QUERY_USN_JOURNAL</code>を使用します。 </p>
<p><code>lpOutBuffer</code>は構造である<code>USN_JOURNAL_DATA</code>を返します </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    DWORDLONG UsnJournalID;</span><br><span class="line">    USN       FirstUsn;</span><br><span class="line">    USN       NextUsn;</span><br><span class="line">    USN       LowestValidUsn;</span><br><span class="line">    USN       MaxUsn;</span><br><span class="line">    DWORDLONG MaximumSize;</span><br><span class="line">    DWORDLONG AllocationDelta;</span><br><span class="line">&#125; USN_JOURNAL_DATA, *PUSN_JOURNAL_DATA;</span><br></pre></td></tr></table></figure>

<p><code>UsnJournalID</code>、<code>FirstUsn</code>、 <code>NextUsn</code>は次のステップで使用されます </p>
<h4 id="4-1-5USNジャーナルファイル情報の取得"><a href="#4-1-5USNジャーナルファイル情報の取得" class="headerlink" title="4.1.5USNジャーナルファイル情報の取得"></a>4.1.5USNジャーナルファイル情報の取得</h4><p><code>USN</code>は<code>USN_RECORD</code>の形式で保存されるため、その構造は次のとおりです。 </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">	DWORD RecordLength; <span class="comment">// 记录长度</span></span><br><span class="line">	WORD MajorVersion; <span class="comment">// 主版本</span></span><br><span class="line">	WORD MinorVersion; <span class="comment">// 次版本</span></span><br><span class="line">	DWORDLONG FileReferenceNumber; <span class="comment">// 文件引用数</span></span><br><span class="line">	DWORDLONG ParentFileReferenceNumber; <span class="comment">// 父目录引用数</span></span><br><span class="line">	USN Usn; <span class="comment">// USN</span></span><br><span class="line">	LARGE_INTEGER TimeStamp; <span class="comment">// 时间戳</span></span><br><span class="line">	DWORD Reason; <span class="comment">// 原因</span></span><br><span class="line">	DWORD SourceInfo; <span class="comment">// 源信息</span></span><br><span class="line">	DWORD SecurityId; <span class="comment">// 安全</span></span><br><span class="line">	ID DWORD FileAttributes; <span class="comment">// 文件属性</span></span><br><span class="line">	WORD FileNameLength; <span class="comment">// 文件长度</span></span><br><span class="line">	WORD FileNameOffset; <span class="comment">// 文件名偏移</span></span><br><span class="line">	DWORD ExtraInfo1;</span><br><span class="line">	DWORD ExtraInfo2; DWORD ExtraInfo3; <span class="comment">// Hypothetically added in version 2.3</span></span><br><span class="line">	WCHAR FileName[<span class="number">1</span>]; <span class="comment">// 文件名第一位的指针</span></span><br><span class="line">&#125; USN_RECORD, *PUSN_RECORD;</span><br></pre></td></tr></table></figure>

<p><code>FileReferenceNumber</code>、<code>ParentFileReferenceNumber</code>、 <code>FileNameLength</code>、<code>FileName</code>に注意してください </p>
<p>これらの変数は非常に重要です </p>
<p><code>DeviceIoControl()</code>は <code>FSCTL_ENUM_USN_DATA</code>と連携します </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">0</span>!=DeviceIoControl(hVol,</span><br><span class="line">	 	FSCTL_ENUM_USN_DATA,</span><br><span class="line">	 	&amp;med,</span><br><span class="line">	 	<span class="keyword">sizeof</span> (med),</span><br><span class="line">	 	Buffer,</span><br><span class="line">	 	BUF_LEN,</span><br><span class="line">	 	&amp;usnDataSize,</span><br><span class="line">	 	<span class="literal">NULL</span>)) &#123;</span><br><span class="line"></span><br><span class="line">	 	DWORD dwRetBytes = usnDataSize - <span class="keyword">sizeof</span> (USN);</span><br><span class="line">	 	<span class="comment">// 找到第一个 USN 记录</span></span><br><span class="line">	 	UsnRecord = (PUSN_RECORD)(((PCHAR)Buffer)+<span class="keyword">sizeof</span> (USN));</span><br><span class="line"></span><br><span class="line">	 	<span class="keyword">while</span> (dwRetBytes&gt;<span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">	 		<span class="comment">// 获取到的信息</span></span><br><span class="line">	 		<span class="function">CString <span class="title">CfileName</span><span class="params">(UsnRecord-&gt;FileName, UsnRecord-&gt;FileNameLength/<span class="number">2</span>)</span></span>;</span><br><span class="line">	 		pfrnName.filename = nameCur.filename = CfileName;</span><br><span class="line">	 		pfrnName.pfrn = nameCur.pfrn = UsnRecord-&gt;ParentFileReferenceNumber;</span><br><span class="line"></span><br><span class="line">	 		<span class="comment">// Vector</span></span><br><span class="line">	 		VecNameCur.push_back(nameCur);</span><br><span class="line"></span><br><span class="line">	 		<span class="comment">// 构建hash...</span></span><br><span class="line">	 		frnPfrnNameMap[UsnRecord-&gt;FileReferenceNumber] = pfrnName;</span><br><span class="line">	 		<span class="comment">// 获取下一个记录</span></span><br><span class="line">	 		DWORD recordLen = UsnRecord-&gt;RecordLength;</span><br><span class="line">	 		dwRetBytes -= recordLen;</span><br><span class="line">	 		UsnRecord = (PUSN_RECORD)(((PCHAR)UsnRecord)+recordLen);</span><br><span class="line"></span><br><span class="line">	 	&#125;</span><br><span class="line">	 	<span class="comment">// 获取下一页数据</span></span><br><span class="line">	 	med.StartFileReferenceNumber = \*(USN \*)&amp;Buffer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>その中で、 <code>Med</code>は次のとおりです。 </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">MFT_ENUM_DATA med;</span><br><span class="line"></span><br><span class="line">med.StartFileReferenceNumber = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">med.LowUsn = <span class="number">0</span>;<span class="comment">//UsnInfo.FirstUsn;</span></span><br></pre></td></tr></table></figure>

<p>ここでテストした後、 <code>FirstUsn</code>の使用が間違っていることがあり、その結果、取得されたデータが不完全な場合は、0を直接書き込む方がよいことがわかりました。 </p>
<p><code>med.HighUsn = UsnInfo.NextUsn;</code> </p>
<p>このループでは、毎回取得されるファイル名がそれぞれベクターテーブルとハッシュテーブルに挿入されます(以下で説明)。 </p>
<h4 id="4-1-6USNログファイルの削除"><a href="#4-1-6USNログファイルの削除" class="headerlink" title="4.1.6USNログファイルの削除"></a>4.1.6USNログファイルの削除</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">DeviceIoControl(hVol,</span><br><span class="line">	FSCTL_DELETE_USN_JOURNAL,</span><br><span class="line">	&amp;dujd,</span><br><span class="line">	<span class="keyword">sizeof</span> (dujd),</span><br><span class="line">	<span class="literal">NULL</span>,</span><br><span class="line">	<span class="number">0</span>,</span><br><span class="line">	&amp;br,</span><br><span class="line">	<span class="literal">NULL</span>)</span><br></pre></td></tr></table></figure>

<h4 id="4-1-7すべてのファイルを列挙した結果"><a href="#4-1-7すべてのファイルを列挙した結果" class="headerlink" title="4.1.7すべてのファイルを列挙した結果"></a>4.1.7すべてのファイルを列挙した結果</h4><p>図4-1に示すように、分析のためにデータをAllfile.txtとして保存します。 </p>
<p>！<a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_01.jpg">図4-1 Allfile.txt</a> </p>
<p>！<a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_02.jpg">図4-1 Allfile.txt</a> </p>
<p>コンピューターのDドライブをテストとして使用し、すべてのファイルを列挙しました。 図に示すように、約40Wのファイル、合計100Wを超えるデータがあり、ファイルサイズは約20MBです。 これは、後続のプログラムによって占有されるメモリ量の漠然とした見積もりであり、約5,000万です。 1Gのメモリでも、妥当な範囲内です。 元のデータを使用した場合の分析は次のとおりです。 </p>
<p>たとえば、Linuxプログラミングpractice.iszファイル、そのシステムパスは次のとおりです。 <code>D：\ Ghost \ Linux \ Linuxプログラミングpractice.isz</code>、ファイル内の結果を見てください。 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\</span><br><span class="line">Frn: 5000000000005</span><br><span class="line">Pfrn: NULL</span><br><span class="line">……</span><br><span class="line">……</span><br><span class="line">Ghost</span><br><span class="line">Frn: 20000000000fd</span><br><span class="line">Pfrn: 5000000000005</span><br><span class="line">……</span><br><span class="line">……</span><br><span class="line">Linux</span><br><span class="line">Frn: e0000000010d2</span><br><span class="line">Pfrn: 20000000000fd</span><br><span class="line">……</span><br><span class="line">……</span><br><span class="line">Linux编程实践.isz</span><br><span class="line">Frn: 190000000003b2</span><br><span class="line">Pfrn: e0000000010d2</span><br><span class="line">可以得出：</span><br><span class="line">Linux编程实践.isz-&gt;Pfrn &#x3D;&#x3D; Linux-&gt;Frn</span><br><span class="line">Linux-&gt;Pfrn &#x3D;&#x3D; Ghost-&gt;Frn</span><br><span class="line">Ghost-&gt;Pfrn &#x3D;&#x3D; D:\ -&gt; Frn</span><br><span class="line">D:\ -&gt; Pfrn 停止</span><br></pre></td></tr></table></figure>

<p>したがって、再帰関数(直接または間接的に独自の関数を呼び出す)を使用すると、完全なパスを取得できます。 </p>
<h3 id="4-2検索データを作成する"><a href="#4-2検索データを作成する" class="headerlink" title="4.2検索データを作成する"></a>4.2検索データを作成する</h3><h4 id="4-2-1ベクトルの構築"><a href="#4-2-1ベクトルの構築" class="headerlink" title="4.2.1ベクトルの構築"></a>4.2.1ベクトルの構築</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">name_cur</span> &#123;</span></span><br><span class="line">    CString filename;</span><br><span class="line">    DWORDLONG pfrn;</span><br><span class="line">&#125;Name_Cur;</span><br></pre></td></tr></table></figure>

<p>ベクター： </p>
<p>シーケンシャルコンテナ。 ベクトル内の要素は、それらの位置インデックスを介してアクセスされます。 push_backまたはを呼び出すことができます<br>挿入関数は、ベクトルに要素を追加します。 ベクトルで<br>コンテナに要素を追加すると、コンテナのメモリスペースが再割り当てされ、すべてのイテレータが無効になる場合があります。 に<br>ベクター<br>コンテナの中央に要素を追加(または削除)すると、挿入(または削除)ポイントの後の要素を指すすべてのイテレータが無効になります。 </p>
<p>Vectorを使用して&lt;ファイル名、現在のディレクトリ&gt;を保存します。ファジー検索の要件により、ここではバイナリ検索などの高速検索方法は適用できません。Vectorの線形トラバーサル方法は最初から最後までこの要件を満たしています。 。 </p>
<h4 id="4-2-2ハッシュテーブルの作成"><a href="#4-2-2ハッシュテーブルの作成" class="headerlink" title="4.2.2ハッシュテーブルの作成"></a>4.2.2ハッシュテーブルの作成</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">pfrn_name</span> &#123;</span></span><br><span class="line">    DWORDLONG pfrn;</span><br><span class="line">    CString filename;</span><br><span class="line">&#125;Pfrn_Name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">map</span>&lt;DWORDLONG, Pfrn_Name&gt; Frn_Pfrn_Name_Map;</span><br></pre></td></tr></table></figure>

<p>ここでは、STLが提供するマップライブラリ関数^ [5] ^を使用します。マップは、キーと値のペアのコレクションです。 地図<br>タイプは通常、連想配列(連想)として理解できます。<br>array)：組み込みの配列タイプと同じように、キーを添え字として使用して値を取得できます。 関連付けの本質は、要素の値が、配列内の要素の位置によって取得されるのではなく、特定のキーに関連付けられることです。 </p>
<ol>
<li>ハッシュ関数を自分で実装する場合、進行状況に影響を与えるバグがいくつかある可能性があることを考慮すると、STLが提供する安定したマップを使用して実装することをお勧めします。 </li>
<li>「ホイールを再発明しないでください」ホイールを再発明しないでください^ [6] ^ <ol>
<li>たとえば、GoogleのAndroidでは、Googleはシステムカーネルだけを開発できないので、非常に成熟したLinuxカーネルを使用していますか？ グーグルのような世界の巨人がこの能力なしでいることは不可能だと思います。代わりに、それは車輪を再発明しないという原則を尊重します。 </li>
</ol>
</li>
</ol>
<h4 id="4-2-3データの挿入："><a href="#4-2-3データの挿入：" class="headerlink" title="4.2.3データの挿入："></a>4.2.3データの挿入：</h4><p>これは、セクション4.1.5、Get USNJournalで使用されています。<br>ファイル情報のループでは、毎回取得される「USN_RECORD」情報、「ファイル名」、<br><code>pfrn</code>、<code>frn</code>はそれぞれベクターテーブルとハッシュテーブルに挿入されます。 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pfrnName.filename &#x3D; nameCur.filename &#x3D; CfileName;</span><br><span class="line">pfrnName.pfrn &#x3D; nameCur.pfrn &#x3D; UsnRecord-&gt;ParentFileReferenceNumber;</span><br><span class="line">VecNameCur.push_back(nameCur);</span><br><span class="line">frnPfrnNameMap[UsnRecord-&gt;FileReferenceNumber] &#x3D; pfrnName;</span><br></pre></td></tr></table></figure>

<h3 id="4-3インターフェース"><a href="#4-3インターフェース" class="headerlink" title="4.3インターフェース"></a>4.3インターフェース</h3><p>プロジェクトを開始すると、VC2005はコマンドライン(コンソール)プロジェクトとGUIプロジェクトを提供します。 コマンドラインプログラミングは非常に便利で、高速で、実用的で、比較的簡単です。 コンソールが要件を満たすことができる場合、インターフェイスは必要ありません。 または、ターゲットプラットフォームがグラフィカルユーザーインターフェイスを表示できない場合があります。 だが、<br>GUIには、メニューシステムや優れた対話性など、より明白な利点があります。 さらに、メニューの選択とフィールド間でのデータの移動の過程で、<br>マウスは非常に便利で、GUIが最適です。 したがって、プログラムを作成するときは、最初にコンソールでいくつかの中間データを試し、問題なくGUIインターフェイスに切り替えました。 </p>
<p>MFC：Microsoft Foundation Classes、別名MFC<br>、「Windowsの低下に対するMicrosoftの対応<br>「プログラムデザイン、退屈、退屈、難しさ」による最大の貢献MFC<br>ダイアログボックスの生成が非常に簡単になります。 また、メッセージ配信システム(メッセージ<br>ディスパッチ)、WPARAMとLPARAMの簡単な間違いに対処します。 MFC<br>一部の人々をC ++に誘い込むのも原動力です。<br>このプログラムは、図4-2に示すように、Microsoftが提供するMFCによって実装されます。 </p>
<p>！<a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_04.jpg">図4-2 MFCインターフェイス</a> </p>
<h4 id="4-3-1KISSの原則"><a href="#4-3-1KISSの原則" class="headerlink" title="4.3.1KISSの原則"></a>4.3.1KISSの原則</h4><p>KISSの原則は、「サンプルを保持し、<br>「Stupid」の略、シンプルさと操作のしやすさは、デザインの最も重要な原則です。 </p>
<p>KISSの原則は、おそらくデザイン、住宅改修デザイン、インターフェースデザインで最も尊敬されています<br>運用設計に関しては、複雑なものがますます普及し、単純なものがますます認識されるようになっています。たとえば、これらのUI設計や中国のWebページは否定的な例です。 「IKEA」(IKEA)シンプルで効率的な家の設計と生産のアイデア;「Microsoft」(Microsoft)「あなたが見るものはあなたが得るものである」コンセプト;「Google」(Google)シンプルで直接的なビジネススタイル、例外なく、 「キス」の原則。 ^ [7] ^ </p>
<h4 id="4-3-2機能"><a href="#4-3-2機能" class="headerlink" title="4.3.2機能"></a>4.3.2機能</h4><p>キスの原則の下で、できるだけ簡潔にしてください。 編集ボックスボタンリストボックスを追加<br>menu ^ [8] ^これらのコントロールの機能は次のとおりです。 </p>
<ul>
<li>エディットボックス <ul>
<li>ユーザーが検索する必要のある文字列を取得します </li>
</ul>
</li>
<li>ボタン <ol>
<li>EditBoxで文字列を取得します </li>
<li>文字が短すぎてプロンプトをポップアップできません </li>
<li>拡大ガラスの写真を追加すると、機能が一目でわかります </li>
</ol>
</li>
<li>リストボックス <ol>
<li>一致するファイル名とパスを表示し、ダブルクリックしてファイルを開きます </li>
<li>パスが比較的長い可能性があるため、水平スクロールバーを追加します </li>
<li>リストボックスで結果ファイルのパスをダブルクリックして、ダブルクリックしたファイルを開きます </li>
</ol>
</li>
<li>メニュー <ul>
<li>メニュー、ケース、検索順序を選択できます </li>
</ul>
</li>
</ul>
<h3 id="4-4スレッドに参加"><a href="#4-4スレッドに参加" class="headerlink" title="4.4スレッドに参加"></a>4.4スレッドに参加</h3><h4 id="4-4-1スレッドに参加する理由"><a href="#4-4-1スレッドに参加する理由" class="headerlink" title="4.4.1スレッドに参加する理由"></a>4.4.1スレッドに参加する理由</h4><p>スレッドの利点：スレッドは安価です。 スレッドはより速く開始し、より速く終了し、システムリソースへの影響は小さくなります。 </p>
<p>また、考慮してください： </p>
<ol>
<li>ioの制限により、同じハードディスク上で複数のスレッドを使用してMFTを同時に読み取ることはあまり意味がありません。 </li>
<li>同じハードディスクの異なるパーティションにあるMFTへのディスクアクセスは、代わりに速度に影響を与える可能性があります。 複数のハードドライブを備えたコンピューターの場合、効率を大幅に向上させる必要があります。 ただし、複数のハードドライブのユーザーがRAIDアレイを形成する場合があります。 最善の解決策は、A〜Zディスクを順番に読み取ることです。 </li>
<li>MFCが最初に作成されたとき、それは順番に実行されます。その結果、インターフェイスはすべてのデータ統計が完了した後にのみ表示できます。このプロセスでは、ユーザーは簡単に忍耐力を失います。 </li>
<li>最後に、UIスレッド、ワーカースレッドのバックグラウンド統計を決定します。 </li>
</ol>
<h4 id="4-4-2MFCでワーカースレッドを開始する"><a href="#4-4-2MFCでワーカースレッドを開始する" class="headerlink" title="4.4.2MFCでワーカースレッドを開始する"></a>4.4.2MFCでワーカースレッドを開始する</h4><p>MFCは、マルチスレッドのサポートを長い間追加してきました。 典型的なMFCでは<br>プログラムでは、マルチスレッドのサポートは多くの素晴らしい仕事の背後に隠されています。 MFC<br>マルチスレッドに関連する特定のWin32の概念を強化しようとさえします。 </p>
<p>GUIスレッドとワーカースレッドはどちらもAfxBeginThread()で開始されますが、MFCはC ++関数のオーバーロードの性質を使用して、この関数に2つの異なる宣言を提供します。 コンパイラは、指定されたパラメータに基づいて、使用する正しいものを自動的に選択します。 ^ [9] ^ </p>
<p>AfxBeginThreadを使用してスレッドを開始します。<br>pParam新しいスレッドに渡すために使用される任意の4バイト値。 整数、ポインタ、またはゼロにすることができます。 </p>
<p>ここでは、最初の2つのパラメーター、オブジェクトのスレッド関数、およびオブジェクトポインターのみが使用されます。 </p>
<p>図4-3に示すように、タスクマネージャに2つのスレッドが表示されます。 </p>
<p>！<a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_03.jpg">図4-3タスクマネージャーにスレッド数が表示されます</a> </p>
<p>ワーカースレッドがタスクを終了すると、自動的に終了してスレッドに戻ります。 </p>
<h4 id="4-4-3通知領域に最小化する"><a href="#4-4-3通知領域に最小化する" class="headerlink" title="4.4.3通知領域に最小化する"></a>4.4.3通知領域に最小化する</h4><p>現在、ますます多くのプログラムが右上隅で閉じるをクリックします。これは実際にはトレイアイコンに最小化されています。 プログラムを終了するには、トレイアイコンを右クリックして終了する必要があります。 </p>
<p>プログラムを終了せずに最小化を実現すると、ファイルを簡単に見つけることができます。 </p>
<p>1)タスクバーの表示を最小化します。 </p>
<p>2)[閉じる]をクリックして、タスクバーに表示せずにトレイアイコンを終了します。ダブルクリックして、表示ウィンドウに返信します。 </p>
<p>3)トレイアイコンにメニューを追加します。 </p>
<h3 id="4-5検索"><a href="#4-5検索" class="headerlink" title="4.5検索"></a>4.5検索</h3><h4 id="4-5-1ワイルドカード"><a href="#4-5-1ワイルドカード" class="headerlink" title="4.5.1ワイルドカード"></a>4.5.1ワイルドカード</h4><p>実際のアプリケーションでは、test.2012-5-14.txtのように、ファイル名を明確に覚えることはできません。これは、「テスト」を意味することがよくあります。<br>.txt」であるため、ファジー検索が必要です。コンソールでは、ファイル名は&lt;filename、<br>pfrn&gt;ハッシュテーブルを作成します。ファジー検索を実装する場合、ハッシュテーブルは不要になります。コンテナベクトルを直接使用できます。 </p>
<p>実際の状況によると、厳密なワイルドカードは必要ありません、「\ *？」<br>検索の問題のほとんどを解決できます。さらに、ユーザーは通常、通常の式はもちろん、ワイルドカードの使用を知らない場合があります。 だから「スペース」から始めましょう<br>「\ *？」の代わりに、Baiduを実装します<br>キーワードをスペースで区切るGoogleの検索方法は良い解決策です。 \ * \ * \ * \ * </p>
<h4 id="4-5-2ケース、注文"><a href="#4-5-2ケース、注文" class="headerlink" title="4.5.2ケース、注文"></a>4.5.2ケース、注文</h4><p>一般に、次の2つの状況があります。 </p>
<ol>
<li>ユーザーはファイル名またはパスの大文字と小文字を覚えていない可能性があります </li>
<li>ファイルが多すぎる場合があり、正しいファイルをフィルタリングするには厳密な大文字化が必要になる場合があります </li>
<li>キーワードの順序を思い出せない </li>
</ol>
<p>したがって、次の2つのオプションを提供します。 </p>
<ol>
<li>厳格なケース </li>
<li>注文なし </li>
</ol>
<p>一般的な状況によると、デフォルトは次のとおりです。大文字と小文字を区別しない順次検索 </p>
<h4 id="4-5-3ユーザーのプライバシーとシステムパス"><a href="#4-5-3ユーザーのプライバシーとシステムパス" class="headerlink" title="4.5.3ユーザーのプライバシーとシステムパス"></a>4.5.3ユーザーのプライバシーとシステムパス</h4><ol>
<li>一部のフォルダは、ユーザーのプライベートファイルを保存するために使用されることを考慮してください。 </li>
<li><code>c：\ windows \ *</code>などのシステムフォルダは、通常のユーザーは使用しません。同じ検索を行うと、不要なファイルが増えるだけで、システムに負担がかかります。 </li>
</ol>
<p>したがって、図4-4に示すように、フォルダの除外オプションを追加する必要があります。 </p>
<p>！<a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_06.jpg">図4-4フォルダインターフェイスの除外</a> </p>
<p>対応する関数は次のとおりです。 </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isIgnore</span><span class="params">( <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;\* pignorelist )</span> </span>&#123;</span><br><span class="line">	<span class="built_in">string</span> tmp = CW2A(path);</span><br><span class="line">	<span class="keyword">for</span> ( <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;::iterator it = pignorelist-&gt;begin();</span><br><span class="line">		it != pignorelist-&gt;end(); ++it ) &#123;</span><br><span class="line">			<span class="keyword">size_t</span> i = it-&gt;length();</span><br><span class="line">			<span class="keyword">if</span> ( !tmp.compare(<span class="number">0</span>, i, \*it,<span class="number">0</span>, i) ) &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-5-4実装"><a href="#4-5-4実装" class="headerlink" title="4.5.4実装"></a>4.5.4実装</h4><p>新しい一致する文字列クラス </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cmpStrStr</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	cmpStrStr(<span class="keyword">bool</span> uplow, <span class="keyword">bool</span> inorder) &#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;uplow = uplow;</span><br><span class="line">		<span class="keyword">this</span>-&gt;isOrder = inorder;</span><br><span class="line">	&#125;</span><br><span class="line">	~cmpStrStr() &#123;&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">cmpStrFilename</span><span class="params">(CString str, CString filename)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">infilename</span><span class="params">(CString &amp;strtmp, CString &amp;filenametmp)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">bool</span> uplow;</span><br><span class="line">	<span class="keyword">bool</span> isOrder;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>** 4.2.1 **でVecNameCurをトラバースし、cmpStrFilenameマッチング関数を渡して、マッチングファイル名を取得します </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ( <span class="built_in">vector</span>&lt;Name_Cur&gt;::const_iterator cit = VecNameCur.begin();</span><br><span class="line">	cit != VecNameCur.end(); ++cit) &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( cmpstrstr.cmpStrFilename(str, cit-&gt;filename) ) &#123;</span><br><span class="line">		path.Empty();</span><br><span class="line">		<span class="comment">// 还原 路径</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">// vol:\  path \ cit-&gt;filename</span></span><br><span class="line">		getPath(cit-&gt;pfrn, path);</span><br><span class="line">		path += cit-&gt;filename;</span><br><span class="line">		<span class="comment">// path已是全路径</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> ( isIgnore(pignorelist) ) &#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		rightFile.push_back(path);</span><br><span class="line">		<span class="comment">//path.Empty();</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cmpStrFilename函数：</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> end = str.GetLength();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ( pos &lt; end ) &#123;</span><br><span class="line">	<span class="comment">// 对于str，取得 每个空格分开为的关键词</span></span><br><span class="line">	pos = str.Find( _T(<span class="string">&#x27; &#x27;</span>) );</span><br><span class="line"></span><br><span class="line">	CString strtmp;</span><br><span class="line">	<span class="keyword">if</span> ( pos == <span class="number">-1</span> ) &#123;</span><br><span class="line">		<span class="comment">// 无空格</span></span><br><span class="line">		strtmp = str;</span><br><span class="line">		pos = end;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		strtmp = str.Mid(<span class="number">0</span>, pos<span class="number">-0</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( !infilename(strtmp, filename) ) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	str.Delete(<span class="number">0</span>, pos);</span><br><span class="line">	str.TrimLeft(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>infilename関数の文字列照合アルゴリズムを簡単に書き直して、いくつかの拡張を実現できます </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">CString <span class="title">filenametmp</span><span class="params">(filename)</span></span>;</span><br><span class="line"><span class="keyword">int</span> pos;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( !uplow ) &#123;</span><br><span class="line">	<span class="comment">// 大小写敏感</span></span><br><span class="line">	filenametmp.MakeLower();</span><br><span class="line">	pos = filenametmp.Find(strtmp.MakeLower());</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	pos = filenametmp.Find(strtmp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="number">-1</span> == pos ) &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( !isOrder ) &#123;</span><br><span class="line">	<span class="comment">// 无顺序</span></span><br><span class="line">	filename.Delete(<span class="number">0</span>, pos+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-5-5パス出力"><a href="#4-5-5パス出力" class="headerlink" title="4.5.5パス出力"></a>4.5.5パス出力</h4><p>一致するファイル名を取得したら、次のステップはファイルのシステムパスを取得することです。 上記で取得した一致するファイル名のフルネームを** 4.2.2 **で作成されたfrnPfrnNameMapハッシュテーブルに渡し、パスを再帰的に取得します。 </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">CString <span class="title">Volume::getPath</span><span class="params">(DWORDLONG frn, CString &amp;path)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 查找2</span></span><br><span class="line">	Frn_Pfrn_Name_Map::iterator it = frnPfrnNameMap.find(frn);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (it != frnPfrnNameMap.end()) &#123;</span><br><span class="line"></span><br><span class="line">		  <span class="keyword">if</span> ( <span class="number">0</span> != it-&gt;second.pfrn ) &#123;</span><br><span class="line">		 	  getPath(it-&gt;second.pfrn, path);</span><br><span class="line">		  &#125;</span><br><span class="line"></span><br><span class="line">		  path += it-&gt;second.filename;</span><br><span class="line">		  path += ( _T(<span class="string">&quot;\&quot;) );</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	return path;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="5複雑さの分析"><a href="#5複雑さの分析" class="headerlink" title="5複雑さの分析"></a>5複雑さの分析</h2><h3 id="5-1時間の複雑さ"><a href="#5-1時間の複雑さ" class="headerlink" title="5.1時間の複雑さ"></a>5.1時間の複雑さ</h3><p>理論的には、時間の複雑さは次のとおりです。 </p>
<p>！<a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_05.jpg">図5-1複雑性分析</a> </p>
<p>AMD Athlon(tm)II X2 245 2.9GHzプロセッサでは、結果はほぼ瞬時に発生します。 </p>
<h3 id="5-2スペースの複雑さ"><a href="#5-2スペースの複雑さ" class="headerlink" title="5.2スペースの複雑さ"></a>5.2スペースの複雑さ</h3><p>コンピュータファイルの数が膨大なため(通常は10W〜100W)、プログラム自体のメモリ使用量は無視できます。 </p>
<p>約43Mの234,708ファイル。 </p>
<p>今日、少なくとも2Gのメモリを備えたシステムの場合、それは負担ではありません。 </p>
<h2 id="6発生した問題"><a href="#6発生した問題" class="headerlink" title="6発生した問題"></a>6発生した問題</h2><h3 id="6-1USNファイルを初期化できません"><a href="#6-1USNファイルを初期化できません" class="headerlink" title="6.1USNファイルを初期化できません"></a>6.1USNファイルを初期化できません</h3><p>コンピューター上のOディスクはUSNログファイルを初期化できません。デバッグにより、次のことがわかります。 </p>
<p>DeviceIoControlは0、GetLastError0x70を返します </p>
<p>msdnを確認してください。理由はERROR_SHARING_PAUSEDです。 </p>
<p>次のコードを初期化して追加するのを忘れたことがわかりました。プログラムはOディスクに正常にアクセスできます。 </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">CREATE_USN_JOURNAL_DATA cujd;</span><br><span class="line">cujd.MaximumSize = <span class="number">0</span>; <span class="comment">// 0表示使用默认值</span></span><br><span class="line">cujd.AllocationDelta = <span class="number">0</span>; <span class="comment">// 0表示使用默认值</span></span><br></pre></td></tr></table></figure>

<h3 id="6-2ユニコードでのwcharとcharの問題"><a href="#6-2ユニコードでのwcharとcharの問題" class="headerlink" title="6.2ユニコードでのwcharとcharの問題"></a>6.2ユニコードでのwcharとcharの問題</h3><p>当初、文字列処理に関しては、標準のライブラリ関数文字列が処理方法として使用されていましたが、ユニコードで使用されていました。<br>以下は、文字列変換で多くの問題が発生した2バイトのwcharです。最後に、CStringがデフォルトの文字列として使用され、\ _ T( “”)が文字列の初期化に使用されます。 </p>
<h3 id="6-3＃ifdef位置の問題"><a href="#6-3＃ifdef位置の問題" class="headerlink" title="6.3＃ifdef位置の問題"></a>6.3＃ifdef位置の問題</h3><p>\ #ifdef、ブレークポイントを設定できません。その後、includeの前に#defineが記述されていることに気付きました。 </p>
<h3 id="6-4パラメータ転送"><a href="#6-4パラメータ転送" class="headerlink" title="6.4パラメータ転送"></a>6.4パラメータ転送</h3><p>当初はプロセス指向の考え方で設計されていましたが、パラメータを渡して同じハンドルを渡すのに苦労しましたが、その後、クラスメソッドに変更して大幅に改善しました。 </p>
<h2 id="7つの小さな最適化"><a href="#7つの小さな最適化" class="headerlink" title="7つの小さな最適化"></a>7つの小さな最適化</h2><h3 id="7-1読み取り速度"><a href="#7-1読み取り速度" class="headerlink" title="7.1読み取り速度"></a>7.1読み取り速度</h3><p>ハッシュ関数を作成する際に、3つの方法を考え、それぞれ実験を行い、時間関数を使用して費やした時間をカウントしました。結果は次のとおりです。 </p>
<p>1)コードを変更した後、usnを一度読み取り、一時ファイルに保存し、ハッシュテーブルを読み取って作成します。 </p>
<p>各実行、平均時間は約27秒です </p>
<p>2)リリース後、ベクターを使用してデータをメモリに保存します。 </p>
<p>結果は満足のいくものであり、時間はほぼ10倍に増加しました！ ！ ！ 図7-1に示すように： </p>
<p>！<a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_06.jpg">7-1すべてのディスクをトラバースする</a> </p>
<p>完全に許容範囲内です。 </p>
<p>最初の実行には明らかに時間がかかり、その後ファイルがディスクキャッシュから事前に読み取られ、速度が急上昇しました。 分析のホットスポットは、ディスクのシーク時間とファイルの読み取りにあるはずです。 </p>
<h3 id="7-2ファイルを開く方法"><a href="#7-2ファイルを開く方法" class="headerlink" title="7.2ファイルを開く方法"></a>7.2ファイルを開く方法</h3><p>** 4.3.2 **で、リストボックスのファイルパスをダブルクリックして応答ファイルを開きます。最初はsystem()システム関数を使用していましたが、黒いコンソールウィンドウがポップアップし、メインウィンドウがロックされます。 実行は、ファイルが閉じられた後にのみ続行できます。これは、ユーザーエクスペリエンスに非常に悪影響を及ぼします。 代わりにShellExecute関数を呼び出して新しいプロセスを開くと、メインウィンドウは引き続き実行できます。 </p>
<h3 id="7-3プログレスバー"><a href="#7-3プログレスバー" class="headerlink" title="7.3プログレスバー"></a>7.3プログレスバー</h3><p>V1.0バージョンがリリースされた後、一部の学生がバックグラウンド統計ファイルを報告したときにプロンプ​​トが表示されなかったため、いつ完成するかわかりません。 そのため、図に示すように、メインインターフェイスの下部に進行状況バーが追加され、インタラクティブ性が強化されます。<br>7-2： </p>
<p>！<a href="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_07.jpg">図7-2進行状況バー</a> </p>
<p>もちろん、スレッド関数も必要な変更を加えました。 </p>
<h1 id="8結論"><a href="#8結論" class="headerlink" title="8結論"></a>8結論</h1><p>この時点で、プログラムの基本機能は完了しています。複数のコンピューターと異なるシステム(XP以降のWindowsシリーズ)でのテストでは、基本的にアニメーションが中断されたり、プログラムがハングしたりすることはありません。 </p>
<p>時間などの理由により、インターフェースを拡張できない、ファイルデータを動的に収集できないなど、まだ実装されていない機能が多数あります。 </p>
<h1 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h1><p>[1]ハードウェアホワイトペーパー。NTFSファイルシステム仕様[OL]。BaiduLibrary、2011：30。<br>[2]Beiyu。NTFSファイルシステムのいくつかの技術に関する研究[OL]。2007：7。<br>[3]赤ちゃん。インタラクティブ百科事典[OL]。http：//<a href="http://www.hudong.com/wiki/ntfs">www.hudong.com/wiki/ntfs</a><br>[4]マイクロソフト。 MSDNライブラリ[OL]。 2012年：<br>[5]スタンリーB.リップマン/ホセラジョワ/バーバラE.モー。 C \ + \ +プライマー[M]。 Addison-Wesley Professional、2006年：10.3<br>[6] Eric S. Raymond。翻訳者：Jiang Hong、He Yuan、CaiXiaojun。UNIXプログラミングの芸術[m]。PublishingHouseofElectronics Industry、2006年：<br>[7] ChenHao。ソフトウェア設計のいくつかの原則[OL]。http：//coolshell.cn/articles/4535.html<br>[8]SunXin。VC++の詳細な説明[m]。ElectronicsIndustry、2006<br>[9]ジム・ベヴェリッジ/ロバート・ウィーナー。 Win32のマルチスレッドアプリケーション：スレッドの完全ガイド<br>[10] Addison-Wesley Professional、1996：223-243 </p>
<h1 id="英語の要約"><a href="#英語の要約" class="headerlink" title="英語の要約"></a>英語の要約</h1><p>** NTFSディスクファイルの迅速な配置** </p>
<p>LEIHオーストリア </p>
<p>(安徽農業大学合肥230036情報・コンピューター学部) </p>
<p><strong>要約</strong>：この記事では、WindowsNTFSディスクについて説明します。<br>ハードディスク上のファイルとフォルダのすべての名前を列挙します。<br>C ++ STL、MFC GUI、およびワーカースレッドを使用してハッシュテーブルを作成します。<br>最終的にユーザーはグーグルのような単純な検索としてキーワードを入力します<br>キーワード検索、そして即座にすべての一致するファイル/フォルダを返します<br>およびそれらのシステムパス。 </p>
<p><strong>キーワード：</strong> NTFS、高速、検索、キーワード、ファイルパス </p>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>Everything</tag>
        <tag>NTFS</tag>
      </tags>
  </entry>
  <entry>
    <title>🇮🇹-0-2</title>
    <url>/ja/italy-0-2/</url>
    <content><![CDATA[<h2 id="バチカン"><a href="#バチカン" class="headerlink" title="バチカン"></a>バチカン</h2><p>イタリアのオリジナルバチカン<br>この地域は国内大学や大学よりも少ない<br>領土は開いていません<br>美術館に加えて </p>
<a id="more"></a>

<h3 id="エジプト"><a href="#エジプト" class="headerlink" title="エジプト"></a>エジプト</h3><p>私はミイラがより恐ろしいと感じることを見ました。<br>撮影してください<br>私は魂を追うことを恐れています </p>
<p>Nosbisもあります </p>
<p>あなたがAssassinの信条を演奏するなら：原産地<br>たくさんの身近な要素を見るでしょう </p>
<h3 id="神話の英雄"><a href="#神話の英雄" class="headerlink" title="神話の英雄"></a>神話の英雄</h3><p>残念ながら、小さな魔術師は芸術栽培における対応するレベルに達していません。<br>私はこれらの教科書の芸術を見ました、そして結果は誰が誰であるかわからなかった。<br>恥ずかしい </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-06.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-10.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-14.jpg" alt=""></div></div></div>

<h3 id="パインアートガーデン＆壊れた地球"><a href="#パインアートガーデン＆壊れた地球" class="headerlink" title="パインアートガーデン＆壊れた地球"></a>パインアートガーデン＆壊れた地球</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-17.jpg" alt=""></div></div></div>

<h3 id="ロイの穴とその息子"><a href="#ロイの穴とその息子" class="headerlink" title="ロイの穴とその息子"></a>ロイの穴とその息子</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-28.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-25.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-27.jpg" alt=""></div></div></div>

<h3 id="展示場ホール"><a href="#展示場ホール" class="headerlink" title="展示場ホール"></a>展示場ホール</h3><p>中央センターは、Nero、Neroで使用されているビデです。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-29.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-31.jpg" alt=""></div></div></div>

<h3 id="壁画"><a href="#壁画" class="headerlink" title="壁画"></a>壁画</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-37.jpg" alt=""></div></div></div>

<h3 id="ラファエル絵画室"><a href="#ラファエル絵画室" class="headerlink" title="ラファエル絵画室"></a>ラファエル絵画室</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-39.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-40.jpg" alt=""></div></div></div>

<h3 id="Sistin-Chapel"><a href="#Sistin-Chapel" class="headerlink" title="Sistin Chapel"></a>Sistin Chapel</h3><p>Michelangeloの最終的な試みと創世記<br>写真を撮ることはできません<br>あなたは1人あたり15分だけ滞在することができます。 </p>
<p>通常、実際には最も中間、実際には9世紀が普通の世紀があります。<br>暗闇、クリエイティブな日、月、草、Semland、アダムの作成、イブ、オリジナルの罪 - 拡張エデン、ノア献身、素晴らしい洪水、Naahirun </p>
<h3 id="らせん階段"><a href="#らせん階段" class="headerlink" title="らせん階段"></a>らせん階段</h3><p>輸出は衝撃を受け続けています<br>ここにいることが判明しました </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-41.jpg" alt=""></div></div></div>

<h3 id="聖カップ"><a href="#聖カップ" class="headerlink" title="聖カップ"></a>聖カップ</h3><p>運命滞在夜 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-44.jpg" alt=""></div></div></div>

<h2 id="セントピータースクエア"><a href="#セントピータースクエア" class="headerlink" title="セントピータースクエア"></a>セントピータースクエア</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-45.jpg" alt=""></div></div></div>

<h2 id="エンジェルフォート"><a href="#エンジェルフォート" class="headerlink" title="エンジェルフォート"></a>エンジェルフォート</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-47.jpg" alt=""></div></div></div>

<p>突然アサシンの信条 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-53.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-54.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-55.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-56.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-57.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-58.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-59.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-60.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-61.jpg" alt=""></div></div></div>

<h2 id="日没"><a href="#日没" class="headerlink" title="日没"></a>日没</h2><p>初めて夕日を見ています </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-62.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-66.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-67.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-69.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-68.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-70.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-71.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-73.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-74.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-76.jpg" alt=""></div></div></div>

<h2 id="次の日"><a href="#次の日" class="headerlink" title="次の日"></a>次の日</h2><p>道路上、弟は一日のツアーバスを推薦するようになる<br>チケットを手に入れるためにお金を受け取り、それから人々は消えた<br>私が嘘つきだと思ったとき、私の弟は2票で戻ってきました。<br>ループ、あなたは常にバスで降りることができます、またはとても良い </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-78.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-79.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-82.jpg" alt=""></div></div></div>

<h2 id="パンテオン"><a href="#パンテオン" class="headerlink" title="パンテオン"></a>パンテオン</h2><p>人が多すぎると、私は外側を見ました。 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-80.jpg" alt=""></p>
<h2 id="ローマの戦いの獣"><a href="#ローマの戦いの獣" class="headerlink" title="ローマの戦いの獣"></a>ローマの戦いの獣</h2><p>スコーピオ、最後に私が獣を見たとき、リトルマージはアサシンの信条を再生しました：黙示録<br>獣を登る、夕日を見てください<br>私は長い間ショックを受けました。<br>私はそれを三次元の世界でそれを見ることを期待していませんでした。<br>それは素晴らしいですか？ </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-92.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-86.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-91.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-89.jpg" alt=""></div></div></div>

<h2 id="Arc-de-Triomphe"><a href="#Arc-de-Triomphe" class="headerlink" title="Arc de Triomphe"></a>Arc de Triomphe</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-87.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-88.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-90.jpg" alt=""></p>
<h2 id="エルメス小さな財布"><a href="#エルメス小さな財布" class="headerlink" title="エルメス小さな財布"></a>エルメス小さな財布</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-94.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-95.jpg" alt=""></div></div></div>

<p>CBDの高級ビルディングストリートに戻る<br>HERUBERED LOVE MA SHI BAGを購入することをお勧めします<br>贅沢にあるものを言うと、それはまた最高の存在です </p>
<p>リトルマージは、アップルがストラップを発売する前にヘルメスを聞いていませんでした。<br>自然には信じていません<br>私はそれを読みたいです、私にうそをつくな。<br>グーグルに行く「エルメスは贅沢ではありません」<br>かもしれないかもしれないことを見つけるために驚いた </p>
<p>それを磨き、私は子犬のパックを買いました。<br>空白のボックスに注意してください<br>チェックアウトすると、その隣のゴミ山の中の巨大な比類のないボックスが表示されます。 </p>
<h2 id="空港"><a href="#空港" class="headerlink" title="空港"></a>空港</h2><p>ずっと拷問を受けて、私はついに戻ってきました。<br>日本とは異なり、ヨーロッパは空港で払い戻すことができます<br>ぴんぴん </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-97.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-98.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Italy</tag>
        <tag>🇮🇹</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-1-0</title>
    <url>/ja/japan-1-0/</url>
    <content><![CDATA[<h1 id="京都"><a href="#京都" class="headerlink" title="京都"></a>京都</h1><p>11の休日は🇮🇹から戻ってきました<br>クレジットカードがブラッシングされているため、中国商人銀行がZhang Premiumに送られたため </p>
<p>半月後に1日、メープルの葉を見るために小さな魔術が日本に送られます。<br>ルートプランニングが行われたことを示します<br>京都 -&gt; 奈良 -&gt; 城崎 -&gt; 大阪<br>システムには良くない場合は偽造してください。 </p>
<p>小さなマスターは関西地域を見ています、私はそこにいませんでした。<br>すぐに、6月は3年間の往復ビザです。<br>あなたも一緒に行くことができます </p>
<p>わずか2週間ですが、時間はより緊急です<br>幸いなことに、チケットを購入し、狂った、2週間をやる、事前にタスクを完了<br>コードを組織に提出した後、あなたは2番目の日本語を始めました </p>
<p>私はまだそれを見る方法がわからない。<br>私が空港に到着したとき、私はこの単一の小飛行機を見たとき、私は愚かだった。<br>それはちょうどボーイング737です<br>最大イベントはまだ発生していませんが<br>しかし、それはまだ海に落ちる場所が飛ぶことを飛ぶことを心配しています。<br>失われた本線を開く </p>
<a id="more"></a>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-02.webp" alt=""></div></div></div>

<h2 id="京都地下鉄駅"><a href="#京都地下鉄駅" class="headerlink" title="京都地下鉄駅"></a>京都地下鉄駅</h2><p>同じプラットフォームの前回のプラットフォームの前回 </p>
<p>小さな魔術師はまだ初めて、地下鉄駅は巨大なモールです。<br>合計7階、もっと食べる<br>11月の初めにのみ、クリスマスでいっぱいになっています。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-05.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-08.webp" alt=""></div></div></div>

<h2 id="ゴールデンパビリオンテンプル"><a href="#ゴールデンパビリオンテンプル" class="headerlink" title="ゴールデンパビリオンテンプル"></a>ゴールデンパビリオンテンプル</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-12.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-10.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-11.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-15.webp" alt=""></div></div></div>

<h2 id="京都御苑"><a href="#京都御苑" class="headerlink" title="京都御苑"></a>京都御苑</h2><p>赤緑色の間に特別な黄色い葉の木があります </p>
<blockquote>
<p>ヘッドレス </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-23.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-24.webp" alt=""></div></div></div>

<p>来る時間、誰もいません </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-20.webp" alt=""></div></div></div>

<h2 id="清水寺"><a href="#清水寺" class="headerlink" title="清水寺"></a>清水寺</h2><p>着物の姉妹を見てください </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-28.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-32.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-33.webp" alt=""></div></div></div>

<h2 id="高台寺"><a href="#高台寺" class="headerlink" title="高台寺"></a>高台寺</h2><p>結婚式の撮影で家族に触れる </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-35.webp" alt=""></div></div></div>

<p>夕日と奇妙な蛇口 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-36.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-38.webp" alt=""></div></div></div>

<p>多くの人々が崇拝仏の神を求めていることを見て<br>小さな魔術師もコインロックを唱えるつもりです。<br>私はアプリがオンラインであることを願っています、クラッシュしないでください♥ </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-41.webp" alt=""></div></div></div>

<h2 id="ルサンの小電車"><a href="#ルサンの小電車" class="headerlink" title="ルサンの小電車"></a>ルサンの小電車</h2><p>翌朝、朝早くLushanの小電車に行きました。風景は絵のようなものだと言われています。<br>ただし、必ず山の側面を購入してください。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-47.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-49.webp" alt=""></div></div></div>

<h2 id="嵯峨野竹林小径"><a href="#嵯峨野竹林小径" class="headerlink" title="嵯峨野竹林小径"></a>嵯峨野竹林小径</h2><p>st st </p>
<p>これは京都のパンフレットで見られる竹林です。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-57.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-52.webp" alt=""></div></div></div>

<blockquote>
<p>深い森に背景、苔をコピーします </p>
</blockquote>
<p>こちらのコケは素晴らしい、一度小さな魔術師の携帯電話の壁紙 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-92.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-93.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-54.webp" alt=""></div></div></div>

<p>シフト </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-62.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-63.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-64.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-65.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-67.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-68.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-69.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-70.webp" alt=""></div></div></div>

<p>珠江首相の詩 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-73.webp" alt=""></div></div></div>

<p>あなたは人間の車をやることができます。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-78.webp" alt=""></div></div></div>

<p>それはたくさんの枯れたものですが<br>こっぱでも赤も美しいとしても、それは勝ちません。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-76.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-81.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-82.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-83.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-84.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-85.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-86.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-87.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-88.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-89.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-90.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-91.webp" alt=""></div></div></div>

<p>東京の街の風景とは異なります </p>
<p>京都での風景も爆発的です。 </p>
<p>次回、私は一緒に姉の紙を取ります。<br>小さなマスターが考えています </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-1-1</title>
    <url>/ja/japan-1-1/</url>
    <content><![CDATA[<h2 id="千鳥"><a href="#千鳥" class="headerlink" title="千鳥"></a>千鳥</h2><p>これは何千もの鳥と呼ばれていることがわかりました。 </p>
<p>登る<br>小さな魔術師はまだ来ていると言った、それは山の上に登るのが良いです。<br>しかし、それは小さなものではありません。<br>地図を見下ろした、千の鳥はほぼ小さかった、小さな魔術がたくさんの画像を感じました。<br>それはまだ山の真ん中にあるようです、あなたが最近登るならば、私は残りの旅程を遅らせる必要があることを恐れています。<br>だから山を降りるだけです。 </p>
<p>私は後で戻ってきました、私はあまり距離がないことを学びました。<br>鳥が本当にあるので、それが少ない </p>
<a id="more"></a>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-04.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-11.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-10.webp" alt=""></div></div></div>

<p>誰もがQingquanによって手を洗っています<br>携帯電話によって洗われた小さなマスター。<br>私は来たいとき私は恐れています。<br>幸福があるかどうかわからない<br>まだ人々の周りの人々によって破裂していない </p>
<p>竹 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-17.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-16.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-15.webp" alt=""></div></div></div>

<p>夕食、ワインハウスは、地元の人がおしゃべりしてリラックスしている場所です。<br>ワインと比較して、それはまだ良い飲み物です。<br>スーパーマーケットの隣に販売されるさまざまなコミックマガジンが一緒に売る </p>
<h2 id="城崎温泉-♨️"><a href="#城崎温泉-♨️" class="headerlink" title="城崎温泉 ♨️"></a>城崎温泉 ♨️</h2><p>翌日、街の街に行くために小さな電車をしなさい。<br>小さなマスターは温泉を気にしませんでした。<br>しかし、Northernerとして、私は来たいと思います。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-20.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-21.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-22.webp" alt=""></div></div></div>

<h2 id="真正的温泉-♨️"><a href="#真正的温泉-♨️" class="headerlink" title="真正的温泉 ♨️"></a>真正的温泉 ♨️</h2><p>しかし、事実は想像を超えています </p>
<p>まず第一に、温泉は屋外の空気を持っています、池、秋の風の葉、そして雪が降る<br>暖かい春の水に泡立ち、あまりにも幸せにならないで </p>
<p>小さな魔術師は、彼らが到着する前に小さな魔術師が千鳥を強制した。<br>節プロペルスの痛みは畳でのみクロールすることができます </p>
<p>温泉の後、それは魔法のように見えた。 </p>
<p>上記だけではありません<br>偽のボイラーの水はシャワーを浴びることができるだけです<br>そして本物のスパは血を戻すことができます </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-26.webp" alt=""></div></div></div>

<p>11月のため、春、蒸気の近く<br>道路の横に温泉卵もあり、20分でも温泉で購入することもできます。<br>それを取り出して標準の砂糖の心の卵です </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-55.webp" alt=""></div></div></div>

<p>水は澄んだり魚です<br>大きなカニもあります<br>バス✓ここでシンガポールのようなものです<br>バスに乗る前に、バスを降りる前に小さなボタンを押してください。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-24.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-27.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-28.webp" alt=""></div></div></div>

<h2 id="日と山の海岸"><a href="#日と山の海岸" class="headerlink" title="日と山の海岸"></a>日と山の海岸</h2><p>サンフランシスとは異なり、それは違う、ここで海はきれいです、何もない<br>しかし、天候は瞬間、まだ風と美しい、突然雨、超寒さ<br>隣の隣の水族館を隠して、ホットコーヒーを弾くと雨を聴くのが暖かい </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-30.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-33.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-32.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-49.webp" alt=""></div></div></div>

<h2 id="虹"><a href="#虹" class="headerlink" title="虹"></a>虹</h2><p>人生は最初に虹を見ました<br>記念してZhang da Tuに来てください </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-37.webp" alt=""></p>
<h2 id="水族館"><a href="#水族館" class="headerlink" title="水族館"></a>水族館</h2><p>私はそれを買うことができません。<br>100元以上、7つのテーマが見ることができます<br>前の東京の水族館以上のもの<br>海のために、その場所は大きいです<br>私は巨大なシーホースを見ました<br>あなたの隣に体重を測定することもできます、21リトルメイジ==このシーホース<br>最後に、小さなイルカの小さな水性能があります。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-39.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-41.webp" alt=""></div></div></div>

<h2 id="温泉寺"><a href="#温泉寺" class="headerlink" title="温泉寺"></a>温泉寺</h2><p>その隣に丘があります、あなたはケーブルカーをすることができます。<br>山は高くないが、すでに雪が降っています。<br>軒先のデザインはとても良く、雪が飛び散らないでしょう。 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-57.webp" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-68.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-59.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-67.webp" alt=""></div></div></div>

<p>タイルのタイル<br>私がホテルに戻るとき、私はスプリンクラーの道路中心を見つけました。<br>非常に魔法のように、なぜこれをデザインしたいのか理解していません </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-71.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-73.webp" alt=""></div></div></div>

<p>荷物を大阪に詰めた </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-75.webp" alt=""></div></div></div>

<h2 id="カニレビア"><a href="#カニレビア" class="headerlink" title="カニレビア"></a>カニレビア</h2><h2 id="1つのブルエラバン"><a href="#1つのブルエラバン" class="headerlink" title="1つのブルエラバン"></a>1つのブルエラバン</h2><p>グルメストリート<br>カニの音楽、事前に予約をする必要がある、または店舗は座席なしです。<br>それは遊ぶことができますが、この種の困難は非常に困難です、それで畳のふりをするためにくぼんだ座席があります。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-78.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-82.webp" alt=""></div></div></div>

<hr>
<p><a href="https://twitter.com/leiaho0">Twitterでフォローする</a> </p>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-1-2</title>
    <url>/ja/japan-1-2/</url>
    <content><![CDATA[<h1 id="大阪阪急シティ"><a href="#大阪阪急シティ" class="headerlink" title="大阪阪急シティ"></a>大阪阪急シティ</h1><p>夕方に行くために翌日にJRを取る </p>
<a id="more"></a>

<h2 id="奈良"><a href="#奈良" class="headerlink" title="奈良"></a>奈良</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-02.webp" alt=""></div></div></div>

<p>コナンを参照 </p>
<p>衝撃的なことは、小さな鹿が車とラピファと混ざっているということです </p>
<p>私はそれが悪い胃を食べているかどうかわからない、私は公共のスペースでバスルームに行かなければなりません。<br>驚いた発見もトイレカバーを取りました、そして、この小さな魔術師は日本でそれについて心配しません。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-05.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-07.webp" alt=""></div></div></div>

<p>出かけた後に小さな鹿を受け取る<br>私は誤ってタップをしました<br>小さな魔術師の袋が開き、旅行のパンフレットが落ちました。 </p>
<p>それから… </p>
<p>私が羊が紙を食べることができると聞いたと言ったとき。<br>私はそれを見ることを期待していませんでした。 </p>
<p>小さな鹿のさまざまな攻撃パターンのため<br>私はスタッフを助けなければなりませんが、私は長い間見ていません。<br>愚かな鹿は祝福以上のものだけを尋ねることができます、下痢はしないでください。 </p>
<h2 id="宇治-🍦"><a href="#宇治-🍦" class="headerlink" title="宇治 🍦"></a>宇治 🍦</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-08.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-09.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-13.webp" alt=""></div></div></div>

<p>あなたが毎日の名前を持っているならば、あなたは期待を超えていませんでした。<br>日本の整形外科を通過する<br>それからよろしく茶アイスクリームとタットティーを食べる </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-16.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-17.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-18.webp" alt=""></div></div></div>

<p>私が食べ終わったら大阪に引き戻されました。<br>Yujiはアイスクリームのためだけにあることがわかりました… </p>
<h2 id="大阪阪急シティ-1"><a href="#大阪阪急シティ-1" class="headerlink" title="大阪阪急シティ"></a>大阪阪急シティ</h2><p>翌朝の早朝にグローバルスタジオへ </p>
<p>多くの映画によく表示されるジオフォンがあります。 </p>
<p>それから小さな魔術師は驚くほど発見されました<br>それはXiao Huang、Spider-Man、Meng、私はグローバルスタジオのIPです。 </p>
<p>グローバルスタジオは特に大きいので、テーマは特に<br>あなたが遊びたいのなら、あなたはそれに少なくとも一晩生活する必要があります。<br>しかし、後でカリフォルニア最大のロサンゼルスを数日間学んだ。<br>シンガポールは非常に小さいです、あなたは1日以上持てることができます。<br>もちろん、これは後の言葉であり、私はそれを言及しません。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-20.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-21.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-24.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-27.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-30.webp" alt=""></div></div></div>

<h3 id="ハリウッドの夢"><a href="#ハリウッドの夢" class="headerlink" title="ハリウッドの夢"></a>ハリウッドの夢</h3><p>私は遠く離れた叫び声を聞いた。<br>山の車の断片に神々の死を繰り返し思い出させる<br>しかし、この車の人々を見ています。<br>私は来たい、何もありません。<br>私は自分自身を調整するのを恐れています。 </p>
<p>同じことが言えます。<br>私はクイックチケットを買ったからです<br>小さなマスターはバス上に直接長い男のドラゴンを通過しました。 </p>
<p>ハリウッドの夢をやることもやることができます<br>スタッフは彼らがそう恐怖ではなかったと言った。<br>その自然な選択はやっています </p>
<p>このプロセスは大丈夫です、垂直降下を除いて、より誇張されていると感じます。<br>それからいくつかの連続的なターンが巨大に感じます<br>私は常にレールがステアリングを支えるのに十分ではないと感じています。これは映画のように粉砕されます。 </p>
<p>しかし、セキュリティが終わっています。 </p>
<p>したがって、🎢も人とは異なります。<br>私はそれを怖がらせることができません、私はずっと叫ぶ、私は私が座らなければならないことを知っています、しかし私はフライングドラゴンのための早いチケットを持っていません。 </p>
<p>そして、小さな魔術師はまだ旅行と通行人の通行人を感じました<br>ぶら下がっている橋の効果によると、小さな魔術師は考えています、姉の紙はすでにあなた自身と恋をしています。 </p>
<h3 id="ジュラシック・パーク"><a href="#ジュラシック・パーク" class="headerlink" title="ジュラシック・パーク"></a>ジュラシック・パーク</h3><p>私はレイダーズをチェックし、それがその後ろに使われるだろうと言ってレインコートを投げました。<br>真ん中で、私は誤った恐竜を見ました、そして、太陽の龍の外に突然突然描かれた、そして絵は怖かった。<br>すべての方法は黒い部屋に無関心であり、ゆっくり登る<br>突然の船が倒れ、観光客の最初の列が飛び越えました。<br>まあ、それは同じではありません </p>
<h3 id="フライングTianyi-Dragon"><a href="#フライングTianyi-Dragon" class="headerlink" title="フライングTianyi Dragon"></a>フライングTianyi Dragon</h3><p>そしてハリウッドの夢<br>フライングフラスコプレーヤーは座席に固定され、90度回転させ、地球に顔をゆっくり登る </p>
<p>しかし、この小さなマスターはそれほど多くはありません。<br>その隣に姉の紙ではない、2つが遅れている、あなたはそれを見ることができません。<br>私は私がぎこちなかったと感じただけで、私は数回巻きました、私は降りています。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-36.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-33.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-37.webp" alt=""></div></div></div>

<h3 id="ハリーポッター"><a href="#ハリーポッター" class="headerlink" title="ハリーポッター"></a>ハリーポッター</h3><p>長い森林道路の後、🦉🦉咕🦉、境 </p>
<p>バタービールがありますよ🧈🧈、Azkanの募集物 </p>
<h4 id="オリファンデキーショップ"><a href="#オリファンデキーショップ" class="headerlink" title="オリファンデキーショップ"></a>オリファンデキーショップ</h4><p>Harryが最初に魔法の杖を選ぶとき、NPCはランダムに子供を選び、プロットを取ります。<br>他の人は階下にあります </p>
<p>あなたが出てきた後、あなたは杖を使うことができます、あなたは呪文を見ることができます。 </p>
<h4 id="Hoggaz-Magic-and-Wizard-College"><a href="#Hoggaz-Magic-and-Wizard-College" class="headerlink" title="Hoggaz Magic and Wizard College"></a>Hoggaz Magic and Wizard College</h4><p>3D映画を見るために小さな車を取ります<br>キリ競争に参加するハリーRonggenを続けて </p>
<p>うわー、それは本当に楽しいです。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-39.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-40.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-41.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-42.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-43.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-44.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-46.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-47.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-49.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-52.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-54.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-55.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-57.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-58.webp" alt=""></div></div></div>

<h2 id="友達"><a href="#友達" class="headerlink" title="友達"></a>友達</h2><p>Global Studioから来た後は遅くなっています。<br>遊ぶ、私は小さくて精神、友人、すべてを送ることを期待していませんでした、トイレ、米の炊飯器、電気器具の山が戻ってくる… </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-59.webp" alt=""></p>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵--1-3</title>
    <url>/ja/japan-1-3/</url>
    <content><![CDATA[<h1 id="大阪"><a href="#大阪" class="headerlink" title="大阪"></a>大阪</h1><p>私は2日目を買った、私は大阪で2日間の旅行クーポンを購入しました。<br>だから次の項目はすべてです<br>自由<br>自由<br>自由 </p>
<a id="more"></a>

<h2 id="観覧車"><a href="#観覧車" class="headerlink" title="観覧車"></a>観覧車</h2><p>2箱に分かれて大阪ホイールをRedhorse<br>白は完全な透明なボックスです<br>赤と青は下部に不透明です </p>
<p>その後、昨日のローラーコースターです<br>小さな魔術師は当然透明です。 </p>
<p>とシンガポール🇸🇬はいつもフェリスホイールを閉鎖しなければならなかった<br>これは内側に食べられない </p>
<p>約30分間円を回します<br>私は他人と共有したいと思いました。<br>私は誰もが一人で立つことを期待していませんでした。 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-01.webp" alt=""></p>
<h2 id="キャプテンライン"><a href="#キャプテンライン" class="headerlink" title="キャプテンライン"></a>キャプテンライン</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-03.webp" alt=""></div></div></div>

<p>ボートの上に立って、観覧車を見続けます </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-05.webp" alt=""></div></div></div>

<h2 id="サンタマリア"><a href="#サンタマリア" class="headerlink" title="サンタマリア"></a>サンタマリア</h2><p>毎時、交互、約50分 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-08.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-07.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-09.webp" alt=""></div></div></div>

<h2 id="オーシャンホール"><a href="#オーシャンホール" class="headerlink" title="オーシャンホール"></a>オーシャンホール</h2><p>オーシャンホールの外の壁の外側の巨大なクジラのサメのモデルがあります。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-10.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-11.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-12.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-16.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-17.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-19.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-20.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-21.webp" alt=""></div></div></div>

<h3 id="魚を触れる"><a href="#魚を触れる" class="headerlink" title="魚を触れる"></a>魚を触れる</h3><p>手を洗う必要がありますが、唯一の唯一の<br>それは魚の皮膚の皮膚を破壊するからであるようです。 </p>
<p>小さなマスターが前に魚に触れたことがないと言う<br>初めて、私はサメに触れました。 </p>
<p>架空の氷とは異なります<br>温度は私が女の子に触れた子牛のように柔らかく、柔らかいです。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-24.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-27.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-30.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-32.webp" alt=""></div></div></div>

<p>hoofuユニークな飲み物🥤<br>青、スーパーメッキ<br>私は出てくる後に鉄の燃焼を食べました。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-33.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-35.webp" alt=""></div></div></div>

<h2 id="Hep-Five-Ferris-Wheel"><a href="#Hep-Five-Ferris-Wheel" class="headerlink" title="Hep Five Ferris Wheel."></a>Hep Five Ferris Wheel.</h2><p>この機能は、モール内の床が特徴付けられています。<br>私は高い到達モデルと運命を見ました </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-36.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-37.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-39.webp" alt=""></div></div></div>

<p>ローマの後にローマに住んでいた最後の時間。<br>自然に、私は知っており、ヒルトン </p>
<p>観覧車にそれを言う必要があります<br>ライトのライトの1つ<br>ヒルトンいくつかの大きな言葉が輝く </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-41.webp" alt=""></div></div></div>

<h2 id="Tianshugeの時間と宇宙カプセル"><a href="#Tianshugeの時間と宇宙カプセル" class="headerlink" title="Tianshugeの時間と宇宙カプセル"></a>Tianshugeの時間と宇宙カプセル</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-43.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-44.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-45.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-47.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-48.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-49.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-51.webp" alt=""></div></div></div>

<h2 id="ティアニテンプル動物園"><a href="#ティアニテンプル動物園" class="headerlink" title="ティアニテンプル動物園"></a>ティアニテンプル動物園</h2><p>Naxim Niklas Tareboの「BROLLER」でブラックスワン🦢を見ました </p>
<ul>
<li>黒いくま </li>
<li>祖先の鳥 </li>
<li>コア(骷髅) </li>
<li>象 </li>
<li>フクロウ </li>
<li>crow </li>
<li>サイエロ </li>
<li>カバ </li>
<li>キャメル </li>
<li>ラクーン </li>
<li>ヤギ(家畜) </li>
<li>クロコダイル🐊(骷髅) </li>
<li>ライオン </li>
<li>キリン </li>
<li>パンダ(人形) </li>
<li>子供には小さな馬はありません。 </li>
</ul>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-54.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-57.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-59.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-60.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-62.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-63.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-65.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-66.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-71.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-68.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-69.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-70.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-73.webp" alt=""></div></div></div>

<h2 id="Tongtiange"><a href="#Tongtiange" class="headerlink" title="Tongtiange."></a>Tongtiange.</h2><p>明日のため </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-75.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-78.webp" alt=""></div></div></div>

<h2 id="空港"><a href="#空港" class="headerlink" title="空港"></a>空港</h2><p>チケットがチェックされると、妹は小さなマスターに尋ねました。それは人ですか？<br>小さな魔術師は奇妙で、彼がもちろん人だと言っています。 </p>
<p>それから妹の一連の操作を見る<br>それから彼に昇圧させるために小さな魔術師におめでとうございます </p>
<p>その際、私は不明瞭にしました、そして私はチケットに無関心でした。<br>妹は、小さな魔術師が表現がなかったことを見ました。 </p>
<p>ただし、アップグレードチケットと独自の費用とはまだ異なります。<br>初めて日本とは異なります<br>アップグレードチケットはVIP RESTを入力できません </p>
<p>だから今度はあなたは風呂に入ることができません。<br>しかし、飛行機の後に楽しんだサービスはまったく同じです。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-79.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-80.webp" alt=""></div></div></div>

<p>戻ってきた後、私は世界の力から学びました。空港は潜在的な顧客の無料アップグレードを与えます。 </p>
<p>もともとシングル、この利点<br>小さなマスターは悲しいです </p>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>北京 -  1</title>
    <url>/ja/bejing-1/</url>
    <content><![CDATA[<h2 id="2014-2018"><a href="#2014-2018" class="headerlink" title="2014-2018"></a>2014-2018</h2><p>小さな魔術師はいくつかの春と秋の皇帝に住んでいました。 </p>
<p>ただ皇帝に到着した、批評を経験しました<br>準備ができていますが、それはまだ毎日呼吸するのがショックでした。 </p>
<a id="more"></a>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-12.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-13.webp" alt=""></div></div></div>

<p>過去数年間で<br>イヤリーニング<br>途中のどちらか<br>どちらか実行する準備ができています </p>
<p>もちろん、いくつかの青い空と白い雲もあります。<br>Diesiderの効果を持つShengguangさえ </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-00.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-11.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-05.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-07.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-14.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-16.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-17.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-20.webp" alt=""></div></div></div>

<p>日本から戻ってきた最後の時間の後、小さな魔術師は突然考えた<br>天然の風景に加えて、旅行はさまざまな会場を訪問するだけです。国内はありませんか？<br>だから私はそれをチェックしました、私は皇帝がたくさんあること、ほとんど嘔吐した血液があることがわかりました。 </p>
<h2 id="天文"><a href="#天文" class="headerlink" title="天文"></a>天文</h2><p>日本のテキストとは異なり、今回はついに理解できます。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-30.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-32.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-33.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-36.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-37.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-39.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-41.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-42.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-43.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-44.webp" alt=""></div></div></div>

<h2 id="オーシャンホール"><a href="#オーシャンホール" class="headerlink" title="オーシャンホール"></a>オーシャンホール</h2><p>道路電話やデザインに問題があるかどうかわかりません。<br>道路標識に沿って出てくる後、私は中間巨大なイルカホールが見えなかったことを見つけました… </p>
<p>しかし、ほとんどガラス油性、それで私はDravepairやスタイルを知りません </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-47.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-49.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-50.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-53.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-54.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-56.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-57.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-59.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-60.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-62.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-63.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-65.webp" alt=""></div></div></div>

<h2 id="動物園"><a href="#動物園" class="headerlink" title="動物園"></a>動物園</h2><p>大阪動物園からの絶妙な違い<br>これが大きな目的です<br>唯一の悪いことはあまりにも疲れています<br>古いものを見るためにクリーチャーを変えなさい </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-67.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-68.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-69.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-70.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-71.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-73.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-75.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-76.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-78.webp" alt=""></div></div></div>

<h2 id="月"><a href="#月" class="headerlink" title="月"></a>月</h2><p>魔法<br>月はしばしばありますが<br>しかし実際のシーンはまだ初めてです。 </p>
<p>当時、iPhoneには夜景がありませんでした、そしてペーストはそうではありません </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-79.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-80.webp" alt=""></div></div></div>

<h2 id="市場調査"><a href="#市場調査" class="headerlink" title="市場調査"></a>市場調査</h2><p>ゆっくりとしており、ソフトモーションをオフラインにして市場調査を行いましょう </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-81.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-82.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-84.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-85.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-86.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-87.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-88.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-89.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-90.webp" alt=""></div></div></div>

<h2 id="美味しい"><a href="#美味しい" class="headerlink" title="美味しい"></a>美味しい</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-24.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-25.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-91.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-92.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-94.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-95.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-98.webp" alt=""></div></div></div>

<h2 id="楽しい"><a href="#楽しい" class="headerlink" title="楽しい"></a>楽しい</h2><p>🏎️、🎬、🎭、👨💻 </p>
<p>レース、映画、クロストーク、錆パーティー </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-27.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-93.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-96.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-97.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-03.webp" alt=""></div></div></div>

<p>最後に、年の終わりは皇帝で終わりました。 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-22.webp" alt=""></div></div></div>

<ul>
<li>Walden. </li>
</ul>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>Beijing</tag>
        <tag>LittleMaster</tag>
        <tag>🇨🇳</tag>
      </tags>
  </entry>
</search>
