<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>More than ten days before graduation</title>
    <url>/en/Before-graduation/</url>
    <content><![CDATA[<p>I had thoughts in my mind a while ago, but I haven’t had time to write it.<br>All kinds of gatherings, booking tickets, checking rental information, then level 6, and then rushing over to see the landlord that night, running in each district, checking the room paper<br>When the room paper is about to be settled, in the hotel, stroking the books, I can finally relax. </p>
<a id="more"></a>

<h2 id="get-together"><a href="#get-together" class="headerlink" title="get together"></a>get together</h2><p>This has always been my least favorite to participate. Schopenhauer’s “Either Vulgar or Lonely” is somewhat extreme, but it does have some truth.<br>In addition, it has something to do with my introversion. In the MBTI test, the introversion actually broke 85. I always like to stay quietly instead of crowded and noisy occasions.<br>And I don’t like photography very much. I don’t know if it’s a fragment from “Imprisoned Soul” I saw when I was a child: the photography will suck my soul away and fasten it on a small piece of paper, implanting the subconscious mind like Inception.<br>After graduating from middle school and high school, I left in a hurry. I remember that in the photos in the high school group, the water glasses on my table were all there, but the people were not there.<br>This time I graduated, but I took a lot of photos. Of course, most of them were mixed with Sister Orange and the big team </p>
<p>Youth, it’s really amazing, with so much innate aura, so many possibilities<br>I remember that freshman also goes to package night once a week, and goes to bed at 3~4 o’clock every day during winter vacation. After the junior year, it is obvious that the body is not good enough, and the senior year is even more obvious. Once in a hotel, I didn’t sleep until 3 o’clock. When I looked in the mirror the next day, I was surprised to find the legendary dark circles. Before, I wondered how the heroine in the novel said that she had dark circles. I never knew what it was. Secretly laughing that they can’t adjust, don’t understand health… </p>
<p>In the past, I have been recording the bits and pieces of the year through words. Now I think that the only result of doing this is to recall the youthful years of the year in an old-fashioned manner, the time of committing 2 and the mood of committing 2 back then. I don’t know what it looked like back then. </p>
<h2 id="leave-school"><a href="#leave-school" class="headerlink" title="leave school"></a>leave school</h2><p>Pack up things and wait for my brother to get off work<br>When it was almost time, the group of people in the bedroom decisively went out to eat…<br>Cui Wei, my former classmate of No. 1 Middle School, helped me take the package, Viagra, thank you! When I called, I took out my phone to check the destination, and found that when I forgot to come down to look for you in the bedroom, you were gone<br>Although you run so fast, but still have to thank you </p>
<p>When I arrived at my brother’s house and saw their new house, I realized that I had to buy paper for Shenma. I had always wanted to rent… </p>
<h2 id="Level-6"><a href="#Level-6" class="headerlink" title="Level 6"></a>Level 6</h2><p>Just arrived at the examination room and sat down, a boy came over, claiming to be “Ming Ji”, who was originally a member of the Lige group<br>I thought he was a sophomore, surprised! Found that the left is all sophomores, sigh…<br>No wonder so many children’s shoes for seniors missed the exam. Fortunately, the monitor was with Orange. Persevering in sitting for the last time, the result doesn’t matter anymore </p>
<h2 id="Hangzhou"><a href="#Hangzhou" class="headerlink" title="Hangzhou"></a>Hangzhou</h2><p>More than ten days ago, I started to find information online, various materials, and mind map summary<br>On the night after the sixth grade test, I had a small gathering with them. Kawaii ate the most expensive noodles in my life, and then I boarded the train.<br>The 6.20 alarm was set, and the small flag called to let me pay attention to the magical horse, and said that I could hardly sleep at night. And really wake up basically once an hour<br>I went to WC at 5 o’clock in the morning and went back to sleep again. I suddenly woke up at 6 o’clock and drank some Nutrition Express. I found it on Google Maps and found that I was in Yuhang District!<br>Isn’t it 6.40? Then I heard “I got off in Hangzhou”, O__O”… </p>
<p>After getting off the train station, there is nothing shocking. It seems that the station in my hometown is beautiful.<br>google map, look for route 49, see the bus stop there, walk over, go around and find that there is nothing </p>
<p>k49 7:30 to the Union Building, go to Home, and learn that you can enter the room at 8 o’clock, store your school bags, and go downstairs to the company<br>I went in from AB and found that someone was practicing Taijiquan. Anyway, Dai Yingdu came, after watching for a while, he went up and talked about practicing Chen’s boxing. When asked about a sense of air, I said that my fingers swelled a bit when I opened it, and then I pulled other people’s thoughts, and I was said to be wrong o(╯□╰)o </p>
<p>Just in time for the rain, finding a house is generally running in the rain<br>But after I paid the deposit for Shenma, the house started and the rain stopped… </p>
<p>I’ve known that it’s very clean, and I feel so when I get off the train.<br>But it just feels so<br>Until I saw two girls walking barefoot on the road…<br>If you are in Hefei, blood dripping is a must… </p>
<p>Kawaii once said to buy sandals, but never felt<br>The net shoes were all soaked when I went out one morning<br>I saw the two girls at that time<br>Suddenly my mind changed, and later I discovered that many people wear slippers<br>It seems that the beach pants + flip-flops of the uncle-level programmers are not false. </p>
<p>I can’t use online banking on my computer to buy train tickets<br>This phenomenon occurs in Brother Hao’s house. At that time, he bought it smoothly after switching to his computer.<br>I thought it was a problem with IE9, resetting to reset the initial state, no<br>Helpless to reinstall the system<br>But it seems that the mirroring is wrong, and the blue screen is directly…<br>And the wooden belt system restores the USB flash drive, so I can’t help asking JS for the system drive<br>Originally, I thought that the company was originally IT, and the system disk was a must. I thought there was a small IT department inside. </p>
<p>Buying tickets for Jiaxing this time delayed me for most of the day. In the end, my sister bought them for me.<br>This kind of regional bank doesn’t work well if it goes out of the region. Of course, as long as I stay in Anhui peacefully, Huizhou Bank can comfortably say that I don’t blame it or blame it. </p>
<p>It’s strange to be out for the first time<br>In the afternoon, I was still taking Level 6 exams, I was in Hangzhou after I slept at night, and I am going to Jiaxing again today.<br>For places I haven’t been to, it always feels like an unexplored map in a real-time strategy game. It’s dark, and the map can only be lighted up when I pass. </p>
<p>Ran to many places to see the house paper<br>I would like to thank Ying Children’s Shoes and Wearing Children’s Shoes for helping me find room paper in Hangzhou, where I am unfamiliar. Especially when I was wearing children’s shoes, the room paper was already set, and I continued to accompany me on the road. With the constant urging of my girlfriend, I got to the penultimate room paper. </p>
<p>In the end, at a high price of 1100, I rented a room with a TV, a signal, a wooden floor, a screen window, a mattress, a table and chair, a living room and a living room far away from the company… </p>
]]></content>
      <tags>
        <tag>AAU</tag>
      </tags>
  </entry>
  <entry>
    <title>FEEL Training</title>
    <url>/en/FEEL-Training/</url>
    <content><![CDATA[<h2 id="first-day"><a href="#first-day" class="headerlink" title="first day"></a>first day</h2><p>On the first day of the training, executives took turns to introduce them.<br>First time I met a real CEO COO CTO CFO<br>It’s rather embarrassing to have lunch at noon, and it looks like a private room reserved for executives. As a result, all the executives went back, and a few people went in. Fortunately, some colleagues came one after another.<br>After signing the contract in the afternoon, I went to my place.<br>Next to the window, there is a big gap between the curtains. The scorching sun spreads on my LCD monitor without any obstacles, and I can’t see anything…<br>Of course, it turned out that I was not the worst. The worst was our boss, who was directly told by another colleague that he was here to bask in the sun… </p>
<a id="more"></a>

<p>Install the computer, remove the anti-virus tyrant, and configure it to your usual environment.<br>Of course, the company’s internet speed is too slow… Go back and copy some large software.<br>Then, I saw sister You. Mu thought of knowing me. After chatting for a while, the entire browser department had a small meeting. </p>
<p>Alas, this sentence is too witty. Everyone is technical, so silent, I am speechless.<br>I went back to the boss and assigned a task. After a while, I saw that it was past 6 o’clock. Isn’t it off work? Because there is no movement around Shenma? Asked in the group, it turned out that everyone was struggling with getting off work.<br>I had no choice but to stand still. At 20, I saw the instructor flashed. The mentor, I had to follow his footsteps, said hello to the boss, and ran back~ </p>
<h2 id="the-next-day"><a href="#the-next-day" class="headerlink" title="the next day"></a>the next day</h2><p>Randomly divided into teams, gave the team name and slogan<br>How to sum up their opinions when first encountered<br>In the end we decided on Bubble Fish / I am Bubble Fish, I love Bubble Fish as the team name and slogan<br>(On the third day I saw a cute clown fish, I brought it to play, and took a closer look at the “bubbling fish”, stupid, such a coincidence?)<br>Poster: Y+ for UI is a cow, a few bubbling fish are painted vividly, very Q </p>
<p>The various processes are intricate and complicated. I guess the one I can use is the administration department-there is only one drawer key. </p>
<p>In the end, the imitation was too much. I feel that it is not a problem of observation, but a misunderstanding of thinking. I have read a lot of thinking books, but I still see it.<br>Or where xi is good at this kind of problem, it is the first one to get it done. </p>
<h2 id="Third-day"><a href="#Third-day" class="headerlink" title="Third day"></a>Third day</h2><p>Time is getting tighter and tighter. Yesterday there was still some free time. I ran back to configure the development environment, and it was gone today.<br>Let’s draw the SKY logo, everyone will<br>The original purpose is to let everyone know to abide by the norms </p>
<p>Then I gave some random pictures and typeset out a newspaper<br>I thought about buying Apple. Fortunately, our group didn’t start the discussion. After finding that other groups also used this, we decided to give up<br>There are some sensitive issues, Xiaodong said don’t mention it, then forget it </p>
<p>Sister Yang Yang posted 10 questions, which will be changed into a sketch to perform in the evening, and then the questions will be inserted.<br>Have a quick meal at noon and collect answers to questions<br>It didn’t take long for the afternoon training time<br>Claiming to be a brainwashing training, among which the YY video on the mobile Internet, I really want to be born a hundred years later<br>The group was assigned to perform innovatively, and we adopted Yuan’s opinion.<br>Even though Brother Yuan is a small MM, he is very open and passionate.<br>Zhao Yang is really talented as a host. He used a lot of nonsense to fill the scene during the whole process.<br>Xiaodong keeps saying that he can’t do well, but he did well on the spot<br>I’m the referee, it’s pure soy sauce~ </p>
<p>Then we only have one hour to discuss the evening sketch<br>Brother Yuan has always been a more active thinking person. Later in the process of discussion, I finally found out that I was really not a post-90s, not a brain-disabled person. </p>
<p>Until the first group came on the field, we still did not determine the final ending, this is the place to pay attention to next.<br>The overall performance of the sketch is very good, just under the middle card. </p>
<p>At this time, I saw “Don’t live in other people’s world”. I went out and drank some water. I just ran into two school recruits who had been intern for a long time. One of them had a meal, said hello, and then I sat down and had a chat. The other kept asking me about the situation in Hefei and which university.<br>Of course it is China Other University. After saying it twice, they both looked confused, which caused my confidence to drop sharply, and my oral English still failed…<br>What surprised me was that Hang Dian was also a COU (just googled, and it was not. Of course, such NB schools don’t need this stuff, which is fundamentally different from mine).<br>I said that most of our schools find jobs locally, usually about 2k or so. He curled his lips. After I thought about it, he probably forgot about the low prices in Hefei.<br>Then JS came over and learned that Baidi’s library could borrow books on Friday.<br>After playing Wii, I went back to the classroom, dizzy, is the show over… </p>
<p>After everything was over, Sister Yang Yang said…<br>…<br>Well, sure enough time is tighter. Let’s roughly talk about the distribution of marketing planning. After all, it was so late and dissolved. </p>
<p>When I arrived at the gate, I ran into Brother Yuan and told me to take the parcel. Anyway, it’s already so late, and in the mansion garden, I’ll follow along and have a look.<br>Walking with this kind of girl paper makes me feel more dangerous.<br>After walking around for a long time, she finally found Yunda Point and learned that she had been taken away by someone she knew.<br>Now what happened to me, flash. </p>
<p>The first taxi never stopped! Sister, after getting on the second car, I told the driver that the front was refused? Seeing my face was silent, he also explained the previous one for a long time, to the effect that I would stop complaining. Alas, I’m actually tired, so just put it this way, how can I make a complaint? </p>
<p>I have to do laundry when I come back. There are so many trivial things… </p>
<h2 id="Fourth-day"><a href="#Fourth-day" class="headerlink" title="Fourth day"></a>Fourth day</h2><p>Brother Hao can really say, just a few hours at a time, if my throat becomes hoarse prematurely<br>Later, I learned that I had been a lecturer and practiced before, no wonder<br>There is a thought storm, the use of iron clothes racks. The balance is not very good, you can use the score=total/10 algorithm to return to balance<br>Of course, the market is not fair. There are always monopolistic companies who have the final say. I told the group that you should not care about others too much.<br>Squatting, alas, Tai Chi only forgets this<br>Squatting is estimated to be less than two minutes, so it’s sour.<br>There is a small voice in my heart, I am an intellectual hero, who can’t recognize the position, and always try his best. If you fall, the team will be incomplete tomorrow.<br>I figured this out and jumped up immediately (I still have the strength to jump up…)<br>Before the board game in the evening, I ran into sister Yang Yang during dinner and helped her move something in the administration department.<br>Then ran to table tennis and rubbed two balls<br>The board game is a killing game, everyone plays well hi<br>Brother Yuan talks a lot, Barabara confused everyone<br>Help Y+ fix the wireless connection at night, wash and sleep </p>
<h2 id="Fifth-day"><a href="#Fifth-day" class="headerlink" title="Fifth day"></a>Fifth day</h2><p>After the training today, I carefully mentioned it to the boss, sitting and doing nothing, there is nothing to do with it.<br>The boss said immediately that Seng had already prepared the task, but he didn’t say anything.<br>(It turned out to be like this, T.T)<br>… </p>
<h2 id="Sixth-day"><a href="#Sixth-day" class="headerlink" title="Sixth day"></a>Sixth day</h2><p>West Lake Orientation<br>We set off at 6.50, and it takes about an hour and a half to get to the Broken Bridge.<br>I also met the captain on the bus, and Yanjiao was also on this bus… </p>
<p>The West Lake is too hot, the team bought some fans<br>Get the task and set off </p>
<p>The classic fragment of the legend of the new white lady, beautiful, beautiful, delicious food for foreign tourists to write “Hello, Hangzhou…” and other tasks<br>A large group of people greeted us, Yuan brother Yijia rushed up immediately<br>Well, the English is really intermittent, and I still rely on the tour guide to translate…<br>The dialogue between them can still be understood, but let me just say…<br>There was a short lady next to me, who seemed to be of the yellow race, and how old I was. She was struggling at the time, and finally finally said the first time to a foreigner for the first time and asked a comparatively 2 question “Where are you” from?”<br>US Australia or something<br>Then I don’t know what to say…It’s really dumb English… </p>
<p>The first task was blindfolded, the team stretched the 10-meter rope into a regular pentagon. </p>
<p>I started to use Xiaodong 1.78 as equal length and side length, leaving a lot of rope<br>In fact, the instructor didn’t make it clear, so there can be no more<br>Of course we all admit our own mistakes, and that neglect did not mention </p>
<p>At first I thought about measuring the angle by hand, 108.<br>Later I found that they are measuring the distance to the corners, which is more convenient and accurate </p>
<p>After we all think it is a regular pentagon, it ends<br>Before I took off the blindfold, I was still anxious. After all, I made it out of feeling.<br>After actually seeing the graphics, I took a sigh of relief. In my heart, I sighed that the cooperation is really amazing.<br>Finally we completed the first item with full marks </p>
<p>When I get to the museum, I strongly recommend going in and blowing on the air conditioner, cooldown, but some people are afraid that there is not enough time, and they may not be able to get out (囧), so everyone continues on the road </p>
<p>The second task guess the word </p>
<p>I haven’t reacted yet, Brother Yuan has already done both…<br>Ο \ _ \ _ Ο “…<br>My only contribution is: let them put the stuck one aside, continue to the next one, and finally use the elimination method to see if there is a breakthrough<br>In the end, we finished it in more than 3 minutes, but unfortunately we made two mistakes (we learned later that we have the highest correct rate and the shortest time) </p>
<p>The third task: Outsmart nuclear warheads </p>
<p>A square area with a side length of four meters, there is a cup inside. Use rope, rubber band, chopsticks, and straws to pour a bottle of water in and take out the cup. During the whole process, people cannot enter the area and ropes and other objects cannot fall to the ground. </p>
<p>My suggestion is to pierce two holes so that you only need to lift the bottle above the cup, although some water will spill out on the road<br>But they are afraid it will be slower<br>Later, I learned that the Qianjiang No. 7 group of Fanxi had used this method. Now think about it, this may be slower, but it can save time for tying the rope + pouring water.<br>Finally, we used the most traditional method, pouring water </p>
<p>Take out the cup<br>I want to wind it more, wind it in the opposite direction, and then pull it out. When I watch the video, another group of this method failed. Fortunately, they said it was unstable. Use a slip knot and rejected this plan.<br>Then I saw the captain fiddle with the chopsticks and rubber bands again, so I went over and asked him what he thought of it<br>Later, I guessed that I was seen by Brother Yuan holding the rubber band. She suddenly jumped over and yelled: “I know, I know” </p>
<p>Fold the N rubber bands together, pull them apart with four ropes, then wrap the quilt, loosen it, wait for the rubber bands to hoop the cup, lift it up slowly<br>Let’s listen! ! !<br>Then I immediately thought of some of the points to pay attention to. After all, the rubber bands have more elasticity. If the hoop cup is not matched well, the cup is more likely to fall.<br>Then it started<br>This time I am in charge of observing<br>Jepen seems to be a little nervous, the rope can’t relax, the cup shook<br>Our voices coordinated, and finally ended this last event with a full score </p>
<p>Catch the bus<br>Jepen said that the other groups have been completed and there is not enough time (without such incentives, there are still many groups that have not arrived after we went back)<br>We went back, but fortunately we didn’t go back…<br>Suddenly the bus came, and everyone rushed to the opposite side of the road (Xiaodong and I feel that life is still important, it is the slowest crossing the road)<br>The captain on the bus suddenly saw the phone number of a contact person at the last bus stop. I felt it necessary to say something, in case it was still there waiting for us.<br>After the call, I knew I had gone back… </p>
<p>your<br>I didn’t expect Sister Bobo to take the photo. It was really interesting<br>I saw myself standing there blindfolded, good 2 ah, let’s not say…<br>Yanjiao’s group used the method of squeezing a bottle to pour water into a cup two meters away in “Smart Nuclear Warhead”, and later wanted to climb trees<br>Some want to tie people up and hang them<br>Too NB </p>
<p>At last<br>I have no feeling for the ranking, as long as it is not the last<br>Of course we won the first place without a doubt<br>Go to grandma’s house in the evening, the first group meeting of the group, so happy<br>I saw Brother Yuan’s room paper </p>
<p>Thoughts<br>I have always been alone in the university. Although I know that teamwork is very important, I have never felt it. Last year’s interview said that the team was unfounded. In this training, I personally experienced the magic of teamwork, it’s really amazing… </p>
<p>The FEEL training is about to end. Although I’m tired every day, I really appreciate everyone of Bubble Fish, O(∩_∩)O Thank you </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>Goodbye my university</title>
    <url>/en/Bye-my-college/</url>
    <content><![CDATA[<p>I remember that when I first arrived in Hangzhou last time, I saw this beautiful city with lots of vegetation and seemed to express it once…<br>This kind of place that took four years and felt free for the first time in my life, it is not enough to meet again…<br>Of course, I don’t have any awesome experience worth writing about. I have passed it plainly, just express my feelings. </p>
<a id="more"></a>

<p>After I got down to Level 6 two days ago, I have finished this thing that has dragged on for 3.5 years.<br>I think college years, in my life, really passed </p>
<p>I remember one night, I dreamed of N many mosquitoes, which made me itchy. I thought to myself, this magical horse breaks my dream, it is more uncomfortable than a bone<br>Then I stood in the graveyard…<br>Although I warn myself not to be afraid, dream, just feel it, taste it.<br>Okay, I was persuaded, and then I wanted to run, where should I go?<br>Hmm, my parents are right next door, just run to them<br>Parents and home have always been our shelter from the wind after our injuries. </p>
<p>It’s a pity. Then I woke up and found myself alone. In the rented house, the next door was a stranger I had never met before.<br>Really left and grown up<br>Remember a sentence: </p>
<blockquote>
<p>Independence means greater social responsibility, freedom means more tolerance, liberation means more self-management, and growing up means more effort.<br>I can’t help but think of the phrase “The great ability comes great responsibility.” </p>
</blockquote>
<p>Although I have always yearned for independence and freedom, but when I really got here, at a certain moment, there was still a kind of “light sadness” as the boss described. </p>
<p>Turn to the topic<br>My university is more fun<br>When I entered school, it was the second school I always despised in high school<br>Seriously, after half a year, nothing has changed<br>I skipped classes in my sophomore year, and I got a major<br>When the junior never goes to class again, the whole school is a book </p>
<h2 id="Level-6"><a href="#Level-6" class="headerlink" title="Level 6"></a>Level 6</h2><p>Actually there is no such thing as passing or failing<br>And, after graduation, my personal feeling is that the certificates are all gone<br>However, it is a comfort to parents. (Originally, I thought that the last time my dad came, it was the last time he gave me RMB. This time, it seems that I can blackmail them again. O(∩_∩)O)<br>Moreover, it can be regarded as a draw to an end to his university career. </p>
<p>of course……<br>If they knew… </p>
<p>Remember J.K. Rowling said in a speech at the graduation ceremony of Harvard University: </p>
<blockquote>
<p>I cannot remember telling my parents that I was studying Classics; they might well have found out for the first time on graduation day. </p>
</blockquote>
<p>In college, I arrived late, retired early, skipped class, cheated, missed a course, retaken, and confessed my faults…<br>Counting it down, it seems that except for scholarships and bursaries, I haven’t gotten a fight, and everything else is basically satisfactory. </p>
<p>Of course, cheating has always been something I despise and even disgusting. I can stick to the principle of 60.<br>The most interesting thing is that he also practiced the “two armies at war, the heart is the best” in the “Sun Tzu Art of War” and finally “the soldier who fails to fight without fighting.”<br>So when fighting this, I really don’t know what the situation is. The principle is “If a person does not offend me, I will not offend; if a person offends me, it depends on the situation.” </p>
<p>Other things that seemed impossible in the junior year were gradually completed in the last period of time. </p>
<p>There are also regrets: the brand does not sound, job hunting and future development cannot be used as a stepping stone; strategic planning is not so perfect due to horizontal vision restrictions, etc. </p>
<p>Oh, yes, there is one that I should complete:<br>Go to China University of Science and Technology </p>
<p>Although my school (omitted), but the geographical location is unique<br>There are two medical schools and two large shopping malls nearby<br>It is very convenient to go shopping and go shopping<br>So every time I get together, others come to me </p>
<p>The most important thing is not far from the University of Science and Technology of China<br>It’s a pity that I didn’t use it, or never thought of it </p>
<p>Always feel good about myself<br>At the same time, it seems that there has always been a deep inferiority complex<br>I remember in the earliest days, I didn’t even dare to enter other schools<br>Keep your head down when passing by, passing by </p>
<p>When I was running around for a meager salary in my senior year, I had to face this fact.<br>Every day I run the job fairs of HKUST, all kinds of hard work </p>
<p>But I suddenly found out that most of them are almost the same (ordinary people), the same being cut off, the same being rejected<br>But the awesomeness is different. In my opinion, for a god-like company, the offer comes at your fingertips and it is no pity to reject it. </p>
<p>Isn’t there a saying that the strength of an individual has nothing to do with the group.<br>And in the group, the average IQ drops down. </p>
<p>… </p>
<p>I thought I would really leave in the future, and I never went home for more than a week<br>Decided to stop looking for an internship and stay with my parents quietly for a period of time<br>In the last two months, let me go out every day (Sang Xin)<br>Mom and Dad said that I stayed at home every day, didn’t go out, didn’t help with housework, and didn’t do anything, so I played games and went to bed in a daze.<br>In fact, during that time, I felt that I knew more than the previous three years<br>The most important thing is mental growth<br>I am very happy to see this magical world towards the end of the university<br>It’s a pity that it passed in a blink of an eye, and now I don’t have time to calm down and spend a long time studying. </p>
<p>Finally back to Hefei, nothing else, just to reply<br>We got together one last time, before I bid farewell to Hefei </p>
<p>Looking back at that time now, I am very moved<br>Not alone when I left </p>
<h2 id="in-case"><a href="#in-case" class="headerlink" title="in case"></a>in case</h2><p>I know that “if” is useless. It is repeatedly emphasized in mental books. It is a waste of time. It is better to focus on the present<br>Li Zongren said that if people live not from 1 to 80, but from 80 to 1 year old, 2/3 of people will become great men. </p>
<p>Just like in “The Gang of Men”, if time can be returned, I think it will be another ending </p>
<p>So, although I have no big regrets<br>But if I were to be in the last university, I would shorten the time and advance it half a year<br>After all, the higher the level, the tighter the time<br>Just went to college, suddenly liberated, madness is a must<br>The Warcraft game I have been playing crazy for a year, in fact, should be compressed to half a year, in the freshman year, I played crazy<br>Then get into programming, something more interesting than Warcraft<br>Get C in the sophomore year, look at the data structure<br>The junior finds a house and moves out of school. Go to the internship<br>Run a job fair two months before the senior year<br>Stay with your parents in the next time<br>Go out in the middle, fun, good-looking, pass the driver’s license<br>You can ask your parents to borrow funds (note that it is “borrowing”) </p>
<p>Of course, there is another possibility. If that guy was me now, it would be completely different today…<br>People’s cognition is always confined to the present, and looking back a few years later will only feel so naive and lack of thinking at the time. </p>
<p>Of course, of course, no if… </p>
<p>There is a path dependence theory in economics. It says that once people make a certain choice, it is like embarking on a path of no return. The force of inertia will make this choice constantly self-reinforcing and prevent you from walking easily. Get out. </p>
<p>Regardless of the original choice, it is a decision made by yourself, and you are responsible for yourself </p>
<p>After graduating, I suddenly felt that the possibility has dropped a lot. After all, there are certain things that have become established facts, and I cannot do it again.<br>Then suddenly I saw the old A in “Soldier Assault” and said </p>
<blockquote>
<p>twenty two? I see you like 70! …If I were you, I would definitely participate. Do you know why? Because I’m only 30, such a fun thing, I haven’t done enough yet<br>Yeah, I’m only 22, what a good number 22, a stupid age </p>
</blockquote>
<p>So, don’t work, be hated, love someone. </p>
<p>I hope that after a few years, I look back again,<br>It’s not “Anything that doesn’t work well now has a time when it’s not working hard.”<br>It is “a little bit of a dream that is built, and you in the future will be grateful for your hard work now!” </p>
<p>Thousands of words, I can’t say enough, but there is a time to end </p>
<p>Goodbye, my university. </p>
<p>September 17, 2012 0:00:52<br>At Hangzhou Xixi Wetland </p>
<hr>
<p>PS：<br>The hearts are mixed together, crumpled into pieces </p>
<p>Write and delete, delete and write<br>Save the draft, intermittently several times<br>Still out of place </p>
<p>I want to cry, but I feel like I am no longer a child </p>
<p>How many four years in life<br>Still have enough free time, four years of worry-free food and clothing </p>
<p>After that, we must constantly compromise between ideal and reality<br>As we grow older, we have a deeper understanding of society, as the feeling of powerlessness and paleness increases day by day, and gradually disappears </p>
<p>However, what I saw is a comfort to myself: </p>
<blockquote>
<p>I know that in this radiant, rapidly changing living space, everyone has their own choice. My idea is very simple. I don’t have to wear beautiful clothes, and I don’t need to use rouge powder. The most serious, simple and active life is for me. Fascinated by the truth. </p>
</blockquote>
]]></content>
      <tags>
        <tag>AAU</tag>
      </tags>
  </entry>
  <entry>
    <title>About the selected ones</title>
    <url>/en/About-choice/</url>
    <content><![CDATA[<p>Education in China belongs to atheism and believes in science<br>But science can’t explain it at present, where does the realization come from? Is it just the activity of brain matter? Why do other animals have no will, but only humans? Can will exist without matter? Is everything really empty when you die? What are we doing here? </p>
<a id="more"></a>

<p>The reality is cruel. If depth first is used, the prerequisite is “God Mode”<br>Otherwise, it is often broken, and there is no chance to come back because of the time arrow </p>
<p>Reading, studying, knowing more information, and then using breadth first </p>
<p>But first determine the purpose and ask yourself what the soul wants<br>It says in “A Dialogue with God” </p>
<blockquote>
<p>The soul, body, and brain are separate, and the soul is independent of the existence of the other two. All suffering is caused by the inconsistent purpose of the two. </p>
</blockquote>
<p>I think the soul mentioned here is free will </p>
<h2 id="Free-will"><a href="#Free-will" class="headerlink" title="Free will"></a>Free will</h2><p>Actually more curious about free will<br>If Everett’s parallel universe hypothesis is true, then free will is a joke<br>Because no matter what choice you make, at the moment you choose, the world is divided into two, which is choice, and there is no choice.<br>Even birth and death<br>On a macro scale, there is no difference </p>
<p>However, for the individual, a choice is indeed made. Here is a quote: </p>
<blockquote>
<p>“Why do we like coins, because at the moment they are thrown into space, the answer is already obvious.” Except for the obvious authoritative answer, the answer is often in oneself, but the physical, mental, and insight are still not strong enough to be unnecessary Reason/cognition, can purely follow the heart. </p>
</blockquote>
<p>I believe in free will, at least, after you choose, this world will continue for you, and your choice will affect your journey in this world. </p>
<p>Therefore, how to choose can have an optimal solution </p>
<h2 id="Optimal-solution"><a href="#Optimal-solution" class="headerlink" title="Optimal solution"></a>Optimal solution</h2><p>The optimal solution is another problem<br>What is the optimal solution?<br>This is inseparable from one’s worldview, outlook on life, and values </p>
<p>There is an article on Fai Mo: Nine Steps to Determine Your Life Goal and Make a Plan to Reach it<br>But the key is that one’s world outlook, outlook on life, and values will also change…<br>The Ship of Theseus can illustrate this very well </p>
<h2 id="The-Ship-of-Theseus"><a href="#The-Ship-of-Theseus" class="headerlink" title="The Ship of Theseus"></a>The Ship of Theseus</h2><ol>
<li>If you look at the different types of cells in the human body, the average age of the cells in the entire human body is about 7-10 years old. (That is to change all of them) </li>
<li>If a ship travels long distances at sea, it will inevitably be damaged, so the skilled craftsmen on board regularly replace part of the ship to maintain the normal navigation of the ship. A few years later, all parts of the entire ship were replaced. Is this ship still the same ship when it started? If so, then if the discarded parts are collected and reassembled into a ship, what is the relationship between the two ships and the original ship when they set off? If not, when did this ship become different from the original? </li>
</ol>
<p>This question is very fascinating. If you count it this way, it’s almost 3 rounds. </p>
<p>The above only talks about the physical situation, if you add the education, the environment, and the past experience </p>
<p>Therefore, at each stage, the pursuit is different<br>I admire those who have “one sword in ten years”<br>“Ten Thousand Hours of Genius Theory”, 3 hours a day is almost ten years </p>
<p>Ten years of sharpening a sword ]Source】<br>Tang Jiadao’s “Swordsman” poem: “Ten years to sharpen a sword, and frost blade has never tried. Today is like a king, who is injustice?” (Ten years? coincidence?) </p>
<p>Is there any way when this kind of purpose changes from time to time and cannot be rolled back? </p>
<h2 id="how-are-you"><a href="#how-are-you" class="headerlink" title="how are you"></a>how are you</h2><p>Greedy algorithm is a simpler and faster design technique for some optimal solution problems. The characteristic of using the greedy method to design an algorithm is to proceed step by step. It is often based on the current situation to make an optimal choice according to an optimization measure, without considering all possible overall situations, it saves the need to find the optimal solution. All possible and must spend a lot of time, it adopts top-down, iterative method to make successive greedy choices, every time a greedy choice is made, the problem is reduced to a smaller sub-problem, and through each step Greedy selection can obtain an optimal solution to the problem. Although each step must ensure that a local optimal solution can be obtained, the resulting global solution is sometimes not necessarily optimal, so do not go back in the greedy method. </p>
<h2 id="At-last"><a href="#At-last" class="headerlink" title="At last"></a>At last</h2><p>A favorite sentence, which also happens to be about choice: </p>
<blockquote>
<p>We are not just a random person meeting another, we are all through the mountains and rivers, slowly and long way to find each other, in our human growth river, this short moment of cause and fate, it is not accidental, it is ours select. </p>
</blockquote>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>the Grand Master</title>
    <url>/en/The-Grandmaster/</url>
    <content><![CDATA[<blockquote>
<p>What we can do now is to find a quiet place, let ourselves think quietly, and understand how to do it, so that we can prevent precious things and important people from losing again, and understand how to do it. The same mistakes will not happen. Happen again. Learn from it, draw strength, continue to move forward firmly, find what you like, meet someone you truly love, and do the right thing. —— Xi Murong </p>
</blockquote>
<a id="more"></a>

<p>In the first two weeks, I got up at 6 o’clock and went to bed at 11 o’clock every day. I felt very energetic. It’s not a problem to work 16 hours a day.<br>The side effects came out<br>I didn’t work overtime for these two days, I was nestled in my house without internet, and I deeply realized the terrible loneliness.<br>Become inexplicably irritable, unfortunately the mobile phone can be connected to the Internet, so harassment everywhere<br>The most common one is Gu Xiaobai’s “So boring, so boring” in “The Gang of Men”<br>Sorry for causing trouble to some people. As for when it will stabilize, I don’t know </p>
<h2 id="007-and-the-Grand-Master"><a href="#007-and-the-Grand-Master" class="headerlink" title="007 and the Grand Master"></a>007 and the Grand Master</h2><p>In college, every once in a while, I would go to the theater to watch big movies<br>I didn’t have any money at that time, and I was only willing to go once because it was an international blockbuster + 3D<br>Work, but left these entertainments behind </p>
<p>I went to watch “007” the other night<br>Very worried </p>
<p>I came out and remembered the comment of verycd “Assassin’s Creed”: </p>
<blockquote>
<p>After going in for a while, I felt a sense of desolation. Although the city is more prosperous and the characters are more gorgeous, but facing Ezio, who is more than half a century old, it is a desolate time. From the beginning of the second generation, the young and young hairy boy to this one. The old man with a gray face and beard climbing the wall has a lot of thoughts. A few days ago, it happened that I also celebrated my birthday. It feels that year after year is getting faster and more like this game, I am already old when I look at myself in a blink of an eye<br>A person’s life is vividly revealed in this assassin trilogy </p>
</blockquote>
<p>“The Great Master” has many touches, so I won’t talk about them one by one.<br>The most touching point:<br>Ip Man went to break the cake in Haneda’s hand, and couldn’t handle it.<br>Mr. Accountant commented that Tai Chi Yang Luchan has the stunt of “the bird does not fly”. The bird stopped in Yang Luchan’s palm and it could not fly, because Yang Luchan’s tricks made the bird nowhere to focus. Was locked in an invisible cage. </p>
<p>I specifically checked this story, here </p>
<blockquote>
<p>“The little sparrow was alive and kicking, but it looked like a sick leg in the palm of the martial arts master Yang Luchan. Although he kept flapping his wings, it was caught by magnetism, squeaking, and unable to fly. If you want to fly, your feet must be balanced on the point of effort, and you can use the rebound force to lift your wings to fly. Yang Luchan’s kung fu has reached the peak of perfection, and the palm can feel the momentary thrust of the sparrow’s legs, whenever a sparrow When he kicked his legs to fly, he sank his palms, and the bird’s kicking force was wiped out! Therefore, the little sparrow could only flutter his wings and struggle, and could not do without Yang Luchan’s palm.” </p>
</blockquote>
<p>This story may be exaggerated, but whether it is true or not, it arouses my interest in continuing Tai Chi </p>
<p>In parks, middle-aged and elderly people usually practice the 24 styles of the national standard. It evolved from the Yang family and is actually Tai Chi.<br>There is a piece of history here, it’s more sensitive, so I won’t talk about it. You can adapt it by google Tai Chi yourself </p>
<p>Seeing such softness + weakness in my freshman year, I suddenly had no idea<br>Later, it was discovered that the Yang family was actually evolved from the Chen family, and the Chen family can be vocal when fighting. It is super suitable for young people, and my physical fitness has been poor. </p>
<p>However, from the initial fastness to the present slowness, I realized how powerful Yang’s “rigid and softness is contained, but hidden deep.”<br>My understanding is that Yang has already externalized and embodied Wangsijin, without seeing the slightest on the outside. Jin circling and flipping inside, and once you get your hands on it, it’s done… </p>
<p>I used to sit on the well and watch the sky again </p>
<h2 id="It-took-me-eighteen-years-to-sit-with-you-and-drink-coffee"><a href="#It-took-me-eighteen-years-to-sit-with-you-and-drink-coffee" class="headerlink" title="It took me eighteen years to sit with you and drink coffee"></a>It took me eighteen years to sit with you and drink coffee</h2><p>Every time I see Xue Yuan, I count how much money I have taken and how much I have saved now, and every time it counts too much, it makes me think that I have realized my dream in a few years. </p>
<p>This is quite speechless, and only a little bit more. What’s the use? Life is a mess, wandering on the edge of pessimism and anxiety<br>In fact, what I want to say is, why are there so many more for no reason? How much do you need to pay for this<br>An article that impressed me a lot so far:<br>“It took me eighteen years to sit and drink coffee with you” </p>
<p>My university is china other university, which is already weak<br>At the stage of school recruitment, it was the first time to face the students from the other two schools, and felt helpless. </p>
<p>J.K. Rowling’s speech at the graduation ceremony of Harvard University:<br>The Fringe Benefits of Failure, and the Importance of Imagination (“The benefits of failure and the importance of imagination”)<br>There is a sentence: </p>
<blockquote>
<p>Indeed, your conception of failure might not be too far from the average person’s idea of success, so high have you already flown academically. </p>
</blockquote>
<p>Therefore, I have always envied those students from prestigious schools. I envy their starting point, which is already so high.<br>How many times does it take to catch up with them, and it’s just possible </p>
<p>Every stage has troubles at every stage<br>I don’t know if I see a little bit more, but because of this, it makes me miserable<br>Because of that, I know how big the gap is, and I feel helpless to my weak self.<br>Every thing, every direction, it takes time to do </p>
<p>I don’t want myself as a Weibo complained: </p>
<blockquote>
<p>Too late to figure out what I want, the temples have begun to turn white; too late to be sure of their love, the other side is already married; too late to love the child, he has grown up and left you; too late to become famous, we are about to enter The grave is gone. We are afraid that everything is too late </p>
</blockquote>
<p>Unfortunately, the second has already been fulfilled </p>
<p>Become the kind of person you hated most when you were young<br>When a person chooses to grow up, he often chooses not to be understood, because you have to take the path you choose, not the path they think you should choose.<br>I don’t know if at this stage, mom and dad don’t know what I’m thinking anymore<br>Actually I don’t know what I’m thinking, let alone others<br>And, a while ago, I found that I was becoming someone I didn’t like<br>Everything is cautious, not dare to expose who you are<br>As one sentence: </p>
<blockquote>
<p>The loss of many people is against their aspirations when they were young. I think I am mature, skilled, shrewd, naive in the past, I finally see it through and want to wear it. So, we became the kind of people we hated most when we were young </p>
</blockquote>
<p>not happy things<br>When I’m sad, no one cares about me<br>I feel dizzy when I see a full screen of English<br>The number of books you want to read is as many as the PM in the Imperial Capital </p>
<p>The theory knows:<br>Take your time, everything is too late<br>Where is weak, where is it<br>Do only one thing at a time<br>Power of the moment<br>Assigned task, the most difficult thing in the world </p>
<p>It seems to be on the road of self-salvation<br>However, the weak burst like this, and sometimes I really feel hopeless </p>
<p>Half a year after graduation<br>It’s been half a year<br>The end of the world is over </p>
<p>Objectively speaking, there seems to be progress<br>But the curve drawn is infinitely close to the horizontal line </p>
<p>Chao Wendao </p>
<p>There is another place that makes me very depressed </p>
<p>In Da Liu’s science fiction, there is an article called “The Way of the Chaos”,<br>Quoting from “The Analects of Confucius Liren”<br>It gives a detailed description of scientists willing to give their lives in order to understand the mysteries of the universe. </p>
<p>Although there is a sequence of hearings, it is nothing more than a big deal. </p>
<p>But there is a sentence in the Tao Te Ching: </p>
<blockquote>
<p>The sergeant hears the Tao and walks diligently; the sergeant hears the Tao, if it survives; the corporal laughs when he hears the Tao. Not smiling is not enough. </p>
</blockquote>
<p>Not smiling, not enough<br>The obvious feeling is that I saw the book “Poor Dad” in my sophomore year in the library. I flipped through it at the time. When it came to the coining section, it felt boring. I thought that I would not do business by myself anyway. In the future, I will use programming as my career and narrow my goals, so I won’t spend time looking at this </p>
<p>Now it seems ridiculous how stupid it was at that time, it can be said that the Tao is right in front of me, but I turn a deaf ear to it </p>
<h2 id="Superego-ego-and-id"><a href="#Superego-ego-and-id" class="headerlink" title="Superego, ego and id"></a>Superego, ego and id</h2><p>Everyone lives in three states of yourself: parent, adult, and child.<br>They correspond to the personality structure of Freud: the superego, the ego and the id.<br>The superego represents the law, morality, conscience, authority, the defender of order, the strict prosecutor, the god, the god, the enlightened Zen master, and the principle of perfection.<br>The id following the principle of happiness is all primitive impulses, instincts and desires, willful, do whatever one wants, and self-centered.<br>The self follows the principles of reality, the coordinator and the balancer, he is in the middle, not only to satisfy the desire of the self, but also to escape the eyes of the prosecutor, and cannot completely violate the will of the superego. The ego is like a businessman, and can be bargained; the id and the superego are at the two ends of the seesaw, and the ego is in the middle, so they need to be balanced. The self is rational and follows the principles of reality. </p>
<p>Why am I so sad, everything, I think, may be the super-ego too awesome </p>
<p>I have always had a shadow in my heart, that is, in all the fields I know, programming, Tai Chi, meridian, psychology, mind, and recently finance has achieved great success and peaked me.<br>I have never had a conversation with him directly, there is always only one shadow<br>As said in “God, Xueba, Man”, “God is not a bird of us”<br>But I have been trying to control my desire carefully, chasing after the shadow </p>
<p>There are a lot of trivial things and I don’t have time to listen to inner voice<br>And most of the time, I am satisfied with my choice<br>But a person, at home, closes the doors and windows, all around you are lonely, and when you are alone<br>Will face the godlike opponent of the superego and the piglike ally of the self </p>
<p>Only to realize that I was so fragile, even cowardly and crying<br>No pain no gain, but sometimes I wonder if the price is too great, what is it to toss about? It’s better to live a small life peacefully, why not be happy </p>
<p>How to balance the gap<br>I think that all the powerlessness and sorrow come from this </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>To the dead 2012</title>
    <url>/en/For-2012/</url>
    <content><![CDATA[<p>I still have a hindsight. It was originally a New Year’s Day summary. It was delayed until the Spring Festival, and then today. </p>
<h2 id="Written-in-2012"><a href="#Written-in-2012" class="headerlink" title="Written in 2012"></a>Written in 2012</h2><p>I was restless a month before the Spring Festival<br>I don’t know if it has something to do with a person outside<br>When I went home during the Chinese New Year, I looked at the snow flying in the sky and the earth wrapped in silver on the bus, and my heart returned to peace. </p>
<a id="more"></a>

<p>2012 was the year I grew the most<br>Leaving aside the changes in the external environment, we can no longer use students’ standards to demand ourselves </p>
<p>In the first half of the year, I had nothing to do, read books and played games at home<br>Remember the godlike work “Take Time as a Friend”<br>The heart is eager, and I read it intermittently for a month<br>After that, the world feels different<br>Probably since then, fell in love with reading </p>
<h2 id="Overkill"><a href="#Overkill" class="headerlink" title="Overkill"></a>Overkill</h2><p>I still remember the process of Tai Chi from rigid to soft in my sophomore year. I chatted with my teacher once<br>He said that I was shaking too hard, and asked my classmates to take a video with their mobile phones, and I would understand by looking at them.<br>I was stunned and said, I thought this was the only way to go. </p>
<p>Yes, this is overkill </p>
<p>I also felt back pain when I was in high school<br>I have been exposed to traditional medicine since then<br>But recently I felt pain in my limbs and neck pillow<br>I heard a sentence in Dongwu’s Theory of Relativity, “When you realize his existence, it may be a problem.”<br>I thought it was more serious and wondered if I was going to die<br>But recently I saw it in “The Art of Learning”, it may also be an introduction to Tai Chi, and I felt something I didn’t feel before<br>In short, everything goes on and stays calm </p>
<h2 id="At-a-glance"><a href="#At-a-glance" class="headerlink" title="At a glance"></a>At a glance</h2><p>Sometimes it’s so strange, you can notice her at a glance when you are in a crowd<br>Even if it’s not the first sight, after a while, in the vast crowd, you will notice this person<br>Just seeing it can distinguish her from the people around her<br>Background, personality, occupation, hobbies are all unknown, but you can still feel her special </p>
<p>Go to the Westside Ice Rink on Saturday, this is the second time in my life skating<br>Like skating<br>One is to make yourself feel the difficulties of being an upright animal again and train your cerebellum<br>The second is to re-understand the balance, this and Tai Chi should have a complementary effect<br>So decided to make it a constant for weekend sports<br>At present, friction is still used for steering, and I hope to use centripetal force next time </p>
<h2 id="impetuous"><a href="#impetuous" class="headerlink" title="impetuous"></a>impetuous</h2><p>Everyone is saying that this is an impetuous society </p>
<p>Yes, the general trend<br>There is a saying: If you live in an abnormal place for a long time, you will regard the abnormality as justified. </p>
<p>I do not deny that I am impetuous<br>I want to do everything, I didn’t get into anything<br>But I feel helpless. Reading and paying attention only started from the senior year.<br>Knowing GTD, what’s the use<br>The key is the quality of time usage, not the quantity<br>flow- heart flow, time stops for you </p>
<p>The same is true for impetuousness, I feel like how to deal with a deep and broad relationship<br>First wide-ranging, as Qiao said, keep trying to discover, and eventually, you will find your interest<br>I have been struggling with programming for two years in the university. I naively thought it was a lifetime thing.<br>And thought that as long as you are called a master or a great person, you don’t have to worry about money<br>And claim to work for interest, not money<br>Look now, it was so silly and naive<br>In the carefree four years of college, I didn’t make it wide. Although it’s a bit late now, I still have to continue to do this. </p>
<h2 id="Moving"><a href="#Moving" class="headerlink" title="Moving"></a>Moving</h2><p>Thank you to those friends in Hefei (I turned out to be disgusted with this term, but later found out that there is another meaning, Chinese culture is really broad and profound), I used to pull you out every time I was sad.<br>And stay with me for a while<br>Who else, when I learned that I had five subjects and retaken one, did not get a bachelor’s degree in psychology, did not enter a graduate school, out of desperation for a humble salary and rushed around, and prepared the day before my birthday When you are hit and sad and messed up, there is no disgust but comfort </p>
<h2 id="Sanshengshi"><a href="#Sanshengshi" class="headerlink" title="Sanshengshi"></a>Sanshengshi</h2><p>Just listening to the name is awesome </p>
<p>The first contact was in “Sou Shen Ji”: </p>
<blockquote>
<p>Lie on the three-life stone, realize the past and next lives, drink the worry-free spring water, and forget the grudges </p>
</blockquote>
<p>Last time I visited Hangzhou and I googled Hangzhou attractions, I found three words “Sanshengshi” </p>
<p>At the end of my 22-year-old, there were many things that deviated from my vision<br>And I found that everything I did was probably avoiding (what to avoid?) </p>
<p>The most depressing thing is that after a sleep, the brain recompiles and runs everything according to what it wants. </p>
<p>When I woke up, I found myself sleeping very deep and relaxed, just like the time when I heard Zhao tell me I have BL in my junior year. </p>
<p>Then I went to see the Sanshengshi, not for anything else, after all, it’s my name to remove the life. </p>
<h2 id="Utility-and-freedom"><a href="#Utility-and-freedom" class="headerlink" title="Utility and freedom"></a>Utility and freedom</h2><p>Understand true liberalism, understand the role of inheritance tax, </p>
<p>I understand that I may not have independent views, and there is a huge gap between critical thinking and critical thinking. </p>
<p>I understand that since “Happiness Lesson”, I feel so good about myself, and even overcorrected </p>
<p>Understand that you still can’t make promises to others, no matter who that person is </p>
<p>I understand that in order not to disappoint myself or others, I frequently choose not to act </p>
<p>Understand that sometimes opportunities are used to wait and change, the final result is lost </p>
<p>I understand that once I get frustrated, I still feel sad </p>
<p>But I still don’t understand, what when where who why how </p>
<p>Sometimes I feel that everything I do is just a small mess, so what if I change it, I still feel a sense of powerlessness </p>
<p>Yuyu stream bottom pine, seedlings from the mountain<br>In the diameter of the stem, shade this hundred feet </p>
<p>Wan said she recently discovered that if you work hard, you will achieve it </p>
<p>But my model is, it may not be realized, at least there will be many gaps between the real result and my own modeling </p>
<h2 id="hope"><a href="#hope" class="headerlink" title="hope"></a>hope</h2><p>Of course, I think, maybe they are just trying to excuse themselves and find a good-sounding reason for themselves<br>Of course, more likely, what I said is wrong<br>But in any case, no matter how you sigh, the wonderful 22 has passed.<br>Sometimes it feels like there is a clock, ticking on the alarm clock<br>Is it an inner time observation, but also the experience of the passage of time<br>It’s true, the dead are like husbands </p>
<p>I also know that hope does not matter whether there is or nothing<br>But I can’t help but hope that I’m on my way to the end of the third cycle.<br>I can make a breakthrough, just like the name of a Microsoft game: The Rise of the Country </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>So Young</title>
    <url>/en/So-Young/</url>
    <content><![CDATA[<p>I want to write something, but I don’t know where to start </p>
<p>Probably entering the bottleneck period, I can’t feel any obvious changes </p>
<a id="more"></a>

<p>And no wonder there is a shift from blog to Weibo<br>There is no time to code a whole paragraph<br>Time is completely fragmented </p>
<p>And Shuangpin is finally getting smoother, except for tyu and other letters. Sometimes I don’t know it and I need to try it. Most of the time, it’s barrier-free<br>When I use Quanpin in the library, I obviously feel that there are too many subtitles to be tapped. </p>
<hr>
<h2 id="Hangtu"><a href="#Hangtu" class="headerlink" title="Hangtu"></a>Hangtu</h2><p>The first time I went with Yiya in Lu’an<br>At that time, I was shocked. The bookshelf reached the ceiling, and I had to climb the shelf while holding the book. It felt like a Harry Potter movie.<br>I wanted to come often<br>Last May Day, I finally stayed for more than a long time, and I tried the topic reading (in fact, parallel reading is not considered at best)<br>Let’s not talk about the reading effect, just take out the relevant books and brush off N of them. It’s quite fulfilling, don’t be too cool. </p>
<hr>
<h2 id="weekend"><a href="#weekend" class="headerlink" title="weekend"></a>weekend</h2><p>We don’t know what changes can bring us, but we know exactly what we will lose<br>No wonder always avoiding and avoiding<br>I ran to Shanghai and Hefei last month, let alone the effect of relaxation, it is true that the card burst </p>
<p>I used to be a housekeeper on weekends, and I feel overkill again. It seems that I am always pushing myself.<br>The time schedule is full, like a real-time multitasking operating system, non-stop, the CPU is always fully loaded<br>The result is tired, and I don’t feel like a weekend at all. The most depressing thing is that it’s too divergent. I didn’t do everything well. When I’m free, I don’t know where to start. </p>
<p>If I feel a week this time<br>It seems that one day we must stay in the house without opening the door;<br>Must be delayed on Friday or Saturday until one or two in the morning<br>To find a little rest </p>
<p>But today I ran for another day<br>I saw Mechanic3 in the morning, and it was done by one person again, ha ha </p>
<p>I think Tony must also be thinking, take off that armor, what is he, “Iron Man”? What about other people wearing armor?<br>He always called himself Mechanic, but later he seemed to have found the answer. He became more determined and healed his anxiety. At the end he said “I’m ironman” </p>
<p>In the afternoon, I went to a place similar to the English corner and read the original “art of learning”<br>I have brushed Chinese before, but the result is still full of obstacles and tragedy </p>
<p>Staying up late, sleepy and not sleeping, no morals<br>But the night is quiet, everything in the day fades, and the feeling of powerlessness suddenly occurs. Is this person me? </p>
<p>Wang Xiaobo said that all human suffering is essentially anger towards his incompetence. </p>
<p>It’s right to be angry, it’s not right to be nervous to harass others, then who is sorry?<br>I will go for psychological consultation tomorrow afternoon. I have already made an appointment. </p>
<hr>
<h3 id="World-Book-Day"><a href="#World-Book-Day" class="headerlink" title="World Book Day"></a>World Book Day</h3><p>4.23 After turning over the Douban group, I knew it was World Book Day<br>Helpless to resuscitate too late, it is the first time in life to know<br>Remember that sentence </p>
<blockquote>
<p>I was reborn because of 200 books, and I was born again because of 1000 books </p>
</blockquote>
<p>I thought that the fighting falcon I have been paying attention to, 1000+ is good enough<br>I just saw a broken 8k+ on Zhihu<br>For a moment, I thought I was dazzled<br>Then I thought it was extensive reading, and after seeing the number of notes, I collapsed<br>Ruin three views<br>Could it be the sweeping monk in “Dragon Babu”? </p>
<p>At first I thought it was a case, it is not universal<br>But the reality is cruel<br>It is sad to find that the broken k is calculated by heap<br>Are these people perverted? . . </p>
<p>I was not calm in an instant, I turned over the boxes and turned the cabinets, and marked all the books that I had read before, as long as they were books.<br>Thanks to the contribution of martial arts + fantasy, it instantly doubled, breaking through 200+, but unfortunately nothing has changed, and I have been a passerby since then.<br>Dedicated to today </p>
<hr>
<h3 id="Heart-to-heart-yet-independent"><a href="#Heart-to-heart-yet-independent" class="headerlink" title="Heart-to-heart, yet independent"></a>Heart-to-heart, yet independent</h3><p>There is a sentence in “Cang Hai”: </p>
<blockquote>
<p>If there is no sweetheart by your side, even if there is a peerless light, what use is it? </p>
</blockquote>
<p>Compared with Yingying in Kunlun, I prefer Hua Xiaoshuang, such an independent woman<br>Although I don’t know much about martial arts, I know exactly what I want and what I can do, kind, warm, and optimistic. </p>
<p>Like Shu Ting’s “To the Oak” </p>
<blockquote>
<p>Heart-to-heart, yet independent </p>
</blockquote>
<p>but </p>
<blockquote>
<p>Sometimes when I fell in love with someone, I was already broken in love. There was no confession, no holding hands, no hugs, none of them, but I felt that I had been in love for a long time. </p>
</blockquote>
<p>Now I know a little bit more than before<br>I have never crossed the mountain, I don’t know, my horizons are a bit broadened<br>But when I had a drink with the captain that time, I said, I know a little bit more, but is it useful? </p>
<p>like </p>
<blockquote>
<p>As for the later story, I have already missed the right time to meet the right person again. It is sad for me, and hurt for her. </p>
</blockquote>
<p>I am more liberal. I think respect provides a preparation for true love. Once that person appears, I will go all out<br>But when you think about it, why not deceive yourself<br>But what can I believe if I don’t believe it, I can only choose one, life is so helpless </p>
<hr>
<h3 id="To-our-dying-youth"><a href="#To-our-dying-youth" class="headerlink" title="To our dying youth"></a>To our dying youth</h3><p>The whole article is full of a touch of sadness, and I am also very sad when I read it. Alas, the university has never experienced this medicine<br>When I read it, I have already graduated, tragedy, I heard that the movie didn’t make the taste as it should be, I didn’t watch it, and I don’t want to be sang again.<br>When I returned to school after Qingming last time, I was a little envious of those students<br>I originally planned to go downstairs to the 14# dormitory to burn some paper for memorial service, but I gave up later<br>A passage I saw very early should be very general: </p>
<blockquote>
<p>In fact, I am quite envious of these tech nerds, mainly because of their lifestyle and unity. They can play World of Warcraft together, play Dungeons and Dragons board game, discuss women together, play anime together, and experience all kinds of joys in the world of men. Events, such a happy party, I’m afraid it’s only possible when you’re in college. After going to work, you have a career, that is, drinking and chatting together, all your hobbies may be renewed, because it will definitely delay your work. And life, so when you are happy, don’t blink, it’s 30 years. </p>
</blockquote>
]]></content>
      <tags>
        <tag>Reading</tag>
      </tags>
  </entry>
  <entry>
    <title>Feelings after joining the company for almost a year</title>
    <url>/en/Thinking-in-one-year-of-working/</url>
    <content><![CDATA[<p>JUST DO IT<br>Just do IT, ha ha </p>
<a id="more"></a>

<p>One year after graduation, let’s write a little bit </p>
<p>Going to school was easy at the time, and I thought I liked programming<br>But I really liked it at that time. No one was in charge of the university and I went to watch it spontaneously.<br>Probably because of the influence of the book “Be the Best You”, I regarded the data structure and algorithm very importantly, and stupidly thought that the trainees were all floating clouds, and even suffered a lot later. </p>
<p>Analyzing now, it was also that the vision was too narrow at that time.<br>People have to be a little hobby, otherwise it is so empty<br>At that time, I only knew programming, and it should be a sustenance. If you don’t even like this, and you don’t have a girlfriend, this kind of life is terrible </p>
<p>After the offer was signed, I was immediately removed from school<br>In that year, I had nothing to do, and I looked around and found many wonderful things.<br>Discover that the world is so magical and discover that there are many possibilities<br>Why do I define myself as a program ape siege lion? </p>
<p>I joined later, and overall, it’s okay<br>Day by day, it’s like plain boiled water </p>
<p>At the beginning, I lived far away. Every day, “Time is like water in a sponge. If you want to squeeze, you can always get on the bus.”<br>Obviously the dung bucket of the ants, I feel sad to think about<br>Later moved to the company, in order to save money, the paper is relatively old<br>I’ve seen Daqiang for the first time in my life, it’s not just disgusting. </p>
<p>In terms of work, generally speaking, most of the time is not too busy. At first, I looked at iOS development in my spare time.<br>I got busy later, my personal time was squeezed infinitely </p>
<p>I don’t know if it’s my Jiangzi or the industry is Jiangzi<br>I feel a bit like a firefighter, wherever there is a fire, wherever I am caught<br>At first it was Android, then the boss asked me to take a look at iOS<br>(Insert: I think everyone who is accustomed to win, contacting Apple, will be shocked by its design, which is why I always want to buy an air or pro)<br>Okay, I watched it for about two weeks and said that the Android side is too busy. Let’s see Android.<br>Later, he was caught to compile the android project<br>Now I’m going to be caught writing a webpage again </p>
<p>Of course, I just vomit, anyway, I’m not interested in it anymore.<br>Whatever you need, just take a look at what you need, and what you can do at work becomes<br>Some people should say that it can’t be deep<br>Yes, I don’t know, but I really don’t want to see it<br>I’m really envious when I see a colleague gnawing on jvm </p>
<p>I don’t have language beliefs, I just laughed at that language ranking<br>It feels reasonable to exist, and every language is born to deal with specific problems<br>No language is particularly good, that language is particularly bad </p>
<p>Of course, there is always a problem of habit. I have always used C to learn programming. I hardened Java and found that it was really smooth. It was a language for people to look at. Eclipse is also more comfortable to use than VS+VA. The automatic prompt is really too powerful. Up<br>But two days ago, I looked up the Bisset of the year and I don’t know it at all. Is this something I wrote that year?<br>There is also the Linux kernel, version 0.11, and the 2w code is implemented. It is short and concise, which is incredible </p>
<p>Yes, time is like cleavage, there is always a squeeze<br>But those who do this should all understand. I can’t wait to fall asleep when I get home. I don’t even want to care about my girlfriend. Where can I get the energy to do other things, and it’s accompanied by delays.<br>Yes, ** “I often worry that I don’t have enough time, but I squander the little time I have.”** </p>
<p>After a major layoff, about a half of the people who left, many compatriots who joined the job at the time were recruited<br>I became the silent majority, clocking in and out of get off work, not talking gossip, and not communicating with people around me very much.<br>The project prospects are not optimistic. TL has already flashed, the new TL is very anxious, and the Yali is getting bigger and bigger<br>I used to think there were many opportunities here, and I wanted to jump into a better company in two years. Now look at which company to go to, it’s actually not much difference </p>
<p>I’m really tired now, I want to quit, find a place to rest<br>But it’s not as good as going to school, with parents covering </p>
<p>If you want to change careers as soon as possible, where should you go? </p>
]]></content>
      <tags>
        <tag>Career</tag>
      </tags>
  </entry>
  <entry>
    <title>How to learn Shuangpin</title>
    <url>/en/How-to-Learn-Shuangpin/</url>
    <content><![CDATA[<p>The first to know that Shuangpin is the era of smart ABC<br>At that time, the input status bar in the lower right corner had a “Quan Pin”, click it, it becomes Shuang Pin, try a few letters, I don’t know what happened.<br>Later, when the Sogou input method was in full swing, Pinyin input evolved to the second generation, which greatly accelerated the input speed of Pinyin, and Wubi was left out in the cold. </p>
<p>Usually when we think about something, what comes out of our mind is “sound” instead of Chinese characters.<br>So Pinyin is more in line with the speaking process than Wubi </p>
<a id="more"></a>

<p>Later I tried Shuangpin, mainly because I saw a passage from Teacher Li Xiaolai’s “Take Time as a Friend”: </p>
<blockquote>
<p>When I really realized the benefits of taking notes while reading, or even taking a lot of notes, I was surprised that I was scared into a cold sweat by myself. I suddenly understood how ridiculous it was that I refused to practice blind typing in the past. At that time, even if there was no stimulation of the opposite sex, it would take at most a week to get things done. I turned out to be lazy and refused to learn and practice. If this thought made me get goosebumps, even if I spent a week learning touch typing 5 years ago, how many more reading notes and words can I accumulate? ——Not to mention that almost 15 years ago, I had the opportunity, and it was entirely possible to learn blind typing. My God, how much time did I waste? I dare not think about it anymore. </p>
</blockquote>
<p>Then I started to check the information, it’s not difficult, everyone will understand after reading Baidu<br>After all, they are all in the Pinyin system, just like when I was a child, I spoke the hometown dialect, but then there is basically no obstacle to learning Mandarin. </p>
<p>Facing several problems: </p>
<h2 id="1-Speed"><a href="#1-Speed" class="headerlink" title="1. Speed"></a>1. Speed</h2><p>If it’s not for speed, the silly eggs will be replaced with Shuangpin </p>
<p>So where is Shuangpin fast?<br>for example:<br>I want to hit “Hello, Double Fight World”<br>The full spelling is <code>nihao,shuangpinshijie</code><br>Shuangpin is <code>nihk,udpnuijx</code> (the natural code I used)<br>This is only six characters, which reduces the number of keystrokes by 8 times. If you count 3k a day, it is also 4k times less. It is also beneficial to protect your fingers.<br>Of course you may say “I have super simple spelling”, <code>nh, spsj</code><br>Then I won’t talk about the duplicate code, you can turn the page to find it slowly<br>And Shuangpin is also Pinyin, so it makes no sense to not support Super Jianpin </p>
<h2 id="2-Cross-input-method"><a href="#2-Cross-input-method" class="headerlink" title="2. Cross input method"></a>2. Cross input method</h2><p>Quanpin, no matter which input method is used, the keys are exactly the same<br>There are several schemes for Shuangpin, the common ones are the following (you can see it in Sogou settings)<br>Sogou also has a Sogou plan </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Shuangpin.jpg" alt=""></p>
<p>I have checked before which scheme is more efficient<br>Children’s shoes that have not been touched don’t need to be tangled.<br>If you want to say that there is a real gap, you are only familiar with it </p>
<p>In addition, if you are not a coder, the one who is familiar with Microsoft is OK. After all, Microsoft’s reputation and the general input method QQ and Shenma support this. </p>
<p>If you use  family bucket and don’t want to install a third-party input method, use Sogou’s solution<br>This is the only one that supports both iPhone and Mac without jailbreak<br>The first natural code I used, but I had no choice but to change it to the Sogou solution 🤷‍♂️<br>Fortunately, the keys are almost the same, you will be familiar with it in a few clicks </p>
<p>Please continue </p>
<h2 id="3-Cross-platform"><a href="#3-Cross-platform" class="headerlink" title="3. Cross-platform"></a>3. Cross-platform</h2><p>I have played the dvorak keyboard before, and after a month of familiarization with the keys (the qwerty keyboard can only be typed blindly after a few months), I don’t know if it is a psychological effect, and I feel that the speed has indeed become faster, from the original 160 to 220 </p>
<p>Windows can implement the qwerty-&gt;dvorak key mapping by modifying the registry, but ubuntu can’t. In addition, mobile phones have become popular after sophomore year. It is very painful for the two keyboards to switch directly. I have no choice but to return to qwerty. </p>
<p>With the lessons learned from the past, we should be very careful when choosing a plan, in case any of them don’t support it. </p>
<p>In the end, the natural code was selected, whether it is ubuntu, mac, or even the QQ pinyin of android, there is this “natural code” </p>
<h2 id="Exercise"><a href="#Exercise" class="headerlink" title="Exercise:"></a>Exercise:</h2><p>Practicing boxing but not practicing kung fu<br>I figured out the principle, plan and everything, and finally reached the last step<br>Also the most simple step </p>
<p>Yes, you read it right, it’s the easiest step<br>As I said before, if Quanpin to Wubi is like learning English, then Quanpin to Shuangpin is as simple as learning Mandarin.<br>So students who have tried Wubi and gave up don’t have a psychological shadow. </p>
<p>It’s the easiest thing to say, because you only need to print out that key position, place it next to the computer, and open QQ, and chat with others every day as usual, and it’s OK. </p>
<h2 id="Self-practice"><a href="#Self-practice" class="headerlink" title="Self-practice"></a>Self-practice</h2><ul>
<li>Two days ago: It was weird (this time you will constantly want to switch back to ShuangPin, especially MM said that your typing is so slow, are you busy with other things, this point of pride is not necessary) </li>
<li>The next two days: Get used to it (the speed gradually increases, except for individual vowels that need to glance at the key table, and self-esteem slowly recovers)<br>One week later: Naturally, from now on, all people will be passers-by </li>
</ul>
<p>Congratulations, one more skill necessary for home travel outfit B!<br>Especially when someone uses your computer to press out a series of inexplicable words </p>
]]></content>
      <tags>
        <tag>Shuangpin</tag>
      </tags>
  </entry>
  <entry>
    <title>Kindle Paperwhite use physical examination</title>
    <url>/en/UX-of-Kindle-Paperwhite/</url>
    <content><![CDATA[<p>In the Haitao Japanese version, after a few minutes, vertical lines appear in the middle of the screen inexplicably, and more and more, depressed<br>Later on Google, it was said that electronic ink should not be close to the magnetic field, could it be caused by the speaker of the mobile phone?<br>At present, I can make do with it, it really affects the recognition word, and then contact customer service<br>The Japanese version cannot be repaired in the mainland. </p>
<a id="more"></a>

<p>I have seen my colleague’s kindle5 before, it flashes when I turn the page<br>For me, who is accustomed to the refresh speed of mobile phones and other things, suddenly feel unacceptable<br>It’s been a few months since I bought this. The mini2 hasn’t been released yet, and the library here in Hefei is not strong </p>
<p>After really using it, I feel why it is called a reading artifact<br>First of all, electronic ink protects the eyes, is not as heavy as a mobile phone, and has a single function to reduce interference </p>
<p>And there used to be many problems with mobile phone reading<br>Unacceptable screen dead pixels, unsatisfactory format after PDF conversion, custom fonts, chatting online, playing games, etc. </p>
<p>One day I watched and suddenly discovered that I had subconsciously ignored the above issues, and focused entirely on the acquisition of content. </p>
<p>I can only sigh that this Dongdong experience is so awesome-I didn’t even realize it was uncomfortable, it’s really super value </p>
<h2 id="How-to-use-push"><a href="#How-to-use-push" class="headerlink" title="How to use push:"></a>How to use push:</h2><p>Search for one piece of tutorial, just do it step by step, use red for yourself </p>
<h3 id="1-Book"><a href="#1-Book" class="headerlink" title="1. Book"></a>1. Book</h3><p>TXT RTF and other formats, email to <a href="mailto:yourname@free.kindle.com">yourname@free.kindle.com</a> (amazon will help you convert)<br>PDF can be viewed directly, but with margins, horizontal screen is fine<br>If you have to transfer, you can use calibre to convert to mobi email to <a href="mailto:yourname@kindle.com">yourname@kindle.com</a> (although this effect is not very good, but I tried a few other conversion software, and compared it, none of this is good) </p>
<h3 id="2-News-blog-rss"><a href="#2-News-blog-rss" class="headerlink" title="2. News, blog rss"></a>2. News, blog rss</h3><ul>
<li>Kindle4rss are all set up, and I found that only paying users can push it automatically, cheating! ! ! </li>
<li>Aikandou just seems to be upgrading the server, stop registration </li>
<li>I don’t like the name of the dog’s ears. I only experimented with this one. </li>
</ul>
<h2 id="Brush-system"><a href="#Brush-system" class="headerlink" title="Brush system:"></a>Brush system:</h2><p>Kindle can be turned into a multi-view system<br>There are two features that I like very much but the Kindle native system does not have: </p>
<ul>
<li>Multi-platform synchronization </li>
<li>Reading time statistics </li>
</ul>
<p>When you get it, the kindle pw system has been upgraded to support pdf, and it may become bricked and repaired, so I don’t have to worry about it. </p>
]]></content>
      <tags>
        <tag>Kindle</tag>
      </tags>
  </entry>
  <entry>
    <title>Imperial City Tour</title>
    <url>/en/Travel-to-Beijing/</url>
    <content><![CDATA[<p>Speaking of the imperial capital, this picture appeared in my mind: yellow sand is full of the sky, passers-by wearing thick masks; when it rains, the imperial capital can watch the sea and boat. </p>
<p>I don’t want to get out of the car and find that the sky is very weak, azure and blue. I can’t wait to type a few words on it to declare “I am sky blue”<br>After arriving at the hotel arranged by the tour guide, my little friend and I were shocked: they were rows of tiled houses and tiled houses. </p>
<a id="more"></a>

<h2 id="first-day"><a href="#first-day" class="headerlink" title="first day"></a>first day</h2><p>Earlier, I found plastic bags on the floor and dirty, messy, like the street scene behind the food stalls in Yingnan Town<br>Later, under the leadership of Director Ma, I felt that life in the imperial capital was so difficult<br>During this period, the horse guide has been on the road without stopping, as if he wanted to quickly end the day’s journey<br>It seems that Lingbo’s microstep has been small, and there is no big movement, but he slips away quickly, throwing us away.<br>Within half a day, we rushed to Tiananmen Square, National Museum, Military Museum, and then to the Water Cube/Bird’s Nest </p>
<p>KFC mentioned the small four at noon. I know that it is the small era who got an amazing 0.9 point on verycd. The lowest score seems to be 1 point. How did the 0.9 come about? Unconsciously<br>Then I was forced to watch an acrobatic performance<br>The results of the evening test were gratifying. After a year of hard work, I got a tan right away. </p>
<p>Fortunately, the tickets of a couple who are traveling together are the day after tomorrow, otherwise it is difficult to guarantee that they will go back the next day<br>Deeply experienced the struggle of the ant tribe of the Xiabei Piao family and the Chinese dream promoted everywhere </p>
<p>In the evening, I ate a big bowl house in a street that is known as gold everywhere. A friend who listened to the horse guide babbled how difficult it is to be in the imperial capital.<br>I was drinking water and thinking, damn it, it’s like you’re alone in the world<br>But after all, it’s a treat, and you have to pretend to be sympathetic. Fortunately, there is no laughter.<br>Not wanting to be the last, the couple wanted face and rushed to settle the account, and the tour guide happily took it back and reimbursed<br>When I came out, I imitated what Gandalf said to Bilbo Baggins in the movie The Hobbit: </p>
<blockquote>
<p>The world is not in your maps and books ……When you come back, you will not be the same.<br>The world is not in your maps and notes… When you come back, you are different from others. </p>
</blockquote>
<p>PS1: The big bowl house that was eaten and closed in the first year of high school?<br>PS2: Wangfujing, at the same time @新华视点: At about 20:42 on the evening of the 30th, a man stabbed a girl with a knife in front of the gate of Xindongan Market in Wangfujing, Beijing </p>
<h2 id="the-next-day"><a href="#the-next-day" class="headerlink" title="the next day"></a>the next day</h2><p>I went to the Forbidden City and took a look. I don’t know why, every brick and every tile reveals a thick feudal ignorance<br>The tour guide is in Barabala, where there is no one else. Feng Shui and Yin-Yang are magical, but two passersby became free spectators </p>
<p>PS: One of them is still Huawei’s code farmer </p>
<p>In the meantime, I saw a long-haired foreign girl, with her head down, leaning on the railing quietly, with lovely freckles on her face. </p>
<p>PS: No wonder some white people tan their skin to wheat<br>PS: After seeing this kind of person, I feel that the world has calmed down. I have seen it several times in total. In this impetuous and noisy society, it gives people tranquility, and I don’t know when I can reach such a realm without using foreign objects. </p>
<p>In the evening, the horse guide changed to a five-star hotel, no, the Express Hotel outside the Fifth Ring Road<br>There was a disagreement over how to get the body to the destination<br>After doing a long subway journey, I found that some young people were reading mobile phones/books and were charging them every minute, including our horse guide. </p>
<p>This reminds me of the reading volume of the Russian nation, and the great dynasty is finally getting better<br>But will this continue to happen? Men and women tears </p>
<p>PS: I often don’t date girls and become notices </p>
<p>I have a mentality of inaction and don’t want to lie down with the gun, and the situation is getting worse<br>On the first day, I spit out the horse guide from time to time, but now I am too weak to spit out<br>People are hard to dismantle, omitted here </p>
<h2 id="Third-day"><a href="#Third-day" class="headerlink" title="Third day"></a>Third day</h2><p>I originally wanted to go to Peking University and other universities and Zhongguancun<br>But I heard that the new students are starting school recently, they may not be admitted<br>Coupled with the little thoughts of Tai Ji the other day </p>
<p>Look at the time and ride alone for thousands of miles.<br>Drinking a bottle of water from the Western Qinghai-Tibet Plateau of the Chinese nation at the South Station, it was immediately full of positive energy<br>After reading a book in the car for a while, I got off and bought an ice cream<br>Super Plus enjoy </p>
<p>Of course the drawing Tucson is broken<br>Just then I received a text message and was asked to invite dinner<br>Dizzy, don’t you know if you’re tired?<br>I just came back from the imperial capital, so tired and half to death, I also invited to eat, let’s talk about my boyfriend,<br>Then the willpower that I watched in the past two days took effect, I remembered the green exercise, took a few deep breaths, asked why, and answered that I didn’t eat<br>I also think of being rejected by Ten Actions back then, and all kinds of cheating and dog-blood incidents afterwards. Looking back, it looks like a vulgar romance novel from the local to the scumbag.<br>I bought a watch last year and I made a mistake if I didn’t settle the account. </p>
<p>After I got home, I went online for more than an hour and found that there was no water<br>Suddenly, the revised Maslow needs levels are too accurate </p>
<p>When I ran to pay the water bill, the salesperson looked surprised and didn’t owe the bill.<br>In doubt, the landlord sent a text message saying that he closed the main gate </p>
<p>Damn it, your sister! ! ! I think they are still sitting on the red train </p>
<p>Later, I heard from the landlord’s wife that their carriage caught fire due to the aging line, and then they were called by the police to record the transcripts. It was that time. </p>
<p>So, you can’t speak too harshly, and you can’t be a man. Sao Nian </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>Beijing</tag>
      </tags>
  </entry>
  <entry>
    <title>Warm acupuncture</title>
    <url>/en/Warm-Acupuncture-Therapy/</url>
    <content><![CDATA[<p>Today, Zha Chengshan seems to have found the right position. It is not very painful. It will be sour after an inch.<br>Put the Ai Zhu on the needle handle and ignite </p>
<p>It’s okay at the beginning, Mars slowly burns<br>A single spark can start a prairie fire, and the smoke is getting bigger and bigger, it is probably scared<br>The discomfort is getting stronger and stronger, so that I have a strong hallucination: the acupuncture points are scorched. </p>
<a id="more"></a>

<p>Hurry up and pour the water, and heard a squeak, and then a lot of smoke came out, as if hitting iron<br>Ai Yiran, who didn’t want to ignite, was stubborn and had to take a cup of water<br>Although it finally went out like unburnt smoke<br>But Ai Zhu and Needle seem to be dying together, they are inseparable from the swelling<br>I dare not make any big moves, after all, the other end is stuck in my flesh o(╯□╰)o </p>
<p>Because there was a pile of moxa sticks on it, I had to pull it hard, and it felt like 101 sticking to it. It was very painful. </p>
<p>I’m sweaty, but when I wash my face I feel pretty cool in my calves </p>
<p>Recall the analysis:<br>It should have used hit run hit<br>Coupled with the auxiliary defense without lateral friction, the damage value is greatly increased<br>So too hot may be an illusion, the movement of the needle tip pulls the nerve fiber is the reason </p>
<p>Of course the most likely thing is that I am neurotic </p>
]]></content>
      <tags>
        <tag>Acupuncture</tag>
      </tags>
  </entry>
  <entry>
    <title>Use Github page as blog</title>
    <url>/en/use-github-pages-as-a-blog/</url>
    <content><![CDATA[<p>Finally, I found this place because I wanted to have a blog of my own a few months ago </p>
<p>There are many public blogs, such as Douban and Sina, but none of them are my favorite </p>
<p>I just want to find a place where no one knows me, can record some of my <strong>experience</strong> or <strong>idea</strong> </p>
<a id="more"></a>

<p>Qzone is a blog I have used for a long time, but the people in it are all my friends or colleagues. I don’t want to be regarded as a <strong>psychiatric</strong>. ^_^ </p>
<p>I followed the method of <a href="http://jekyllrb.com/">jekyllrb</a>, step by step, it seems to be successful, the page is online! There is a “<strong>Hexo</strong>“ on my website. </p>
<p>(Now, I use <strong>Hexo</strong> instead of jekyll) </p>
<p>In fact, as early as a year ago, I heard from a classmate that <a href="http://github.com/">github</a> can be used as a blog. But this task was delayed day by day. I think there must be a lot of configuration settings. Not only do I dislike <strong>complicated things</strong>, but as a <strong>procrastinator</strong>. </p>
<hr>
<p><a href="http://www.englishiskillingme.com/">English is driving me crazy</a>, I don’t have enough ability to do this </p>
]]></content>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>The murder caused by two bottles of Jiaduobao</title>
    <url>/en/Two-bottles-of-blood-caused-by-Jiaduobao/</url>
    <content><![CDATA[<p>Two small partners, a good relationship<br>One of them is from the police school and the other is from Chinese medicine </p>
<p>A friend of Chinese medicine doctor came over as a guest, and quarreled when he left, and was fined 5 yuan to buy a bottle of Jiaduobao that he had just drunk.<br>Because it is nearly 43% higher than the market price, it may have caused a psychological imbalance in the Chinese medicine partner. He actually took the risk and tried to take another bottle of Jiaduobao.<br>After being discovered, the nature of the natural incident escalated, and the friends of the police academy felt mentally insulted<br>And the TCM friends stubbornly resisted, and at the same time unconsciously brought on taunting skills<br>In the end, he tried to settle the incident with RMB and was punched afterwards. </p>
<a id="more"></a>

<p>I thought that the little friend who studied Chinese medicine was like me. He had never used hands since he was a child, and he has not even seen people do hands. He has little on-the-spot experience, so he has been in a passive state of being beaten. dps<br>Later I found out that my drawing Tucson was broken </p>
<p>When I reacted and thought about pulling, the battle was over<br>The incident was so sudden, I didn’t react at all, and my fellow Chinese medicine practitioner was hit<br>The final blow is a flying kick + back head knife<br>After the incident, I somehow appeared in the arcade 2x combo<br>Probably I didn’t expect that my fellow police academy would really do it. I was shocked! </p>
<p>After that, the police academy’s friend blocked the door and refused to let the Chinese medicine partner go. I didn’t understand at the time, but now I remember<br>It often appears in martial arts novels that after receiving a palm, there was no problem at the time, and after a few steps out of the gate, he vomited blood and fell to the ground.<br>Of course, after a consensus, the TCM friends still left </p>
<p>Don’t worry, ask him about his injuries, whether he suffered internal injuries when he was kicked, and whether he had bruises on his stomach.<br>I don’t want to be unscathed and have been active on the dating scene with his GL </p>
<p>-_-||| </p>
<p>The little friend from the police academy here said that the soft tissue of the hand seemed to be injured, and it hurts when he moved. </p>
<p>-_-||| </p>
<p>I asked my friends who have traditional Chinese medicine before that if they don’t practice internal strength, they know how to acupuncture and moxibustion.<br>The result was still vowed </p>
<p>Given his GL surname Zhang, could it be that the following episode happened at that moment: </p>
<blockquote>
<p>At this moment of silence, the little friend of Chinese medicine suddenly remembered a few words in the textbook: “He is strong by him, and the breeze blows the mountains. He is horizontal, and the moon shines on the river.” He was there. When I read these few texts in the study room, I still didn’t understand the reason. At this moment, I suddenly remembered that with the tyranny and viciousness of the police school students, oneself is by no means an enemy. According to the main point of the textbook, it seems that no matter how strong the enemy is, No matter how ferocious, he can be regarded as the breeze blowing on the mountain and the bright moon reflecting on the river. Although it can be applied to me, it cannot be damaged in the slightest. But how can I not harm my body? The text below said: “He is cruel and hates himself, I am really angry.” </p>
</blockquote>
<p>T M D is this playing me </p>
<p>Given that these two terrorists often move within five feet of our radius<br>I decided to complete Chum kiu as much as possible this weekend, just in case </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>Games</title>
    <url>/en/Games/</url>
    <content><![CDATA[<h1 id="Games-played-in-those-years"><a href="#Games-played-in-those-years" class="headerlink" title="Games played in those years"></a>Games played in those years</h1><h2 id="Monopoly"><a href="#Monopoly" class="headerlink" title="Monopoly"></a>Monopoly</h2><p>The stock market goes to their sum </p>
<p>As a result, a sudden incident, bankruptcy. . . </p>
<p>Buy insurance next time </p>
<a id="more"></a>

<h2 id="radiant-defense"><a href="#radiant-defense" class="headerlink" title="radiant defense"></a>radiant defense</h2><p>After not wanting to break away from PC games, I became obsessed with mobile games<br>Plants vs. Zombies 2 After clearing the level with speed, the meaning is still not enough<br>I wanted to see other tower defenses and I found out </p>
<p>radiant defense, Chinese called dazzle defense<br>As the name suggests, the picture is very beautiful, I like it right away<br>But don’t want to be the hardest game </p>
<p>After playing, I also felt the miserable situation in the early stage. If the technology is upgraded, the later stage will be smoother.<br>On the contrary, if the early stage is relatively smooth, the east wall will inevitably be demolished later. </p>
<p>Today, after the tenth level, I have always had that dynamic music in my mind. </p>
<p>After that, I saw that TOP’s answer on Zhihu. Fuck, </p>
<p>After a while, calm down, think about it, compare with others, go your own way </p>
<h2 id="Anno-2070-deep-sea"><a href="#Anno-2070-deep-sea" class="headerlink" title="Anno 2070 deep sea"></a>Anno 2070 deep sea</h2><p>This simulation is too high, and the pace of the game is very slow, like a real-world simulation<br>It’s okay to play for a month. It’s impossible to play a battle like Warcraft for ten minutes or even minutes. </p>
<h3 id="1-Pay-attention-to-the-people"><a href="#1-Pay-attention-to-the-people" class="headerlink" title="1. Pay attention to the people"></a>1. Pay attention to the people</h3><p>In the past games, people were made, although they were not beasts, they were at least cannon fodder, and they were drawn to be cows and horses.<br>And the people inside seem to have gone through the Renaissance and embarked on the road to freedom<br>The ruler (me) has become a serviceman, and he wants to treat the people as a master<br>Complete various facilities, hospitals, various foods, public security bureaus, concert halls, etc., to meet various needs<br>So that people are willing to come and settle down, tax </p>
<h3 id="Two-countries’-relations"><a href="#Two-countries’-relations" class="headerlink" title="Two countries’ relations"></a>Two countries’ relations</h3><p>There will be various cooperation to achieve a win-win situation<br>Of course there is also a killer: stuff money </p>
<h3 id="Three-resources"><a href="#Three-resources" class="headerlink" title="Three resources"></a>Three resources</h3><p>There are only a few islands<br>Some of the barren land left by nuclear bombs, and some are the ruins left by over-industrialization, often accompanied by acid rain<br>Some soils are milder and larger, occupying the right time and place, and may even show signs of future technology<br>Global market, you can grab land and sell land<br>You can also invest in other countries, there is actually risk control </p>
<h3 id="Four-operations"><a href="#Four-operations" class="headerlink" title="Four operations"></a>Four operations</h3><p>You don’t need a keyboard, a mouse or even a touchpad. The era of Warcraft APM is gone forever.<br>I don’t know if I missed those operations. Apart from the cross-sea trade, I have to ask me about all other matters.<br>I have to balance the resources between the islands<br>I can’t control it at all.<br>I happened to be watching “Out of Control”, which describes the distributed and small but beautiful </p>
<h3 id="Five-wars"><a href="#Five-wars" class="headerlink" title="Five wars"></a>Five wars</h3><p>Skip Chicheng and attack warehouses and ports directly, implying a draw from the bottom of the tank, with half the effort<br>After the warehouse burst, the surrounding buildings became water without a source, a tree without a root, and collapsed. </p>
<p>In terms of diplomacy, he stretched out his hands and didn’t hit the smiley people, stuffed money everywhere, watched the frictions in the surrounding countries, played happily, and developed quietly. </p>
<p>I remember when I was in junior high school, I asked my teacher about the Blitz, why some European countries surrendered without fighting.<br>The teacher smiled, hundreds of tanks pressed over, how to fight<br>At that time, all I knew was that when the empire moves, one hundred regiments will fight. I don’t know the hardships of foreign wars on population<br>And the philosophy at the time was that a soldier can be killed and not be insulted. It is better to fight until there is only one brick and one tile left than to let the enemy even half a step<br>What’s more, people just drove to the national border and didn’t fire a shot. Why did they kneel and lick it? (There was no such saying at that time)<br>At that time, I still couldn’t understand or even know the state of the soldiers who came to the city without fighting. </p>
<p>When I was in full diplomacy and distributed the submarines, and then almost at the same time, one nuclear bomb was in a warehouse, and I passed the declaration of war and directly exploded the opponent out, it seemed to understand a little bit. </p>
<h2 id="Assassin’s-Creed-4"><a href="#Assassin’s-Creed-4" class="headerlink" title="Assassin’s Creed 4"></a>Assassin’s Creed 4</h2><p>I thought that after Ezio’s Brotherhood Revelation, after a lifetime of military service, there is no god </p>
<p>It’s time to climb the wall, assassinate all kinds of stuff, no surprises </p>
<p>I saw the assassin’s 4 in verycd, I sighed for the next time, and then I saw under the black flag </p>
<p>I have watched a documentary before, China Revolution: under the red flag, not much to say, self-sufficient, so the name of 4 is so domineering. </p>
<p>This reproduces the great nautical era, tornadoes, waves, and sea battles in storms </p>
<p>So enjoyable </p>
<h2 id="Saints-Row-4"><a href="#Saints-Row-4" class="headerlink" title="Saints Row 4"></a>Saints Row 4</h2><p>Does this make me swollen? </p>
<p>Funny as always, with black humor everywhere </p>
<p>The following things are really stunned. </p>
<p>Aliens! ! ! </p>
<p>Then…and… </p>
<p>superpower? ! </p>
<p>If you’ve played the Prototype, you must be familiar with it this time<br>If you have seen The Matrix, you will understand </p>
<p>Watch that action<br>Parkour is as good as Alex<br>Jumping and accumulating power are the same as Neo<br>Coming from the sky, like Superman </p>
<p>Don’t go to the code (๑′°︿°๑) to expose, otherwise it’s easy to feign death and forcibly exit </p>
<p>Really a free city </p>
<p>The only downside is that the map is basically the same as the three generations, which is a bit small for Superman </p>
]]></content>
      <tags>
        <tag>Games</tag>
      </tags>
  </entry>
  <entry>
    <title>Why Hexo</title>
    <url>/en/why-hexo/</url>
    <content><![CDATA[<p>I used Jekyll when I first built it, Octopress never tried it<br>Jekyll’s framework design is divided into two parts: code + generated webpage<br>When uploading to github, the code part is pushed up, and hexo is a locally generated webpage, which should have certain advantages in speed<br>I saw that the default template is also pretty, so I changed to hexo yesterday </p>
<a id="more"></a>

<p>I feel that the biggest feature of hexo is that it hides cumbersome commands<br>In Jekyll’s words, at least a dozen items from construction to completion<br>And writing a new article requires at least </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jekyll new post xxx</span><br><span class="line">vim _post/<span class="variable">$time</span>-xxx</span><br><span class="line">git commit -a -m xxx</span><br><span class="line">git push remote master</span><br></pre></td></tr></table></figure>

<p>Maybe in the eyes of many people, it’s already very simple </p>
<p>But know that some people ** are not siege lions<strong>, they just want to start a blog without thinking, and the focus is on **writing</strong><br>And before writing, you have to make so many commands by Parapara, if you forget one, or miss a parameter, you have to -h, if your English is not good, you have to google, be walled, you have to baidu, wait until the real When writing, I don’t know how many Pomodoros are.<br>And jekyll has at least a bit of git concept, if you write a Chinese blog, you have to change ruby (utf-8)<br>Every day, every day, every day! </p>
<p>And hexo is really simple, you only need to know 8 letters in the whole process </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n <span class="comment"># new</span></span><br><span class="line">hexo g <span class="comment"># generate</span></span><br><span class="line">hexo s <span class="comment"># server</span></span><br><span class="line">hexo d <span class="comment"># deploy</span></span><br></pre></td></tr></table></figure>

<p>For me and other non-professional siege lions, it’s so refreshing to use it to tears. </p>
]]></content>
      <tags>
        <tag>Blog</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>My First Macbook Pro</title>
    <url>/en/My-First-Macbook-Pro/</url>
    <content><![CDATA[<p>rMBP ME865 8g 256g<br>Taobao, Hong Kong Bank, has started for three days </p>
<a id="more"></a>

<h2 id="Start-attention"><a href="#Start-attention" class="headerlink" title="Start attention"></a>Start attention</h2><h3 id="Whether-the-box-chassis-system-ID-is-the-same"><a href="#Whether-the-box-chassis-system-ID-is-the-same" class="headerlink" title="Whether the box/chassis/system ID is the same"></a>Whether the box/chassis/system ID is the same</h3><p>Whether the three codes are in one, the difference must be unpacked </p>
<h3 id="Detect-power-cycle-times"><a href="#Detect-power-cycle-times" class="headerlink" title="Detect power cycle times"></a>Detect power cycle times</h3><p>Generally within 5 times, the less the better (mine is twice) </p>
<h3 id="Check-the-warranty-date-on-the-official-website"><a href="#Check-the-warranty-date-on-the-official-website" class="headerlink" title="Check the warranty date on the official website"></a>Check the warranty date on the official website</h3><p><a href="https://selfsolve.apple.com/agreementWarrantyDynamic.do">Here</a> (you can see the seller’s purchase date) </p>
<h3 id="Never-use-any-optimization"><a href="#Never-use-any-optimization" class="headerlink" title="Never use any optimization"></a>Never use any optimization</h3><p>Especially the children’s shoes that have just turned to Windows and brought clean <strong>OCD</strong><br>I have known that Mac does not need to be cleaned up, and it is a new one, but when I see the best disk cleanup-CleanMyMac, I still feel cheap </p>
<p>After cleaning up for a while, I found that the temperature was over 90, and checked the heat dissipation problem of the mac<br>Later, it was discovered that there was a process rushing CPU<br>Then I found that many icons in the Dock became transparent (there is a word, you can click it, and restart it will not solve it)<br>One Google, many people actually reinstalled the system </p>
<p>And the culprit is actually CleanMyMac<br>The lesson of blood is that if you don’t die, you won’t die! ! ! ** </p>
<p>The solution for icon transparency: </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rm ~/Library/Application\ Support/Dock/*.db; killall Dock</span><br></pre></td></tr></table></figure>

<p>Click on the Dock to restore it; if it doesn’t work, move it out first, then drag it in </p>
]]></content>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Life shouldn&#39;t be so boring</title>
    <url>/en/Life-Should-not-be-so-Boring/</url>
    <content><![CDATA[<p>Classmate, do you feel that life is so boring<br>Anesthetize yourself in the game every day? Brushing Weibo over and over again?<br>Or is it strange that I don’t have any Han/Sister paper for my god horse? </p>
<p>In fact, the world is still very powerful. If you don’t believe me, please see: (continuously finishing…post the link later) </p>
<a id="more"></a>

<h3 id="read"><a href="#read" class="headerlink" title="read"></a>read</h3><p>No need to explain this, it’s nothing more than: </p>
<ul>
<li>Ugly people can f**k books only. </li>
<li>Read more if you are ugly </li>
</ul>
<h3 id="Shuangpin"><a href="#Shuangpin" class="headerlink" title="Shuangpin"></a>Shuangpin</h3><p>Are you all weak? </p>
<h2 id="Mode-of-thinking"><a href="#Mode-of-thinking" class="headerlink" title="Mode of thinking"></a>Mode of thinking</h2><h3 id="Occam’s-Razor"><a href="#Occam’s-Razor" class="headerlink" title="Occam’s Razor"></a>Occam’s Razor</h3><p><a href="http://book.douban.com/subject/1467022/">Does God roll the dice?</a> </p>
<p>Simplicity is better than complexity<br>Simple is beautiful </p>
<h3 id="Critical-thinking"><a href="#Critical-thinking" class="headerlink" title="Critical thinking"></a>Critical thinking</h3><h3 id="independent"><a href="#independent" class="headerlink" title="independent"></a>independent</h3><ul>
<li>economic </li>
<li>Speech </li>
<li>thought </li>
</ul>
<p>Indispensable<br>Look at my celestial environment, okay… </p>
<h3 id="Poor-Baba-Fu-Baba"><a href="#Poor-Baba-Fu-Baba" class="headerlink" title="Poor Baba Fu Baba"></a><a href="http://book.douban.com/subject/1033778/">Poor Baba Fu Baba</a></h3><p>Cash flow/ESBI four-quadrant/income statement </p>
<p>A sentence shocked by Douban Book Review </p>
<blockquote>
<p>People who read this book in the early years are now at least millionaires </p>
</blockquote>
<h3 id="Wuhezhizhong"><a href="#Wuhezhizhong" class="headerlink" title="Wuhezhizhong"></a><a href="http://book.douban.com/subject/1012611/">Wuhezhizhong</a></h3><p>I remember that there seemed to be a Harvard professor who didn’t understand why China’s students became so crazy overnight<br>He must have never read this book </p>
<h3 id="Hypothetical-game"><a href="#Hypothetical-game" class="headerlink" title="Hypothetical game"></a>Hypothetical game</h3><p>There is only one life in one’s life, which is linear<br>When there is nothing to do, observe the people around you and choose a role from the people around you to bring in<br>Simulate a completely different life </p>
<h3 id="Plato-Cave"><a href="#Plato-Cave" class="headerlink" title="Plato Cave"></a>Plato Cave</h3><p>Matrix? </p>
<h3 id="Out-of-control-a-brief-history-of-information-selfish-genes"><a href="#Out-of-control-a-brief-history-of-information-selfish-genes" class="headerlink" title="Out of control/a brief history of information/selfish genes"></a>Out of control/a brief history of information/selfish genes</h3><p>This amount of information is too much, it destroys the three views, and you have to taste it yourself<br>Free will<br>Gene-meme<br>Actually we are nothing but machine silver </p>
<h2 id="Physical-surgery"><a href="#Physical-surgery" class="headerlink" title="Physical surgery"></a>Physical surgery</h2><h3 id="Cambridge-Concise-History-of-Jin-Yong’s-Martial-Arts"><a href="#Cambridge-Concise-History-of-Jin-Yong’s-Martial-Arts" class="headerlink" title="Cambridge Concise History of Jin Yong’s Martial Arts"></a><a href="http://book.douban.com/subject/24324704/">Cambridge Concise History of Jin Yong’s Martial Arts</a></h3><p>False is true when true is also false, nothing is there and there is nothing<br>Do not believe it, see below </p>
<h3 id="Tai-Chi"><a href="#Tai-Chi" class="headerlink" title="Tai Chi"></a>Tai Chi</h3><p>It’s not Tai Chi Radio Gymnastics<br>Chen style Tai Chi, put aside the actual combat first, there is really nothing to say about health preservation<br>It is said that yoga was first introduced abroad, and later studies have shown that Tai Chi has a better fitness effect~ </p>
<p>Now more of the feeling belongs to the guiding technique, the external movement reaches the inner stillness, and the small Zhoutian is driven by opening up the big week. </p>
<h3 id="Yoga"><a href="#Yoga" class="headerlink" title="Yoga"></a>Yoga</h3><p>This is not just the usual actions on TV every day </p>
<p>The core is the three chakras and seven chakras (like meridians in Chinese medicine)<br>Sahasrara Chakra, Brow Chakra, Throat Chakra, Heart Chakra, Manipura Chakra, Sea Chakra, Brahma Chakra </p>
<p>It seems that the effect is as good as getting through Xiao Zhoutian </p>
<h3 id="Ren-Du-Ermai"><a href="#Ren-Du-Ermai" class="headerlink" title="Ren Du Ermai"></a>Ren Du Ermai</h3><p>Reading martial arts novels when I was young, I always imagined that one day I accidentally opened up the two lines of Ren and Du, and soared.<br><a href="http://news.sina.com.cn/s/2012-05-23/160624465410.shtml">Gansu Department of Health: 41 medical staff learn to get through the second pulse of Ren and Du in 9 days</a><br>This is actually true, there is nothing wrong with it! ! ! </p>
<p>In fact, it comes from the <a href="http://book.douban.com/subject/4665276/">Li Shaobo True Qi Operation Method</a>, which has high credibility </p>
<h3 id="Wing-Chun"><a href="#Wing-Chun" class="headerlink" title="Wing Chun"></a>Wing Chun</h3><p>Ip Man 1 2 The Prequel The Ultimate Battle: The Grand Master After that, everyone knew about this martial arts<br>To know the performance of martial arts / actual combat<br>What surprised me the most was that Wing Chun really played like on TV </p>
<p>When the wooden pegs were driven, there was a smashing bunker. </p>
<p>Little thought walked up </p>
<h2 id="Mental-power"><a href="#Mental-power" class="headerlink" title="Mental power"></a>Mental power</h2><h3 id="Hypnosis"><a href="#Hypnosis" class="headerlink" title="Hypnosis"></a>Hypnosis</h3><p>It’s not that you can let others do whatever you learn, don’t think too much, teenager </p>
<h3 id="Qingming-Dream-Dream-Space"><a href="#Qingming-Dream-Dream-Space" class="headerlink" title="Qingming Dream (Dream Space)"></a>Qingming Dream (Dream Space)</h3><p>Quite like a large-scale 3D game, the highest level is the dream maker<br>The core idea is: <strong>I realize I am dreaming in my dream</strong> </p>
<p>It’s said that if you control your dreams, you can do anything, anything.<br><a href="http://tieba.baidu.com/f?kw=%C7%E5%C3%F7%C3%CE">Baidu Qingmingmeng Bar</a> </p>
<h3 id="Da-Vinci-sleep-polyphasic-sleep"><a href="#Da-Vinci-sleep-polyphasic-sleep" class="headerlink" title="Da Vinci sleep (polyphasic sleep)"></a>Da Vinci sleep (polyphasic sleep)</h3><p>Legend (note the legend) Da Vinci, Einstein and other geniuses only use one sleep cycle (1.5 hours), so that, in a year, they live 100 days more than ordinary people…<br>I tried it, and again confirmed that I am an ordinary person… T.T </p>
<h3 id="Pomodoro-Technique-The-Power-of-the-Present"><a href="#Pomodoro-Technique-The-Power-of-the-Present" class="headerlink" title="Pomodoro Technique/The Power of the Present"></a>Pomodoro Technique/The Power of the Present</h3><p>When I eat, am I really eating?<br>When I walk, am I really walking?<br>Do I really hear the sounds around me? Did I really see everything?<br>When I study, can I really concentrate, even for 10 minutes </p>
<p>When really paying attention to “now”, this is also the reason for <strong>meditation</strong> </p>
<h3 id="Ljubischev-Inner-Time-Observation"><a href="#Ljubischev-Inner-Time-Observation" class="headerlink" title="Ljubischev/Inner Time Observation"></a>Ljubischev/Inner Time Observation</h3><p>All our activities, thoughts, wishes and dreams must use time as the carrier<br>The dead are like a husband<br>How to be friends with time </p>
<h2 id="English"><a href="#English" class="headerlink" title="English"></a>English</h2><h3 id="Get-GRE-words-in-17-days"><a href="#Get-GRE-words-in-17-days" class="headerlink" title="Get GRE words in 17 days"></a>Get GRE words in 17 days</h3><p>It’s been 20+ years, and it’s not done yet, the gap… </p>
<h3 id="SSS-reading-method"><a href="#SSS-reading-method" class="headerlink" title="SSS reading method"></a>SSS reading method</h3><p>Originally, I thought that after reading over a million words, I could read the original E-text book without barriers.<br>Now it’s almost 100W before I know that there is a second, third… T.T </p>
<h3 id="Never-learn-English"><a href="#Never-learn-English" class="headerlink" title="Never learn English"></a>Never learn English</h3><p>note! This is a <strong>counterexample</strong>, no one has succeeded so far<br>Don’t use this method </p>
<h3 id="Find-the-first-book-on-English-learning-methods"><a href="#Find-the-first-book-on-English-learning-methods" class="headerlink" title="Find the first book on English learning methods"></a><a href="http://book.douban.com/subject/11522125/">Find the first book on English learning methods</a></h3><p>This article by Leaking House was born in the sky, shocking me waiting for English rookies </p>
<h3 id="Dialysis"><a href="#Dialysis" class="headerlink" title="Dialysis"></a>Dialysis</h3><p><a href="http://book.douban.com/subject/3748247/">Use your English</a><br><a href="http://site.douban.com/195274/">Dad’s English Classroom</a><br>step by step, I saw the dawn from the pit to the gods for the first time<br>At present, it has entered the middle and high level O(∩_∩)O~ </p>
<hr>
<p>Of course, if all the above are of no interest, then I will use the magic weapon, and the teenager will take it: </p>
<h3 id="Quick-Psychiatric-Method"><a href="#Quick-Psychiatric-Method" class="headerlink" title="Quick Psychiatric Method"></a>Quick Psychiatric Method</h3><p><a href="http://book.douban.com/subject/4242172/">The genius is on the left, the lunatic is on the right-the first domestic interview with mental patients</a><br><a href="http://www.guokr.com/post/378641/">As long as we sit there and think about nothing, once a day for one hour at a time, we can become mentally ill! How amazing! </a><br><a href="http://www.douban.com/group/topic/29064241/">Singular functions have become popular recently, and I also seem to have high credibility. Non-spiritual. Speaking from Haizi</a> </p>
<h2 id="At-last"><a href="#At-last" class="headerlink" title="At last"></a>At last</h2><p>I’ve played most of them, and I’ve written a guide, you can read it if you’re interested.<br>Seriously, most of us just walked through our lives carelessly like this </p>
]]></content>
      <tags>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>Time management</title>
    <url>/en/Time-Management/</url>
    <content><![CDATA[<p>I prefer tossing software. GTD is not limited to: </p>
<ul>
<li>must </li>
<li>Comfortable.do </li>
<li>wunderlist </li>
</ul>
<p>These three are all good tools that support multi-platform synchronization (mac ios win android)<br>Each has its own characteristics, regardless of the ranking, you can try it out by yourself and choose the one you like </p>
<p>But after using it, you will find that the plan is still not completed. It was originally in the “Today” project, but it is still “Today” a week later.<br>Just like we all know about procrastination, and anger changes it, but it is often delayed until the last moment; don’t senior smokers know that smoking is harmful to your health, or that one after a meal can beat a living god<br>Therefore, if you don’t discover from yourself, even with the best software, you can’t stop the dissipation of time. </p>
<a id="more"></a>

<h2 id="How-to-prevent-“invalid-time”"><a href="#How-to-prevent-“invalid-time”" class="headerlink" title="How to prevent “invalid time”"></a>How to prevent “invalid time”</h2><p>First of all, it is stated that time is equivalent and there is no such thing as “invalid”. I just want to express that the past day was different from what you expected to do, and you don’t know “how did another day pass”) </p>
<p>“A Strange Life” describes a person who is accompanied by time—Liubischev, and introduces his method of time statistics. It is said that this person has an inherent time observation<br>In this TED video, Philip Sinbad introduced <a href="http://v.163.com/movie/2011/9/I/L/M7CEB9FAL_M7CEBDOIL.html">Healthy Time Concept 
</a>, I think it should be the same kind of things </p>
<p>Ljubischev’s feeling of time passing, accurate to the minute, I think it’s not difficult. (For example, I used to use a regular screen every day, how many years, I didn’t feel anything, I’ve seen Retina and come back again. It’s no good, maybe I noticed those <strong>details</strong>) accurate to ten minutes, half an hour, it’s always possible </p>
<p>So, you should spend a month, at least a week, and don’t plan anything first. Use half an hour as a unit to truthfully <strong>write down where your time is spent</strong>, accumulate raw data, and take a look at yourself. How did you spend the day </p>
<p>You may find that you have checked Weibo, surfed the Internet, etc. With these data, you will be aware of this next time you do this kind of thing. </p>
<h2 id="How-to-make-good-use-of-Google-Calendar"><a href="#How-to-make-good-use-of-Google-Calendar" class="headerlink" title="How to make good use of Google Calendar"></a>How to make good use of Google Calendar</h2><p>I have been using Google Calendar for two years. At first, it seemed to mark the interview time of various companies. Later, I slowly started to record other things. Then I saw “A Strange Life”, which actually fits the habits of the great god Happy<br>…<br>(I’m so exhausted, I’ll write later) </p>
<p>Although I kept recording since then, I didn’t really summarize it until I saw this book a few days ago. </p>
<p>I haven’t read it yet, but I have gained a lot. The notes are [here](<a href="http://leihao0.github.io/2013/12/16/%E6%8A%8A%E6%97%B6%E9%97%">http://leihao0.github.io/2013/12/16/%E6%8A%8A%E6%97%B6%E9%97%</a> B4%E7%95%99%E7%BB%99%E6%9C%80%E9%87%8D%E8%A6%81%E7%9A%84%E4%BA%8B/)<br>(This author seems to be a master, covering all aspects, from how to find your own interests to how to realize your dreams, and so on. I don’t want to read this answer, but it’s best to read the book, <em>*strongly recommended</em> *) </p>
<p>Colors are added to the calendar in the book: </p>
<ul>
<li>Black: career and achievement </li>
<li>Red: Family and social communication </li>
<li>Yellow: healthy </li>
<li>Blue: the meaning and value of life </li>
</ul>
<p>At that time, my eyes lit up, and I felt a kind of enlightenment. I immediately went to Google Calendar and tried to mark a few weeks.<br><img src="https://lh3.googleusercontent.com/1fLFHiN0styGRBRNyOok0ySL0EbBIyCnXxZcfCW6UGL1Lmx6noMFn0ak7pvfGVKigDYUfyWHDcs=s640-h400-e365" alt=""><br>Sure enough, after that, every night, every weekend, as long as you glance at it, you will know the general consumption of time in all aspects.<br>But before I didn’t watch each Event one by one, I couldn’t figure out what I did. </p>
<p>I think many people are reluctant to summarize and organize their desktops. It may be because there are too many tedious things and their brains are messed up. They feel that it takes too long to organize, and they don’t have a good framework. Then drag it. This is probably the reason for keen to pursue software (tools) </p>
<p>Followed by Google Task<br>This thing seems to be a list, and it can be graded<br>I used to record some recent things to do, and when adding Event, it is convenient to copy and paste (Is this Google’s original intention? 囧) </p>
<h2 id="mind-Mapping"><a href="#mind-Mapping" class="headerlink" title="mind Mapping"></a>mind Mapping</h2><p>Mindjet mentioned above, there are more people who use it, skip<br>Let me talk about another kind of mind map, which I also accidentally saw on Zhihu:<br><a href="http://www.zhihu.com/question/20176809">When the protagonist in the TV sorts out clues, he will connect the materials pinned to the wall with wires and find the intersection. What is the method? </a> </p>
<p><strong>TheBrain</strong>, the artifact<br><img src="http://www.liangxiaoxiao.com/wp-content/uploads/2012/10/ScreenClip1.png" alt=""></p>
<h2 id="Gantt-chart"><a href="#Gantt-chart" class="headerlink" title="Gantt chart"></a>Gantt chart</h2><p>The advantage of this thing is that you can clearly know your progress, especially when several projects are in parallel<br>At that time I was frantically looking for a good software (the reason why I don’t need <strong>Ganttproject</strong> is that the interface is too ugly, -_-|||)<br>Later I found out that Mindjet actually supports it, but the operation is very inconvenient<br><strong>OmniPlan</strong> on Mac is good, but it is paid </p>
<p>but! ! but! ! When I saw our project manager use <strong>Excel</strong> as a Gantt chart (a small grid represents a day and can be color-coded), I was stunned! ! </p>
<h2 id="other"><a href="#other" class="headerlink" title="other"></a>other</h2><p>There are also some such as: morning diary, Evernote, four quadrants of priority, and I will talk about it later if you have a chance </p>
<p>My personal value ranking: </p>
<ol>
<li>Free love </li>
<li>Health </li>
<li>Economic independence </li>
<li>Ideal </li>
</ol>
<p>I have been using Google Calendar for almost two years, and I can’t remember how it started. It implies “A Strange Life”, but it’s just a record.<br>Colors were added to this book, which made my eyes shine. I immediately went to google and tried to mark it for a few weeks. </p>
<ul>
<li>Black: career and achievement </li>
<li>Red: Family and social communication </li>
<li>Yellow: healthy </li>
<li>Blue: the meaning and value of life </li>
</ul>
<p>The calendar that was originally all-colored is immediately colorful and comes alive </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/calendar.png" alt=""></p>
<p>As stated in the book: </p>
<blockquote>
<p>The brush of life is always in your own hands. More black, blue or red is entirely up to your personal decision. I believe that as long as you complete this painting according to your own inner requirements, it must be the most beautiful in your heart. masterpiece. </p>
</blockquote>
<p>After that, it turned out to be everyone’s method of “How to Find Your Dream” </p>
<blockquote>
<p>There are subtle changes in society all the time. Over-developed information transmission means that the boundary between true and false is becoming more and more blurred. People’s psychological anxiety is increasing day by day, and their self-awareness is becoming stronger and stronger. The focus on others has shifted to self-introspection, and the pursuit of consciousness and morality has changed more urgently than in any previous historical period. </p>
<p>When a person doubts the meaning and value of his life, he is sick. </p>
<ul>
<li>Freud </li>
</ul>
<p>Different from utopian fantasy, looking to the future is a strategic behavior of mankind, which includes courage, strength, and a firm determination to put ideals into practice.<br>——Roman Herzov, former President of Germany<br>A person’s most luxurious enjoyment is that he doesn’t need an alarm clock because he is the master of his time<br>It is human nature to find troubles, even if there are no problems in reality, we will come automatically<br>If you feel you don’t have time, then you have to take a break<br>Only oneself can force oneself to accept those unpleasant things </p>
</blockquote>
<hr>
<p>This thing is like kung fu. At the master level, flying flowers and picking leaves can hurt people.<br>For example, one of my classmates used 3M sticky notes as Note (Later I saw “Too Stupid Book of Heaven” said that no more than three at a time, complete one, and tear one off from the display)<br>Of course, having a NB software when we are not so NB is just like a tiger.<br>The most important thing is not to forget the original purpose of GTD and form your own management system </p>
]]></content>
      <tags>
        <tag>GTD</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac VS windows shortcuts</title>
    <url>/en/Mac-VS-windows-shortcuts/</url>
    <content><![CDATA[<p>In the past, Windows had so many shortcut keys for efficiency, and it was destroyed.<br>Some software software really <strong>cannot replace</strong>, only empty, if you happen to know, please leave me a message </p>
<a id="more"></a>

<ul>
<li>Ctrl+c == com + c </li>
<li>Ctrl+x/v == opt + com + v </li>
<li>Ctrl+v == com + v </li>
</ul>
<h3 id="Potplayer-MplayerX"><a href="#Potplayer-MplayerX" class="headerlink" title="Potplayer == MplayerX"></a>Potplayer == MplayerX</h3><h3 id="Foobar-iTunes"><a href="#Foobar-iTunes" class="headerlink" title="Foobar == iTunes"></a>Foobar == iTunes</h3><ul>
<li>Fast forward com + opt + → </li>
<li>Convert XLD </li>
</ul>
<h3 id="Everything-Spotlight"><a href="#Everything-Spotlight" class="headerlink" title="Everything == Spotlight"></a>Everything == Spotlight</h3><h3 id="Total-Commander"><a href="#Total-Commander" class="headerlink" title="Total Commander == ?"></a>Total Commander == ?</h3><h3 id="PDF-Xchange-pro"><a href="#PDF-Xchange-pro" class="headerlink" title="PDF Xchange pro == ?"></a>PDF Xchange pro == ?</h3><p>xchange the artifact of merge, trim and edit<br>The trimming only found Briss </p>
<p>It’s been almost two weeks since I started it, and I’m almost done tuning. I will sort out the commonly used software. </p>
<h2 id="effectiveness"><a href="#effectiveness" class="headerlink" title="effectiveness"></a>effectiveness</h2><ol start="2">
<li>Mindjet </li>
<li>Evernote </li>
<li>MPlayerX </li>
<li>M Euro </li>
<li>Alfred </li>
<li>Idoce5 </li>
<li>Omni Series </li>
<li>colorsnapper </li>
<li>RescueTime </li>
</ol>
<h2 id="Programming"><a href="#Programming" class="headerlink" title="Programming"></a>Programming</h2><ol>
<li>PyCharm </li>
<li>WebStorm </li>
<li>rubymine </li>
<li>Sublime Text </li>
</ol>
]]></content>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Codecademy</title>
    <url>/en/Codecademy/</url>
    <content><![CDATA[<p>2014-01-04 23:39:28<br>Finally finished<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/codecademy.png" alt=""></p>
<a id="more"></a>

<p>No wonder Ruby gives you freedom. From the perspective of syntactic sugar alone, it is better than Python<br>I didn’t like Ruby because of the’end’ problem, but I did it as a whole: </p>
<ol>
<li>There is no need to pay attention to indentation everywhere like Python, and it can be indented automatically (Python has never seen it before), so worry-free </li>
<li>: Etc. symbols are reduced, function calls are more natural </li>
<li>More object-oriented (Python still has the concept of type (int str…), passing parameters, return values, etc. are particularly obvious; Ruby is weakened, and you can’t even feel the existence of types when you use it) </li>
</ol>
<p>As a whole, it is realized </p>
<ol>
<li>Algorithm has nothing to do with code, much less than Python </li>
<li>It’s more natural to write </li>
</ol>
<p>Therefore, it is best not to make subjective judgments before you understand something </p>
<p>PS:<br>Java and Android have been used for nearly a year, but there is no love. I don’t understand this. </p>
<hr>
<p>2014-01-03 23:37:58<br>Do not use Python and Ruby at the same time </p>
<p>Since Ruby is in front, end is fine </p>
<p>I was sad when I wrote Python, I always forgot the <strong>colon</strong>, and it is easy to forget <strong>return</strong><br>class wants (object), def func(self): torture people everywhere </p>
<p>++ &amp;&amp; This way of writing from C is also a face </p>
<p>The functions of these two languages are different. For example: </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python.append()  ruby.add()</span><br><span class="line"></span><br><span class="line">len(python) ruby.len</span><br></pre></td></tr></table></figure>

<p>It is often mixed, and the error is only found after submission, plus the internet speed… </p>
<hr>
<p>It hurts to use a proxy card, you can’t get in without even entering… </p>
<p>I’m still the kind of person who writes two sentences and runs them to see the results<br>A lot of time is wasted waiting for the results after submission<br>It is said that Ruby is slow, the most exaggerated one is that after ROR is converted to GO, the server dropped from 30 to 2<br>I still don’t believe it, but it’s just a problem (of course it should be the internet speed or the web server)<br>But this is a rush to tell people that Ruby is slow with someone else’s life… speechless </p>
<p>Stupid reminder<br>Mainland too card, after a long time, it prompts to check the loop, please ask me a for/while, is it OK?<br>Especially Ruby, a language that has N methods </p>
<p>There are two judgment conditions for the feeling result: </p>
<ol>
<li>Result string comparison </li>
<li>Source code regular inspection </li>
</ol>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>Ruby</tag>
      </tags>
  </entry>
  <entry>
    <title>Difficult conversations with parents</title>
    <url>/en/Difficult-Conversations-with-Parents/</url>
    <content><![CDATA[<p>It’s not cold, but it’s quite speechless </p>
<p>Choose a job after graduation, let me go to graduate school<br>When I was just working, I asked me to take a civil service exam every time I called (what if those who say they want to make a phone call from time to time and keep in touch?)<br>Gap Year (I didn’t ask my parents for a penny), and still despise me every day </p>
<p>In short, I feel that you are their private property. LZ brought you into the world, not what I said?<br>by! When it grows up, its wings become hard and it becomes disobedient, right? </p>
<a id="more"></a>

<p>Then began to point fingers at you in an attempt to tamper with your life: </p>
<ol>
<li>Use power and brainwash (since I was young, now I just need to turn on the switch)<br>Move out the unwarranted “The king wants the minister to die, the minister has to die. The father wants the son to die, the son has to die.”<br>Taken out of context “Parents are here, so don’t travel far away”<br>Filial piety first<br>… </li>
</ol>
<p>PS: Did they watch “1984”? My knowledge is superficial. . . </p>
<p>But you may have been bathed in Western equality thoughts and read<br>Rousseau’s “On the Origin of Human Inequality”, Russell’s “History of Western Philosophy”, Thoreau’s “Walden” and other masterpieces<br>Towards independence of mind, not the same as Confucianism </p>
<p>It’s ok: </p>
<ol start="2">
<li>Use material means to kidnap you<br>Common: full payment, down payment, job arrangement, etc. </li>
</ol>
<p>According to “Influence”, give the other party a little benefit, don’t feel that the other party owes you, so that they can get more benefits<br>That is, “Eat people’s mouth and soften their hands” </p>
<p>But you may have read Krishnamurti’s “The Things You Must Not Think of in Life”, Lao Tzu’s “Tao Te Ching”, and “The Power of the Present” when you were weak.<br>Understand that life should liberate oneself and seek inner tranquility most<br>And the strength is relatively strong, LZ can be self-reliant, these things are not required, they still live well. </p>
<p>Brother is financially independent, so you can’t do anything to me. </p>
<p>It doesn’t matter, what else is there: </p>
<ol start="3">
<li>Sorry<br>Even if you are in a mess, but<br>People are not plants, who can be ruthless, after all, blood is thicker than water<br>They tried to kidnap you with family<br>“I live for you in this life”, “Don’t blame your parents, they have given you the best” </li>
</ol>
<p>I go, do you think the “best” is what I want? </p>
<p>“We have done this for you, are you worthy of me?”<br>Ο \ _ \ _ Ο “…<br>Where did this sour rushing come from? (“The Road Few People Walk” mentioned this kind of parents with deep sacrificial spirit, embarrassing) </p>
<p>“We are your parents, of course we must care about you”<br>Please, this is obviously trying to control others, no one cares<br>What kind of tone is used to care about a person? ? ? </p>
<p>PS: There is also this problem between lovers </p>
<hr>
<p>The words above are a bit serious<br>In fact, in the generation of parents (they were also young, okay), most of them became victims of the lack of education.<br>Black-and-white thinking, people speak differently, without the ability to think independently </p>
<p>Cause them to fail to realize the improprieties of their thinking, thoughts, attitude, and tone<br>I don’t look at the facts, but I think I’m right. After all, I eat more salt than a child’s food. I have a posture of “what I say is the truth of the universe”. Reasoning is useless. </p>
<p>As children, knowing that it’s not their reason, it’s very sad to see them in that tone<br>The best way (I can think of now) may be to cater and do some “white lies” to coax them happy<br>But when it comes to major events, paper cannot contain the fire, and conflict is still inevitable </p>
<p>Due to age, it is almost impossible for the elderly to come into contact with new ideas. It is no longer realistic to ask the previous generation to change<br>But we can start with the next generation-I wonder if you realize that our generation is going to be mom and dad too </p>
<p>So we can ask questions such as: “How to communicate with parents”, “How to keep parents from getting angry”, “Is there any way to make myself think that the advice of parents is correct”, “How to be an obedient child”, “I want to test How to persuade civil servants/researchers/doctors/post-doctors to stay in their hometowns and their parents refuse </p>
<p>Then remind them of Shangzhihu </p>
]]></content>
      <tags>
        <tag>Parents</tag>
      </tags>
  </entry>
  <entry>
    <title>Learn more, learn less</title>
    <url>/en/Learn-more-study-less/</url>
    <content><![CDATA[<p>When I was in high school, there was a student in our class. For the first time in my life, I saw a <strong>intelligence</strong>. </p>
<p>I never saw him studying. I can see playing games or reading novels. </p>
<p>There are also some <strong>learners</strong>, which means they can get close to <strong>intelligence</strong> in scores through hard work. </p>
<p>It’s a pity that Turth is I am not one of them. </p>
<a id="more"></a>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/intellect.jpeg" alt=""></p>
<p>I studied harder, but the score still did not improve. </p>
<p>You can imagine how desperate I was at the time, which shows that they are talented and intelligent, and I am nothing. I was born a loser. </p>
<p>After so many years, I made up my mind. This is just the magic of the brain. </p>
<p>This book, written by a wise man, describes “how steel is made”. </p>
<p>Thank God, there is always hope. </p>
<p>MINDMAP: </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Learn-More-Study-Less.png" alt=""></p>
]]></content>
      <tags>
        <tag>Reading</tag>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>Build your own blog</title>
    <url>/en/How-to-build-your-own-blog/</url>
    <content><![CDATA[<p>What I feel best is:<br>VPS + domain name WordPress and other blog frameworks, so that the URL, background environment, etc. are controlled by yourself </p>
<p>If you don’t spend money, you can only send it to someone<br>For example, hang it under GAE or SAE </p>
<p>There is also the easiest way to link to Github,<br>The general process is </p>
<ol>
<li>Create a new Repository on Github, xxx.github.com </li>
<li>Static blog generation tools such as Jekyll or Hexo </li>
<li>No more </li>
</ol>
<p>Yes, it’s that simple, and the online tutorials are piece by piece, so I won’t repeat it<br>I use Hexo, hang it on <a href="http://leihao0.github.io/">here</a><br>Compared to Jekyll, it feels simpler </p>
<a id="more"></a>

<hr>
<p>To say something irrelevant: </p>
<p>I still remember when I was in elementary school, I asked to write essays every day. At that time, I was really abused.<br>I write (chao) homework every day when I go to school and after school. I still have one piece a day. I can only record something for a week at most.<br>What should I do, I can only copy the sample text </p>
<p>It’s a pity that there was no theoretical guidance at that time, and the copying was not accurate. After the primary school students’ model essays were copied, there was no way to copy them, so I reluctantly started the idea of a Chinese textbook.<br>Tai Sui broke ground on his head, didn’t he die early, but he was naturally found out </p>
<p>Then the third-grade Chinese teacher, known as the engineer of the human soul, slapped my head severely in front of the class with my diary. </p>
<p>Oh (wocao), you don’t have to be so cruel to kill the chicken and the monkey. </p>
<p>At that time, I couldn’t bear it, and silently improved my skills. After all, the college entrance examination still has eight-part essays. For the sake of tomorrow, if I can’t bear it, I will make a big plan. (Well, I was stupid at the time. Nian still thinks that father beats his son like that) </p>
<p>Fortunately, college, finally no need to write those disgusting things<br>When I was a freshman, a roommate despised my bad space, and then went to dress up, hang up more than N Flash, the card can not be opened<br>Later, I found out that there was a log function, and I wrote something about the school casually, and then some students commented, I was very happy, and then I wrote<br>It took me more than a year to learn that this thing is called a blog </p>
<p>Later, the programming stuff was hung up on CSDN, looking at the thousand miles away in the lower left corner, silently left </p>
<p>I searched for things when I was about to graduate. I saw what Yiya wrote and I was familiar with it. I saw that the number of visits was more than 1W, and there was still a ranking. I wondered who this is. I took a closer look. </p>
<p>Later, I wanted to find a place that no one knew, and record something </p>
]]></content>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Why study philosophy</title>
    <url>/en/Why-we-learn-Philosophy/</url>
    <content><![CDATA[<p>Any subject has a trial range, useful or not is relative<br>If your life is relatively smooth and the surrounding environment is better, although there are boats, there is nothing to take advantage of, and although there are soldiers, there is nothing to report. I haven’t <strong>reflected</strong> on anything, it may be useless </p>
<p>But if you keep curiosity and keep seeking, whether you are in politics, research or business, you will definitely encounter philosophical problems in the end<br>Because philosophy is about the origin of the world </p>
<p>Harvard University Political Science Professor Michael J. Sandel in “Justice-What Should I Do?” “The paragraph at the end of the first lesson is very, very good (so good that people watched the full set like chasing American dramas) summary: </p>
<blockquote>
<p>Reading philosophy books can be used as an exercise in your <strong>cognition of yourself</strong>.<br>Philosophy makes things we are familiar with become unfamiliar. It does not give us more new information, but gives us <strong>another way of looking at things</strong>. It has two levels of adventure: <strong>personal level and political level</strong>. The so-called adventure on a personal level is that once those familiar things become unfamiliar, they will never be the same again. Self-knowledge is like a lost traveler, no matter how confused or disturbed he is, you can no longer think about it. This process is difficult but you have to devote yourself to it. Moral and political philosophy is like a story. You don’t know where it will take you, but you know clearly that this is a story about you. The political risk is that after you read these books and participate in these discussions, you will become a better and more responsible citizen, you will examine those assumptions about the public political realm, and your political judgment will Get exercise, you will be able to participate in public affairs more actively, but this may be one-sided and misleading. What you need to admit is that it may make you a worse citizen instead of a good citizen, or at least it will make you a bad citizen before you become a good citizen. That’s because of philosophy, which is a long time ago, and even a little destructive. Let us take a look at a conversation in the Socratic era. Socrates’ friend Calicole hoped to persuade him to leave philosophy. He said to Socrates: Philosophy is indeed beautiful. It is only beautiful when you are moderately involved in it, but if you are too addicted to it, it will destroy you. Listen to me, put aside those philosophical debates, think about what is the real achievement in life, don’t learn from those who waste time in ambiguous philosophical statements, you should look at the rich lives of those who really live well. Reputation and other things. He meant to say, buddy, be realistic. But one thing Kohler is correct: <strong>Philosophy will alienate us from the original conventions, pre-ordered assumptions, and inherent ideas</strong>. </p>
</blockquote>
<blockquote>
<p>When facing these problems, we have a special way of avoiding it. Its name is skepticism. It means that, like this, we have just begun to learn, and there is no way to completely solve the cases or principles that we argued at once. , And if Aristotle, Kant, Locke, and Muller have not solved these problems for so many years, who do we think we are? Can you solve them after just spending a semester in the sanders hall? Moreover, this may just be a question about each person having their own different principles. There is nothing worth discussing, and it is not clear why these problems are. This is how skepticism escapes. Regarding this, I think I can answer this: Indeed, these issues have been discussed for a very, very long time, but it is precisely because they are constantly being discussed that although in a certain sense they are <strong>impossible to be explained</strong>, But on the other hand, they are also <strong>cannot be avoided</strong>. The reason is unavoidable because the answers to these questions are in our daily lives. Therefore, skepticism just lets you let go and give up thinking. It will not solve any moral or philosophical problems. Kant has a very wonderful description of skepticism. He wrote, “<strong>Scepticism is just a place for people to rest in the process of exploration. It allows us to wander in some dogmas, but it is definitely not that we can stay forever. Where *<em>.” Here, I want to briefly summarize the purpose of this course is to *</em>awaken endless curiosity and reasoning to see where it will take us</strong>. </p>
</blockquote>
]]></content>
      <tags>
        <tag>Philosophy</tag>
      </tags>
  </entry>
  <entry>
    <title>The beginning of the story</title>
    <url>/en/The-Beginning-of-The-Story/</url>
    <content><![CDATA[<p>Once upon a time there was a little mage who was born in Zeya continent surrounded by mountains </p>
<p>The school where the little mage is located is ranked thousands of miles away in the magic world. Looking around, there is no magical master in the whole school. </p>
<p>When the little mage graduates, it will only be a static magic </p>
<p>Although this kind of magic is very NB, but it takes too long, and you have to stand still when casting the spell </p>
<p>Until a few days ago, the little mage suddenly heard that there is a magic that can be sung while walking, and he became very curious. </p>
<p>After reading the latest magic book, I found that among all the dynamic magic, there is a magic called Ruby on Orbit </p>
<p>This kind of magic pronunciation is weird and inexplicable, but as long as the singing is right, you can summon the most lethal magic in the shortest time. </p>
<p>Then he was killed by the magic he summoned </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>resurrection</title>
    <url>/en/Resurrection/</url>
    <content><![CDATA[<p>The last time the little mage intensively trained Ruby on the track, he paid the price of blood </p>
<p>The magic book is jointly recommended by many magical masters. It is divided into 11 chapters. It is written in Elvish language and looks very NB sample paper. </p>
<a id="more"></a>

<p>The little mage’s elves were so-so, guessing, half of the practice, a little uncomfortable reaction </p>
<p>In Chapter 9, the continuous casting time was too long, and the magic showed signs of backlash. </p>
<p>Prior to this, the courses of the Little Mage at Codecademy Academy were smoothly removed. The hypertext markup spell, hierarchical style sheet, python ruby are all available, and there are only 3 chapters left in the book. </p>
<p>It just so happened that Little Master was poured a lot of chicken soup from Moments, such as: </p>
<blockquote>
<p>A person, if you don’t force yourself, you don’t know how good you are; a person, if you don’t force yourself, your world will always be black </p>
</blockquote>
<p>and also: </p>
<blockquote>
<p>If a person wants to be excellent, you must accept the challenge; a person, if you want to be excellent as soon as possible, you must find a challenge </p>
</blockquote>
<p>It is conceivable that the little mage is full of confidence and full of positive energy </p>
<p>Ignoring that the mage does not have a strong body like a swordsman, and has professional limitations, most of them are in sub-health </p>
<p>Coupled with lack of mana, I have to play technology </p>
<p>Finally in the final chapter, the red and blue were exhausted, and he was beaten to death by the monster he summoned. </p>
<hr>
<p>Fortunately, the little mage has a lower level and a shorter resurrection time </p>
<p>But wasted a rebirth ankh for no reason, the little mage is still very unhappy </p>
<p>When people around me kindly ask, they can only knock down their teeth and swallow blood. </p>
<p>After all, as a mage, it’s shameful to be killed by a spell he summoned. </p>
<p>After this incident, the little mage was also forced to form a Pavlovian restriction, that is, the animal’s response to specific stimuli </p>
<p>Now I feel nauseous when I see Elvish </p>
<p>So the little mage decided to never touch magic anymore recently </p>
<p>… </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>goddess</title>
    <url>/en/Goddess/</url>
    <content><![CDATA[<p>As mentioned earlier, the little mage is never going to watch magic anymore </p>
<p>Zhu Xi said: “It’s enough to stop, there is no greed.”<br>The little mage’s mental plan is good, can’t fight to hide </p>
<p>Life is often so funny or cruel<br>The Tao Te Ching says: “The way of the sky will damage more and make up for the insufficiency, but the way of man is not, the way of man will damage the insufficiency and give more.”<br>As the saying goes, “I will kill you when you are sick” </p>
<p>After being humiliated by magic, Murphy’s Law began to show its power-the goddess of the little mage ignored him </p>
<a id="more"></a>

<p>The thing is like this: </p>
<p>A few days ago, the goddess suddenly called the little mage, unknowingly, the two chatted for more than an hour<br>On the phone, the goddess complained to the little mage that she was tired recently, and then she pointed out that she wanted a magic book container, which is the latest powerful magical tool called the bright pure sticker produced by the evil magic group. The goddess used some news in the magic world to deal with the aftermath, which is really accurate </p>
<p>The little mage was flattered when he received the call, and in the next few days he was even more excited, seeing the goddess’ birthday is coming again, so let’s give it away. </p>
<p>Gold coins are a problem, but fortunately, the little mage usually saves money, eats frugally, and barely manages enough.<br>After comparing prices for a long time, I finally bought one for the goddess in my heart </p>
<p>Two days after the goods arrived, I saw the goddess replied “I like it, thank you”<br>Before the little mage could respond, he saw the goddess offline </p>
<p>The little mage has no doubts about the others, and he is infinitely happy, just like the little yellow guy in “Despicable Me 2” saw the heroine develop rich associations and imaginations </p>
<p>But a day later the goddess still did not respond<br>At the beginning, the little mage simply thought that she was a goddess, she must be very busy, but it is normal that she doesn’t reply to messages on the forum and chatting on Weibo every day. </p>
<p>By the evening of the next day, Little Mage felt something was wrong. QQ, WeChat, Weibo, SMS, phone, and various contact magic were all used. </p>
<p>The goddess is worthy of being a goddess, and uses the art of war flexibly to cope with all changes in the same way, gently and ingeniously:<br><code>&gt;/dev/null</code> </p>
<p>Just wiped out all the magic that the little mage could think of, leaving no ripples </p>
<p>Apart from sang heart, little mage still has a glimmer of hope in his heart </p>
<p>Then I saw this cruel question: </p>
<p>*<em>How to raise a spare tire? *</em><br>answer:<br>If the spare tyre takes the initiative to talk to you, you just haha<br>The spare tire is no longer active, just ask him what he is doing </p>
<p>The little mage recalled everything before, as if he was verifying these two sentences<br>Really <em>words are like blood, actions are like complaints, grief and arousal</em> </p>
<p>The little mage’s eyes were hot, and finally she shed tears </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Free will</title>
    <url>/en/Free-Will/</url>
    <content><![CDATA[<p>I don’t know when I heard the word “free will”, and it feels like more than a year </p>
<p>Although I sometimes use this term, I never understand what <strong>free will</strong> is </p>
<a id="more"></a>

<p>In fact, Google can get the answer right away, but I didn’t do it for a long time. Do I want to understand it based on my own insight? </p>
<p>I first heard this word in Dongwu’s Theory of Relativity<br>I can come across in some of the next books<br>Later on Luo Ji Siwei heard<br>In the previous BBC Hawking universe, “We are all made of interstellar matter” </p>
<p>It feels like people respond rationally rather than instinctively to external stimuli </p>
<p>Three quotes from the author’s epiphany quoted in “Seven Habits”: </p>
<blockquote>
<p>There is a space between stimulus and response<br>In this space we have the freedom and ability to choose our own response<br>Our growth and happiness depend on our response </p>
</blockquote>
<p>To be honest, I didn’t feel anything when I watched it, and I am <strong>simply knowledgeable</strong> %&gt;_&lt;% </p>
<p>Then I saw the author’s explanation, <strong>Freedom of Choice</strong>, I couldn’t help but breathe a breath of air (in winter)-I realized it for the sake of my enlightenment.<br>Isn’t this free will? ! </p>
<p>I have never understood before, what is the difference between tossing around when I was young, and then falling into the hot bed of my wife and child, and directly falling into it. It feels there, but I can’t tell the difference. </p>
<p>From this point of view, it should be the difference between free will awakening, respecting one’s inner call, and not simply making a stressful like ordinary creatures. </p>
<p>Listen to thunder in the silent place </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>Spare tire</title>
    <url>/en/Spare-Tyre/</url>
    <content><![CDATA[<p>The goddess’s blow to the little mage far exceeded the little mage’s imagination<br>In this way, the last death was like a floating cloud </p>
<p>The poet Yuan Hao of the Jin Dynasty asked Youyun: </p>
<blockquote>
<p>Ask what love in the world is, and teach life and death directly?<br>——“Moyuer·Yanqiu Ci” </p>
</blockquote>
<p>The little mage is an emotional child. When he was still in the mage academy, he liked a girl and pursued it hard for 3 years. When he bought a gift for the girl’s birthday and waited downstairs, he found that the girl and a frustrated man were flying together. </p>
<p>Everyone has moments of disillusionment, and the three years of misery finally brought the little wizard’s epiphany<br>Since then, fascinated by magic and eventually become a master </p>
<a id="more"></a>

<p>Of course that happened in the novel<br>At that time, campus recruitment was already in place, and the young master rushed into battle, but ended up in an embarrassing result </p>
<p>Originally, the little mage thought that after he was enlightened, he was already invulnerable and rational, and would no longer be confused about emotional matters. </p>
<p>But he forgot the famous saying of the ancient philosopher Heraclitus: </p>
<blockquote>
<p>One cannot step into the same river twice </p>
</blockquote>
<p>Of course the little mage didn’t violate it, it just fell into a different ditch. </p>
<p>The money is gone and come back, and the loss of money is a trivial matter. The biggest pitfall is, “You treat the other party as a goddess, and the other party treats you as a fool.” </p>
<p>With previous experience, the little mage woke up faster this time, but heartache is inevitable </p>
<p>Generally speaking, there are several feasible options for dealing with broken relationships: </p>
<ol>
<li>Retaliation </li>
<li>Divert attention </li>
<li>Sublimation </li>
</ol>
<p>The first cost is too high, it is a lose-lose<br>The last one is the optimal solution, but the realm is too high, the little mage can’t reach </p>
<p>Had to take the golden mean route: divert attention </p>
<p>After that, the little mage tries to keep himself busy </p>
<p>… </p>
<p>The situation has not improved yet, the annual Spring Festival in the mainland has come again<br>At this time of year, the Scrolls of Return to Town are sold out early </p>
<p>The little mage had to use time-consuming and laborious teleportation </p>
<p>Before entering the house, I saw the blood-red door pair on both sides of the door from a distance: </p>
<blockquote>
<p>Year after year, we get married year after year without us </p>
</blockquote>
<p>Horizontal batch: </p>
<blockquote>
<p>Wait another year </p>
</blockquote>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Mom and dad</title>
    <url>/en/Mon-and-Dad/</url>
    <content><![CDATA[<p>The little mage’s parents are all Muggles, and there are no magicians in the surrounding circle. At one time they thought that the little mage assembled and repaired magical instruments after graduation. </p>
<p>The little mage was born in the environment of Jiangzi, ╮(￣ ▽ ￣”)╭, it is so terrible that it is indescribable, but it can be seen how difficult it is to communicate with parents </p>
<p>This time the annual family reunion day, the little mage returned very unwillingly </p>
<p>why? This involves two points: </p>
<ol>
<li>Chinese parents </li>
<li>The little mage did not look for a job after resigning </li>
</ol>
<a id="more"></a>

<p>Muggle moms and dads have a deep sense of self-sacrifice<br>Even in the economic environment where they are now fully prosperous, they can still magically divide the dishes on the table into three or six or nine grades, giving them the meaty stuff, organic vegetables and high-fiber foods for themselves<br>“We have done this for you, are you worthy of us like this?” is a common killer. </p>
<p>For this, the little mage can’t use “Silly boy paper, you can still go to die!” A similar forbidden curse is broken, otherwise it will only be yourself who will hang up, and will not be able to live well after death, and be hanged on innocence. The charge of unrighteousness and unfilial piety is a negative example of the rumors of Muggle-style parents </p>
<p>The little mage has explained to his parents countless times that he belongs to the late gap year for things that are not working. It is a confusion in life, and it takes a period of silence… (If you have the opportunity to say it separately in the future)<br>But moms and dads don’t care about this kind of rhetoric. If you don’t have a job, isn’t it a youth in society? If you make moms and dads unable to lift their heads in front of relatives and friends, don’t use a whip to get you to find a job. </p>
<p>The little mage firmly believes that financial independence can be exchanged for freedom, so he no longer asks parents for living expenses<br>This creates a strange phenomenon. On the one hand, the little mage has no job, and on the other hand, the living standard of the little mage is only slightly reduced.<br>Mom and Dad who are Muggles didn’t understand it at all, so they became detectives and started their own reasoning: Where did the living expenses come from? rMBP How can such precious artifacts be exchanged for gold coins? It’s hard to steal it? Why are you different from ordinary people? Are you mentally ill? Should see a psychologist… </p>
<p>The little mage is sad, hates blood thicker than water, cuts on the constant family affection, and the annual holiday. The most exaggerated thing is that ZF also intervened in this matter. The legislation did not see his parents convicted, and he was imprisoned after enforcement… </p>
<p>The little mage doesn’t have the guts to fight against the public power. As a P citizen, it’s better to be self-conscious<br>However, before returning home this Spring Festival, the little mage had already been familiar with the art of war and had made sufficient preparations. He imagined that he possessed the forbidden curse of a senior in the magical world who had already traveled to the west of Hexi-Reality Distortion Force Field (PS: Suddenly thought of science Personal reality in the super-electromagnetic gun) </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Frame magic</title>
    <url>/en/Framework-of-Magic/</url>
    <content><![CDATA[<p>The benefits of frame magic are obvious<br>A single magic is often limited in power, so wizards often combine many small magics to form an effective big magic<br>Generally speaking, sing This is a silly framework…, sing every day and sing every night, and sing too much. Some wizards have discovered the commonalities and refined them. Only sending TIASF can complete the chanting of magic. born </p>
<a id="more"></a>

<hr>
<p>After the triple blow, the little mage has been living in the shadows </p>
<p>Looking at the magisters in the world of wizards, all kinds of magic are often readily available.<br>A master of carbon magic, the coffee produced in Java is also decent to use, no need to start from scratch. </p>
<p>The little mage thought that in this case, coupled with the evil “reasonable adjustment of emotions”-to keep yourself busy, it is better to settle down. </p>
<p>After that, I started reading non-stop, Xanaduola, gunpowder and other frame magic </p>
<p>(PS: The section of the plant. Polymer cement is also within the scope of training, but unfortunately I did not find the spell book “The section of the plant. Polymer cement”, plus the little mage not long ago bought a magic tool (also Not for myself), I was ashamed in my pocket, so I had to give up) </p>
<p>The little mage has read “Tao-Te Ching”, and there is a saying that the soldier will win<br>Roughly speaking, the opposing armies, the side full of grief and anger, will surely win </p>
<p>The little mage’s gritted teeth at this moment can be described as grief and anger </p>
<p>There is a book on the mainland that is thicker than a few slabs stacked together. It is divided into nine books and records those things in the mainland 600 years ago.<br>After reading it, the most impressive thing is not any tricks, but whenever there is a bad guy or conspiracy and timing, the sentence is often inserted suddenly: </p>
<blockquote>
<p>Due to IQ limitation </p>
</blockquote>
<p>The failures of the predecessors, the lessons for future generations<br>The poor little mage only reads magic books every day, so he doesn’t know anything about history. </p>
<p>And because of the complexity of watching more at once, gradually, the little mage found that when singing python magic, he often blended the spell of ruby into it, and vice versa. </p>
<p>Finally, the little mage was surprised to find that he couldn’t even release a decent magic. </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Go Web</title>
    <url>/en/Go-Web/</url>
    <content><![CDATA[<p>I haven’t finished reading it, after the age of school, programming books can only pick key chapters to see, the examples can’t run through one by one, I have to say it’s a pity </p>
<p>Relatively speaking, the coverage is relatively comprehensive, and the examples are also very representative. Buying is worth the price </p>
<p>Not to mention that the author puts the book on the Internet, you can find it by searching it </p>
<p>Learning By Doing, I wrote a website to try the water: </p>
<a id="more"></a>

<p><a href="Http://direct">Http://direct</a> daily.A horn. what/ </p>
<hr>
<p>From Python to Ruby to Node.js to Golang </p>
<p>Ruby is really amazing. Let’s not talk about the degree of freedom. In terms of syntactic sugar, it is the language that I feel is the closest to pseudo-code. (Human attention to indentation) </p>
<p>Node.js, because I don’t know JavaScript, I don’t know much about this </p>
<p>Then I saw Go. Since my entry language is C, this one has a natural intimacy and familiarity. </p>
<p>However, when switching from Ruby to Go, the most uncomfortable part is that you have to declare the variable type again. The more complex data needs to be converted by the interface. </p>
<p>Slowly I learned that this is to check out the BUG before compiling. Dynamic languages can only be tested by human flesh. </p>
<p>Egg pain </p>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>Orphan</title>
    <url>/en/Single-Forever/</url>
    <content><![CDATA[<p>The little mage hadn’t moved for a while, why did it pop up again? Because this time is special </p>
<p>In the afternoon, the little mage was basking in the sun on the balcony, looking at the mob recommended by the goddess two days ago, and when he was bored, he swiped Q, and when he saw the goddess was online, he went to chat. </p>
<p>I didn’t expect the goddess to answer every sentence, and the response was very fast </p>
<a id="more"></a>

<p>It is said that the little mage should be very happy, but he instinctively feels a kind of coolness-too abnormal<br>Careful temptation: </p>
<p>A raise?<br>No<br>Promoted? </p>
<p>In love? When the little mage has been hit and hasn’t sent it out<br>The goddess automatically told the little mage the good news<br>Little mage, his eyes went dark, almost fainted </p>
<p>Reality is always cruel and often dramatic<br>Seeing that the gap is about to end, the little mage slapped him severely when he was already drawing a picture of the future.<br>And history is always surprisingly similar. At this time last year, the little wizard had already suffered a blow no less than the disaster of extinction. </p>
<p>According to the principle (I forgot, roughly the emotions come from the reptilian brain and do not pass through the human neocortex, so in non-life-threatening situations, the momentary feeling is often a harmful judgment), the little mage takes a deep breath for 10 seconds ,then… </p>
<p>Enduring the bloody heart, made a phone call and chatted for a while, but at the end I haven’t forgotten to wish them happiness<br>What I really think in my mind, without mentioning a word </p>
<p>After hanging up, looking at the carefully prepared gift, the little mage was full of sadness<br>Is this the rhythm that is destined for a lonely life? </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Complications of broken love</title>
    <url>/en/Complications-of-Lovelorn/</url>
    <content><![CDATA[<p>Generally speaking, after the protagonist of a series has died, it is often the end </p>
<p>For example, in “Ice and Snow Fantasy”, at the end of the story, the elder sister wins love, two mushrooms cool the lace, and the male pig’s feet have to be with the animal (the end of life is often sad) </p>
<p>However, given that this is a novel and there are precedents before it, “Rework” also mentioned that “modifying a BUG often introduces a new BUG”<br>In desperation, we acquiesce that the little mage can be resurrected </p>
<p>But the little mage suffered so much that he broke through the level of resurrection time, staying in the altar and reluctant to come out, so he had to get a special first. </p>
<a id="more"></a>

<hr>
<p>When we read some books about history, we often notice a word: historical limitations </p>
<p>For independent individuals, it also exists<br>For example, half a year or a year later, as long as you continue to move forward mentally and look back suddenly, you can often find your own limitations, such as things that you have come up with now, but were in a hurry at the time. </p>
<p>As someone who came over, often </p>
<p>persuade: </p>
<blockquote>
<p>No reality<br>If the goddess is gone, find another one<br>The setback I have experienced is much greater than you, and I haven’t survived it. You are completely too weak to withstand stress. </p>
</blockquote>
<p>As the parties involved, let’s not talk about beating them in the past. After all, they are kind, but they can’t relieve much pain in my heart. </p>
<p>In fact, when we ourselves are parties, we often cannot escape this vicious circle. </p>
<p>Human beings have the function of forgetting pain, the most obvious is as a top painful childbirth. After one or two years of numbness, the idea of regenerating a child will be born. </p>
<p>So when the time is long enough, the original pain will be forgotten, and it is not a big deal to lose love. </p>
<p>At this time, there must be broken-up children’s shoes around, and we will have the same feeling-isn’t it just broken-up, what’s the big deal, often goto’persuade’` </p>
<hr>
<p>When writing stuff, you should pay attention to the ups and downs. Authors with deep internal skills will internalize this into the atmosphere of the plot, without a trace, and the low-level will often see a dry transitional tone: </p>
<p><strong>but</strong> </p>
<p>Most of the time, we don’t know why we are suffering, so we can only use the phenomenon of “broken love” to summarize </p>
<p>So everyone is broken in love, why someone can immediately turn to chase another girl (beast!!! Okay, envious), and some people want to die for love </p>
<p>We know that due to the existence of the subconscious mind, the content of awareness is often just the tip of the iceberg </p>
<p>The pain of losing a relationship is not just as simple as losing someone<br>It often includes your longing for love, fantasy about the future, and even the disillusionment of your personal beliefs </p>
<p>Actually, you also know that she is not as perfect as you think, but she is indulged in fantasy and neglected subjectively.<br>Like the colorful soap bubbles in the sun, they are infinitely beautiful, and everything disappears after being punctured </p>
<p>In a very short time, all the good parts of life are taken away (at least you would think it is all)<br>This kind of thing comparable to subverting the Three Views is naturally heartache </p>
<p>You feel like being taken away from oxygen in your life, and your heart is empty<br>I usually force a smile in front of everyone, and only mention it in front of my close friends<br>If you are unlucky and self-conscious, knowing that you are disturbing others, you will often keep silent, and just say a few words and become silent.<br>When I was alone, the emptiness came again from all directions, and there was no escape </p>
<p>Congratulations, because at this time, you have encountered the ultimate problem of mankind and even the universe: loneliness </p>
<hr>
<p>From an economic point of view, we know that everything we paid to the goddess before is already a sunk cost </p>
<p>At this time, the scientific approach is: the heart is like steel to stop the loss in time, that is-there is a break, there is a rebirth! Strictly control the expansion of opportunity cost </p>
<p>The reality is that stock gods often only have so few </p>
<p>Because human emotions precede logic </p>
<p>It should be understood that most human emotions come from ancient animal brains, with short paths and fast reactions, which belong to the core level and have higher authority.<br>The new cortex, which is responsible for thinking, has a long path and slow response speed, which belongs to the application layer and has the lowest authority.<br>If you encounter amygdala robbery, cingulate back lock, etc., it will lead to insufficient permissions at the application layer and be rejected </p>
<p>At this point, people are completely controlled by emotions </p>
<p>Then the little mage is not willing to resurrect, we can understand </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>How to heal yourself</title>
    <url>/en/Self-Healing/</url>
    <content><![CDATA[<p>Last time I analyzed some of the reasons behind, this time I talk about how to deal with it </p>
<p>First of all, there is no chance of redemption by default here, not that you can kneel in front of the goddess and cry, or make exaggerated things like crying, making trouble, and hanging yourself. </p>
<p>If you really did it and got it back, please refer to how to fall in love instead of the following </p>
<p>For individuals, how to get out of the predicament as soon as possible and minimize the loss is what we are most concerned about now </p>
<a id="more"></a>

<hr>
<p>Okay, let’s first deal with the “preventive treatment” stage emphasized in the “Huangdi Neijing” </p>
<p>First of all, we must face our identity as a spare tire </p>
<p>Most people are often unwilling to admit this fact<br>For example, our little mage has been immersed in the fantasy with the goddess<br>For example, those retail investors who buy high and sell low </p>
<p>There is a concept in economics called <strong>path dependence</strong>, the official explanation is: </p>
<blockquote>
<p>Once people make a certain choice, it is like embarking on a path of no return. The force of inertia will make this choice constantly self-reinforcing and prevent you from going out easily. </p>
</blockquote>
<p>For example, the QWERTY keyboard we are familiar with (I have used Dvorak for a few months, and it feels pretty cool, I don’t know if it’s in my heart) </p>
<p>“Suwen·Four Qi Tiao Shen Dalun” also mentioned: </p>
<blockquote>
<p>It’s not too late if the husband’s disease has become a disease and then the medicine, the chaos has become, and then he can be cured. </p>
</blockquote>
<p>Cultivate a sensitive heart, through some small things, see the little things, see through this layer of fantasy, instead of continuously indulging in it </p>
<p>Get out of the illusion, move towards maturity, cut the fetters, and break with the past self </p>
<p>Of course, if you have not been able to see the leopard in your eyes, and know the autumn when a leaf falls, don’t be too pessimistic. </p>
<p>After all, it is more difficult to get out of this illusion on your own.<br>This is tantamount to requiring a variable in the code to check for bugs, which is often unrealistic (for example, our little mage was awakened by violence when he encountered a face confession) </p>
<hr>
<p>Now let’s deal with the “it’s too late” situation </p>
<p>Some methods are widely circulated on the Internet, such as: </p>
<ol>
<li>Read a book that you have wanted to read for a long time </li>
<li>Go out and exercise </li>
<li>Tourism </li>
<li>Stay with friends and chat </li>
<li>Turn your attention away </li>
</ol>
<p>I have to say that these do have a certain effect, but they cannot solve the problem fundamentally. </p>
<p>When using these methods, I talked and laughed at the time, but from another angle, it might not be another illusion. </p>
<p>Because other people cannot and cannot stay with you all the time. When everyone is gone, the feeling of loneliness rushing toward you is like the force majeure defined in the law, which is unstoppable (the children who study abroad may have this experience) </p>
<p>So what should we do? </p>
<p>If you have seen <a href="http://v.163.com/movie/2012/9/P/4/M8I5TK339_M8KTJOSP4.html">Stanford University Open Class: How to Think Like a Psychologist-Can We Really Control Emotions</a>, should have some insight </p>
<p>As mentioned in the previous article, the human brain has various defects, but in fact, as long as the hardware bug is not triggered, it can often continue to run smoothly. </p>
<p>Subjectively, we feel that the brain is a single-core single-process. Forcing a large number of concurrency often means that intelligence and judgment are reduced overall, let alone parallel computing. </p>
<p>But we often do not realize or ignore the existence of system processes such as breathing and heartbeat </p>
<p>Due to the existence of the kernel or software and hardware protection mechanisms, if you want to metaprogram it yourself, it is often unrealistic to bypass the monitoring of the operating system (foreign objects such as drugs are not counted) </p>
<p>Based on this, we can try <code>fork</code> to create a new process, throw in all emotions such as sadness and disappointment, and then execute <code>disown %</code> instead of letting them occupy <code>fg</code>, thus affecting the routines of daily life </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Fanwai-chat</title>
    <url>/en/Side-Story/</url>
    <content><![CDATA[<p>It was just on impulse. I was watching ROR at the time. I didn’t know that the test should go first. In addition, it was all E texts. I didn’t know what I was doing at all. </p>
<p>In addition, I watched a video at that time, which basically said that the passengers kept asking the flight attendants why they can’t play with mobile phones on the handjob. The flight attendants kept explaining from a scientific point of view, and finally went crazy saying that you Muggles, handjobs are driven by magic, otherwise How did such a big thing fly into the sky? The aerodynamics and electromagnetics were made up by aliens to deceive you stupid humans… </p>
<p>Then I hurriedly started programming and magic is a bit similar. I usually listen to public lectures, and the professors often mention there’s no magic here. I rushed to the opposite, coded a lot of letters, and then I could run , Isn’t this amazing </p>
<a id="more"></a>

<hr>
<p>I think if I can write 10, I will open a project on Github<br>Well, in fact, I should write 100 before I should review the magic horse </p>
<p>But I know I’m too lazy, I don’t know when I’m boring and don’t continue, so I’d better do this early. </p>
<p>I was surprised that I broke single digits<br>Much of it is due to the number of words in a chapter, enough for me to add up to 12345 </p>
<p>Fortunately, my goal for myself is very low, and it’s not a professional codeword. It’s good to have fun while writing. </p>
<p>Having said that, the coders are hard pressed, and it’s fine if you want to record something, and you don’t dare to show your face if you are not photogenic. You can only rely on <strong>plain text</strong>. </p>
<p>Looking at the literary and artistic youth, which one is not the photo of the food<br>Gap ╮(￣ ▽ ￣”)╭ </p>
<hr>
<p>Generally speaking, there are few midway actors in the novel who hang up on this kind of thing. If unfortunately, it is a great event. Either the protagonist changes suddenly and his skill soars by 100X like Saiyan; or there is a turning point in the plot. It’s the next generation’s turn to appear. For example, Zhang Cuishan and Zhang Wuji in “Evening the Dragon Slayer” have changed the protagonist; or, the author has changed, and it’s time to start anew (-_-|||) </p>
<p>Also, this kind of martial arts fantasy, the protagonist only gets stronger and stronger<br>Jin Daxia’s <em>Flying Snow shoots the White Deer, and the Laughing Man leaning on Bi Yuan</em> is such a pinnacle </p>
<p>When I was still watching “The Wilderness” in college, I was curious about this question, why is Jiangzi?<br>Like Tuobaye, at the end of “Sou Shen Ji”, he can already fight the immortal level. When “The Wilderness” is about to end, the mind of the three emperors and all the mess will be all, not to mention the bug-like Shi Nafang at the end. Hua<br>Of course, this is the end, and I can’t write any further </p>
<p>Of course, now I know that the golden style has a strong sense of substitution, and readers can grow with the growth of the protagonist, so that users’ <strong>return rate, stickiness, and loyalty</strong> are very high. I still see “Sculpture” after a few years. The impulse to sleep and forget </p>
<p>On the other hand, in Gulong’s works, it’s a god level, no need to fight monsters, driven by suspense reasoning, but I haven’t heard of any downgrade.<br>There seems to be no “reverse growth” model on the market </p>
<p>Then I asked a roommate who had broken ten thousand books. He said that out of all the fantasy he has seen, only one is weaker with practice. </p>
<p>I can imagine how surprised I was, so how about asking? He said what else could happen. The pig’s feet first killed the God Realm in seconds, and later became weaker and weaker. He was humiliated by opponents who had already abused him, and finally found that he could not beat even an ordinary person. </p>
<p>I felt melancholy after listening </p>
<p>Then he went on to say that the protagonist will be resurrected and reincarnated as XXX, starting from scratch, and will finally become the top and embrace the beauty(s). </p>
<p>If you don’t die, you won’t die </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>2013 Summary</title>
    <url>/en/2013-Summary/</url>
    <content><![CDATA[<h3 id="2014-03-31-13-47-59"><a href="#2014-03-31-13-47-59" class="headerlink" title="2014-03-31 13:47:59"></a>2014-03-31 13:47:59</h3><p>Hmm~ o(*￣ ▽ ￣*)o, I really have to drag it to March again, please give me a thumbs up </p>
<p>The reason behind it should be the fear of entering the next stage of life<br>You have to wait until your birthday is over before you can enter 24 </p>
<p>The other is also because the “Huangdi Neijing” puts men in an 8-year cycle<br>When I was 16 years old, I felt that I had changed significantly. This time I was swollen, and I was afraid<br>But 24 is still inevitable, and a few days have passed in the blink of an eye<del>~</del> </p>
<a id="more"></a>

<h4 id="Gap-year"><a href="#Gap-year" class="headerlink" title="Gap year"></a>Gap year</h4><p>The earliest idea roughly came from that god post:<br>Complete computer in one year and linear algebra in one week<br>I can only say that after watching TM, I was shocked. I can still play like this. Okay. </p>
<p>I had no choice but to sell myself and clinked poorly<br>But I have been unwilling to do so, and I always want to find an opportunity to take half a year or a year to cool off </p>
<p>I originally planned to start planning in 1.5 years, but I thought that the opportunity would come so soon. </p>
<ol>
<li>Boss quit </li>
<li>The new project manager engages in office politics (after I flashed, everyone has left more than half) </li>
<li>The project belongs to the death plan in “The Myth of Man-Month”, and there is no rush </li>
<li>The landlord wants to renovate the room paper, shove people out… </li>
<li>A little bit of hard-earned money </li>
</ol>
<p>It felt like an invisible hand was pushing me<br>In this case, go with the weather and resolutely refuse to continue selling cheap labor </p>
<h4 id="parents"><a href="#parents" class="headerlink" title="parents"></a>parents</h4><p>Mom and Dad are the kind of old-fashioned ones, as mentioned in the blog<br>So they heard that I quit my job or didn’t look for a job. They were speechless. </p>
<p>In this regard, I feel that I am doing eight wrong<br>I’m independent, and I have done something that seems to be brain-dead to them for a period of time, and I haven’t quarreled with them before, and don’t add to the fact that I beat me every day. </p>
<p>The Chinese New Year should be miserable in principle. If you don’t have a wife, you don’t have a job yet.<br>As a result, I stayed until the Lantern Festival and then left, my sister-in-law was shocked </p>
<h4 id="Cheese-is-power"><a href="#Cheese-is-power" class="headerlink" title="Cheese is power"></a>Cheese is power</h4><p>Although I studied full-time, it’s a pity that I have read 100 books for most of the year. What are you doing? I’m not too satisfied. </p>
<p>But having said that, it should not be measured by this number<br>Maybe some people can enlighten the way in a few books, but some people don’t read a book. </p>
<h4 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h4><p>Github is finally up, markdown writes stuff<br>I opened a brain damage series, let’s code slowly </p>
<p>But I found that there is really little written in programming </p>
<p>That ￣ △ ￣ Am I really a programmer? </p>
<p>Although there are all kinds of doubts, I even tricked a kid as an apprentice </p>
<h4 id="life"><a href="#life" class="headerlink" title="life"></a>life</h4><p>I bought rMBP and finally don’t use the Ghost system every day (Xcode dragged it until now…)<br>I got my friend’s mini and felt very good. I immediately got an Air. After using it for a month, I found that I was really reading books and didn’t play games…<br>When 6 comes out, the whole line will be replaced by Apple<br>I usually watch movies with my friends, eat barbecue, enjoy the sun on the balcony and read a book </p>
<h4 id="At-last"><a href="#At-last" class="headerlink" title="At last"></a>At last</h4><p>It’s a pity that there is always an end<br>To quote Russell: </p>
<blockquote>
<p>If there is a chance, I am willing to do it again </p>
</blockquote>
<h3 id="2014-01-10-23-32-33"><a href="#2014-01-10-23-32-33" class="headerlink" title="2014-01-10 23:32:33"></a>2014-01-10 23:32:33</h3><p>I remember the summary of last year, I said, it was the year I grew the most, and it seems that I will say that again this year<br>Some unfinished things are still unfinished, and it is not possible to look at the end of the year and break through with one effort </p>
<p>Looking back at the past two years of graduation, it feels like living anew<br>Of course, the actual process is gradual and linear. If there is a sudden change, it is estimated to be the second personality. </p>
<p>The former me can’t be summed up as stupid </p>
<p>Want to come because: </p>
<blockquote>
<p>Those who are good in ancient times will be foolish </p>
</blockquote>
<p>Later, I came into contact with a lot of magical concepts, I am willing to believe that these things are true </p>
<p>Having nothing to do, I reviewed the mind map, mostly one or six months ago </p>
<p>Found a few points: </p>
<ol>
<li>A problem was raised and no solution was directly contacted </li>
<li>Some learning theories are incorrect or not suitable for me </li>
<li>Unrealistic goals </li>
<li>Some nodes have been completed (so happy O(∩_∩)O~~) </li>
</ol>
<h3 id="2013-12-31-23-46-22"><a href="#2013-12-31-23-46-22" class="headerlink" title="2013-12-31 23:46:22"></a>2013-12-31 23:46:22</h3><p>This…what about a good summary? ? ?<br>Face slap again<br>The previous list is not finished<br>I brushed Ruby on Codecademy in the evening, I thought it would be next year soon. It’s not 100%, it’s up, no matter the EP, I’ve been brushing it until just now, 12 Pomodori<br>But, sometimes, it’s not that you can make a breakthrough with the first steel. It’s not scientific </p>
<p>It is said: </p>
<blockquote>
<p>People who know how to give up don’t care too much about the gains and losses in front of them. They have a broad mind and vision… </p>
</blockquote>
<p>Forget it, it’s pointless to lie to yourself<br>Don’t say anything, Sang Xin, I’m asleep, and I have to grab the ticket tomorrow… </p>
<p>This is not over, we will fight again in two days, and continue<br>To Be Continue… </p>
<hr>
<h3 id="2013-12-20"><a href="#2013-12-20" class="headerlink" title="2013-12-20"></a>2013-12-20</h3><p>The head hurts these few days. I have seen that 2013 is about to pass. A few days ago, I was going to do the finishing work, not adding more tasks, but now, just looking at the finishing touches, it is very much.<br>Especially after the mac arrived, all kinds of familiarity, another two days delay </p>
<p>Quickly list the To-Do list and get them out of your head </p>
<ul>
<li>Infuriating operation </li>
<li>Wing Chun: Marking </li>
<li>More than ten unfinished books </li>
<li>ESL </li>
<li>This summary </li>
<li>Update Blog/about </li>
</ul>
<p>Last year’s summary was postponed to March. </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>Reading Plan</title>
    <url>/en/Reading-Plan/</url>
    <content><![CDATA[<p>2014-04-08 </p>
<p>There was a miscalculation last time, which caused Luzhu to think that fast reading was done<br>After the correction, I know the truth. </p>
<a id="more"></a>

<hr>
<p>After buying Air, I stupidly spent a few months reading<br>I discovered Game Center only two days ago, no wonder people say that the iPad is used to play games<br>Uncollectible for two days<br>Then I thought about the reward mechanism of the game, and the irritability of reading </p>
<p>I remember where I said that reading is a long-term reward process, so the hourly unit cannot feel rewarded<br>Blindly saying that internal drive is an abuse of willpower </p>
<p>If the subconscious doesn’t understand this, it feels boring and controls you to do other things </p>
<p>I feel that after breaking through 1k or more, I will be internalized into the habit. I shouldn’t care about this anymore, but it’s especially uncomfortable at this stage of several hundred (╯﹏╰) </p>
<p>So I wonder if there is a kind of visualization<br>It’s similar to KPI, purely used<br>And the number of pages in the book is easier to quantify </p>
<p>Then I used omniplan and Gantt chart for a long time, but it didn’t look what I wanted. </p>
<p>I was angry and wanted to write it myself and make it into a website or ios app. Later I found that Excel was enough… </p>
<p>Does the programmer mode make wheels for yourself at every turn… </p>
<p>Thinking out of box </p>
]]></content>
      <tags>
        <tag>Reading</tag>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>Dream interpretation</title>
    <url>/en/The-Interpretation-of-Dreams/</url>
    <content><![CDATA[<p>The little mage found himself doing some tricks<br>The needle is stuck on the back of the hand, inside the red blood needle tube<br>Without thinking, I pressed the C (pause?) key </p>
<a id="more"></a>

<p>I breathe tightly, and I feel choked instantly. It feels like I am in a vacuum, and the air in my body leaks out of the pinhole.<br>The little mage was terrified and hurriedly pressed the pause button again </p>
<p>After about a few seconds, the little mage took a sigh of relief and finally felt that he could breathe.<br>He took a few deep breaths. Before he thought that “If you die in a catastrophe, you will have a blessing.” He discovered a serious problem-no heartbeat </p>
<p>This time, the little mage was scared<br>Oh my god, how could this happen, the little mage thought to himself, there is breathing but no pulse, what’s the matter with swelling? </p>
<p>Acute cardiac arrest is one of the most important causes of death in the elves<br>Fortunately, the little mage was in the celestial dynasty, he did not give up the treatment, and proceeded to perform CPR on himself. At this time, he was already lying on the bed. </p>
<p>However, there are several key points for high-quality CPR: </p>
<ul>
<li>Compression rate is at least 100 compressions per minute </li>
<li>Adults compress at least 5 cm </li>
<li>Ensure chest rebound after each compression </li>
<li>Minimize the interruption of chest compressions </li>
<li>Avoid hyperventilation </li>
</ul>
<p>In this way, the current situation of the little mage is simply a joke </p>
<p>In addition, no blood circulation means that there is no energy exchange with oxygen, and the body’s activities gradually stop.<br>But I can move, still doing chest compressions on myself, and have such a clear will<br>Although the little mage was puzzled, he did not stop to treat himself. </p>
<p>Working hard for a while, then he woke up… </p>
<p>It’s late at night, and there’s no sound around it<br>Whenever he has a nightmare, when the little mage wakes up, he often finds that his hand is pressed against the position of the heart, but this time it is on the right. </p>
<hr>
<p>I think that when I was in the first grade of the Master Academy, the little mage was exposed to hypnosis, and he was very relaxed and comfortable after doing it. Later, I listened to it once before going to bed every night, and the quality of sleep soared. </p>
<p>By chance, the little mage turned to an ancient book <a href="http://book.douban.com/subject/1201821/">Uncover the mystery of the human mind</a><br>It’s a pity that this book is too thick. When the deadline for returning the book is reached, the little mage can only read half of it </p>
<p>But the cheats are the cheats. For example, Mei Chaofeng only got half of the Jiuyin Scripture, which is enough to kill Qiu Chuji and other old ways in seconds. </p>
<p>The little mage was stunned by Freund’s Oedipus theory, but “the dream is to achieve a certain wish” inspired him<br>Some dreams can be found out by themselves </p>
<p>Thanks to the seemingly scientific explanation, coupled with the bonus of hypnosis halo, the little mage’s dreams gradually disappear </p>
<p>PS: A few years later, the little mage flipped through this book again, read the remaining half, and saw the description of controlling dreams, although only one sentence: </p>
<blockquote>
<p>Some people can clearly know that they are sleeping and dreaming at night, so they seem to have the ability to guide dreams with their will. For example, when this kind of dreamer is not satisfied with the dream, he can interrupt the dream without waking up, and then start in a new direction. </p>
</blockquote>
<p>The little mage can only sigh that good luck makes people, it is very close to this, if you insisted on going through it back then, you might not have made so many detours.<br>There is another thing in the same way, I will talk about it later when I have a chance [pit] </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Multiple sleep</title>
    <url>/en/Polyphasic-Sleep/</url>
    <content><![CDATA[<p>As mentioned in <a href="http://book.douban.com/subject/7067548/">Powerful Sleep</a> </p>
<blockquote>
<p>The reality is that they have slept too much, and their mental state is as bad as their sleep quality. This happens because they are not aware of the potential energy and sleep mechanism in their body (Energy and sleep mechanism) </p>
</blockquote>
<p>This sentence points out a long, long time ago, the little mage sometimes slept for 10 hours, but when he woke up he felt tired, sleepy, and lack of energy. </p>
<p>Cheese is power<br>After that, the little mage made appropriate adjustments according to his Deep sleep and REM cycle, and strengthened the light (note that it is melatonin, not photosynthesis) </p>
<p>Even under the strong work of Yali, the quality of sleep improves linearly </p>
<a id="more"></a>

<hr>
<p>Later, the little mage learned about the magical [Da Vinci Sleep](<a href="http://zh.wikipedia.org/wiki/%E5%A4%9A%E9%98%B6%E6%AE%B5%E7%9D%">http://zh.wikipedia.org/wiki/%E5%A4%9A%E9%98%B6%E6%AE%B5%E7%9D%</a> A1%E7%9C%A0), also known as polyphasic sleep </p>
<p>At that time, the little mage was rather silly, so he actually tried it, and the result directly led to a sluggish work during the day.<br>If he had seen <a href="http://book.douban.com/subject/3662227/">Private Myth</a>, he would not have done such stupid things </p>
<p>In fact, NREM REM has its irreplaceable effect<br>First of all, REM is not a human patent. It occurs in mammals and birds. Second, it may be expressed as “feeling” in the NREM stage, so although there is no dream at this time, it does not mean that it can be shortened at will. </p>
<p>At the same time, some of the warriors who have tried this are mostly based on the month. It seems that there has not been a chestnut that has been successful for ten years. </p>
<p>However, the little mage was inspired by a child’s paper 6 + 3 * 20′ that used this method to test the TOEFL (6 hours at night, 20 minutes in three periods during the day), and perfected his own method </p>
<p>So that afterwards, there was no dream </p>
<hr>
<p>Ordinarily, the little mage should be happy. At this time, he can go into deep sleep smoothly through <strong>hypnosis</strong> [pit, fill in the back], and after waking up, his whole body is loose, as if he has opened up the eight meridians of the odd meridian [pit] </p>
<p>But the little mage is still depressed. Not having a dream for several months is equivalent to missing a skill, and this kind of thing has not happened before, it is hard not to doubt whether there is something wrong with his human brain. </p>
<p>As mentioned earlier, the little mage can already see how his subconscious is doing something magical based on Freud’s dream interpretation theory.<br>But now there is no dream, how can this be explained? Could it be that the little mage has no desires and desires? </p>
<p>The little mage was confused for a long time, until he saw <a href="http://book.douban.com/subject/1316093/">Beyond Inferiority Complex</a> </p>
<p>Adler mentioned in the study of dreams in individual psychology: </p>
<blockquote>
<p>If the meaning of dreams is to leave certain feelings in life, we often find people who don’t want to be swayed by feelings. Most of the time, they only believe in science. People of this type are less likely to dream. People don’t even dream at all. </p>
<p>Any solution provided in the dream is actually worse than the solution you think about when you are awake. To put it another way, that is to say, when dreaming, the individual is tantamount to solving problems in the process of sleeping. This is not excessive. </p>
</blockquote>
<p>The little mage was relieved, and quickly took notes to strengthen his memory </p>
<p>Unfortunately, he didn’t know that due to the early age of these books, the authors belonged to semi-blind people who touched the elephant in the dark. Everyone thought that they had touched the whole elephant, but in fact they only touched the trunk, legs, and tail. As a pioneer, Ephesus was not spared, apparently only touching the reproductive organs of elephants. </p>
<p>As for Jiangzi, the little mage has always been complacent about being a “person who does not want to be influenced by feelings”.<br>Until he came into contact-Qingmingmeng </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Learn Go in 20 days</title>
    <url>/en/Learn-Go-in-20-days/</url>
    <content><![CDATA[<p>I looked at the Log, and it was less than 20 days, but the title was 16 and it was weird. There is no multiple of 10 domineering </p>
<p>First of all, the study time cannot be separated from the environment </p>
<p>When Dewdrop was in university, I was hurt by “learning a language first”. When I graduated, I only knew C, but I didn’t learn it. (Other languages will expand your knowledge of programming) </p>
<p>So the mud should be faster! ! ! </p>
<a id="more"></a>

<p>Just say a few words and get tired ＞﹏＜, hurry up and post the steps </p>
<ol>
<li><p><a href="http://book.douban.com/subject/24316255/">Go Web Programming</a> </p>
<p>Except for the type declaration at the back, the syntax of Golang and C is quite similar, at least not as painful as Obj-C, and the syntactic sugar can pass<br>Then there is the aspect of web programming. </p>
</li>
<li><p><a href="http://go-tour-zh.appspot.com/#1">Go Official Guide</a> </p>
<p>This is equivalent to the computer environment, test some usage </p>
<p>After getting familiar with the above two steps, you can already write something for fun<br>For example, Luzhu wrote a web version of the Zhihu Daily homepage, click <a href="http://zhihudaily.ahorn.me/">here</a><br>Some of the development at that time and the source code are here <a href="https://github.com/leihao0/GO-ZhihuDaily">here</a> </p>
<p>Of course, Github is another skill </p>
</li>
<li><p>Frame, <a href="https://github.com/go-martini/martini">Martini</a> for dewdrop </p>
<p>The framework feels like another thing, even if you can speak it, the framework based on this voice will still take time to learn. For example, Ruby itself is completely covered by ROR. </p>
<p>So when I opened it, I didn’t expect to use the framework. Later, I wrote that I found that the routing magic must be realized by myself. </p>
</li>
</ol>
<p>There are various discussions on performance, so I won’t talk about it </p>
<p>Humanware is the most important thing, so from a programmer’s point of view, Golang is still very good. It is a static voice and can be written like a dynamic language to some extent, except for the pain of Json conversion and the constant checkerr. Outside (I’m really not black it!!!) </p>
<p>Well, I came here after using a bit of Ruby. Ruby is so cool that I feel all kinds of uncomfortable after turning around. </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Lucid dream</title>
    <url>/en/Lucid-Dream/</url>
    <content><![CDATA[<p>I have to say that this world is really amazing. What you don’t know doesn’t mean it doesn’t exist. </p>
<p>After the little mage read the magic post of “Teach You How to Control Dreams”, the whole person was stunned.<br>The previous Inception was completely regarded as a movie, and I forgot after watching it. I didn’t expect it to have a realistic basis.<br>Really an expert watch the doorway, the layman watch the excitement<br>Because of my own stupidity, the unforgettable things like ghost press never appeared again </p>
<a id="more"></a>

<p>PS: The prototype of Inception seems to be Yasuhiro Tsutsui <a href="http://book.douban.com/subject/4887589/">Dream Detective</a>. If you don’t have time, you can watch the adapted anime movie [Red Pepper](http:// movie.douban.com/subject/1865703/)<br>However, I still recommend novels, because it describes the non-deterministic polynomial (NP) problem from the shallower to the deeper, and gives many examples </p>
<p>After that, the little mage kept on Google, found Baidu Lucid Dream Post Bar, and saw the children on the end of the world, you may “miss a wonderful world”, and then go to the dream space of ants<br>If none of these can convince him, he saw in TED, [The feelings of the doctor of Harvard Neuroscience Department after stroke](<a href="http://v.163.com/movie/2013/3/6/B/M92INA100_M92INHT6B">http://v.163.com/movie/2013/3/6/B/M92INA100_M92INHT6B</a> .html) </p>
<p>Why is the little mage so excited?<br>Not only because Qingming Dream can be played as a large-scale 3D game, the most important thing is: it is said that if you control the dream, you can do anything and everything in the dream (✧≖´◞౪◟≖ ｀) </p>
<p>The little mage immediately started the experiment, and succeeded several times afterwards, all of which were recorded in detail, excerpt </p>
<hr>
<p>the first time: </p>
<blockquote>
<p>Use the retreat to sleep, hug Benben, look at the software, the six-pointed star, three conversion methods (trigger! Actually, it’s already asleep, otherwise the notebook from somewhere in the middle of the night), slap on the bed, and the pores all over, As if they were all opened, they got up immediately! ! !<br>Out of body? It’s only the third day, I was excited, and found myself back in my body…<br>Then I saw that I was a white glowing Dongdong, with limbs + body, no hands and feet, but the end was arc-shaped. Is this an energy state? Then I can’t get out no matter what, the next step is not to open my eyes<br>Then I opened my eyes and found that the door to the balcony was open. It was a bit scary to know the sound of horses and horses outside. It was probably scared. I really woke up and found that the door was closed properly. The outside was dark and nothing. Sound<br>Continuing to take out the notebook, the whole body is numb again…<br>The vague memory below is going to the karaoke hall, back to school, buses, taxis, repairing electric wires, it has become an ordinary dream… </p>
</blockquote>
<p>The next time: </p>
<blockquote>
<p>In my dream, I was in school. I thought of holding down ctrl and I could fly. Shift was to accelerate, and then I played for a long time under weightlessness.<br>Then there is a Q version of the small animal competition. I was about to fly, and suddenly the green small animal became Makolov (Modern Warfare 3), or T-bag (Prison Break)… He wanted to catch me , I just drifted away… </p>
</blockquote>
<p>There are some, such as:<br>Jobs’s “your time is limited” taught the little mage a heavy lesson in his dream<br>And in the dream, the unclear relationship for the university has completed the closed loop, and can continue to move forward<br>And the dream mentioned in Uncovering the Mystery of the Human Mind, the little mage often wonders what is the meaning of living, so he will give him a little bit in the dream and kill him to let Ya know how wonderful it is to live. </p>
<p>##method<br>There are a lot of online games, each with its own way of playing. In fact, you only need to master the core ideas: <strong>Dream in a dream, then control dream</strong> </p>
<ol>
<li>When you wake up in the morning, you must record your dreams. Even if you can’t remember any dreams, you must write and draw.<br>Normal short-term memory is cleared in 5 minutes, so if you don’t record the dream immediately, the dream will be forgotten instantly </li>
<li>In daily life, remind yourself, “Am I dreaming?”<br>Habits can be brought into dreams. The principle can be referred to: <a href="http://book.douban.com/subject/20507212/">The power of habit-why do we live like this and work like this? </a> </li>
</ol>
<p>For details, please refer to <a href="http://book.douban.com/subject/4740779/">Dream Guide-Analyzing the Mysterious Qingming Dream</a> </p>
<p>It also describes a state that may be more advanced than lucid dreams: dreamlessness, that is, the state of pure consciousness. </p>
<p>PS：<br>The dreamless here is not the kind of little mage who sleeps till dawn on the island of Phuket after hypnotizing.<br>It may be the state of being completely present in the “Power of the Present”<br>In addition, when the brain evolved REM, no words were produced yet, so our dreams are often presented in the form of images </p>
<hr>
<p>In fact, even if it’s Zhimeng, I still can’t help feeling that kind of fear, such as the situation where the body is cold, the whole body is transparent, and one arm is broken.<br>It’s even more terrifying if it’s the scenes of your daily life, such as strange sounds, monsters and skeletons<br>Because of the Fight-or-flight rooted in human genes, it’s hard for you not to wake up at this time </p>
<p>Because - in case it’s true! </p>
<p>In the Don Juan series <a href="http://book.douban.com/subject/4199618/">The Art of Dreaming</a>, the Qingming Dream is described as another world, but our daily life is illusory<br>It sounds a bit like Avalon-the ideal home for heroic souls to rest </p>
<p>Although it sounds nonsense, but Zhuang Shengxiao dreams of butterflies, who knows which world is real? </p>
<h2 id="The-truth-is-always-one"><a href="#The-truth-is-always-one" class="headerlink" title="The truth is always one"></a>The truth is always one</h2><p>Having said so much, in Conan’s words: There is only one truth </p>
<blockquote>
<p>For a monthly income of more than 50,000, consider mid-range travel in Europe and America<br>Monthly income of 30,000 can consider low-end European travel<br>Monthly income of 10,000 to 20,000, please choose Southeast Asia tour<br>Monthly income is less than 10,000, please choose domestic travel<br>Monthly income is less than five thousand, please choose the province tour<br>Please choose an outing with a monthly income of 3000<br>Please choose peanut oil for less than two thousand<br>Less than one thousand, please choose the trench tour<br><strong>If you have no income</strong>, please choose <strong>Sleepwalking</strong>!<br>Happy May Day everyone! </p>
</blockquote>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Sleep paralysis</title>
    <url>/en/Sleep-Paralysis/</url>
    <content><![CDATA[<p>Once, when the little mage was still a magic apprentice in the magic academy, he experienced twice [Ghost Press](<a href="http://zh.wikipedia.org/zh/%E7%9D%A1%E7%9C%A0%E7">http://zh.wikipedia.org/zh/%E7%9D%A1%E7%9C%A0%E7</a> %98%AB%E7%97%AA%E7%97%87*) </p>
<p>It’s been four years since the first time. The little mage at the time didn’t even know that it was called a “ghost press”, but was completely at a loss and defined it as a “spiritual event.” </p>
<p>Let’s go back to four years ago, (in parentheses is the analysis using the theory of “Dream Explanation”): </p>
<p>At that time the little mage came back from shopping at noon and went to sleep for a nap<br>Plus he was having a cold and was very uncomfortable, so the little mage continued to use hypnotherapy<br>As mentioned before, after the little mage uses this method, he has no trouble dreaming, and hasn’t had any problems for almost two years. </p>
<p>And this time he will eat a pound </p>
<a id="more"></a>

<hr>
<p>The little mage slowly relaxed, and suddenly he found that he had introspection ability (<em>Taoist practice can see the internal organs</em>), and when he scanned his stomach he saw a huge tumor.<br>Dizzy, the little mage thought to himself, this is a terminal illness, and then the picture is reduced, the previous one is the elephant that has been enlarged many times (<em>High School Biology Book in Tumor Cells</em>) </p>
<p>… </p>
<p>When he was conscious again, the little mage found himself on the bridge of a lake (<em>a map of a local lake</em>)<br>Suddenly a picture of a hand extending from the water flashes (<em>Plants vs. Zombies</em>)<br>When crossing over half of the lake from the bridge, there was a riot on the right, as if someone fell into the water.<br>Then I saw a child in the water (<em>When the little mage passed by a certain door when he was young, the little friend said that it was haunted inside, and he must not look inside (*Never imagine the pink elephant</em>), otherwise he would have a ghost. Then the little mage would I looked inside and caught a glimpse of an unforgettable picture*)<br>The little mage went down an arc to a ship, and the picture of his hand extending from the water flashed again. Then he flew up or fell into the water? The screen is tilted about 90 degrees (<em>CS died and fell from upstairs &amp; “I fell into the water last time”-Angel Beats</em>) </p>
<p>After that, the little mage got entangled with that thing. I don’t know how long it has passed, it may be instantaneous<br>Then he felt numb all over his body and buzzing in his head (<em>the kind of UFO that appeared in the movie is actually brain waves</em>) </p>
<p>The little mage is terrified, there is a horror of being possessed by a ghost and about to be occupied<br>He always wanted to get rid of it, and tried to shine the sun on it three times, only the last time came out a red flame with a little grimace (<em>Warcraft Flame Lord’s Lava Creature</em>)<br>At this time, the buzzing sound is getting louder and louder, and the whole body is getting numb </p>
<p>I don’t know if he came up with it himself or the person rescuing next to him reminded: Just open your eyes.<br>This is undoubtedly a life-saving straw, the little mage desperately did it, but he seems to have no control over his body, he is paralyzed all over, and even unable to open his eyes.<br>At that time, the little mage had only one feeling: “If you don’t open your eyes, it will be a plant.”<br>After trying hard several times, he finally opened his right eye and saw the ceiling of the dormitory. It was only dim, and the phantoms and phantoms disappeared immediately, and he realized that he was taking a nap. </p>
<p>Although there was “Dream Explanation” to withstand, some of them were beyond the explanation of the little mage, and a series of questions were raised:<br>If they are all illusions, why is the whole body paralyzed?<br>After waiting for a long time, he was able to control his arm to take off the earphones, and he didn’t have to think about how his body should be exercised. It could move according to our consciousness.<br>Can mental activity cause physical damage?<br>In addition, it was more than 3 o’clock at the time. Although it belonged to the yin of the sun in a day, the ghosts did not escape.<br>And what happens if you don’t open your eyes? Lost consciousness? For that thing, the little mage didn’t feel any emotions, and it had no spiritual impact on him.<br>Is it still stuck in his mind, or has he gone out? Or is it a part of him? </p>
<p>In short, the experience of ghost press is strange and peculiar, especially the first time, without scientific guidance, it is difficult not to make ghost associations.<br>The little mage has been puzzled for a while since then, a few weeks later he experienced it again<br>With the first experience, the little mage quickly opened his eyes and thought he was done. </p>
<p>After a while, the little mage brushed the Q domain, and suddenly found that Tiantianfa sent a public account that he was planning to block and posted an article:<br>Teach you how to control dreams [Super technology] </p>
<p>Little Mage is completely stupid </p>
<hr>
<p>PS:<br>In fact, the answer that really convinces the little mage is in <a href="http://book.douban.com/subject/5375620/">Out of Control-The Final Fate and Ending of All Mankind</a> This book is inconsistent with Mengbagan, in which The chapter from All Fools into Wisdom says: </p>
<blockquote>
<p>Humans have a brain, but it is neither centralized nor central<br>… Consciousness emerges from a distributed network of many tiny and unconscious neural circuits </p>
</blockquote>
<p>There is also a quote from “The Society of Mind” (The Society of Mind): A paragraph from Marvin Mins’s philosophy and humanities book published in 1988: </p>
<blockquote>
<p>Human mental activities and any naturally evolved perception systems are a large society composed of individual simple processes completed by countless “busy beings”-like agents. Various mental phenomena emerge from the highly connected interaction mechanism of the brain. </p>
</blockquote>
<p>To make an inaccurate analogy, the human brain is probably like a GPU, with a lot of computing units. Everyone is in charge of their own affairs, and together they form the current “you”.<br>And when sleeping, if the part of the consciousness cell is running while the part that controls the body is dormant, it will probably lead to the horrible phenomenon of feeling awake but unable to control the body (stroke patients?) </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>How to install reaver on Mac OS X</title>
    <url>/en/how-to-install-reaver-on-mac-os-x/</url>
    <content><![CDATA[<p>Update: 2017-05-24 09:03:10 </p>
<p>Sorry, this post, I didn’t realize its ** danger before. </p>
<a id="more"></a>

<p>In October last year, my network was overdue, and I re-avered the wifi that was used temporarily during the National Day holiday that the new network needed. </p>
<p>When I played the <em>Open Yale Course-Listening to Music</em> on the NAS, I found that my TV (Android system) had a subtitle that said “This website is for my personal use only. Do you have any problems?”. </p>
<p>I was taken aback by this sentence. My NAS has a PandoraBox system. I use it as a bridge. Normally, my TV shouldn’t appear on their router. Obviously, I found that this wifi was a fishing wifi, and my TV was hacked. </p>
<p>So, if some stupid applications are still using http, all my data will be exposed. Even https has a problem with <a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">MitM</a>. ‘The product says iOS and macOS have a login trust certificate in the Keychain, but what is Android? Some devices have their own back door. </p>
<p>As for my TV, I think it uses <code>adb connect &lt;TV IP address&gt;</code> which is <em>Android Debug Bridge (adb) Wireless Debugging Over Wi-Fi</em>. </p>
<p>However, I later changed most of the passwords. </p>
<p>So, you can try the reaver of technical exploration, but <strong>cannot use it</strong>. </p>
<hr>
<p>Update: 2015-07-27 13:14:32 </p>
<p>I wrote it on 2014-05-11, but it was a year late, and now you can easily install reaver with <code>Homebrew</code>. </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install reaver</span><br></pre></td></tr></table></figure>

<p>Thanks Rustam for the suggestion </p>
<hr>
<p>I always use beini in vmware, and every time I plug in an extra USB wireless adapter to my computer. </p>
<p>When I had a Mac, I just copied beini’s VMX from Windows to the Mac, which meant I still had to use a wireless adapter. </p>
<p>In fact, <code>minidwep</code> or <code>inflator</code> all use the powerful tool <code>Reaver</code>… you know), while Mac is a unix-based system, you can run <code>Reaver</code> directly. </p>
<ol>
<li>Download <a href="https://docs.google.com/file/d/0B3tHnfnS08GycG1fVENETEdvazA/edit">reaver-osx.zip</a><br>(Tips: The original reaver-1.4 cannot use <code>make</code> directly on Mac) </li>
<li>Unzip reaver-osx.zip. </li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> reaver-wps/src/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<p>Enjoy, don’t do bad things :-) </p>
]]></content>
      <tags>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>Straight to heaven</title>
    <url>/en/Highway-to-Heaven/</url>
    <content><![CDATA[<p>Charles Dickens, the greatest British writer of the Victorian era, said in A Tale of Two Cities: </p>
<blockquote>
<p>This is the best era and the worst era;<br>This is the age of wise, this is the age of ignorance;<br>This is the era of trust, this is the era of doubt;<br>This is the season of light, this is the season of darkness;<br>This is the spring of hope, this is the winter of disappointment;<br>We have everything, we have nothing;<br>Here goes straight to heaven, here goes straight to hell </p>
</blockquote>
<a id="more"></a>

<p>Of course this article has little to do with this passage<br>The reason why it is quoted here is just that these sentences are catchy to read &amp; crazy and cool. </p>
<p>But the little mage did leave and went to heaven </p>
<p>I have to sigh the rapid development of the celestial dynasty. Two years ago, when the little mage went to heaven from two fat papers, there was only K series.<br>In fact, there was no G system at that time, it was just like Dante’s “Divine Comedy”, the route was divided into: </p>
<blockquote>
<p>Inferno (Inferno)-‎ Purgatory (Purgatory)-‎ Paradise (Paradise) </p>
</blockquote>
<p>Before going to heaven, the little mage has to go to the magic city. Not to mention that the price is several times more expensive, but it can actually be ＞= K series </p>
<p>Once back to the city, the friend bought a hard seat in order to save money, and successfully lured the young master into the pit<br>Originally, the little mage tried too hard while practicing magic in the mage academy, which caused some minor problems in the lumbar spine.<br>It turned out to be good. The 6 hours of continuous bumps almost broke the thin waist of the little mage.<br>From then on, the little mage vowed to lie down as long as he has a ticket </p>
<p>I don’t want to have a direct G series after a year, quiet, fast and clean, and the voyage is shortened to 2.5 hours </p>
<p>But even with Jiangzi, it’s quite boring on the train<br>In the past, the little wizards always brought books or read them directly on the phone, but this time with the code artifact, it is naturally very different </p>
<p>However, the little mage is still more worried, and has been hesitant to sacrifice the artifact. After all, there are some ordinary artifacts around, such as the plague and death. </p>
<p>In fact, the little mage has also used and used this ordinary magic weapon for a long time, from the ancient eh thirsty skin to the latest type of plague, let’s die, and spend more than 1k days and nights with the little mage </p>
<p>That’s really a good memory, the little mage’s waist started to wear out at that time, so let’s talk about it later if I have a chance. </p>
<p>In fact, the little mage worry is completely redundant, because: </p>
<p>The little mage in the eyes of the little mage:<br>Wow, I got the artifact at a young age, this guy is not easy<br>The little mage in the eyes of others:<br>A hard-working programmer, I have to fix the bug on the train </p>
<hr>
<p>Tips: </p>
<p>There is an experiment:<br>Let others help to see things, can reduce the probability of being stolen<br>I don’t know whether it’s true or not, but the little mage often uses it<br>The passers-by are also very helpful, there has not been a black swan incident </p>
<hr>
<p>Before, the little mage asked a little partner to find a farmer’s house in his community, temporarily for a month as a transition </p>
<p>Then he knew what is called the struggle of the ants and what is called Bei Diao </p>
<p>That environment…<br>That noise…<br>That smell… </p>
<p>In addition, the shops here, as if they had been discussed, closed one after another, each time there was a loud noise, giving the little mage continuous and continuous stimulation.<br>One after another, more than the snoring of the little mage’s dormitory. </p>
<p>At three in the morning, the last store was finally closed<br>Little Mage thought he could finally sleep this time<br>Just lying down, there was a loud noise again, and the little mage was surprised to find that selling early shops began to open the door one after another. </p>
<hr>
<p>The little mage has a good mental plan, thinking that he has read so many poems and books this year, and one month is not enough. </p>
<p>If he has watched the eighth episode of the documentary “Why Poverty?” produced by the British Broadcasting Corporation (BBC) and the Danish Broadcasting Corporation (DR) in collaboration with documentary directors from various countries [“Reading to Poverty”](<a href="https://www.youtube">https://www.youtube</a> .com/watch?v=tcMzVgurk-0), it should not be so naive </p>
<p>Sure enough, after the little mage made a fierce shot, a few days later, the result was gratifying<br>There are only two interview calls, the conversion rate is less than 20%, and the interviewer has been hung up<br>This one is also said to be miscellaneous, lacking advantage, boring, and empty thoughts, and the most important thing is that it is still disgusted with spells. </p>
<p>The little mage didn’t eat dinner when he was heartbroken. He quietly returned to the peasant’s room and went to read Laozi’s “Tao De Jing”.<br>Use that sentence repeatedly: </p>
<blockquote>
<p>Misfortune, where the blessing rests; Fortune, where the misfortune lies </p>
</blockquote>
<p>Come to comfort myself </p>
<p>╮(╯_╰)╭ </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS developer account and how to list it</title>
    <url>/en/ios-developer-account-and-app-store/</url>
    <content><![CDATA[<h2 id="Developer-account-application"><a href="#Developer-account-application" class="headerlink" title="Developer account application"></a>Developer account application</h2><p>In the middle, I was delayed by providing photos and caught up with the trend of <code>Swift</code>, but it only took 4-5 days and the efficiency was still very high. </p>
<p>At first I thought I would use a dual currency credit card.<br>As the result, the times are advancing, and now (2014) ordinary credit cards will do, so it is very convenient </p>
<p>PS:<br>99$ == 688 ￥?<br>Because I have to pay taxes… </p>
<p>Maybe my account transferred the E text, and all the returned Emails were E texts, among them there is a sentence: </p>
<blockquote>
<p>we’ll need a PDF copy of your government-issued photo ID. </p>
</blockquote>
<p>It took a long time to understand that the <code>government-issued ID</code> turned out to be an ID card… </p>
<a id="more"></a>

<p>I didn’t think too much about this extra delay. As a result, I went to China Unicom’s official website to buy a card two days ago, and the phone feedback knew the reason. </p>
<p>The reason for this weird thing is: transfer of account…<br>China Unicom reported that the information could not be queried through the ID number (why is this?)<br>PS: China Unicom is also quite weird. It was sent to a QQ mailbox. At first I thought it was a liar… </p>
<h2 id="How-to-list"><a href="#How-to-list" class="headerlink" title="How to list"></a>How to list</h2><p>Reference <a href="http://my.oschina.net/u/1245365/blog/201920">here</a><br>Very detailed, basic step by step comparison </p>
<p>For me, I encountered these two stuck places: </p>
<h3 id="1-no-identities-were-available"><a href="#1-no-identities-were-available" class="headerlink" title="1. no identities were available"></a>1. no identities were available</h3><p>xCode prompts this, I bought the account, what’s the matter?<br>Mainly if it is the first time, it may not be set automatically </p>
<p>See <a href="http://blog.csdn.net/kafeidev/article/details/8250051">here</a><br>The interface is not the same, but a closer look will pass </p>
<h3 id="2-iOS-validation-got-Main-iPad-ipad-storyboardc-was-not-found"><a href="#2-iOS-validation-got-Main-iPad-ipad-storyboardc-was-not-found" class="headerlink" title="2. iOS validation got Main_iPad~ipad.storyboardc was not found"></a>2. iOS validation got Main_iPad~ipad.storyboardc was not found</h3><p>The universal I used when I created it before, although I later adjusted it to iPhone everywhere, I didn’t expect there to be a small dark corner of <code>plist</code> O__O”… </p>
<p>Participation in the construction: <a href="http://stackoverflow.com/questions/19873058/ios-validation-got-main-iphoneiphone-storyboardc-was-not-found">here</a> </p>
<p>Then just wait, it will take another 4-5 days~ Don’t call back (&gt;_&lt;) </p>
<hr>
<p>2014-07-01<br>Waited for seven days, then was rejected, it was a tragedy… </p>
<blockquote>
<p>2.2: Apps that exhibit bugs will be rejected<br>22.2: Apps that contain false, fraudulent or misleading representations or use names or icons similar to other Apps will be rejected </p>
</blockquote>
<p>I don’t have time to take a closer look at the moment, just throw it away… </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Enhance your Lifestyle</title>
    <url>/en/enhance-your-lifestyle/</url>
    <content><![CDATA[<p>[A person rents a single room in a strange city. Is there any way to make life in a small space more interesting?] ](<a href="http://www.zhihu.com/question/21752718">http://www.zhihu.com/question/21752718</a>)<br><a href="http://www.zhihu.com/question/23136740/answer/27439893?group_id=447934822">A little expensive but what are the items worth buying? </a><br><a href="http://www.zhihu.com/question/20840874/answer/27408093?group_id=441891457">Which things after buying will make people feel bad about each other because of the improvement of their quality of life and happiness? </a><br><a href="http://www.zhihu.com/question/20228439/answer/27418171?group_id=444370212">Are there any good products or brands that are not known to outsiders? </a> </p>
<a id="more"></a>

<p>When I first worked one or two years ago, I went to play in the room paper rented by the small group, and found that a girl decorated her cabin with all kinds of things and it was very warm </p>
<p>At that time, my income was nearly twice as much as hers, and looking at our living space and way, it really seems like the other way around<br>I immediately realized that the quality of life and the correlation coefficient of income are not proportional, or at least not as originally thought. </p>
<p>I know that those posts are so long. I read them for a long time a while ago, but I haven’t finished reading them. I chose some according to my needs: </p>
<h2 id="Cote-amp-Ciel-backpack"><a href="#Cote-amp-Ciel-backpack" class="headerlink" title="~ Cote &amp; Ciel backpack ~"></a><del>~ Cote &amp; Ciel backpack ~</del></h2><p>As a male, it doesn’t matter if the mouse button is 1K, but the bag is so expensive at this price.<br>Wait for pay </p>
<h2 id="OKO-Filter-Jug"><a href="#OKO-Filter-Jug" class="headerlink" title="OKO Filter Jug"></a><del>OKO Filter Jug</del></h2><p>This weird thing turns the coke into pure water, thunder is dead (actually to drink high-concentration coke →_→)<br>But I still need to make tea or coffee, so the demand is not strong </p>
<h2 id="Retina-MacBook-Pro-13"><a href="#Retina-MacBook-Pro-13" class="headerlink" title="Retina MacBook Pro 13"></a><del>Retina MacBook Pro 13</del></h2><p>Development artifact + guy who eats<br>In this way, it is investment rather than consumption<br>Regret not on top 15 </p>
<h2 id="iPad-Air"><a href="#iPad-Air" class="headerlink" title="iPad Air"></a><del>iPad Air</del></h2><p>I was bewitched to buy kindle before, but I couldn’t avoid the pad later.<br>It’s cool to read the PDF, the kindle is thrown in the drawer, don’t worry if you haven’t bought kindle </p>
<h2 id="iPhone-6"><a href="#iPhone-6" class="headerlink" title="iPhone 6"></a><del>iPhone 6</del></h2><p>Wait and wait, finally there is a big screen, wait for the release </p>
<h2 id="BOSE-QC-20i-active-noise-reduction"><a href="#BOSE-QC-20i-active-noise-reduction" class="headerlink" title="BOSE QC 20i (active noise reduction)"></a><del>BOSE QC 20i (active noise reduction)</del></h2><p>The whole world is quiet… </p>
<blockquote>
<p>Feel:<br>Great value, great recommendation </p>
</blockquote>
<h2 id="Logitech-G700s"><a href="#Logitech-G700s" class="headerlink" title="Logitech G700s"></a><del>Logitech G700s</del></h2><p>From G1 to MX518, now it’s time to enter the wireless<br>But now I play less games and wait for my salary </p>
<blockquote>
<p>Feel:<br>11 custom shortcut keys, really don’t need to…<br>1W6 DPI, it’s like floating </p>
</blockquote>
<h2 id="Filco-87"><a href="#Filco-87" class="headerlink" title="Filco 87"></a><del>Filco 87</del></h2><p>After checking for a long time, I actually figured out what the green axis, red axis, tea axis and black axis are. </p>
<p>I thought that the keyboard + touchpad that comes with rMBP would be enough </p>
<p>As a result, I used Filco to hit Warcraft, and coded the code again<br>After switching back to my notebook, the difference immediately came out-if I press it quickly, the keycap will not bounce softly (poisoned…) </p>
<p>The legendary ** static capacitive keyboard**: HHKB or Realforce<br>But HHKB does not have F1, Realforce is so ugly… </p>
<p>Also, I want Mao to be silent, the office is noisy, okay? Besides, I still have QC 20<br>In addition, I like the keyboard crashing when playing Warcraft. The magnetic levitation keyboard is still in concept, naturally it is mechanical </p>
<p>Filco looks wrong<br>The 67 keys are weird. The most important thing is that you can’t choose a hero ah ah ah ah ah ah ah ah ah ah<br>104’s keypad is not needed<br>So just 87 myself </p>
<blockquote>
<p>Feel<br>I can only say that the Macbook’s trackpad experience is really in place<br>When coding code, use the board to locate, the hand movement is not large, and the mouse cannot do this<br>That’s why pure mouse streams such as <code>Vim</code> and <code>Emacs</code> appeared<br>There is no sound of crashing when playing games<br>Measured APM, still that number…<br>Related to people… </p>
</blockquote>
<h2 id="Braun-ice-razor"><a href="#Braun-ice-razor" class="headerlink" title="Braun ice razor"></a>Braun ice razor</h2><h2 id="Oral-B-Electric-Toothbrush-S26"><a href="#Oral-B-Electric-Toothbrush-S26" class="headerlink" title="Oral B Electric Toothbrush S26"></a><del>Oral B Electric Toothbrush S26</del></h2><blockquote>
<p>Feel:<br>It’s true that I’m wrong, and I bought a copy for my parents<br>Now brush your teeth every morning and night </p>
</blockquote>
<h2 id="Wooden-SPA-bathtub"><a href="#Wooden-SPA-bathtub" class="headerlink" title="Wooden SPA bathtub"></a>Wooden SPA bathtub</h2><p>Let’s talk about having your own paper </p>
<p>Well, it seems to be related to income… </p>
]]></content>
      <tags>
        <tag>Shopping</tag>
      </tags>
  </entry>
  <entry>
    <title>Number of lines of code</title>
    <url>/en/count-lines-of-code/</url>
    <content><![CDATA[<p>When I was reading <em>iOS 7 programming recipe</em>, I suddenly thought of how many lines of Obj-c code I wrote. </p>
<p>Earlier when I was still in the Windows operating system, I used <a href="https://code.google.com/p/boomworks/">SourceCounter</a> to do this. </p>
<p>But <a href="https://code.google.com/p/boomworks/">SourceCounter</a> does not support Mac OS X. </p>
<p>So, I found an interesting command line: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find . -name <span class="string">&quot;*.m&quot;</span> -or -name <span class="string">&quot;*.h&quot;</span> | xargs grep -v <span class="string">&quot;^$&quot;</span> | wc -l</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>“^ \ $” Blank line<br>“wc -l” is the number of words </p>
<p>I would recommend another tool written by <code>Perl</code>. </p>
<p><a href="http://cloc.sourceforge.net/">CLOC - Count Lines of Code</a> </p>
<h4 id="Install"><a href="#Install" class="headerlink" title="Install:"></a>Install:</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install cloc</span><br></pre></td></tr></table></figure>

<h4 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cloc --exclude-dir=<span class="comment">#excludeDir, #dir1 #dir2 ...</span></span><br></pre></td></tr></table></figure>

<p>Here is result of my codes </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2014-08-19</span><br><span class="line"></span><br><span class="line">http://cloc.sourceforge.net v 1.60  T=20.51 s (67.8 files/s, 4427.5 lines/s)</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Language                     files          blank        comment           code</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">C++                            409           5440           4917          21968</span><br><span class="line">C/C++ Header                   250           2997           3436          10458</span><br><span class="line">Objective C                    298           3999           3720           9616</span><br><span class="line">XML                            184            408             97           6725</span><br><span class="line">HTML                            27            851             13           4743</span><br><span class="line">Java                           110            732            985           4082</span><br><span class="line">C                               54            492            533           2046</span><br><span class="line">Assembly                        23            234             16            600</span><br><span class="line">Python                          19            200            117            435</span><br><span class="line">Go                               2            109             21            303</span><br><span class="line">CSS                              2             33              7            223</span><br><span class="line">JSP                              4             10              0             66</span><br><span class="line">Javascript                       2              0              9             49</span><br><span class="line">YAML                             5             16             16             44</span><br><span class="line">Ruby                             1             13              3             11</span><br><span class="line">Bourne Shell                     1              4              1              7</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">SUM:                          1391          15538          13891          61376</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 7 Programming Cookbook</title>
    <url>/en/ios-7-programming-cookbook/</url>
    <content><![CDATA[<h1 id="How-to-read-the-cookbook"><a href="#How-to-read-the-cookbook" class="headerlink" title="How to read the cookbook"></a>How to read the cookbook</h1><p>Oh my God, it’s finally over, more than 1k pages! ! !<br>Hand-typed 80% of the code inside and found two bugs in the code<br>In addition, if there is an error, children’s shoes can <code>Pull Requests</code> on Github to <a href="https://github.com/oreillymedia/iOS7_Programming_Cookbook">oreillymedia/iOS7_Programming_Cookbook</a> </p>
<a id="more"></a>

<h2 id="Suitable-for-the-crowd"><a href="#Suitable-for-the-crowd" class="headerlink" title="Suitable for the crowd:"></a>Suitable for the crowd:</h2><p>Generally speaking, the <code>Cookbook</code> series are analogous to dictionaries. There is no need to go through the top and bottom of what is used and what to look up. </p>
<p>But after brushing it again, the benefits of building the relevant <strong>knowledge system</strong> are obvious </p>
<p>Not suitable: </p>
<ol>
<li>noob </li>
<li>Senior iOS Developer </li>
</ol>
<p>Novices can read these two books first:<br><a href="http://book.douban.com/subject/6959487/">Head First iPhone and iPad Development</a><br><a href="http://book.douban.com/subject/24538384/">The Big Nerd Ranch Guide</a> </p>
<h2 id="method"><a href="#method" class="headerlink" title="method:"></a>method:</h2><ol>
<li><p>First of all, be prepared for collapse →_→<br>Think about how many children’s shoes back to the abandon’s dictionary and kneel down </p>
</li>
<li><p>Select the chapters that are <strong>key</strong>, that is, the chapters related to your current work <strong>look at it without missing a word</strong><br>Since the stuff you see can be used immediately, the effect is better<br>The non-code parts are the principles and tips, so take a closer look </p>
</li>
<li><p>When it reaches about 50%, the focus <strong>turns to the code</strong><br>At this time, I’m basically familiar with the author’s narrative method. Scan the title and you basically know what to do. Combine the code and guess with a guess. Just scan the text. </p>
</li>
<li><p>Know how to give up<br>Memorizing the dictionary does not allow you to speak fluent English, so there is no need to finish this book.<br>For example, when I watched it, I thought iCloud and the like were too troublesome. If you simply synchronize data, it’s better to set up a backend directly, so just skip it.<br>It’s just in line with the 28th rule. </p>
</li>
<li><p>Pairing<br>The effect of working alone is not as high as group learning<br>But what you can see is different. For example, my friends are watching the Python Cookbook. It’s enough to achieve mutual promotion.<br>PS: When I watched more than half of it, I realized that he was watching the translated version… </p>
</li>
<li><p>English<br>iOS update is too fast, the latest ones are all in English, 7 has not been translated yet, the official version of 8 will be released…<br>So, learn English well, Sao Nian </p>
</li>
</ol>
]]></content>
      <tags>
        <tag>Books</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Cathedral and Bazaar</title>
    <url>/en/the-cathedral-and-the-bazaar/</url>
    <content><![CDATA[<p>I have always been weird<br>Programmers in the eyes of the general public are generally dumb, acting logically, immersed in their own world all day long, taciturn, high IQ and low EQ. There is endless debate about which programming language or framework is better than another<br>Oh, and the most important one: Muyoumei paper </p>
<p>This also confuses me, and for a while I even disagree with this label from the bottom of my heart </p>
<p>Because looking at some big cows abroad, in addition to their superb code, they also write blogs, publish books, marketing, start companies, venture capital, diving, climbing, traveling…<br>And it’s not just a taste, it can only be described as guarding the sky<br>Is this… a programmer? </p>
<p>After reading this book, I realized that the name of this race is: Hacker </p>
<a id="more"></a>

<p>When I watched “The Hacker and the Painter” last time, it was very cold<br>I still remember that when I first learned the C language, I told my brother that I didn’t want to be a hacker or engage in security-related stuff.<br>After all, the school’s library at the time was filled with stuff like “hacker offense and defense practice” and “hacker disassembly”. </p>
<p>After many years, I now know that what I don’t want to be is a cracker </p>
<p>For hackers, Eric gives some suggestions in the article: </p>
<blockquote>
<p>If you want to be a hacker, please read on. If you want to be a hacker, read the alt.2600 newsgroup (news:alt.2600). If you find that you are not as smart as you think, be prepared to go to jail for 5 to 10 times. This is what I want to say to hackers. </p>
</blockquote>
<p>Regarding this, I have doubts. I have time in the future to see what version they were before 2000. </p>
<blockquote>
<p>Java is also a good language for learning programming. It is more difficult than Python, but it can generate code faster than Python, I think it can be used as an excellent second language </p>
</blockquote>
<p>If you haven’t read Python, just look at Ruby. This is a language that makes you cool. Also, due to the publication time of this book, iOS &amp; Android has not yet appeared </p>
<blockquote>
<p>It is best to learn all five languages (Python, Java, C/C++, Perl, and LISP). They are not just the most important hacker languages, but also represent completely different programming methods, each of which will benefit you a lot. </p>
</blockquote>
<p>Reinvent the wheel </p>
<blockquote>
<p>Creative minds are an extremely precious limited resource. They should not be wasted on reinventing the wheel, especially when there are so many fascinating new questions waiting there. </p>
</blockquote>
<p>GUI </p>
<blockquote>
<p>The problem lies mainly in ergonomic design and interface psychology. Hackers have always been weak in these areas. Hackers do a good job designing interfaces for other hackers, but they are often not good at modeling the thought process of the other 95% </p>
</blockquote>
<p>Below is the book excerpt, the appendix is very interesting </p>
<hr>
<h2 id="2-Cathedral-and-Bazaar"><a href="#2-Cathedral-and-Bazaar" class="headerlink" title="2. Cathedral and Bazaar"></a>2. Cathedral and Bazaar</h2><ol>
<li>Good software works often come from the personal needs of the developers </li>
<li>A good programmer knows what to write, a good programmer knows what to rewrite (and reuse) </li>
<li>“Plan to throw one away. Sooner or later you will do it.” (Fred Brooks, Chapter 11 of The Myth of Man-Month) </li>
<li>If you have the right attitude, interesting things will naturally find you. </li>
<li>When you are no longer interested in a program, your last responsibility is to give it to a competent successor </li>
<li>Treat your users as development collaborators. This is the most worry-free way if you want to quickly improve code quality and effectively troubleshoot errors. </li>
<li>Publish early, publish often, and listen to user feedback. </li>
<li>If there are enough beta testers and co-developers, almost all problems will appear quickly, and then naturally someone will solve it. </li>
</ol>
<ul>
<li>Linus’s law tells the most critical difference between the cathedral mode and the market mode: in the eyes of the cathedral builders, bugs are tricky, hard to find, and hidden in the depths. It takes several months of dedication. With careful inspection, you can be confident that all errors have been eliminated. And the longer the release interval, if the long-awaited release version is not perfect, people’s disappointment becomes more inevitable. </li>
<li>For the market model, it is completely different. With thousands of co-developers eagerly studying each new release, you can assume that bugs are easy to find, or at least quickly become easy to find. So you will release frequently to get more corrections, and the side effect is benign: even if there are some minor issues in the release, you will not lose too much. </li>
</ul>
<ol start="9">
<li>Smart data structures with stupid code are far better than the other way around. </li>
<li>If you treat beta testers as your most precious resource, they will become your most precious resource </li>
<li>Next to having a good idea is to identify good ideas from users, sometimes the latter is better </li>
<li>Usually, the most breakthrough and innovative solutions come from the realization that your basic idea of the problem is wrong. </li>
<li>“Perfection in design is not that nothing can be added, but that nothing can be subtracted.” </li>
<li>Any tool should have expected functions, but a great tool can bring you unexpected functions. </li>
<li>When writing gateway software, try not to interfere with the data flow as much as possible, and never throw away the information, unless the recipient forces you to do so </li>
<li>When your language is far from Turing-complete, syntactic sugar will benefit you a lot. </li>
<li>The security of the system depends only on the secrets it possesses. Beware of false secrets. </li>
<li>To solve an interesting problem, first find a problem that interests you. </li>
<li>If the development coordinator has a good communication medium like the Internet at least, and knows how to lead without coercion, then multi-person cooperation must be better than individual combat </li>
</ol>
<ul>
<li>If you feel fear and disgust during work (even if you express it in the form of self-deprecating-such as hanging a Dilbert doll), you should realize that something went wrong with the process. Happiness, humor and playfulness are real assets </li>
<li>“Play” is the most economically effective work mode in creative activities. </li>
</ul>
<h2 id="3-Cultivate-the-mental-layer"><a href="#3-Cultivate-the-mental-layer" class="headerlink" title="3. Cultivate the mental layer"></a>3. Cultivate the mental layer</h2><ul>
<li>In gift culture, social status does not depend on what you control, but what you give </li>
</ul>
<ol>
<li>If it doesn’t work as I expected, it’s not good-no matter how smart and original it is. </li>
<li>Extensive work at the mental level is better than repetitive work in a functional domain (for existing works). </li>
<li>Works that can enter the main release are better than those that cannot. The works included in all major releases are the most respectable. </li>
<li>“Use” is the most true compliment, and the category killer is better than its competitors. </li>
<li>Compared with those who only pick interesting and simple tasks, those who have long been committed to hard and tedious tasks (such as debugging and writing documentation) are more admirable. </li>
<li>Important function extensions are better than low-level repairs. </li>
</ol>
<h2 id="4-Magic-Pot"><a href="#4-Magic-Pot" class="headerlink" title="4. Magic Pot"></a>4. Magic Pot</h2><ol>
<li>Reliability/stability/scalability is very important. </li>
<li>Except for independent peer review, there is no other convenient and easy way to verify the correctness of the design and implementation. </li>
<li>The software is very critical to the customer’s business. </li>
<li>The software creates or operates a public computing or communication infrastructure. </li>
<li>Key methods (or methods that can achieve equivalent functions) are public knowledge </li>
</ol>
<h2 id="5-Hackers’-counterattack"><a href="#5-Hackers’-counterattack" class="headerlink" title="5. Hackers’ counterattack"></a>5. Hackers’ counterattack</h2><ul>
<li>The lack of theory and language is bad for us in two ways: one is that we cannot systematically think about how to improve our methods, and the other is that it is difficult for us to explain and sell our methods to others. </li>
</ul>
<h2 id="Appendix-A-How-to-become-a-hacker"><a href="#Appendix-A-How-to-become-a-hacker" class="headerlink" title="Appendix A: How to become a hacker"></a>Appendix A: How to become a hacker</h2><h3 id="Hackers-do-construction-hackers-do-damage"><a href="#Hackers-do-construction-hackers-do-damage" class="headerlink" title="Hackers do construction, hackers do damage"></a>Hackers do construction, hackers do damage</h3><h3 id="Hacker-attitude"><a href="#Hacker-attitude" class="headerlink" title="Hacker attitude"></a>Hacker attitude</h3><ol>
<li>The world is full of fascinating problems waiting for people to solve. </li>
<li>Don’t solve a problem twice. </li>
<li>Boredom and boredom are harmful </li>
<li>Freedom is good </li>
<li>Attitude cannot replace ability. </li>
</ol>
<h3 id="Basic-skills-of-hackers"><a href="#Basic-skills-of-hackers" class="headerlink" title="Basic skills of hackers"></a>Basic skills of hackers</h3><ol>
<li>Learn to program </li>
</ol>
<ul>
<li>If you want to acquire a mindset that transforms knowledge into skills, you can only practice and follow the master. The way is to read code and write code </li>
</ul>
<ol start="2">
<li>Find an open source UNIX, learn to use and run it. </li>
<li>Learn how to use WWW and write HTML. </li>
</ol>
<h3 id="Status-in-hacker-culture"><a href="#Status-in-hacker-culture" class="headerlink" title="Status in hacker culture"></a>Status in hacker culture</h3><ol>
<li>Write open source software. </li>
<li>Assist in testing and debugging open source software </li>
<li>Publish useful information. </li>
<li>Help do some basic work. </li>
<li>Serve the hacker culture itself. </li>
</ol>
<h3 id="Style-problem"><a href="#Style-problem" class="headerlink" title="Style problem"></a>Style problem</h3><ul>
<li><p>Learn to write well in your native language. Although there is an old belief that programmers can’t write well, many hackers (including the best hackers I know) write good articles, and the number is surprisingly large. </p>
</li>
<li><p>Read science fiction and participate in science fiction rally (this is a good way to get to know hackers and potential hackers). </p>
</li>
<li><p>Study meditation and/or learn martial arts. (Mental training seems to be similar in many important ways.) </p>
</li>
<li><p>Cultivate the appreciation of music. Learn to appreciate some unique types of music. Learn to play an instrument well, or learn how to sing. </p>
</li>
<li><p>Cultivate your appreciation of puns and witty words. </p>
<p>But these things are related to the combination of left and right brain skills, which may be the key to the problem (hackers not only need to have strong logical reasoning skills, but also be able to quickly escape from the specific logic of the problem) </p>
</li>
</ul>
<h3 id="Don’t"><a href="#Don’t" class="headerlink" title="Don’t"></a>Don’t</h3><ul>
<li>Don’t use stupid, exaggerated usernames or nicknames. </li>
<li>Don’t get involved in Usenet (or anywhere else) online scolding wars. </li>
<li>Don’t call yourself “cyberpunk”, and don’t waste time interacting with people who call themselves cyberpunk. </li>
<li>Don’t let your posts or emails be full of incorrect spelling and bad grammar. </li>
</ul>
<p>At last:<br><strong>“You are a hacker only if other hackers think you are a hacker”</strong><br>The values expressed are similar to the ideals declared by the elite groups of the medieval European chivalry era (usually unachievable). These social elites have sufficient financial resources to surpass the scarce economy in which they are located. As one might expect, an aspiring knight fights for justice. He seeks honor instead of money. He stands on the side of the weak and oppressed, constantly seeking opportunities to challenge the limits of his heroic talents. It is precisely because of this that he will consider himself (and considered by others) to be a leader among people-provided that his abilities and conduct have been recognized and officially recognized by other knights. In the chivalry eulogized by Arthurian tales and chansons de geste, we see idealism, constant challenge to oneself and the pursuit of status, which are similar to the elements that motivate hackers today. </p>
]]></content>
      <tags>
        <tag>Tech</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>What technology wants</title>
    <url>/en/what-technology-wants/</url>
    <content><![CDATA[<p>The last sentence<br>This reminds me of Zhang Xiaolong knowing <a href="http://www.zhihu.com/question/20198823">If this world is just a piece of code, what bugs have you found so far? </a> Quite humorous answer to this question </p>
<blockquote>
<p>It is unrealistic to require a variable in the code to check the code for bugs. </p>
</blockquote>
<a id="more"></a>

<h2 id="Book-excerpt"><a href="#Book-excerpt" class="headerlink" title="Book excerpt:"></a>Book excerpt:</h2><p>The meaning of freedom is not to do it rashly, but to “freedom of choice” </p>
<p>Both life and technology seem to be based on non-material information flow. </p>
<p>Autonomy: self-repair, self-protection, self-maintenance (access to energy, discharge of waste), self-control of goals, self-improvement </p>
<p>We should treat technical elements like nature. We cannot ask technology to obey us, just as we cannot ask life to obey us. Sometimes we should surrender to its guidance and be happy to feel its colorfulness; sometimes we should strive to transform its true colors to meet our own needs. We don’t have to implement all the requirements of the technical elements, but we can learn to use this power instead of against it </p>
<p>Language is a technique that allows thinking to question itself; it is a magic mirror that tells the brain what it is thinking; it is a joystick that transforms thoughts into tools. Language has mastered the elusive goalless movement of self-awareness and self-control, so that it can control thinking and make it the source of new ideas. Without the rational structure of language, we cannot know our spiritual activities, and naturally we cannot think about our behavior. </p>
<p>Money brings more choices, not just more material (although more material is also a result). We will not be happy because of more equipment and experience. What makes us really happy is to be able to control time and work, have the opportunity to enjoy real leisure, escape the uncertainty caused by war, poverty and corruption, and seize the opportunity to pursue individuality Freedom-all this happens with the growth of wealth. </p>
<p>Human nature is malleable. We change our values, expectations and self-perception through thinking. We have been changing our nature since the time of the apes, and once that happens, we will continue to transform ourselves deeply </p>
<p>Technology is an extension of life, and the common needs of the two are: </p>
<ul>
<li>Improve efficiency </li>
<li>Increase chance </li>
<li>Improve spontaneity </li>
<li>Increase complexity and diversity </li>
<li>Increase specialization </li>
<li>Increase universality </li>
<li>Increase freedom </li>
<li>Promote symbiosis </li>
<li>Increase beauty </li>
<li>Improve perception </li>
<li>Extended structure </li>
<li>Improve evolvability </li>
</ul>
<p>free<br>Like everything else, our free will is not unique. The choice under the subconscious free will is in the primitive behavior pattern of animals. Every animal has basic needs, and they will make choices to meet these needs. But free will even appeared before life. Some theoretical physicists-including Freeman Dyson-believe that free will emerges in atomic particles, so free choice was born in the heat of the Big Bang and has continued to expand since then. </p>
<p>Technological elements are the way the universe creates self-awareness. Carl Sagan gave an impressive explanation of this: “We are stardust thinking about the stars. </p>
]]></content>
      <tags>
        <tag>Tech</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>Imperial Capital</title>
    <url>/en/BeiJing/</url>
    <content><![CDATA[<p>Since my reading is almost half a thousand, I have always wanted to introduce the stuff about fast reading in a few paragraphs. </p>
<p>As a result, as soon as I drag this series, there is nothing left…<br>It is estimated that the level is still limited and can not be written… </p>
<p>Let’s do something else first </p>
<a id="more"></a>

<hr>
<p>Nasim Nicholas Taleb used the entire book “Random Wandering Fools” to explain “uncertainty”, and then used the entire book “Black Swan” to describe how to deal with the unpredictable future<br>The little mage hastily read through and thinks he has the essence </p>
<p>Between Shen Zhen and Imperial Capital, after careful consideration (tou nao yi re), I decided to choose the <code>Hard</code> mode to see if the hidden skills can be turned on get√ </p>
<h2 id="surroundings"><a href="#surroundings" class="headerlink" title="surroundings"></a>surroundings</h2><p>Most of the children’s shoes in the south have always had the impression of the imperial capital: </p>
<p>When it rains, it’s Jiangzi again: </p>
<p>After a week of fieldwork, the little mage came to a conclusion </p>
<p>“The above picture is exaggerated, but it’s really true!!!” </p>
<p>Don’t you see the air is too dry, and the girls on the road have bad skin<br>Don’t you see that the roadside cars and the ground are covered with a layer of dust because of the dust </p>
<p>Since the little mage found a girl walking barefoot on the asphalt road when it rained in heaven, he stopped wearing socks.<br>As a result, the Imperial Capital took two steps and got a pair of sandpaper… </p>
<h2 id="accent"><a href="#accent" class="headerlink" title="accent"></a>accent</h2><p>Geographically speaking, the young master was born north of the Huaihe River, and has always thought that he is a northerner, but he agrees with the southern way of life.<br>When I first arrived in heaven, I was told by the children that the sound of “er” was very heavy, and they were said to have caused them crooked </p>
<p>After I came to the imperial capital, I learned that the little witch has seen the big witch<br>Where is this official description: </p>
<blockquote>
<p><em>Mandarin</em> uses <strong>Beijing Voice</strong> as the standard tone, and northern dialect as the basic dialect… </p>
</blockquote>
<p>The sound of “er” here is so heavy that it sounds funny, and the little mage can’t help but laugh when he hears people talking on the way.<br>But in just two days, the little mage found out that he was taken in a ditch… </p>
<p>But there are really many crooked nuts on the road, and many of them don’t speak English (Little Master still knows a little English, it should not be an accent problem) </p>
<h2 id="intermediary"><a href="#intermediary" class="headerlink" title="intermediary"></a>intermediary</h2><p>I think that when I was still in heaven, renting a house only had to stop at the gate of the community, and immediately surrounded a group of enthusiastic aunts, and there was no intermediary fee.<br>When the imperial capital arrived for the first time, the little mage was not prepared enough, and still thought it was similar to heaven, but when he arrived at the gate of the community, he found that the little blackboard (except for a layer of dust) was clean. Asked the security at the door about the renting situation, the security shook his head repeatedly, and replied “I don’t know” </p>
<p>There used to be more than ten square meters at 0.8k in heaven, 1.3k is enough to face south + large balcony<br>And no matter how cheap the room paper is, even the basement has its own bathroom, so you can run naked after taking a shower.<br>The little mage Jiangzi still complained (with the meager salary) </p>
<p>The price of the imperial capital is x2.5, and the bathroom is shared<br>There are also houses within the third ring road, some of which are older than the time the little mage was alive.<br>The walls are yellowed with spider webs in the corners, and all kinds of mess inside the house<br>And most of the five-bedroom rooms, in case one house is crowded with young couples, there are 8 excluding the young masters, and during the WC peak in the morning… the young masters thought of using Queue to achieve FIFO </p>
<p>When I went back to the hotel to search for reliable intermediaries at night, I found that there were no corpses in the Imperial Capital. No matter how big or small, as long as they were intermediaries, they had been hacked out. </p>
<p>It’s a pity that the little mage has just arrived, and he is not familiar with the place of his life. He knows that “I am a fish and a man is a knife”, but he has no alternative. </p>
<h2 id="advice"><a href="#advice" class="headerlink" title="advice"></a>advice</h2><p>The children from the south, the muds are filled with too much chicken soup, such as: </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">趁着年轻，多去看看外面的世界</span><br><span class="line">年轻就应该有梦想，不管最后怎么样，起码尝试过，不后悔</span><br><span class="line">旅行并不是旅游，要在那里 挤公交挤地铁，上下班...</span><br></pre></td></tr></table></figure>

<p>The little mage gave the muds a piece of advice with rope life: </p>
<p>Thousands of watches come here because:<br>*<em>true! of! ! meeting! ! ! dead! ! ! ! of! ! ! ! ! *</em> </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Willpower</title>
    <url>/en/Willpower/</url>
    <content><![CDATA[<p>As modern magic spells become more and more complex, a successful project often needs to be calculated in months. Magisters who know this well are honored as the myth of man-month </p>
<p>In this environment, spiritual power is very precious and important to the wizards </p>
<p>Speaking of mental power, it’s actually pronounced as <code>WillPower</code> in the kingdom of the elves, but after being introduced into the empire, it was forced to translate as self-control or willpower by unknowing Muggles. </p>
<p>Sounds very mysterious + tall, in fact, you only need to grasp two characteristics </p>
<ol>
<li>battery </li>
</ol>
<ul>
<li>Mages use their mental power to control magical elements </li>
<li>Morning&gt; evening </li>
<li>Available sleep/meditation call back </li>
<li>Different magic consumes different power </li>
</ul>
<ol start="2">
<li>Muscle </li>
</ol>
<ul>
<li>Variable total reserves </li>
<li>Can be expanded with specific exercises </li>
</ul>
<a id="more"></a>

<p>Mr. Brooks bowed his head and prayed silently at the dinner party where he was awarded the Business Person of the Year; the prayer came from Niebuhr’s 1934, one of the most famous prayers of the 20th century: </p>
<blockquote>
<p>My God grant me the serenity to accept the things I cannot change, The courage to change the things I can, And the wisdom to know the difference. </p>
</blockquote>
<p>(PS: Do children’s shoes sound familiar~) </p>
<p>Among the features, <strong>specific exercise methods</strong> and <strong>sleep</strong> are what we can change </p>
<p>Chip Heath/Dan Heath co-authored [Transient: How to Make Your World Better](<a href="http://book.douban.com/subject_search?search_text=%E7%9E%AC%E5%">http://book.douban.com/subject_search?search_text=%E7%9E%AC%E5%</a> Mentioned in 8F%98&amp;cat=1001) </p>
<blockquote>
<p>The vast majority of our daily actions are spontaneous rather than supervised. And this is a good thing, because it is difficult to supervise, it will gradually consume self-control ability. </p>
</blockquote>
<p>Then said </p>
<blockquote>
<p>Self-control ability is an exhaustible resource, which is a crucial realization. Because when we talk about “self-control”, we are not talking about the superficial meaning of the word, but it means that willpower needs to fight against vices (smoking, eating cookies, alcohol). </p>
</blockquote>
<p>In view of this, the book gives a simple and effective exercise method:<br><strong>Internalized Habits</strong>-Set up an <strong>Action Trigger</strong>, its role is to create an “instant habit” </p>
<p>Because in such a cycle, there is no conscious and deliberate thinking, and this can also avoid the loss of people’s energy for self-control </p>
<p>The result is like a classmate driving a car. At first he was in a hurry, but later (thought) he would not drive into the ditch when he called (→_→) </p>
<p>And the aspect of sleep does not just refer to the sleep of more than six hours at night, and naps of no more than half an hour during the day can also be included.<br>The most important one is: sleep when you are sleepy<br>After all, under the condition of insufficient mental power, forcibly controlling magic elements will have the risk of bursting magic weapons </p>
<p>If you still don’t give up, please call the following formula:<br>Achievement = efficiency X time </p>
<p>PS: In case the efficiency is negative… </p>
<hr>
<p>With correct ideological guidance, and after a period of devil training, the little mage is delighted to find that his mental power has improved significantly<br>The most obvious is that when you are in good condition, you can control 15+ Pomodoro every day, and usually around 12 </p>
<p>At the same time, the little mage also discovered that his mental power reserves cannot be increased indefinitely<br>And if it is a book with a large amount of information such as “A Brief History of Information” and “Out of Control”, the power consumption will be very fast </p>
<p>So I can only devote my limited energy to more important things </p>
<p>This is also where Katsuma Kazuyo <a href="http://book.douban.com/subject/3729173/">Time Investment Law</a> <strong>Time Investment Distribution Map</strong> (Four Quadrant Rule + Time Record) appeared </p>
<p>But the most paradoxical thing is that after you control what you want to do, other things are messed up. </p>
<p>For example, <a href="http://book.douban.com/subject/10786473/">self-control</a> mentioned: </p>
<blockquote>
<p>More willing to “try multiple mating strategies” after dieting </p>
</blockquote>
<p>Is this also one of the reasons why some stars cheat? (→_→) </p>
<p>But our little mage doesn’t even have girlfriends, so it’s not obvious<br>The side effect is that after more than a dozen Pomodoros, if you continue to read the book, the stack will be full and cannot be pushed.<br>In addition, the reaction became sluggish, and after the library closed, he looked demented on the way home. </p>
<hr>
<p>PS: Willpower is a bit like immunity, not the stronger the better. Excessive willpower = chronic stress<br>PS2: People who integrate themselves have the right willpower </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>A simple VS. between Sinatra and Martini</title>
    <url>/en/A-simple-VS-between-Sinatra-and-Martini/</url>
    <content><![CDATA[<h1 id="Sinatra-VS-Martini"><a href="#Sinatra-VS-Martini" class="headerlink" title="Sinatra VS. Martini"></a>Sinatra VS. Martini</h1><p>There are already a lot of comparative data on the Internet<br>But it’s not as real </p>
<p>So on the <code>VPS</code>, I used <code>Martini</code> and <code>Martini</code> to set up two <code>Hello World</code><br>Selected <code>siege</code> on <code>Linux</code> as the test tool </p>
<a id="more"></a>

<h2 id="performance"><a href="#performance" class="headerlink" title="performance"></a>performance</h2><h3 id="Martini"><a href="#Martini" class="headerlink" title="Martini"></a>Martini</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">siege -q -c 1000 -r 30 -f sinatra.url</span><br></pre></td></tr></table></figure>

<!--more-->

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Transactions: 29332 hits</span><br><span class="line">Availability: 97.77 %</span><br><span class="line">Elapsed time: 107.10 secs</span><br><span class="line">Data transferred: 0.38 MB</span><br><span class="line">Response time: 1.73 secs</span><br><span class="line">Transaction rate: 273.87 trans&#x2F;sec</span><br><span class="line">Throughput: 0.00 MB&#x2F;sec</span><br><span class="line">Concurrency: 473.90</span><br><span class="line">Successful transactions: 29332</span><br><span class="line">Failed transactions: 668</span><br><span class="line">Longest transaction: 25.45</span><br><span class="line">Shortest transaction: 0.00</span><br></pre></td></tr></table></figure>

<h3 id="Martini-1"><a href="#Martini-1" class="headerlink" title="Martini"></a>Martini</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">siege -q -c 1000 -r 30 -f martini.url</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Transactions: 29988 hits</span><br><span class="line">Availability: 99.96 %</span><br><span class="line">Elapsed time: 58.56 secs</span><br><span class="line">Data transferred: 0.34 MB</span><br><span class="line">Response time: 0.46 secs</span><br><span class="line">Transaction rate: 512.09 trans&#x2F;sec</span><br><span class="line">Throughput: 0.01 MB&#x2F;sec</span><br><span class="line">Concurrency: 235.70</span><br><span class="line">Successful transactions: 29988</span><br><span class="line">Failed transactions: 12</span><br><span class="line">Longest transaction: 31.10</span><br><span class="line">Shortest transaction: 0.00</span><br></pre></td></tr></table></figure>

<h2 id="Amount-of-code"><a href="#Amount-of-code" class="headerlink" title="Amount of code"></a>Amount of code</h2><p>Of course development is impossible to focus solely on server performance<br>“Humanware” has long emphasized that compared to machines, the speed of the programmer should be given priority. </p>
<p>Since it is just printing <em>hello world</em>, it is impossible to make a further detailed comparison of the amount of code (<strong>Welcome to leave a message</strong>) </p>
<p>Most of the current libraries in <code>Go</code> are <code>Get</code> from <code>Github</code>. Is the code quality guaranteed?<br>On the other hand, <code>Ruby</code> is relatively mature (it seems like the result of comparing <code>Python</code> to <code>Ruby</code> a few years ago…) </p>
<h2 id="in-conclusion"><a href="#in-conclusion" class="headerlink" title="in conclusion"></a>in conclusion</h2><p>So if it is determined that the number of daily visits is below tens of millions of PV, there is no problem with <code>Ruby</code> </p>
<p>In addition, it is mentioned in the book <a href="http://book.douban.com/subject/6756090/">“Matsumoto Yukihiro’s Program World”</a> that Ruby’s design philosophy is: development efficiency is greater than operation efficiency, becoming a “humanity” The language of </p>
<p>The most important thing is that <code>Ruby</code> is really cool to write. There is wood… </p>
<p>Finally, a weak question, are you happy? </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>The primary principle of Delegate</title>
    <url>/en/The-primary-principle-of-Delegate/</url>
    <content><![CDATA[<h1 id="Analysis-of-Delegate-Principle"><a href="#Analysis-of-Delegate-Principle" class="headerlink" title="Analysis of Delegate Principle"></a>Analysis of Delegate Principle</h1><p>When a method of B runs somewhere, it needs to tell A of its own value and do some processing </p>
<p>How to achieve it? </p>
<p>First, B needs to know whom to tell, and then call A.aFunc() </p>
<p>I know I don’t want to look at the code if I want to know the principle, I try to simplify it </p>
<a id="more"></a>

<p>Type A, B </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">A</span>.swift</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span> &#123;</span><br><span class="line">		<span class="built_in">println</span>(b.value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">B</span>.swift</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> value = <span class="number">0</span></span><br><span class="line">	<span class="function"><span class="keyword">func</span> <span class="title">bFunc</span> <span class="params">()</span></span> &#123;</span><br><span class="line">        value = <span class="number">213</span> <span class="comment">// value 有变化，想通知 A 执行 aFunc()</span></span><br><span class="line">		a.aFunc(b) <span class="comment">// 错误</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<!--more-->

<p>The above is not working, why?<br>Because there is no a in b, if A is directly passed in, the code of B must be modified, and the package will be lost </p>
<p>Let’s see how <strong>Delegate</strong> implements this mechanism </p>
<h2 id="Delegate"><a href="#Delegate" class="headerlink" title="Delegate"></a>Delegate</h2><p>Since B wants to send a message out, start with B first: </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">A</span>.swift</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span> &#123;</span><br><span class="line">		<span class="built_in">println</span>(b.value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b.swift</span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">BDelegate</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span>  <span class="comment">// 1. 把 A 的 aFunc 声明成 BDelegate 的一个方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> delegate:<span class="type">BDelegate?</span>  <span class="comment">// 2. 声明一个 BDelegate 类型的 delegate 变量</span></span><br><span class="line">    <span class="keyword">var</span> value = <span class="number">0</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">bFunc</span> <span class="params">()</span></span> &#123;</span><br><span class="line">        value = <span class="number">213</span></span><br><span class="line">        delegate?.aFunc(<span class="keyword">self</span>) <span class="comment">// 3. 把自己 b，作为参数，调用 aFunc()</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>After doing 1, 2, and 3, it still doesn’t work. Why?<br>Because A does not know that B has commissioned, the two are not related </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">a.swift</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>: <span class="title">BDelegate</span> </span>&#123; <span class="comment">// 1. BDelegate</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span> &#123;</span><br><span class="line">        b.delegate = <span class="keyword">self</span> <span class="comment">// 2. 把 b 的 delegate 变量设置成 self，也就是 a</span></span><br><span class="line">        <span class="built_in">println</span>(b.value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b.swift</span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">BDelegate</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">aFunc</span><span class="params">(b:B)</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> delegate:<span class="type">BDelegate?</span></span><br><span class="line">    <span class="keyword">var</span> value = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">bFunc</span> <span class="params">()</span></span> &#123;</span><br><span class="line">        value = <span class="number">213</span></span><br><span class="line">        delegate?.aFunc(<span class="keyword">self</span>) <span class="comment">// 3. 这下看懂了吧？delegate?.aFunc(self) 等价于  a.aFunc(b)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main.swift</span><br><span class="line"><span class="keyword">let</span> b = <span class="type">B</span>()</span><br><span class="line"><span class="keyword">let</span> a = <span class="type">A</span>()</span><br><span class="line">a.aFunc(b)</span><br><span class="line">b.bFunc()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个可以在 Playground 里看结果了</span></span><br></pre></td></tr></table></figure>

<p>You’re done </p>
<p>Recall the common code, such as: </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">mScrollView.delegate = <span class="keyword">self</span></span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MYScrollView</span> : <span class="title">UIScrollView</span>, <span class="title">UIScrollViewDelegate</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">scrollViewDidEndDecelerating</span><span class="params">(scrollView: UIScrollView)</span></span> &#123;</span><br></pre></td></tr></table></figure>

<p>Is there a sense of sudden enlightenment? </p>
<p>Let’s talk about <code>SEL</code> and <code>Block</code> in two days </p>
<hr>
<p>It’s better to make it clear. If there is something unclear, please leave a message to discuss it<del>~</del> </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Pull to Refresh UIViewController in iOS</title>
    <url>/en/Pull-to-Refresh-UIViewController-in-iOS/</url>
    <content><![CDATA[<p>If you force to add a <code>UIRefreshControl</code> to a <code>UIViewController</code>, you will get an error. </p>
<blockquote>
<p>UIRefreshControl can only be managed by one UITableViewController. </p>
</blockquote>
<p>So, here is a trick </p>
<a id="more"></a>

<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><ol>
<li>Start a table view, in your <code>UIViewController</code> </li>
</ol>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> refreshControl = <span class="type">UIRefreshControl</span>()</span><br><span class="line"><span class="keyword">var</span> tableView = <span class="type">UITableView</span>()</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>add <code>refreshControl</code> to <code>tableView</code>, not <code>view</code> </li>
</ol>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">tableView.frame = view.frame</span><br><span class="line"></span><br><span class="line">refreshControl.addTarget(<span class="keyword">self</span>, action: <span class="type">Selector</span>(<span class="string">&quot;refreshView:&quot;</span>), forControlEvents: .<span class="type">ValueChanged</span>)</span><br><span class="line">tableView.addSubview(refreshControl)  <span class="comment">// here it is</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">self</span>.view.addSubview(tableView)</span><br></pre></td></tr></table></figure>

<p>3 <code>refreshView</code> function </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">refreshView</span><span class="params">(refreshControl: UIRefreshControl)</span></span> &#123;</span><br><span class="line">    refreshControl.attributedTitle = <span class="type">NSAttributedString</span>(string: <span class="string">&quot;Refresh&quot;</span>)</span><br><span class="line">    refreshControl.attributedTitle = <span class="type">NSAttributedString</span>(string:<span class="string">&quot;Last updated on&quot;</span> + <span class="type">NSDate</span>().description)</span><br><span class="line"></span><br><span class="line">    refreshControl.endRefreshing()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="If-you-like-to-use-Storyboard-like-me"><a href="#If-you-like-to-use-Storyboard-like-me" class="headerlink" title="If you like to use Storyboard like me"></a>If you like to use <code>Storyboard</code> like me</h2><ol>
<li><p>Storyboard -&gt; UITableViewController -&gt; enable Refreshing </p>
</li>
<li><p>Then you can <code>Ctrl</code> drag just like <code>UIButton</code> </p>
</li>
</ol>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>How to manipulate Filco keyboard layout to Mac OSX</title>
    <url>/en/How-to-manipulate-Filco-keyboard-layout-to-Mac-OSX/</url>
    <content><![CDATA[<p>I entered the red axis of <code>Filco</code> before, and the game code is correct. </p>
<p>Although before using <code>System Preferences -&gt; Keyboard -&gt; Modifier Keys -&gt; Select keyboard -&gt; Opt-Cmd Cmd-Opt</code>, you can adjust <code>Cmd-Opt</code> to Apple’s key position<br>But every time you play StarCraft, you have to change it again. From the above process, it can be seen that it is very cumbersome. </p>
<p>As for <code>F1-F12</code>, there is no way, and the lock screen is also a problem </p>
<a id="more"></a>

<p>Huangtian did not take his pains, and finally found this, and it’s free:<br><a href="https://pqrs.org/osx/karabiner/index.html.en">Karabiner</a> </p>
<p>After setting <code>Opt-Cmd</code>, then <code>F1-F12</code> are changed to Apple function keys<br>By the way, the second to last useless key in the lower right corner is changed to FN<br>Then I changed the position of <code>Ctrl_R</code> and <code>FN</code><br>The <code>Pa/Br</code> in the upper right corner is changed to <code>Power</code> </p>
<p>Then in <code>MenuBar -&gt; SettingList -&gt; +</code> a <code>Profile</code> without key modification, such as <code>Game</code> </p>
<p>If you play a game in the future, click the icon in the status bar and switch to <code>Game</code> with one click. </p>
]]></content>
      <tags>
        <tag>Shopping</tag>
      </tags>
  </entry>
  <entry>
    <title>Why we will gradually become conservative</title>
    <url>/en/why-are-we-tend-to-be-conservation/</url>
    <content><![CDATA[<p>At a certain stage, I always feel that my parents are old and stubborn, disgusting and unwilling to touch new things, because they are young and ignorant, I even laughed at them </p>
<p>Today, when I worked for IE8 all morning, I finally changed from Win 8.1 to Win7 (as for why, I mean two words: online banking), and I was shocked when I thought that I would never use the new system again as a last resort. </p>
<a id="more"></a>

<p>Recently, Microsoft has been forced by various browsers to start brushing the version number<br>The customer service of CITIC Bank said that IE8 is best for USB USB. I saw that Win8.1 comes with IE, and it has reached 11… </p>
<p>But IE and the system are bound, and in desperation, I can only change the system. Because it is installed in the virtual machine, all kinds of tossings, although the final is Happy Ending, but the time of the morning cannot come back </p>
<p>Recall that when the Yosemite 10.10 Dev version came out, as a developer, I didn’t have a cheap hand, so I just upgraded it until the official version was released. </p>
<p>The reason is that when I was in university, the preview version of Win7 just came out, and I couldn’t wait to upgrade it. It turned out that the broadband connection disappeared every time I restarted. </p>
<p>I also tried [Dvorak keyboard](<a href="http://zh.wikipedia.org/zh/%E5%BE%B7%E6%B2%83%E5%A4%8F%E5%85%8B%E9%8D%">http://zh.wikipedia.org/zh/%E5%BE%B7%E6%B2%83%E5%A4%8F%E5%85%8B%E9%8D%</a> B5%E7%9B%A4) It is not a problem to be familiar with the key position after a month<br>And I feel that the speed has indeed improved. Although there may be some psychological factors, I obviously feel that the keys in the middle row are pressed more. </p>
<p>but! When I use someone else’s computer, I completely become a fool in the eyes of others! Every time I say “I use Dvorak keyboard” with heartfelt words<br>The most deadly thing is that after using Ubuntu, the English is okay, the system is there, and the Chinese is tragic again.<br>Coupled with the popularity of Android, it’s basically impossible to have a Dvorak layout on mobile keyboards. </p>
<p>Then, I can only compromise </p>
<p>For example, at work, use Ubuntu 10.10 to compile the Android ROM. Although 11 is more beautiful, even 10.10 officially has given up support, but if you are a bit cheap, you can’t compile it at all. </p>
<p>There are countless examples of sauce </p>
<p>I think I’ve already started to be afraid of things before I’ve been established, so because older people have suffered a lot and lost more pits, so gradually they don’t want to touch new things anymore? ? </p>
<p>Reference [Learned Helplessness Experiment](<a href="http://zh.wikipedia.org/wiki/%E7%BF%92%E5%BE%97%E6%80%A7%E5%A4%B1%E5%8A">http://zh.wikipedia.org/wiki/%E7%BF%92%E5%BE%97%E6%80%A7%E5%A4%B1%E5%8A</a> %A9), this is again the nature of the animal, it seems there is no good way </p>
<p>But such a person will gradually become boring, like a pool of stagnant water slowly stinking </p>
<p>I don’t want to be that person </p>
<p>Look at some older and interesting people, talk to them, there is no pressure, you can better explain your ideas </p>
<p>So how do they keep up with the times and stay curious? </p>
]]></content>
      <tags>
        <tag>Psychology</tag>
      </tags>
  </entry>
  <entry>
    <title>An indigestible programming language is a bad language</title>
    <url>/en/An-indigestible-programming-language-is-a-bad-language/</url>
    <content><![CDATA[<p>When I was Gap Year, I saw this book. I was writing questions at <a href="http://www.codecademy.com/">codecademy</a>. I only saw the Ruby chapter. At that time, I felt that Go was already very Geek. </p>
<p>One year later, when the company I am currently working for was refactoring the backend, I considered <code>Scala</code>. One of my friends saw the high salary of the game, so he resolutely went to see <code>Erlang</code>. There was a <code>Thoughtworks</code> event sharing I heard. Clojure` </p>
<p>When I read this book again, I found that <code>Ruby, Io, Prolog, Scala, Erlang, Clojure, Haskell</code> </p>
<p>I’ve been sitting in the well and looking at the sky, I read this book again and found that I don’t really need to read this book </p>
<p>So if you are curious and satisfy your curiosity, you can take a look. If you want to study seriously, skip it. </p>
<a id="more"></a>

<hr>
<p>Looking at the programming languages, there are so many people who can’t escape the following categories: </p>
<ol>
<li>model </li>
</ol>
<ul>
<li>Functional </li>
<li>OO </li>
<li>prototype </li>
</ul>
<ol start="2">
<li>Data structure algorithm </li>
<li>data structure <ul>
<li>Types of </li>
<li>Linked list </li>
<li>Hash table </li>
</ul>
</li>
<li>process <ul>
<li>judgment </li>
<li>cycle </li>
</ul>
</li>
<li>Concurrent </li>
</ol>
<p>Regarding concurrency, since the process does not conform to human thinking, there seems to be no good solution at present<br>I think that even if it is solved in the future, it should be written and encapsulated by some talented people, so that people with mediocre IQ can solve it as simple as writing <code>ifelse</code> </p>
<p>Personally, the popularity of a language is inseparable from the following points: </p>
<ol>
<li>Commercial Promotion (Java|OC) </li>
<li>Safe and stable </li>
<li>Is it easy for humans to read </li>
</ol>
<p>No need to say the first two points, if you say too much, it will be tears </p>
<p>It is mentioned in the seven languages of seven weeks:<br>In many ways, Clojure is the wise kung fu master, the oracle on the hill, or the enigmatic Jedi trainer. </p>
<p>The benefits of Lisp are known from “The Hacker and the Painter”, and Emace is known as “the editor of God” </p>
<p>However, it’s so good and so awesome, but it’s not popular, it’s a question worth pondering </p>
<p>From the perspective of syntactic sugar, I still remember that I used <code>Swift</code> once, a previous generation (C/C++/Java) programmer (non-derogatory), just saw the return value changed to -&gt;, the variable type was Exclaimed from behind<br>As for myself, I completely accept <code>Go Swift</code> and other grammatical sugars, but I also feel that <code>Lisp</code>‘s prefix expressions are all uncomfortable. The simplicity is good, and I get dizzy when it is long, and the closing brackets are very heretical.<br>It can be seen how difficult it is for programmers to accept the new syntax after getting used to a system </p>
<p>“Code is written for people to see” </p>
<p>So I think that language that is anti-human reading will disappear, or at least not become popular among humans. </p>
<p>So Mazi took another approach, focusing on how to make programmers write code happily </p>
<p>So there is no best language, only the most suitable language </p>
<p>Of course, none of the above mentioned applies to a situation where computers have evolved to be able to write code </p>
<p>Because this has broken away from the human paradigm </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Refactoring is not a silver bullet</title>
    <url>/en/Refactoring-is-not-a-silver-bullet/</url>
    <content><![CDATA[<p>When the book was written, object-oriented was still a niche, but now functional programming has become popular </p>
<p>Today, most of the ideas and methods of refactoring are slightly heard by programmers who are a little bit pursuing. If you are a Java programmer, it is even harder not to know<br>So far, reconstruction has been similar to a part of coding </p>
<p>Chapters 1 2 3 of this book have already explained what refactoring is and when, so you should read it carefully<br>4 5 6 7 8 9 10 11 are specific methods, those who are familiar with Java can take a look<br>Just skip over the following chapters </p>
<a id="more"></a>

<hr>
<p>I once brushed <a href="http://book.douban.com/subject/1477390/">“Code Encyclopedia”</a> in school, so, after reading this book, <strong>relative</strong> is not that important </p>
<p>For example, although my iOS is weak, but seeing the project of the company now, I am drunk with hundreds of lines of functions, a lot of repetitive code, and various magic numbers<br>Of course, this is not to say that the previous project was not good. After all, everyone was forced to become stupid by <em>deadline</em> </p>
<p>In general, this book should be <strong>passed over</strong>, after all, the cover is printed: </p>
<blockquote>
<p>Cheats that ordinary programmers must practice to advance to programming masters </p>
</blockquote>
<p>Because if you don’t look at it, you may not be aware of the pits that people passed by. </p>
<p>Like my understanding of temporary variables is incorrect<br>There is also the previous writing of functions <strong>too random</strong>, like parameters without <code>let</code>, and without adding <code>private</code> for those that are not exposed </p>
<p>The more instructive are: </p>
<ul>
<li>Eliminate temporary variables </li>
<li>Polymorphism replaces Switch </li>
<li>Null Object </li>
</ul>
<p>At present, the time to make iOS is still short. I belong to junior programmers. There are so many things I don’t understand. Every time I do functions in trial and error, I ignore all these things when I write.<br>Although I often think about refactoring immediately after the function is OK, people are lazy, and often see that everything is fine if they can run, and then put the hope of organizing the code on refactoring </p>
<p>The ideal situation is:<br>Version control + Review + pairing + refactoring (The current company is very good, it has been implemented mostly) </p>
<p>But this reminds me of a classic paper on software engineering published by Fred Brooks in 1987-[“No Silver Bullet”](<a href="http://zh.wikipedia.org/wiki/%E6%B2%">http://zh.wikipedia.org/wiki/%E6%B2%</a> A1%E6%9C%89%E9%93%B6%E5%BC%B9) </p>
<p>Refactoring is certainly not a silver bullet </p>
<p>Can only rewrite the boy </p>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>10 years of work experience to save you</title>
    <url>/en/Ten-years-of-work-experience/</url>
    <content><![CDATA[<p>Amazon specials, you can enter as soon as the Douban score is not low </p>
<p>Don’t think the first criterion is:<br><strong>Never personally work on a computer</strong> </p>
<p>Looking at the second criterion is actually:<br><strong>Take professional knowledge as a stumbling block</strong> </p>
<p>As a code farmer, I can only haha </p>
<a id="more"></a>

<p>Fortunately third and fourth: </p>
<ul>
<li><strong>Squeeze into the center of power</strong> </li>
<li><strong>Never trust HR</strong> </li>
</ul>
<p>Finally make sense </p>
<p>What did you give next </p>
<ul>
<li><strong>Kick useless people out of your network in time</strong> </li>
<li><strong>against the rules</strong> </li>
<li><strong>Catch the big shots</strong> </li>
<li><strong>See the wind to make the rudder</strong> </li>
<li><strong>no mercy</strong> </li>
<li><strong>Seize the credit of subordinates</strong> </li>
<li>… </li>
</ul>
<p>Something like that, the great black leader Li Zongwu has the style of “heart black as coal and face like a city wall” </p>
<p>I just kneel </p>
<p>The end of the book is about weighing family and career, just when I thought the old fritters like Wiesel would make pig’s feet give up marriage<br>I didn’t want to change the front of the conversation, and coldly threw it over:<br>*<em>Is this what you want? *</em> </p>
<p>In short, the whole book has only one impression: </p>
<p>What you said makes sense, I was speechless </p>
<p>233333 </p>
]]></content>
      <tags>
        <tag>Career</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>Design book for programmers</title>
    <url>/en/The-Non-Designer-s-Design-Book/</url>
    <content><![CDATA[<p>I look at this book so enlightening<br>As a result, our CTO picked it up and flipped through it the other night, and said: The painting is so ugly, but I am embarrassed to say it is a design </p>
<p>awkward </p>
<a id="more"></a>

<p>But this reminds me of the <a href="http://book.douban.com/subject/3765227/">C++ book written for everyone</a> that I read when I was in college. At the time, it felt so normal, but Douban 8+ </p>
<p>So it’s really important to meet the right book at the right time </p>
<p>It’s been a while since I jumped from <code>C</code> to <code>C++</code>, and <code>MFC</code> is also in use, so I probably don’t count as <em>everyone</em> anymore. It’s normal to have no inspiration </p>
<p>Regarding this book, I personally feel that its purpose is not to train you as a master, but to target children who have never paid attention to design or who want to get started but don’t know how to get started. </p>
<p>So the use cases inside are the comparison between <strong>no design</strong> and the addition of <strong>basic design elements</strong>, which is naturally out of the eyes of experts. </p>
<ol>
<li>Four principles: </li>
</ol>
<ul>
<li>Intimacy </li>
<li>Align </li>
<li>repeat </li>
<li>Compared </li>
</ul>
<ol start="2">
<li>Color </li>
</ol>
<ul>
<li>Complementary </li>
<li>Tricolor </li>
<li>Split complementary tricolor </li>
<li>Similar color </li>
<li>Dark and light </li>
</ul>
<ol start="3">
<li>Font </li>
</ol>
<ul>
<li>Oldstyle </li>
<li>Modern </li>
<li>Slab serif </li>
<li>Without serif </li>
<li>Script </li>
</ul>
<p>People who have never done design may notice these basic points, but they don’t have a system of their own. </p>
<p>Once the human brain knows something, it cannot return to or simulate the state when it did not know it. This is the curse of knowledge. </p>
<p>So the children’s shoes designed in Phuket should be unrolled quickly </p>
]]></content>
      <tags>
        <tag>Design</tag>
      </tags>
  </entry>
  <entry>
    <title>Never thought</title>
    <url>/en/Never-Expected/</url>
    <content><![CDATA[<h2 id="Not-catching-up-means-not-catching-up"><a href="#Not-catching-up-means-not-catching-up" class="headerlink" title="Not catching up means not catching up"></a>Not catching up means not catching up</h2><a id="more"></a>

<h4 id="Common-thinking-mistakes"><a href="#Common-thinking-mistakes" class="headerlink" title="Common thinking mistakes"></a>Common thinking mistakes</h4><p>This is basically mentioned in psychology books </p>
<h4 id="How-to-counterattack"><a href="#How-to-counterattack" class="headerlink" title="How to counterattack"></a>How to counterattack</h4><p>Change the rules disagreeableness </p>
<h4 id="Willpower"><a href="#Willpower" class="headerlink" title="Willpower"></a>Willpower</h4><ul>
<li>Trainable muscles </li>
<li>beauty </li>
<li>Mantra </li>
</ul>
<h4 id="1W-hour"><a href="#1W-hour" class="headerlink" title="1W hour"></a>1W hour</h4><p>Once Tiger Woods is disturbed, he immediately interrupts the action. This is undoubtedly shocking in the eyes of the master. </p>
<p>Deliberate training is undoubtedly boring. What I thought before is that you can <strong>play middle school</strong> in a relatively superficial stage, namely: entertainment </p>
<p>Fortunately, the following said: <strong>Interest</strong> can offset this boring </p>
<p>And the genes have: </p>
<blockquote>
<p>Experience Producing Drive theory </p>
</blockquote>
<p>I have read a small part of “The Selfish Gene”, but there is still a theory </p>
<p>There is a paragraph in the book that explains the confusion that I have been coming to, because I found that no matter how hard I tried, there was a big gap between people who started at a very young age, that is, I had lost at the starting line: </p>
<blockquote>
<p>By the age of 18, the second group practiced more than 2000 hours less than the first group-now they are working hard, but it is too late. This is true for music and so is sports (programming). Failure to catch up means failure to catch up every step. </p>
</blockquote>
<!--more-->

<h4 id="science"><a href="#science" class="headerlink" title="science"></a>science</h4><ul>
<li>Limited imagination </li>
<li>Interpretation + prediction </li>
</ul>
<h4 id="Thinking-intensity-preparation-time-reading-time"><a href="#Thinking-intensity-preparation-time-reading-time" class="headerlink" title="Thinking intensity = preparation time/reading time"></a>Thinking intensity = preparation time/reading time</h4><h4 id="reading"><a href="#reading" class="headerlink" title="reading"></a>reading</h4><ul>
<li>toss skim read </li>
<li>narrow | broad framing </li>
<li>notes </li>
</ul>
<p>In fact, after reading “How to Read a Book”, I planned to read the book twice, but it has not been implemented, and I imagined that I can remember that feeling (most of the time reading is not remembering knowledge)<br>This book decided to start implementation, and sure enough, many omissions were found the second time </p>
<h4 id="The-true-color-of-the-winner"><a href="#The-true-color-of-the-winner" class="headerlink" title="The true color of the winner"></a><a href="http://www.geekonomics10000.com/829">The true color of the winner</a></h4><ul>
<li>Competition-Testosterone-Ring Finger Length </li>
<li>Warriors - Worriers </li>
<li>Stress-COMT (Fast|Slow Enzyme) </li>
<li>finite - infinite game </li>
<li>The evolution of overconfidence </li>
</ul>
<p>I saw this on the blog before<br>Obviously I am Worriors, which is more suitable for unlimited turn-based games, not for bursts<br>Normally, you should try to press and hit, and relieve pressure at critical moments </p>
<h4 id="other"><a href="#other" class="headerlink" title="other"></a>other</h4><p>Physical strength-timely feedback<br>Brainpower-free time </p>
<p>Don’t partner with acquaintances? (Youtube’s reunion for Yahoo is a counterexample, but Sequoia is indeed a weak link) </p>
<p>Reincarnation is in a state that science cannot explain </p>
<p>Collective imagination </p>
]]></content>
      <tags>
        <tag>Tech</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>What I talk about when I talk about running</title>
    <url>/en/What-I-talk-about-when-I-talk-about-running/</url>
    <content><![CDATA[<p>The old breath permeates the book from beginning to end<br>Regarding the passage of time and the decline of physical ability, there is no alternative </p>
<p>It is different from rashly resisting and insisting on disobeying the old. Yes, the author gradually accepted this fact and used it as a rule to deal with </p>
<p>Many questions I am curious about, the author has also reflected on and went deeper </p>
<p>This is roughly: </p>
<blockquote>
<p>I’m the kind of person who likes to be by himself. </p>
</blockquote>
<a id="more"></a>

<hr>
<blockquote>
<p>I stop every day right at the point where I feel I can write more. Do that, and the next day’s work goes surprisingly smoothly. I think Ernest Hemingway did something like that. To keep on going, you have to keep up the rhythm. This is the important thing for longCterm projects. </p>
</blockquote>
<blockquote>
<p>I’m the type of person who doesn’t find it painful to be alone. I find spending an hour or two every day running alone, not speaking to anyone, as well as four or five hours alone at my desk, to be neither difficult nor boring. </p>
</blockquote>
<blockquote>
<p>I ran a bar, so I learned the importance of being with others and the obvious point that we can’t survive on our own. </p>
</blockquote>
<blockquote>
<p>The clouds are mere guests in the sky that pass away and vanish, leaving behind the sky. </p>
</blockquote>
<blockquote>
<p>it’s precisely because people are different from others that they’re able to create their own independent selves. </p>
</blockquote>
<blockquote>
<p>I had to give it everything I had. If I failed, I could accept that. But I knew that if I did things halfheartedly and they didn’t work out, I’d always have regrets. </p>
</blockquote>
<blockquote>
<p>I only began to enjoy studying after I got through the educational system and became a soCcalled member of society. </p>
</blockquote>
<blockquote>
<p>We’d closed the club, so we also decided that from now on we’d meet with only the people we wanted to see and, as much as possible, get by not seeing those we didn’t. We felt that, for a time at least, we could allow ourselves this modest indulgence. </p>
</blockquote>
<blockquote>
<p>It was my real schooling. But you can’t keep up that kind of life forever. Just as with school, you enter it, learn something, and then it’s time to leave. </p>
</blockquote>
<blockquote>
<p>I’m struck by how, except when you’re young, you really need to prioritize in life, figuring out in what order you should divide up your time and energy. If you don’t get that sort of system set by a certain age, you’ll lack focus and your life will be out of balance </p>
</blockquote>
<blockquote>
<p>In other words, you can’t please everybody </p>
</blockquote>
<blockquote>
<p>Life just isn’t fair, is how it used to strike me. Some people can work their butts off and never get what they’are aiming for, while others can get it without any effort at all. </p>
</blockquote>
<blockquote>
<p>It suits me. Or at least because I don’t find it all that painful. </p>
</blockquote>
<blockquote>
<p>The most important thing we ever learn at school is the fact that the most important things can’t be learned at school </p>
</blockquote>
<blockquote>
<p>while they’re getting by on these, they may actually discover real, hidden talent within them </p>
</blockquote>
<blockquote>
<p>I’ve always done whatever I felt like doing in life. People may try to stop me, and convince me I’m wrong, but I won’t change. </p>
</blockquote>
<blockquote>
<p>My own individual, stubborn, uncooperative, often selfCcentered nature that still doubts itself—that, when troubles occur, tries to find something funny, or something nearly funny, about the situation. </p>
</blockquote>
<blockquote>
<p>This takes time, of course, but sometimes taking time is actually a shortcut. </p>
</blockquote>
]]></content>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS CI (Jenkins + pH AB Rica Tor + slack)</title>
    <url>/en/iOS-CI-Jenkins-Phabricator-Slack/</url>
    <content><![CDATA[<p><code>shell</code> 里 <code>brew install jenkins</code><br>Then <code>jenkins</code> starts, enter 127.0.0.1:8080 in the sirloin device to jump the pit </p>
<p>Install the <code>xcode</code> related plug-ins in Jenkins<br>Steps are available in other blogs, Google <em>ios ci continuous integration</em>, such as: </p>
<ul>
<li><a href="http://www.itiger.me/?p=30">Jenkins+Github+Testflight build continuous integration environment under Mac</a>, </li>
<li><a href="http://www.jianshu.com/p/63073573e2ee">Travis CI for Continuous Integration of iOS Project</a> </li>
</ul>
<a id="more"></a>

<p>The version may be older, but you can make up for it </p>
<p>The Phabricator we use here, because it is iOS, is placed on the local Mac instead of the server, so the private key is good enough, and the callback interaction between Jenkins and Phabricator is ignored. </p>
<p>In addition, there are several problems: </p>
<h3 id="jenkins-plugins-slack-ActiveNotifier-hudson-model-listeners-npe"><a href="#jenkins-plugins-slack-ActiveNotifier-hudson-model-listeners-npe" class="headerlink" title="jenkins.plugins.slack.ActiveNotifier hudson.model.listeners npe"></a>jenkins.plugins.slack.ActiveNotifier hudson.model.listeners npe</h3><p>test push message is good<br>After two hours, I don’t know what’s going on. I slept and it was normal the next day… </p>
<p>Seems to know the reason, <em>Project Channel</em> cannot be empty </p>
<h3 id="ResourceRules-plist"><a href="#ResourceRules-plist" class="headerlink" title="ResourceRules.plist"></a>ResourceRules.plist</h3><p>On the first day, it was prompted that ResourceRules.plist was wrong, so this was added to the project and Jenkins configuration<br><code>Custom xcodebuild arguments $(SDKROOT)/ResourceRules.plist</code> </p>
<p>As a result, it was prompted that ResourceRules.plist could not be found the next day. It was OK to delete this in Jenkins. It’s amazing. </p>
<h3 id="iPhone-Developer-no-identity-found"><a href="#iPhone-Developer-no-identity-found" class="headerlink" title="iPhone Developer: no identity found"></a>iPhone Developer: no identity found</h3><p><code>swift-stdlib-tool failed with exit code 1</code> </p>
<p>Go to developer.apple.com to download various certificates, but none of them work<br>There is really no way. I directly opened the project under <code>~/.jenkins/jobs/****</code> with xcode. I wanted to make a comparison. It turned out that there was an extra certificate in the keychain, and then it succeeded… </p>
<hr>
<p><del>In addition, the company account has not been bought yet, and Jenkins has not opened the account system, so continue to wait</del> </p>
<h3 id="DUNS-Dun-amp-Bradstreet-Code"><a href="#DUNS-Dun-amp-Bradstreet-Code" class="headerlink" title="DUNS (Dun &amp; Bradstreet Code)"></a>DUNS (Dun &amp; Bradstreet Code)</h3><p>The company account has been stuck here before, and Apple’s email has not responded for a long time, so be sure to call Apple’s customer service. It will be OK in a day or two. </p>
<h3 id="bundle-identifier"><a href="#bundle-identifier" class="headerlink" title="bundle identifier"></a>bundle identifier</h3><p>Previously, .alpha and .beta in the company account were occupied, and the same certificate could not be created here for the corporate account, so I had to <em>delete the original account</em> or <em>change ID</em> </p>
<p>As a result, when deleting, it is found that the app needs to be in several states, the official document: <a href="https://developer.apple.com/library/mac/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/TransferringAndDeletingApps.html">TransferringAndDeletingApps</a> </p>
<p>Previously, beta was used as testflight, and AppStore was not uploaded. Email Apple, reply: </p>
<blockquote>
<p>Currently, your app does not have at least one approved version. </p>
</blockquote>
<p>…<br>Had to change the ID </p>
<h3 id="over-the-air-distribution"><a href="#over-the-air-distribution" class="headerlink" title="over the air distribution"></a>over the air distribution</h3><p>Everything is ready, quickly export it, and it turns out that after Xcode 6, there is only one .ipa for guiding ipa without a matching .plist, you have to write it by yourself…(fortunately, Jenkins can also generate it automatically), roughly like this: <a href="https://gist.github.com/leihao0/f292d65163b26a2169d4">plist</a> (Change the corresponding in $ $) </p>
<p>Then <code>python -m SimpleHTTPServer</code>, open Safari on the iPhone, the result… still not working… </p>
<p>It was later discovered that the server must be https… </p>
<h3 id="build-number"><a href="#build-number" class="headerlink" title="build number"></a>build number</h3><p><code>targets -&gt; Build Phases -&gt; + New Run Script Phase</code> </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">buildNumber=$(/usr/libexec/PlistBuddy -c <span class="string">&quot;Print CFBundleVersion&quot;</span> <span class="string">&quot;<span class="variable">$&#123;PROJECT_DIR&#125;</span>/<span class="variable">$&#123;INFOPLIST_FILE&#125;</span>&quot;</span>)</span><br><span class="line">buildNumber=$((<span class="variable">$buildNumber</span> + <span class="number">1</span>))</span><br><span class="line">/usr/libexec/PlistBuddy -c <span class="string">&quot;Set :CFBundleVersion <span class="variable">$buildNumber</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;PROJECT_DIR&#125;</span>/<span class="variable">$&#123;INFOPLIST_FILE&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>When the scheme is release, the build will automatically +1 </p>
<p>PS:<br>In fact, this can be written in the shell of the Jenkins build step, then push to origin/master, and then upload *.ipa to the server </p>
<h3 id="OS-X-Server"><a href="#OS-X-Server" class="headerlink" title="OS X Server"></a>OS X Server</h3><p>Pit, have time to organize one </p>
<h3 id="DistributionProvisioningProfiles"><a href="#DistributionProvisioningProfiles" class="headerlink" title="DistributionProvisioningProfiles"></a>DistributionProvisioningProfiles</h3><p>Directly download the downloaded <code>*. mobileprovision</code> and write the path and find that it is impossible, so I have to manually package it myself </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">xcodebuild -exportArchive -exportFormat IPA -archivePath <span class="string">&quot;<span class="variable">$Yourarchive</span>&quot;</span> \</span><br><span class="line"> -exportPath imeican-Beta-xcodebuild.ipa \</span><br><span class="line"> -exportProvisioningProfile <span class="variable">$YourDistributionProvisioningProfiles</span></span><br></pre></td></tr></table></figure>

<p>to sum up:<br>All the way to pit </p>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Painless Acupuncture</title>
    <url>/en/Painless-Acupuncture/</url>
    <content><![CDATA[<p>Once I talked about Chinese medicine in the magic group 粢饭, and found that 80% of my colleagues thought Chinese medicine was deceptive. The little mage was shocked. </p>
<p>Later, I talked about this with a magician in Red Riding Hood. The little mage thought that healing was like marching and fighting. </p>
<p>Combat strength of both sides: I 5 enemy 8 </p>
<a id="more"></a>

<p>Western medicine directly kills the virus, reducing the enemy’s combat power to 3<br>And the Chinese medicine is like adding a halo to increase our combat power to 10 </p>
<p>As far as the result is concerned, there are 2 after the fight, so it’s best not to believe in a certain plan. </p>
<p>As for the unbelief, on the one hand, there may be too many scammers. For example, after being deceived a few times, you will no longer believe in love.<br>On the other hand, medicine has its limitations. Today, when Western medicine is relatively perfect, cancer can still be misdiagnosed, not to mention that there are still no effective treatments for some diseases.<br>There is also a possibility that the public has a misunderstanding of the theory of Chinese medicine, just as a child who often learns magic strangely can’t even repair magic instruments. </p>
<p>In the third year of the Magic Academy, the little mage got a serious illness and didn’t want to be a blessing in disguise, so he comprehended [The Theory of Human Ecological Balance](<a href="http://leihao0.github.io/2012/05/28/%E4%BA%">http://leihao0.github.io/2012/05/28/%E4%BA%</a> BA%E4%BD%93%E7%94%9F%E6%80%81%E5%B9%B3%E8%A1%A1%E8%AE%BA/), I have not had any disease after Dache<br>Xiao Chao, who usually catches a cold, kills chickens with a sledge knife and directly sacrifices “Suwen·Four Qi Tiao Shen Dalun” by <a href="http://book.douban.com/subject/3843957/">Huang Di Nei Jing</a> </p>
<blockquote>
<p>That’s why the sage does not cure the disease and cures the disease, and the incurable cures the disorder but the disorder. This is also the case. It’s not too late if the husband’s disease has become a disease and then the medicine, the chaos has become, and then he can be cured. </p>
</blockquote>
<p>When the disease is about to start and there is a warning, calculate it to eliminate it in advance </p>
<p>But I also said before that the little mage has problems with his waist and cervical spine due to occupational problems. For example, the KW test in <a href="http://book.douban.com/subject/25981248/">Magic Health Guide</a> cannot pass , The swing in yoga can’t do it </p>
<p>But the little mage is lazy, unable to keep exercising, let alone running like Chun Shang Chun Shu for decades, so he can only hope for acupuncture </p>
<hr>
<p>To be precise, acupuncture and moxibustion are divided into acupuncture and moxibustion, but people often think that acupuncture and moxibustion are all needle sticks, so let’s describe it like this </p>
<p>Descartes once divided the method of studying a problem into four steps in <a href="http://book.douban.com/subject/1071023/">Talk about Method</a>, the first of which is: </p>
<blockquote>
<p>I will never accept any truth that I am not clear about, which means that we must try to avoid recklessness and prejudice, and can only be very clear and certain based on my own judgment, without any doubtful truth. That is to say, as long as you have not experienced the problems you have personally experienced, no matter what authoritative conclusion you have, you can doubt it. This is the famous “doubt everything” theory. For example, Aristotle once concluded that women have two fewer teeth than men. but it is not the truth. </p>
</blockquote>
<p>Since I have drunk medicine, but it hasn’t improved much, so the little mage doesn’t believe in herbal medicine. </p>
<p>But meridians, to be precise, acupuncture points, are easy to feel<br>For example, Hegu (Hukou), Jianjing, pinch it by yourself, and then pinch another place, you will know that it is not ordinary meat.<br>The meridians conflict with the three chakras and seven meridians of Indian yoga, so it is the little mage who is skeptical </p>
<p>Many times before the needle, the little mage had simulated the whole process:<br>I saw that the 2.5-inch stainless steel needle penetrated the epidermis -&gt; dermis -&gt; subcutaneous tissue effortlessly. Due to the inaccurate recognition of the acupoints, unfortunately it touched the arteries and veins. The little mage’s painful hand shook and broke the next one. Autonomous motor nerve, disabled for the rest of my life… </p>
<p>Mark Twain lamented in his later years </p>
<blockquote>
<p>Most of my life has been worrying about things that have never happened. No behavior is more stupid than worrying out of nothing. </p>
</blockquote>
<p>The little mage was pierced several times by a small partner of the University of Traditional Chinese Medicine. After being able to bounce around without any major incidents, I guessed that the motor nerves were not like optical fibers as previously imagined. There was only one, and it was broken when it was broken. There are many roots, and the organism has the ability to repair itself </p>
<p>But the little friend lives far away and can’t come often. He keeps some hospital needles every time, so the little mage takes care of himself. </p>
<p>Of course, the act of digging the corner of socialism by small partners should be strictly prohibited. But compared to another one, I bought a super-sized power bank in order to not use my own home appliances, and charged my notebooks every time I came back, and notified the stunned people’s police of the little mage, which is nothing. </p>
<hr>
<p>But there is still a problem-the little mage is afraid of pain<br>This is also the reason why he hasn’t had a physical examination every day </p>
<p>So the little mage first moved out the <a href="http://book.douban.com/subject/4665276/">True Qi Operation Method</a>, in an attempt to solve this problem once and for all by opening up the two channels of Ren and Du, and even stupidly wrote [ Log](<a href="http://leihao0.github.io/2014/01/08/%E7%9C%9F%E6%B0%94%E8%BF%90%E8%A1%8C%E6%B3%95-">http://leihao0.github.io/2014/01/08/%E7%9C%9F%E6%B0%94%E8%BF%90%E8%A1%8C%E6%B3%95-</a> %E6%89%93%E9%80%9A%E5%B0%8F%E5%91%A8%E5%A4%A9%E8%AE%B0%E5%BD%95/) To record the whole process, it is a pity When the Qi is stuck on the tail, you can only slow down </p>
<p>But the cervical spine cannot be slowed down. First, it has affected sleep, and secondly, I am afraid of myself. </p>
<blockquote>
<p>Secondly, rule the Liufu, and then the Wuzang. Those who rule the five Tibetans are half dead and half alive. </p>
</blockquote>
<p>It was the night of New Year’s Day, the little mage was tossing and turning on the bed, and in this moment of silence, he remembered Schopenhauer <a href="http://book.douban.com/subject/1004699/">the world as will and appearance</a> A few words in: </p>
<blockquote>
<p>It turns out that everything that exists is just the existence of the subject. </p>
</blockquote>
<p>When he was reciting these few sentences, he never understood the reason. At this moment, he suddenly remembered that neck, shoulder, waist and leg diseases are different from organ diseases, which are difficult to cure. Irregular treatment or rehabilitation training will only cause illness. Repeated or even worsening pain, but according to the meaning of “The World of Will and Appearance”, it seems that the disease only exists for “I”<br>Thinking of this, the little mage quickly got up and flipped through the book, Guo Xian said again: </p>
<blockquote>
<p>Every time the body is subjected to an external effect, this effect immediately and directly stimulates my will… and the reverse is also true. Every violent excitement of the will, that is, touch and passion, shakes the body and hinders the function of the body. run </p>
</blockquote>
<p>Thinking of this, the little mage suddenly realized that he sat down cross-legged and adjusted his breath according to the method shown in “True Qi Movement”<br>Then he concentrated his thoughts into a beam of light, forming a sample paper of needles, and slowly plunged into Dazhui. As expected, the surrounding muscles gradually relaxed.<br>After that, the little mage took Fengchi, Fengfu (isn’t this for treating colds?), and Gao Liao (who is seriously ill, it is really an acupuncture point)<br>After the acupuncture is finished, imagine that the light needle slowly dissipates heat ([Warm Needle Moxibustion](<a href="http://leihao0.github.io/2013/09/11/%E6%B8%A9%E9%92%88%E7%">http://leihao0.github.io/2013/09/11/%E6%B8%A9%E9%92%88%E7%</a> 81%B8/)) </p>
<p>Slowly, the little mage fell into a dream safely </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Dialysis of Legal English</title>
    <url>/en/How-to-Learn-English/</url>
    <content><![CDATA[<p>The little mage wanted to see how his Elvish language level was<br>Although before graduating from the Magic Academy, I got the CET6 certification<br>Unfortunately, this certificate cannot correspond to the true level </p>
<p>Before, the little mage had only one trick when dealing with Elvish words-recite NCE<br>This also helped the little mage successfully pass the celestial certification </p>
<a id="more"></a>

<p>But reading the book a hundred times is not a universal rule. The little mage can’t read each article hundreds of times, but it seems that he has never thought about it.<br>For example, in high school, under the Yali of the college entrance examination, I was fined to stand for the entire class several times for not being able to recite. </p>
<p>There is God’s will in the dark. About a year ago, the little mage accidentally obtained a book of truth-<a href="http://book.douban.com/subject/3748247/">Dialysis of Dafa</a> </p>
<p>I was deceived a lot. At first, the little mage thought it was <a href="http://book.douban.com/subject/1008501/">Don’t</a> this kind of pseudo-subject, and an article written by <em>Leakhouse</em> [神贴] ](<a href="http://book.douban.com/subject/11522125/">http://book.douban.com/subject/11522125/</a>), although the tips are pointed out, but no corresponding training plan is given </p>
<p>Dialysis of Dafa is as good as it can be. It can be called a model from the pit to the gods series. It not only writes out in detail that each level should practice god horses, but even possible passes are also involved. </p>
<p>Then the little mage started practicing </p>
<hr>
<p>one year later… </p>
<p>I have to say that the cultivation progress of the little mage is really slow, and the Gap Year has just passed the elementary <a href="http://book.douban.com/subject/4201317/">Introductory Phonetics</a> Counting](<a href="http://book.douban.com/review/6300403/">http://book.douban.com/review/6300403/</a>)) </p>
<p>After the mid-level-ESL (slow speed), the little mage listened to the top 80 with patience and couldn’t help but jump in technology </p>
<p>As for the mid-to-high-level APW Podcast, the little mage casually watched and listened to it, even if it’s done. </p>
<p>Then brush off the next-high-level AAC and forcefully practice the highest-level SSS </p>
<p>Of course, these are destined <strong>randomly</strong>… </p>
<hr>
<p>Around the time at the Magic Academy, the little mage heard that there was a test called IELTS in the West. Judging from the results, the local elves would get good badges, and the little mage had the heart to try. </p>
<p>But when I checked the fees, I was shocked. I thought that 1% of CET’s Celestial Coins would be able to participate, which shows the weight. </p>
<p>So the little mage has made up his mind to prepare well, spend the money on the blade, don’t make unnecessary sacrifices, and don’t give away experience. </p>
<p>I don’t want inflation to be as fierce as the tiger, this fee is rising year by year, and there is a tendency to break 2 </p>
<p>A while ago, the little mage saw that his friend had signed up, and he added a sentence of “tax delay”, gritted his teeth and reported it. </p>
<hr>
<p>The test address is ideal, just next door to the current Magic Group </p>
<p>When the little mage signed up, the little abacus was very good-after the exam, you can return to the company to have a meal, which is great </p>
<p>to be continued </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Clear water and blue sky</title>
    <url>/en/Blue-Sky-and-Sea/</url>
    <content><![CDATA[<p>Two black spots appeared in the distant skyline. After slowly expanding, there were two people, oh, two magisters.<br>Their flying speed is extremely fast, and supporting such speed shows that the magic power of the two is high </p>
<a id="more"></a>

<p>Just listen to the magician α telling β that if you speed up like this, even if you catch up with the deadline, there will be little magic left. Why don’t we suppress the magic value and go to Stargate?<br>β took a look at α, continued to fly forward, for a long time, said slowly, in case of failure<br>α I can’t help but shudder, I don’t know if it’s stimulated by the high altitude too cold </p>
<p>I caught it, after β said, threw a bottle of soylent to α, and then silently drank it to supplement his magic </p>
<p>The so-called StarGate is a tool for long-distance teleportation. Although magicians can also pass and effortlessly, it is helpless that Stargates have been occupied by Muggles, and before entering, the guard will use a similar torch order. Obsidian test whether the passer is carrying a lethal weapon<br>Although 99% of the mages are kind, the magic stones they carry with them will make the holy fire scream non-stop, and the mages who reach the level of the mages are covered with magic all over their bodies. Even without any props, they will inspire obsidian<br>If you don’t evacuate in time or even make a desperate move, the state-level armed forces will appear in a few minutes, grab you and close the small black house, and since then, the world will disappear. </p>
<p>When approaching the city, they quickly lowered to below 1500 sea level, so as not to be mistaken for UFOs and shot down by the imperial capital’s missile defense system. </p>
<hr>
<p>The imperial capital is surrounded by mountains on three sides<br>The western mountains are [Taihang Mountains](<a href="https://www.baidu.com/s?wd=%E5%A4%AA%E8%A1%8C%E5%B1%B1%E8%84%89&amp;hl_tag=textlink&amp;tn=">https://www.baidu.com/s?wd=%E5%A4%AA%E8%A1%8C%E5%B1%B1%E8%84%89&amp;hl_tag=textlink&amp;tn=</a> SE_hldp01350_v6v6zkg6)’s northeast remnant<br>The mountains in the north and northeast are [Yanshan Mountains](<a href="https://www.baidu.com/s?wd=%E7%87%95%E5%B1%B1%E5%B1%B1%E8%84%89&amp;hl_tag">https://www.baidu.com/s?wd=%E7%87%95%E5%B1%B1%E5%B1%B1%E8%84%89&amp;hl_tag</a> =textlink&amp;tn=SE_hldp01350_v6v6zkg6) of the western branch.<br>The whole is a semi-basin topography </p>
<p>Seeing from a distance on each mountain top, most of the magicians are already in place<br>Near noon, the huge magic circle depicted faintly flashed </p>
<blockquote>
<p>At that time, the sun shines like a thousand-year-old glass<br>—— Ming Ling Mengchu’s “The First Moment to Make a Case Surprise” Volume 28 </p>
</blockquote>
<p>The mountains show the appearance of an emperor </p>
<p>α β Fly to their respective positions, ready to be on standby </p>
<hr>
<p>It’s noon, yellow sand is all over the sky, rolling in </p>
<p>At this time, on the highest mountain, the Release Grand Magister drew a series of mysterious spells in the sky<br>A shining seven-color beam of light rushed straight into the sky. After receiving the signal, the magicians on each peak pointed their wands to the sky, condensing a spell with magic power:<br><a href="https://en.wikipedia.org/wiki/Asia-Pacific_Economic_Cooperation">Asia-Pacific Economic Cooperation</a> </p>
<p>For a while, a huge transparent water-like <a href="https://en.wikipedia.org/wiki/HEPA">HEPA</a> slowly rose on the mountains surrounding the imperial capital.<br>The moment the force of nature came into contact with the magical summons, the surface of the lake when it rained on <a href="https://en.wikipedia.org/wiki/Command-line_interface">Shell</a>, ripples appeared. </p>
<p>So far, before the magicians run out of magic power </p>
<p>Under the dome, the sky is high and the clouds are pale, clear water and blue sky </p>
<hr>
<p>Of course, the level of the little mage is too low, unless you bring equipment, otherwise Stargate usually, as long as you pay the fee after the price increase, you can just pass it.<br>So those things above have nothing to do with him, and he has no idea about it </p>
<p>It’s just that the little mage feels that these days, the sky is particularly blue, and the air is filled with a lot of water vapor.<br>Looking up at the sky, the blue sky is like washing, making people intoxicated </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>God in calculation</title>
    <url>/en/Calculating-God/</url>
    <content><![CDATA[<ol>
<li>No design files at all </li>
<li>Rely on the helpless API reverse engineering. </li>
<li>An unstable and frequently crashing system. The last crash occurred 65 million years ago. </li>
<li>Dead codes are everywhere </li>
<li>The prototype source code and runnable binary files are gone, only some unreliable illustrations. </li>
<li>The quality is ctrl c+ctrl v. </li>
<li>3 Serious lover with 3 pieces of code </li>
<li>Zombie Line </li>
<li>Inventor of GA (Genetic Algorithm). </li>
<li>No one has seen a retired god after the IPO </li>
</ol>
]]></content>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>Tips for rewriting iOS apps</title>
    <url>/en/Little-tips-about-rewrite-an-iOS-app/</url>
    <content><![CDATA[<p>I finished my Gap year and went to my current company last fall. </p>
<a id="more"></a>

<p>As a newcomer, I did not do much in the first month. There is a software engineer from AMAP with 10 years of experience. Every time I have something to ask him, he will explain in depth, and patiently ask him to inspire me. But at the same time, I also found thousands of lines of Copy &amp; Paste code in the project. Yes, I used <a href="http://cloc.sourceforge.net/">CLOC</a> to count and found that there are nearly 20,000 rows in total. </p>
<p>Since Objective-C is an overly verbose and cumbersome programming language (which means you have to write dozens of lines of code to implement the same function, and this function may only have one line in Ruby), the calculation for this project is reasonable of. But copy and paste should always be avoided. To make matters worse, I see global variables and magic numbers everywhere. </p>
<p>This is weird, isn’t it? If you are a programmer with 10 years of experience, can easily handle pointers, and have a deep understanding of computer systems, why not pay attention to the code style? After all, we need to prepare for adding new members and new features to the team at any time. </p>
<p>He said that most of the code was written by himself and that bug fixes were quick. However, he will go to a startup company of a friend next month. So, he just left, and the code of Anqu. 😭😭. </p>
<p>to be continued… </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Summer Ends</title>
    <url>/en/Summer-Ends/</url>
    <content><![CDATA[<p><a href="http://music.163.com/#/song?id=26152612">Summer Ends</a><br>This is a good piece of music, because summer is really over. </p>
<a id="more"></a>

<p>During this year, I wrote less, read less, and felt bad. Before that, I was in my gap period, and I was productive and efficient, and my heart flowed. So I started thinking about why and tried to return. </p>
<p>Because I went to Gopher China in April and met an IT farmer. CTO, tell him, maybe I’m in a bottleneck period. </p>
<p>But now it’s September, and the summer is over. I have stayed in Beijing for at most a year, and I am still stuck in this popular state. </p>
<p>I want to figure it out </p>
<h2 id="model"><a href="#model" class="headerlink" title="model"></a>model</h2><p>First of all, the lifestyle (the contract of survival) is not like Hangzhou. When I was in Hangzhou, I could rent a unit near the company, I could walk to work, and I had my own bathroom in my room, so it bothered me. But in Beijing, if I still use the same model, I will have to live in an old unit, which is older than me! To make matters worse, I have to live with my neighbors and share everything from the bathroom to the kitchen. So you have to pray that your neighbor is good.<br>For me, as an inner person, I just want to live alone. </p>
<p>Once I adjusted the scale of this business, I immediately rented a new unit. I will move out at the end of this month, but after a year has passed, I never come back. </p>
<h2 id="English"><a href="#English" class="headerlink" title="English"></a>English</h2><p>I used to read at least 10 books every month, but for the last few months when I narrowed down to the English version, the numbers have dropped so drastically that I almost never finished reading a book in a month. </p>
<p>No book makes me feel sick, no input, no output. This is also an important reason why I no longer post blogs and the “Little Master” series. Needless to say, I force all my new blogs to be written in English. </p>
<h2 id="Procrastination"><a href="#Procrastination" class="headerlink" title="Procrastination"></a>Procrastination</h2><p>This seems to be a common problem. But after seeing too many GTDs, I found a health circle based on <a href="https://en.wikipedia.org/wiki/Polyphasic_sleep">polyphasic sleep</a>. I can make more than 16 <a href="https://book.douban.com/subject/4198078/">pomodoroes</a> a day.<br>After returning to work in the company, I only do what I want to do. I think my efficiency is still very high. </p>
<p>Although I have outsourced the application instead of DIY, preparing for IELTS and working hard is still a big challenge for me, not only because I don’t know the start date, but also my colleagues cannot understand it. I have to write nearly 70% of the code in the main project, and even rewrite some functions. I want to find a way to manage our new team (currently I like a TL assistant). </p>
<p>So, all the apps I used have been returned, and I think it really improved my situation. </p>
<h2 id="Slack"><a href="#Slack" class="headerlink" title="Slack"></a>Slack</h2><p>Not talking about Slack, although I will write some code for our CI based on its API in the future. </p>
<p>I found some things that I ran away, but I will work harder to face it in the future. For example, I hope my colleagues will write more, read translated books, cut off and so on. </p>
<p>Therefore, I dare not hope anymore. </p>
<p>In this way, winter is here. </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>How to build an iOS CI without Jenkins</title>
    <url>/en/How-to-build-an-iOS-CI-without-jenkins/</url>
    <content><![CDATA[<p>I used Jenkins with some Xcode plugins as our iOS CI half a year ago. </p>
<p>The main function I want is to build our project daily in the middle night, and +1 on the build number, then push this commit to <code>Phabricator</code>, if any of these steps is fail, it will post a notification to <code>Slack</code>. </p>
<p>But after we are try to using <code>Carthage</code> instead of <code>CocoaPod</code>, it need to <code>Carthage update</code> before building. The Jenkins can’t run commands before building. So I tried using shell directly. </p>
<a id="more"></a>

<h2 id="update-code"><a href="#update-code" class="headerlink" title="update code"></a>update code</h2><p>First it should <code>cd</code> into the project’s folder, then checkout new commits and update new frameworks </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> $(dirname <span class="variable">$0</span>)</span><br><span class="line">git checkout master</span><br><span class="line">git reset --hard origin/master</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/carthage update</span><br></pre></td></tr></table></figure>

<p>then check that whether the last author is a coworker or the bot itself </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">author=$(git <span class="built_in">log</span> -1 | head -2 | tail -1 | cut -d <span class="string">&#x27; &#x27;</span> -f2)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$author</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$author</span> != <span class="string">&quot;bot&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="comment"># EVERYTHING: </span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>if it’s a coworker </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">projectName=$(find . -name <span class="string">&quot;*.xcodeproj&quot;</span> -depth 1 | cut -d <span class="string">&#x27;/&#x27;</span>  -f 2 | cut -d <span class="string">&#x27;.&#x27;</span> -f 1)</span><br><span class="line">plist=$(find <span class="variable">$projectName</span> -name <span class="string">&quot;*.plist&quot;</span> -d 1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># buildnum +1 </span></span><br><span class="line">shortVersion=$(/usr/libexec/PlistBuddy -c <span class="string">&quot;Print CFBundleShortVersionString&quot;</span> <span class="string">&quot;<span class="variable">$&#123;plist&#125;</span>&quot;</span>)</span><br><span class="line">buildnum=$(/usr/libexec/PlistBuddy -c <span class="string">&quot;Print CFBundleVersion&quot;</span> <span class="string">&quot;<span class="variable">$&#123;plist&#125;</span>&quot;</span>)</span><br><span class="line">buildnum=$(expr <span class="variable">$buildnum</span> + 1)</span><br><span class="line"></span><br><span class="line">/usr/libexec/Plistbuddy -c <span class="string">&quot;Set CFBundleVersion <span class="variable">$buildnum</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;plist&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for Apple Watch </span></span><br><span class="line">WatchAppPlist=$(find WatchApp -name <span class="string">&quot;*.plist&quot;</span> -d 1)</span><br><span class="line">WatchAppExtensionPlist=$(find <span class="string">&#x27;WatchApp Extension&#x27;</span> -name <span class="string">&quot;*.plist&quot;</span> -d 1)</span><br><span class="line"></span><br><span class="line">/usr/libexec/Plistbuddy -c <span class="string">&quot;Set CFBundleVersion <span class="variable">$buildnum</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;WatchAppPlist&#125;</span>&quot;</span></span><br><span class="line">/usr/libexec/Plistbuddy -c <span class="string">&quot;Set CFBundleVersion <span class="variable">$buildnum</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;WatchAppExtensionPlist&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>Here is how to xcodebuild your ipa in the <em>build</em> folder </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rm -rf build</span><br><span class="line"></span><br><span class="line">xcodebuild clean archive -archivePath build/<span class="variable">$YourApp</span>-Beta \</span><br><span class="line">-scheme <span class="variable">$YourAppScheme</span></span><br><span class="line"></span><br><span class="line">xcodebuild -exportArchive \</span><br><span class="line">-exportFormat ipa \</span><br><span class="line">-archivePath <span class="string">&quot;build/<span class="variable">$YourApp</span>-Beta.xcarchive&quot;</span> \</span><br><span class="line">-exportPath <span class="string">&quot;build/<span class="variable">$YourApp</span>-Beta.ipa&quot;</span> \</span><br><span class="line">-exportProvisioningProfile <span class="string">&quot;<span class="variable">$YourtProvisioningProfile</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>then you can upload your *.ipa to your server ( for instance using curl) </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rm -rf build <span class="comment"># clean up</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># push to remote </span></span><br><span class="line">git config user.email <span class="string">&quot;bot@yourdomain.com&quot;</span></span><br><span class="line">git config user.name <span class="string">&quot;bot&quot;</span></span><br><span class="line">git commit -a -m <span class="string">&quot;<span class="variable">$buildnum</span>&quot;</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>

<p>How to post a message to Slack </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># post Slack $message </span></span><br><span class="line"><span class="function"><span class="title">post2Slack</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">	SLACK_HOSTNAME=<span class="string">&quot;hooks.slack.com&quot;</span></span><br><span class="line">	SLACK_CHANNEL=“<span class="comment">#YourChannel”</span></span><br><span class="line">	SLACK_BOTNAME=<span class="string">&quot;bot&quot;</span></span><br><span class="line">	ICON=<span class="string">&quot;:x:&quot;</span></span><br><span class="line">	SLACK_BOTEMOJI=<span class="string">&quot;:joy:&quot;</span></span><br><span class="line">	MESSAGE=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Send message to Slack </span></span><br><span class="line">PAYLOAD=<span class="string">&quot;payload=&#123;\&quot;channel\&quot;: \&quot;<span class="variable">$&#123;SLACK_CHANNEL&#125;</span>\&quot;, \&quot;username\&quot;: \&quot;<span class="variable">$&#123;SLACK_BOTNAME&#125;</span>\&quot;, \&quot;text\&quot;: \&quot;<span class="variable">$&#123;ICON&#125;</span> <span class="variable">$&#123;MESSAGE&#125;</span>\&quot;, \&quot;icon_emoji\&quot;: \&quot;<span class="variable">$&#123;SLACK_BOTEMOJI&#125;</span>\&quot;&#125;&quot;</span>;</span><br><span class="line">curl -X POST --data-urlencode <span class="string">&quot;<span class="variable">$PAYLOAD</span>&quot;</span> <span class="variable">$getThisURLInYourSlackChannel</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># post2Slack &amp;&amp; exit </span></span><br><span class="line"><span class="function"><span class="title">post2SlackAndExitWithMsg</span></span>() &#123;</span><br><span class="line">	post2Slack <span class="string">&quot;<span class="variable">$&#123;1&#125;</span>&quot;</span> &amp;&amp; <span class="built_in">exit</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>then you can combine any commands like this: </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git push origin master || post2SlackAndExitWithMsg <span class="string">&quot;git push failed&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Harvard Positive Psychology</title>
    <url>/en/Harvard-Positive-Psychology/</url>
    <content><![CDATA[<p>I watched this course during the open period and took a lot of screenshots. This course helped me a lot. Because I cleaned up my old photos by the way today, it’s time to turn them into text. </p>
<blockquote>
<p>Psychological maturity is about the ability to willingly shift perspective. </p>
</blockquote>
<a id="more"></a>

<h2 id="Goal"><a href="#Goal" class="headerlink" title="Goal"></a>Goal</h2><blockquote>
<p>The step on the way to a destination that you deem valuable that is important to you. </p>
<p>So end goal can often be liberating. </p>
<p>One of the reasons is because love, and especially lust and passion wears over time. </p>
<p>They are also extremely sensitive, wise, way beyond their years, saintly, generous, benevolent </p>
</blockquote>
<h2 id="Exercise"><a href="#Exercise" class="headerlink" title="Exercise"></a>Exercise</h2><blockquote>
<p>The wonder drug: 30 minutes of physical exercise, 4 times a week.<br>At least 15 minutes of mindful exercise 6 or 7 times a week. </p>
<p>I have so many things to do. </p>
<p>Exercise should be the last thing to go. It is an <strong>investment</strong>. </p>
<p>You may lose that 45 minutes. But you’ll gain so much more. It’s such a good investment. Your memory actually gets better when you exercise. So you’ll get more buck for the bank in terms of time you study; your <strong>creativity and concentration</strong> levels go up </p>
<p>Whether you have ADD or not, especially if you have. </p>
</blockquote>
<h2 id="Relationship"><a href="#Relationship" class="headerlink" title="Relationship"></a>Relationship</h2><blockquote>
<p>People stay together out of a sense of duty, out of habit, because they think this is their lot in life. </p>
<p>A lack of alternative </p>
<p>“do unto others what you would unto yourself.” </p>
<p>“do not do unto yourself what you would not do unto others.” </p>
</blockquote>
<h2 id="Love"><a href="#Love" class="headerlink" title="Love"></a>Love</h2><blockquote>
<p>“Perfect love is rare indeed - for to be a lover will require that you continually have the subtlety of the very wise, the flexibility of the child, the sensitivity of the artist, the understanding of the philosopher, the acceptance of the saint, the tolerance of the scholar and the fortitude of the certain.” </p>
<p>But while perfect love doesn’t exist, <strong>true love dose</strong>. True love exists between imperfect humans. </p>
<p>I will find that right person. I don’t believe that. It’s simply not true. It’s not the matter of faith. </p>
<p>So what makes relationship unique? It’s not finding that one right person. Once again it’s cultivating that one chosen relationship. It’s by virtue of working together, of being together, of spending time together, of dedicating one another. That’s how we create the one chosen relationship. That’s how we create the one chosen relationship. </p>
</blockquote>
]]></content>
      <tags>
        <tag>Psychology</tag>
      </tags>
  </entry>
  <entry>
    <title>When a company become bigger</title>
    <url>/en/When-a-company-become-bigger/</url>
    <content><![CDATA[<p><strong>Doing the right thing</strong> is more important than <strong>doing the right thing</strong>. The previous sentence means that you have your own arguments and reasons. The correct ** measures your own justice, whether you can be responsible for your actions. But when you enter a big company, your manager cares about whether you can do things right. This is also the reason why startups are more powerful. </p>
<a id="more"></a>

<p>People are born social animals. If a group has fewer than 140 people, it can manage it by itself. Because everyone knows what others are doing, it is easy to have a common view of someone, and no one can be lazy. But when the team gets bigger, fog and shadows appear. Your abilities and abilities depend to a large extent on your manager, not based on your real contributions. </p>
<p>Most companies have hundreds of employees, which is why office politics is so common in large companies. How to deal with office politics is paramount. After all, this is related to your <strong>salary and promotion</strong>. If you want to do this, the best way is to become a politician. Everyone knows what is going on, but no one points out. Just like the emperor’s new clothes, the risk is that you might lose yourself. </p>
<p>This is why a good startup company is so attractive, but one day, the company will grow bigger because of its excellence. More and more strangers join, not everyone is friendly, if you still be yourself and don’t care about politics, it may cause inappropriateness, rumors will be everywhere, and when the new year comes , You have not been promoted for no reason. </p>
<p>The neutral way is to work like a robot without sharing any emotions and feelings, which will make your colleagues feel a certain professionalism. The disadvantage is that there is no chance to be regarded as a friend, but for people who have changed companies (no longer a startup), it is easier to accept than the previous company. </p>
]]></content>
      <tags>
        <tag>Career</tag>
      </tags>
  </entry>
  <entry>
    <title>Go home for the new year</title>
    <url>/en/Chinese-New-Year/</url>
    <content><![CDATA[<p>On the last day of 2016, most people in the Imperial Capital went home<br>The little mage boringly scans the discount website in the low-rent housing<br>Suddenly Q, who hadn’t moved for ten thousand years, suddenly broke the calm. The little mage looked at it and turned out to be a goddess<br>When he clicked on his head tremblingly, he saw four words: I am married </p>
<p>sudden </p>
<a id="more"></a>

<hr>
<p>Going home for the New Year has become a pain for the younger generation<br>As a second element, the little mage naturally knows the <strong>family calculation problem</strong> </p>
<blockquote>
<p>If your parents live for another 30 years, if you go home once a year on average for 5 days each time, minus the time for entertainment, eating, sleeping, etc., you can only stay with your parents for about 24 hours, and a total of 720 hours for 30 years , Almost a month </p>
</blockquote>
<p>In addition, according to the “Law on Protection of Rights and Interests of the Elderly” </p>
<blockquote>
<p>Family members should be concerned about the spiritual needs of the elderly, and must not ignore or neglect the elderly. Family members living separately from the elderly should visit or greet the elderly frequently </p>
</blockquote>
<p>In order to avoid facing prosecution, the little mage tries to meet his parents twice a year </p>
<hr>
<p>But in time, it will stagger the Spring Festival and other holidays<br>Because one holiday left a huge psychological shadow on the little mage:<br>I thought that it was the Ching Ming Festival in 2013. When the little mage asked the goddess to go to West Lake to play, he was shocked by the crowd when he went to Sudi after passing the music courtyard and wind lotus.<br>At that time, the little mage was standing at the entrance of Sudi, but he could only see the people on both sides and could not appreciate the slightest view of the beauty of West Lake. The little mage did not consider that the main reason was that he threw the pot anger on holidays because of his shortness </p>
<p>The Spring Festival is the first-class citizen in all festivals. Due to the traditions of the previous generation, it was asked by the seven aunts and eight aunts about the salary and the target to ask about a good opportunity to have children<br>And now that the next generation has appeared in this world, red envelopes are naturally indispensable. While the meager year-end bonus is given away, the face also has to smile: “Ah, this child is so beautiful.”<br>What’s even more exaggerated is that Guo Jia has now fully opened up the second child, and time comes Double is ready </p>
<hr>
<p>During the Spring Festival last year, the little wizards used [Thirty-Six Strategies of War](<a href="https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8D%81%E5%85%AD%E8%">https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8D%81%E5%85%AD%E8%</a> AE%A1) in the chain meter (25)<br>As a magician, he naturally knows how to buy a ticket, so he concealed himself (1), and deliberately delayed for five minutes before going to wait for work (4)<br>Later, he informed his parents that “the ticket is not available”, and then tried to get in (16), saying that even if the ticket is 8x, he must go home<br>Naturally, the little mage’s Baba Ma Ma was shocked by this bitter trick (24), and immediately said that you don’t need to come back… </p>
<p>With last year’s precedent, it’s much easier to replicate last year’s success this year </p>
<p>Until he saw a poster that exposed the truth: </p>
<blockquote>
<p>Going home during the New Year is the winner of life </p>
</blockquote>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>friends with benefits</title>
    <url>/en/Friends-with-Benefits/</url>
    <content><![CDATA[<p>I don’t know what happened, the software for gun-sharing began to be popular across the country. </p>
<p>Although the little mage was rejected by the goddess Ten Moves, as a scholar, he is still very clean<br>Douban has always only reposted on the reading and movie channels, and has never followed the group on the right to have this function. </p>
<p>The artillery friend mentioned today is the artillery friend of the little mage base friend </p>
<p>In the past, the little mage and jiyou often connected to the stars. I thought back then that they were still the heart of the swarm. Suddenly one day, the friend sent a Douban link, saying that he had found the goddess. </p>
<p>The little mage was shocked, and his friends left him </p>
<p>End </p>
<a id="more"></a>

<hr>
<p>However, ten days later, the base friend went online again and sadly said that he was rejected<br>Due to bad condition, StarCraft was slaughtered by the little mage 🐔 </p>
<p>Speaking of StarCraft, the Little Mage actually encountered an uncle from the StarCraft 1 era in the current Imperial Capital Company. He tentatively connected a round of 2 VS AI, and found it was 🐔, so he opened 1V1. For a while, he was happy to forget to choose the clan and had to 9D. I don’t want the uncle to be blocked, and the router will be disconnected if he wins. After two minutes, he claimed on QQ that he was embarrassed to be disconnected and he could no longer connect… </p>
<p>The little mage felt the same sickness and pityed each other, and taught him all the lessons he had summed up at the time, and then his friend chased the goddess. </p>
<p>End </p>
<hr>
<p>However, Lu Yao knows horsepower, and the goddess Jiyou thought was just a friend </p>
<p>For example, 🌰: A second friend was angry and ran away from home<br>Jiyou’s gunmates couldn’t find him and couldn’t solve the physiological problems, so they went to Douban to find passers-by gunmates, and they cried, made trouble, and hanged themselves at the door of Jiyou company.<br>Of course, a more scientific explanation is to arouse the attention of friends through self-abuse<br>However, this happens to be a lose-lose option in game theory </p>
<p>When the little mage was shocked by Jiyou’s patron soy oil,<br>Of course, the little mage feels that everyone should have the opportunity to repent and rehabilitate. People who are not sages and sages can do nothing, so this time I won’t talk to Jiyou.<br>And after all, there are other solutions, such as: </p>
<blockquote>
<p><a href="http://www.solidot.org/story?sid=44714">The man gives his girlfriend a tranquilizer so that he can continue playing the game</a><br>A man was fined 500 euros by a court in Castrop-Rauxel, Germany, because he sedated his ex-girlfriend in order to continue playing games. The judge considered this to be a “deliberate attack”… </p>
</blockquote>
<p>However, the situation has become more serious with the drift of time. For example, during the two interstellar games, the base friend was repeatedly unplugged by his gunmate and sat on the ground crying like a shrew. </p>
<p>Then the little mage secretly talked about it with his friends </p>
<p>Jiyou heard that he was wearing a green hat, furious, picked up a kitchen knife and slashed at the gun friend, splashing blood on the low-rent housing </p>
<p>Jiyou was arrested, murdered passionately, sentenced to death with a reprieve, and ended in hatred </p>
<hr>
<p>I don’t want my friends to believe in women’s rights and don’t care much about it </p>
<p>Although it is related to his official career, the base friends are in their prime of life. They are full of energy and have nowhere to release, and they are not fully aware of the relationship between the soul and the flesh. They fall into a carnal and unable to extricate themselves, and are afraid of returning to a LOL state </p>
<p>“So, they won’t break up” the little mage commented rashly </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>Soylent</title>
    <url>/en/Soylent/</url>
    <content><![CDATA[<p>Ever since the little mage bought a bottle of Soylent at a high price from a high-level magician, he has liked this stuff. </p>
<p>When the little mage was still in heaven, he used to go to the West Lake District Library<br>At that time, there was a fire in July, and as a Guo Jia building, it naturally had an industrial-grade cooling device </p>
<p>Ever since it became a holy place for the little mage, I often sit for a day </p>
<p>In the past, the magic weapon energy of the little mage lasted at most 1 hour<br>Later, I bought a <code>R, 13-inch, Mid 2013</code> and it was no problem for a few hours. Later, I just read the book or sister paper. </p>
<p>But there are so many people in the library, and the citizens of heaven are so diligent. Whether on weekends or even on weekdays, the door opens at 8:30, and there is no place for the little mage after 9:00. </p>
<p>So how to recharge oneself has become a top priority. If you quit eating at noon and then you come back, you will be a duo and you will feel like grabbing a seat in the Magic Academy. </p>
<p>So if you had this stuff at that time, just buy a 1L cup, bring 750ml of powder, plus the pure water provided by the library, you can sit in the wasteland. </p>
<a id="more"></a>

<hr>
<p>The little mage once calculated a time account: </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [准备, 做饭, 吃饭, 洗碗]</span></span><br><span class="line"><span class="keyword">let</span> 标准耗时 = [<span class="number">10</span>, <span class="number">30</span>, <span class="number">15</span>, <span class="number">10.0</span>]</span><br><span class="line"><span class="keyword">let</span> 系数 = [<span class="number">0.5</span>, <span class="number">1</span>, <span class="number">0.7</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> 一天总耗时 = 标准耗时.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + $<span class="number">1</span> &#125; * 系数.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + $<span class="number">1</span> &#125;</span><br></pre></td></tr></table></figure>

<p>It’s almost three hours a day </p>
<p>So little wizards often imagine that one day when the wizards charge their magical instruments, they can charge them together with themselves due to physical contact.<br>For example, the transport aircraft in SC2 is a chestnut, and it is still remote<br>Sometimes I feel aggrieved. The price of Embody is actually not enough to carry the bio-charge function. </p>
<p>And the feed solves these time-consuming steps very well<br>Especially after the version is upgraded to 2.0, you don’t even need to shake the cup<br>In addition, the old version 1.5 is discounted to 54$, plus 100 ￥ for shipping, even if the exchange rate soars, each meal will be more than 20 oceans. </p>
<blockquote>
<p>There is no perfect thing in the world. Everything is good and there must be disadvantages. To be a man, we must learn to weigh the pros and cons and make rational choices —— People’s Daily Online </p>
</blockquote>
<p>However, feed has three big mountains </p>
<ol>
<li>taste </li>
<li>Nickel and mercury exceeded Canadian standards </li>
<li>Increase blood sugar </li>
</ol>
<blockquote>
<p>The ability to solve problems is usually the product of careful and systematic thinking, and any talented person can acquire this ability<br>–McKinsey Thinking </p>
</blockquote>
<ol>
<li><p>The celestial dynasty is often famous for its delicacies<br>But after the eighteen years of Ma Ma’s cooking training, the little mage didn’t want to eat rice. </p>
</li>
<li><p>Imperial Capital </p>
</li>
</ol>
<p>The last one is more difficult to handle, there is a feeling of fullness, but there is no chewing feeling<br>In addition, as a fluid type food, it can only stay for ten minutes, while food usually takes several hours.<br>In short, there is only transformation, no elimination </p>
<p>So the little mage has breakfast latte eggs, lunch cooking oil, dinner feed </p>
<p>Converted to a stable input box per month </p>
<hr>
<p>This time I didn’t go home during the Chinese New Year, the little mage was afraid that the supermarket would close, so he reserved a box in advance.<br>When he pinched his nose and poured it hard for half a cup, he looked at his weak chicken and felt that he should add some real meat<br>It’s not worth buying to open the frequently brushed horse<br>When I checked out, I suddenly found four big characters next to it: For Dogs </p>
<p>Well, this must be caused by long-term feeding<br>Little Mage used his stomach to analyze </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>High Templar Mage</title>
    <url>/en/High-Templar/</url>
    <content><![CDATA[<p>During the year of Little Mage Gap, he experienced various fusion blows<br>However, the most annoying one is technology selection </p>
<p>As early as in the Academy of Magic (2011), the little wizard wanted to learn iOS. After looking at it, he asked for money and turned to Android. </p>
<p>At that time, the little mage still used the plague to die. I just learned that there is another operating system called Linux. The portable tool Nokia occupies a large area. Naturally, there is no concept of . I only know that Jobs on the news died of cancer, which is a change. Who lost the world<br>After I saw one of the three major lectures <a href="http://news.stanford.edu/news/2005/june15/jobs-061505.html">Stay Hungry. Stay Foolish</a>, it was already two years later. </p>
<blockquote>
<p>PS: The other two are [The Fringe Benefits of Failure, and the Importance of Imagination] by JK Rowling in Harvard (<a href="http://news.harvard.edu/gazette/story/2008/06/text-of-jk-">http://news.harvard.edu/gazette/story/2008/06/text-of-jk-</a> rowling-speech/), Randy Pausch’s <a href="http://www.cmu.edu/randyslecture/videos/">Last Lecture</a> in CMU are all thought-provoking and good videos that are worth pondering </p>
</blockquote>
<a id="more"></a>

<hr>
<p>After watching several classes on Android, it was 886, and there was no special reason, but the interest of playing C was not triggered in the process. </p>
<p>In the blink of an eye, the school recruits, due to the remoteness and not many companies, the preaching is basically at the University of Science and Technology and the Joint University. The young master has a degree of 233, so he naturally suffers discrimination.<br>After dozens of miserable defeats, I was finally moved to heaven. A NASDAQ gave an offer, which is affiliated to the pre-research department. The location is still a dream paradise.<br>The little mage had no tears and immediately signed a contract </p>
<p>HR MM said that the company is undergoing transformation, from C fart to Android<br>Ever since, the little mage who is afraid of entering and leaving the job, in his senior year, once again bit the bullet to learn Android </p>
<p>The twisted melon is not sweet, history repeats itself, and 886 </p>
<hr>
<p>The <strong>pre-research department</strong> originally imagined by the little mage was a place similar to the academy described in “The Beauty of Programming”<br>However… Most of the time, the Philosopher’s Stone (Jar) is made from Java and incorporated into the source element. After that, the little mage summons a modified Android with Ubontu, and then burns it to each place by the live siege lion. High-level simulation </p>
<p>Having said so much, it can be summarized in two practical words: shanzhai </p>
<p>And a simple effect of Android requires a lot of Java, plus Java’s own characteristics remain unchanged, leading to the birth of various shooting modes, and the little mage is exhausted. </p>
<p>So looking back now, I don’t know if it’s Shanzhai or Java. It’s really bad.<br>Until now, the little mage still has all kinds of dissatisfaction with the spells that this mage world uses most frequently all the year round (* ￣︿￣) </p>
<blockquote>
<p>PS: Lambda and functional are provided in 8, which looks much more concise </p>
</blockquote>
<p>More than half a year later, the little mage accidentally discovered <a href="https://developers.google.com/edu/python/">the python class of the gully</a>. For the little mage who only had contact with the CC ass shell Java, It’s a cardiotonic shot </p>
<hr>
<p>During the Gap Year, the little mage found a better ruby. After finishing the question on <a href="https://www.codecademy.com/">Codecademy</a>, he just felt that it was inconvenient to watch the sunburst on the phone, and the official statement was not As a PC terminal, I want to make one myself </p>
<p>However, the appearance of 🐶🐺 disrupted the little mage’s plan </p>
<blockquote>
<p>PS: Ruby is a weakly-typed dynamic language, that is, different types can be assigned, and they can change themselves at runtime, so there is often a line of code that does hundreds of lines of things for others<br>Yukihiro Matsumoto also mentioned in “Program World” that the primary goal of Ruby design is: cool </p>
</blockquote>
<blockquote>
<p>But the trouble is that in order to ensure correctness, we must constantly use tests to constrain<br>The result is that the longer and longer the test is, the more it will be written<br>Generally small and beautiful, but not suitable for large-scale collaboration<br>Strongly typed static languages can detect many errors at compile time </p>
</blockquote>
<blockquote>
<p>Golang itself is strongly typed, but provides some convenient syntactic sugar<br>The most shocking thing is that when there was a lot of demand, the author first wrote formatter<br>This is one of my favorite features, it saves much time for code formatting.<br>Speaking of the first Gopher🇨🇳, the author also came to Shanghai and talked about the realization of this Dongdong </p>
</blockquote>
<hr>
<p>Even though ruby has all the benefits, after the little mage has tested the two spells 🍐, he embraced 🐶🐺 </p>
<p>At this time, most of the planned gap time has passed<br>If the sauce goes down, the little mage may have gone to the full stack of siege lions<br>However, a decisive event occurred before, switching the branch lit by the magic stack </p>
<p>For some unknown reason, the little mage after choosing 🐶🐺, without any income, actually upgraded his magical equipment, replacing his father’s plague with his own rMBP </p>
<p>After completing the Demo-level website, the little mage bought a certificate and was surprised by Xcode when he came up. Σ( ° △ °|||)︴, I thought of binding the button to respond to events on Android back then, and got a bunch of code, which I used in Xcode Ctrl + drag line is done in this elegant way </p>
<p>Later, in the process of Master Stanford White Beard’s <a href="http://cs193p.stanford.edu/">cs193p</a>, <em>Head First iPhone Development</em>, <em>iOS 7 Programming Cookbook</em>,<br>The word “artwork” often comes to mind </p>
<p>After that, everything went smoothly </p>
<hr>
<p>Full stack out of Archon since ancient times </p>
<p>The little mage avoids this way, how many have his own little abacus<br>The main reason is that the full stack is too tiring, in a sense, it is all dry<br>And this also means that leisure time is infinitely compressed </p>
<p>The smaller the ability, the smaller the responsibility<br>In the final analysis, Little Master is just a good kid who likes to read in his free time. </p>
<hr>
<p>But he is too naive </p>
<p>On the way to the advanced temple mage, &gt;&gt; these pits </p>
<h3 id="WWDC"><a href="#WWDC" class="headerlink" title="WWDC"></a>WWDC</h3><p>100+/year, the little mage’s feet are shaking when downloading<br>However, in Stockholm, I will clap my hands excitedly when I see Cool’s technology. </p>
<h3 id="Adapted-version"><a href="#Adapted-version" class="headerlink" title="Adapted version"></a>Adapted version</h3><p>Little Mage has been tortured by different Android screens, stupidly thinking that the iPhone is only one screen size<br>After a year… </p>
<h3 id="Swift-pains"><a href="#Swift-pains" class="headerlink" title="Swift pains"></a>Swift pains</h3><p>Various bugs, including the built-in system… </p>
<hr>
<p>The most tragic thing is that the little mage found another sinkhole </p>
<h3 id="Design"><a href="#Design" class="headerlink" title="Design"></a>Design</h3><p>In the past, the little mage was blind, like fungus listening to IE 800, and did not distinguish between color difference pixels<br>Gradually improved after entering the pit, but the understanding of Design is still in the category of Shooting Lion </p>
<p>As a result, Frederick Brooks, the author of “The Myth of Human Moon”, published the book <em>The Design of Design</em> and patted it on the face of the little mage, and the author of another <em>Designing Design</em> with a similar name was known for his indifference to his mother 🐔 Advisory Committee member Japan Print Design Master Kenya Hara </p>
<p>At this point, there are three more branches on the little mage’s technology tree </p>
<ul>
<li>Sketch </li>
<li>photography </li>
<li>Keynote </li>
</ul>
<p>Fortunately, these are what the little mage longs for<br>After all, what made the little mage determined to enter the pit was that the feeling of “art” could be realized on a cold machine. </p>
<p>This is crying, isn’t it? </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
      </tags>
  </entry>
  <entry>
    <title>This certificate has expired</title>
    <url>/en/This-certificate-has-expired/</url>
    <content><![CDATA[<h2 id="This-certificate-has-expired"><a href="#This-certificate-has-expired" class="headerlink" title="This certificate has expired"></a>This certificate has expired</h2><p><code>keychain -&gt; View -&gt; Show Expired Certificates -&gt; System</code> </p>
<p><code>Apple Worldwide Developer Relations Certification Authority</code><br><code>Monday, February 15, 2016 at 2:56:35 AM China Standard Time</code> </p>
<p>delete the certificates </p>
<p>Download the new <a href="https://developer.apple.com/certificationauthority/AppleWWDRCA.cer">AppleWWDRCA.cer</a> </p>
]]></content>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Observer</title>
    <url>/en/Observer/</url>
    <content><![CDATA[<p>It seems that my observer is back. </p>
<p>When I finished reading <em>Being Friendly with Time</em>, I began to know the mental model, and it took me a month to finish reading that simple book. </p>
<a id="more"></a>

<p>When I am grateful that my mental model has improved, “Power Now”. The Spiritual Enlightenment Guide declares that the mind is a trap. The predictive ability of the mind only focuses on the future. It prevents you from knowing the power of the present. These different arguments puzzled me at the time. As I continued reading, the concept of observer appeared in my eyes. </p>
<p>The first time I heard that the observer was in my university. I read this word from <em>dark forest</em>. After I read a book on quantum mechanics, it fascinated me even more. </p>
<p>There is also a concept of observer in psychology. Not only is it different from the above idea (<a href="https://en.wikipedia.org/wiki/Observer_(quantum_physics)">Observer (Quantum Physics)</a>, it is also different from the <em>Design Pattern ([Observer Mode](https ://en.wikipedia.org/wiki/Observer_pattern))</em>. When I finished <em>Think on These Things</em> a year later, I tried to build an observer about myself.<br>Because usually, when you see others doing, things will be clearer. Weaknesses and blind spots are obvious, and you will find better solutions. </p>
<p>Fortunately, I achieved this goal during the gap period. There are two versions of me, one acting and one observer.<br>I don’t think the observer is equal to the superego, but it is clearly the guardian of the ego. </p>
<p>But when I came to work in Beijing a year and a half ago, all the works I built were ruined. My observer is gone. I have some new bed habits, such as watching my watch frequently, which exposed my anxiety and tension. </p>
<p>When I do something wrong, I feel exhausted. Fortunately, I had a long vacation and I went to my parents’ house. Although that city is not an outfield, it at least got me out of the super city. In addition, I had a deep discussion with my parents about dreams. They feel very helpless because our family is poor and the hotel prices are constantly rising. They don’t understand why I behaved so strangely. </p>
<p>After 10 days, my vacation expired and I felt very relaxed. </p>
]]></content>
      <tags>
        <tag>Me</tag>
      </tags>
  </entry>
  <entry>
    <title>🇺🇸-0-0</title>
    <url>/en/USA-0-0/</url>
    <content><![CDATA[<h2 id="American-Emperor-0-0"><a href="#American-Emperor-0-0" class="headerlink" title="American Emperor-0-0"></a>American Emperor-0-0</h2><div id="googleMap6162" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap6162'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 10,
       'center': new window.google.maps.LatLng( 37.6938029 , -122.4740425 ),
     },
     target = document.getElementById('googleMap6162'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 37.6213129 , -122.3811441 ),
        'map': map,
        'title': 'San Francisco International Airport',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'San Francisco International Airport'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 37.7505427 , -122.4136408 ),
        'map': map,
        'title': '1225 York St',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: '1225 York St'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<h2 id="lottery"><a href="#lottery" class="headerlink" title="lottery"></a>lottery</h2><p>Little Mage wrote Swift for more than a year in 15 years and was told to watch WWDC session<br>Somehow, I don’t know what WWDC is. I checked it and clicked on a section<br>I was surprised to find that even though English is not good, I can do it with a guess.<br>Thinking of the Android tutorials back then, completely in the mist<br>So I was full of good feelings in an instant, and I went through most of the videos of the year and benefited a lot. </p>
<p>Later learned that as long as there is a developer account, Visa/MC credit card, you can draw a lottery<br>Register at <a href="https://developer.apple.com/wwdc20/">official website</a> at the beginning of March every year. There is only one week, so please don’t miss it </p>
<p>Due to the large number of people,  will randomly select some lucky (reimbursed by the company) or unlucky (own expense) leeks to give 10,000 tickets 🎫<br>Afterwards, whether to go or not, deduct the money first<br>No matter if the U.S. visa is refused or denied entry, the money will not be refunded<br>Tickets are also forbidden to transfer and can only be sent to other developer accounts of the same company<br>In short, don’t even think about refunding the lottery, so think about it clearly </p>
<p>But fortunately, it was never his turn for this kind of thing, so I signed up without thinking. </p>
<h2 id="Winning"><a href="#Winning" class="headerlink" title="Winning"></a>Winning</h2><p>The draw result will be announced before the end of March </p>
<p>Suddenly received a deduction text message of $1599 from China Merchants Bank at night and a stolen card call<br>To prove to the bank that he is himself<br>Wake up at noon the next day to receive a confirmation email<br>I hurriedly called my friends and were told to prepare visas and hotels </p>
<p> is to provide some hotels near the venue, but the price of goose is very , the cheapest is also $229 per night<br>Thinking of the principle of being close alone, I can only bite the bullet and make an appointment </p>
<p>Fortunately, a colleague said that although the lottery was not drawn, he still wanted to see<br>In addition, he has two friends who can fly from Canada 🇨🇦 and 🇺🇸 Central America to San Francisco to play </p>
<p>So I quit the hotel and booked an Airbnb that looked good </p>
<p>And my friend can drive, book a Herz </p>
<p>Simply perfect </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-01.jpg" alt=""></div></div></div>

<h2 id="visa"><a href="#visa" class="headerlink" title="visa"></a>visa</h2><p>First have a passport<br>Different from those who just got off the plane abroad<br>I haven’t been there before<br>Fortunately, I did it by the way when I went back to my hometown to visit my parents in 15 years. </p>
<p>Then make an appointment on <a href="https://www.ustraveldocs.com/cn_zh/index.html">official website</a><br>Pay online and make an appointment for the interview </p>
<p>It turns out that applying by myself is faster than Taobao agent<br>Jump to China CITIC Bank from the payment page<br>The page is ancient at first glance and thought it was a phishing website… </p>
<h2 id="Face-to-face"><a href="#Face-to-face" class="headerlink" title="Face to face"></a>Face to face</h2><p>The imperial capital’s U.S. Embassy in Beijing is in Sanyuanqiao, Chaoyang District </p>
<p>Ask for leave in the afternoon of the interview<br>After arriving at the embassy, I was dumbfounded. I had only seen such a long team during the Spring Festival before.<br>The people waiting for the interview have twists and turns, and there are 10,000 Z-shaped dragons lined up with 18 bends on the mountain road<br>Creeping for 3 hours before seeing the interview window </p>
<p>There are a total of 5-6 interview windows in Chinese, and 1 in a deserted English window </p>
<p>My friend suddenly said that he can speak English anyway, go to the English window, no need to wait<br>Think about it, decided to give it a try </p>
<p>The interviewer is a grandmother, and I can’t remember exactly what he said at the time, roughly: </p>
<p>…<br>小： invite us to join their conference<br>The old grandma said in surprise<br>Are you working for Apple?<br>(Thinking about it: emmm, 2019 is really, but unfortunately the timeline is only 2016, so I have to say)<br>小：No, it’s a developer conference.<br>老：Why they invite you?<br>… </p>
<p>Open the folder and take out the Invitation Letter of ,<br>The old grandma pointed to the Chinese window next to him and asked them to go to the Chinese window on the side </p>
<p>The security lady who was keeping order next to them saw that they were kicked off and asked what happened.<br>Hearing this, I sighed, but fortunately, I didn’t directly refuse, so I asked them to wait for a while beside her. </p>
<p>Then the Chinese interview was a foreign lady<br>She was also confused. Conference<br>It is guessed that people in non-IT circles don’t know what Conference is<br>So she took out the invitation letter, Miss Sister said she didn’t want to read it, and continued to ask him to explain why </p>
<p>The little mage was stunned. If it was probably because of the language before, why didn’t I read the material this time<br>Because other people have a lot of interview experience, I only heard that those who did not bring the documents were rejected, and they didn’t read the documents if they hadn’t heard.<br>Fortunately, my friend said it was Developer Meeting, my sister understood it in seconds (😓…) </p>
<p>Then I asked if the U.S. Emperor had any relatives, how long he was there, when he would come back, and where to live. </p>
<p>Waited for a long half minute<br>Miss sister smiled and said congratulations, the visa passed<br>You will receive your passport by mail in about a few working days </p>
<p>Twists and turns, not particularly happy<br>I thanked him and went back with my friends </p>
<p>Later, a long-lived in Boston heard that there was a Chinese interview<br>You can also meet with two people<br>You can also drag the family to the noodles together<br>My jaw dropped </p>
<p>U.S. visa<br>Already fallen<br>He said </p>
<h2 id="Air-tickets"><a href="#Air-tickets" class="headerlink" title="Air tickets"></a>Air tickets</h2><p>I didn’t know that United Airlines had a bad evaluation when I was on the ticket.<br>And there was no notorious assault on Asians </p>
<p>In fact, no matter which flight, 12 hours of continuous flight, it will become a corpse<br>United Airlines is not so strict about shutting down 📴, ✈️ took a picture of the horizon </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-02.jpg" alt=""></div></div></div>

<p>I never expected that the flight number UA888 would be encountered in FANNG’s Assignment four years later </p>
<h2 id="Entry"><a href="#Entry" class="headerlink" title="Entry"></a>Entry</h2><p>After getting off the plane, enter </p>
<p>There has always been an illusion somehow, a group of snipers ambush behind the customs<br>The suspect will be killed on the spot<br>Coupled with stepping into the territory of another country for the first time, it is still a bit nervous </p>
<p>The customs asked a few common questions, such as why are you here, stay a few days<br>According to the visa situation, it’s not called Conference, but Developer Meeting<br>Then the customs stamped it </p>
<p>After I got my passport back, I immediately appeared calm and calm, but in fact I speeded up my pace and went inside<br>For fear of being shot </p>
<p>After seeing some people who picked up the airport, I remembered that the little friend hadn’t come<br>After waiting for a long time and thinking that my little friend GG, I saw him<br>It turned out that Conference was checked for a while </p>
<p>Conference is really poisonous 😂 </p>
<h2 id="city-center"><a href="#city-center" class="headerlink" title="city center"></a>city center</h2><p>Pick up the car from the airport and drop off your luggage on Airbnb 🧳 </p>
<p>It’s quite far from Sanfan Airport ✈️ to Downtown<br>Unexpectedly, this kind of distance would have to be blocked in the emperor for 10,000 years, and it would be 20 minutes. </p>
<p>🏠 It’s exactly the same as what Airbnb saw, no fraud<br>It’s just that the House has two floors, like a wooden structure, and there is another tenant upstairs, so there will be noise when running.<br>There is a garden behind, very nice </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-04.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-05.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-07.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-08.jpg" alt=""></div></div></div>

<h2 id="Yosemite"><a href="#Yosemite" class="headerlink" title="Yosemite"></a>Yosemite</h2><blockquote>
<p>In 1984, Yosemite was selected as a World Heritage Site, and its spectacular granite cliffs, waterfalls, clear streams, giant redwood forests and biodiversity are internationally recognized </p>
</blockquote>
<p>On the way out to fish in the mountains, to Yosemite about 3 hours drive, I saw a group of big windmills on the road<br>I turned around and suddenly saw the OS X Yosemite wallpaper<br>All I saw in China before were earth mountains ⛰️, this is the first time I have seen this bare and steep granite<br>So that the false belief that foreign mountains are harder than China’s </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-25.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-12.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-14.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-20.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-21.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-00-24.jpg" alt=""></div></div></div>

<p>Really incredible </p>
<p>Watching the sunset on the way back 🌇 in a daze </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>USA</tag>
        <tag>🇺🇸</tag>
      </tags>
  </entry>
  <entry>
    <title>🇺🇸-0-1</title>
    <url>/en/USA-0-1/</url>
    <content><![CDATA[<h2 id="American-Emperor-0-1"><a href="#American-Emperor-0-1" class="headerlink" title="American Emperor -0-1"></a>American Emperor -0-1</h2><div id="googleMap4892" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap4892'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 12.5,
       'center': new window.google.maps.LatLng( 37.781577 , -122.456913 ),
     },
     target = document.getElementById('googleMap4892'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 37.7781302 , -122.4175138 ),
        'map': map,
        'title': 'Bill Graham Civic Auditorium',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Bill Graham Civic Auditorium'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 37.8019619 , -122.4192982 ),
        'map': map,
        'title': 'Lombard Street',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Lombard Street'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 37.8085488 , -122.41018 ),
        'map': map,
        'title': 'Fisherman&#39;s Wharf',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Fisherman&#39;s Wharf'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 37.7591086 , -122.5116423 ),
        'map': map,
        'title': 'Ocean Beach',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'Ocean Beach'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a> 

<h2 id="Badge"><a href="#Badge" class="headerlink" title="Badge"></a>Badge</h2><p>Go to Bill Graham Civic Auditorium the next day<br>You can get badges if you show your passport </p>
<p>The picture is next to <a href="https://en.wikipedia.org/wiki/San_Francisco_City_Hall">San Francisco City Hall</a> </p>
<blockquote>
<p>San Francisco City Hall is the seat of government for the city and county of San Francisco, California. It reopened in the open space of the City Civic Center in 1915. It is a microcosm of the American Renaissance from the 1880s to 1917, and is a monument to aesthetic art. The dome of the building is 42 feet higher than the dome of the United States Capitol. </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-00.jpg" alt=""></div></div></div>

<p>In the next few days, you need to swipe the badge to enter the venue </p>
<p>If you lose it, uh… admit it’s bad luck,  don’t lose it </p>
<p>Also sent an ugly coat 🧥<br>I don’t understand why it’s so hot that I don’t send out T-shirts but coat </p>
<p>After understanding the peculiarities of San Francisco, he died in the sun<br>The sea breeze blows and trembles in the shadows<br>So that ugly coat 🧥 played an important role </p>
<p>When I passed by again at night, the venue became 🏳️‍🌈 </p>
<h2 id="LGBT-🏳️‍🌈"><a href="#LGBT-🏳️‍🌈" class="headerlink" title="LGBT 🏳️‍🌈"></a>LGBT 🏳️‍🌈</h2><p>I noticed very early that there are small colorful flags hanging around 🏳️‍🌈, I just thought it was fun at first, and my thinking inertia was wondering why it wasn’t 🇺🇸 flag<br>T who flew from another state said it was LGBT<br>And at the end of the month there will be <a href="https://en.wikipedia.org/wiki/San_Francisco_Pride">The SF LGBT Parade and Celebration</a> </p>
<blockquote>
<p>The San Francisco Lesbian, Gay, Bisexual and Transgender Pride Celebration (formerly known as International Lesbian Freedom Day, Gay Freedom Day, Christopher Street West), commonly known as “San Francisco Pride”, is held in San Francisco, California at the end of June every year Parades and festivals to celebrate lesbian, gay, bisexual and transgender (LGBT) people and their allies. The 49th annual parade in 2019 included 289 parades, which the official website called “the largest gathering of LGBT people and allies in the United States.” </p>
</blockquote>
<p>Later this Miss T said that she has a girlfriend<br>The little mage who has been single for ten thousand years was silent for a long time and was speechless </p>
<h2 id="Jiuquhua-Street"><a href="#Jiuquhua-Street" class="headerlink" title="Jiuquhua Street"></a><a href="https://en.wikipedia.org/wiki/Lombard_Street_(San_Francisco)">Jiuquhua Street</a></h2><blockquote>
<p>The most well-known section of Lombard Street is the “Jiuquhua Street” on the Russian hills. Jiuquhua Street is the section between Hyde Street and Leeviworth Street. This is because it is the most curved street in the United States. There are a total of eight sharp bends in a short stretch of road, and only one-way traffic from Hyde Street to Leeviworth Street and downhill is allowed, while the San Francisco cable car runs on China Street. -The Hyde Street Line passes through the starting point of this section (that is, the location of the highest point at the intersection). This section of the very steep street was originally a straight line, but considering the safety of traffic and pedestrians, this section of the road was changed to the current curve in 1923. [2] This design was first proposed by the owner Carl Henry. [3] This design aims to use length in exchange for space to slow down the slope size (27%) along the line. [4] The entire Jiuquhua Street is 600 feet (180 meters) long, and the straight section is 412.5 feet (125.7 meters) long, and the pavement is paved with bricks to increase friction. The starting point is marked with a maximum speed limit of 5 mph (8 km/h). </p>
</blockquote>
<p>I believe everyone who has read the initial D will think of<br><a href="https://www.bilibili.com/bangumi/play/ep4643">Initial D Third Stage</a><br>Takumi vs. Xiaobaihai, Toyota AE86 vs. MR-2<br>55 minutes and 55 seconds of cornering </p>
<p>Unfortunately the above 👆 is just anime </p>
<p>In the real world<br>At that time, I didn’t have a driver’s license, and my fellow peers were not confident about turning around.<br>So in the end they parked the car 🚗 on the side of the road and called an Uber to Fisherman’s Wharf<br>And specifically instructed the driver to cross Jiuquhua Street </p>
<p>The driver was understanding and understanding and slowed down when cornering </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-04.jpg" alt=""></div></div></div>

<p>The sun is shining, the verdant is dripping, the flowers are blooming, and the flowers are colorful </p>
<p>BTW: Remember to bring filter (mo) lens 🕶️ </p>
<h2 id="Fisherman’s-Wharf-amp-Alcatraz"><a href="#Fisherman’s-Wharf-amp-Alcatraz" class="headerlink" title="Fisherman’s Wharf &amp; Alcatraz"></a><a href="https://en.wikipedia.org/wiki/Fisherman%27s_Wharf,_San_Francisco">Fisherman’s Wharf</a> &amp; <a href="https://en.wikipedia.org/wiki/Alcatraz_Island">Alcatraz</a></h2><blockquote>
<p>The name and neighborhood features of San Francisco’s Fisherman’s Wharf come from the mid to late 19th century, when Italian immigrant fishermen took advantage of the influx of people brought by the gold rush to the early days of the city. Most Italian immigrant fishermen settled in the North Beach area near the pier and fished for local delicacies and Danji crabs. From then until today, the dock is still the center of the San Francisco fishing fleet. Although the area was re-developed as a tourist attraction in the 1970s and 1980s, there are still many active fishermen and their fleets. </p>
</blockquote>
<p>There is a big crab in the square 🦀️ </p>
<p>The grocery store next to it is full of all kinds of Made in China goods </p>
<p>Devil 😈 island </p>
<blockquote>
<p>Visitors can take a ferry from Pier 33, located between the San Francisco Ferry Building and Fisherman’s Wharf, to reach the island in less than 15 minutes. </p>
</blockquote>
<p>Wharf ⛵️ There are heroes of World War II, retired warships and submarines next to it </p>
<p>Some people in the square are playing music 🎵<br>What impressed me was that there was an old grandpa playing a very happy tune there, as if there were no pedestrians around<br>Is this flow? So that I have the urge to tip<br>This has also become a long-term regret </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-10.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-14.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-17.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-18.jpg" alt=""></div></div></div>

<p>Heaven, blue like poisoned </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-16.jpg" alt=""></p>
<h2 id="Infinite-Loop"><a href="#Infinite-Loop" class="headerlink" title="Infinite Loop"></a>Infinite Loop</h2><p>I always thought that the spaceship was Infinite Loop<br>As the name implies, an infinite loop<br>But the goose is not<br>It’s actually a park with a Visitor Center </p>
<p>I don’t know if there is a commemorative T-shirt here<br>I chose a Metal one </p>
<p>As for Park<br>Still under construction… </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-20.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-21.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-23.jpg" alt=""></div></div></div>

<h2 id="Stanford"><a href="#Stanford" class="headerlink" title="Stanford"></a>Stanford</h2><p>Came out after going around<br>I feel like I was brought here when I was young<br>Maybe you can take 50 more points in the college entrance examination </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-27.jpg" alt=""></div></div></div>

<h2 id="California-State-Route-1"><a href="#California-State-Route-1" class="headerlink" title="California State Route 1"></a>California State Route 1</h2><h2 id="California-Highway-One"><a href="#California-Highway-One" class="headerlink" title="California Highway One"></a>California Highway One</h2><p>How romantic the sea in the movie is, holding hands and walking slowly along the beach<br>Have been living inside the mainland<br>Find sister paper and go to see the sea<br>Has become a dream </p>
<p>I saw the Pacific Ocean before the sea<br>Ran Goose California Beach<br>The sand is very prickly<br>I didn’t pay attention to the sea water 🌊 rushed up without passing the trouser legs<br>The scared little mage backs away again and again<br>The sea breeze is salty and fishy, and there are kelp bodies everywhere on the beach<br>There is no epiphany when I see the sea level<br>But the sun is particularly dazzling<br>When I went back at night, he and his friend had sunburns of varying degrees </p>
<blockquote>
<p>Any exposed part of the body–including earlobes, scalp, and lips–can be burned. Even covered areas can be burned, for example, if your clothes have loose weaves that allow ultraviolet (UV) light to pass through. Your eyes are extremely sensitive to ultraviolet rays from the sun and may be burned </p>
<p>When UV photons hit the skin, they damage the DNA in human cells. It does so by breaking the ordered bonds between the four nucleotides of adenosine, thymine and guanine. The so-called formation of thymine dimers means that when two thymine nucleotides are combined together, the shape of the entire DNA molecule becomes imbalanced.<br>Cells with messy DNA usually commit suicide, a process called apoptosis. The cells have received so much radiation that they undergo apoptosis. </p>
</blockquote>
<p>Embarrassing 😅<br>Very poor experience<br>Not romantic at all…<br>The movies are all deceptive </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-36.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-37.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-38.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-34.jpg" alt=""></p>
<h2 id="Soylent-amp-iRobot"><a href="#Soylent-amp-iRobot" class="headerlink" title="Soylent &amp; iRobot"></a>Soylent &amp; iRobot</h2><p>Previously, I repeatedly emphasized that Xiaomi Robot 🤖️ does not have enough suction power, so you must buy iRobot<br>North American appliances are cheap, and just catch up with Amazon 700 series discounts 🈹️, more than 3,000 yuan </p>
<p>But at that time there was no 900 series with visual navigation<br>It’s still a random collision algorithm. If you are at home, you will feel the robot 🤖️ super silly<br>But when I came back from work, I found that the robot was still in the charging pile and had not moved.<br>If the floor were not clean, I thought I was lazy<br>In addition, the quality is pretty good. I knocked down the humidifier when I was away.<br>When I got home, I took a lot of water and thought it was broken, so I dumped the water. </p>
<p>Free shipping for bottled Soylent in China, buy a box as early as possible to prevent lazy bed in the morning </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-25.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-01-24.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>USA</tag>
        <tag>🇺🇸</tag>
      </tags>
  </entry>
  <entry>
    <title>🇺🇸-0-2</title>
    <url>/en/USA-0-2/</url>
    <content><![CDATA[<h2 id="WWDC-16"><a href="#WWDC-16" class="headerlink" title="WWDC 16"></a>WWDC 16</h2><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-20.jpg" alt=""></p>
<a id="more"></a>

<p>Participating in such a conference for the first time is so exciting 💥<br>I bought Soylent before and worried about it<br>Unlimited off-site food, fruit, and beverage<br>And healthy lunch </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-17.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-13.jpg" alt=""></div></div></div>

<h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>Session is not that important, after all, there is recording<br>Live demo often overturns<br>For example, the little sister who demonstrated Sticker’s iMessage kept Crash<br>After more than ten minutes of tossing, it finally succeeded, cheering on the court<br>These were all cut out in later recordings </p>
<p>Swift 2.0, Graphical Memory Leak, Tabs vs. Spaces, Metal Engine Rendering, Storyboard </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-03.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-04.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-07.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-09.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-14.jpg" alt=""></div></div></div>

<h2 id="Lab"><a href="#Lab" class="headerlink" title="Lab"></a>Lab</h2><p>What really matters is lab<br>You can bring questions that you don’t know, to a friendly <strong>question</strong> Apple engineer </p>
<p>Although the spoken language is not good, I went to the relevant Lab and asked some questions that I used to be puzzled. </p>
<ol>
<li><a href="https://leihao0.github.io/en/How-to-add-Xib-on-StoryBoard">How to add Xib on StoryBoard</a> </li>
<li><a href="https://leihao0.github.io/en/Reflection-in-Swift-via-Mirror">Reflection in Swift through mirroring</a> </li>
<li><a href="https://leihao0.github.io/en/Swift-Generics-in-protocol-and-enum">Swift Generic in Protocol and Enumeration</a> </li>
</ol>
<p>Remember that there is a gossip about why there is a horizontal line under the Navigation Bar<br>The engineer opened the source code (Obj-C) and looked at it, and then said that the design required it 😓 </p>
<p>Other sharing between midfield </p>
<h2 id="Homeland-amp-Marvel-Universe"><a href="#Homeland-amp-Marvel-Universe" class="headerlink" title="Homeland &amp; Marvel Universe"></a>Homeland &amp; Marvel Universe</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-23.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-25.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-26.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-16.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-15.jpg" alt=""></div></div></div>

<h2 id="The-Bash"><a href="#The-Bash" class="headerlink" title="The Bash"></a>The Bash</h2><p>Bash at 7pm on Thursday night </p>
<p>Have avoided such activities before<br>Silicon Valley S01E01 depicts such a scene at the beginning<br>The concert above desperately creates an atmosphere<br>The programmers below are quiet<br>Not even stray applause </p>
<p>Later, the classmates in the TL Friends group whose names were only missing one letter said<br>The effect is very good. Everyone swayed to the music one after another, very High </p>
<h2 id="Surrounding"><a href="#Surrounding" class="headerlink" title="Surrounding"></a>Surrounding</h2><p>The queue is long<br>However, a young lady in Hangzhou said that she must take a T-shirt back<br>I planned to wait until the last day there is no one to buy<br>It turns out that there is only a children’s model… </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-12.jpg" alt=""></div></div></div>

<h2 id="Return"><a href="#Return" class="headerlink" title="Return"></a>Return</h2><p>At that time, the country and the lock zone are now available, and you can still catch elves here </p>
<p>Then go back to pack up and go to the airport<br>I helped my friend bring a Bose QuietComfort 25 in the duty-free shop<br>Return the car and pass the security check<br>ended </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/usa-02-21.jpg" alt=""></div></div><div class="group-picture-row"></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>USA</tag>
        <tag>🇺🇸</tag>
        <tag>WWDC</tag>
      </tags>
  </entry>
  <entry>
    <title>Nothing to say</title>
    <url>/en/Nothing-To-Say/</url>
    <content><![CDATA[<p>I haven’t written anything for a long time. Perhaps writing entirely in English is an obstacle. </p>
<p>Too much happened in these two months. </p>
<p>First of all, the D-round financing of my company failed. </p>
<a id="more"></a>

<p>Our CTO had to reduce the number of programmers designing apartments by more than one-third, reducing three applications to one. Almost half of the programmers left. It seems that everything is back to the B round happy time.<br>However, some things can never go back. </p>
<p>My project iterated to version 1.6 and was cut off. So, no coding job, after that, I went to San Francisco to participate in WWDC16. </p>
<p>Second, do what you like. </p>
<p>Therefore, programming is my job, and it is my gap year after the iOS developer. </p>
<p>When I first started working, I subscribed to many technology blogs, but they never caught my attention. At the same time, I lost interest in everything and didn’t want to see anyone. </p>
<p>It may be caused by my lack of real hobbies. My only hobby was programming. </p>
<p>However, after going to Beijing, the most breathtaking super city in the world, two years ago, I finally had a little extravagant time to relax my body and spirit. </p>
<p>Third, after returning from SFO, I did readjust the importance of exercise. In developed countries, almost every elite will exercise. </p>
<p>When I saw the blue sky everywhere, the wide Pacific Ocean, the green leaves under the sun, and the houses on the mountains covered by mist.<br>I know there is a wonderful world in the world.<br>Maintaining your own heat is the most important, and everything else is secondary. </p>
]]></content>
      <tags>
        <tag>Self</tag>
      </tags>
  </entry>
  <entry>
    <title>Use AppleScript as an automatic hotkey on Mac</title>
    <url>/en/Use-AppleScript-as-AutoHotkey-On-Mac/</url>
    <content><![CDATA[<p>In order to do a good job of testing Soylent 1.6, I recently bought more than 20 boxes.<br>But there is a problem, Safari does not support automatic filling of the form, so I have to manually enter all the information of my credit card to pay for shipping and customs duties. So I have to manually enter all the information of my credit card to calculate shipping charges and duties. </p>
<a id="more"></a>

<p>All payment steps are only number, date, resume, password. </p>
<p>After repeating it again and again, I collapsed. </p>
<p>It should be automatic. </p>
<p>For the sake of god, when I was still using Windows four years ago, I thought of AutoHotkey. </p>
<p>Mac has AppleScript, which can simulate keyboard input and mouse clicks. </p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">&quot;Safari&quot;</span></span><br><span class="line">	<span class="built_in">activate</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">&quot;System Events&quot;</span></span><br><span class="line">	<span class="keyword">tell</span> process <span class="string">&quot;Safari&quot;</span></span><br><span class="line">		<span class="keyword">set</span> <span class="built_in">frontmost</span> <span class="keyword">to</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">-- you can get the screen coordinate by `cmd+shift+4` easily</span></span><br><span class="line">		click <span class="keyword">at</span> &#123;<span class="number">1420</span>, <span class="number">500</span>&#125;</span><br><span class="line">		<span class="comment">-- delay 1s which is for wait the website to load</span></span><br><span class="line">		<span class="built_in">delay</span> <span class="number">1</span></span><br><span class="line">		click <span class="keyword">at</span> &#123;<span class="number">1305</span>, <span class="number">615</span>&#125;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">delay</span> <span class="number">10</span></span><br><span class="line">		click <span class="keyword">at</span> &#123;<span class="number">1090</span>, <span class="number">369</span>&#125;</span><br><span class="line">		<span class="comment">-- simulate press **6** on keyboard</span></span><br><span class="line">		keystroke <span class="string">&quot;6&quot;</span></span><br><span class="line">		keystroke <span class="string">&quot;6&quot;</span></span><br><span class="line">		keystroke <span class="string">&quot;0&quot;</span></span><br><span class="line">		<span class="comment">-- ...</span></span><br><span class="line">		keystroke <span class="string">&quot;6&quot;</span></span><br><span class="line">		keystroke <span class="string">&quot;4&quot;</span></span><br><span class="line">		<span class="built_in">delay</span> <span class="number">1</span></span><br><span class="line">		click <span class="keyword">at</span> &#123;<span class="number">1083</span>, <span class="number">426</span>&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>And I discovered an interesting thing in the process, that is, <strong>cvv</strong> cannot be clicked by the script. </p>
<p>It seems that the bank’s website has really done some work in terms of security. </p>
]]></content>
      <tags>
        <tag>Mac</tag>
        <tag>AppleScript</tag>
        <tag>AutoHotkey</tag>
      </tags>
  </entry>
  <entry>
    <title>Dali-0</title>
    <url>/en/dali-0/</url>
    <content><![CDATA[<p>After returning from the U.S. Emperor, he started the runaway mode </p>
<p>See Air China activities before boarding<br>Can add money to upgrade </p>
<p>Remember 2015 New Year<br>The joking CTO bought first class<br>Tickets are so expensive<br>Must arrive before economy class </p>
<p>This time it’s my turn to be really incense<br>Although there is no first<br>But priority boarding, priority disembarkation<br>The friends who haven’t seen economy class in the whole process </p>
<hr>
<h2 id="Dali"><a href="#Dali" class="headerlink" title="Dali"></a>Dali</h2><p>Good overall impression<br>The homestay is very tidy<br>The mattress is also very comfortable </p>
<p>Although it’s raining lightly, but some<br>Tianjie’s light rain feels like a crisp<br>I also had authentic and delicious<br>Yunnan Bridge Noodles </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-01.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-03.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-04.jpg" alt=""></p>
<h2 id="Erhai"><a href="#Erhai" class="headerlink" title="Erhai"></a>Erhai</h2><p>The Erhai Lake in 2016 has been tightly surrounded by guest houses<br>You can only see the house when you go around<br>I can’t see the true face of Erhai Lake at all </p>
<p>Plus the scheduled roof leak<br>Can only change to a hotel facing Erhai Lake at a high price </p>
<p>A group of people go out to watch the Milky Way in the middle of the night<br>The path back to the hotel<br>A dog barking in a deep alley<br>A group of people intimidated themselves<br>More afraid<br>As if hit a monster<br>Do birds and beasts </p>
<p>The girl who was chatting in the hotel<br>Saw a large group of people break in<br>Thought he was robbed<br>Wow, I cried </p>
<p>In general<br>Very poor experience </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-06.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-07.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-08.jpg" alt=""></div></div></div>

<p>But human eyes look like a dark sky<br>Under Sony Dafa Alpha 7 it presents such a scene </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/dali-0-09.jpg" alt=""></p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Dali</tag>
        <tag>🇨🇳</tag>
      </tags>
  </entry>
  <entry>
    <title>Sync macOS ssh config with iCloud</title>
    <url>/en/Sync-macOS-ssh-config-with-iCloud/</url>
    <content><![CDATA[<p>As a developer, I sometimes have to restore the backup due to the “beta” system. </p>
<p>Fortunately, most of the data is on the server these days. Not only Safari, photos, calendar, Note, reminders, but other applications also use iCloud storage. This is a major advancement. I just need to reinstall the system and re-download the app from the App Store and <code>brew shell</code>. </p>
<a id="more"></a>

<p>But ssh, configuration, etc. settings are very annoying. Also, I may lose my private key. </p>
<p>So I created a new folder named “macOS” in the iCloud Drive folder, and copied all the files without “. “, for example: <code>.gitconfig</code> ~&gt; <code>gitconfig</code>. </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">macOS=/Users/art/Library/Mobile\ Documents/com~apple~CloudDocs/macOS</span><br><span class="line"></span><br><span class="line">ln -sf <span class="variable">$macOS</span>/gitignore .gitignore</span><br><span class="line">ln -sf <span class="variable">$macOS</span>/gitignore .gitignore_global</span><br><span class="line">ln -sf <span class="variable">$macOS</span>/gitconfig .gitconfig</span><br><span class="line"></span><br><span class="line">ln -sf <span class="variable">$macOS</span>/zshrc .zshrc</span><br><span class="line">ln -sf <span class="variable">$macOS</span>/config  .config</span><br><span class="line">ln -sf <span class="variable">$macOS</span>/ssh  .ssh</span><br><span class="line"></span><br><span class="line">mkdir -p Blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo </span></span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init Blog</span><br><span class="line"><span class="built_in">cd</span> Blog</span><br><span class="line">npm install</span><br><span class="line">rm -rf <span class="built_in">source</span></span><br><span class="line">ln -s ~/Documents/Blog/<span class="built_in">source</span> ~/Blog/<span class="built_in">source</span></span><br><span class="line"></span><br><span class="line">brew install ruby python pandoc</span><br><span class="line"></span><br><span class="line">brew install openssl youtube-dl ffmpeg pyenv rbenv rclone autojump mp4box</span><br><span class="line"></span><br><span class="line"><span class="comment"># ruby </span></span><br><span class="line">rbenv install 2.7.0</span><br><span class="line">rbenv global 2.7.0</span><br><span class="line"></span><br><span class="line">brew cask install iterm2  sourcetree vmware-fusion flux sublime-text shadowsocksx-ng clashx wwdc spectacle losslesscut iina dropbox typora istat-menus 1password calibre imageoptim plex-media-server vscode osxfuse firefox chromium</span><br><span class="line"></span><br><span class="line"><span class="comment"># preview </span></span><br><span class="line">brew cask install qlvideo qlstephen qlcolorcode quicklook-json qlmarkdown qlprettypatch qlimagesize suspicious-package provisionql</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Any cloud drive (such as Dropbox) can do this, but.<br>Considering privacy and this letter written by Tim Cook <a href="http://www.apple.com/customer-letter/">Information for Customers</a> </p>
<p>iCloud is my choice 😊 </p>
]]></content>
      <tags>
        <tag>macOS</tag>
        <tag>ssh</tag>
        <tag>sync</tag>
      </tags>
  </entry>
  <entry>
    <title>How do Chinese learn English</title>
    <url>/en/How-to-learn-English-as-a-Chinese/</url>
    <content><![CDATA[<p>Like 99% of Chinese students, I hate to memorize words in cruel ways. When we were young, we naturally learned our mother tongue without any pain. </p>
<p>So, when I was in a poor elementary school, I never remembered a word. </p>
<a id="more"></a>

<p>Actually, the fact is that I cannot remember words. Believe it or not, no matter how hard I try, I just can’t remember. Every time it’s my turn to write on the blackboard in this row, I have to look carefully left and right, copying word by word. </p>
<p>As a teenager at the time, I was curious, why could they do it? The method must be incompatible with my brain. </p>
<p>Fortunately, I saw another method in a grid book where a former champion announced that she didn’t memorize words. All she did was repeat NCE aloud more than 100 times. </p>
<p>Humph, it’s really good, so I tried it. This method helped me a lot because it allowed me to get a pretty good score in the college entrance examination, and I passed CET6 in college, even I sometimes know it. What are you reading. </p>
<p>Before IELTS, all early English tests were just a joke. </p>
<p>And there is another blind spot that I only realized recently. Exams are exams. You should master the key points and leave as soon as possible. </p>
<p>Before that, I firmly believed that as long as my true level was improved, I would be able to do the exam just like doing test papers every day, without extra effort. </p>
<p>But in fact, this requires a very high quality of people, far exceeding the requirements of the examination, this is an endless road. </p>
<p>14 years have passed since I first came into contact with English. After communicating with the dormitory a few months ago, I feel that I have only taken a small step. </p>
<p>Now I know that language is more like a human instinct. When the baby grows up, our brain neurons will be washed, because according to evolutionary psychology, our ancestors did not need to learn another language when they were young. </p>
<p>But we are now in a modern society. As far as I know, there are only two methods that sound reasonable, and more importantly, economics. </p>
<ol>
<li><a href="https://www.goodreads.com/book/show/18868451?from_search=true">Use your English</a> </li>
<li>Lai Shixiong American Phonetic Mark </li>
<li>ESLPOD </li>
<li>American accent training </li>
<li>Read at least 10 original books every year </li>
<li><a href="http://www.geekonomics10000.com/870">A little pragmatic learning English experience</a> </li>
<li>Learn 600 GRE words every day </li>
<li>Repeat according to the Ebbinghaus forgetting curve. </li>
<li>Intensive reading </li>
<li>Past papers </li>
</ol>
<p>Now you see, the irony is that Article 2 kicked me to the point: I want to remember words! </p>
<p>But this time at least one thing is different. I chose it according to my free will. </p>
]]></content>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>How to add Xib on StoryBoard</title>
    <url>/en/How-to-add-Xib-on-StoryBoard/</url>
    <content><![CDATA[<blockquote>
<p>In 1975, the classic software project management book “Mythical Man Month. In Essays on Software Engineering, Fred Brooks pointed out that no matter which programming language is chosen, a professional developer writes an average of 10 lines of code (LoC) per day. </p>
</blockquote>
<p>StoryBoard is conducive to saving lines of code and improving efficiency. Apple will strongly recommend it at every WWDC and continue to improve it. </p>
<a id="more"></a>

<p>I don’t understand why there are still many team leaders who ask their poor programmers to write UIView programmatically. </p>
<p>Maybe they think that some CustomViews are very reusable, and if they are pasted into StoryBoard, they will cause unnecessary side effects. </p>
<p>Therefore, the main idea of this solution is to condense CustomViews into Xib and then add it to StoryBoard. </p>
<p>This requires several steps, because Apple does not directly support it. </p>
<ol>
<li>Add an IBDesignable <code>CustomView.Swift</code> and <code>CustomView.Xib</code> </li>
<li>Set <code>CustomView.xib-&gt;Placeholder-&gt;File Owner-&gt;Custom Class</code> to <code>CustomView</code> </li>
<li>Create a new CustomView programmatically and load the root view from CustomView.Xib </li>
<li>Add a root view with equal width and height in the horizontal and vertical centers on the <code>CustomView</code> of the init function </li>
<li>Now you can drag View to StoryBoard and set its class to <code>CustomView</code>, which can generate a snapshot for preview </li>
</ol>
<p>But the subviews of CustomView (such as UIButton) cannot be connected to ViewController<code>@IBOutlet</code> </p>
<p><code>Delegate</code> or <code>Block</code> can solve this problem. </p>
<p>As for me, I suggest the <code>Block</code> method, because I have used <code>Delegate</code> for half a year and found </p>
<ul>
<li>ViewController will have too many delegates </li>
<li><code>delegate = self</code> must write <code>viewDidLoad</code> and sometimes <code>=nil</code> in <code>viewDidDisappear</code> </li>
</ul>
<p>The code for <code>Block</code> will be less and simpler. </p>
<p>Below is the <a href="https://github.com/leihao0/DesignableView">example</a>, which may reduce your time. </p>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Xcode</tag>
      </tags>
  </entry>
  <entry>
    <title>Reflection in Swift by mirroring</title>
    <url>/en/Reflection-in-Swift-via-Mirror/</url>
    <content><![CDATA[<ul>
<li><p>Mirror </p>
<ul>
<li><code>value</code>: Access the original reflection value, but the type is Any. </li>
<li><code>valueType</code>: The type of the original reflection value, equivalent to value.dynamicType. </li>
</ul>
</li>
<li><p>I didn’t find any method to assign value to <code>$0.value</code> with pure Swift object, so <code>Class</code> inherits <code>NSObject</code> as <code>KVC</code>. </p>
</li>
<li><p>I ignored the simplified optional case. </p>
</li>
<li><p>Recursively generate dictionaries or objects </p>
</li>
</ul>
<a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="keyword">typealias</span> <span class="type">DynamicKVType</span> = [<span class="type">String</span>: <span class="type">Any</span>]</span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">DynamicKV</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">dict</span><span class="params">()</span></span> -&gt; <span class="type">DynamicKVType</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">assignment</span><span class="params">(<span class="number">_</span> with: DynamicKVType)</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">DynamicKV</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">dict</span><span class="params">()</span></span> -&gt; <span class="type">DynamicKVType</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = <span class="type">DynamicKVType</span>()</span><br><span class="line"></span><br><span class="line">        <span class="type">Mirror</span>(reflecting: <span class="keyword">self</span>).children.forEach &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> k = $<span class="number">0</span>.label <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = $<span class="number">0</span>.value <span class="keyword">as</span>? <span class="type">DynamicKV</span> &#123;</span><br><span class="line">                dict[k] = v.dict()</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dict[k] = $<span class="number">0</span>.value</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dict</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">assignment</span><span class="params">(<span class="number">_</span> with: DynamicKVType)</span></span> &#123;</span><br><span class="line">        <span class="type">Mirror</span>(reflecting: <span class="keyword">self</span>).children.forEach &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> obj = <span class="keyword">self</span> <span class="keyword">as</span>? <span class="type">NSObject</span>, <span class="keyword">let</span> dictV = with[$<span class="number">0</span>.label!], <span class="keyword">let</span> k = $<span class="number">0</span>.label <span class="keyword">else</span> &#123; <span class="built_in">fatalError</span>(<span class="string">&quot;child leak&quot;</span>) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> dkvt = dictV <span class="keyword">as</span>? <span class="type">DynamicKVType</span>, <span class="keyword">let</span> v = $<span class="number">0</span>.value <span class="keyword">as</span>? <span class="type">DynamicKV</span> &#123;</span><br><span class="line">                v.assignment(dkvt)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                obj.setValue(dictV, forKey: k)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>: <span class="title">NSObject</span>, <span class="title">DynamicKV</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s: <span class="type">String</span> = <span class="string">&quot;a&quot;</span></span><br><span class="line">    <span class="keyword">var</span> i: <span class="type">Int</span> = -<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>: <span class="title">NSObject</span>, <span class="title">DynamicKV</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="string">&quot;b&quot;</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="type">A</span>()</span><br><span class="line">    <span class="keyword">var</span> array = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> b = <span class="type">B</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b.dict\t&quot;</span>, b.dict())</span><br><span class="line"></span><br><span class="line">b.assignment([<span class="string">&quot;s&quot;</span>: <span class="string">&quot;bbbbbbb&quot;</span>, <span class="string">&quot;a&quot;</span>: [<span class="string">&quot;s&quot;</span>: <span class="string">&quot;aaaaaaa&quot;</span>, <span class="string">&quot;i&quot;</span>: <span class="number">233</span>], <span class="string">&quot;array&quot;</span>: [-<span class="number">3</span>, -<span class="number">2</span>, -<span class="number">1</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b.assignment\t&quot;</span>, b.s, b.a.s, b.a.i, b.array)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Swift</tag>
      </tags>
  </entry>
  <entry>
    <title>UITextField And UILabel Tips</title>
    <url>/en/UITextField-and-UILabel-Tips/</url>
    <content><![CDATA[<h2 id="UITextField-Tips"><a href="#UITextField-Tips" class="headerlink" title="UITextField Tips"></a>UITextField Tips</h2><h3 id="Add-a-top-Line-on-Keyboard"><a href="#Add-a-top-Line-on-Keyboard" class="headerlink" title="Add a top Line on Keyboard"></a>Add a top Line on Keyboard</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UITextField</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addTopLineOnKeyboard</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> line = <span class="type">UIView</span>(frame: <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, width: <span class="number">2000</span>, height: <span class="number">0.5</span>))</span><br><span class="line">        line.backgroundColor = <span class="string">&quot;979797&quot;</span>.color</span><br><span class="line"></span><br><span class="line">        inputAccessoryView = line</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="Only-allowed-a-price-number-with-exactly-two-decimals"><a href="#Only-allowed-a-price-number-with-exactly-two-decimals" class="headerlink" title="Only allowed a price number with exactly two decimals"></a>Only allowed a price number with exactly two decimals</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">textField</span><span class="params">(<span class="number">_</span> textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> str = (textField.text! <span class="keyword">as</span> <span class="type">NSString</span>).replacingCharacters(<span class="keyword">in</span>: range, with: string)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> regex = <span class="string">&quot;^([1-9]\\d&#123;0,7&#125;|0)(\\.\\d&#123;0,2&#125;)?$|^$&quot;</span></span><br><span class="line">    <span class="keyword">let</span> predicte = <span class="type">NSPredicate</span>(format: <span class="string">&quot;SELF MATCHES %@&quot;</span>, regex)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  predicte.evaluate(with: str)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Only-allowed-1-100-or-leave-blank"><a href="#Only-allowed-1-100-or-leave-blank" class="headerlink" title="Only allowed 1-100 or leave blank"></a>Only allowed 1-100 or leave blank</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">textField</span><span class="params">(<span class="number">_</span> textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> str = (textField.text! <span class="keyword">as</span> <span class="type">NSString</span>).replacingCharacters(<span class="keyword">in</span>: range, with: string)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1-100 or leave blank</span></span><br><span class="line">    <span class="keyword">let</span> regex = <span class="string">&quot;^[1-9]?\\d|100|[1-9]?$&quot;</span></span><br><span class="line">    <span class="keyword">let</span> predicte = <span class="type">NSPredicate</span>(format: <span class="string">&quot;SELF MATCHES %@&quot;</span>, regex)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  predicte.evaluate(with: str)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="UILabel-Tips"><a href="#UILabel-Tips" class="headerlink" title="UILabel Tips"></a>UILabel Tips</h2><h3 id="Format-cell-phone-number-to-111-1111-111"><a href="#Format-cell-phone-number-to-111-1111-111" class="headerlink" title="Format cell-phone number to 111 1111 111"></a>Format cell-phone number to <code>111 1111 111</code></h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">String</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> phoneNumberFormater: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> s = <span class="keyword">self</span>.replacingOccurrences(of: <span class="string">&quot; &quot;</span>, with: <span class="string">&quot;&quot;</span>)</span><br><span class="line">            <span class="keyword">let</span> <span class="built_in">count</span> = s.characters.<span class="built_in">count</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">count</span> &gt; <span class="number">7</span> &#123;</span><br><span class="line">                s.insert(<span class="string">&quot; &quot;</span>, at: s.index(s.startIndex, offsetBy: <span class="number">3</span>))</span><br><span class="line">                s.insert(<span class="string">&quot; &quot;</span>, at: s.index(s.startIndex, offsetBy: <span class="number">8</span>))</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="built_in">count</span> &gt; <span class="number">3</span> &#123;</span><br><span class="line">                s.insert(<span class="string">&quot; &quot;</span>, at: s.index(s.startIndex, offsetBy: <span class="number">3</span>))</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> s</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Highlight-UILabel’s-substring-by-given-string"><a href="#Highlight-UILabel’s-substring-by-given-string" class="headerlink" title="Highlight UILabel’s substring by given string"></a>Highlight UILabel’s substring by given string</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> userInputPhoneNumber = <span class="string">&quot;123&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@IBOutlet</span> <span class="keyword">private</span> <span class="keyword">weak</span> <span class="keyword">var</span> phoneLabel: <span class="type">UILabel!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> phoneNumber:  <span class="type">String</span> = <span class="string">&quot;123456789&quot;</span> &#123;</span><br><span class="line"><span class="keyword">didSet</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> atrStr = <span class="type">NSMutableAttributedString</span>(string: phoneNumber.phoneNumberFormater)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> font = <span class="type">UIFont</span>.systemFont(ofSize: <span class="number">14</span>)</span><br><span class="line">    <span class="keyword">let</span> range = (phoneNumber.phoneNumberFormater <span class="keyword">as</span> <span class="type">NSString</span>).range(of: userInputPhoneNumber.phoneNumberFormater)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> range.location == <span class="number">0</span> &#123;</span><br><span class="line">        atrStr.addAttributes([<span class="type">NSFontAttributeName</span> :  font, <span class="type">NSForegroundColorAttributeName</span>: <span class="type">UIColor</span>.red], range: (phoneNumber.phoneNumberFormater <span class="keyword">as</span> <span class="type">NSString</span>).range(of: userInputPhoneNumber.phoneNumberFormater))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    phoneLabel.attributedText = atrStr</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Xcode</tag>
      </tags>
  </entry>
  <entry>
    <title>Time capsule on PandoraBox</title>
    <url>/en/Time-Capsule-on-PandoraBox/</url>
    <content><![CDATA[<p>My “OpenWRT” is “PandoraBox” and my router is “Mi mini”.<br>These are some subtle differences from the official <a href="https://wiki.openwrt.org/doc/howto/timemachine">wiki</a>. </p>
<a id="more"></a>

<h2 id="software"><a href="#software" class="headerlink" title="software"></a>software</h2><p><code>System -&gt; Software -&gt; Configuration</code> </p>
<p>Adjust all text to: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dest root /</span><br><span class="line">dest ram /tmp</span><br><span class="line">lists_dir ext /var/opkg-lists</span><br><span class="line">option overlay_root /overlay</span><br><span class="line">src/gz r2_base http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/base</span><br><span class="line">src/gz r2_management http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/management</span><br><span class="line">src/gz r2_oldpackages http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/oldpackages</span><br><span class="line">src/gz r2_packages http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/packages</span><br><span class="line">src/gz r2_routing http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/routing</span><br><span class="line">src/gz r2_telephony http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/telephony</span><br><span class="line"></span><br><span class="line">src/gz r2_old_packages http://downloads.openwrt.org.cn/PandoraBox/ralink/mt7620_old/packages/</span><br><span class="line">arch all 100</span><br><span class="line">arch noarch 200</span><br><span class="line">arch ralink 300</span><br></pre></td></tr></table></figure>

<p>Then, ssh to your PandoraBox </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install shadow-useradd shadow-groupadd</span><br><span class="line"><span class="built_in">cd</span> /usr/lib</span><br><span class="line">ln -s libgcrypt.so.20 libgcrypt.so.11</span><br></pre></td></tr></table></figure>

<p>To your browser </p>
<p><code>System -&gt; Software -&gt; Actions -&gt; Download and install package</code> </p>
<ul>
<li>netatalk </li>
<li>avahi-daemon </li>
<li>kmod-usb-storage </li>
<li>kmod-fs-hfsplus </li>
<li>block-mount </li>
</ul>
<p>Don’t try “opkg install” as <a href="https://wiki.openwrt.org/doc/howto/timemachine">wiki</a> said, otherwise you will get an error message. </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Configuring kmod-fs-hfsplus.</span><br><span class="line">//usr/lib/opkg/info/kmod-fs-hfsplus.postinst: .: line 3: can<span class="string">&#x27;t open &#x27;</span>/etc/functions.sh<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Collected errors:</span></span><br><span class="line"><span class="string"> * pkg_run_script: package &quot;kmod-fs-hfsplus&quot; postinst script returned status 2.</span></span><br><span class="line"><span class="string"> * opkg_configure: kmod-fs-hfsplus.postinst returned 2.</span></span><br></pre></td></tr></table></figure>

<h2 id="Format-and-Mount"><a href="#Format-and-Mount" class="headerlink" title="Format and Mount"></a>Format and Mount</h2><p>Insert the BackUp hard drive into the Mi mini </p>
<p>Use <code>blkid</code> to find your sda, this is mine </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/dev/sda3: UUID=<span class="string">&quot;dab3d8b8-a87f-3bfb-9fed-f42934d5bcd6&quot;</span> LABEL=<span class="string">&quot;BackUp&quot;</span> TYPE=<span class="string">&quot;hfsplus&quot;</span> PARTLABEL=<span class="string">&quot;Basic data partition&quot;</span> PARTUUID=<span class="string">&quot;27db40be-8ebe-11e6-9e2e-60f81da8c0cd&quot;</span></span><br></pre></td></tr></table></figure>

<p>Format as ext4 (Mi mini failed to mount <code>hfsplus</code>, so I tried <code>ext4</code> as exchange) </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda3</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd timemachine</span><br><span class="line">useradd -M -G timemachine tmuser</span><br><span class="line">passwd tmuser</span><br><span class="line"><span class="comment"># input the passwd </span></span><br><span class="line"></span><br><span class="line">mkdir /mnt/TimeMachine</span><br><span class="line">chown root:timemachine /mnt/TimeMachine</span><br><span class="line">touch /mnt/TimeMachine/USB_DISK_NOT_PRESENT</span><br><span class="line">chmod 555 /mnt/TimeMachine -R</span><br><span class="line">chmod 444 /mnt/TimeMachine/USB_DISK_NOT_PRESENT</span><br></pre></td></tr></table></figure>

<p>To browser </p>
<p><code>System -&gt; Mount Points -&gt; Mount Points -&gt; Add</code> </p>
<p>Select the <code>UUID</code> you get by <code>blkid</code> mount to <code>/mnt/TimeMachine</code>, remember the size <code>xxx</code> MB, <code>save</code> </p>
<p>You may see <code>/dev/sda3 /mnt/TimeMachine</code> in <code>Mounted file systems</code> </p>
<p>Then to your ssh </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chown -R tmuser:timemachine /mnt/TimeMachine</span><br></pre></td></tr></table></figure>

<h2 id="Netatalk"><a href="#Netatalk" class="headerlink" title="Netatalk"></a>Netatalk</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/netatalk/afpd.conf</span><br></pre></td></tr></table></figure>

<p>Change all text to: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;TimeMachine&quot;</span> -uampath /usr/lib/uams -uamlist uams_dhx2.so -nodebug -nouservol -icon -nosavepassword -mimicmodel RackMac</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/netatalk/AppleVolumes.default</span><br></pre></td></tr></table></figure>

<p>Replace all text with. (Fill in the xxx you got before, which is MiB) </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/mnt/TimeMachine TimeMachine volsizelimit:xxx allow:@timemachine rwlist:@timemachine cnidscheme:dbd options:searchdb,usedots,invisibledots,tm</span><br></pre></td></tr></table></figure>

<h2 id="Avahi"><a href="#Avahi" class="headerlink" title="Avahi"></a>Avahi</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/avahi/avahi-daemon.conf</span><br></pre></td></tr></table></figure>

<p>Change all text to: </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">server</span>]</span><br><span class="line"><span class="string">host-name=TimeMachine</span></span><br><span class="line"><span class="comment">#domain-name=local</span></span><br><span class="line"><span class="string">use-ipv4=yes</span></span><br><span class="line"><span class="string">use-ipv6=no</span></span><br><span class="line"><span class="string">check-response-ttl=no</span></span><br><span class="line"><span class="string">use-iff-running=no</span></span><br><span class="line"><span class="string">enable-dbus=no</span></span><br><span class="line"><span class="string">allow-interfaces=br-lan</span></span><br><span class="line"></span><br><span class="line">[<span class="string">publish</span>]</span><br><span class="line"><span class="string">publish-addresses=yes</span></span><br><span class="line"><span class="string">publish-hinfo=yes</span></span><br><span class="line"><span class="string">publish-workstation=no</span></span><br><span class="line"><span class="string">publish-domain=yes</span></span><br><span class="line"><span class="comment">#publish-dns-servers=192.168.1.1</span></span><br><span class="line"><span class="comment">#publish-resolv-conf-dns-servers=yes</span></span><br><span class="line"></span><br><span class="line">[<span class="string">reflector</span>]</span><br><span class="line"><span class="string">enable-reflector=no</span></span><br><span class="line"><span class="string">reflect-ipv=no</span></span><br><span class="line"></span><br><span class="line">[<span class="string">rlimits</span>]</span><br><span class="line"><span class="comment">#rlimit-as=</span></span><br><span class="line"><span class="string">rlimit-core=0</span></span><br><span class="line"><span class="string">rlimit-data=4194304</span></span><br><span class="line"><span class="string">rlimit-fsize=0</span></span><br><span class="line"><span class="string">rlimit-nofile=30</span></span><br><span class="line"><span class="string">rlimit-stack=4194304</span></span><br><span class="line"><span class="string">rlimit-nproc=3</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/avahi/services/afpd.service</span><br></pre></td></tr></table></figure>

<p>Replace all text with: </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; standalone=&quot;no&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">service-group</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;avahi-service.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span> <span class="attr">replace-wildcards</span>=<span class="string">&quot;yes&quot;</span>&gt;</span>Time Capsule<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>_afpovertcp._tcp<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>548<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>_device-info._tcp<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>0<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">txt-record</span>&gt;</span>model=TimeCapsule<span class="tag">&lt;/<span class="name">txt-record</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>_adisk._tcp<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>9<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">txt-record</span>&gt;</span>sys=waMA=XX:XX:XX:XX:XX:XX,adVF=0x100<span class="tag">&lt;/<span class="name">txt-record</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">txt-record</span>&gt;</span>dk1=adVF=0x83,adVN=TimeMachine<span class="tag">&lt;/<span class="name">txt-record</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service-group</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>To your browser </p>
<p><code>System -&gt; Startup</code> <code>Enable</code> </p>
<ul>
<li><code>afpd</code> </li>
<li><code>avahi-daemon</code> </li>
</ul>
<p>Restart the router </p>
<p>Go to Mac, <code>System Preferences -&gt; Time Machine -&gt; Select Disk -&gt; Available Disks -&gt; on &quot;Time Capsule&quot;</code>, you can see <code>TimeMachine</code> </p>
]]></content>
      <tags>
        <tag>PandoraBox</tag>
        <tag>OpenWRT</tag>
        <tag>TimeMachine</tag>
        <tag>Capsule</tag>
      </tags>
  </entry>
  <entry>
    <title>Use UIStoryboardSegue to customize the presentation transition of UIViewController</title>
    <url>/en/Custom-UIViewController-Presentation-Transitions-with-UIStoryboardSegue/</url>
    <content><![CDATA[<p>The most popular way is <code>UIViewControllerAnimatedTransitioning</code> </p>
<a id="more"></a>

<p>In order to do this, you must: </p>
<ul>
<li>Create a new subclass, which can be called “XXXTransitioning”, inherited from “NSObject”, and implement the two functions of the protocol “UIViewControllerAnimatedTransitioning”. </li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">transitionDuration</span><span class="params">(using transitionContext: UIViewControllerContextTransitioning?)</span></span> -&gt; <span class="type">TimeInterval</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">animateTransition</span><span class="params">(using transitionContext: UIViewControllerContextTransitioning)</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>Then: <ol>
<li>Create a new instance of “XXXTransitioning” in “ViewController”. </li>
<li>Set <code>transitioningDelegate = self</code>. </li>
<li>Use UIViewControllerTransitioningDelegate to extend “ViewController” and implement it. </li>
</ol>
</li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">animationController</span><span class="params">(forPresented presented: UIViewController, presenting: UIViewController, source: UIViewController)</span></span> -&gt; <span class="type">UIViewControllerAnimatedTransitioning?</span></span><br></pre></td></tr></table></figure>

<h2 id="dismiss"><a href="#dismiss" class="headerlink" title="dismiss"></a>dismiss</h2><p>I noticed that <code>Storyboard Segue</code> has a <code>Custom</code> </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/CustomUIViewControllerPresentationTransitionsWithUIStoryboardSegue.png" alt=""></p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XXXModalSegue</span>: <span class="title">UIStoryboardSegue</span> </span>&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">perform</span><span class="params">()</span></span> &#123;</span><br><span class="line">    	<span class="keyword">let</span> fromVC = source</span><br><span class="line">        <span class="keyword">let</span> toVC = destination</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> fromView = fromVC.view!</span><br><span class="line">        <span class="keyword">let</span> toView  = toVC.view!</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> (w, h) = (<span class="type">UIScreen</span>.main.bounds.width, <span class="type">UIScreen</span>.main.bounds.height)</span><br><span class="line"></span><br><span class="line">        toView.alpha = <span class="number">0</span></span><br><span class="line">        toView.frame = <span class="type">CGRect</span>(x: w/<span class="number">2</span>, y: <span class="number">0</span>, width: w, height: h)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> window = <span class="type">UIApplication</span>.shared.keyWindow</span><br><span class="line">        window?.insertSubview(toView, aboveSubview: fromView)</span><br><span class="line"></span><br><span class="line">        <span class="type">UIView</span>.animate(withDuration: <span class="number">0.4</span>, animations: &#123;</span><br><span class="line">            toView.alpha = <span class="number">1</span></span><br><span class="line">            toView.frame = toView.frame.offsetBy(dx: -w/<span class="number">2</span>, dy: <span class="number">0</span>)</span><br><span class="line">        &#125;) &#123; (b) <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">self</span>.source.present(<span class="keyword">self</span>.destination, animated: <span class="literal">false</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">            <span class="comment">// OR: self.source.dismiss(animated: false, completion: nil)</span></span><br><span class="line">        s</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>That’s it, no need to code <code>delegate</code> and <code>Extension</code>. Simple and clean:) </p>
]]></content>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Swift common in protocol and enum</title>
    <url>/en/Swift-Generics-in-protocol-and-enum/</url>
    <content><![CDATA[<ul>
<li>The agreement can only be used as a general constraint because it has Self or related type requirements. </li>
<li>The protocol does not allow the use of common parameters, but uses associated types. </li>
<li>Cannot specialize in non-universal </li>
</ul>
<a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">BaseReq</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Generic Type T in protocol</span></span><br><span class="line">    <span class="keyword">associatedtype</span> <span class="type">T</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">obj</span><span class="params">(<span class="number">_</span> s:String)</span></span> -&gt; <span class="type">T</span></span><br><span class="line">    <span class="keyword">init</span>(completion:((<span class="number">_</span> res: <span class="type">Result</span>&lt;<span class="type">T</span>&gt;)-&gt;())?)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">BaseReq</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">launch</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> s = <span class="string">&quot;network return string&quot;</span></span><br><span class="line">        obj(s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AReq</span>: <span class="title">BaseReq</span> </span>&#123;</span><br><span class="line">    <span class="comment">// declare the Type of T</span></span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">AObj</span></span><br><span class="line">    <span class="keyword">required</span> <span class="keyword">init</span>(completion:((<span class="number">_</span> res: <span class="type">Result</span>&lt;<span class="type">T</span>&gt;)-&gt;())?) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">obj</span><span class="params">(<span class="number">_</span> s: String)</span></span> -&gt; <span class="type">T</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">T</span>(s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BReq</span>: <span class="title">BaseReq</span> </span>&#123;</span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">BObj</span></span><br><span class="line">    <span class="keyword">required</span> <span class="keyword">init</span>(completion:((<span class="number">_</span> res: <span class="type">Result</span>&lt;<span class="type">T</span>&gt;)-&gt;())?) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">obj</span><span class="params">(<span class="number">_</span> s:String)</span></span> -&gt; <span class="type">T</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">T</span>(s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseObj</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AObj</span>: <span class="title">BaseObj</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> a = <span class="string">&quot;a&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> s: <span class="type">String</span>) &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;a&quot;</span>, s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BObj</span>: <span class="title">BaseObj</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> b = <span class="string">&quot;b&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> s: <span class="type">String</span>) &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;b&quot;</span>, s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Launch</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// static func launch(req: BaseReq) -&gt; BaseReq &#123;</span></span><br><span class="line">    <span class="comment">// 如果你像上面那样写，你会得到。</span></span><br><span class="line">    <span class="comment">// 错误：协议&#x27;BaseReq&#x27;只能作为通用约束使用，因为它有Self或相关的类型要求。</span></span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">launch</span>&lt;U: BaseReq&gt;<span class="params">(req: U)</span></span> -&gt; <span class="type">U</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> s = <span class="string">&quot;network return string&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(req)</span><br><span class="line"></span><br><span class="line">        req.obj(s)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> req</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不能对非通用类型进行特殊化</span></span><br><span class="line"><span class="comment">// enum Result &#123;</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Result</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> suc(<span class="type">T</span>)</span><br><span class="line">    <span class="keyword">case</span> err(<span class="type">Error</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> areq = <span class="type">AReq</span> &#123; (r) <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">switch</span> r &#123;</span><br><span class="line">    <span class="keyword">case</span> .suc(<span class="keyword">let</span> s):</span><br><span class="line">        <span class="comment">//S is AObj,  we can s.a</span></span><br><span class="line">        s.a</span><br><span class="line">    <span class="keyword">case</span> .err(<span class="keyword">let</span> r):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">areq.launch()</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="type">Launch</span>.launch(req: areq)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> breq = <span class="type">BReq</span> &#123; (r) <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">switch</span> r &#123;</span><br><span class="line">    <span class="keyword">case</span> .suc(<span class="keyword">let</span> s):</span><br><span class="line">        <span class="comment">//S is BObj,  we can s.b</span></span><br><span class="line">        s.b</span><br><span class="line">    <span class="keyword">case</span> .err(<span class="keyword">let</span> r):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">breq.launch()</span><br><span class="line"><span class="type">Launch</span>.launch(req: breq)</span><br><span class="line">s</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Swift</tag>
      </tags>
  </entry>
  <entry>
    <title>Software accelerates your learning</title>
    <url>/en/Softwares-speed-up-your-learning/</url>
    <content><![CDATA[<p>Podcasts and videos are a typical online learning method, but they are numerous, and collection is human nature, and how to increase this speed becomes even more necessary. </p>
<p>Normally, people can process their native language at high speed.<br>As for me, 2x is very comfortable, 3x is acceptable, and 4x has subtitles. </p>
<a id="more"></a>

<h2 id="Desktop-computer"><a href="#Desktop-computer" class="headerlink" title="Desktop computer"></a>Desktop computer</h2><p>A few years ago, when I was still in college, I used Windows. KMPlayer is the best of all types of video players, because other players may have sound distortion when they are replaced. Later, the author left the company and re-written a new one in <code>C++</code> and renamed it <a href="https://potplayer.daum.net/">PotPlayer</a> </p>
<p>On macOS, Movist is my first choice. It is also from South Korea. Needless to say, its splendor and simplicity, it provides 4 times the audio tracks without much loss.<br>Other players such as <a href="https://mpv.io/">MPV</a>, although provide unlimited rate limit (yes, you can accelerate to any speed you like) and open source, but if you want to change the default settings, every Modify <code>~/.config/mpv/mpv.conf</code> every time. </p>
<h2 id="Mobile-version"><a href="#Mobile-version" class="headerlink" title="Mobile version"></a>Mobile version</h2><p>The good news is that Podcasts on the iPhone already have twice the function (the strange thing is that iTunes Podcasts do not), and many learning apps also have this useful function. </p>
<p>But I haven’t found any application that provides more than 2 times the functionality. </p>
<p>According to <a href="https://developer.apple.com/reference/avfoundation/avplayer#//apple_ref/occ/instp/AVPlayer/rate"></a> </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> player = <span class="type">AVAudioPlayer</span>()</span><br><span class="line">player.prepareToPlay()</span><br><span class="line">player.enableRate = <span class="literal">true</span></span><br><span class="line">player.rate = <span class="number">2.0</span></span><br><span class="line">player.play()</span><br></pre></td></tr></table></figure>

<p>If the audio is a file-based media, it seems that it can be done just by changing <code>player.rate = 3.0</code>. Will this cause distortion? </p>
<p>If one day I have time, I will try. </p>
]]></content>
      <tags>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-0-0</title>
    <url>/en/japan-0-0/</url>
    <content><![CDATA[<div id="googleMap5384" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap5384'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 11,
       'center': new window.google.maps.LatLng( 35.6388171 , 139.6897329 ),
     },
     target = document.getElementById('googleMap5384'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.665289 , 139.7241853 ),
        'map': map,
        'title': 'The National Art Center',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'The National Art Center'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.5471701 , 139.7683526 ),
        'map': map,
        'title': 'Haneda Airport',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Haneda Airport'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.695398 , 139.7018829 ),
        'map': map,
        'title': 'Hotel Gracery Shinjuku',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Hotel Gracery Shinjuku'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<h2 id="Three-year-return-visa"><a href="#Three-year-return-visa" class="headerlink" title="Three-year return visa"></a>Three-year return visa</h2><p>Unlike the U.S. visa, you cannot make an appointment by yourself and can only be processed through a designated travel agency </p>
<ul>
<li>After tax 25W+ </li>
<li>Taobao mails passports and tax bills and other materials </li>
</ul>
<p>The whole process is all by mail, I thought I would lose the item<br>I didn’t expect it to be done smoothly in two weeks </p>
<h2 id="Business-class"><a href="#Business-class" class="headerlink" title="Business class"></a>Business class</h2><p>Most Asian airlines have the same business class and first class </p>
<p>For example, this Boeing 787 model has only four seats in a row 💺<br>There are windows on both sides, no neighbors, couple seat in the middle<br>1 The area occupied by business class seats == 6 economy class </p>
<p>Because the fare for ANA’s activities is only twice as expensive, it’s quite a bargain. </p>
<p>Provide hot towels on board, follow-up champagne and various beverages<br>Lunch can be reserved in advance for Japanese or Western food<br>The tableware was replaced with heavy porcelain plates and metal knives and forks 🍴 </p>
<p>The best part is that the seat can be flattened 180 degrees by pressing the small button<br>WC 🚾 Never again<br>The children I touched were also polite and did not cry all the way </p>
<p>The roar of the engine is also much smaller, the default headset 🎧 is Bose QC 25 </p>
<p>Because it only takes 3 hours to fly directly to Tokyo </p>
<p>The basic process is<br>Get on the plane for a meal and drink<br>See your name<br>Lie down and sleep<br>almost there </p>
<p>The overall experience is great </p>
<p>But the back of the business class is empty<br>Once worried, I will go to Japan next time<br>All Nippon Airways, will it close down? </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-04.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-06.jpg" alt=""></div></div></div>

<h2 id="Haneda-airport"><a href="#Haneda-airport" class="headerlink" title="Haneda airport"></a>Haneda airport</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-11.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-19.jpg" alt=""></div></div></div>

<h2 id="Observation-deck"><a href="#Observation-deck" class="headerlink" title="Observation deck"></a>Observation deck</h2><p>There is a huge observation deck on the roof of Haneda Airport<br>You can watch the aircraft take off and land, and feel the engine roar that is more real than IMAX </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-14.jpg" alt=""></div></div></div>

<h2 id="Hotel-Gracery-Shinjuku"><a href="#Hotel-Gracery-Shinjuku" class="headerlink" title="Hotel Gracery Shinjuku"></a>Hotel Gracery Shinjuku</h2><p>I live in Shinjuku Station because of convenience<br>Unexpectedly, it was Godzilla Hotel<br>There is a big head on it<br>I usually see piracy in China<br>I’m not used to listening to genuine ones </p>
<p>Next to it is Kabukicho<br>Ichiran Ramen is delicious<br>At 11 o’clock in the evening, I went downstairs for supper and there was a long line </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-25.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-26.jpg" alt=""></div></div></div>

<h2 id="Kani-Doraku-amp-Fenghaku"><a href="#Kani-Doraku-amp-Fenghaku" class="headerlink" title="Kani Doraku &amp; Fenghaku"></a>Kani Doraku &amp; Fenghaku</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-34.jpg" alt=""></div></div></div>

<p>Japan is so clean<br>No, it should be said to be clean<br>This apartment is reminiscent of<br>Miss Kobayashi’s Dragon Maid </p>
<p>I feel so happy to live here<br>I don’t know how much the rent is </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-37.jpg" alt=""></div></div></div>

<h2 id="National-New-Museum"><a href="#National-New-Museum" class="headerlink" title="National New Museum"></a>National New Museum</h2><p>Visiting an art gallery for the first time 🎨<br>Totally incomprehensible<br>But isn’t this the purpose of visiting the museum? </p>
<p>Came out and saw a poster<br>I don’t know if it’s an advertisement or a charity event </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-39.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-40.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-43.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-44.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-45.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-48.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-49.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-50.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-51.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-54.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-55.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-56.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-57.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-0-62.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-0-1</title>
    <url>/en/japan-0-1/</url>
    <content><![CDATA[<div id="googleMap3969" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap3969'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 12.5,
       'center': new window.google.maps.LatLng( 35.6888043 , 139.7464185 ),
     },
     target = document.getElementById('googleMap3969'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.6599167 , 139.7287036 ),
        'map': map,
        'title': '六本木ヒルズ展望台',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: '六本木ヒルズ展望台'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.6714459 , 139.6955955 ),
        'map': map,
        'title': '代々木公園',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: '代々木公園'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.7099661 , 139.8098755 ),
        'map': map,
        'title': 'Tokyo Skytree',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Tokyo Skytree'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<h2 id="Roppongi-Hills-Observatory-Tokyo-City-View"><a href="#Roppongi-Hills-Observatory-Tokyo-City-View" class="headerlink" title="Roppongi Hills Observatory Tokyo City View"></a>Roppongi Hills Observatory Tokyo City View</h2><p>Can look around Tokyo </p>
<p>This piece is a group of interconnected buildings<br>Different from playing open sandbox games<br>Here you can enter the store through the model </p>
<p>This time I finally realized what my dad said when I was young<br>Standing on the Oriental Pearl Tower and looking down<br>Cars are like matchboxes and people are like ants </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-01.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-04.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-07.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-08.jpg" alt=""></div></div></div>

<p>Although it’s only June, the weather is already hot<br>I saw a man-made fountain that can be sprayed with water and spray to assist in heat dissipation </p>
<p>The interior of the building has always had a sense of design<br>I also met a couple holding hands </p>
<p>Then went to eat real wagyu yakiniku<br>For the first time, I experienced the melting in the mouth </p>
<p>The most amazing thing is the price<br>I didn’t dare to have a cup of coffee here to see the scenery<br>Habitual thinking thought it would be as expensive as a floor<br>Actually only a few dollars more expensive than downstairs </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-11.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-14.jpg" alt=""></div></div></div>

<h2 id="Yoyogi-park"><a href="#Yoyogi-park" class="headerlink" title="Yoyogi park"></a>Yoyogi park</h2><blockquote>
<p>Yoyogi Park is located at this location. On December 19, 1910, Captain Tokugawa Yoshitoshi made the first successful powered airplane flight in Japan. The area later became a parade ground. Beginning in September 1945, this site has housed a military barracks called “Washington Heights” for American officers during the Allied occupation of Japan<br>In 2014, Tokyo experienced the worst dengue outbreak in 100 years, and it was the first recorded case in 70 years, with nearly 200 confirmed cases. </p>
</blockquote>
<p>Unexpectedly, there was an outbreak of dengue fever </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-19.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-20.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-21.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-22.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-25.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-27.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-28.jpg" alt=""></div></div></div>

<p>I used to go out with 1.5L arteries<br>There are vending machines everywhere in Japan, so you don’t need to bring water<br>The only embarrassing thing is that there is no trash can, and I can only hold the bottle after drinking, looking forward to the next vending machine with a recycling bin </p>
<p>WC also provides LGBT 🏳️‍🌈 </p>
<p>Passing by Kaminarimon, there is a small train exhibition poster next to it </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-32.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-33.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-34.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-35.jpg" alt=""></div></div></div>

<h2 id="Sumida-Aquarium"><a href="#Sumida-Aquarium" class="headerlink" title="Sumida Aquarium"></a>Sumida Aquarium</h2><p>Under the skytree is an aquarium </p>
<p>Nemo from Finding Nemo?<br>Hermit crab, lobster, squid<br>Undersea power… </p>
<p>🐠 🦞 🦑 </p>
<p>Employees sweeping the floor in the aquarium </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-57.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-37.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-39.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-41.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-43.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-44.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-47.jpg" alt=""></div></div></div>

<p>Of course they came out as souvenirs<br>All kinds of furry undersea animals that are so cute<br>I almost couldn’t help buying one back as a pillow </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-48.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-49.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-50.jpg" alt=""></div></div></div>

<h2 id="Attack-on-Titan"><a href="#Attack-on-Titan" class="headerlink" title="Attack on Titan"></a>Attack on Titan</h2><p>Just in time for the Attack on Titan theme<br>Unfortunately, I haven’t seen it<br>I don’t know who these two are<br>No waves </p>
<p>After adding this anime<br>Fortunately, I patted Captain and Allen. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-53.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-36.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-52.jpg" alt=""></div></div></div>

<h2 id="Tokyo-Sky-Tree"><a href="#Tokyo-Sky-Tree" class="headerlink" title="Tokyo Sky Tree"></a>Tokyo Sky Tree</h2><p>It turns out that this tower is not only built for Gaohe scenic spots, but also a radio station. </p>
<blockquote>
<p>The tower is the main TV and broadcast station in the Kanto region; the older Tokyo Tower is surrounded by high-rise buildings, so it can no longer provide complete digital terrestrial TV broadcast coverage. The Skytree building was completed on Day, February 29, 2012<br>Tokyo Skytree is also similar to Japan’s historic 5-story pagoda. [11] The bottom of the tower has a structure similar to a tripod; starting from a height of about 350 m (1,150 ft) or more, the structure of the tower is cylindrical, allowing panoramic views of the river and the city. [12] There is an observatory that can accommodate 2,000 people at 350 m (1,150 ft) and an observatory that can accommodate 900 people at 450 m (1,480 ft). [13] The upper observatory has a spiral glass-covered skywalk, and visitors can ascend to the highest point of the upper platform at the last 5 meters. A part of the glass floor allows visitors to directly view the street below.<br>The tower is earthquake-proof and includes a central shaft made of reinforced concrete. The main internal pillar is connected to the first external tower structure 125 meters (410 feet) above the ground. From there up to 375 meters (1,230 feet), the pillars are fixed to the tower by shock absorbers, which act as cushions during the earthquake. Additional elasticity is obtained through “additional quality control mechanisms” (or tuned mass dampers)-a damping system that, in the event of an earthquake, will be out of sync with the structure of the building to keep the center of gravity as close to the tower as possible bottom of. [15] According to the designer, the damper can absorb 50% of the energy in an earthquake </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-58.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-60.jpg" alt=""></div></div></div>

<p>I have a fear of heights<br>I wonder if it’s an illusion<br>Feel the tower sway slightly </p>
<p>Not afraid<br>Actually trembling<br>After going up, the body keeps walking inside<br>Take up the courage to look at the glass outside </p>
<p>The glass floor at the highest point is okay, a bit unreal<br>Tentatively stepped on a foot 🦶 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-51.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-55.jpg" alt=""></div></div></div>

<h2 id="Return"><a href="#Return" class="headerlink" title="Return"></a>Return</h2><p>After I went back, I took advantage of the hotel and threw away all kinds of garbage.<br>No trash can really hurts 😂 </p>
<p>Looked out the window<br>A good time </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-63.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-64.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-66.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-65.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-67.jpg" alt=""></div></div></div>

<p>Then take a taxi 🚖 to Haneda Airport<br>10w yen 💴 that’s it </p>
<p>I heard that the elderly here drive taxis 🚕<br>Witness how to bear the heart to let Grandpa carry luggage 🧳 </p>
<p>It’s still early after checking in, so I came to the ANA First Class Lounge<br>Unlimited supply of fruits, milk, drinks, bread and cakes<br>🍉 🥛 🥤 🍞 🍰<br>I really missed the shower<br>🛀 😂 </p>
<p>I saw Mount Fuji on the plane 🗻<br>Because I’m full in the lounge<br>I had to sleep flat 💤 </p>
<p>Then it ended this first short 🇯🇵 Japan trip </p>
<p>I really like the cleanliness and order of Japan<br>The shoes I bought are still like the ones I just bought until I leave </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-68.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-69.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-70.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-0-1-71.jpg" alt=""></div></div></div>

<p>Three-year round trip visa<br>Will come again next time </p>
<p>✌️✌️✌️ </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇮🇹-0-0</title>
    <url>/en/italy-0-0/</url>
    <content><![CDATA[<div id="googleMap6667" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap6667'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 10,
       'center': new window.google.maps.LatLng( 40.6973724 , 14.1294367 ),
     },
     target = document.getElementById('googleMap6667'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 40.853053 , 14.1791543 ),
        'map': map,
        'title': 'Naples',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Naples'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 40.8223812 , 14.4113963 ),
        'map': map,
        'title': 'Mount Vesuvius',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Mount Vesuvius'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 40.7466183 , 14.4761726 ),
        'map': map,
        'title': 'Pompei',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Pompei'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 40.6237862 , 14.3576818 ),
        'map': map,
        'title': 'Sorrento',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'Sorrento'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
     
     
     var opts4 = {
        'position': new window.google.maps.LatLng( 40.5489025 , 14.1960389 ),
        'map': map,
        'title': 'Capri',
        'zIndex' : 4,
        'icon': ''
      };

     var infowindow4 = new window.google.maps.InfoWindow({
       content: 'Capri'
     });

     var marker4 = new window.google.maps.Marker(opts4);

     marker4.addListener('click', function(){
       infowindow4.open(map, marker4)
     })
     
     
     var opts5 = {
        'position': new window.google.maps.LatLng( 0.6295773 , 14.4769233 ),
        'map': map,
        'title': 'Positano',
        'zIndex' : 5,
        'icon': ''
      };

     var infowindow5 = new window.google.maps.InfoWindow({
       content: 'Positano'
     });

     var marker5 = new window.google.maps.Marker(opts5);

     marker5.addListener('click', function(){
       infowindow5.open(map, marker5)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<p>From Japan 🇯🇵 came back less than three months to catch up with the National Day holiday </p>
<p>Because of the US imperial visa and the three-year Japanese return visa<br>The pile of materials prepared continues to be used<br>So I didn’t worry about the Schengen visa </p>
<h2 id="Rome"><a href="#Rome" class="headerlink" title="Rome"></a>Rome</h2><p>It took 11 hours to fly from Imperial Capital to Alitalia to Rome 🇷🇴 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-04.jpg" alt=""></div></div></div>

<h2 id="Sorrento"><a href="#Sorrento" class="headerlink" title="Sorrento"></a>Sorrento</h2><p>Different from the common first flight north of Italy<br>Rome-Florence-Milan-Venice route </p>
<p>Friends reverse operation<br>Take a small train all the way south to Sorrento </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-14.jpg" alt=""></div></div></div>

<p>The small mountain bag in the distance should be Vesuvius. </p>
<p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex" xmlns="http://www.w3.org/2000/svg" width="56.897ex" height="2.687ex" role="img" focusable="false" viewBox="0 -982.7 25148.5 1187.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(742.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mtext" transform="translate(1798.6, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(2048.6, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(2598.6, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3049.6, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3578.6, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4011.6, 0)"><g data-mml-node="mn"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g></g><g data-mml-node="msup" transform="translate(4511.6, 0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mtext"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(250, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(719, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1064, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(1541, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2419, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mtext" transform="translate(2948, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3198, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(3667, 0)"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(4127, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4578, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4939, 0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mtext" transform="translate(500, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(750, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(1253, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(6537, 393.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(778, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(1028, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(1578, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2029, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(2558, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2991, 0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1364.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(2142.6, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="msup" transform="translate(3036.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(389, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6819.7, 0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mtext" transform="translate(500, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(750, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(1219, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1564, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(2041, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msup" transform="translate(2919, 0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(529, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></g><g data-mml-node="mo" transform="translate(18644.2, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(19088.9, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(19338.9, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(19807.9, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(20152.9, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(20629.9, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(21507.9, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(22314.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(23370.5, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500, 0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778, 0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1278, 0)"></path></g></g></g></svg></mjx-container> </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-100.jpg" alt=""></div></div></div>

<h2 id="Pompeii"><a href="#Pompeii" class="headerlink" title="Pompeii"></a>Pompeii</h2><blockquote>
<p>A large number of unearthed cities are preserved under the ashes, providing a unique microcosm of Roman life, frozen at the moment it was buried, and providing an unusually detailed insight into the daily lives of its residents, despite many evidences Lost in early excavations. This is a wealthy city with many exquisite public buildings and luxurious private residences. Its luxurious decorations, furniture and artworks are the main attraction of early excavators. Organic remains, including wooden objects and human bodies, are buried in the ashes, leaving voids after decay. Archaeologists have discovered that these voids can be used as molds to make plasters of unique and often scary figures in the last moments of life model. There are a large number of graffiti carved on the walls and in the room, providing a large number of examples, illustrating that the colloquial Latin, which was basically lost at the time, is in sharp contrast with the formal language of classical writers.<br>Pompeii is a UNESCO World Heritage Site and one of the most popular tourist attractions in Italy. Approximately 2.5 million tourists visit each year. </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-17.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-19.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-24.jpg" alt=""></div></div></div>

<h2 id="Vesuvius-eruption"><a href="#Vesuvius-eruption" class="headerlink" title="Vesuvius eruption"></a>Vesuvius eruption</h2><blockquote>
<p>At about 1 pm, Mount Vesuvius erupted violently, spewing high-altitude volcanic columns, and ash and pumice began to fall, covering the entire area. During this period, some rescue and escape incidents occurred. At night or early the next day, igneous rock flows began to appear near the volcano. The light seen on the mountain was interpreted as a fire. People in Misenum fled for their lives. Volcanic gravel flows are fast moving, dense, and high in temperature, completely or partially destroying all structures on the path, burning or suffocating the remaining population, and changing the landscape, including the coastline. At the same time, there was a slight earthquake and a slight tsunami in the Gulf of Naples. By the evening of the next day, the volcanic eruption had ended, leaving only mist in the atmosphere, and the sun was shining faintly.<br>The young Pliny wrote a record about the eruption of a volcano.<br>Wide flames illuminate many parts of Vesuvius; their light and brightness are more vivid than night…The rest of the world is now day, but the darkness there is darker and thicker than any night. </p>
</blockquote>
<h3 id="Pompeii-Theater"><a href="#Pompeii-Theater" class="headerlink" title="Pompeii Theater"></a>Pompeii Theater</h3><blockquote>
<p>The theater district of Pompeii is located in the southwestern part of the city. There are three main buildings that make up this area: Grand Theatre, Carol Hall (small theatre) and Siheyuan. It serves as the city’s entertainment and conference center.<br>The Grand Theatre was built on a natural hill in the second century BC. This theater can hold approximately 5,000 spectators and is one of the first permanent stone theaters in Rome.<br>Theaters have been used in modern times to hold concerts, operas and plays. In 2008, restoration work began to enable further theater and music performances. After the reopening, Puccini’s “Bohemia” and Bizet’s “Carmen” were staged in 2014. </p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-27.jpg" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-29.jpg" alt=""></div></div></div>

<p>Far to the volcano pressed by dark clouds 🌋<br>It’s hard to imagine that magma can cover here </p>
<h3 id="Pompeii-Arena"><a href="#Pompeii-Arena" class="headerlink" title="Pompeii Arena"></a>Pompeii Arena</h3><blockquote>
<p>The current amphitheater was built in about 70 BC. It is the earliest known Roman amphitheater. It was built of stone, and it was built of wood before.<br>In addition to being a historical landmark and archeological research object, the amphitheatre is also used for concerts and other public events in modern times. </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-28.jpg" alt=""></div></div></div>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-32.jpg" alt=""></p>
<h2 id="Vesuvius"><a href="#Vesuvius" class="headerlink" title="Vesuvius"></a>Vesuvius</h2><blockquote>
<p>The eruption of Mount Vesuvius in AD 79 destroyed the Roman cities of Pompeii, Herculaneum, Oprontis, Stabia, and several other settlements. The final heat release was Hiroshima and Nagasaki. 100,000 times the heat energy released by the atomic bomb explosion.<br>Mount Vesuvius has erupted many times since then, and it is the only volcano on the European continent that has erupted in the past 100 years. Today, Mount Vesuvius is considered one of the most dangerous volcanoes in the world, because there are 3 million people living near it in a place that can be affected by the volcanic eruption, and 600,000 of them are in the danger zone, making it the most populous in the world. Dense volcanic area, and it is also prone to violent and explosive eruptions like Prinia. </p>
</blockquote>
<blockquote>
<p>Mount Vesuvius was formed by the collision of two plates, the African plate and the Eurasian plate. The former dived under the latter, deep into the ground. When the water-saturated sediments of the oceanic African plate were pushed to the warmer depths of the Earth’s interior, the water boiled, lowering the melting point of the upper mantle, enough to partially melt the rock. Since the density of magma is less than the surrounding solid rock, it is pushed up. A weak spot on the surface of the earth was found, and the magma broke through, forming a volcano. </p>
</blockquote>
<blockquote>
<p>On June 5, 1995, the area around Vesuvius was officially declared a national park. The summit of Vesuvius is open to visitors, and there is a small network of roads around the volcano, which is maintained by the park authorities on weekends. You can enter by road within 200 meters (660 feet) from the top of the mountain (measured vertically), but you can only enter on foot afterwards. There is a spiral passage around the volcano from the road to the crater. </p>
</blockquote>
<p>I thought it was a small mountain bag<br>Actually it is quite big, about 1km above sea level </p>
<p>As stated above<br>Do the bus winding uphill, the last section of the slope needs to go up by yourself<br>It’s best to wear tight shoes, otherwise it’s all volcanic ash </p>
<p>There is no magma inside the crater, but some places are smoking </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-38.jpg" alt=""></div></div><div class="group-picture-row"></div><div class="group-picture-row"></div></div>

<p>Some clouds are neat and tidy as if something is holding them<br>Some pounce on you from time to time<br>Reminiscent of the scene where clouds float over the mountain in “Arrival”<br>I really stood in the clouds this time </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-40.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-41.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-48.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-49.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-50.jpg" alt=""></p>
<h2 id="Positano"><a href="#Positano" class="headerlink" title="Positano"></a>Positano</h2><blockquote>
<p>Positano is a dreamland, she is not very real when you are there, but after you leave, she becomes lifelike. </p>
</blockquote>
<p>This kind of small house built on the mountain is very peculiar, a great place for parkour<br>When playing Assassin’s Creed, Ezio went over the walls in Italy </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-53.jpg" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-55.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-57.jpg" alt=""></div></div></div>

<p>There are small boats on the beach to go to sea </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-62.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-63.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-68.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-69.jpg" alt=""></div></div></div>

<p>It was night when I came back<br>Brightly lit like a scene in a movie </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-65.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-66.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-67.jpg" alt=""></p>
<blockquote>
<p>The Tyndall effect is the scattering of light by particles in colloids or very fine suspensions. Also known as Tyndall scattering, it is similar to Rayleigh scattering (Aldnoah Zero). The intensity of scattered light is inversely proportional to the fourth power of the wavelength, so blue light is scattered more strongly than red light. </p>
</blockquote>
<p>Like the lord of the rings </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-70.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-71.jpg" alt=""></div></div></div>

<h2 id="Capri"><a href="#Capri" class="headerlink" title="Capri"></a>Capri</h2><blockquote>
<p>In addition to being a paradise for writers and artists, Capri is also a relatively safe place for foreign gay men, where they can live a more open life; a small number of them are attracted to live there, and to a certain extent, it is similar to the above. The types of creativity reached overlap. </p>
</blockquote>
<p>The boat goes around for about an hour<br>It’s a pity that my friends have to go back to catch the plane early<br>So I only went around 1/2 and went back </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-74.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-76.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-77.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-86.jpg" alt=""></div></div></div>

<h2 id="Blue-hole"><a href="#Blue-hole" class="headerlink" title="Blue hole"></a>Blue hole</h2><blockquote>
<p>When light enters the cave through the water, the red reflection is filtered out, and only blue light enters the cave. The objects placed in the water in the grotto are famous for their silver appearance. This is caused by tiny bubbles, which cover the outside of the object when they are placed underwater. These bubbles cause light to refract in a different way than the surrounding water, creating a silver effect. </p>
</blockquote>
<blockquote>
<p>Part of the reason is that the light from the hole on the water has a dazzling effect, and the water in the hole is more abundant than the light in the air. Visitors put their hands in the water and can see the water “glow” strangely under this light. </p>
</blockquote>
<p>The people in the boat introduced us to the bluest blue hole on the island<br>Believe it<br>In the evening, I went back to listen to the people across the sea in Spain 🇪🇸 The financial director of tourism also said that he saw the bluest blue hole </p>
<p>Tell her that she must have been cheated by a liar<br>After all, the blue hole only has </p>
<ul>
<li>Blue Cave (Biševo), a cave on Biševo island in Croatia </li>
<li>The Blue Cave (Capri), a cave on the island of Capri, Italy </li>
<li>The Blue Cave (Kastelorizo​​), a cave on the Greek island of Kastelorizo​​ </li>
<li>Blue Cave (Malta), a cave in Malta </li>
<li>The Blue Hole, the area at the end of Manhattan on the Brooklyn Bridge </li>
<li>Grotta dello Smeraldo, a cave on the Amalfi Coast, Italy </li>
</ul>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-88.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-89.jpg" alt=""></div></div></div>

<h2 id="Mediterranean-blue"><a href="#Mediterranean-blue" class="headerlink" title="Mediterranean blue"></a>Mediterranean blue</h2><p>Different from the Pacific Blue seen in California<br>This Mediterranean blue is like a thick dye </p>
<blockquote>
<p>The Mediterranean is almost inland, which affects the conditions of the Mediterranean: for example, the tides are very limited due to the narrow connection with the Atlantic Ocean. The characteristic of the Mediterranean is that its dark blue is obvious at a glance. </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-83.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-79.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-78.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-85.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-84.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-0-93.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Italy</tag>
        <tag>🇮🇹</tag>
      </tags>
  </entry>
  <entry>
    <title>🇮🇹-0-1</title>
    <url>/en/italy-0-1/</url>
    <content><![CDATA[<div id="googleMap6875" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap6875'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 6.5,
       'center': new window.google.maps.LatLng( 39.286304 , 13.3756614 ),
     },
     target = document.getElementById('googleMap6875'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 40.8419184 , 14.2594855 ),
        'map': map,
        'title': 'Naples',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Naples'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 38.1405228 , 13.2872492 ),
        'map': map,
        'title': 'Palermo',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Palermo'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 37.8548943 , 15.2784163 ),
        'map': map,
        'title': 'Taormina',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Taormina'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<h2 id="Naples"><a href="#Naples" class="headerlink" title="Naples"></a>Naples</h2><p>In the evening, leave Naples and go to Palermo by boat </p>
<p>The suspended lifebuoy and lifeboat can not help but remind people of the Titanic </p>
<p>Actually this ship is much bigger than the Titanic<br>Can handle the entire parking lot next to the car<br>In the calm Mediterranean again, there are no icebergs, don’t worry about sinking ships<br>You can also see this huge cruise ship on Google Map<br>The cabin is small but has a separate toilet, and can also be hot and rainy </p>
<p>The shaking cabin and the siren are very hypnotic </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-22.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-03.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-02.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-04.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-05.jpg" alt=""></div></div></div>

<p>Struggling to get up the next day to watch the sunrise 🌄 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-08.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-10.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-16.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-14.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-17.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-21.jpg" alt=""></div></div></div>

<p>It was not there yet<br>No time for pincers<br>No waves shrink<br>Seagull flying backwards </p>
<p>🌊 🐦 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-18.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-24.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-26.jpg" alt=""></div></div></div>

<h2 id="Sicily"><a href="#Sicily" class="headerlink" title="Sicily"></a>Sicily</h2><h3 id="Palermo"><a href="#Palermo" class="headerlink" title="Palermo"></a>Palermo</h3><p>My friends rented a sea view room by the sea<br>About three floors, there is an echo<br>The decor is very sicilian </p>
<p>Not far from Al Cantastorie<br>Although the score is very low, and the seaside smell is very strong<br>But this lobster spaghetti is really delicious<br>I never encountered this practice again in my subsequent journey </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-27.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-28.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-29.jpg" alt=""></div></div></div>

<ul>
<li>B&amp;B Theater Theater </li>
<li>Four Songs Square (Palermo) </li>
<li>Palermo Cathedral </li>
</ul>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-32.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-34.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-36.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-37.jpg" alt=""></div></div></div>

<p>Just like a sticky note with scarlet letters<br>A few streets next to the residence, you need to be careful to step on the shit everywhere<br>Greatly affected the play experience </p>
<p>Of course, in order to avoid unnecessary trouble, the sticky note was secretly torn off by another friend before leaving </p>
<p>But I can’t stand it. Sicily’s capital Palermo has become a shit town. </p>
<h3 id="Taormina"><a href="#Taormina" class="headerlink" title="Taormina"></a>Taormina</h3><p>Fed up after shit<br>The summary analysis should be due to the Airbnb address<br>Unsubscribed from all next Airbnb<br>Hurry up and book the Eurostar Monteduro and Rome Marriott Park </p>
<p>Wait until Taormina<br>I feel happy instantly because I live comfortably<br>Play UNO by the pool at night </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-39.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-40.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-41.jpg" alt=""></div></div></div>

<h3 id="Ice-cream"><a href="#Ice-cream" class="headerlink" title="Ice cream"></a>Ice cream</h3><p>Italian ice cream is really special<br>Wander all the way and eat all the way, buy when you come across<br>I’m afraid I can’t eat it again </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-47.jpg" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-43.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-44.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-45.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-48.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-51.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-53.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-54.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-55.jpg" alt=""></div></div></div>

<h3 id="Ionian-pearls"><a href="#Ionian-pearls" class="headerlink" title="Ionian pearls"></a>Ionian pearls</h3><p>There is a narrow path, the sea is constantly scouring, you can walk to the island<br>Seeing others back and forth is like walking on water<br>I tried it myself and sinked steadily<br>When the sea washed up, there were signs of slipping </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-63.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-64.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-65.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-66.jpg" alt=""></div></div></div>

<h2 id="Supreme-Court"><a href="#Supreme-Court" class="headerlink" title="Supreme Court"></a>Supreme Court</h2><p>Fly back to Rome<br>Passing by the Supreme Court<br>It really has historical characteristics </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-75.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-74.jpg" alt=""></p>
<p>Arrived at Marriott found that the facilities are a bit poor<br>There is no free Wi-Fi, and additional wool is required for activation<br>The Book of Mormon and the New Testament are in the drawer </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-69.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-1-76.jpg" alt=""></div></div><div class="group-picture-row"></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Italy</tag>
        <tag>🇮🇹</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning by Stanford University</title>
    <url>/en/Machine-Learning-by-Stanford-University/</url>
    <content><![CDATA[<p>This is a record of my process of trying to learn machine learning in the course. </p>
<p>I heard of artificial intelligence a year ago, but as an old man who has difficulty accepting new things, he has not really studied it.<br>But I seem to lose my job in this generation of AI🤖️ revolution. Therefore, I will study it hard.<br>However, I am too old to learn, and I have no confidence that I can master it one day. </p>
<p>😂😂😂 </p>
<a id="more"></a>

<hr>
<h2 id="1-Linear-Regression-with-One-Variable"><a href="#1-Linear-Regression-with-One-Variable" class="headerlink" title="1 Linear Regression with One Variable"></a>1 Linear Regression with One Variable</h2><h2 id="2-Linear-Regression-with-Multiple-Variables"><a href="#2-Linear-Regression-with-Multiple-Variables" class="headerlink" title="2 Linear Regression with Multiple Variables"></a>2 Linear Regression with Multiple Variables</h2><h3 id="ex1"><a href="#ex1" class="headerlink" title="ex1"></a>ex1</h3><p>The coding part is my favorite, I like coding 😄 </p>
<h4 id="ComputeCost"><a href="#ComputeCost" class="headerlink" title="ComputeCost"></a>ComputeCost</h4><p>You see, the cost function here<br>(OMG: the formula code is <code>J(\theta) = \cfrac{1}{2m}\sum\limits_{i=1}^{m}(h_\theta(x^{(i)}) - y^{(i)} )^2</code> in markdown) 🤯 </p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="30.615ex" height="6.484ex" role="img" focusable="false" viewBox="0 -1620 13532 2865.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(3213.6, 0)"><g data-mml-node="mrow" transform="translate(659, 760)"><g data-mml-node="mpadded"><g data-mml-node="mrow"></g></g><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mrow" transform="translate(220, -820)"><g data-mml-node="mpadded"><g data-mml-node="mrow"></g></g><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g><rect width="1578" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(5198.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6642.2, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7031.2, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(7988.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8377.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9793.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10405.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(11405.4, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(12739.5, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="38.662ex" height="2.583ex" role="img" focusable="false" viewBox="0 -891.7 17088.6 1141.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(957.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1346.6, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1918.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2585.4, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(3641.2, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mi" transform="translate(469, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mi" transform="translate(4658, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(5507.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(6563.5, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mn" transform="translate(469, -150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="msub" transform="translate(7436.1, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(572, -150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(8633.9, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(9634.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mn" transform="translate(469, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msub" transform="translate(10506.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(572, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(11704.4, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(12704.6, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(14098.9, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(15099.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mi" transform="translate(469, -150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msub" transform="translate(16042.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(572, -150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></p>
<p>I found it is <code>X * theta</code> in the real calculation by <code>Octave</code> instead of <code>theta' * X</code> as the formula shows. </p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">J = sum(((X * theta) - y).^<span class="number">2</span>)/<span class="number">2</span>/m</span><br></pre></td></tr></table></figure>

<h4 id="GradientDescent"><a href="#GradientDescent" class="headerlink" title="GradientDescent"></a>GradientDescent</h4><p>Similarly, the gradient descent here </p>
<p>repeat until convergence: { </p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="36.031ex" height="6.484ex" role="img" focusable="false" viewBox="0 -1620 15925.6 2865.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mi" transform="translate(469, -150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mo" transform="translate(1088.1, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" transform="translate(278, 0)"></path></g><g data-mml-node="msub" transform="translate(2421.9, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mi" transform="translate(469, -150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mo" transform="translate(3454.4, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4454.7, 0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mfrac" transform="translate(5094.7, 0)"><g data-mml-node="mrow" transform="translate(409, 760)"><g data-mml-node="mpadded"><g data-mml-node="mrow"></g></g><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mrow" transform="translate(220, -820)"><g data-mml-node="mpadded"><g data-mml-node="mrow"></g></g><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g><rect width="1078" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(6579.3, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8023.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8412.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(9370, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9759, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11175, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11786.3, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(12786.5, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14120.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(14509.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(572, -293.8) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="16.16ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7142.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(939, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1424, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mtext" transform="translate(1875, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(2125, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2814.8, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" transform="translate(278, 0)"></path></g><g data-mml-node="mn" transform="translate(4148.6, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(4815.2, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mi" transform="translate(6153.9, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(6753.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p>} </p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">theta = theta - alpha/m*(X' * ((X * theta) - y))</span><br></pre></td></tr></table></figure>

<p>It took me several hours to figure out why I use <code>X' * ((X * theta)-y))</code><br>Because all variables X, theta, and y, each is a vector, X’*(…) is equal to the <code>sum()</code> part, as shown in the formula. </p>
<p>Although I passed the test, I still don’t understand 😵 </p>
<h2 id="3-Logistic-Regression"><a href="#3-Logistic-Regression" class="headerlink" title="3 Logistic Regression"></a>3 Logistic Regression</h2><p>To Be Continued… </p>
<p><img src="https://i.imgur.com/v4JpxOp.png" alt="1 Linear Regression with One Variable"><br><img src="https://i.imgur.com/G2Yn9nA.png" alt="2 Linear Regression with Multiple Variables"> </p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Logistic Regression</title>
    <url>/en/Logistic-Regression/</url>
    <content><![CDATA[<h2 id="1-2-1-Warmup-exercise-sigmoid-function"><a href="#1-2-1-Warmup-exercise-sigmoid-function" class="headerlink" title="1.2.1 Warmup exercise: sigmoid function"></a>1.2.1 Warmup exercise: sigmoid function</h2><p>As the sigmoid function is defined as: </p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.738ex" xmlns="http://www.w3.org/2000/svg" width="14.957ex" height="4.774ex" role="img" focusable="false" viewBox="0 -1342 6610.9 2110"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(866, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(1331, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(1997.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3053.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(1528.7, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(722.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(1722.4, 0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="TeXAtom" transform="translate(466, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(778, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g></g></g><rect width="3317.4" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">g = <span class="number">1.</span>/(<span class="number">1</span>+<span class="built_in">exp</span>(-z))</span><br></pre></td></tr></table></figure>

<h2 id="1-2-2-Cost-function-and-gradient"><a href="#1-2-2-Cost-function-and-gradient" class="headerlink" title="1.2.2 Cost function and gradient"></a>1.2.2 Cost function and gradient</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="57.509ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 25419 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(4698.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6142.2, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(6420.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(7198.2, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mi" transform="translate(8532.3, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(8830.3, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(9315.3, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(9792.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(10181.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(11138.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(11527.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12393.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12782.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13394.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(14394.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(14783.3, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(15505.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(16505.8, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(17839.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(18228.9, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(18526.9, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(19011.9, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(19488.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(19877.9, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(20600.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(21600.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(22557.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(22946.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(24363, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(24752, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(25141, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.218ex" xmlns="http://www.w3.org/2000/svg" width="6.529ex" height="5.521ex" role="img" focusable="false" viewBox="0 -1460 2886 2440.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 710)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(1199, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1588, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2057, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(754.8, -686)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="2646" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="26.893ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 11886.8 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(1055.8, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(2540.4, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3984.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4373.4, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5331.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(5720.1, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7136.2, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7747.4, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(8747.6, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10081.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(10470.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></svg></mjx-container></p>
<a id="more"></a>

<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">J = (-y'*<span class="built_in">log</span>(sigmoid(X*theta)) - (<span class="number">1</span>-y)'*<span class="built_in">log</span>(<span class="number">1</span>-sigmoid(X*theta)))/m</span><br><span class="line">grad = (X'*(sigmoid(X*theta) - y))/m</span><br></pre></td></tr></table></figure>

<h2 id="2-3-Cost-function-and-gradient"><a href="#2-3-Cost-function-and-gradient" class="headerlink" title="2.3 Cost function and gradient"></a>2.3 Cost function and gradient</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.014ex" xmlns="http://www.w3.org/2000/svg" width="70.383ex" height="6.549ex" role="img" focusable="false" viewBox="0 -1562.5 31109.3 2894.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(4698.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6142.2, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(6420.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(7198.2, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mi" transform="translate(8532.3, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(8830.3, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(9315.3, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(9792.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(10181.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(11138.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(11527.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12393.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12782.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13394.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(14394.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(14783.3, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(15505.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(16505.8, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(17839.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(18228.9, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(18526.9, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(19011.9, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(19488.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(19877.9, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(20600.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(21600.3, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(22557.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(22946.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(24363, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(24752, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(25141, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(25641.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(26641.5, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(617.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(28626.1, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="msubsup" transform="translate(30236.8, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p>$$\dfrac{\partial J(\theta )}{\partial \theta <em>{j}} = \dfrac{1}{m}\sum</em>{i=1}^{m}(h_{\theta} (x^{(i)}) - y^{(i)})x_{j}^{(i)} + \dfrac{\lambda }{m}\theta _{j}$$</p>
<p>for <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex" xmlns="http://www.w3.org/2000/svg" width="5.08ex" height="1.968ex" role="img" focusable="false" viewBox="0 -666 2245.6 870"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(689.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1745.6, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container>, the <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="4.14ex" height="1.781ex" role="img" focusable="false" viewBox="0 -705 1830 787"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(778, 0)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mi" transform="translate(1361, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g></svg></mjx-container> part = 0 </p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">r1 = sum(theta(<span class="number">2</span>:<span class="keyword">end</span>).^<span class="number">2</span>)*lambda/<span class="number">2</span>/m</span><br><span class="line">J = (-y'*<span class="built_in">log</span>(sigmoid(X*theta)) - (<span class="number">1</span>-y)'*<span class="built_in">log</span>(<span class="number">1</span>-sigmoid(X*theta)))/m + r1</span><br><span class="line"></span><br><span class="line">r2 = <span class="built_in">ones</span>(<span class="built_in">size</span>(theta))</span><br><span class="line">r2(<span class="number">1</span>) = <span class="number">0</span></span><br><span class="line">grad = (X'*(sigmoid(X*theta) - y))/m + (theta.*r2)*lambda/m</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/94LgVsH.png" alt="costFunctionReg"> </p>
<p>Yes, yes, I know I passed. 😄 </p>
<p>But, God knows what happened? 🤔 </p>
<!--more-->

<p><img src="https://i.imgur.com/OFkLk5J.png" alt="3 Logistic Regression"> </p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Neural Networks Representation</title>
    <url>/en/Neural-Networks-Representation/</url>
    <content><![CDATA[<h1 id="Neural-Networks-Representation"><a href="#Neural-Networks-Representation" class="headerlink" title="Neural Networks Representation"></a>Neural Networks Representation</h1><h2 id="1-3-Vectorizing-Logistic-Regression"><a href="#1-3-Vectorizing-Logistic-Regression" class="headerlink" title="1.3 Vectorizing Logistic Regression"></a>1.3 Vectorizing Logistic Regression</h2><p>All right, I already used the Vectorized approach and without any loops last exercise. </p>
<a id="more"></a>

<h2 id="1-4-One-vs-all-Classification"><a href="#1-4-One-vs-all-Classification" class="headerlink" title="1.4 One-vs-all Classification"></a>1.4 One-vs-all Classification</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">initial_theta = <span class="built_in">zeros</span>(n + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">options = optimset(<span class="string">'GradObj'</span>, <span class="string">'on'</span>, <span class="string">'MaxIter'</span>, <span class="number">50</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:num_labels</span><br><span class="line">    [theta] = fmincg(@(t)(lrCostFunction(t, X, (y == <span class="built_in">i</span>), lambda)), initial_theta, options);</span><br><span class="line"></span><br><span class="line">all_theta(<span class="built_in">i</span>,:) = [theta];</span><br></pre></td></tr></table></figure>

<p>the key points here are: </p>
<ul>
<li><code>for</code> is needed here to loop from <code>1</code> to <code>num_labels</code> </li>
<li><code>all_theta</code> should assigned with <code>(i,:)</code>, otherwise it will be a one-dimensional vector. </li>
</ul>
<h2 id="1-4-1-One-vs-all-Prediction"><a href="#1-4-1-One-vs-all-Prediction" class="headerlink" title="1.4.1 One-vs-all Prediction"></a>1.4.1 One-vs-all Prediction</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A = sigmoid(X * all_theta');</span><br><span class="line">[m, p] = <span class="built_in">max</span>(A, [], <span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<p>the <code>max</code> function will return a two-dimensional vector, <code>m</code> is the value, and <code>p</code> is the max index in that row. </p>
<h2 id="2-Neural-Networks"><a href="#2-Neural-Networks" class="headerlink" title="2 Neural Networks"></a>2 Neural Networks</h2><p>Finally, I touched the Neural Networks with so many classes after. 😳 </p>
<p>The <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="5.391ex" height="2.034ex" role="img" focusable="false" viewBox="0 -705 2382.7 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mn" transform="translate(469, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(969, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1413.7, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mn" transform="translate(1882.7, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></svg></mjx-container> are trained to predict. </p>
<p>Before this, I wondering what is the process of prediction with a trained model. Is it the same with the training process? </p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a0x = <span class="built_in">ones</span>(m, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">A1 = [a0x, X];</span><br><span class="line">A2 = [a0x, sigmoid(A1 * Theta1')];</span><br><span class="line">A3 = sigmoid(A2 * Theta2');</span><br><span class="line"></span><br><span class="line">[v, p] =  <span class="built_in">max</span>(A3, [], <span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/ailb9HX.png" alt=""></p>
<p>Amazing ha! 🤩 </p>
<p>First I forgot to <code>sigmoid</code> the hidden layer and output layer. The Accuracy shows </p>
<blockquote>
<p>Training Set Accuracy: 69.62 </p>
</blockquote>
<p>And it will get the same accuracy if the output layer has no <code>sigmoid</code> . It also happened in the previous <strong>One-vs-all Prediction</strong>. </p>
<p>Therefore I still have the question. 🧐 </p>
<p>It’s time to keep on the training part. 💪 </p>
<p><img src="https://i.imgur.com/arYwzJt.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Neural Networks Learning</title>
    <url>/en/Neural-Networks-Learning/</url>
    <content><![CDATA[<p>First of all, I have to say that this is the hardest exercise I did when I started this course. </p>
<h2 id="1-3-Feedforward-and-cost-function"><a href="#1-3-Feedforward-and-cost-function" class="headerlink" title="1.3 Feedforward and cost function"></a>1.3 Feedforward and cost function</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.864ex" xmlns="http://www.w3.org/2000/svg" width="36.516ex" height="6.784ex" role="img" focusable="false" viewBox="0 -1733 16140.1 2998.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(4698.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="munderover" transform="translate(6308.9, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(86, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(407.7, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7752.9, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(8030.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(8808.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(490, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mi" transform="translate(10143, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(10441, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(10926, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(11403, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(11792, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(12181, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(13138.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(13527.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msub" transform="translate(14943.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, -150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(15751.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.735ex" xmlns="http://www.w3.org/2000/svg" width="29.41ex" height="3.135ex" role="img" focusable="false" viewBox="0 -1060.7 12999.1 1385.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1167, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1889.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(2889.4, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(490, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4223.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(4612.5, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(4910.5, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(5395.5, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(5872.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(6261.5, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6983.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(7984, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8373, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(9330.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9719.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11135.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msub" transform="translate(11524.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, -150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(12332.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12721.1, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<a id="more"></a>

<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a1 = [<span class="built_in">ones</span>(m, <span class="number">1</span>), X];</span><br><span class="line">z2 = a1*Theta1';</span><br><span class="line">a2 = [<span class="built_in">ones</span>(m, <span class="number">1</span>), sigmoid(z2)];</span><br><span class="line">z3 = a2*Theta2';</span><br><span class="line">a3 = sigmoid(z3);</span><br><span class="line"></span><br><span class="line">I = <span class="built_in">eye</span>(num_labels);</span><br><span class="line">Y = I(y, :);</span><br><span class="line"></span><br><span class="line">J = sum(sum((-Y.*<span class="built_in">log</span>(a3) - (<span class="number">1</span>-Y).*<span class="built_in">log</span>(<span class="number">1</span>-a3) ) / m));</span><br></pre></td></tr></table></figure>

<p>At present, I am still confused about <code>I(y,:)</code>, how can I make y(5000:1) become Y(5000:10), and each row has a matching index? </p>
<h2 id="1-4-Regularized-cost-function"><a href="#1-4-Regularized-cost-function" class="headerlink" title="1.4 Regularized cost function"></a>1.4 Regularized cost function</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.864ex" xmlns="http://www.w3.org/2000/svg" width="36.516ex" height="6.784ex" role="img" focusable="false" viewBox="0 -1733 16140.1 2998.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(4698.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="munderover" transform="translate(6308.9, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(86, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(407.7, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7752.9, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(8030.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(8808.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(490, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mi" transform="translate(10143, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(10441, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(10926, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(11403, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(11792, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(12181, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(13138.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(13527.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msub" transform="translate(14943.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, -150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(15751.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.735ex" xmlns="http://www.w3.org/2000/svg" width="29.41ex" height="3.135ex" role="img" focusable="false" viewBox="0 -1060.7 12999.1 1385.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1167, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1889.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(2889.4, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(490, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4223.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(4612.5, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(4910.5, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(5395.5, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(5872.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(6261.5, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6983.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(7984, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8373, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(576, -150) scale(0.707)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g><g data-mml-node="mo" transform="translate(9330.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9719.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11135.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msub" transform="translate(11524.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, -150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(12332.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12721.1, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.014ex" xmlns="http://www.w3.org/2000/svg" width="20.004ex" height="6.925ex" role="img" focusable="false" viewBox="0 -1728.7 8841.9 3060.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(778, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(617.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2596, 0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="munderover" transform="translate(2874, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(368.4, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500, 0)"></path></g></g></g><g data-mml-node="munderover" transform="translate(4484.7, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(86, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(191.7, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500, 0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000, 0)"></path></g></g></g><g data-mml-node="mo" transform="translate(5928.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msubsup" transform="translate(6317.7, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(690, 0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8049.3, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(389, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.014ex" xmlns="http://www.w3.org/2000/svg" width="16.268ex" height="6.908ex" role="img" focusable="false" viewBox="0 -1720.9 7190.6 3053.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="munderover" transform="translate(944.7, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(368.4, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500, 0)"></path></g></g></g><g data-mml-node="munderover" transform="translate(2555.3, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(86, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(368.4, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500, 0)"></path></g></g></g><g data-mml-node="mo" transform="translate(3999.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msubsup" transform="translate(4388.3, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(690, 0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(6120, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(389, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6912.6, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">r = lambda/<span class="number">2</span>/m * (sum(sum(Theta1(:,<span class="number">2</span>:<span class="keyword">end</span>).^<span class="number">2</span>)) + sum(sum(Theta2(:,<span class="number">2</span>:<span class="keyword">end</span>).^<span class="number">2</span>)));</span><br><span class="line">J = J + r;</span><br></pre></td></tr></table></figure>

<h2 id="2-1-Sigmoid-gradient"><a href="#2-1-Sigmoid-gradient" class="headerlink" title="2.1 Sigmoid gradient"></a>2.1 Sigmoid gradient</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="31.034ex" height="4.676ex" role="img" focusable="false" viewBox="0 -1370 13717 2067"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477, 413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(721.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1110.5, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(1575.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2242.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3298, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(452.5, 676)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(520, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g><rect width="1185" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mi" transform="translate(4723, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(5200, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5589, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(6054, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6720.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(7776.6, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(8253.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(8642.6, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(9107.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9496.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(9885.6, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(10607.8, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(11608, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(12085, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(12474, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(12939, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13328, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">g = sigmoid(z).*(<span class="number">1</span>-sigmoid(z));</span><br></pre></td></tr></table></figure>

<h2 id="2-3-Backpropagation"><a href="#2-3-Backpropagation" class="headerlink" title="2.3 Backpropagation"></a>2.3 Backpropagation</h2><p>$$\delta <em>{k}^{(3)} = (a</em>{k}^{(3)} - y_{k})$$</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="23.754ex" height="2.7ex" role="img" focusable="false" viewBox="0 -943.3 10499.1 1193.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(444, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1125.3, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2181.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(2570.1, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(4301.8, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(5238.6, 0)"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(444, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6636.3, 0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mo" transform="translate(7080.9, 0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(7580.9, 0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477, 413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(8302.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8691.4, 0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(465, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10110.1, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="24.135ex" height="2.7ex" role="img" focusable="false" viewBox="0 -943.3 10667.9 1193.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="TeXAtom" transform="translate(833, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1921.6, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(2977.4, 0)"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="TeXAtom" transform="translate(833, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4843.5, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(5843.7, 0)"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(444, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1465, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1965, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8002.2, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8391.2, 0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(529, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(9731.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g></g></g></svg></mjx-container></p>
<p>$$\dfrac{\partial }{\partial \Theta <em>{ij}^{(l)}}J(\Theta ) = D</em>{ij}^{(l)} = \dfrac{1}{m}\Delta _{ij}^{(l)}$$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">d3 = a3-Y;</span><br><span class="line">d2 = d3*Theta2.*[<span class="built_in">ones</span>(m, <span class="number">1</span>), sigmoidGradient(z2)];</span><br><span class="line"></span><br><span class="line">D1 = d2(:,<span class="number">2</span>:<span class="keyword">end</span>)'*a1;</span><br><span class="line">D2 = d3'*a2;</span><br><span class="line"></span><br><span class="line">Theta1_grad = Theta1_grad + D1/m;</span><br><span class="line">Theta2_grad = Theta2_grad + D2/m;</span><br></pre></td></tr></table></figure>

<h2 id="2-5-Regularized-Neural-Networks"><a href="#2-5-Regularized-Neural-Networks" class="headerlink" title="2.5 Regularized Neural Networks"></a>2.5 Regularized Neural Networks</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.3ex" xmlns="http://www.w3.org/2000/svg" width="10.823ex" height="6.447ex" role="img" focusable="false" viewBox="0 -1391 4783.8 2849.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(1014.4, 676)"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="2354.8" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mi" transform="translate(2594.8, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(3227.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3616.8, 0)"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="mo" transform="translate(4394.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="26.519ex" height="4.613ex" role="img" focusable="false" viewBox="0 -1342 11721.6 2039"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msubsup" transform="translate(1055.8, 0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(828, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(828, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2972.4, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(4028.2, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msubsup" transform="translate(5346.2, 0)"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="TeXAtom" transform="translate(833, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(833, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mstyle" transform="translate(6990, 0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(7990, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(8540, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(9025, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(9476, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(10165.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(11221.6, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.3ex" xmlns="http://www.w3.org/2000/svg" width="10.823ex" height="6.447ex" role="img" focusable="false" viewBox="0 -1391 4783.8 2849.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(1014.4, 676)"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="2354.8" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mi" transform="translate(2594.8, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(3227.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3616.8, 0)"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="mo" transform="translate(4394.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="35.862ex" height="4.676ex" role="img" focusable="false" viewBox="0 -1370 15850.9 2067"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msubsup" transform="translate(1055.8, 0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(828, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(828, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2972.4, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(4028.2, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msubsup" transform="translate(5346.2, 0)"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="TeXAtom" transform="translate(833, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(833, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7212.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(8212.5, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(367.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msubsup" transform="translate(9530.5, 0)"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="TeXAtom" transform="translate(778, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(687, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(778, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mstyle" transform="translate(11119.3, 0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(12119.3, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(12669.3, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(13154.3, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(13605.3, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(14295.1, 0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mn" transform="translate(15350.9, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">Theta1_grad(:,<span class="number">2</span>:<span class="keyword">end</span>) = Theta1_grad(:,<span class="number">2</span>:<span class="keyword">end</span>) + lambda/m*Theta1(:,<span class="number">2</span>:<span class="keyword">end</span>);</span><br><span class="line">Theta2_grad(:,<span class="number">2</span>:<span class="keyword">end</span>) = Theta2_grad(:,<span class="number">2</span>:<span class="keyword">end</span>) + lambda/m*Theta2(:,<span class="number">2</span>:<span class="keyword">end</span>);</span><br></pre></td></tr></table></figure>

<h2 id="The-hidden-layer"><a href="#The-hidden-layer" class="headerlink" title="The hidden layer"></a>The hidden layer</h2><p><img src="https://i.imgur.com/LqYfS7h.png" alt=""></p>
<p><img src="https://i.imgur.com/c1wo2Cy.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Advice for Applying Machine Learning</title>
    <url>/en/Advice-for-Applying-Machine-Learning/</url>
    <content><![CDATA[<h2 id="1-2-Regularized-linear-regression-cost-function"><a href="#1-2-Regularized-linear-regression-cost-function" class="headerlink" title="1.2 Regularized linear regression cost function"></a>1.2 Regularized linear regression cost function</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.014ex" xmlns="http://www.w3.org/2000/svg" width="49.903ex" height="6.972ex" role="img" focusable="false" viewBox="0 -1749.5 22057 3081.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(1491, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2157.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3213.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(659, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mrow" transform="translate(5031.6, 0)"><g data-mml-node="mo"><path data-c="28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path></g><g data-mml-node="munderover" transform="translate(792, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2236, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2625, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3582.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3971.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5387.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5998.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(6999.2, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8333.2, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(9125.8, 0)"><path data-c="29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></g></g><g data-mml-node="mo" transform="translate(15171.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(16171.8, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(617.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mrow" transform="translate(17989.8, 0)"><g data-mml-node="mo"><path data-c="28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path></g><g data-mml-node="munderover" transform="translate(792, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="msubsup" transform="translate(2402.7, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3275.2, 0)"><path data-c="29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">J = <span class="number">1</span>/(<span class="number">2</span>*m)*sum( (X*theta - y).^<span class="number">2</span> ) + lambda/(<span class="number">2</span>*m)*sum(theta(<span class="number">2</span>:<span class="keyword">end</span>).^<span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="1-3-Regularized-linear-regression-gradient"><a href="#1-3-Regularized-linear-regression-gradient" class="headerlink" title="1.3 Regularized linear regression gradient"></a>1.3 Regularized linear regression gradient</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="40.137ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 17740.8 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 710)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(1199, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1588, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2057, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(723.7, -686)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><rect width="2646" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(3163.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(4219.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(5704.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7148.2, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7537.2, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8494.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8883.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10299.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10911.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(11911.4, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(13245.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(13634.5, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(15050.5, 0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g><g data-mml-node="mi" transform="translate(15495.2, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(16185, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(17240.8, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.827ex" xmlns="http://www.w3.org/2000/svg" width="51.302ex" height="6.785ex" role="img" focusable="false" viewBox="0 -1749.5 22675.5 2999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 710)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(1199, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1588, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2057, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(754.8, -686)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="2646" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(3163.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(4219.6, 0)"><g data-mml-node="mo"><path data-c="28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path></g><g data-mml-node="mstyle" transform="translate(792, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(409, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(2276.7, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3720.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4109.7, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5067.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(5456.3, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6872.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7483.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(8483.8, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9817.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(10206.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11623, 0)"><path data-c="29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></g></g><g data-mml-node="mo" transform="translate(16856.8, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mstyle" transform="translate(17857, 0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(367.5, 676)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msub" transform="translate(19175, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(19985.3, 0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g><g data-mml-node="mi" transform="translate(20430, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(21119.8, 0)"><path data-c="2A7E" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM674 172Q692 172 694 154Q694 142 687 137Q685 135 395 -2L107 -138H101Q83 -136 83 -118Q83 -106 96 -100Q100 -98 380 35T665 170T674 172Z"></path></g><g data-mml-node="mn" transform="translate(22175.5, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">r = theta; r(<span class="number">1</span>) = <span class="number">0</span>;</span><br><span class="line">grad = <span class="number">1</span>/m*(X'*(X*theta-y)) + lambda/m*r;</span><br></pre></td></tr></table></figure>

<h2 id="2-1-Learning-curves"><a href="#2-1-Learning-curves" class="headerlink" title="2.1 Learning curves"></a>2.1 Learning curves</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.827ex" xmlns="http://www.w3.org/2000/svg" width="36.47ex" height="6.785ex" role="img" focusable="false" viewBox="0 -1749.5 16119.8 2999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="TeXAtom" transform="translate(555, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(812, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1341, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1686, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2221.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2610.4, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(3079.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3746.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(4802, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(659, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mrow" transform="translate(6620, 0)"><g data-mml-node="mo"><path data-c="5B" d="M269 -1249V1750H577V1677H342V-1176H577V-1249H269Z"></path></g><g data-mml-node="munderover" transform="translate(583, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2027, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2416, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3373.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3762.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5178.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5789.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(6790.2, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8124.2, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(8916.8, 0)"><path data-c="5D" d="M5 1677V1750H313V-1249H5V-1176H240V1677H5Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:m</span><br><span class="line">    xi = X(<span class="number">1</span>:<span class="built_in">i</span>,:); yi = y(<span class="number">1</span>:<span class="built_in">i</span>);</span><br><span class="line"></span><br><span class="line">    theta = trainLinearReg(xi, yi, lambda);</span><br><span class="line">    error_train(<span class="built_in">i</span>) = linearRegCostFunction(xi, yi, theta, <span class="number">0</span>)</span><br><span class="line">    error_val(<span class="built_in">i</span>) = linearRegCostFunction(Xval, yval, theta, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h2 id="3-Polynomial-regression"><a href="#3-Polynomial-regression" class="headerlink" title="3 Polynomial regression"></a>3 Polynomial regression</h2><p>$$ h_{\theta }(x) = \theta _{0} + \theta _{1}<em>(waterLevel) + \theta _{2}</em>(waterLevel)^{2} + … + \theta _{p}*(waterLevel)^{p} $$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">X_poly = X.^[<span class="number">1</span>:<span class="number">1</span>:p];</span><br></pre></td></tr></table></figure>

<h2 id="3-3-Selecting-λ-using-a-cross-validation-set"><a href="#3-3-Selecting-λ-using-a-cross-validation-set" class="headerlink" title="3.3 Selecting λ using a cross validation set"></a>3.3 Selecting λ using a cross validation set</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">length</span>(lambda_vec)</span><br><span class="line">    lambda = lambda_vec(<span class="built_in">i</span>);</span><br><span class="line"></span><br><span class="line">    theta = trainLinearReg(X, y, lambda);</span><br><span class="line">    error_train(<span class="built_in">i</span>) = linearRegCostFunction(X, y, theta, <span class="number">0</span>)</span><br><span class="line">    error_val(<span class="built_in">i</span>) = linearRegCostFunction(Xval, yval, theta, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/yyXPMcV.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Support Vector Machines</title>
    <url>/en/Support-Vector-Machines/</url>
    <content><![CDATA[<p>I have heard of SVM many times before, and now I see how powerful it is. 😄 </p>
<h2 id="1-2-1-Gaussian-Kernel"><a href="#1-2-1-Gaussian-Kernel" class="headerlink" title="1.2.1 Gaussian Kernel"></a>1.2.1 Gaussian Kernel</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.268ex" xmlns="http://www.w3.org/2000/svg" width="72.794ex" height="7.668ex" role="img" focusable="false" viewBox="0 -1944.7 32174.8 3389.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"></path></g><g data-mml-node="TeXAtom" transform="translate(849, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(477, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1006, 0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1578, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(2047, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(2516, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2861, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3390, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3720.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(4109.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5525.4, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(5970.1, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7433.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8100.3, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(9156.1, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(9622.1, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(10194.1, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mrow" transform="translate(10697.1, 0)"><g data-mml-node="mo"><path data-c="239B" d="M837 1154Q843 1148 843 1145Q843 1141 818 1106T753 1002T667 841T574 604T494 299Q417 -84 417 -609Q417 -641 416 -647T411 -654Q409 -655 366 -655Q299 -655 297 -654Q292 -652 292 -643T291 -583Q293 -400 304 -242T347 110T432 470T574 813T785 1136Q787 1139 790 1142T794 1147T796 1150T799 1152T802 1153T807 1154T813 1154H819H837Z" transform="translate(0, 790.7)"></path><path data-c="239D" d="M843 -635Q843 -638 837 -644H820Q801 -644 800 -643Q792 -635 785 -626Q684 -503 605 -363T473 -75T385 216T330 518T302 809T291 1093Q291 1144 291 1153T296 1164Q298 1165 366 1165Q409 1165 411 1164Q415 1163 416 1157T417 1119Q417 529 517 109T833 -617Q843 -631 843 -635Z" transform="translate(0, -800.7)"></path></g><g data-mml-node="mo" transform="translate(875, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mstyle" transform="translate(1653, 0)"><g data-mml-node="mfrac"><g data-mml-node="msup" transform="translate(220, 853.3)"><g data-mml-node="mrow"><g data-mml-node="mo"><svg width="278" height="1286.7" y="-393.3" x="27.5" viewBox="0 -159.4 278 1286.7"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1, 1.932)"></path></svg></g><g data-mml-node="msup" transform="translate(333, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1971.3, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(2971.5, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4435, 0)"><svg width="278" height="1286.7" y="-393.3" x="27.5" viewBox="0 -159.4 278 1286.7"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1, 1.932)"></path></svg></g></g><g data-mml-node="mn" transform="translate(4768, 620.4) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mrow" transform="translate(2068.5, -719.9)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="msup" transform="translate(500, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" transform="translate(571, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><rect width="5371.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(7264.5, 0)"><path data-c="239E" d="M31 1143Q31 1154 49 1154H59Q72 1154 75 1152T89 1136Q190 1013 269 873T401 585T489 294T544 -8T572 -299T583 -583Q583 -634 583 -643T577 -654Q575 -655 508 -655Q465 -655 463 -654Q459 -653 458 -647T457 -609Q457 -58 371 340T100 1037Q87 1059 61 1098T31 1143Z" transform="translate(0, 790.7)"></path><path data-c="23A0" d="M56 -644H50Q31 -644 31 -635Q31 -632 37 -622Q69 -579 100 -527Q286 -228 371 170T457 1119Q457 1161 462 1164Q464 1165 520 1165Q575 1165 577 1164Q582 1162 582 1153T583 1093Q581 910 570 752T527 400T442 40T300 -303T89 -626Q78 -640 75 -642T61 -644H56Z" transform="translate(0, -800.7)"></path></g></g><g data-mml-node="mo" transform="translate(19114.4, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(20170.2, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(20636.2, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(21208.2, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mrow" transform="translate(21711.2, 0)"><g data-mml-node="mo"><path data-c="28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path></g><g data-mml-node="mo" transform="translate(792, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mstyle" transform="translate(1570, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 803.3)"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1056, 477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1056, -285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2378.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msubsup" transform="translate(2767.1, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(572, -317.1) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(4405.4, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(5405.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(572, -317.1) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="msup" transform="translate(6869.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(3313.5, -719.9)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="msup" transform="translate(500, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" transform="translate(571, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><rect width="7861.6" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(9671.6, 0)"><path data-c="29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">sim = <span class="built_in">exp</span>(-sum((x2-x1).^<span class="number">2</span>)./(<span class="number">2</span>*sigma.^<span class="number">2</span>));</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="1-2-3-Example-Dataset-3"><a href="#1-2-3-Example-Dataset-3" class="headerlink" title="1.2.3 Example Dataset 3"></a>1.2.3 Example Dataset 3</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">l = [<span class="number">0.01</span>, <span class="number">0.03</span>, <span class="number">0.1</span>, <span class="number">0.3</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">30</span>];</span><br><span class="line">mix = <span class="built_in">realmax</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c = l</span><br><span class="line">    <span class="keyword">for</span> s = l</span><br><span class="line">        model= svmTrain(X, y, c, @(x1, x2) gaussianKernel(x1, x2, s));</span><br><span class="line"></span><br><span class="line">        p = svmPredict(model, Xval);</span><br><span class="line">        m = <span class="built_in">mean</span>(double(p ~= yval));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> m &lt; mix</span><br><span class="line">            C = c;sigma = s;mix = m;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>I wrote the Gaussian kernel function so that sigma can be passed as a vector to get an analog vector, so <code>g = gaussianKernel(x1, x2, s)</code> is a vector, and you can skip the extra calculations in the <code>for c = l</code> loop <code>for s = l</code>. So if <code>svmTrain</code> can be calculated as a vector, <code>for c = l</code> can also be skipped. </p>
<p>But it cannot. 😢 </p>
<p>Is it related to functional programming? </p>
<h2 id="2-1-1-Vocabulary-List"><a href="#2-1-1-Vocabulary-List" class="headerlink" title="2.1.1 Vocabulary List"></a>2.1.1 Vocabulary List</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">i</span> = <span class="built_in">find</span>(strcmp(vocabList, str));</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">i</span></span><br><span class="line">    word_indices = [word_indices; <span class="built_in">i</span>];</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h2 id="2-2-Extracting-Features-from-Emails"><a href="#2-2-Extracting-Features-from-Emails" class="headerlink" title="2.2 Extracting Features from Emails"></a>2.2 Extracting Features from Emails</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.469ex" xmlns="http://www.w3.org/2000/svg" width="25.684ex" height="4.07ex" role="img" focusable="false" viewBox="0 -1149.5 11352.4 1799"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(849.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(1905.6, 0)"><g data-mml-node="mo"><path data-c="5B" d="M224 -649V1150H455V1099H275V-598H455V-649H224Z"></path></g><g data-mml-node="mtable" transform="translate(472, 0)"><g data-mml-node="mtr" transform="translate(0, -275)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(500, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(750, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(1028, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(1278, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mtext" transform="translate(1778, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(2028, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(2528, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2778, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(3056, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(3306, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mtext" transform="translate(3806, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(4056, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(4556, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4806, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(5084, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(5334, 0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(5834, 0)"><path data-c="A0" d=""></path></g></g></g></g><g data-mml-node="mo" transform="translate(6556, 0)"><path data-c="5D" d="M16 1099V1150H247V-649H16V-598H196V1099H16Z"></path></g></g><g data-mml-node="mo" transform="translate(9211.3, 0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="msup" transform="translate(10156.1, 0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="211D" d="M17 665Q17 672 28 683H221Q415 681 439 677Q461 673 481 667T516 654T544 639T566 623T584 607T597 592T607 578T614 565T618 554L621 548Q626 530 626 497Q626 447 613 419Q578 348 473 326L455 321Q462 310 473 292T517 226T578 141T637 72T686 35Q705 30 705 16Q705 7 693 -1H510Q503 6 404 159L306 310H268V183Q270 67 271 59Q274 42 291 38Q295 37 319 35Q344 35 353 28Q362 17 353 3L346 -1H28Q16 5 16 16Q16 35 55 35Q96 38 101 52Q106 60 106 341T101 632Q95 645 55 648Q17 648 17 665ZM241 35Q238 42 237 45T235 78T233 163T233 337V621L237 635L244 648H133Q136 641 137 638T139 603T141 517T141 341Q141 131 140 89T134 37Q133 36 133 35H241ZM457 496Q457 540 449 570T425 615T400 634T377 643Q374 643 339 648Q300 648 281 635Q271 628 270 610T268 481V346H284Q327 346 375 352Q421 364 439 392T457 496ZM492 537T492 496T488 427T478 389T469 371T464 361Q464 360 465 360Q469 360 497 370Q593 400 593 495Q593 592 477 630L457 637L461 626Q474 611 488 561Q492 537 492 496ZM464 243Q411 317 410 317Q404 317 401 315Q384 315 370 312H346L526 35H619L606 50Q553 109 464 243Z"></path></g></g><g data-mml-node="mi" transform="translate(722, 413) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = word_indices</span><br><span class="line">    x(<span class="built_in">i</span>) = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/rBji3uP.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Unsupervised learning</title>
    <url>/en/Unsupervised-Learning/</url>
    <content><![CDATA[<h2 id="1-1-1-Finding-closest-centroids"><a href="#1-1-1-Finding-closest-centroids" class="headerlink" title="1.1.1 Finding closest centroids"></a>1.1.1 Finding closest centroids</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.469ex" xmlns="http://www.w3.org/2000/svg" width="25.825ex" height="4.07ex" role="img" focusable="false" viewBox="0 -1149.5 11414.7 1799"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" transform="translate(433, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1554.9, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" transform="translate(278, 0)"></path></g><g data-mml-node="mi" transform="translate(2888.6, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(3300.6, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3745.3, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4623.3, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4968.3, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mrow" transform="translate(5568.3, 0)"><g data-mml-node="mo"><path data-c="28" d="M180 96T180 250T205 541T266 770T353 944T444 1069T527 1150H555Q561 1144 561 1141Q561 1137 545 1120T504 1072T447 995T386 878T330 721T288 513T272 251Q272 133 280 56Q293 -87 326 -209T399 -405T475 -531T536 -609T561 -640Q561 -643 555 -649H527Q483 -612 443 -568T353 -443T266 -270T205 -41Z"></path></g><g data-mml-node="msup" transform="translate(597, 0)"><g data-mml-node="mrow"><g data-mml-node="mo"><svg width="278" height="1386.7" y="-443.3" x="27.5" viewBox="0 -171.8 278 1386.7"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1, 2.082)"></path></svg></g><g data-mml-node="msup" transform="translate(333, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1971.3, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(2971.5, 0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(603, -150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mo" transform="translate(3915.9, 0)"><svg width="278" height="1386.7" y="-443.3" x="27.5" viewBox="0 -171.8 278 1386.7"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1, 2.082)"></path></svg></g></g><g data-mml-node="mn" transform="translate(4248.9, 670.4) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(5249.4, 0)"><path data-c="29" d="M35 1138Q35 1150 51 1150H56H69Q113 1113 153 1069T243 944T330 771T391 541T416 250T391 -40T330 -270T243 -443T152 -568T69 -649H56Q43 -649 39 -647T35 -637Q65 -607 110 -548Q283 -316 316 56Q324 133 324 251Q324 368 316 445Q278 877 48 1123Q36 1137 35 1138Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">v = [];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:K</span><br><span class="line">    v = [v, sum((X - centroids(<span class="built_in">j</span>,:)).^<span class="number">2</span>, <span class="number">2</span>)];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">[v, idx] = <span class="built_in">min</span>(v, [], <span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<p>The <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.564ex" xmlns="http://www.w3.org/2000/svg" width="1.258ex" height="2.26ex" role="img" focusable="false" viewBox="0 -749.5 556 999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(278, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g></g></g></svg></mjx-container> symbol means <a href="https://en.wikipedia.org/wiki/Norm_(mathematics)">Norm</a> not Absolute value the first time as I thought. 😂 </p>
<a id="more"></a>

<h2 id="1-1-2-Computing-centroid-means"><a href="#1-1-2-Computing-centroid-means" class="headerlink" title="1.1.2 Computing centroid means"></a>1.1.2 Computing centroid means</h2><p>$$\mu <em>k := \dfrac{1}{\left | C_k \right |}\sum</em>{i\in  C_k}^{ }x^{(i)}$$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:K</span><br><span class="line">    <span class="built_in">j</span> = (idx == <span class="built_in">i</span>);</span><br><span class="line">    v = X(<span class="built_in">j</span>, :);</span><br><span class="line">    n = <span class="built_in">size</span>(v, <span class="number">1</span>);</span><br><span class="line">    centroids(<span class="built_in">i</span>, :) = sum(v)/n;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/UEBpwso.gif" alt=""></p>
<h2 id="2-2-Implementing-PCA"><a href="#2-2-Implementing-PCA" class="headerlink" title="2.2 Implementing PCA"></a>2.2 Implementing PCA</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.464ex" xmlns="http://www.w3.org/2000/svg" width="22.436ex" height="2.481ex" role="img" focusable="false" viewBox="0 -891.7 9916.6 1096.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(250, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(719, 0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1291, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2446.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mtext" transform="translate(3502.6, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3752.6, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(4272.6, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(4822.6, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5273.6, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(5802.6, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6235.6, 0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6735.6, 0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msup" transform="translate(7613.6, 0)"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mi" transform="translate(903.2, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mi" transform="translate(9064.6, 0)"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">sigma = X'*X/m;</span><br><span class="line">[U, S, V] = svd(sigma);</span><br></pre></td></tr></table></figure>

<h2 id="2-3-1-Projecting-the-data-onto-the-principal-components"><a href="#2-3-1-Projecting-the-data-onto-the-principal-components" class="headerlink" title="2.3.1 Projecting the data onto the principal components"></a>2.3.1 Projecting the data onto the principal components</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">Z = X * U;</span><br><span class="line">Z = Z(:,<span class="number">1</span>:K);</span><br></pre></td></tr></table></figure>

<h2 id="2-3-2-Reconstructing-an-approximation-of-the-data"><a href="#2-3-2-Reconstructing-an-approximation-of-the-data" class="headerlink" title="2.3.2 Reconstructing an approximation of the data"></a>2.3.2 Reconstructing an approximation of the data</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">X_rec = Z * U(:,<span class="number">1</span>:K)';</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/TjyYT8G.gif" alt=""></p>
<p><img src="https://i.imgur.com/duSTjdI.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Anomaly Detection &amp; Recommender Systems</title>
    <url>/en/Anomaly-Detection-Recommender-Systems/</url>
    <content><![CDATA[<h2 id="Anomaly-Detection"><a href="#Anomaly-Detection" class="headerlink" title="Anomaly Detection"></a>Anomaly Detection</h2><div style="width: 400px">
<img src="https://i.imgur.com/slIPtvp.gif">
</div>

<h3 id="1-1-Gaussian-distribution"><a href="#1-1-Gaussian-distribution" class="headerlink" title="1.1 Gaussian distribution"></a>1.1 Gaussian distribution</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.308ex" xmlns="http://www.w3.org/2000/svg" width="27.169ex" height="5.385ex" role="img" focusable="false" viewBox="0 -1360.3 12008.8 2380.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(503, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(892, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1464, 0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g><g data-mml-node="mi" transform="translate(1908.7, 0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mo" transform="translate(2511.7, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(2956.3, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mn" transform="translate(571, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(3930.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4597.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(5653.4, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(1418.8, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="msqrt" transform="translate(220, -962)"><g transform="translate(853, 0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="msup" transform="translate(1070, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mn" transform="translate(571, 289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(0, 142)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="2044.6" height="60" x="853" y="882"></rect></g><rect width="3097.6" height="60" x="120" y="220"></rect></g></g><g data-mml-node="msup" transform="translate(8991, 0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="TeXAtom" transform="translate(466, 480.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(778, 0)"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(961, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1739, 0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="msup" transform="translate(2342, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 363)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(806.9, -515.3) scale(0.707)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="msup" transform="translate(500, 0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mn" transform="translate(571, 289)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><rect width="2520" height="60" x="120" y="220"></rect></g></g></g></g></g></svg></mjx-container></p>
<a id="more"></a>

<h3 id="1-2-Estimating-parameters-for-a-Gaussian"><a href="#1-2-Estimating-parameters-for-a-Gaussian" class="headerlink" title="1.2 Estimating parameters for a Gaussian"></a>1.2 Estimating parameters for a Gaussian</h3><p>$$\mu <em>{i} = \dfrac {1}{m}\sum</em>{j=1}^{m}x _{i}^{(j)}$$</p>
<p>$$\sigma <em>{i}^{2} = \dfrac{1}{m}\sum</em>{j=1}^{m}(x _{i}^{(j)} - \mu _{i})^2$$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">mu = sum(X)/m;</span><br><span class="line">sigma2 = sum((X-mu).^<span class="number">2</span>)/m;</span><br></pre></td></tr></table></figure>

<p>I thought there was a problem with these equations because the area with the highest probability is not shown as a red ellipse in the pdf tour. </p>
<p>After debugging a bit, I found that the center color of the Gaussian distribution contour is yellow, which is almost invisible on a screen without Retina. 😂😂😂 </p>
<h3 id="1-3-Selecting-the-threshold-ε"><a href="#1-3-Selecting-the-threshold-ε" class="headerlink" title="1.3 Selecting the threshold, ε"></a>1.3 Selecting the threshold, ε</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.991ex" xmlns="http://www.w3.org/2000/svg" width="18.027ex" height="5.027ex" role="img" focusable="false" viewBox="0 -1342 7968 2222"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mn" transform="translate(643, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1324.3, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(2380.1, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 676)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(722.2, 0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(1222.4, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(1725.4, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2176.4, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2642.4, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(3297.7, 0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(3797.9, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4248.9, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(4714.9, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g><g data-mml-node="mrow" transform="translate(581.2, -686)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(2075.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(3075.4, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3526.4, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(3992.4, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g><rect width="5347.9" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.016ex" xmlns="http://www.w3.org/2000/svg" width="15.308ex" height="4.962ex" role="img" focusable="false" viewBox="0 -1302 6766 2193"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(2130.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(3186.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(1357.7, 676)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1086.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2086.4, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(2636.4, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g><rect width="3339.4" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.016ex" xmlns="http://www.w3.org/2000/svg" width="14.389ex" height="4.962ex" role="img" focusable="false" viewBox="0 -1302 6360 2193"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(451, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(917, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(1627.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(2683.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(1406.2, 676)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1086.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2086.4, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(2636.4, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="3436.4" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">p = (pval &lt; epsilon);</span><br><span class="line">tp = sum((p == <span class="number">1</span>) &amp; (yval == <span class="number">1</span>));</span><br><span class="line">fp = sum((p == <span class="number">1</span>) &amp; (yval == <span class="number">0</span>));</span><br><span class="line">fn = sum((p == <span class="number">0</span>) &amp; (yval == <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">prec = tp/(tp+fp);</span><br><span class="line">rec = tp/(tp+fn);</span><br><span class="line"></span><br><span class="line">F1 = <span class="number">2</span>*prec*rec/(prec+rec);</span><br></pre></td></tr></table></figure>

<h2 id="Recommender-Systems"><a href="#Recommender-Systems" class="headerlink" title="Recommender Systems"></a>Recommender Systems</h2><h3 id="2-1-Movie-ratings-dataset"><a href="#2-1-Movie-ratings-dataset" class="headerlink" title="2.1 Movie ratings dataset"></a>2.1 Movie ratings dataset</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.469ex" xmlns="http://www.w3.org/2000/svg" width="96.292ex" height="4.07ex" role="img" focusable="false" viewBox="0 -1149.5 42561.3 1799"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(1129.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(2185.6, 0)"><g data-mml-node="mo"><path data-c="5B" d="M224 -649V1150H455V1099H275V-598H455V-649H224Z"></path></g><g data-mml-node="mtable" transform="translate(472, 0)"><g data-mml-node="mtr" transform="translate(0, -275)"><g data-mml-node="mtd"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1167, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(2692.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(3851.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(4851.9, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(5324.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(6324.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(6713.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8239.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(9398.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(10398.3, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(10648.3, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(10926.3, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(11398.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(12398.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(12787.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1659.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(14858.5, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(16017.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(17017.7, 0)"><path data-c="A0" d=""></path></g></g></g></g><g data-mml-node="mo" transform="translate(17739.7, 0)"><path data-c="5D" d="M16 1099V1150H247V-649H16V-598H196V1099H16Z"></path></g></g><g data-mml-node="mo" transform="translate(20397.3, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(20842, 0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mi" transform="translate(21546, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(22122, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(22588, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(22949, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(23755.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(24811.5, 0)"><g data-mml-node="mo"><path data-c="5B" d="M224 -649V1150H455V1099H275V-598H455V-649H224Z"></path></g><g data-mml-node="mtable" transform="translate(472, 0)"><g data-mml-node="mtr" transform="translate(0, -275)"><g data-mml-node="mtd"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1167, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(2589.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(3748.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(4748.9, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(5221.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(6221.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(6610.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8033.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(9192.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(10192.3, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(10442.3, 0)"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g><g data-mml-node="mtext" transform="translate(10720.3, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(11192.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(12192.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(12581.7, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1443.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(14396.5, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(15555.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(16555.7, 0)"><path data-c="A0" d=""></path></g></g></g></g><g data-mml-node="mo" transform="translate(17277.7, 0)"><path data-c="5D" d="M16 1099V1150H247V-649H16V-598H196V1099H16Z"></path></g></g></g></g></svg></mjx-container></p>
<h3 id="2-2-1-Collaborative-filtering-cost-function"><a href="#2-2-1-Collaborative-filtering-cost-function" class="headerlink" title="2.2.1 Collaborative filtering cost function"></a>2.2.1 Collaborative filtering cost function</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="61.104ex" height="6.258ex" role="img" focusable="false" viewBox="0 -1342 27007.9 2766.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1022, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2547.7, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(2992.3, 0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="msup" transform="translate(4331, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1659.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6401.8, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(6846.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8269.1, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(8713.8, 0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="msup" transform="translate(10052.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1443.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11867.2, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12534, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(13589.8, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220, -686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="700" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(14696.4, 0)"><g data-mml-node="mo" transform="translate(1269.6, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(1813, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(2091, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2542, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2931, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3276, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3554, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(3966, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4355, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5133, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1991.6, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(18679.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(19068.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(19457.5, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(20818, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(21754.8, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(23393.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(24393.3, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(26215.3, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">tmp = X*Theta' .* R - Y;</span><br><span class="line">J = sum(sum(tmp.^<span class="number">2</span>))/<span class="number">2</span>;</span><br></pre></td></tr></table></figure>

<h3 id="2-2-2-Collaborative-filtering-gradient"><a href="#2-2-2-Collaborative-filtering-gradient" class="headerlink" title="2.2.2 Collaborative filtering gradient"></a>2.2.2 Collaborative filtering gradient</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="36.275ex" height="6.369ex" role="img" focusable="false" viewBox="0 -1391 16033.3 2815.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(611.5, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><rect width="2182.1" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2699.9, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(3755.6, 0)"><g data-mml-node="mo" transform="translate(774.2, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(690, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1141, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1530, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1875, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2153, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2565, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2954, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3732, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1496.2, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(6748.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(7137.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(7526.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8886.6, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(9823.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11461.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(12461.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14283.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(14672.9, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="36.4ex" height="6.369ex" role="img" focusable="false" viewBox="0 -1391 16089 2815.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(635.2, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><rect width="2229.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2747.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(3803, 0)"><g data-mml-node="mo" transform="translate(750.5, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(623, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1074, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1463, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1808, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2086, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2498, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2887, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3665, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1472.5, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(6748.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(7137.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(7526.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(8886.6, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(9823.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11461.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(12461.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14283.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(14672.9, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">X_grad = tmp*Theta;</span><br><span class="line">Theta_grad = tmp'*X;</span><br></pre></td></tr></table></figure>

<h3 id="2-2-3-Regularized-cost-function"><a href="#2-2-3-Regularized-cost-function" class="headerlink" title="2.2.3 Regularized cost function"></a>2.2.3 Regularized cost function</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="61.104ex" height="6.258ex" role="img" focusable="false" viewBox="0 -1342 27007.9 2766.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1022, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2547.7, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(2992.3, 0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="msup" transform="translate(4331, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1659.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6401.8, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(6846.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8269.1, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(8713.8, 0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="msup" transform="translate(10052.4, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1443.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11867.2, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12534, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mstyle" transform="translate(13589.8, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220, -686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="700" height="60" x="120" y="220"></rect></g></g><g data-mml-node="munderover" transform="translate(14696.4, 0)"><g data-mml-node="mo" transform="translate(1269.6, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(1813, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(2091, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2542, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2931, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3276, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3554, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(3966, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4355, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5133, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1991.6, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(18679.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(19068.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(19457.5, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(20818, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(21754.8, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(23393.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(24393.3, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(26215.3, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p>$$+ \left ( \dfrac{\lambda }{2} \sum<em>{j=1}^{n_u} \sum</em>{k=1}^{n} (\theta _{k}^{(j)} )^2 \right )$$</p>
<p>$$+ \left ( \dfrac{\lambda }{2} \sum<em>{i=1}^{n_m} \sum</em>{k=1}^{n} (x _{k}^{(i)} )^2 \right )$$</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">J = J + lambda/<span class="number">2</span>*(sum(sum(Theta.^<span class="number">2</span>))) + lambda/<span class="number">2</span>*(sum(sum(X.^<span class="number">2</span>)));</span><br></pre></td></tr></table></figure>

<h3 id="2-2-4-Regularized-gradient"><a href="#2-2-4-Regularized-gradient" class="headerlink" title="2.2.4 Regularized gradient"></a>2.2.4 Regularized gradient</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.044ex" xmlns="http://www.w3.org/2000/svg" width="7.976ex" height="6.191ex" role="img" focusable="false" viewBox="0 -1391 3525.2 2736.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(635.2, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><rect width="2229.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2747.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="27.67ex" height="6.05ex" role="img" focusable="false" viewBox="0 -1250 12230.3 2674.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="munderover"><g data-mml-node="mo" transform="translate(774.2, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(690, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1141, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1530, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1875, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2153, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2565, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2954, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3732, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1496.2, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(2992.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(3381.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3770.5, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(5130.9, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(6067.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7706, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(8706.3, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10528.2, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(10917.2, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.735ex" xmlns="http://www.w3.org/2000/svg" width="6.39ex" height="3.135ex" role="img" focusable="false" viewBox="0 -1060.7 2824.5 1385.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(778, 0)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="msubsup" transform="translate(1361, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(572, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.044ex" xmlns="http://www.w3.org/2000/svg" width="7.743ex" height="6.191ex" role="img" focusable="false" viewBox="0 -1391 3422.2 2736.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(583.7, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -1020.7)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msubsup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><rect width="2126.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(2644.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex" xmlns="http://www.w3.org/2000/svg" width="31.112ex" height="6.05ex" role="img" focusable="false" viewBox="0 -1250 13751.4 2674.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="munderover"><g data-mml-node="mo" transform="translate(750.5, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(623, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1074, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1463, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1808, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2086, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2498, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2887, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3665, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1472.5, 1150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="mo" transform="translate(2945.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(3334.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3723.1, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(5083.6, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(389, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msup" transform="translate(6020.4, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7658.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(8658.9, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1012, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1424, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10480.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(10869.9, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(11664.1, 0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(12386.3, 0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(521, 421.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.735ex" xmlns="http://www.w3.org/2000/svg" width="6.157ex" height="3.135ex" role="img" focusable="false" viewBox="0 -1060.7 2721.5 1385.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(778, 0)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="msubsup" transform="translate(1361, 0)"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, 530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(469, -317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">X_grad = X_grad + lambda*X;</span><br><span class="line">Theta_grad = Theta_grad + lambda*Theta;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/yRhMwb9.png" alt=""></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Programming assignment Scrooge Coin</title>
    <url>/en/Programming-Assignment-Scrooge-Coin/</url>
    <content><![CDATA[<p>This is the worst task I have ever done. </p>
<p><code>TxHandler.java</code> cannot be built and run, everything is a guess. Since I am not familiar with <code>JAVA</code>, I encountered millions of syntax errors after submitting. </p>
<p>I have to: </p>
<ul>
<li>Import packages manually </li>
<li>Add “;” after each line. </li>
<li><code>()</code> after <code>if</code>. </li>
<li>Declare variable type </li>
</ul>
<p>This is why I hate JAVA 😡😡😡 </p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TxHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UTXOPool utxoPool;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a public ledger whose current UTXOPool (collection of unspent transaction outputs) is</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> utxoPool&#125;. This should make a copy of utxoPool by using the UTXOPool(UTXOPool uPool)</span></span><br><span class="line"><span class="comment">     * constructor.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TxHandler</span><span class="params">(UTXOPool utxoPool)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.utxoPool = <span class="keyword">new</span> UTXOPool(utxoPool);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true if:</span></span><br><span class="line"><span class="comment">     * (1) all outputs claimed by &#123;<span class="doctag">@code</span> tx&#125; are in the current UTXO pool,</span></span><br><span class="line"><span class="comment">     * (2) the signatures on each input of &#123;<span class="doctag">@code</span> tx&#125; are valid,</span></span><br><span class="line"><span class="comment">     * (3) no UTXO is claimed multiple times by &#123;<span class="doctag">@code</span> tx&#125;,</span></span><br><span class="line"><span class="comment">     * (4) all of &#123;<span class="doctag">@code</span> tx&#125;s output values are non-negative, and</span></span><br><span class="line"><span class="comment">     * (5) the sum of &#123;<span class="doctag">@code</span> tx&#125;s input values is greater than or equal to the sum of its output</span></span><br><span class="line"><span class="comment">     *     values; and false otherwise.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValidTx</span><span class="params">(Transaction tx)</span> </span>&#123;</span><br><span class="line">        UTXOPool utxoSet = <span class="keyword">new</span> UTXOPool();</span><br><span class="line">        <span class="keyword">double</span> pSum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tx.numInputs(); i++) &#123;</span><br><span class="line">            Transaction.Input in = tx.getInput(i);</span><br><span class="line">            UTXO u = <span class="keyword">new</span> UTXO(in.prevTxHash, in.outputIndex);</span><br><span class="line">            Transaction.Output out = utxoPool.getTxOutput(u);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ((!utxoPool.contains(u)) || (!Crypto.verifySignature(out.address, tx.getRawDataToSign(i), in.signature)) || (utxoSet.contains(u))) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            utxoSet.addUTXO(u, out);</span><br><span class="line">            pSum += out.value;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Transaction.Output out : tx.getOutputs()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (out.value &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sum += out.value;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (pSum &lt; sum) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Handles each epoch by receiving an unordered array of proposed transactions, checking each</span></span><br><span class="line"><span class="comment">     * transaction for correctness, returning a mutually valid array of accepted transactions, and</span></span><br><span class="line"><span class="comment">     * updating the current UTXO pool as appropriate.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Transaction[] handleTxs(Transaction[] possibleTxs) &#123;</span><br><span class="line">        Set&lt;Transaction&gt; vTxs = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Transaction tx : possibleTxs) &#123;</span><br><span class="line">            <span class="keyword">if</span> (isValidTx(tx)) &#123;</span><br><span class="line">                vTxs.add(tx);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (Transaction.Input in : tx.getInputs()) &#123;</span><br><span class="line">                    UTXO u = <span class="keyword">new</span> UTXO(in.prevTxHash, in.outputIndex);</span><br><span class="line">                    utxoPool.removeUTXO(u);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tx.numOutputs(); i++) &#123;</span><br><span class="line">                    Transaction.Output out = tx.getOutput(i);</span><br><span class="line">                    UTXO u = <span class="keyword">new</span> UTXO(tx.getHash(), i);</span><br><span class="line">                    utxoPool.addUTXO(u, out);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Transaction[] vTxArr = <span class="keyword">new</span> Transaction[vTxs.size()];</span><br><span class="line">        <span class="keyword">return</span> vTxs.toArray(vTxArr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>BlockChain</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-0</title>
    <url>/en/Japan-2-0/</url>
    <content><![CDATA[<h1 id="Japan-2-0"><a href="#Japan-2-0" class="headerlink" title="Japan-2-0"></a>Japan-2-0</h1><p>🇯🇵 </p>
<p>sequence </p>
<p>Little Master’s eldest sister suddenly said to go to Hakone </p>
<p>So skip some (many) chapters and write this first </p>
<p>As for why it became traditional<br>Because the eldest sister is Taiwanese<br>Although she can understand simplified characters </p>
<a id="more"></a>

<hr>
<p>It happened in 8102 3🈷️ </p>
<p>At that time, the little mage had served in the former company for 3.5 years, and then went to the fruit company to sweep the floor 🧹, and his birthday 🎂 was on the same day as the pit<br>I plan to give myself a run similar to graduation 🎓 travel before that </p>
<p>After all, it’s very troublesome to change jobs, and being an inferior person will definitely be humiliated.<br>So I plan to prepare both mentally and physically in advance </p>
<p>At that time, the little mage was still young and was still in the stage of wanting to go out to play. The way to relax is that the world is so big I want to see<br>So looking at the world map, I feel like I want to go everywhere </p>
<p>But because it’s Solo, I just got my driver’s license and I didn’t dare to drive before the internship period.<br>Naturally, Europe and the United States can’t think about it, but choose the urban landscape<br>Let’s take a look at the 3-year return visa that I finally got, so I can only go to 🇯🇵 </p>
<hr>
<p>In view of the fact that the last time the little mage found in Kinosaki that the fake hot spring was boiler water, and the real hot spring ♨️ can heal a disease, he would never forget to go 🇯🇵 soak once </p>
<p>So the route is all the way north </p>
<p>Hakone-Kamakura Enoshima-Yokohama-Tokyo </p>
<div id="googleMap7549" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap7549'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 9.3,
       'center': new window.google.maps.LatLng( 35.460 , 139.233 ),
     },
     target = document.getElementById('googleMap7549'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.2719403 , 138.9279284 ),
        'map': map,
        'title': 'Hakone 箱根町',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Hakone 箱根町'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.3338798 , 139.4707656 ),
        'map': map,
        'title': 'Kamakura 鎌倉市',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Kamakura 鎌倉市'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.3011464 , 139.4766161 ),
        'map': map,
        'title': 'Enoshima 江の島',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Enoshima 江の島'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 35.4526928 , 139.5250756 ),
        'map': map,
        'title': 'Yokohama 横浜市',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'Yokohama 横浜市'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
     
     
     var opts4 = {
        'position': new window.google.maps.LatLng( 35.6681625 , 139.6007859 ),
        'map': map,
        'title': 'Tokyo 東京',
        'zIndex' : 4,
        'icon': ''
      };

     var infowindow4 = new window.google.maps.InfoWindow({
       content: 'Tokyo 東京'
     });

     var marker4 = new window.google.maps.Marker(opts4);

     marker4.addListener('click', function(){
       infowindow4.open(map, marker4)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<p>Although I have been to Tokyo, because the first time I was following others, the little mage had a poor memory, and it was only 6 days short, so I had no impression.<br>So exactly as expected, when I came to Tokyo again, apart from knowing Skytree, it seemed like I had never been to other places. </p>
<hr>
<h2 id="Odakyu"><a href="#Odakyu" class="headerlink" title="Odakyu"></a>Odakyu</h2><p>This time it’s JAL, landing at Narita Airport 🛬️<br>Originally, the young master planned to go to Shinjuku and transfer to the Odakyu Romantic Express (it is said that it is not romantic) and go directly to Hakone<br>After all, it’s only 4 o’clock, and the last Odakyu train is 6 o’clock. Even if you go from Narita to Shinjuku, it’s completely too late.<br>However hungry for Japan 🇯🇵 time is an hour earlier, the little mage is dumbfounded after the airport time synchronization </p>
<p>In a panic, the enthusiastic old man in front helped buy a ticket for the Narita Express to Shinagawa to Shinkansen 🚄 under the condition of language barrier. 🎫 </p>
<p>Catch the Guangming, which resembles the train man, is very stable and comfortable. You can see the location on the Map and jump forward quickly.<br>At Odawara (Odawara), the sun has already set, there is no bus, only the mountain train </p>
<p>After leaving the station, I was confused and didn’t know where to go. Many people walked towards me, only to see a beautiful little sister. I quickly went up and asked where the little train was.<br>After the little sister gave the way gently, the little mage walked a long way and looked back and saw the little sister nodding to indicate that he had found the right carriage. </p>
<p>After going up the mountain, it gradually rained and the temperature dropped sharply. The little mage found that the seat was getting hot, and heating was blowing up.<br>Really humane </p>
<p>After arriving at Kowakidani, the watermelon 🍉 card balance is insufficient to leave the station<br>There is no one around, just when the little mage wants to turn over and will be caught<br>An Officer appeared from nowhere, gave him a piece of paper, opened the subway door, and disappeared </p>
<p>I saw a hill when I went out of the station, and after repeatedly consulting the map, I still couldn’t believe that the vertical ladder hidden in the shadow was the road shown on the map. </p>
<p>Fortunately, after climbing the stairs, I arrived on a normal national road<br>Only 1.3km uphill </p>
<p>The little mage is holding an umbrella and dragging his luggage, walking alone on the road<br>Passing by a big 7-11<br>Still not alone </p>
<p>… </p>
<h2 id="Tenyu"><a href="#Tenyu" class="headerlink" title="Tenyu"></a>Tenyu</h2><p>When the two characters Tianyou appeared in the rainy night, the little mage had no energy </p>
<p>I thought I could enjoy the hot spring<br>I was hungry for a long time and couldn’t find the hotel entrance<br>Had to call the hotel </p>
<p>At that time, the little mage’s English was still very poor, and coupled with the other party’s Japanese English, he couldn’t understand what was being said at all, so he could only say it by himself. </p>
<p>Then I was told not to move and I would send a car to pick him up<br>After waiting for a while, there was no movement, so I had to continue walking up the mountain road.<br>During that time, a car came down from the mountain and experienced no one. The first thought of the little mage was, there is a car on the mountain? ! </p>
<p>Give way to the bottom and continue to go up </p>
<p>After walking for a while, the little mage suddenly opened his mouth, it wouldn’t be the car just now. </p>
<p>Go back quickly </p>
<p>Back to the bus stop just now, I found that the car really stopped there<br>After showing the Booking Detail with the driver, he picked up the Master </p>
<p>In the meantime, I asked the driver if there was any Shuttle at Xiaotianyuan Station.<br>The answer is too far no<br>I don’t understand how to find this station<br>There are just a few bus stops nearby, found by name </p>
<p>The most let the little mage vomit blood is that the car returned on the same route as it just came back. It only went 500m further, and a U-turn arrived at the hotel entrance… </p>
<p>It’s not that the little mage is blind, it’s really too dark and it’s raining to see the road. </p>
<p>So if you go to Hakone from Narita Airport, don’t miss Odakyu </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-1-0</title>
    <url>/en/Japan-2-1-0/</url>
    <content><![CDATA[<h1 id="Hakone-0"><a href="#Hakone-0" class="headerlink" title="Hakone 0"></a>Hakone 0</h1><p>Just choose this hotel, I have been there a few times, and it is considered very good in Hakone<br>Little Mage’s friend said </p>
<p>After looking at the price, the little mage couldn’t help asking </p>
<p>‘I’ll go alone, why do I stay in such a good hotel?’<br>Because a good hotel will be built on the hot spring ♨️ the spring eye, the next time you need to draw water, the temperature is not guaranteed </p>
<p>‘Go alone, why do you want to stay in such a good hotel’<br>This hotel can choose a room with a hot spring on the balcony, instead of going to the male and female baths, it is very private </p>
<p>‘I am going by myself’<br>After working continuously for so long, let’s relax and take a graduation trip. 🎓 ✈️ Well </p>
<p>Then the little mage couldn’t help the temptation and ordered Hakone Kowakien Tenyu<br>Listening to the name makes me feel at ease </p>
<a id="more"></a>

<hr>
<h2 id="Tenyu"><a href="#Tenyu" class="headerlink" title="Tenyu"></a>Tenyu</h2><p>After the little wizard was pulled to the hotel by the shuttle, the luggage was wet because of rain<br>The little sister of the receptionist took out a brand new towel to wipe the luggage 🧳 and helped deliver it to the room </p>
<p>The little mage felt it was unnecessary in his heart, and after climbing the mountain road for a long time, he had no energy to speak, he could only sigh the service was so good </p>
<p>As Hao said, the hot spring is on the balcony<br>There is a small button next to it. Just press the hot spring that smells of sulfur and it will pop up.<br>Go to the vending machine to buy a lot of energy drinks to prevent dehydration, and then start to cook the meat </p>
<p>There was light rain and fog outside the balcony, and the curtains were rustling with the mountain breeze. </p>
<p>The little mage stayed in the hot spring watching the rising heat until late at night, listening to the sound of wind and rain outside, feeling that everything was worth it </p>
<hr>
<p>Wake up the next day, the fog has not cleared </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21000.mp4">
</video>

<p>The little mage is very shy and doesn’t like meeting people<br>I planned to lie down on the balcony for two days </p>
<p>However, hungry and hungry, he went to the male soup on the top floor<br>I was stunned in an instant </p>
<p>Although iPhone X 📱 is waterproof<br>Although there was only one person in the pool, when the little mage came, he left </p>
<p>But this kind of candid place can only steal official pictures </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21020.jpg" alt=""></p>
<p>Wow, it feels like the infinity pool of Marina Bay Sands in Po County<br>It’s just that the swimming pool has been replaced with a hot spring </p>
<p>Then the little mage looked at the mountains in the distance, thinking that there was a female soup next door<br>Go downstairs and find that the female soup is actually downstairs, and men and women will change it every day<br>I don’t know if it’s ☯️ there is a good balance between yin and yang </p>
<p>So it shouldn’t be like the top floor, you can only see the mountains from the house </p>
<p>That’s boring, the little mage plans not to leave the room the next day </p>
<p>The fact is<br>The fifth floor is a small pond with fallen leaves 🍂<br>There is a waterfall flowing down from the hill more than ten meters away<br>This waterfall is a hot spring </p>
<p>Helpless, the official did not give the picture<br>It’s a big surprise </p>
<p>Breakfast is also great<br>You can choose Japanese or Western style<br>To the window, outside is a bamboo forest </p>
<hr>
<h2 id="little-Prince"><a href="#little-Prince" class="headerlink" title="little Prince"></a>little Prince</h2><p>It will be cooked after all<br>Little Mage had to go out and stroll around </p>
<p>I was surprised to find that there is a little prince’s temple (museum) next to it </p>
<p>PS: The first love of the little mage loves the little prince </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21000.jpg" alt=""></p>
<p>As early as January 3102, the little mage had studied the little prince<br>The timeline of this series also happens later<br>So the name was more or less inspired </p>
<h3 id="Little-Prince-Aircraft"><a href="#Little-Prince-Aircraft" class="headerlink" title="Little Prince Aircraft"></a>Little Prince Aircraft</h3><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21001.jpg" alt=""></p>
<h3 id="Little-prince-rose"><a href="#Little-prince-rose" class="headerlink" title="Little prince rose"></a>Little prince rose</h3><blockquote>
<p>My rose, others think she is like you, but she alone is better than all of you. Because she was watered by me. Because I put her in the flower cover. Because she was protected by a screen. Because I got rid of the caterpillars on her. Because I have heard her complaints, her bragging, and sometimes her silence. Because she is my rose. </p>
</blockquote>
<blockquote>
<p>If you love a flower blooming in the vast sea of stars, then when you look up at the stars, you will feel satisfied </p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21002.jpg" alt=""></p>
<hr>
<p>So hungry, first love made the little mage wait for three years at the Magic Academy<br>And finally got together and dumped him in a week<br>So the little mage hates the house and Wu doesn’t like the little prince<br>I don’t understand why I am so respected all over the world </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21003.jpg" alt=""></p>
<p>After a round, I went out to the Crystal Museum </p>
<h2 id="Hakone-Glass-Forest-Museum"><a href="#Hakone-Glass-Forest-Museum" class="headerlink" title="Hakone Glass Forest Museum"></a>Hakone Glass Forest Museum</h2><p>It is said that it should be like this: </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21021.jpg" alt=""></p>
<p>What the little mage saw was this: </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21022.jpg" alt=""></p>
<p>Only here is like a fairy tale<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21004.jpg" alt=""></p>
<h2 id="Gora-Park"><a href="#Gora-Park" class="headerlink" title="Gora Park"></a>Gora Park</h2><p>It is said that it should be like this: </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21003.jpeg" alt=""></p>
<p>The little mage rushed over and saw: </p>
<p>Closed up tea room<br>Bare moss garden<br>The rose garden is not romantic at all 🌹🌹🌹 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21011.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21023.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21009.jpg" alt=""></div></div></div>

<p>So recently, the little mage has been pestering her big sister to teach her how to make a picture like the one in the brochure<br>🐶🐶🐶 </p>
<hr>
<p>Even so, the little mage still saw the moss bamboo forest towering trees and white clouds </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21008.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21006.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21010.jpg" alt=""></div></div></div>

<p>The same scenery is like this in the writings of the ancients in the pre-Qin Dynasty </p>
<blockquote>
<p>Bai Hua Jian Xi, Bai Mao Shu Xi. My son is far away, leaving me alone!<br>Yingying Baiyun, showing off Swarovski. The day is difficult, the son is not jealous!<br>——“Xiaoya Baihua” </p>
</blockquote>
<hr>
<p>The seasons are not right, there are gains and losses </p>
<p>Let’s go back and cook the meat<br>Little mage comforted himself </p>
<p>Then a German 🇩🇪 sister paper forcibly Amway a drink🥤 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21005.jpg" alt=""></p>
<p>Then buy an extra can and take it back as a gift 🎁 </p>
<h2 id="Pola-Museum-of-Art"><a href="#Pola-Museum-of-Art" class="headerlink" title="Pola Museum of Art"></a>Pola Museum of Art</h2><p>Pola Museum of Art </p>
<p>Little mage saw a good thing </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21100.jpg" alt=""></p>
<p>I quickly photographed it and sent it to mom and dad 👨👩 ask if you want to buy two sets<br>If you have Parkinson’s for dinner, you won’t be afraid of falling </p>
<!--more-->

<h2 id="Bus"><a href="#Bus" class="headerlink" title="Bus"></a>Bus</h2><p>Google Map, which has always been easy to use, sucks in Hakone </p>
<p>The bus here 🚌 is very fascinating<br>I haven’t encountered any problems in larger cities before </p>
<p>However, if you are hungry, let’s not say that Japan is traveling on the left. The map is easy to read.<br>The most vomiting blood is that the bus stop sign does not indicate the starting station-the terminal station<br>There are no cars on the mountain road, so it’s hard to tell the direction<br>There are few passers-by, and those who meet don’t speak English </p>
<p>Every time I walk to the bus stop, I don’t know if I should chase the car when I see it has arrived.<br>And always ask the driver if he did the right thing </p>
<h2 id="Owakudani"><a href="#Owakudani" class="headerlink" title="Owakudani"></a>Owakudani</h2><p>They hate you </p>
<p>Make a cable car in Gora 🚠 </p>
<p>Suddenly saw Mount Fuji 🗻 </p>
<p>Although in the cable car, the elegant arc is still amazing </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21101.jpg" alt=""></p>
<p>Since I just finished Andrew Ng’s machine learning on Coursera two months ago<br>Turn over the previous <a href="https://leihao0.github.io/Logistic-Regression/">notes 📒</a><br>Recall the Gaussian distribution equation </p>
<p>$$g(x)=\frac{1}{\sigma \sqrt{2\pi }}^{-\frac{1}{2}( \frac{(x-\mu )}{\sigma} )^{2}}$$</p>
<p>Since Mount Fuji 🗻 is not a two-dimensional element, it cannot be used directly. You need to deform the formula and delete $\mu$ </p>
<p>$$z=\frac{20}{\sigma \sqrt{2\pi }}^{-\frac{R^{2}}{2\sigma^{2}} }, \sigma= 2, R = \sqrt{ x^{2} + y^{2}}$$</p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21100.mp4">
</video>

<p>Of course the height and slope are wrong<br>You can use linear regression to try it out. Naturally, you don’t want a human tone.<br>Of course 🗻 the top is concave, and a smile curve needs to be superimposed </p>
<p>… </p>
<p>Just then the cable car 🚠 passed the highest point </p>
<p>The mountain breeze blew over, 🚠 began to shake violently<br>The mountain below ⛰ is still smoking<br>Although it is very tall, you can still smell the pungent sulfur </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21101.mp4">
</video>

<p>No wonder there are hot springs here ♨️ </p>
<p>Get out of the car, there is an egg bigger than a human 🥚<br>You can see Mount Fuji in the back 🗻, it looks like the cloud just now </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan-2113.jpg" alt=""></p>
<p>The girl from Germany 🇩🇪 told the little mage that she must buy eggs to eat🥚 </p>
<p>The little mage is unclear. So, are foreign eggs 🥚 better than mainland gardens? </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan-2112.jpg" alt=""></p>
<p>Okay, the eggs here are black 🌚🌚🌚 </p>
<p>I ate five at once, and it didn’t feel strange </p>
<p>In the meantime, a European and American girl asked the little mage how to crack the eggshell<br>Helpless don’t know how to knock<br>Pointed at the door </p>
<p>Sister paper surprised<br>‘Against the door???’ </p>
<p>Oh, I used Against </p>
<h2 id="Hakone-Ashinoko-Narukawa-Art-Museum"><a href="#Hakone-Ashinoko-Narukawa-Art-Museum" class="headerlink" title="Hakone Ashinoko Narukawa Art Museum"></a>Hakone Ashinoko Narukawa Art Museum</h2><p>Then 🚠 after getting off, board the boat from Togendai Port, and the Hakone Pirate Boat makes a circle around Lake Ashi and disembarks at Motohakone Port </p>
<p>Remember to buy first class before boarding, otherwise you may not have a ticket and you can’t make up for it.<br>I’ll be disturbed by the mountain wind outside </p>
<p>But because I did something similar in Osaka before, there is not much newness<br>I saw a sculpture in the art gallery </p>
<p>So subtle<br>The material turned out to be ivory </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21102.jpg" alt=""></p>
<p>This one is even more amazing<br>Here is a flower<br>So this is the name of Wan<strong>hua</strong> tube but its origin? </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21102.mp4">
</video>

<p>Beautiful and quiet snow scene </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21103.jpg" alt=""></p>
<p>Then at the coffee shop ☕️ shop in the art gallery<br>Looking at Mount Fuji 🗻 dazed until closed </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan21104.jpg" alt=""></p>
<hr>
<p>Generally speaking, travel notes only mention the good side<br>It’s as if these people have airborne to the attraction without luggage or equipment </p>
<p>Little Mage is no exception<br>Because luggage can be checked in the hot spring ♨️ hotel<br>Just add the address and the luggage 🧳 will automatically pass </p>
<p>It sounds so good that when you take the small train north,<br>Once suspected to reach Fujisawa Station (Fujisawa Station)<br>Luggage 🧳 will stay in Hakone forever </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-2-0</title>
    <url>/en/Japan-2-2-0/</url>
    <content><![CDATA[<h1 id="Fujisawa"><a href="#Fujisawa" class="headerlink" title="Fujisawa"></a>Fujisawa</h1><p>Fortunately, the luggage was not lost </p>
<p>I planned to live in Kamakura<br>When I had no choice but to book the itinerary, there were no hotels on Booking<br>I live in nearby Fujisawa </p>
<p>Actually very close to Kamakura<br>Buy a one-day ticket for Enoshima Electric Railway, and you can get there in 40 minutes<br>On the way, you can get off the bus and make a round in Enoshima </p>
<p>Facts prove that Fujisawa does not lose<br>Because after arriving at Shonan Wing International, I got a special access control </p>
<div style="width: 300px">
<img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22000.jpg" />
</div>

<a id="more"></a>

<p>The receptionist and the elevator are all in the style of the last century </p>
<p>It feels amazing </p>
<h2 id="Asahaya-Main-Store"><a href="#Asahaya-Main-Store" class="headerlink" title="Asahaya Main Store"></a>Asahaya Main Store</h2><p>Due to lack of physical fitness, the little mage is close to noon when he goes out every day<br>So when I got off the bus, I saw an eel rice next to me<br>In addition, I ate eel rice once in Tokyo before<br>I heard the news that Japanese eels are going to be eaten up<br>I went in and took a look </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22002.jpg" alt=""></p>
<p>I didn’t expect it to be a century-old shop<br>Looking back then it was still the Qing Dynasty </p>
<h2 id="Tsurugaoka-Hachimangu"><a href="#Tsurugaoka-Hachimangu" class="headerlink" title="Tsurugaoka Hachimangu"></a>Tsurugaoka Hachimangu</h2><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22001.jpg" alt=""></p>
<p>There are many Buddha statues inside </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22004.jpg" alt=""></p>
<p>then? Happy family 👪? ? ? </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22005.jpg" alt=""></p>
<p>Back courtyard </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22006.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22007.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22008.jpg" alt=""></p>
<h2 id="The-Great-Buddha-of-Kamakura"><a href="#The-Great-Buddha-of-Kamakura" class="headerlink" title="The Great Buddha of Kamakura"></a>The Great Buddha of Kamakura</h2><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22009.jpg" alt=""></p>
<p>At that time the little mage was still in the second year of middle school<br>See the majestic Buddha<br>What, the Great Burning Prajna, the Golden Wheel of Compassion, Tianyin Temple, a brain popped out </p>
<p>However, I guess Huigen hasn’t opened yet, and he didn’t hear the sound of heaven floating in the distance. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22010.jpg" alt=""></p>
<p>You will be disillusioned after detouring behind the Buddha<br>what is this? The tail interface of Gundam </p>
<p>Just when I was about to turn around, I suddenly found a small door on the right side with the words <strong>Entrance</strong> </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22011.jpg" alt=""></p>
<p>Uh okay, this Buddha statue can actually go in </p>
<p>Then the rear wing I just saw was a window when viewed from the inside, and I could climb up and look out ╮(￣ ▽ ￣””)╭ </p>
<h2 id="Kamakura-High-School"><a href="#Kamakura-High-School" class="headerlink" title="Kamakura High School"></a>Kamakura High School</h2><p>Boarding Enoshima Electric Railway </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22000.mp4">
</video>

<p>Before going to Kamakura High School </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan22012.jpg" alt=""></p>
<p>Okay reveal the age<br>Little mage never saw a slam dunk when he was a kid<br>So I don’t know what’s going on with those standing on the rails 🛤️ just 🚃 frontally </p>
<p>I heard it’s burning, similar to my hero academia?<br>Because there is no resonance, I took a picture from a distance and went to the beach in front to soak up the sun and hike to Enoshima. </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-3-0</title>
    <url>/en/Japan-2-3-0/</url>
    <content><![CDATA[<h1 id="Yokohama-Yokohama-City"><a href="#Yokohama-Yokohama-City" class="headerlink" title="Yokohama Yokohama City"></a>Yokohama Yokohama City</h1><p>For a moment the little mage thought he was back in the imperial capital </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23000.jpg" alt=""></p>
<a id="more"></a>

<p>Because I had survived in the imperial capital for 3.5 years<br>So I have no interest in Chinatown<br>Well, even if it’s Japanese, I’m not interested </p>
<p>Never thought<br>I can see the Beijing Hotel even after flying so far<br>Ignore it directly. Check in lunch break </p>
<p>Because Monterey is by the sea<br>I don’t know how long I slept, but I was awakened by the whistle far away<br>Opened the curtains and looked<br>I feel that adding a filter is the oil painting seen in the museum </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23001.jpg" alt=""></p>
<p>Because it feels great to be woken up by the siren<br>Just came out and walked by the sea </p>
<p>There are some cute little ducks floating on the water on the shore<br>When preparing to 📷, Xiao 🦆 plunged into the water to fish 🐟 and went<br>Uh, so 🦆 can dive 🤿 ah </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23003.jpg" alt=""></p>
<p>The sea in Japan is very clean and there is no smell </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23002.jpg" alt=""></p>
<h2 id="Hikawamaru"><a href="#Hikawamaru" class="headerlink" title="Hikawamaru"></a>Hikawamaru</h2><p>NYK Hikawamaru<br>NYK Hikawamaru </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23004.jpg" alt=""></p>
<p>It turns out that this ship can be visited<br>It was a cruise ship at first, and later participated in World War II<br>After retiring, he returned to his hometown </p>
<p>Is this the sound of the siren before?<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23009.jpg" alt=""></p>
<p>There will be no women’s toilets from now on<br>Fortunately, the little mage is male </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23007.jpg" alt=""></p>
<p>There are multiple large windows in the first-class cabin where you can eat, read, and even take a shower 🛀<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23008.jpg" alt=""></p>
<p>The third-class cabin is like a little mage.<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23010.jpg" alt=""></p>
<p>Alas, is there such a big gap in Showa 16? </p>
<h2 id="Elephant-nose-breakwater"><a href="#Elephant-nose-breakwater" class="headerlink" title="Elephant nose breakwater"></a>Elephant nose breakwater</h2><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23005.jpg" alt=""></p>
<h2 id="Ohsanbashi-Hall"><a href="#Ohsanbashi-Hall" class="headerlink" title="Ohsanbashi Hall"></a>Ohsanbashi Hall</h2><p>Ever since I watched planes take off and land on the roof of Haneda Airport<br>Just know 🇯🇵 most large buildings must be sightseeing </p>
<p>But this is just a dock<br>Frozen, it feels like a theater is also great </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23006.jpg" alt=""></p>
<hr>
<p>You can buy Yokohama sightseeing ferry tickets near Hikawa Maru<br>1-2 hours at sea, dinner is served on board, you won’t be hungry </p>
<p>Drink 🥤 Behind it is a candle 🕯️, the candlelight flickers with the boat 🚢 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23000.gif" alt=""></p>
<p>Doesn’t look romantic<br>Indeed, the other tables are in pairs<br>Only the little mage here is a person standing and hanging each other </p>
<p>Alas, it would be nice to have sister paper </p>
<h2 id="Hara-Model-Railway-Museum"><a href="#Hara-Model-Railway-Museum" class="headerlink" title="Hara Model Railway Museum"></a>Hara Model Railway Museum</h2><p>Hara Model Railway Museum </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23100.jpg" alt=""></p>
<!--more-->

<p>Suddenly saw a huge building<br>Although Little Mage is not as obsessed as Sheldon<br>But it’s still fun to see all kinds of small trains inside </p>
<p>For example, I saw the Hakone number that went up the mountain before<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23101.jpg" alt=""></p>
<p>It’s like the little green train going home in school<br>Of course this is a tram 🚃<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23102.jpg" alt=""></p>
<p>Nanhai Ninja?<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23103.jpg" alt=""></p>
<p>The kind of Harry Potter<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23104.jpg" alt=""></p>
<p>And in the sky<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23105.jpg" alt=""></p>
<p>I was really shocked behind<br>A whole big house<br>There are rockeries, tunnels, urban and rural central stations </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23100.mp4">
</video>

<p>At first I saw the antenna behind and thought it was a high-voltage cable<br>Later, I found a cable car 🚠 slowly coming down from the rockery ⛰️ </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23102.mp4">
</video>

<p>If you have children, you can be a dispatcher<br>Control the rails 🛤️ direction </p>
<p>There is a model of Yokohama at the back<br>There is time on the Ferris wheel 🎡, about 3 minutes is a day<br>Depart at 6 o’clock, and the subway will stop on time by 10 o’clock in the evening, beyond 996,233 </p>
<video width="720" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23101.mp4">
</video>

<p>I can only say that it’s really a bunker<br>If it’s a boy, it’s super recommended </p>
<h2 id="Mitsubishi-Minatomirai-Technical-Center"><a href="#Mitsubishi-Minatomirai-Technical-Center" class="headerlink" title="Mitsubishi Minatomirai Technical Center"></a>Mitsubishi Minatomirai Technical Center</h2><p>MITSUBISHI Minatomirai Inzu st Ria l Museu m </p>
<p>Force of nature<br>Squash you in minutes </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23107.jpg" alt=""></p>
<p>Oh, there will be ANA then<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23108.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23109.jpg" alt=""></p>
<p>Great ship </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23110.jpg" alt=""></p>
<p>Hakone Maru Kamakura Maru<br>Could it be that every famous city has a ship?<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23116.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23117.jpg" alt=""></p>
<p>I remembered again 🇮🇹 the giant cruise ship that ate half of the parking lot 🚢<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23118.jpg" alt=""></p>
<h2 id="Yokohama-Landmark-Tower"><a href="#Yokohama-Landmark-Tower" class="headerlink" title="Yokohama Landmark Tower"></a>Yokohama Landmark Tower</h2><p>Yokohama Landmark Tower </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23106.jpg" alt=""></p>
<p>Inside is the fastest elevator in the world<br>But in 2004 it was surpassed by Taipei 101 where my eldest sister is.<br>This can reach the top in forty seconds, the highest speed is 750 m/min<br>It’s actually very stable, but some ears hurt </p>
<h2 id="Sky-garden"><a href="#Sky-garden" class="headerlink" title="Sky garden"></a>Sky garden</h2><p>SKY GARDEN </p>
<p>There is a 360 observation deck above<br>Ferris wheel 🎡 has also become very small </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23111.jpg" alt=""></p>
<p>The most pleasant thing is that the dim sum on the top of the building does not have much difference with the one on the downstairs<br>It also provides a huge ice cream according to the height of the building 🍦 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23113.jpg" alt=""></p>
<p>Feel at ease and sit down and eat and watch the sunset (Why is it sunset again 🌄) </p>
<p>Nuclear explosion site<br>The sun 🌞 hit Mount Fuji 🗻<br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23112.jpg" alt=""><br>Okay, this should just be a normal diffraction phenomenon? </p>
<p>Because ice cream is too big<br>Ate till dark<br>I really didn’t deliberately stay away from watching the night scene </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23114.jpg" alt=""><br><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23115.jpg" alt=""></p>
<hr>
<p>Really worthy of being the 21st Century Port of Mirae<br>You know it started construction in the 90s<br>Landmark Tower was already there in 1993 </p>
<p>Whether it’s the siren of the seaside pier ⛵️<br>Still clean sea<br>And modern cities<br>Makes the little mage think it’s awesome, awesome, awesome </p>
<p>Unfortunately, the itinerary is only two days<br>Looking at the gorgeous Ferris wheel, I am ready to go back to Tokyo </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Japan23100.gif" alt=""></p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-4-0</title>
    <url>/en/Japan-2-4-0/</url>
    <content><![CDATA[<h1 id="Tokyo"><a href="#Tokyo" class="headerlink" title="Tokyo"></a>Tokyo</h1><div id="googleMap5138" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap5138'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 11,
       'center': new window.google.maps.LatLng( 35.710 , 139.808 ),
     },
     target = document.getElementById('googleMap5138'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.7100627 , 139.8085117 ),
        'map': map,
        'title': 'Tokyo Skytree',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Tokyo Skytree'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.6267108 , 139.8828892 ),
        'map': map,
        'title': 'Tokyo DisneySea',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Tokyo DisneySea'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.6398972 , 139.859985 ),
        'map': map,
        'title': 'Tokyo Sea Life Park',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Tokyo Sea Life Park'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 35.6193359 , 139.7742108 ),
        'map': map,
        'title': 'National Museum of Emerging Science and Innovation',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'National Museum of Emerging Science and Innovation'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<h2 id="Tokyo-skytree"><a href="#Tokyo-skytree" class="headerlink" title="Tokyo skytree"></a>Tokyo skytree</h2><p>It was already noon when I arrived in Tokyo<br>This time I stayed at the Richmond Hotel next to it, the room is as always small + exquisite<br>Across the road is the clear sky tree<br>The hotel’s special restaurant is actually Sizzler, a frequent visitor in Beijing. </p>
<a id="more"></a>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-00.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-03.jpg" alt=""></div></div></div>

<p>When I came last time, I went up and took a look. At that time, there was the theme of Attacking Giant, but unfortunately I didn’t know the Captain. </p>
<p>Also because of the short time, I didn’t realize that there was a huge mall below. </p>
<p>After a nap, I woke up in the evening 🌆, I went to the mall for a stroll </p>
<p>I found that I was working on the theme of Harry Potter </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-04.jpg" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-07.jpg" alt=""></div></div></div>

<p>There are many more Pokemon<br>Because I have only seen the special Pokemon, so I only know the first generation of Pokemon<br>Jenny Turtle, Fat Ding, Wonder Frog Tadpole, Gauss, Little Fire Dragon, Fast Dragon, Pikachu, Kabimon, etc. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-10.jpg" alt=""></div></div></div>

<p>What anime is the last one? Love Live! Sunshine? what is this else? </p>
<h2 id="Tokyo-Disney-Sea"><a href="#Tokyo-Disney-Sea" class="headerlink" title="Tokyo Disney Sea"></a>Tokyo Disney Sea</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-13.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-14.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-15.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-16.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-17.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-18.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-19.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-20.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-21.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-22.jpg" alt=""></div></div></div>

<p>🇯🇵 Said to be the only DisneySea theme park in the world<br>So I didn’t go to the Disney park next to it </p>
<p>Titanic, volcano 🌋, temple 🛕 </p>
<p>But it was raining<br>Although the staff is still enthusiastic to create an atmosphere<br>But can’t stand the swish weather<br>Refreshing </p>
<p>Plus no express ticket<br>Popcorn 🍿️ It takes an hour to line up<br>Other projects like bumper boats for two hours </p>
<p>Hurried around<br>Came out </p>
<p>Very poor experience<br>Far, far, far less fun than the Universal Studio in Osaka last time </p>
<p>I thought Disney could play for a day<br>The result came out at 10 o’clock<br>Too embarrassing, I can only just walk around </p>
<h2 id="Tokyo-Sea-Life-Park"><a href="#Tokyo-Sea-Life-Park" class="headerlink" title="Tokyo Sea Life Park"></a>Tokyo Sea Life Park</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-25.jpg" alt=""></div></div></div>

<p>I thought it was an observatory from a distance<br>Big face, are you smiling 😂<br>And little penguin </p>
<h2 id="National-Museum-of-Emerging-Science-and-Innovation"><a href="#National-Museum-of-Emerging-Science-and-Innovation" class="headerlink" title="National Museum of Emerging Science and Innovation"></a>National Museum of Emerging Science and Innovation</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-27.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-28.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-29.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-31.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-32.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-33.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-34.jpg" alt=""></div></div></div>

<p>BSOD, AI Horror Valley, Fetus </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-37.jpg" alt=""></div></div></div>

<p>I came out and found a boat next to me 🚢<br>If you look closely, it turned out to be a building, a ship’s science museum<br>Unfortunately it’s closed </p>
<p>The ball in the middle of the building behind is the planetarium </p>
<h2 id="Replica-of-the-Statue-of-Liberty-in-Odaiba"><a href="#Replica-of-the-Statue-of-Liberty-in-Odaiba" class="headerlink" title="Replica of the Statue of Liberty in Odaiba"></a>Replica of the Statue of Liberty in Odaiba</h2><p>Keep going around<br>Seen from afar 👀, wait, is that the Statue of Liberty 🗽? ? ?<br>The one behind is the Golden Gate Bridge? ? ? </p>
<p>I walked in and took a look, really…<br>My mind 🧠 flashed the glittering sentence <strong>faker</strong> </p>
<p><a href="https://en.wikipedia.org/wiki/Replicas_of_the_Statue_of_Liberty">Replica of the Statue of Liberty</a> </p>
<blockquote>
<p>To commemorate the “Japanese French Year”, from April 1998 to May 1999, the French Statue of Liberty from Cygnes Island came to Odaiba, Tokyo. [3] Due to its popularity, a replica of the French Statue of Liberty was erected in the same place in 2000. Also in Japan, a small Statue of Liberty is in the Amerika-mura (American Village) shopping district in Osaka, Japan. Another replica is in Oirase[71] near Shimoda Town in the southern part of Misawa City, Aomori Prefecture, a US Air Force base with 8,000 people. A replica of the Statue of Liberty in Ishinomaki City, Miyagi Prefecture, was damaged by the 2011 Tohoku earthquake and tsunami. [72] There is also a replica in Oyabe City, Toyama Prefecture. [73] </p>
</blockquote>
<p>That’s it </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-40.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-39.jpg" alt=""></div></div></div>

<h2 id="Up-to"><a href="#Up-to" class="headerlink" title="Up to"></a>Up to</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-42.jpg" alt=""></div></div></div>

<p>Wow </p>
<p>Remember to watch Gundam Seed or borrow a disc from a classmate 👨‍🎓 when I was in high school 💽 secretly watch at home<br>A few years ago, there was a remake, but I haven’t seen it before, after all<br>My youth is over </p>
<p>I can’t remember the plot or something now<br>Just remember Kira’s freedom Gundam<br>Break through the atmosphere<br>Cut a lot of sticks<br>Then flew away </p>
<p>But this one in front of Uniqlo<br>See halo and corner<br>This should be a unicorn 🦄️<br>Fortunately, I watched the UC movie later, Laplace’s undead or something, otherwise I don’t know it again </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-43.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-44.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-41.jpg" alt=""></div></div></div>

<p>There are buyers in the shop next to it </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-45.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-240-46.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-2-4-1</title>
    <url>/en/Japan-2-4-1/</url>
    <content><![CDATA[<h1 id="Tokyo"><a href="#Tokyo" class="headerlink" title="Tokyo"></a>Tokyo</h1><div id="googleMap7937" style="
            height: 450px;
            width: 100%;
            margin: 0px;
            padding: 0px
            ">
</div>
<style>.gmnoprint img {max-width: none !important;}</style>
<script defer="defer">
  window.hexoGmaps = window.hexoGmaps || { maps: {}};
  window.hexoGmaps.maps['initgoogleMap7937'] = function init() {
    var mapOptions = {
       'scrollwheel': false,
       'zoom': 13,
       'center': new window.google.maps.LatLng( 35.705 , 139.774 ),
     },
     target = document.getElementById('googleMap7937'),
     map = new window.google.maps.Map(target, mapOptions);
      
     
     
     var opts0 = {
        'position': new window.google.maps.LatLng( 35.6853037 , 139.756059 ),
        'map': map,
        'title': 'Ninomaru Garden',
        'zIndex' : 0,
        'icon': ''
      };

     var infowindow0 = new window.google.maps.InfoWindow({
       content: 'Ninomaru Garden'
     });

     var marker0 = new window.google.maps.Marker(opts0);

     marker0.addListener('click', function(){
       infowindow0.open(map, marker0)
     })
     
     
     var opts1 = {
        'position': new window.google.maps.LatLng( 35.6943813 , 139.7517535 ),
        'map': map,
        'title': 'Science Museum',
        'zIndex' : 1,
        'icon': ''
      };

     var infowindow1 = new window.google.maps.InfoWindow({
       content: 'Science Museum'
     });

     var marker1 = new window.google.maps.Marker(opts1);

     marker1.addListener('click', function(){
       infowindow1.open(map, marker1)
     })
     
     
     var opts2 = {
        'position': new window.google.maps.LatLng( 35.7166529 , 139.7691198 ),
        'map': map,
        'title': 'Ueno Zoo',
        'zIndex' : 2,
        'icon': ''
      };

     var infowindow2 = new window.google.maps.InfoWindow({
       content: 'Ueno Zoo'
     });

     var marker2 = new window.google.maps.Marker(opts2);

     marker2.addListener('click', function(){
       infowindow2.open(map, marker2)
     })
     
     
     var opts3 = {
        'position': new window.google.maps.LatLng( 35.7096274 , 139.7982875 ),
        'map': map,
        'title': 'Azumabashi',
        'zIndex' : 3,
        'icon': ''
      };

     var infowindow3 = new window.google.maps.InfoWindow({
       content: 'Azumabashi'
     });

     var marker3 = new window.google.maps.Marker(opts3);

     marker3.addListener('click', function(){
       infowindow3.open(map, marker3)
     })
   

  }
  function makeMaps() {
    for (var map in window.hexoGmaps.maps) {
       console.log('map #', map);
       window.hexoGmaps.maps[map]();
    }
  }
  function loadScript() {
    window.hexoGmaps.googleScriptLoaded = true;
    var script = document.createElement('script');
    script.type = 'text/javascript';
        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyB6JxSOGlpKd-7pPtKKG_BIEOiLlaRHxMQ';
    document.body.appendChild(script);
  }
  if (!window.hexoGmaps.googleScriptLoaded) {
    loadScript();
  }
</script>

<a id="more"></a>

<h2 id="Imperial-Palace"><a href="#Imperial-Palace" class="headerlink" title="Imperial Palace"></a>Imperial Palace</h2><p>In fact, you can’t enter the Imperial Palace, you can only look at the back garden </p>
<p>Edo Castle Ninomaru Garden </p>
<p>It’s still late March, so only part of the cherry blossoms 🌸 are in full bloom<br>There are also oranges in the middle 🍊 … </p>
<p>Xiaoqiao Liushui Renjia<br>There is a small pavilion in the middle that sells water, snacks and souvenirs </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-00.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-01.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-02.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-03.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-04.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-12.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-14.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-18.jpg" alt=""></div></div></div>

<h2 id="The-National-Museum-of-Modern-Art-Tokyo"><a href="#The-National-Museum-of-Modern-Art-Tokyo" class="headerlink" title="The National Museum of Modern Art, Tokyo"></a>The National Museum of Modern Art, Tokyo</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-20.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-21.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-22.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-25.jpg" alt=""></div></div></div>

<h2 id="Science-and-Technology-Museum"><a href="#Science-and-Technology-Museum" class="headerlink" title="Science and Technology Museum"></a>Science and Technology Museum</h2><p>Early bicycle 🚴, like playing acrobatics<br>What a big diamond 💎<br>Shinkansen 🚄 wheels<br>Pretend multidimensional space<br>Turntable that’s not dizzy at all </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-27.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-29.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-30.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-31.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-32.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-33.jpg" alt=""></div></div></div>

<p>In the evening 🌃 go back and pass the Mall and see many lucky cats 🐱<br>The small partner who started the company wanted to take one back </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-34.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-35.jpg" alt=""></div></div></div>

<p>Back to the hotel, I found bottled water in the shape of Skytree<br>Bought a  pencil<br>There are also seasonal cherry blossoms 🌸 flavored cola 😂<br>The taste is much more normal than the stock god likes </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-66.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-37.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-38.jpg" alt=""></div></div></div>

<h2 id="National-Science-Museum"><a href="#National-Science-Museum" class="headerlink" title="National Science Museum"></a>National Science Museum</h2><p>I saw a lot of dinosaurs 🦕 fossils that I saw when I was young<br>Three of my favorites </p>
<h3 id="Tyrannosaurus-🦖"><a href="#Tyrannosaurus-🦖" class="headerlink" title="Tyrannosaurus 🦖"></a>Tyrannosaurus 🦖</h3><blockquote>
<p>Tyrannosaurus rex (scientific name: Tyrannosaurus rex), also known as Tyrannosaurus, is currently the only effective species of Tyrannosaurus, a giant theropod dinosaur belonging to the Tyrannosaurus family. The Latin meaning of the name is “in the lizard Tyrant”. It is estimated to be up to 13 meters in length[1], with a hip height of about 4 meters[2], and an average weight of about 9 metric tons. … its bite force is nearly 6 metric tons, equivalent to the weight of an elephant[3] </p>
</blockquote>
<h3 id="Triceratops"><a href="#Triceratops" class="headerlink" title="Triceratops"></a>Triceratops</h3><blockquote>
<p>The genus Triceratops (genus name: Triceratops), commonly known as Triceratops and Triceratops, is a genus of Ornithischian Ceratosaurus, which is a plant-eating dinosaur. Triceratops are medium in size, four-legged, about 7 to 10 meters in length…It is one of the latest dinosaurs of all dinosaurs, and the largest and last ceratopsaurus dinosaur, occupying <strong>non-bird-shaped dinosaurs</strong> The vast majority of terrestrial ecosystems in the last period on Earth (Late Cretaceous) </p>
</blockquote>
<h3 id="Stegosaurus"><a href="#Stegosaurus" class="headerlink" title="Stegosaurus"></a>Stegosaurus</h3><blockquote>
<p>Stegosaurus is one of the dinosaurs that appear most often in books, comics, TV or movies, and is a very famous representative of plant-eating dinosaurs; but stegosaurus, Tyrannosaurus, and Triceratops do not live in the same era (Stegosaurus In the Jurassic period, Triceratops and Tyrannosaurus were in the Cretaceous period), the main enemies of stegosaurus were Allosaurus, Barbarosaurus and Lizardivorous </p>
</blockquote>
<h3 id="Trilobite"><a href="#Trilobite" class="headerlink" title="Trilobite"></a>Trilobite</h3><blockquote>
<p>It first appeared in the Cambrian, reached its peak in the early Paleozoic, and then gradually decreased to extinction. The latest trilobites (Cenoptera) disappeared in the extinction of the biota at the end of the Permian period 250 million years ago </p>
</blockquote>
<p>And whales 🐳<br>Elephant 🐘 family history </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-39.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-40.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-41.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-43.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-44.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-45.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-47.jpg" alt=""></div></div></div>

<h3 id="Humanity-Pavilion"><a href="#Humanity-Pavilion" class="headerlink" title="Humanity Pavilion"></a>Humanity Pavilion</h3><p>In this long river of time, I feel that human evolution is not easy<br>The copy of lucky in the textbook is right in front of you, only about one meter<br>Live in a house built of bones<br>Wait until the old man is taller than me </p>
<blockquote>
<p>Today, all humans belong to a single group: Homo sapiens sapiens, and there is no species distinction. However, according to the “originating from Africa” model, this is not the first species of the Homo genus: the Homo genus, the first species of the Homo genus, evolved at least two million years ago, and the Homo people live in Africa differently. The region’s time is relatively short. The “Homo erectus” evolved more than 1.8 million years ago, and by 1.5 million years ago, it has spread throughout the old world. </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-50.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-51.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-48.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-49.jpg" alt=""></div></div></div>

<h3 id="Red-giant"><a href="#Red-giant" class="headerlink" title="Red giant"></a>Red giant</h3><p>Combining the huge diamond just now 💎 will involve a question of whether you should buy a diamond ring<br>well known </p>
<blockquote>
<p>There are three known allotropes of carbon: diamond, graphite, and fullerene. In terms of thermodynamics, diamond is less stable than graphite, and ** can spontaneously transform into graphite**, but the speed of this transformation under normal temperature and pressure is very slow and can be ignored, so diamond 💎 can exist stably. Diamonds formed in nature are generally formed in the high temperature and high pressure environment inside the earth, and later brought to the surface by geological tectonic movements such as volcanic eruptions. Therefore, many diamonds are found near volcanoes. Modern industry can produce diamond under high temperature and high pressure, called synthetic diamond </p>
</blockquote>
<p>So the diamond ring has no other use other than the 🦚 function of blinding others’ eyes<br>Not to mention the magnifying glass on the sun 🌞 🔍 will evaporate </p>
<p>And heavy metals such as gold and platinum </p>
<blockquote>
<p>The atomic number of gold is higher among the naturally occurring elements in the universe. It is believed that this heavy element was produced during the supernova nucleosynthesis when two neutron stars collided, [4] existed in the dust before the formation of the solar system. Since the earth was still in a molten state when it was formed, almost all the gold of the early earth has sunk into the core. Therefore, most of the gold in the earth’s crust and mantle is due to the later heavy bombing period (about 4 billion years ago) of the asteroid impact.<br>Gold was a popular precious metal before it was recorded in history. It was used in currency, value preservation, jewelry and art. In the past, a gold-based gold standard currency system was generally implemented at home and abroad, but gold coins ceased to circulate in the 1930s. In the 1970s, with the end of the Bretton Woods Agreement, the worldwide gold standard finally gave way to the legal tender system. However, because of its rarity, easy smelting, processing and coinage, unique color, corrosion resistance, and resistance to other substances, the value of gold does not decrease. </p>
</blockquote>
<p>See you immediately </p>
<p>Of course it’s not bad money or buy it 💎<br>Of course, the premise is to have a girlfriend who wants to get married 🎎 </p>
<h3 id="Gravitational-waves"><a href="#Gravitational-waves" class="headerlink" title="Gravitational waves"></a>Gravitational waves</h3><blockquote>
<p>Gravitational-wave observatory (English: Gravitational-wave observatory) is a device used to detect gravitational waves in gravitational wave astronomy. Gravitational waves are ripples caused by accelerating mass in space and time. Albert Einstein first proposed the concept of gravitational waves in 1916. [1] By detecting gravitational waves, general relativity can be experimentally verified. Commonly used detectors include rod detectors and laser interferometers. The main operating principle of these detectors is to measure the influence of gravitational waves on the distance between two distant locations. Since the 1960s, multiple gravitational wave detectors have been built and activated one after another, and there have been continuous improvements in detector sensitivity </p>
</blockquote>
<p>And various animal models<br>There is a huge blue whale outside the pavilion </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-53.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-54.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-56.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-57.jpg" alt=""></div></div></div>

<h2 id="Ueno-Zoo"><a href="#Ueno-Zoo" class="headerlink" title="Ueno Zoo"></a>Ueno Zoo</h2><p>Every time I went to the zoo before, the tiger pavilion was either undergoing renovation or was about to close.<br>Finally saw the tiger 🐯<br>Gorilla wearing a headscarf<br>I accidentally looked at each other and saw the eyes<br>Instantly a cold back, thinking of Planet of the Apes </p>
<p>Anteater or?<br>It turned out that I had seen kangaroos before I went to Australia 🦘 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-58.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-61.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-62.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-59.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-60.jpg" alt=""></div></div></div>

<p>Saw the closing, then go back<br>Passing by Azuma Bridge<br>See the yellow dot you saw on the Skytree last time ☁️ or 🍦? </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-64.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-65.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-67.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-68.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/japan-241-69.jpg" alt=""></div></div></div>

<h2 id="Return"><a href="#Return" class="headerlink" title="Return"></a>Return</h2><p>After checkout the next day, go downstairs and take the Narita Airport Line back to the airport<br>When picking up the ticket, the lady asked if she was alone<br>Inexplicably why there is still damage to single Wang 🐶 </p>
<p>Then the young lady happily informed:<br>We upgraded you to business class<br>Welcome to continue flying with JAL in the future </p>
<p>It turned out that the airline randomly selected some customers for upgrades </p>
<p>Lucky </p>
<p>However, this upgrade of the goose is limited to the business class of the aircraft<br>Unlike the previous self-funded ANA All Nippon Airways<br>Access to first-class lounge with shower </p>
<hr>
<p>Of course business class is as comfortable as always<br>Slept in the plane<br>This is the end of this 10-day 🇯🇵 trip </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>How to schedule iMessages on Mac</title>
    <url>/en/How-to-schedule-iMessages-on-Mac/</url>
    <content><![CDATA[<p>First open <code>Terminal</code> on the Mac, then follow the steps below to copy and paste the following command line: </p>
<h2 id="Send-iMessage-by-Shell"><a href="#Send-iMessage-by-Shell" class="headerlink" title="Send iMessage by Shell"></a>Send iMessage by <code>Shell</code></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">file=<span class="string">&quot;<span class="variable">$HOME</span>/Documents/sendiMessage.sh&quot;</span></span><br><span class="line">str=<span class="string">&#x27;tell application &quot;Messages&quot; to send &quot;TEXT&quot; to buddy &quot;NAME&quot;&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;#!/bin/zsh \nosascript -e &#x27;<span class="variable">$str</span>&#x27;&quot;</span> &gt; <span class="variable">$file</span></span><br><span class="line">open <span class="variable">$file</span></span><br></pre></td></tr></table></figure>

<p>You will see a file opened by the default text editing application, which shows: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#/bin/zsh</span></span><br><span class="line">osascript -e <span class="string">&#x27;tell application &quot;Messages&quot; to send &quot;TEXT&quot; to buddy &quot;NAME&quot;&#x27;</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>Please note that you should replace <code>TEXT</code> with the text to be sent in the <code>Contacts</code> application and replace <code>NAME</code> with the name.<br>Don’t forget to <strong>save</strong> the file. </p>
<h2 id="Crontab-on-mac"><a href="#Crontab-on-mac" class="headerlink" title="Crontab on mac"></a><code>Crontab</code> on mac</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo touch /etc/crontab</span><br></pre></td></tr></table></figure>

<p>You should run this line above because <code>com.vix.cron</code> will check if <code>/etc/crontab</code> exists on macOS.<br>Enter the Mac password. </p>
<h2 id="Schedule-the-shell-with-Crontab"><a href="#Schedule-the-shell-with-Crontab" class="headerlink" title="Schedule the shell with Crontab"></a>Schedule the shell with <code>Crontab</code></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">00 10 25 3 * zsh ~/Documents/sendiMessage.sh</span><br></pre></td></tr></table></figure>

<p>As the <a href="http://www.adminschoice.com/crontab-quick-reference">Crontab – Quick Reference</a> shows: </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">00    10    *   *    *        command to be executed</span><br><span class="line">- ---- </span><br><span class="line">|     |     |   |    |</span><br><span class="line">|     |     |   |    +----- day of week (0 - 6) (Sunday&#x3D;0)</span><br><span class="line">|     |     |   +------- month (1 - 12)</span><br><span class="line">|     |     +--------- day of        month (1 - 31)</span><br><span class="line">|     +----------- hour (0 - 23)</span><br><span class="line">+------------- min (0 - 59)</span><br></pre></td></tr></table></figure>

<p>This shell means that your Mac will send iMessage at 10:00 on March 25th. </p>
<p>Then modify it to your ideal time. </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure>

<p>In the next steps, you are using <code>vim</code>, which I think is the hardest part. </p>
<ol>
<li>Press <code>i</code> and you will see <code>--INSERT--</code> in the lower left corner of <code>Terminal</code>. </li>
<li>Paste <code>00 10 25 3 * zsh ~/Documents/sendiMessage.sh</code> </li>
<li>Press <code>shift + :</code> and enter <code>wq</code>, <code>enter</code> </li>
</ol>
<h2 id="Check-Crontab"><a href="#Check-Crontab" class="headerlink" title="Check Crontab"></a>Check <code>Crontab</code></h2><p><code>crontab -l</code> </p>
<p>You can see <code>00 10 25 3 * zsh ~/Documents/sendiMessage.sh</code> if everything is correct. </p>
]]></content>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Struct Codable Alamofire Generics</title>
    <url>/en/Struct-Codable-Alamofire-Generics/</url>
    <content><![CDATA[<p>I wrote <a href="https://leihao0.github.io/Swift-Generics-in-protocol-and-enum/">Swift Generics in Protocols and Enumerations</a> half a year ago to solve the problem of network response data conversion into generics Type type. </p>
<p>After Swift 4, the <a href="https://developer.apple.com/documentation/foundation/jsonserialization">JSONSerialization</a> method is a bit outdated </p>
<p>While updating the progress, I found a better way </p>
<a id="more"></a>

<h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><ul>
<li><a href="https://app.quicktype.io">Quicktype</a> </li>
<li><a href="https://github.com/Alamofire/Alamofire">Alamofire</a> </li>
</ul>
<p>Assume we have a Json structure: </p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;id&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;List&quot;</span>: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">  <span class="attr">&quot;C&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>After you paste it to Quicktype with select <strong>Alamofire extensions</strong>, you can get: </p>
<!--more-->

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">import</span> Alamofire</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span>: <span class="title">Codable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> id: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">let</span> list: [<span class="type">Int</span>]? <span class="comment">// optional, in case some date has no list</span></span><br><span class="line">    <span class="keyword">let</span> <span class="built_in">c</span>: <span class="type">C</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">CodingKeys</span>: <span class="title">String</span>, <span class="title">CodingKey</span> </span>&#123;</span><br><span class="line">        <span class="keyword">case</span> id</span><br><span class="line">        <span class="keyword">case</span> list = <span class="string">&quot;List&quot;</span></span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">c</span> = <span class="string">&quot;C&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">C</span>: <span class="title">Codable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> id: <span class="type">Int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MARK: - Alamofire response handlers</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">DataRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">fileprivate</span> <span class="function"><span class="keyword">func</span> <span class="title">decodableResponseSerializer</span>&lt;T: Decodable&gt;<span class="params">()</span></span> -&gt; <span class="type">DataResponseSerializer</span>&lt;<span class="type">T</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">DataResponseSerializer</span> &#123; <span class="number">_</span>, response, data, error <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">guard</span> error == <span class="literal">nil</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> .failure(error!) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> data = data <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> .failure(<span class="type">AFError</span>.responseSerializationFailed(reason: .inputDataNil))</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="type">Result</span> &#123; <span class="keyword">try</span> <span class="type">JSONDecoder</span>().decode(<span class="type">T</span>.<span class="keyword">self</span>, from: data) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@discardableResult</span></span><br><span class="line">    <span class="keyword">fileprivate</span> <span class="function"><span class="keyword">func</span> <span class="title">responseDecodable</span>&lt;T: Decodable&gt;<span class="params">(queue: DispatchQueue? = <span class="literal">nil</span>, completionHandler: @escaping <span class="params">(DataResponse&lt;T&gt;)</span></span></span> -&gt; <span class="type">Void</span>) -&gt; <span class="type">Self</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> response(queue: queue, responseSerializer: decodableResponseSerializer(), completionHandler: completionHandler)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@discardableResult</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">responseA</span><span class="params">(queue: DispatchQueue? = <span class="literal">nil</span>, completionHandler: @escaping <span class="params">(DataResponse&lt;A&gt;)</span></span></span> -&gt; <span class="type">Void</span>) -&gt; <span class="type">Self</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> responseDecodable(queue: queue, completionHandler: completionHandler)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Please note that <code>func responseA</code> is a static type and only applies to spatial APIs that respond to the JSON you pasted. Therefore, we need generic types for all APIs. </p>
<p>So we can delete <code>func responseA</code> and define a protocol <code>MYRequest</code> as follows: </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">MYRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> router: <span class="type">String</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> api: <span class="type">String</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">associatedtype</span> <span class="type">T</span>: <span class="type">Decodable</span> <span class="comment">// generics type</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">MYRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> api: <span class="type">String</span> &#123; <span class="keyword">return</span> <span class="string">&quot;v1&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> domain: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;https://domain.com&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// T is used in DataResponse&lt;T&gt;</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">request</span><span class="params">(completionHandler: @escaping <span class="params">(DataResponse&lt;T&gt;)</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> url = <span class="string">&quot;\(domain)/\(api)/\(router)&quot;</span></span><br><span class="line">        <span class="type">Alamofire</span>.request(url).responseDecodable(completionHandler: completionHandler)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Now, we can implement different Requests as needed: </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ARequset</span>: <span class="title">MYRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> router = <span class="string">&quot;a&quot;</span></span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">A</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BRequset</span>: <span class="title">MYRequest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> router = <span class="string">&quot;b&quot;</span></span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">B</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>In addition, we can define another protocol with the same protocol <code>var api: String &#123;get &#125;</code> in <code>MYRequest</code> if we have a new <code>CRequset</code> and the API is upgraded to v2 </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">V2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> api: <span class="type">String</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">V2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> api: <span class="type">String</span> &#123; <span class="keyword">return</span> <span class="string">&quot;v2&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">C</span>: <span class="title">Request</span>, <span class="title">V2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> router = <span class="string">&quot;c&quot;</span></span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">T</span> = <span class="type">C</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Finally, the request in ViewController will look like this: </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">ARequset</span>().request &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] response <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> a = response.result.value &#123; <span class="comment">// a is A, not Any</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">BRequset</span>().request &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] response <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> b = response.result.value &#123; <span class="comment">// b is B, not Any</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Swift</tag>
      </tags>
  </entry>
  <entry>
    <title>How to build tesseract 4 beta on macOS</title>
    <url>/en/How-to-build-tesseract-4-beta-on-macOS/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew info tesseract</span><br><span class="line"></span><br><span class="line">tesseract: stable 3.05.01 (bottled), HEAD</span><br><span class="line">OCR (Optical Character Recognition) engine</span><br></pre></td></tr></table></figure>

<p>The result of identifying <code>Simplified Chinese</code> is a bit scary.<br>I noticed that it added a new neural network system based on LSTM after 4.0.0+<br>But it needs to be built from source code on macOS.<br>Fortunately, the manual has a detailed description on its README.md </p>
<a id="more"></a>

<h2 id="Install-dependencies"><a href="#Install-dependencies" class="headerlink" title="Install dependencies"></a>Install dependencies</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install automake autoconf autoconf-archive libtool</span><br><span class="line">brew install pkgconfig</span><br><span class="line">brew install icu4c</span><br><span class="line">brew install leptonica</span><br><span class="line">brew install gcc</span><br></pre></td></tr></table></figure>

<h2 id="Compile"><a href="#Compile" class="headerlink" title="Compile"></a>Compile</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/tesseract-ocr/tesseract/</span><br><span class="line"><span class="built_in">cd</span> tesseract</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure CC=gcc CXX=g++ CPPFLAGS=-I/usr/<span class="built_in">local</span>/opt/icu4c/include LDFLAGS=-L/usr/<span class="built_in">local</span>/opt/icu4c/lib</span><br><span class="line">make -j</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>Their best trained <a href="https://github.com/tesseract-ocr/tessdata_best">modes</a>, download the language <code>chi_sim.traineddata</code> and put it under <code>tesseract/4.0.0.1/tessdata/</code> </p>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tesseract image.png image -l chi_sim</span><br><span class="line">cat image.txt</span><br></pre></td></tr></table></figure>

<p>Okay, it still sucks under the <code>song font</code> font. I need to train myself on the new model. </p>
<hr>
<p>Finally, I ignored <code>tesseract</code>, I found that dragging <code>image</code> into <code>OneNote</code>, and <code>Ctrl + click</code>-&gt;<code>Copy text from picture</code> will get higher accuracy. 😓 </p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>LSTM</tag>
      </tags>
  </entry>
  <entry>
    <title>Meet Rama</title>
    <url>/en/Rendezvous-with-Rama/</url>
    <content><![CDATA[<div style="width: 300px">
<img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Rendezvous%20with%20Rama.jpg" />
</div>

<p>I have admired the base series for a long time. This is the first Clark novel to be read completely. </p>
<a id="more"></a>

<h3 id="translation"><a href="#translation" class="headerlink" title="translation"></a>translation</h3><p>Let me talk about translation </p>
<p>About two years ago, I had the original version and decided not to read the translation<br>I haven’t read it. Another earlier version met with Rama, so I didn’t post a comparison.<br>As far as this version is concerned, there is no imaginary sense of violation<br>As far as the name is concerned, Rama must be wrong, because the original text contains: </p>
<blockquote>
<p>now they were working through the Gindu pantheon. And so 31/439 was christened Rama. </p>
</blockquote>
<h3 id="Cover"><a href="#Cover" class="headerlink" title="Cover"></a>Cover</h3><p>And I like this cover<br>When I first got the book, I thought it was something like a gravitational lens. I was completely misled. I didn’t expect it to be Rama. </p>
<h3 id="Technology"><a href="#Technology" class="headerlink" title="Technology"></a>Technology</h3><p>On the whole, the only thing that feels wrong is the interstellar spacecraft, and the chimpanzee who does chores<br>Judging from the current level of technology, those doing these things should be more like robots in Interstellar (you see, Rama civilization is also made by Jiangzi)<br>The human physiology described in the book has not improved much compared to now<br>It’s hard to imagine that humans are still like this when they move as far as Pluto (in the book, Pluto is still a planet rather than a dwarf planet). </p>
<p>You know, I felt like I was going to die when I went to Europe for an 11-hour flight. When I did this kind of interstellar travel, it was not a corpse anymore. </p>
<p>So if humans don’t iteratively upgrade as described in “Life 3.0”<br>Compared to humans, the humanoid robots in nier automata are more suitable for interstellar travel </p>
<p>Others are great<br>For example, although Rama’s intelligent life did not show up at the end, it is inferred that it should be similar to humans.<br>The mainstream view of science until now is that carbon-based life is because: </p>
<ol>
<li>Macromolecules need carbon and silicon to be linkers </li>
<li>Silicon needs extremely high temperatures to become active </li>
<li>The carbon in the entire universe is 10 times that of silicon </li>
</ol>
<p>Then Rama is the robot, which has specific functions, weak artificial intelligence, and does not need to be conscious </p>
<h3 id="Rama-people"><a href="#Rama-people" class="headerlink" title="Rama people"></a>Rama people</h3><p>The book is only in Liuli Shrine (I’m sorry I saw the glass and the temple is turned into a shrine ⛩️) That chapter describes the creatures in the crystal, why guess that this is Rama’s advanced intelligent creature? </p>
<p>Because if you see a 📱 in the universe, you will definitely not think that it was formed naturally, it must be created by some kind of intelligent life </p>
<h3 id="Nuclear-bomb-from-Mercury"><a href="#Nuclear-bomb-from-Mercury" class="headerlink" title="Nuclear bomb from Mercury"></a>Nuclear bomb from Mercury</h3><p>When I saw it, I was worried about Rama being destroyed.<br>But to me, the Mercury people are not wrong, their speeches also make sense </p>
<p>If we pause here, treat it as a thought experiment<br>In the end, Rama really occupied the near-solar orbit. Originally, he had this opportunity to preserve human civilization. As a result, human civilization disappeared because of a person’s hypocrisy. The person who detonated the nuclear bomb was not a hero but a sinner. </p>
<blockquote>
<p>Survival is the first need of civilization </p>
</blockquote>
<p>In addition, for the human beings who have just stepped out of the solar system, there is no difference from the situation when they stepped out of Africa that year. When facing a dangerous environment again, how can they treat space in the way of modern civilization on Earth? </p>
<blockquote>
<p>do not go gentle into that good night </p>
</blockquote>
<p>However, from the perspective of Rama, where the sun is only 5 million kilometers behind, it opens the protective cover, draws energy, and violates Newton’s third law of movement. It is not important whether the nuclear bomb is or not, but it highlights that it is actually a human species-level struggle </p>
<h3 id="civilization"><a href="#civilization" class="headerlink" title="civilization"></a>civilization</h3><p>Human evolution has led to no conception of unusual sizes that cross daily levels </p>
<p>According to the description in the book, it is 50 kilometers long and 20 kilometers in diameter, so the circumference is 62.8 kilometers, so it seems that the entire inner wall area is 3,140 kilometers. What is the concept? </p>
<ul>
<li>Three ten thousandths of our country </li>
<li>Beijing Sixth Ring Road 2,267 km² </li>
<li>Shanghai 6,340 km² </li>
<li>Shenzhen 2,050 km² </li>
<li>Hong Kong 2,754 km² </li>
</ul>
<p>Feel it for yourself </p>
<p>Think about the current population of these cities, so such an area can fully carry the population base required by a human civilization<br>Not to mention the low gravity in the middle of Rama. Now the city skyscrapers are only a few hundred meters away. Rama is 10 kilometers away, which is two orders of magnitude worse, so the actual capacity<br>Not surface area but volume<br>Moreover, Rama should be just one of them, after all </p>
<blockquote>
<p>Rama is the seventh avatar of the god Vishnu </p>
</blockquote>
<blockquote>
<p>The List that Avatars in the Dashavatara Waris by Reason: Matsya, Kurma, Varaha, Narasimha, Vamana, Parashurama, Rama, Krishna, Balarama and Kalki </p>
</blockquote>
]]></content>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>How to convert video to text</title>
    <url>/en/How-to-convert-video-to-text/</url>
    <content><![CDATA[<p>If the audio is Mandarin, I find that XFyun FlySpeechRecognizer does a good job in this matter. It can even recognize some simple English words in mixed language audio. </p>
<p>There is no need to train a machine learning model from the beginning to do such a thing. </p>
<a id="more"></a>

<p>XFyun API has some limitations. The size should be less than or equal to 2MB, and the audio length should be less than or equal to 60s. </p>
<p>Usage <code>./test.sh test.mp4</code> </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/zsh</span></span><br><span class="line">filename=$(<span class="built_in">echo</span> <span class="variable">$1</span> | cut -d. -f1)</span><br><span class="line"><span class="built_in">type</span>=$(<span class="built_in">echo</span> <span class="variable">$1</span> | cut -d. -f2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print $filename.$type </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># split video &lt;= 2MB </span></span><br><span class="line">mp4box -splits 2000 <span class="variable">$filename</span>.<span class="variable">$type</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># echo video → audio pcm </span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> <span class="variable">$filename</span>\_*.<span class="variable">$type</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;ffmpeg <span class="variable">$name</span> to pcm&quot;</span></span><br><span class="line">  ffmpeg -y  -i <span class="variable">$name</span> -acodec pcm_s16le -f s16le -ac 1 -ar 16000 <span class="variable">$name</span>.pcm</span><br><span class="line">  rm <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># audio to text </span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> <span class="variable">$filename</span>\_*.pcm; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;xfyun.py <span class="variable">$name</span>&quot;</span></span><br><span class="line">  python3 xfyun.py <span class="variable">$name</span></span><br><span class="line">  rm <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>Now we can use XFyun to recognize audio. </p>
<p>This is their document <a href="https://doc.xfyun.cn/rest_api/%E8%AF%AD%E9%9F%B3%E5%90%AC%E5%86%99.html">XFyun IFlySpeechRecognizer</a>, But the sample code could not be executed, so I made some fixes. </p>
<p><code>xfyun.py</code> with <code>Python3</code>: </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*- </span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">argv</span>):</span></span><br><span class="line">    f = open(argv[<span class="number">1</span>], <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">    file_content = f.read()</span><br><span class="line">    base64_audio = base64.b64encode(file_content)</span><br><span class="line">    body = urllib.parse.urlencode(&#123;<span class="string">&#x27;audio&#x27;</span>: base64_audio&#125;).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    url = <span class="string">&#x27;http://api.xfyun.cn/v1/service/v1/iat&#x27;</span></span><br><span class="line">    api_key = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    x_appid = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    param = &#123;<span class="string">&quot;engine_type&quot;</span>: <span class="string">&quot;sms16k&quot;</span>, <span class="string">&quot;aue&quot;</span>: <span class="string">&quot;raw&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    param_str = json.dumps(param)</span><br><span class="line">    param_utf8 = param_str.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    param_b64 = base64.b64encode(param_utf8)</span><br><span class="line">    param_b64str = param_b64.decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    x_time = str(int(time.time()))</span><br><span class="line">    checksum = (api_key + x_time + param_b64str).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    x_checksum = hashlib.md5(checksum).hexdigest()</span><br><span class="line">    x_header = &#123;<span class="string">&#x27;X-Appid&#x27;</span>: x_appid,</span><br><span class="line">                <span class="string">&#x27;X-CurTime&#x27;</span>: x_time,</span><br><span class="line">                <span class="string">&#x27;X-Param&#x27;</span>: param_b64str,</span><br><span class="line">                <span class="string">&#x27;X-CheckSum&#x27;</span>: x_checksum&#125;</span><br><span class="line"></span><br><span class="line">    req = urllib.request.Request(url, data=body, headers=x_header)</span><br><span class="line">    response = urllib.request.urlopen(req)</span><br><span class="line">    result = response.read().decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    data = json.loads(result)[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">    <span class="keyword">print</span> (data)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main(sys.argv)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>More how to convert video to text</title>
    <url>/en/More-how-to-convert-video-to-text/</url>
    <content><![CDATA[<p>I tried XFyun, but it is not suitable for recognizable results, so I am looking for another recognizer to perform some tests. </p>
<ul>
<li>[Kaka](Http: //a.k.com/product/access.html) </li>
<li>[Baidu](Http: //a.Baidu.com/docs#/user-online-python-add/top) </li>
<li><a href="https://cloud.google.com/speech-to-text/">Google</a> </li>
</ul>
<p>The good news is that they all support the <code>PCM</code> type converted earlier, so I need to make some changes to the shell. When you want to compare the results from different recognizers, just run: </p>
<p><code>test.sh xfyun.py|baidu.py|qq.py test.mp4|.m4a</code> </p>
<a id="more"></a>

<p>To be honest, Google’s results look better with human eyes. </p>
<p><code>test. is</code> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/zsh</span></span><br><span class="line"></span><br><span class="line">py=$<span class="number">1</span></span><br><span class="line"></span><br><span class="line">filename=$(echo $<span class="number">2</span> | cut -d. -f1)</span><br><span class="line">type=$(echo $<span class="number">2</span> | cut -d. -f2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># print $filename.$type </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># split video &lt;= 1MB </span></span><br><span class="line">mp4box -splits <span class="number">2000</span> $filename.$type</span><br><span class="line"></span><br><span class="line"><span class="comment"># echo video → audio pcm </span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> $filename\_*.$type; do</span><br><span class="line">  <span class="keyword">print</span> <span class="string">&quot;ffmpeg $name to pcm&quot;</span></span><br><span class="line">  ffmpeg -y  -i $name -acodec pcm_s16le -f s16le -ac <span class="number">1</span> -ar <span class="number">16000</span> $name.pcm</span><br><span class="line">  rm $name</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment"># audio to text </span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> $filename\_*.pcm; do</span><br><span class="line">  <span class="keyword">print</span> <span class="string">&quot;$py $name&quot;</span></span><br><span class="line">  python3 $py $name</span><br><span class="line">  <span class="comment"># rm $name </span></span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<!--more-->

<h2 id="ID-Yes-Friends"><a href="#ID-Yes-Friends" class="headerlink" title="ID_Yes. Friends"></a>ID_Yes. Friends</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dic = &#123;</span><br><span class="line">    <span class="string">&quot;xfyun&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;baidu&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;secret&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;qq&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="google"><a href="#google" class="headerlink" title="google"></a>google</h2><p>They submitted the file online, so I skipped writing *.py 😝 </p>
<h2 id="Baidu-Friends"><a href="#Baidu-Friends" class="headerlink" title="Baidu. Friends"></a>Baidu. Friends</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipSpeech</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> id_key</span><br><span class="line">app_id = id_key.dic[<span class="string">&#x27;baidu&#x27;</span>][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">app_key = id_key.dic[<span class="string">&#x27;baidu&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line">secret = id_key.dic[<span class="string">&#x27;baidu&#x27;</span>][<span class="string">&#x27;secret&#x27;</span>]</span><br><span class="line"></span><br><span class="line">client = AipSpeech(app_id, app_key, secret)</span><br><span class="line"></span><br><span class="line">print(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file_content</span>(<span class="params">filePath</span>):</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">return</span> fp.read()</span><br><span class="line"></span><br><span class="line">res=client.asr(get_file_content(sys.argv[<span class="number">1</span>]), <span class="string">&#x27;pcm&#x27;</span>, <span class="number">16000</span>, &#123;</span><br><span class="line">    <span class="string">&#x27;dev_pid&#x27;</span>: <span class="number">1537</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure>

<h2 id="QQ-Friends"><a href="#QQ-Friends" class="headerlink" title="QQ. Friends"></a>QQ. Friends</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*- </span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> time, random, base64, json</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> id_key</span><br><span class="line">app_id = id_key.dic[<span class="string">&#x27;qq&#x27;</span>][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">app_key = id_key.dic[<span class="string">&#x27;qq&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line"></span><br><span class="line">api_url=<span class="string">&#x27;https://api.ai.qq.com/fcgi-bin/aai/aai_asr&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span>(<span class="params">string</span>):</span></span><br><span class="line">    md = hashlib.md5()</span><br><span class="line">    md.update(string)</span><br><span class="line">    md5 = md.hexdigest().upper()</span><br><span class="line">    <span class="keyword">return</span> md5</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">signify</span>(<span class="params">args, app_key</span>):</span></span><br><span class="line">    query_str = urlencode(args)</span><br><span class="line">    query_str = query_str + <span class="string">&#x27;&amp;app_key=&#x27;</span> + app_key</span><br><span class="line">    signiture = md5(query_str.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> signiture</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">urlencode</span>(<span class="params">args</span>):</span></span><br><span class="line">    tuples = [(k, args[k]) <span class="keyword">for</span> k <span class="keyword">in</span> sorted(args.keys()) <span class="keyword">if</span> args[k]]</span><br><span class="line">    query_str = urllib.parse.urlencode(tuples)</span><br><span class="line">    <span class="keyword">return</span> query_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">http_post</span>(<span class="params">api_url, args</span>):</span></span><br><span class="line">    resp = requests.post(url=api_url, data=args)</span><br><span class="line">    resp = json.loads(resp.text)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseASR</span>(<span class="params">object</span>):</span></span><br><span class="line">    ext2idx = &#123;<span class="string">&#x27;pcm&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;wav&#x27;</span>: <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;amr&#x27;</span>: <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;slk&#x27;</span>: <span class="string">&#x27;4&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, api_url, app_id, app_key</span>):</span></span><br><span class="line">        self.api_url = api_url</span><br><span class="line">        self.app_id = app_id</span><br><span class="line">        self.app_key = app_key</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stt</span>(<span class="params">self, audio_file, ext, rate</span>):</span></span><br><span class="line">        <span class="keyword">raise</span> Exceptin(<span class="string">&quot;Unimplemented!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BasicASR</span>(<span class="params">BaseASR</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot; Online ASR from Tencent</span></span><br><span class="line"><span class="string">    https://ai.qq.com/doc/aaiasr.shtml</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        super(BasicASR, self).__init__(api_url, app_id, app_key)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stt</span>(<span class="params">self, audio_file, ext=<span class="string">&#x27;pcm&#x27;</span>, rate=<span class="number">16000</span></span>):</span></span><br><span class="line">        <span class="keyword">if</span> ext == <span class="string">&#x27;pcm&#x27;</span>:</span><br><span class="line">            <span class="comment"># wf = wave.open(audio_file) </span></span><br><span class="line">            <span class="comment"># nf = wf.getnframes () </span></span><br><span class="line">            <span class="comment"># audio_data = wf.readframes(nf) </span></span><br><span class="line">            f = open(audio_file, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">            audio_data = f.read()</span><br><span class="line">            f.close()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;Unsupport audio file format!&quot;</span>)</span><br><span class="line"></span><br><span class="line">        args = &#123;</span><br><span class="line">            <span class="string">&#x27;app_id&#x27;</span>: self.app_id,</span><br><span class="line">            <span class="string">&#x27;time_stamp&#x27;</span>: str(int(time.time())),</span><br><span class="line">            <span class="string">&#x27;nonce_str&#x27;</span>: <span class="string">&#x27;%.x&#x27;</span> % random.randint(<span class="number">1048576</span>, <span class="number">104857600</span>),</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: self.ext2idx[ext],</span><br><span class="line">            <span class="string">&#x27;rate&#x27;</span>: str(rate),</span><br><span class="line">            <span class="string">&#x27;speech&#x27;</span>: base64.b64encode(audio_data),</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        signiture = signify(args, self.app_key)</span><br><span class="line">        args[<span class="string">&#x27;sign&#x27;</span>] = signiture</span><br><span class="line">        resp = http_post(self.api_url, args)</span><br><span class="line">        print(resp)</span><br><span class="line">        text = resp[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;text&#x27;</span>].encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># if DE<span class="doctag">BUG:</span> </span></span><br><span class="line">        <span class="keyword">return</span> text</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">asr_engine = BasicASR()</span><br><span class="line">text = asr_engine.stt(sys.argv[<span class="number">1</span>])</span><br><span class="line">print(text)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Western-luck-Friends"><a href="#Western-luck-Friends" class="headerlink" title="Western luck. Friends"></a>Western luck. Friends</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*- </span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> id_key</span><br><span class="line">app_id = id_key.dic[<span class="string">&#x27;xfyun&#x27;</span>][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">api_key = id_key.dic[<span class="string">&#x27;xfyun&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://api.xfyun.cn/v1/service/v1/iat&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">argv</span>):</span></span><br><span class="line">    f = open(argv[<span class="number">1</span>], <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">    file_content = f.read()</span><br><span class="line">    base64_audio = base64.b64encode(file_content)</span><br><span class="line">    body = urllib.parse.urlencode(&#123;<span class="string">&#x27;audio&#x27;</span>: base64_audio&#125;).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    param = &#123;<span class="string">&quot;engine_type&quot;</span>: <span class="string">&quot;sms16k&quot;</span>, <span class="string">&quot;aue&quot;</span>: <span class="string">&quot;raw&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    param_str = json.dumps(param)</span><br><span class="line">    param_utf8 = param_str.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    param_b64 = base64.b64encode(param_utf8)</span><br><span class="line">    param_b64str = param_b64.decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    x_time = str(int(time.time()))</span><br><span class="line">    checksum = (api_key + x_time + param_b64str).encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    x_checksum = hashlib.md5(checksum).hexdigest()</span><br><span class="line">    x_header = &#123;<span class="string">&#x27;X-Appid&#x27;</span>: app_id,</span><br><span class="line">                <span class="string">&#x27;X-CurTime&#x27;</span>: x_time,</span><br><span class="line">                <span class="string">&#x27;X-Param&#x27;</span>: param_b64str,</span><br><span class="line">                <span class="string">&#x27;X-CheckSum&#x27;</span>: x_checksum&#125;</span><br><span class="line"></span><br><span class="line">    req = urllib.request.Request(url, data=body, headers=x_header)</span><br><span class="line">    response = urllib.request.urlopen(req)</span><br><span class="line">    result = response.read().decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    dic = json.loads(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> dic[<span class="string">&#x27;data&#x27;</span>] != <span class="string">&quot;&quot;</span>:</span><br><span class="line">        print(dic[<span class="string">&#x27;data&#x27;</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(result)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main(sys.argv)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>How to download videos from Toutube at the same time and embed their subtitles in batch</title>
    <url>/en/How-to-download-videos-concurrently-from-youtube-and-batch-embed-their-subtitles/</url>
    <content><![CDATA[<p>All I have to do is to download some courses, which are very helpful to me on youtube, and embed Zh-Hans subtitles in the video, and then submit them to a Chinese website that does not support external subtitles. </p>
<p>This tool can help Chinese students who don’t speak English well and cannot access YouTube. </p>
<a id="more"></a>

<h2 id="Youtube-dl-config"><a href="#Youtube-dl-config" class="headerlink" title="Youtube-dl config"></a>Youtube-dl config</h2><p>The file path is <code>~/.config/youtube-dl/config</code> </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--o <span class="string">&#x27;%(playlist_index)02ds - %(title)s.%(ext)s&#x27;</span></span><br><span class="line">--no-mtime</span><br><span class="line">--proxy socks5://127.0.0.1:1080</span><br><span class="line"></span><br><span class="line">--ignore-errors</span><br><span class="line"></span><br><span class="line">-f bestvideo[height&lt;=?1080]+bestaudio/best</span><br><span class="line"></span><br><span class="line">--merge-output-format <span class="string">&#x27;mkv&#x27;</span></span><br><span class="line"></span><br><span class="line">--write-auto-sub --sub-lang <span class="string">&#x27;zh-Hans&#x27;</span></span><br><span class="line"></span><br><span class="line">--convert-subs <span class="string">&#x27;ass&#x27;</span></span><br><span class="line"></span><br><span class="line">--embed-subs</span><br></pre></td></tr></table></figure>

<h2 id="Simultaneous-download"><a href="#Simultaneous-download" class="headerlink" title="Simultaneous download"></a>Simultaneous download</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">playlist=<span class="string">&#x27;https://www.youtube.com/playlist?list=...&#x27;</span></span><br><span class="line">num=70</span><br><span class="line">i=1</span><br><span class="line"><span class="keyword">while</span> ((<span class="variable">$i</span> &lt;= <span class="variable">$num</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    end=$(( i+<span class="number">1</span> ))</span><br><span class="line">    youtube-dl --playlist-start <span class="variable">$i</span> --playlist-end <span class="variable">$end</span> <span class="variable">$playlist</span> &gt; <span class="string">&quot;log-<span class="variable">$i</span>-<span class="variable">$end</span>.txt&quot;</span>  2&gt;&amp;1  &amp;</span><br><span class="line">    i=$((<span class="variable">$end</span>+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="Batch-translate-file-names"><a href="#Batch-translate-file-names" class="headerlink" title="Batch translate file names"></a>Batch translate file names</h2><p>After downloading all the videos in the list, use </p>
<p><code>ls | grep mkv | sed &quot;s/\.mkv//&quot;</code> </p>
<p>Then copy and paste to Google to get the translated text, then save it to <code>zh.txt</code> </p>
<h2 id="Embed-subtitles-in-batch"><a href="#Embed-subtitles-in-batch" class="headerlink" title="Embed subtitles in batch"></a>Embed subtitles in batch</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tmp=<span class="string">&quot;tmp.mkv&quot;</span></span><br><span class="line">mkdir -p embedSub</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> *.mkv; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">read</span> -r zh &lt;&amp;3</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$f</span>\n<span class="variable">$zh</span>&quot;</span></span><br><span class="line">  <span class="comment"># ass=&quot;$( echo $f | sed &#x27;s/\.mkv//&#x27;).zh-Hans.ass&quot; </span></span><br><span class="line">  cp <span class="variable">$f</span> <span class="variable">$tmp</span></span><br><span class="line">  ffmpeg -nostats -loglevel 24 -n -i <span class="variable">$tmp</span> -vf subtitles=<span class="variable">$tmp</span> <span class="string">&quot;embedSub/<span class="variable">$zh</span>.mkv&quot;</span>;</span><br><span class="line"><span class="keyword">done</span> 3&lt;zh.txt</span><br><span class="line"></span><br><span class="line">rm <span class="variable">$tmp</span></span><br></pre></td></tr></table></figure>

<p>On Intel Core i7, I usually spend an entire night recording 20 videos, and an hour of video takes 20 minutes to embed its subtitles. </p>
]]></content>
      <tags>
        <tag>youtube</tag>
        <tag>ffmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title>CUDA GPU with Staxrip accelerates h264 / h265 / HEVC video encoding</title>
    <url>/en/CUDA-GPU-Accelerated-h264-h265-HEVC-Video-Encoding-with-Staxrip/</url>
    <content><![CDATA[<p>Games have changed my life. </p>
<p>I have been to cities for many years. These cities have had travels in the Assassin’s Creed series, including “Sleeping Dog 2”, “GTA” and so on.<br>When I actually enter the real world, it will have a big impact. Therefore, every time I go back, I always want to experience it in the game. </p>
<a id="more"></a>

<p>However, as I get older and older 👴, I spend less and less time playing games 👱. </p>
<p>I am recording 🎮 while playing 📹, this might be a good idea. </p>
<h2 id="ShadowPlay"><a href="#ShadowPlay" class="headerlink" title="ShadowPlay"></a>ShadowPlay</h2><p>Since I have a Gigabyte Geforce GTX 1080 to train deep learning models, the only thing I need is Nvidia ShadowPlay, which is very suitable for recording games. </p>
<p>But the minimum bit rate is 10Mbps, I want to reduce it below 6kbps, so compression is involved 🗜️. </p>
<h2 id="Staxrip"><a href="#Staxrip" class="headerlink" title="Staxrip"></a>Staxrip</h2><p>I always use FFmpeg before, but every time I hear the sound of a Macbook, I feel panic. I usually spend an entire night to convert the batch video. </p>
<p>Fortunately, this time I saw the Cuda logo, which reminded of the acceleration of the GPU. </p>
<p>Then I found <a href="https://github.com/stax76/staxrip">staxrip</a>, which is incredible. </p>
<ol>
<li>Click <strong>x264</strong>, select <strong>NVIDIA H.265</strong> (I tested on my 1080, its speed is similar to NVIDIA H.264, I used to think 264 should be much faster than 265), and then it You can use GPU acceleration. </li>
<li>Click <code>Encoder Options</code>, change the mode to <code>VBR</code>, and then “Video Bit Rate” appears. </li>
</ol>
<p>It can reach 250 frames per second when CPU is 40% and GPU is 35%. </p>
]]></content>
      <tags>
        <tag>CUDA GPU</tag>
      </tags>
  </entry>
  <entry>
    <title>React Native &amp; Flutter</title>
    <url>/en/React-Native-Flutter/</url>
    <content><![CDATA[<p>There are already many pros and cons. </p>
<table>
<thead>
<tr>
<th align="left"></th>
<th>Pros</th>
<th>Cons</th>
</tr>
</thead>
<tbody><tr>
<td align="left">React Native</td>
<td>Hot Reloading<br />Online Hot Fixing <br />Front-End friendly<br />Cross platform<br />Fix once<br /></td>
<td>JavaScript<br />Native UI knowledge on both platform<br />Debugging<br /></td>
</tr>
<tr>
<td align="left">Flutter</td>
<td>Flutter Engine<br />Cross platform<br />Same UX &amp; UI<br /></td>
<td>Learn Dart<br />Unstable (1.0 released)<br />Ugly Code Style <br />iOS 13?<br />Debugging<br /></td>
</tr>
<tr>
<td align="left">Native</td>
<td>iOS Part<br />Much easier<br />AutoLayout, Storyboard<br />Swift, write less and do more<br />SpriteKit, UIDynamic</td>
<td>Three developers(fontend, iOS, android) triple budgets</td>
</tr>
</tbody></table>
<a id="more"></a>

<p>As an iOS developer who happily follows the  steps, when I first set foot in iOS developers, I used Swift, Storyboard and AutoLayout. </p>
<p>I think this is why most native developers are not even willing to learn React Native. </p>
<p>Two years ago, I established Mattermost and made some changes in the previous company to replace Slack. This was the first React Native project I came into contact with. </p>
<p>Unfortunately, it’s very easy to lose code, and every time I want to change something, I have to search the entire project. There is no Storyboard to let me know who told who. </p>
<p>I chatted with my former colleague, who was an advanced front end. He helped me start the update server, which was also written in Node.js. I handed over this project to him when I left. </p>
<p>According to him, this is because he doesn’t know how to write native code, just like React React is similar to React.js, why not use it to try both iOS and Android. Then I asked him if he knew how to develop quickly and what kind of technology he would like. You can guess the answer 😄. </p>
<p>Because from my point of view, it is sometimes difficult to implement functions even in fast code, which is definitely a long way to go for another technology to achieve. </p>
<p>Then, these days, I have the opportunity to conduct a demo with nested magnet scroll views, buttons and navigation. Instead of using native code, I stepped out of my comfort zone and tried React Native and Flutter. </p>
<ul>
<li>Views <ul>
<li>ListView, ScrollView, Labels, Texts, TextFields </li>
</ul>
</li>
<li>Actions <ul>
<li>Drag, Click, Scroll </li>
<li>Callback Block or Delegate on view events </li>
</ul>
</li>
</ul>
<p>Therefore, if you are proficient in any of them, all that remains is how Google implements it in the framework or read its manual. </p>
<h2 id="React-Native"><a href="#React-Native" class="headerlink" title="React Native"></a>React Native</h2><p>The impressive thing about React Native is <strong>state</strong> </p>
<p>It can be achieved by the <code>didSet</code> of variables in Swift, and there are many frameworks that can do it, such as RxSwift, PromiseKit </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> state: <span class="type">Any</span> &#123;</span><br><span class="line">    <span class="keyword">didSet</span> &#123;</span><br><span class="line">        updateViews()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Flutter"><a href="#Flutter" class="headerlink" title="Flutter"></a>Flutter</h2><p>I used to be curious about certain applications that UX is very similar to those developed by this machine, but it feels weird in some way. Now I know it is shaking. </p>
<ul>
<li>This is my first time to write and get two apps (I have a lot of trouble setting up React Native with Android) </li>
<li>0.9 There is an error on the hot install </li>
<li>The development on Visual Studio Code is quite good, which reminds me of the past of Golang </li>
<li>Ugly code style (Are they serious about it? This is an official example) </li>
</ul>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeroAnimation</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    timeDilation = <span class="number">5.0</span>; <span class="comment">// 1.0 means normal animation speed.</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: <span class="keyword">const</span> Text(<span class="string">&#x27;Basic Hero Animation&#x27;</span>), </span><br><span class="line">      ),</span><br><span class="line">      body: Center(</span><br><span class="line">        child: PhotoHero(</span><br><span class="line">          photo: <span class="string">&#x27;images/flippers-alpha.png&#x27;</span>,</span><br><span class="line">          width: <span class="number">300.0</span>,</span><br><span class="line">          onTap: () &#123;</span><br><span class="line">            Navigator.of(context).push(MaterialPageRoute&lt;<span class="keyword">void</span>&gt;(</span><br><span class="line">              builder: (BuildContext context) &#123;</span><br><span class="line">                <span class="keyword">return</span> Scaffold(</span><br><span class="line">                  appBar: AppBar(</span><br><span class="line">                    title: <span class="keyword">const</span> Text(<span class="string">&#x27;Flippers Page&#x27;</span>), </span><br><span class="line">                  ),</span><br><span class="line">                  body: Container(</span><br><span class="line">                    <span class="comment">// The blue background emphasizes that it&#x27;s a new route.</span></span><br><span class="line">                    color: Colors.lightBlueAccent,</span><br><span class="line">                    padding: <span class="keyword">const</span> EdgeInsets.all(<span class="number">16.0</span>),</span><br><span class="line">                    alignment: Alignment.topLeft,</span><br><span class="line">                    child: PhotoHero(</span><br><span class="line">                      photo: <span class="string">&#x27;images/flippers-alpha.png&#x27;</span>,</span><br><span class="line">                      width: <span class="number">100.0</span>,</span><br><span class="line">                      onTap: () &#123;</span><br><span class="line">                        Navigator.of(context).pop();</span><br><span class="line">                      &#125;,</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                );</span><br><span class="line">              &#125;</span><br><span class="line">            ));</span><br><span class="line">          &#125;,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>In any case, I was really impressed by it, it skipped the <code>native components</code> and wrote its own 2D rendering engine. Much more talented than React Native. </p>
<p>Therefore, personally, I think Flutter has more potential than React Native. And there are many companies rolling back to local. </p>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>React Native</tag>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>SKEmitterNode in SpriteKit Scene sks</title>
    <url>/en/SKEmitterNode-in-SpriteKit-Scene-sks/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/33lUmpg.gif" alt=""><br>Particles on iOS require SpriteKit. </p>
<a id="more"></a>

<ol>
<li>Add the file MyScene.sks to the project </li>
<li>Drag the SpriteKit view to the storyboard </li>
<li>Drag the two launchers to <code>MyScene.sks</code> </li>
<li>Set transmitter properties </li>
<li>Drag the action you want to add on each launcher </li>
</ol>
<p>My previous understanding is. </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> node = <span class="type">SKEmitterNode</span>(fileNamed: <span class="string">&quot;Fire&quot;</span>)</span><br><span class="line"><span class="keyword">let</span> scene = <span class="type">SKScene</span>(fileNamed: <span class="string">&quot;MyScene&quot;</span>)</span><br><span class="line">scene?.addChild(node)</span><br><span class="line"><span class="comment">// SKAction(...</span></span><br></pre></td></tr></table></figure>

<p>To me, it is surprising that SpriteKit can have similar development experience as using Storyboard. </p>
<p>When I saw Paul Hegarty ctrl drag the button to code in his class, the main reason I surrendered to iOS Dev was Storyboard. </p>
<p>Excellent! </p>
<p>In addition, I saw a lot of UIDynamic things that I used to set through code. </p>
<p>It is a pleasure to carry out this brief exploration. </p>
<p><img src="https://i.imgur.com/LYmt4PZ.png" alt=""></p>
<p><img src="https://i.imgur.com/eL15HjC.png" alt=""></p>
<p><img src="https://i.imgur.com/PHiz4VU.png" alt=""></p>
<p><img src="https://i.imgur.com/qtYdAsH.png" alt=""></p>
]]></content>
      <tags>
        <tag>Xcode</tag>
        <tag>SpriteKit</tag>
      </tags>
  </entry>
  <entry>
    <title>Swift 4 Snippets</title>
    <url>/en/Swift-4-Snippets/</url>
    <content><![CDATA[<h3 id="ClassName-FileRW-VideoPlayer-VideoPicker-ExcelFilePicker-FileCrypto-dateFormatter-Notification-GradientView-ShowAlertController-LoadingView-AddAnchorConstraints"><a href="#ClassName-FileRW-VideoPlayer-VideoPicker-ExcelFilePicker-FileCrypto-dateFormatter-Notification-GradientView-ShowAlertController-LoadingView-AddAnchorConstraints" class="headerlink" title="ClassName, FileRW, VideoPlayer, VideoPicker, ExcelFilePicker, FileCrypto, dateFormatter, Notification, GradientView, ShowAlertController, LoadingView, AddAnchorConstraints"></a>ClassName, FileRW, VideoPlayer, VideoPicker, ExcelFilePicker, FileCrypto, dateFormatter, Notification, GradientView, ShowAlertController, LoadingView, AddAnchorConstraints</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NSObjectProtocol</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">var</span> className: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">String</span>(describing: <span class="type">Self</span>.<span class="keyword">self</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">FileRW</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">readFile</span><span class="params">(<span class="number">_</span> url: URL?)</span></span> -&gt; <span class="type">Data?</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">saveFile</span><span class="params">(<span class="number">_</span> data: Data, name: String, ext: String)</span></span> -&gt; <span class="type">URL?</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">FileRW</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">readFile</span><span class="params">(<span class="number">_</span> url: URL?)</span></span> -&gt; <span class="type">Data?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> url = url <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">try</span> <span class="type">Data</span>(contentsOf: url)</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;read encryted data err&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">saveFile</span><span class="params">(<span class="number">_</span> data: Data, name: String, ext: String)</span></span> -&gt; <span class="type">URL?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> tempDirectoryURL = <span class="type">NSURL</span>.fileURL(withPath: <span class="type">NSTemporaryDirectory</span>(), isDirectory: <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> targetURL = tempDirectoryURL.appendingPathComponent(<span class="string">&quot;\(name).\(ext)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> data.write(to: targetURL)</span><br><span class="line">            <span class="keyword">return</span> targetURL</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">VideoPlayer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">playVideo</span><span class="params">(url: URL, view: UIView? = <span class="literal">nil</span>, playerViewController: AVPlayerViewController? = <span class="literal">nil</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> player = <span class="type">AVPlayer</span>(url: url)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> view = view &#123;</span><br><span class="line">            <span class="comment">//            let playerLayer = AVPlayerLayer(player: player)</span></span><br><span class="line">            <span class="comment">//            playerLayer.frame = view.bounds</span></span><br><span class="line">            <span class="comment">//            view.layer.addSublayer(playerLayer)</span></span><br><span class="line">            <span class="comment">//            player.play()</span></span><br><span class="line">			<span class="comment">// OR</span></span><br><span class="line">            <span class="keyword">let</span> avpvc = <span class="type">AVPlayerViewController</span>()</span><br><span class="line">            addChild(avpvc)</span><br><span class="line">            view.addOverlay(avpvc.view)</span><br><span class="line">            <span class="comment">//            avpvc.view.frame = view.bounds</span></span><br><span class="line">            <span class="comment">//            view.addSubview(avpvc.view)</span></span><br><span class="line">            avpvc.didMove(toParent: <span class="keyword">self</span>)</span><br><span class="line">            avpvc.player = player</span><br><span class="line">            avpvc.player?.play()</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="keyword">let</span> avpvc = playerViewController &#123;</span><br><span class="line">            avpvc.player = player</span><br><span class="line">            avpvc.player?.play()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> avpvc = <span class="type">AVPlayerViewController</span>()</span><br><span class="line">            avpvc.player = player</span><br><span class="line">            <span class="keyword">self</span>.present(avpvc, animated: <span class="literal">true</span>) &#123;</span><br><span class="line">                avpvc.player?.play()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">VideoPicker</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> imagePickerController: <span class="type">UIImagePickerController</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">openVideoPicker</span><span class="params">()</span></span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateThumbnail</span><span class="params">(<span class="number">_</span> url: URL?)</span></span> -&gt; <span class="type">UIImage?</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">VideoPicker</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">openVideoPicker</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> delegate = <span class="keyword">self</span> <span class="keyword">as</span>? <span class="type">UINavigationControllerDelegate</span> &amp; <span class="type">UIImagePickerControllerDelegate</span> &#123;</span><br><span class="line">            imagePickerController.delegate = delegate</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        imagePickerController.navigationBar.tintColor = systemPinkColor</span><br><span class="line">        imagePickerController.videoQuality = .type640x480</span><br><span class="line">        imagePickerController.sourceType = .savedPhotosAlbum</span><br><span class="line">        imagePickerController.mediaTypes = [<span class="string">&quot;public.movie&quot;</span>]</span><br><span class="line">        imagePickerController.modalPresentationStyle = .overCurrentContext</span><br><span class="line">        show(imagePickerController, sender: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateThumbnail</span><span class="params">(<span class="number">_</span> url: URL?)</span></span> -&gt; <span class="type">UIImage?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> url = url <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> asset = <span class="type">AVURLAsset</span>(url: url, options: <span class="literal">nil</span>)</span><br><span class="line">        <span class="keyword">let</span> imgGenerator = <span class="type">AVAssetImageGenerator</span>(asset: asset)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> cgImage = <span class="keyword">try</span>? imgGenerator.copyCGImage(at: <span class="type">CMTime</span>(seconds: <span class="number">2</span>, preferredTimescale: <span class="number">60</span>) , actualTime: <span class="literal">nil</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">UIImage</span>(cgImage: cgImage)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">FilePicker</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectExcelFile</span><span class="params">()</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">FilePicker</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> excelDocumentTypes: [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&quot;com.microsoft.Excel.xls&quot;</span>, <span class="string">&quot;org.openxmlformats.spreadsheetml.sheet&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectExcelFile</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> dpvc = <span class="type">UIDocumentPickerViewController</span> (documentTypes: excelDocumentTypes, <span class="keyword">in</span>: .<span class="keyword">import</span>)</span><br><span class="line">        dpvc.view.tintColor = systemPinkColor</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> delegate = <span class="keyword">self</span> <span class="keyword">as</span>? <span class="type">UIDocumentPickerDelegate</span> &#123;</span><br><span class="line">            dpvc.delegate = delegate</span><br><span class="line">        &#125;</span><br><span class="line">        present(dpvc, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectedUrl</span><span class="params">(<span class="number">_</span> urls: [URL])</span></span> -&gt; <span class="type">URL?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> url = urls.first, <span class="keyword">let</span> vals = <span class="keyword">try</span>? url.resourceValues(forKeys: [.typeIdentifierKey]), <span class="keyword">let</span> id = vals.typeIdentifier,</span><br><span class="line">            excelDocumentTypes.<span class="built_in">contains</span>(id)</span><br><span class="line">            <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> url</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">FileCrypto</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">encrypt</span><span class="params">(<span class="number">_</span> data: Data, pw: String)</span></span> -&gt; <span class="type">Data</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">decrypt</span><span class="params">(<span class="number">_</span> data: Data, pw: String)</span></span> -&gt; <span class="type">Data?</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> pw = <span class="string">&quot;xxxx-xxxx-xxxx&quot;</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">FileCrypto</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">encrypt</span><span class="params">(<span class="number">_</span> data: Data, pw: String)</span></span> -&gt; <span class="type">Data</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">RNCryptor</span>.encrypt(data: data, withPassword: pw)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">decrypt</span><span class="params">(<span class="number">_</span> data: Data, pw: String)</span></span> -&gt; <span class="type">Data?</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">try</span> <span class="type">RNCryptor</span>.decrypt(data: data, withPassword: pw)</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">TimeInterval</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> yyyymmdd: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> date = <span class="type">Date</span>(timeIntervalSince1970: <span class="keyword">self</span>)</span><br><span class="line">        <span class="keyword">let</span> dateFormatter = <span class="type">DateFormatter</span>()</span><br><span class="line">        <span class="comment">//        dateFormatter.timeStyle = DateFormatter.Style.medium //Set time style</span></span><br><span class="line">        dateFormatter.dateStyle = <span class="type">DateFormatter</span>.<span class="type">Style</span>.medium <span class="comment">//Set date style</span></span><br><span class="line">        <span class="keyword">let</span> localDate = dateFormatter.string(from: date)</span><br><span class="line">        <span class="keyword">return</span> localDate</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data)</span></span> &#123;</span><br><span class="line"><span class="comment">//        self.enableRemoteNotificationFeatures()</span></span><br><span class="line"><span class="comment">//        self.forwardTokenToServer(token: deviceToken)</span></span><br><span class="line">    <span class="keyword">let</span> token = deviceToken.<span class="built_in">map</span> &#123; <span class="type">String</span>(format: <span class="string">&quot;%02.2hhx&quot;</span>, $<span class="number">0</span>) &#125;.joined()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;deviceToken: &quot;</span>, token)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">registerForPushNotifications</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="type">UNUserNotificationCenter</span>.current().requestAuthorization(options: [.alert, .sound, .badge]) &#123;</span><br><span class="line">        (granted, error) <span class="keyword">in</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Permission granted: \(granted)&quot;</span>)</span><br><span class="line">        <span class="comment">// 1. Check if permission granted</span></span><br><span class="line">        <span class="keyword">guard</span> granted <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="comment">// 2. Attempt registration for remote notifications on the main thread</span></span><br><span class="line">        <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">            <span class="type">UIApplication</span>.shared.registerForRemoteNotifications()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> CoreGraphics</span><br><span class="line"></span><br><span class="line"><span class="meta">@IBDesignable</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GradientView</span>: <span class="title">UIView</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@IBInspectable</span> <span class="keyword">var</span> fromColor: <span class="type">UIColor</span> = .clear</span><br><span class="line">    <span class="meta">@IBInspectable</span> <span class="keyword">var</span> toColor: <span class="type">UIColor</span> = .clear &#123;</span><br><span class="line">        <span class="keyword">didSet</span> &#123;</span><br><span class="line">            gradientOfView(colours: [fromColor, toColor])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">layoutSubviews</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.layoutSubviews()</span><br><span class="line"></span><br><span class="line">        gradientOfView(colours: [fromColor, toColor])</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> grad = <span class="type">CAGradientLayer</span>()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">gradientOfView</span><span class="params">(colours: [UIColor])</span></span> &#123;</span><br><span class="line">        grad.removeFromSuperlayer()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> cgColours = [<span class="type">CGColor</span>]()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> colour <span class="keyword">in</span> colours &#123;</span><br><span class="line">            cgColours.append(colour.cgColor)</span><br><span class="line">        &#125;</span><br><span class="line">        grad.frame = bounds</span><br><span class="line">        grad.colors = cgColours</span><br><span class="line">        layer.addSublayer(grad)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">protocol</span> <span class="title">ShowAlertController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">extension</span> <span class="title">ShowAlertController</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">alert</span><span class="params">(<span class="number">_</span> title: String? = <span class="literal">nil</span>, <span class="number">_</span> message: String? = <span class="literal">nil</span>, sender: UIBarButtonItem? = <span class="literal">nil</span>, buttons: [ <span class="params">(title:String, handler: <span class="params">(<span class="params">()</span></span></span></span></span> -&gt; <span class="type">Void</span>)? )]? = <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> alertC = <span class="type">UIAlertController</span>(title: title, message: message, preferredStyle: .alert)</span><br><span class="line">        buttons?.forEach &#123; button <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">let</span> style = (button.handler == <span class="literal">nil</span> ? <span class="type">UIAlertAction</span>.<span class="type">Style</span>.cancel : .<span class="keyword">default</span>)</span><br><span class="line">            alertC.addAction(<span class="type">UIAlertAction</span>(title: button.title, style: style) &#123; <span class="number">_</span> <span class="keyword">in</span></span><br><span class="line">                button.handler?()</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> popoverController = alertC.popoverPresentationController &#123;</span><br><span class="line">            popoverController.barButtonItem = sender</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.present(alertC, animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">toast</span><span class="params">(<span class="number">_</span> message: String, delay: Double = <span class="number">1</span>, sender: UIBarButtonItem? = <span class="literal">nil</span>, completion: <span class="params">(<span class="params">()</span></span></span></span> -&gt; <span class="type">Void</span>)?) &#123;</span><br><span class="line">        <span class="keyword">let</span> alertC = <span class="type">UIAlertController</span>(title: <span class="literal">nil</span>, message: message, preferredStyle: .alert)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> popoverController = alertC.popoverPresentationController &#123;</span><br><span class="line">            popoverController.barButtonItem = sender</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.present(alertC, animated: <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="type">DispatchQueue</span>.main.asyncAfter(deadline: <span class="type">DispatchTime</span>.now() + delay) &#123;</span><br><span class="line">            alertC.dismiss(animated: <span class="literal">true</span>, completion: completion)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">protocol</span> <span class="title">LoadingView</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> progressView: <span class="type">UIProgressView</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> coverView: <span class="type">UIView</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">extension</span> <span class="title">LoadingView</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">startLoading</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> v = coverView</span><br><span class="line"></span><br><span class="line">        v.backgroundColor = .white</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> pv = progressView</span><br><span class="line">        pv.progress = <span class="number">0</span></span><br><span class="line">        v.addConstraints(pv, l: <span class="number">0</span>, r: <span class="number">0</span>, t: navigationController?.navigationBar.bounds.height ?? <span class="number">0</span>, h: <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> aiv = <span class="type">UIActivityIndicatorView</span>(style: .gray)</span><br><span class="line">        aiv.startAnimating()</span><br><span class="line">        v.addConstraints(aiv, cx: <span class="number">0</span>, cy: <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        view.addOverlay(v)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">stopLoading</span><span class="params">()</span></span> &#123;</span><br><span class="line">        coverView.removeFromSuperview()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">extension</span> <span class="title">UIView</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">addOverlay</span><span class="params">(<span class="number">_</span> subView: UIView)</span></span> &#123;</span><br><span class="line">        addConstraints(subView, l: <span class="number">0</span>, r: <span class="number">0</span>, t: <span class="number">0</span>, b: <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">addConstraints</span><span class="params">(<span class="number">_</span> subView: UIView, l:CGFloat? = <span class="literal">nil</span>, r: CGFloat? = <span class="literal">nil</span>, t: CGFloat? = <span class="literal">nil</span>, b:CGFloat? = <span class="literal">nil</span>, h: CGFloat? = <span class="literal">nil</span>, w: CGFloat? = <span class="literal">nil</span>, cx: CGFloat? = <span class="literal">nil</span>, cy: CGFloat? = <span class="literal">nil</span>)</span></span> &#123;</span><br><span class="line">        addSubview(subView)</span><br><span class="line">        subView.translatesAutoresizingMaskIntoConstraints = <span class="literal">false</span></span><br><span class="line"><span class="comment">//        let margins = layoutMarginsGuide</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> l = l &#123;</span><br><span class="line">            subView.leadingAnchor.constraint(equalTo: leadingAnchor, constant: l).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> r = r &#123;</span><br><span class="line">            subView.trailingAnchor.constraint(equalTo: trailingAnchor, constant: r).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> t = t &#123;</span><br><span class="line">            subView.topAnchor.constraint(equalTo: topAnchor, constant: t).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> b = b &#123;</span><br><span class="line">            subView.bottomAnchor.constraint(equalTo: bottomAnchor, constant: b).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> h = h &#123;</span><br><span class="line">            subView.heightAnchor.constraint(equalToConstant: h).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> w = w &#123;</span><br><span class="line">            subView.widthAnchor.constraint(equalToConstant: w).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> cx = cx &#123;</span><br><span class="line">            subView.centerXAnchor.constraint(equalTo: centerXAnchor, constant: cx).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> cy = cy &#123;</span><br><span class="line">            subView.centerYAnchor.constraint(equalTo: centerYAnchor, constant: cy).isActive = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>Autolayout</tag>
      </tags>
  </entry>
  <entry>
    <title>Audio File to Text via SFSpeechRecognizer</title>
    <url>/en/Audio-File-to-Text-via-SFSpeechRecognizer/</url>
    <content><![CDATA[<p>Just like calling an API, it is much easier than I thought (actually) 😄😄😄 </p>
<h3 id="import-Speech"><a href="#import-Speech" class="headerlink" title="import Speech"></a><a href="https://developer.apple.com/documentation/speech/sfspeechrecognizer">import Speech</a></h3><h3 id="Info-plist"><a href="#Info-plist" class="headerlink" title="Info.plist"></a>Info.plist</h3><ul>
<li>Privacy - Microphone Usage Description </li>
<li>Privacy - Speech Recognition Usage Description </li>
</ul>
<h3 id="Authorization"><a href="#Authorization" class="headerlink" title="Authorization"></a>Authorization</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">SFSpeechRecognizer</span>.requestAuthorization &#123; authStatus <span class="keyword">in</span></span><br><span class="line">    <span class="type">OperationQueue</span>.main.addOperation &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">switch</span> authStatus &#123;</span><br><span class="line">        <span class="keyword">case</span> .notDetermined, .denied, .restricted:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;.notDetermined, .denied, .restricted&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> .authorized:</span><br><span class="line">            <span class="keyword">self</span>?.startRecognizeFile()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="SelectAudio"><a href="#SelectAudio" class="headerlink" title="SelectAudio"></a>SelectAudio</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protocol ShareText &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">extension ShareText where Self: UIViewController &#123;</span><br><span class="line">    func shareText(_ title: String, text: String) &#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; set up activity view controller</span><br><span class="line">        let textToShare &#x3D; [text]</span><br><span class="line">        let activityViewController &#x3D; UIActivityViewController(activityItems: textToShare, applicationActivities: nil)</span><br><span class="line">        activityViewController.popoverPresentationController?.sourceView &#x3D; self.view &#x2F;&#x2F; so that iPads won&#39;t crash</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; exclude some activity types from the list (optional)</span><br><span class="line">        activityViewController.excludedActivityTypes &#x3D; [ UIActivity.ActivityType.airDrop, .message, .copyToPasteboard ]</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; present the view controller</span><br><span class="line">        self.present(activityViewController, animated: true, completion: nil)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">SeletctAudio</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">SeletctAudio</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectAudio</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> types: [<span class="type">String</span>] = [<span class="string">&quot;public.movie&quot;</span>, <span class="string">&quot;public.audio&quot;</span>]</span><br><span class="line">        <span class="keyword">let</span> documentPicker = <span class="type">UIDocumentPickerViewController</span>(documentTypes: types, <span class="keyword">in</span>: .<span class="keyword">import</span>)</span><br><span class="line">        documentPicker.delegate = <span class="keyword">self</span> <span class="keyword">as</span>? <span class="type">UIDocumentPickerDelegate</span></span><br><span class="line">        documentPicker.modalPresentationStyle = .formSheet</span><br><span class="line">        <span class="keyword">self</span>.present(documentPicker, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="RecognizeFile"><a href="#RecognizeFile" class="headerlink" title="RecognizeFile"></a>RecognizeFile</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">RecognizeFile</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">RecognizeFile</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">recognizeFile</span><span class="params">(<span class="number">_</span> url: URL, completion: @escaping <span class="params">(Bool, Bool, String)</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">self</span>.divide(url) &#123; urls <span class="keyword">in</span></span><br><span class="line">                <span class="keyword">let</span> s = <span class="type">DispatchSemaphore</span>(value: <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                urls.enumerated().forEach &#123; i, url <span class="keyword">in</span></span><br><span class="line">                    <span class="type">DispatchQueue</span>.global().async &#123;</span><br><span class="line">                        <span class="number">_</span> = s.wait(timeout: <span class="type">DispatchTime</span>.distantFuture)</span><br><span class="line">                        <span class="built_in">print</span>(url)</span><br><span class="line">                        <span class="keyword">self</span>.recognizeUrl(url) &#123; b, str <span class="keyword">in</span></span><br><span class="line">                            completion(b, urls.last == url, str)</span><br><span class="line">                            <span class="keyword">if</span> b &#123;</span><br><span class="line">                                <span class="built_in">print</span>(str)</span><br><span class="line">                                s.signal()</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">recognizeUrl</span><span class="params">(<span class="number">_</span> url: URL, completion: @escaping <span class="params">(Bool, String)</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> myRecognizer = <span class="type">SFSpeechRecognizer</span>(locale: <span class="type">Locale</span>(identifier: <span class="string">&quot;zh_CN&quot;</span>)) <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// A recognizer is not supported for the current locale</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> !myRecognizer.isAvailable &#123;</span><br><span class="line">            <span class="comment">// The recognizer is not available right now</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> request = <span class="type">SFSpeechURLRecognitionRequest</span>(url: url)</span><br><span class="line">        <span class="comment">//        request.shouldReportPartialResults = true</span></span><br><span class="line">        myRecognizer.recognitionTask(with: request) &#123; (result, error) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> result = result <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Recognition failed, so check error for details and handle it</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;err: &quot;</span>, error.debugDescription)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Print the SpeechTester that has been recognized so far</span></span><br><span class="line">            <span class="comment">//            if result.isFinal &#123;</span></span><br><span class="line">            <span class="keyword">let</span> str = result.bestTranscription.formattedString</span><br><span class="line">            <span class="type">OperationQueue</span>.main.addOperation &#123;</span><br><span class="line">                completion(result.isFinal, str)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//            &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">divide</span><span class="params">(<span class="number">_</span> url: URL, completion: @escaping <span class="params">([URL])</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> asset = <span class="type">AVURLAsset</span>(url: url)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> n = <span class="type">Int</span>(<span class="type">CMTimeGetSeconds</span>(asset.duration) / <span class="number">60</span>)</span><br><span class="line">        <span class="keyword">var</span> urls = <span class="type">Array</span>(repeating: <span class="type">URL</span>(string: <span class="string">&quot;&quot;</span>), <span class="built_in">count</span>: n+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> group = <span class="type">DispatchGroup</span>()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>...n &#123;</span><br><span class="line">            group.enter()</span><br><span class="line">            exportAsset(asset, start: i) &#123; url <span class="keyword">in</span></span><br><span class="line">                urls[i] = url</span><br><span class="line">                group.leave()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        group.notify(queue: .main) &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;divide complete&quot;</span>)</span><br><span class="line">            completion(urls.<span class="built_in">compactMap</span>(&#123;$<span class="number">0</span>&#125;))</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">exportAsset</span><span class="params">(<span class="number">_</span> asset: AVAsset, start: Int, completion: @escaping <span class="params">(URL?)</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;\(#function)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> documentsDirectory = <span class="type">FileManager</span>.<span class="keyword">default</span>.urls(<span class="keyword">for</span>: .documentDirectory, <span class="keyword">in</span>: .userDomainMask)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">let</span> tmpFolder = documentsDirectory.appendingPathComponent(<span class="string">&quot;tmp/&quot;</span>)</span><br><span class="line">        <span class="keyword">try</span>? <span class="type">FileManager</span>.<span class="keyword">default</span>.createDirectory(at: tmpFolder, withIntermediateDirectories: <span class="literal">true</span>, attributes: <span class="literal">nil</span>)</span><br><span class="line">        <span class="keyword">let</span> trimmedSoundFileURL = documentsDirectory.appendingPathComponent(<span class="string">&quot;tmp/\(start).m4a&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;saving to \(trimmedSoundFileURL.absoluteString)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="type">FileManager</span>.<span class="keyword">default</span>.fileExists(atPath: trimmedSoundFileURL.path) &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;sound exists, removing \(trimmedSoundFileURL.absoluteString)&quot;</span>)</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">try</span> trimmedSoundFileURL.checkResourceIsReachable() &#123;</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;is reachable&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> <span class="type">FileManager</span>.<span class="keyword">default</span>.removeItem(atPath: trimmedSoundFileURL.path)</span><br><span class="line">            &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;could not remove \(trimmedSoundFileURL)&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(error.localizedDescription)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;creating export session for \(asset)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> exporter = <span class="type">AVAssetExportSession</span>(asset: asset, presetName: <span class="type">AVAssetExportPresetAppleM4A</span>) &#123;</span><br><span class="line">            exporter.outputFileType = <span class="type">AVFileType</span>.m4a</span><br><span class="line">            exporter.outputURL = trimmedSoundFileURL</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> duration = <span class="type">CMTimeGetSeconds</span>(asset.duration)</span><br><span class="line">            <span class="keyword">if</span> duration &lt; <span class="number">5.0</span> &#123;</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;sound is not long enough&quot;</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// e.g. the first 5 seconds</span></span><br><span class="line">            <span class="keyword">let</span> startTime = <span class="type">CMTime</span>(seconds: <span class="type">Double</span>(start*<span class="number">60</span>), preferredTimescale: <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">let</span> stopTime = <span class="type">CMTime</span>(seconds: <span class="type">Double</span>(start+<span class="number">1</span>)*<span class="number">60</span>, preferredTimescale: <span class="number">1</span>)</span><br><span class="line">            exporter.timeRange = <span class="type">CMTimeRangeFromTimeToTime</span>(start: startTime, end: stopTime)</span><br><span class="line"></span><br><span class="line">            <span class="comment">// do it</span></span><br><span class="line">            exporter.exportAsynchronously(completionHandler: &#123;</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;export complete \(exporter.status)&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">switch</span> exporter.status &#123;</span><br><span class="line">                <span class="keyword">case</span>  .failed, .cancelled:</span><br><span class="line">                    completion(<span class="literal">nil</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;export \(String(describing: exporter.error))&quot;</span>)</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    completion(trimmedSoundFileURL)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;export complete&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            completion(<span class="literal">nil</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;cannot create AVAssetExportSession for asset \(asset)&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>SFSpeechRecognizer</tag>
      </tags>
  </entry>
  <entry>
    <title>Feedback</title>
    <url>/en/Feedback/</url>
    <content><![CDATA[<p>We mentioned how to advance in section 24 <a href="https://leihao0.github.io/Feedback/">High-Order Templar Master</a> ten thousand years ago </p>
<p>In fact, in addition to the improvement of magic, Senior has a magical skill </p>
<p>——Feedback </p>
<p>This method first affirm the other party (pengsha)<br>Then euphemistically point out what needs to be strengthened (quedian)<br>Eventually achieve the effect of clearing the opponent’s mana to zero </p>
<a id="more"></a>

<hr>
<p>Looking at the little mage and several senior friends<br>It’s also drag drag drag drag drag drag drag drag drag drag drag drag drag drag drag drag drag drag drag drag drag to drag to the dead line is coming<br>Will do this </p>
<p>It seems that feedback is indeed a high-level skill </p>
<p>It’s a pity that our little mage is and has been in the Junior stage for a long time </p>
<p>Plus the following two reasons: </p>
<ol>
<li>Rubbish spoken </li>
<li>Social Fear </li>
</ol>
<p>Feedback has become an insurmountable obstacle for Little Mage </p>
<hr>
<p>One afternoon the little mage was worrying about consuming coffee crazily<br>Under the effect of caffeine, a whim<br>Although I am weak<br>But it doesn’t mean that Shenlong cannot be summoned at all. </p>
<p>For example, the RNN in alchemy (shenduxuexi) is very suitable for the current situation </p>
<h2 id="Alchemy"><a href="#Alchemy" class="headerlink" title="Alchemy"></a>Alchemy</h2><p>Speaking of alchemy, it was quite mysterious at first<br>Only a few wizards understand the mystery </p>
<p>Little mage without knowing the truth<br>Brushed Andrew Ng’s ML course on Coursera and bought the certificate 📄 to show his innocence<br>Although I have forgotten it all, I still have some concepts </p>
<p>And it’s now 9012<br>It has been simplified to the point where you just need to prepare the materials without thinking </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir feedback</span><br><span class="line">cd feedback</span><br><span class="line">mkdir -p datasets weights outputs</span><br></pre></td></tr></table></figure>

<p>The little mage first searched and found <a href="https://status.net/articles/performance-review-phrases-examples/">phrases examples</a> </p>
<p>Just copy the content to <code>datasets/data.txt</code> </p>
<p>Then filter out positive feedback and negative feedback </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> datasets</span><br><span class="line"></span><br><span class="line">cat data.txt | grep ✓ | sed <span class="string">&#x27;s/✓ //&#x27;</span> &gt; 👍.txt</span><br><span class="line">cat data.txt | grep ✗ | sed <span class="string">&#x27;s/✗ //&#x27;</span> &gt; 👎.txt</span><br></pre></td></tr></table></figure>

<p>After the materials are ready, you can set up the pill furnace </p>
<p>The little mage looked for it, and I feel <a href="https://github.com/minimaxir/textgenrnn">textgenrnn</a> is good and easy to understand </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">pip3 install -I textgenrnn tensorflow</span><br></pre></td></tr></table></figure>

<p>Set up alchemy steps </p>
<p>Open refining </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python3 training.py </span></span><br><span class="line">from textgenrnn import textgenrnn</span><br><span class="line"></span><br><span class="line">textgen = textgenrnn()</span><br><span class="line"></span><br><span class="line">textgen.train_from_file(<span class="string">&#x27;datasets/👍.txt&#x27;</span>, num_epochs=1)</span><br><span class="line">textgen.save(<span class="string">&#x27;weights/👍.hdf5&#x27;</span>)</span><br><span class="line"></span><br><span class="line">textgen.train_from_file(<span class="string">&#x27;datasets/👎.txt&#x27;</span>, num_epochs=1)</span><br><span class="line">textgen.save(<span class="string">&#x27;weights/👎.hdf5&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>Then the CPU of Little Mage’s MBP went crazy, bursting out a joyous firework 🎆 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Instructions for updating:</span><br><span class="line">Use tf.where in 2.0, which has the same broadcast rule as np.where</span><br><span class="line">Epoch 1&#x2F;1</span><br><span class="line">328&#x2F;559 [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt;.............] - ETA: 36s - loss: 1.2788</span><br></pre></td></tr></table></figure>

<p>Load the practiced 🥚 look </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python3 testing.py </span></span><br><span class="line"><span class="keyword">from</span> textgenrnn <span class="keyword">import</span> textgenrnn</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;👍&#x27;</span>)</span><br><span class="line">textgenrnn(<span class="string">&#x27;weights/👍.hdf5&#x27;</span>).generate_samples(prefix=<span class="string">&quot;He&quot;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;👎&#x27;</span>)</span><br><span class="line">textgenrnn(<span class="string">&#x27;weights/👎.hdf5&#x27;</span>).generate_samples(prefix=<span class="string">&quot;He&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>emmmmmmmmmmmm </p>
<p>However, the goose turned out to be very spicy eyes 💔💔💔 </p>
<p><img src="https://i.imgur.com/RT2msrl.gif" alt=""></p>
<hr>
<p>Plan fails </p>
<p>Did not continue the experiment<br>But adding epochs or layers may improve </p>
<p>Repo: <a href="https://github.com/leihao0/feedback">Feedback</a> </p>
<p>but: </p>
<blockquote>
<p>There must be insufficient data </p>
</blockquote>
<p>The little mage categorically said </p>
<p>😠😠😠 </p>
]]></content>
      <tags>
        <tag>LittleMaster</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>GRAB and Apple</title>
    <url>/en/Grab-refer-a-candidate/</url>
    <content><![CDATA[<h2 id="Update-2021"><a href="#Update-2021" class="headerlink" title="Update 2021"></a>Update 2021</h2><p>Has resigned, now you can push the fruit company<br>However, GRAB (Grie Technology) is about IPO.<br>If you feel good, you can let your friends continue to help the internal push. </p>
<a id="more"></a>

<hr>
<p>I have been working for a period of time, let’s talk about it. </p>
<h2 id="Characteristics"><a href="#Characteristics" class="headerlink" title="Characteristics"></a>Characteristics</h2><ul>
<li>Normal place in get off work (no 996 or 007, Beijing office is not) </li>
<li>Month can Remote one or two days (see group) </li>
<li>Multi-cultural (which country is there) </li>
<li>Chinese and English environment (quite a lot of Chinese) </li>
<li>Global Office (can be inside TRANSFER) </li>
<li>18-year fake, 3 days of probe </li>
<li>Other I forgot </li>
</ul>
<p>Overall, a company in the migration. </p>
<h2 id="Recruitment"><a href="#Recruitment" class="headerlink" title="Recruitment"></a>Recruitment</h2><p>Recent Food Team in crazy, there are many HCs<br>I don’t know other positions, Englisheer </p>
<ul>
<li>Preparation </li>
<li>Brush algorithm </li>
<li>Project made under combing </li>
<li>A little attitude </li>
</ul>
<p>The probability of coming in is quite big </p>
<p>Mainland passport directly to Singapore needs EP<br>Company will help, about two months<br>So don’t worry, you can rest assured that the interview is good. </p>
<p>If you feel that Singapore is dead, you can see Beijing.<br>Southern Road, Haidian District </p>
<p>If you hold a non-continent passport, you can also look at the US emperor, in Seattle. </p>
<p>All positions are here:<br><a href="Https://grab.carers/">Https://grab.carers/</a><br>Search your own team and the country<br>Mail 📧CV (remember to send English) to the landlord </p>
<h2 id="Internal-push"><a href="#Internal-push" class="headerlink" title="Internal push"></a>Internal push</h2><p>Need to fill in a detailed form in the internal system<br>It’s not a forward to thrown to HR.<br>So, when I am, I hope the format is as follows: </p>
<p>Mail name: </p>
<blockquote>
<p>V2-Grab-Position-Location<br>如: V2-Grab-Backend Engineer-Singapore </p>
</blockquote>
<p>content of email: </p>
<blockquote>
<p>Country:<br>Given Name:<br>Family Name: </p>
</blockquote>
<blockquote>
<p>Country Phone Code: (China is 86)<br>Phone Number:<br>Email: </p>
</blockquote>
<blockquote>
<p>Jobs Title: </p>
</blockquote>
<p>Optional: </p>
<blockquote>
<p>Comments (How do you recommend him? | His advantage is?) </p>
</blockquote>
<blockquote>
<p>Linkedin Earl:<br>Twitter User Name:<br>Facebook URL:<br>Gogonga + Earl: </p>
</blockquote>
<blockquote>
<p>City:<br>Postal Code: </p>
</blockquote>
<blockquote>
<p>Annex 📎 CV </p>
</blockquote>
<hr>
<h2 id="At-last"><a href="#At-last" class="headerlink" title="At last"></a>At last</h2><p>send to:<br>leihao.sg {AT} gmail {dot} com </p>
<hr>
<p>The landlord knows that you have a lot of you want to ask.<br>And why don’t you stay? </p>
<p>So you can refer to the blog of the landlord<br>Don’t put the landlord as a liar </p>
<p>In addition, the landlord is just a bottom sweep, not HR.<br>So I can’t answer various formula issues<br>Please forgive me </p>
<p>The question can be left, etc. CV has been asking HR, or an interviewer<br>They are professional than the landlord </p>
<p>last of the last<br>If you pass your job, you will thank you for your email. </p>
<p>The main building has social phobia<br>Don’t come to me 233 </p>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Refer</tag>
        <tag>Grab</tag>
        <tag>Apple</tag>
      </tags>
  </entry>
  <entry>
    <title>Uber booking animation</title>
    <url>/en/Uber-Booking-Animation/</url>
    <content><![CDATA[<p>In June of this year, I joined WWDC in San Jose. It was the waiting animation I saw when I met my friends at the Cupertino Library using Uber. </p>
<p>The animation is awesome! </p>
<p>I was curious how they did it, so I did some exploration. </p>
<h2 id="Preview"><a href="#Preview" class="headerlink" title="Preview"></a>Preview</h2><video width="360" autoplay loop muted="true" >
<source type="video/mp4" src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/UberBookingAnimation.mp4">
</video>

<p>Well, the polyline animation is still not smooth enough. Does anyone have a better idea? </p>
<a id="more"></a>

<h2 id="Step-by-step"><a href="#Step-by-step" class="headerlink" title="Step by step"></a>Step by step</h2><h3 id="Rotate-the-map"><a href="#Rotate-the-map" class="headerlink" title="Rotate the map"></a>Rotate the map</h3><p>I chose Map as the default map to demonstrate for the following two reasons: </p>
<ul>
<li>After WWDC19, Simulator is built on the Meta and Core layers of all Apple frameworks included in MapKit, and Metal uses the GPU of the underlying Mac system. </li>
<li>Google Map requires a developer key to access, which means that after forking the repository from GitHub, you cannot run it directly on the emulator </li>
</ul>
<p> Map transactions can be adjusted by embedding in the <code>UIView.animate</code> block </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">UIView</span>.animate(withDuration: <span class="number">1</span>, delay: <span class="number">0</span>, options: .curveEaseInOut, animations: &#123;  [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">self</span>?.mapView.setCamera(<span class="type">MKMapCamera</span>(lookingAtCenter: center, fromDistance: fromDistance, pitch: pitch, heading: <span class="number">0</span>), animated: <span class="literal">true</span>)</span><br><span class="line">&#125;) &#123; b <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">self</span>.pinAnimation()</span><br><span class="line">    <span class="type">UIView</span>.animate(withDuration: <span class="number">180</span>, delay: <span class="number">0</span>, options: [.curveLinear, .autoreverse], animations: &#123;  [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">self</span>?.mapView.setCamera(<span class="type">MKMapCamera</span>(lookingAtCenter: center, fromDistance: fromDistance, pitch: pitch, heading: heading), animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Google Map must use <code>CATransaction</code> </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">CATransaction</span>.begin()</span><br><span class="line"><span class="type">CATransaction</span>.setValue(<span class="type">NSNumber</span>(float: <span class="number">1.0</span>), forKey: kCATransactionAnimationDuration)</span><br><span class="line"><span class="comment">// change the camera, set the zoom, whatever.</span></span><br><span class="line"><span class="type">CATransaction</span>.commit()</span><br></pre></td></tr></table></figure>

<h3 id="Fixed-animation"><a href="#Fixed-animation" class="headerlink" title="Fixed animation"></a>Fixed animation</h3><p>We need two <code>CAShapeLayer</code> to make the animation, one for the circle and the other for the pushpin.<br>Note that the circle disappears after reaching the maximum value, and the pin has an <code>easyIn</code> curve. </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">//   Pin Animation</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">MainViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">setUpLayers</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        circleLayer.lineWidth = <span class="number">1.5</span></span><br><span class="line">        circleLayer.strokeColor = <span class="type">UIColor</span>.white.cgColor</span><br><span class="line">        circleLayer.fillColor = <span class="type">UIColor</span>.clear.cgColor</span><br><span class="line">        circleLayer.path = <span class="type">UIBezierPath</span>(ovalIn: circleView.bounds).cgPath</span><br><span class="line"></span><br><span class="line">        circleLayer.shadowColor = <span class="type">UIColor</span>.white.cgColor</span><br><span class="line"></span><br><span class="line">        pinLayer.fillColor = <span class="type">UIColor</span>.white.cgColor</span><br><span class="line">        pinLayer.path = <span class="type">UIBezierPath</span>(roundedRect: pinView.bounds, cornerRadius: <span class="number">1</span>).cgPath</span><br><span class="line">        pinLayer.opacity = <span class="number">0.9</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">pinAnimation</span><span class="params">()</span></span> &#123;</span><br><span class="line">        setUpLayers()</span><br><span class="line"></span><br><span class="line">        circleView.layer.addSublayer(circleLayer)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.circleView.transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">0.01</span>, y: <span class="number">0.01</span>)</span><br><span class="line">        <span class="keyword">self</span>.circleView.alpha = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="type">UIView</span>.animate(withDuration: <span class="number">2</span>, delay: <span class="number">0</span>, options: [.<span class="keyword">repeat</span>], animations: &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">self</span>?.circleView.transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">1</span>, y: <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">self</span>?.circleView.alpha = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        &#125;, completion: <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        pinView.layer.addSublayer(pinLayer)</span><br><span class="line">        <span class="type">UIView</span>.animate(withDuration: <span class="number">1</span>, delay: <span class="number">0</span>, options: [.curveEaseIn, .<span class="keyword">repeat</span>, .autoreverse], animations: &#123;  [<span class="keyword">weak</span> <span class="keyword">self</span>] <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">self</span>?.pinView.transform = <span class="type">CGAffineTransform</span>(translationX: <span class="number">0</span>, y: -<span class="number">4</span>)</span><br><span class="line">            <span class="keyword">self</span>?.pinView.transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">0.5</span>, y: <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Draw-a-polyline-on-the-map"><a href="#Draw-a-polyline-on-the-map" class="headerlink" title="Draw a polyline on the map"></a>Draw a polyline on the map</h3><p> The map uses <code>MKMapViewDelegate</code> to handle the drawing. </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">mapView</span><span class="params">(<span class="number">_</span> mapView: MKMapView, rendererFor overlay: MKOverlay)</span></span> -&gt; <span class="type">MKOverlayRenderer</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> overlay = overlay <span class="keyword">as</span>? <span class="type">MKPolyline</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> polyline = <span class="type">MKPolylineRenderer</span>(overlay: overlay)</span><br><span class="line">        polyline.strokeColor = .white</span><br><span class="line">        polyline.lineWidth = <span class="number">1.5</span></span><br><span class="line">        <span class="keyword">return</span> polyline</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="type">MKOverlayRenderer</span>(overlay: overlay)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>This is how to add polyline </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> currentSegment = <span class="type">MKPolyline</span>(coordinates: subCoordinates, <span class="built_in">count</span>: subCoordinates.<span class="built_in">count</span>)</span><br><span class="line"><span class="keyword">self</span>.mapView.addOverlay(currentSegment)</span><br></pre></td></tr></table></figure>

<h3 id="Animated-polyline"><a href="#Animated-polyline" class="headerlink" title="Animated polyline"></a>Animated polyline</h3><p>That is the tricky part. </p>
<p>When we see that Uber’s animation is close enough, the polyline will rotate with the map to draw on the map. </p>
<p>What I want to do is continue to add and delete polylines on the map to pretend it is an animation.<br>Likewise, when it appears at the beginning and end of the pushpin, the line has a title and a tail. </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">animate</span><span class="params">(route: [CLLocationCoordinate2D], duration: TimeInterval, completion: <span class="params">(<span class="params">()</span></span></span></span> -&gt; <span class="type">Void</span>)? = <span class="literal">nil</span>) &#123;</span><br><span class="line">    <span class="keyword">guard</span> route.<span class="built_in">count</span> &gt; <span class="number">0</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> currentStep = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> delta = <span class="number">25</span>, opt = <span class="number">3.0</span></span><br><span class="line">    <span class="keyword">let</span> totalSteps = route.<span class="built_in">count</span> + delta</span><br><span class="line">    <span class="keyword">let</span> stepDrawDur = duration / <span class="type">TimeInterval</span>(totalSteps) * opt</span><br><span class="line">    <span class="keyword">var</span> prePolyline: <span class="type">MKPolyline?</span></span><br><span class="line"></span><br><span class="line">    drawingTimer = <span class="type">Timer</span>.scheduledTimer(withTimeInterval: stepDrawDur, repeats: <span class="literal">true</span>) &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] timer <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">defer</span> &#123; completion?() &#125;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> <span class="keyword">self</span> = <span class="keyword">self</span> <span class="keyword">else</span> &#123;</span><br><span class="line">            timer.invalidate()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> previous = prePolyline &#123;</span><br><span class="line">            <span class="keyword">self</span>.mapView.removeOverlay(previous)</span><br><span class="line">            prePolyline = <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> currentStep &gt; totalSteps &#123;</span><br><span class="line">            timer.invalidate()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> start = currentStep-delta &lt; <span class="number">0</span> ? <span class="number">0</span> : currentStep-delta</span><br><span class="line">        <span class="keyword">let</span> end = currentStep &gt; route.<span class="built_in">count</span> ? route.<span class="built_in">count</span> : currentStep</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> subCoordinates = <span class="type">Array</span>(route[start..&lt;end])</span><br><span class="line">        <span class="keyword">let</span> currentSegment = <span class="type">MKPolyline</span>(coordinates: subCoordinates, <span class="built_in">count</span>: subCoordinates.<span class="built_in">count</span>)</span><br><span class="line">        <span class="keyword">self</span>.mapView.addOverlay(currentSegment)</span><br><span class="line"></span><br><span class="line">        prePolyline = currentSegment</span><br><span class="line">        currentStep += <span class="type">Int</span>(opt)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Here is <a href="https://github.com/leihao0/UberBookingAnimation">repository</a>, if you have a better idea, please let me know :) </p>
<h4 id="Updates"><a href="#Updates" class="headerlink" title="Updates"></a>Updates</h4><p>Well, since the screen refresh rate is 60 fps, it should make the total steps/duration ≈ 60 </p>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>MapKit</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use Telegram to reply automatically</title>
    <url>/en/How-to-auto-reply-send-msg-with-telegram/</url>
    <content><![CDATA[<p>As a man, there are many reasons to reply within 59 seconds, otherwise, something bad will happen. </p>
<p>Fortunately, Telegram provides an API. </p>
<ol>
<li>Get your developer token in <a href="https://my.telegram.org/">here</a> instead of bot token </li>
<li>Install telethon <code>pip3</code> </li>
<li>RTFM makes py work </li>
</ol>
<a id="more"></a>

<h2 id="Telethon"><a href="#Telethon" class="headerlink" title="Telethon"></a>Telethon</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install -U telethon --user</span><br></pre></td></tr></table></figure>

<p>On Catalina, the <code>import telethon</code> will be aborted immediately after import without any other useful logs, which prevented me from solving the problem all afternoon </p>
<ul>
<li>I tried to use <code>pyenv</code> to switch the python version, but it didn’t work </li>
<li>Run it on Ubuntu and it works </li>
<li>Finally found here, [Python crashes on macOS 10.15](<a href="https://stackoverflow.com/questions/58272830/python-crashing-on-macos-10-15-beta-19a582a-with-usr-lib-libcrypto-">https://stackoverflow.com/questions/58272830/python-crashing-on-macos-10-15-beta-19a582a-with-usr-lib-libcrypto-</a> dylib), <code>OpenSSL</code> is missing </li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/Cellar/openssl/1.0.2t/lib</span><br><span class="line">sudo cp libssl.1.0.0.dylib libcrypto.1.0.0.dylib /usr/<span class="built_in">local</span>/lib/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/lib</span><br><span class="line">mv libssl.dylib libssl_bak.dylib</span><br><span class="line">mv libcrypto.dylib libcrypto_bak.dylib</span><br><span class="line">sudo ln -s libssl.1.0.0.dylib libssl.dylib</span><br><span class="line">sudo ln -s libcrypto.1.0.0.dylib libcrypto.dylib</span><br></pre></td></tr></table></figure>

<h2 id="Auto-Reply"><a href="#Auto-Reply" class="headerlink" title="Auto Reply"></a>Auto Reply</h2><p><code>reply her. friend</code> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> telethon <span class="keyword">import</span> TelegramClient, events</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use your own values from my.telegram.org </span></span><br><span class="line">api_id = <span class="number">123456</span></span><br><span class="line">api_hash = <span class="string">&#x27;xxxx&#x27;</span></span><br><span class="line">phone = <span class="string">&#x27;123456789&#x27;</span></span><br><span class="line"></span><br><span class="line">client = TelegramClient(<span class="string">&#x27;session&#x27;</span>, api_id, api_hash)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">greetings = [<span class="string">&#x27;ok&#x27;</span>, <span class="string">&#x27;cool&#x27;</span>, <span class="string">&#x27;😂&#x27;</span>, <span class="string">&#x27;em&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@client.on(events.NewMessage)</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">handle_new_message</span>(<span class="params">event</span>):</span></span><br><span class="line"></span><br><span class="line">    from_user = <span class="keyword">await</span> event.client.get_entity(event.from_id)</span><br><span class="line">    <span class="keyword">if</span> from_user.phone == phone:</span><br><span class="line">        print(time.asctime(), <span class="string">&#x27;-&#x27;</span>, event.message)</span><br><span class="line">        <span class="comment"># tested on a real girl, she figured it out at the second reply </span></span><br><span class="line">        <span class="comment"># so randomly choose to reply within 5 - 59 seconds </span></span><br><span class="line">        <span class="keyword">await</span> asyncio.sleep(random.randrange(<span class="number">5</span>, <span class="number">59</span>))</span><br><span class="line">        <span class="keyword">if</span> random.choice([<span class="literal">True</span>, <span class="literal">False</span>]):</span><br><span class="line">            i, s = random.randrange(<span class="number">2</span>, <span class="number">5</span>), random.choice(greetings)</span><br><span class="line">            <span class="comment"># typing 2 - 5 seconds </span></span><br><span class="line">            <span class="keyword">async</span> <span class="keyword">with</span> client.action(phone, <span class="string">&#x27;typing&#x27;</span>):</span><br><span class="line">                <span class="keyword">await</span> asyncio.sleep(i)</span><br><span class="line">                <span class="keyword">await</span> client.send_message(phone, s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(time.asctime(), <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;Auto-replying...&#x27;</span>)</span><br><span class="line">client.start()</span><br><span class="line">client.run_until_disconnected()</span><br><span class="line">print(time.asctime(), <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;Stopped!&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Reservation-message"><a href="#Reservation-message" class="headerlink" title="Reservation message"></a>Reservation message</h2><p><code>spam her. friend</code> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> telethon <span class="keyword">import</span> TelegramClient, events</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">api_id = <span class="number">123456</span></span><br><span class="line">api_hash = <span class="string">&#x27;xxxx&#x27;</span></span><br><span class="line">phone = <span class="string">&#x27;123456789&#x27;</span></span><br><span class="line"></span><br><span class="line">client = TelegramClient(<span class="string">&#x27;session&#x27;</span>, api_id, api_hash)</span><br><span class="line">greetings = [<span class="string">&#x27;Yo!&#x27;</span>, <span class="string">&#x27;Hi&#x27;</span>, <span class="string">&#x27;Hello&#x27;</span>, <span class="string">&#x27;How have you been?&#x27;</span>, <span class="string">&#x27;How are you?&#x27;</span>, <span class="string">&#x27;What\&#x27;s up today?&#x27;</span>, <span class="string">&#x27;How are you doing?&#x27;</span>, <span class="string">&#x27;How\’s it going?&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">asking</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">await</span> client.send_message(phone, s)</span><br><span class="line"></span><br><span class="line">hour = <span class="number">60</span>*<span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">await</span> asking(random.choice(annoyingStrings))</span><br><span class="line">        i = random.randrange(<span class="number">12</span>*hour, <span class="number">24</span>*hour)</span><br><span class="line">        time.sleep(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> client:</span><br><span class="line">    client.loop.run_until_complete(main())</span><br></pre></td></tr></table></figure>

<hr>
<p>In any case, the functionality of the list template is not enough to make the conversation last longer than 1 minute </p>
<p><code>Her.msg -&gt; telethon -&gt; AI bot</code><br><code>Her &lt;- telethon &lt;- bot.msg</code> </p>
<p>May be a good solution 🌚🌚🌚 </p>
]]></content>
      <tags>
        <tag>Tech</tag>
        <tag>Auto</tag>
      </tags>
  </entry>
  <entry>
    <title>Deep Learning Course 2</title>
    <url>/en/Deep-Learning-Course-2/</url>
    <content><![CDATA[<h2 id="Improving-Deep-Neural-Networks-Hyperparameter-tuning-Regularization-and-Optimization"><a href="#Improving-Deep-Neural-Networks-Hyperparameter-tuning-Regularization-and-Optimization" class="headerlink" title="Improving Deep Neural Networks: Hyperparameter tuning, Regularization and Optimization"></a>Improving Deep Neural Networks: Hyperparameter tuning, Regularization and Optimization</h2><h2 id="Week-1"><a href="#Week-1" class="headerlink" title="Week 1"></a>Week 1</h2><h2 id="Week-2"><a href="#Week-2" class="headerlink" title="Week 2"></a>Week 2</h2><h3 id="1-Gradient-Descent"><a href="#1-Gradient-Descent" class="headerlink" title="1 - Gradient Descent"></a>1 - Gradient Descent</h3><p><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="min-width: 30.301ex"><svg style="vertical-align: -0.784ex; min-width: 30.301ex" xmlns="http://www.w3.org/2000/svg" width="100%" height="2.7ex" role="img" focusable="false"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0) scale(0.0181) translate(0, -846.7)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078, 0) translate(-2078, 0)"><g transform="translate(0 846.7) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="4618.6 -846.7 1 1193.3"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0, -96.7)"><g data-mml-node="mtd"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2034.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(3090.6, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5069.9, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(6070.1, 0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mtext" transform="translate(6710.1, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(6960.1, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(7480.1, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -846.7 1 1193.3"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn-1" transform="translate(0, -96.7)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(389, 0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889, 0)"></path></g></g></g></svg></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="min-width: 25.725ex"><svg style="vertical-align: -0.784ex; min-width: 25.725ex" xmlns="http://www.w3.org/2000/svg" width="100%" height="2.7ex" role="img" focusable="false"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0) scale(0.0181) translate(0, -846.7)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078, 0) translate(-2078, 0)"><g transform="translate(0 846.7) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="3607.3 -846.7 1 1193.3"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0, -96.7)"><g data-mml-node="mtd"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="TeXAtom" transform="translate(429, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1360.6, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(2416.4, 0)"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="TeXAtom" transform="translate(429, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3721.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4721.7, 0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mtext" transform="translate(5361.7, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(5611.7, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(6131.7, 0)"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="TeXAtom" transform="translate(429, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -846.7 1 1193.3"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn-2" transform="translate(0, -96.7)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(389, 0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889, 0)"></path></g></g></g></svg></g></g></g></g></svg></mjx-container></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">parameters[<span class="string">"W"</span>+i] = parameters[<span class="string">"W"</span>+i] - learning_rate * grads[<span class="string">'dW'</span>+i]</span><br><span class="line">parameters[<span class="string">"b"</span>+i] = parameters[<span class="string">"b"</span>+i] - learning_rate * grads[<span class="string">'db'</span>+i]</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="2-Mini-Batch-Gradient-descent"><a href="#2-Mini-Batch-Gradient-descent" class="headerlink" title="2 - Mini-Batch Gradient descent"></a>2 - Mini-Batch Gradient descent</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="17.124ex" height="4.106ex" role="img" focusable="false" viewBox="0 -1118 7569 1815"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(444, 0)"><g data-mml-node="mi" transform="translate(2901.5, 676)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1223, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1823, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2168, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(2597, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3126, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3487, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(3920, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(4496, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(4965, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5310, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(5775, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="6441" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(7125, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="38.762ex" height="4.106ex" role="img" focusable="false" viewBox="0 -1118 17132.9 1815"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1100.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(2100.4, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2978.4, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3323.4, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3923.4, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4268.4, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(4697.4, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(5226.4, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(5587.4, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(6020.4, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(6596.4, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(7065.4, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(7410.4, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(7875.4, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(8563.7, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mo" transform="translate(9563.9, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(10007.9, 0)"><g data-mml-node="mi" transform="translate(2901.5, 676)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1223, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1823, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2168, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(2597, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3126, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3487, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(3920, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(4496, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(4965, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5310, 0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(5775, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="6441" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(16688.9, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mini_batch_X = shuffled_X[:, k * mini_batch_size: (k+<span class="number">1</span>) * mini_batch_size]</span><br><span class="line">mini_batch_Y = shuffled_Y[:, k * mini_batch_size: (k+<span class="number">1</span>) * mini_batch_size]</span><br><span class="line"><span class="comment"># ... </span></span><br><span class="line">mini_batch_X = shuffled_X[:, mini_batch_size * num_complete_minibatches]</span><br><span class="line">mini_batch_Y = shuffled_Y[:, mini_batch_size * num_complete_minibatches]</span><br></pre></td></tr></table></figure>

<h3 id="3-Momentum"><a href="#3-Momentum" class="headerlink" title="3 - Momentum"></a>3 - Momentum</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">v[<span class="string">"dW"</span>+i] = np.zeros_like(parameters[<span class="string">'W'</span>+i])</span><br><span class="line">v[<span class="string">"db"</span>+i] = np.zeros_like(parameters[<span class="string">'b'</span>+i])</span><br></pre></td></tr></table></figure>

<p><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="min-width: 69.57ex"><svg style="vertical-align: -0.784ex; min-width: 69.57ex" xmlns="http://www.w3.org/2000/svg" width="100%" height="2.7ex" role="img" focusable="false"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0) scale(0.0181) translate(0, -846.7)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078, 0) translate(-2078, 0)"><g transform="translate(0 846.7) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="13297 -846.7 1 1193.3"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0, -96.7)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2422.9, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mtext" transform="translate(3478.7, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3728.7, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(4157.7, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(4623.7, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(4984.7, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="msub" transform="translate(5513.7, 0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(7881, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(8881.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(9270.3, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(9992.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(10992.7, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(11242.7, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(11671.7, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(12137.7, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(12498.7, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(13027.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(13416.7, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(13936.7, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="msup" transform="translate(15693.8, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(17728.6, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(18784.4, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g><g data-mml-node="mo" transform="translate(20763.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mtext" transform="translate(21763.9, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(22013.9, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(22542.9, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(22840.9, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(23343.9, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(23919.9, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="msub" transform="translate(24448.9, 0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -846.7 1 1193.3"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn-3" transform="translate(0, -96.7)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" transform="translate(389, 0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889, 0)"></path></g></g></g></svg></g></g></g></g></svg></mjx-container><br>$$</p>
<p>v <span>\</span> * {db ^ {[l]}} = \ beta v <span>\</span> * {db ^ {[l]}} + (1 - \ beta) db ^ {[l]}<br>b^{[l]} = b^{[l]} - \alpha v\_{db^{[l]}}<br>\tag{4}<span>$</span>$ </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">v[<span class="string">"dW"</span>+i] = beta * v[<span class="string">"dW"</span>+i] + (<span class="number">1</span> - beta) * grads[<span class="string">'dW'</span>+i]</span><br><span class="line">v[<span class="string">"db"</span>+i] = beta * v[<span class="string">"db"</span>+i] + (<span class="number">1</span> - beta) * grads[<span class="string">'db'</span>+i]</span><br><span class="line"><span class="comment"># update parameters </span></span><br><span class="line">parameters[<span class="string">"W"</span>+i] = parameters[<span class="string">"W"</span>+i] - learning_rate * v[<span class="string">"dW"</span>+i]</span><br><span class="line">parameters[<span class="string">"b"</span>+i] = parameters[<span class="string">"b"</span>+i] - learning_rate * v[<span class="string">"db"</span>+i]</span><br></pre></td></tr></table></figure>

<h3 id="4-Adam"><a href="#4-Adam" class="headerlink" title="4 - Adam"></a>4 - Adam</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">v[<span class="string">"dW"</span>+i] = np.zeros_like(parameters[<span class="string">"W"</span>+i])</span><br><span class="line">v[<span class="string">"db"</span>+i] = np.zeros_like(parameters[<span class="string">"b"</span>+i])</span><br><span class="line">s[<span class="string">"dW"</span>+i] = np.zeros_like(parameters[<span class="string">"W"</span>+i])</span><br><span class="line">s[<span class="string">"db"</span>+i] = np.zeros_like(parameters[<span class="string">"b"</span>+i])</span><br></pre></td></tr></table></figure>

<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.813ex" xmlns="http://www.w3.org/2000/svg" width="30.121ex" height="4.96ex" role="img" focusable="false" viewBox="0 -1391 13313.5 2192.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2055.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3111, 0)"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="mn" transform="translate(566, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msub" transform="translate(4080.5, 0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="TeXAtom" transform="translate(485, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(6080.2, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(7080.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(7469.4, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8191.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(9191.9, 0)"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="mn" transform="translate(566, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(10161.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mfrac" transform="translate(10550.4, 0)"><g data-mml-node="mrow" transform="translate(782, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -779.3)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g><rect width="2523.1" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p>
<p>$$v^{corrected}<em>{dW^{[l]}} = \frac{v</em>{dW^{[l]}}}{1 - (\beta_1)^t}$$</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.813ex" xmlns="http://www.w3.org/2000/svg" width="34.386ex" height="4.96ex" role="img" focusable="false" viewBox="0 -1391 15198.4 2192.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2406.9, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3462.7, 0)"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="mn" transform="translate(566, -150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="msub" transform="translate(4432.2, 0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(469, -225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msup" transform="translate(520, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(6783.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(7783.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(8172.8, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8895, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(9895.3, 0)"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="mn" transform="translate(566, -150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(10864.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11253.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mfrac" transform="translate(11642.8, 0)"><g data-mml-node="mrow" transform="translate(679, 676)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="4A" d="M148 78Q148 16 189 -17T286 -50Q319 -50 348 -33T396 10T426 59T444 101L471 204Q498 306 521 372Q575 532 649 605L659 614H591Q517 613 494 607Q433 591 400 550T360 477Q353 454 325 437T275 419Q256 419 260 435Q280 523 376 597T583 681Q603 683 713 683H830Q839 674 839 671Q839 654 810 634T754 614Q735 614 721 601Q688 571 654 495T600 351T561 209T541 132Q507 29 412 -45T213 -119Q141 -119 94 -77T47 33Q47 55 50 69T58 90T71 103Q105 131 135 131Q152 131 152 120Q152 119 151 114T149 99T148 78Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(220, -779.3)"><g data-mml-node="mi"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1103.2, 289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g><rect width="2523.1" height="60" x="120" y="220"></rect></g><g data-mml-node="msup" transform="translate(14405.9, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p>$$s^{corrected}<em>{dW^{[l]}} = \frac{s</em>{dW^{[l]}}}{1 - (\beta_2)^t}$$</p>
<p>$$W^{[l]} = W^{[l]} - \alpha \frac{v^{corrected}<em>{dW^{[l]}}}{\sqrt{s^{corrected}</em>{dW^{[l]}}} + \varepsilon}$$</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = str(l+<span class="number">1</span>)</span><br><span class="line">v[<span class="string">"dW"</span>+i] = beta1 * v[<span class="string">"dW"</span>+i] + (<span class="number">1</span> - beta1) * grads[<span class="string">'dW'</span>+i]</span><br><span class="line">v[<span class="string">"db"</span>+i] = beta1 * v[<span class="string">"db"</span>+i] + (<span class="number">1</span> - beta1) * grads[<span class="string">'db'</span>+i]</span><br><span class="line"></span><br><span class="line">v_corrected[<span class="string">"dW"</span>+i] = v[<span class="string">"dW"</span>+i] / (<span class="number">1</span> - beta1**t)</span><br><span class="line">v_corrected[<span class="string">"db"</span>+i] = v[<span class="string">"db"</span>+i] / (<span class="number">1</span> - beta1**t)</span><br><span class="line"></span><br><span class="line">s[<span class="string">"dW"</span>+i] = beta2 * s[<span class="string">"dW"</span>+i] + (<span class="number">1</span> - beta2) * (grads[<span class="string">'dW'</span>+i])**<span class="number">2</span></span><br><span class="line">s[<span class="string">"db"</span>+i] = beta2 * s[<span class="string">"db"</span>+i] + (<span class="number">1</span> - beta2) * (grads[<span class="string">'db'</span>+i])**<span class="number">2</span></span><br><span class="line"></span><br><span class="line">s_corrected[<span class="string">"dW"</span>+i] = s[<span class="string">"dW"</span>+i] / (<span class="number">1</span> - beta2**t)</span><br><span class="line">s_corrected[<span class="string">"db"</span>+i] = s[<span class="string">"db"</span>+i] / (<span class="number">1</span> - beta2**t)</span><br><span class="line"></span><br><span class="line">parameters[<span class="string">"W"</span>+i] = parameters[<span class="string">"W"</span>+i] - learning_rate * (v_corrected[<span class="string">"dW"</span>+i] / (np.sqrt(s_corrected[<span class="string">"dW"</span>+i]) + epsilon))</span><br><span class="line">parameters[<span class="string">"b"</span>+i] = parameters[<span class="string">"b"</span>+i] - learning_rate * (v_corrected[<span class="string">"db"</span>+i] / (np.sqrt(s_corrected[<span class="string">"db"</span>+i]) + epsilon))</span><br></pre></td></tr></table></figure>

<h2 id="Week-3"><a href="#Week-3" class="headerlink" title="Week 3"></a>Week 3</h2><h3 id="1-1-Linear-function"><a href="#1-1-Linear-function" class="headerlink" title="1.1 - Linear function"></a>1.1 - Linear function</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X = np.random.randn(<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line">W = np.random.randn(<span class="number">4</span>,<span class="number">3</span>)</span><br><span class="line">b = np.random.randn(<span class="number">4</span>,<span class="number">1</span>)</span><br><span class="line">Y = tf.add(tf.matmul(W, X), b)</span><br><span class="line"></span><br><span class="line">sess = tf.Session()</span><br><span class="line">result = sess.run(Y)</span><br></pre></td></tr></table></figure>

<h3 id="1-2-Computing-the-sigmoid"><a href="#1-2-Computing-the-sigmoid" class="headerlink" title="1.2 - Computing the sigmoid"></a>1.2 - Computing the sigmoid</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = tf.placeholder(tf.float32, name = <span class="string">"x"</span>)</span><br><span class="line">sigmoid = tf.sigmoid(x)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    result = sess.run(sigmoid, feed_dict = {x: z})</span><br></pre></td></tr></table></figure>

<h3 id="1-3-Computing-the-Cost"><a href="#1-3-Computing-the-Cost" class="headerlink" title="1.3 - Computing the Cost"></a>1.3 - Computing the Cost</h3><p>$$ J = - \frac{1}{m}  \sum_{i = 1}^m  \large ( \small y^{(i)} \log a^{ <a href="i">2</a>} + (1-y^{(i)})\log (1-a^{ <a href="i">2</a>} )\large )\small\tag{2}$$</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">z = tf.placeholder(tf.float32, name=<span class="string">'z'</span>)</span><br><span class="line">y = tf.placeholder(tf.float32, name=<span class="string">'y'</span>)</span><br><span class="line"></span><br><span class="line">cost = tf.nn.sigmoid_cross_entropy_with_logits(logits = z,  labels = y)</span><br><span class="line"></span><br><span class="line">sess = tf.Session()</span><br><span class="line">cost = sess.run(cost, feed_dict = {z: logits, y: labels})</span><br><span class="line">sess.close()</span><br></pre></td></tr></table></figure>

<h3 id="1-4-Using-One-Hot-encodings"><a href="#1-4-Using-One-Hot-encodings" class="headerlink" title="1.4 - Using One Hot encodings"></a>1.4 - Using One Hot encodings</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C = tf.constant(C)</span><br><span class="line">one_hot_matrix = tf.one_hot(labels, C, axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">sess = tf.Session()</span><br><span class="line">one_hot = sess.run(one_hot_matrix)</span><br><span class="line">sess.close()</span><br></pre></td></tr></table></figure>

<h3 id="1-5-Initialize-with-zeros-and-ones"><a href="#1-5-Initialize-with-zeros-and-ones" class="headerlink" title="1.5 - Initialize with zeros and ones"></a>1.5 - Initialize with zeros and ones</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ones = tf.ones(shape)</span><br><span class="line"></span><br><span class="line">sess = tf.Session()</span><br><span class="line">ones = sess.run(ones)</span><br><span class="line">sess.close()</span><br></pre></td></tr></table></figure>

<h3 id="2-1-Create-placeholders"><a href="#2-1-Create-placeholders" class="headerlink" title="2.1 - Create placeholders"></a>2.1 - Create placeholders</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X = tf.placeholder(tf.float32, [n_x, <span class="literal">None</span>])</span><br><span class="line">Y = tf.placeholder(tf.float32, [n_y, <span class="literal">None</span>])</span><br></pre></td></tr></table></figure>

<h3 id="2-2-Initializing-the-parameters"><a href="#2-2-Initializing-the-parameters" class="headerlink" title="2.2 - Initializing the parameters"></a>2.2 - Initializing the parameters</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">W1 = tf.get_variable(<span class="string">"W1"</span>, [<span class="number">25</span>,<span class="number">12288</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">1</span>))</span><br><span class="line">b1 = tf.get_variable(<span class="string">"b1"</span>, [<span class="number">25</span>,<span class="number">1</span>], initializer = tf.zeros_initializer())</span><br><span class="line">W2 = tf.get_variable(<span class="string">"W2"</span>, [<span class="number">12</span>,<span class="number">25</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">1</span>))</span><br><span class="line">b2 = tf.get_variable(<span class="string">"b2"</span>, [<span class="number">12</span>,<span class="number">1</span>], initializer = tf.zeros_initializer())</span><br><span class="line">W3 = tf.get_variable(<span class="string">"W3"</span>, [<span class="number">6</span>,<span class="number">12</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">1</span>))</span><br><span class="line">b3 = tf.get_variable(<span class="string">"b3"</span>, [<span class="number">6</span>,<span class="number">1</span>], initializer = tf.zeros_initializer())</span><br></pre></td></tr></table></figure>

<h3 id="2-3-Forward-propagation-in-tensorflow"><a href="#2-3-Forward-propagation-in-tensorflow" class="headerlink" title="2.3 - Forward propagation in tensorflow"></a>2.3 - Forward propagation in tensorflow</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Z1 = tf.matmul(W1, X) + b1</span><br><span class="line">A1 = tf.nn.relu(Z1)</span><br><span class="line">Z2 = tf.matmul(W2, A1) + b2</span><br><span class="line">A2 = tf.nn.relu(Z2)</span><br><span class="line">Z3 = tf.matmul(W3, A2) + b3</span><br></pre></td></tr></table></figure>

<h3 id="2-4-Compute-cost"><a href="#2-4-Compute-cost" class="headerlink" title="2.4 Compute cost"></a>2.4 Compute cost</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cost = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits = logits, labels = labels))</span><br></pre></td></tr></table></figure>

<h3 id="2-5-Backward-propagation-amp-parameter-updates"><a href="#2-5-Backward-propagation-amp-parameter-updates" class="headerlink" title="2.5 - Backward propagation & parameter updates"></a>2.5 - Backward propagation &amp; parameter updates</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X, Y = create_placeholders(n_x, n_y)</span><br><span class="line">parameters = initialize_parameters()</span><br><span class="line">Z3 = forward_propagation(X, parameters)</span><br><span class="line">cost = compute_cost(Z3, Y)</span><br><span class="line">optimizer = tf.train.AdamOptimizer(learning_rate = learning_rate).minimize(cost)</span><br><span class="line"><span class="comment"># ... </span></span><br><span class="line">_ , minibatch_cost = sess.run([optimizer, cost], feed_dict={X: minibatch_X, Y: minibatch_Y})</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Deep Learning Course 4</title>
    <url>/en/Deep-Learning-Course-4/</url>
    <content><![CDATA[<h2 id="Week-1-Convolutional-Neural-Networks"><a href="#Week-1-Convolutional-Neural-Networks" class="headerlink" title="Week 1 - Convolutional Neural Networks"></a>Week 1 - Convolutional Neural Networks</h2><h2 id="Step-by-Step"><a href="#Step-by-Step" class="headerlink" title="Step by Step"></a>Step by Step</h2><h3 id="3-1-Zero-Padding"><a href="#3-1-Zero-Padding" class="headerlink" title="3.1 - Zero-Padding"></a>3.1 - Zero-Padding</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X_pad = np.pad(X, ((<span class="number">0</span>, <span class="number">0</span>), (pad, pad), (pad, pad), (<span class="number">0</span>,<span class="number">0</span>)), mode=<span class="string">'constant'</span>, constant_values = (<span class="number">0</span>,<span class="number">0</span>))</span><br></pre></td></tr></table></figure>

<h3 id="3-2-Single-step-of-convolution"><a href="#3-2-Single-step-of-convolution" class="headerlink" title="3.2 - Single step of convolution"></a>3.2 - Single step of convolution</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">s = a_slice_prev * W</span><br><span class="line">Z = np.sum(s)</span><br><span class="line">Z = Z + np.sum(b)</span><br></pre></td></tr></table></figure>

<h3 id="3-3-Convolutional-Neural-Networks-Forward-pass"><a href="#3-3-Convolutional-Neural-Networks-Forward-pass" class="headerlink" title="3.3 - Convolutional Neural Networks - Forward pass"></a>3.3 - Convolutional Neural Networks - Forward pass</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="32.029ex" height="5.011ex" role="img" focusable="false" viewBox="0 -1518.1 14156.7 2215.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g><g data-mml-node="mo" transform="translate(1555.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2611.5, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(3055.5, 0)"><g data-mml-node="mrow" transform="translate(220, 813.1)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="TeXAtom" transform="translate(831, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2447.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3447.9, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4220.1, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(5220.3, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(5942.6, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(6942.8, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(7445.8, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(7974.8, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mrow" transform="translate(3161.4, -686)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1281, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1626, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2146, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="8694.8" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(11990.3, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g><g data-mml-node="mo" transform="translate(12656.5, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(13656.7, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="32.465ex" height="5.011ex" role="img" focusable="false" viewBox="0 -1518.1 14349.7 2215.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g></g><g data-mml-node="mo" transform="translate(1668.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2724.6, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(3168.6, 0)"><g data-mml-node="mrow" transform="translate(220, 813.1)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(944, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2527.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3527.8, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4300, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(5300.3, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(6022.5, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(7022.7, 0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(7525.7, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(8054.7, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mrow" transform="translate(3201.3, -686)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1281, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1626, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2146, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="8774.7" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(12183.3, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g><g data-mml-node="mo" transform="translate(12849.5, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(13849.7, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="45.029ex" height="1.97ex" role="img" focusable="false" viewBox="0 -705 19903 870.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g></g><g data-mml-node="mo" transform="translate(1465.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mtext" transform="translate(2521, 0)"><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(556, 0)"></path><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1112, 0)"></path><path data-c="62" d="M307 -11Q234 -11 168 55L158 37Q156 34 153 28T147 17T143 10L138 1L118 0H98V298Q98 599 97 603Q94 622 83 628T38 637H20V660Q20 683 22 683L32 684Q42 685 61 686T98 688Q115 689 135 690T165 693T176 694H179V543Q179 391 180 391L183 394Q186 397 192 401T207 411T228 421T254 431T286 439T323 442Q401 442 461 379T522 216Q522 115 458 52T307 -11ZM182 98Q182 97 187 90T196 79T206 67T218 55T233 44T250 35T271 29T295 26Q330 26 363 46T412 113Q424 148 424 212Q424 287 412 323Q385 405 300 405Q270 405 239 390T188 347L182 339V98Z" transform="translate(1945, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(2501, 0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(2945, 0)"></path><path data-c="20" d="" transform="translate(3337, 0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(3587, 0)"></path><path data-c="66" d="M273 0Q255 3 146 3Q43 3 34 0H26V46H42Q70 46 91 49Q99 52 103 60Q104 62 104 224V385H33V431H104V497L105 564L107 574Q126 639 171 668T266 704Q267 704 275 704T289 705Q330 702 351 679T372 627Q372 604 358 590T321 576T284 590T270 627Q270 647 288 667H284Q280 668 273 668Q245 668 223 647T189 592Q183 572 182 497V431H293V385H185V225Q185 63 186 61T189 57T194 54T199 51T206 49T213 48T222 47T231 47T241 46T251 46H282V0H273Z" transform="translate(4087, 0)"></path><path data-c="20" d="" transform="translate(4393, 0)"></path><path data-c="66" d="M273 0Q255 3 146 3Q43 3 34 0H26V46H42Q70 46 91 49Q99 52 103 60Q104 62 104 224V385H33V431H104V497L105 564L107 574Q126 639 171 668T266 704Q267 704 275 704T289 705Q330 702 351 679T372 627Q372 604 358 590T321 576T284 590T270 627Q270 647 288 667H284Q280 668 273 668Q245 668 223 647T189 592Q183 572 182 497V431H293V385H185V225Q185 63 186 61T189 57T194 54T199 51T206 49T213 48T222 47T231 47T241 46T251 46H282V0H273Z" transform="translate(4643, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(4949, 0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(5227, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(5505, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(5894, 0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(6338, 0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(6730, 0)"></path><path data-c="20" d="" transform="translate(7124, 0)"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(7374, 0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(7930, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(8324, 0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(8768, 0)"></path><path data-c="20" d="" transform="translate(9324, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(9574, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(9852, 0)"></path><path data-c="20" d="" transform="translate(10408, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(10658, 0)"></path><path data-c="68" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 124T102 167T103 217T103 272T103 329Q103 366 103 407T103 482T102 542T102 586T102 603Q99 622 88 628T43 637H25V660Q25 683 27 683L37 684Q47 685 66 686T103 688Q120 689 140 690T170 693T181 694H184V367Q244 442 328 442Q451 442 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(11047, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(11603, 0)"></path><path data-c="20" d="" transform="translate(12047, 0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(12297, 0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(12741, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(13241, 0)"></path><path data-c="76" d="M338 431Q344 429 422 429Q479 429 503 431H508V385H497Q439 381 423 345Q421 341 356 172T288 -2Q283 -11 263 -11Q244 -11 239 -2Q99 359 98 364Q93 378 82 381T43 385H19V431H25L33 430Q41 430 53 430T79 430T104 429T122 428Q217 428 232 431H240V385H226Q187 384 184 370Q184 366 235 234L286 102L377 341V349Q377 363 367 372T349 383T335 385H331V431H338Z" transform="translate(13797, 0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(14325, 0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(14825, 0)"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(15103, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(15659, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(16048, 0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(16326, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(16826, 0)"></path></g></g></g></svg></mjx-container></p>
<a id="more"></a>

<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">(m, n_H_prev, n_W_prev, n_C_prev) = A_prev.shape</span><br><span class="line">(f, f, n_C_prev, n_C) = W.shape</span><br><span class="line"></span><br><span class="line">stride = hparameters[<span class="string">"stride"</span>]</span><br><span class="line">pad = hparameters[<span class="string">"pad"</span>]</span><br><span class="line"></span><br><span class="line">n_H = int((n_H_prev - f + <span class="number">2</span> * pad) / stride) + <span class="number">1</span></span><br><span class="line">n_W = int((n_W_prev - f + <span class="number">2</span> * pad) / stride) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">Z = np.zeros((m, n_H, n_W, n_C))</span><br><span class="line"></span><br><span class="line">A_prev_pad = zero_pad(A_prev, pad)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line">    a_prev_pad = A_prev_pad[i]</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(n_H):</span><br><span class="line">        vert_start = h * stride</span><br><span class="line">        vert_end = vert_start + f</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> range(n_W):</span><br><span class="line">            horiz_start = w * stride</span><br><span class="line">            horiz_end = horiz_start + f</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(n_C):</span><br><span class="line">                a_slice_prev = a_prev_pad[vert_start:vert_end, horiz_start:horiz_end, :]</span><br><span class="line"></span><br><span class="line">                weights = W[:, :, :, c]</span><br><span class="line">                biases = b[:, :, :, c]</span><br><span class="line">                Z[i, h, w, c] =  conv_single_step(a_slice_prev, weights, biases)</span><br></pre></td></tr></table></figure>

<h3 id="4-1-Forward-Pooling"><a href="#4-1-Forward-Pooling" class="headerlink" title="4.1 - Forward Pooling"></a>4.1 - Forward Pooling</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="21.855ex" height="5.011ex" role="img" focusable="false" viewBox="0 -1518.1 9659.8 2215.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g><g data-mml-node="mo" transform="translate(1555.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2611.5, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(3055.5, 0)"><g data-mml-node="mrow" transform="translate(220, 813.1)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="TeXAtom" transform="translate(831, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2447.7, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3447.9, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g><g data-mml-node="mrow" transform="translate(913, -686)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1281, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1626, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2146, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="4197.9" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(7493.4, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g><g data-mml-node="mo" transform="translate(8159.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(9159.8, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.577ex" xmlns="http://www.w3.org/2000/svg" width="22.292ex" height="5.011ex" role="img" focusable="false" viewBox="0 -1518.1 9852.9 2215.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g></g><g data-mml-node="mo" transform="translate(1668.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2724.6, 0)"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mfrac" transform="translate(3168.6, 0)"><g data-mml-node="mrow" transform="translate(220, 813.1)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(944, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2527.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3527.8, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g><g data-mml-node="mrow" transform="translate(952.9, -686)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1281, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1626, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2146, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><rect width="4277.8" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(7686.4, 0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g><g data-mml-node="mo" transform="translate(8352.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(9352.9, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.799ex" xmlns="http://www.w3.org/2000/svg" width="10.553ex" height="2.118ex" role="img" focusable="false" viewBox="0 -583 4664.4 936.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g></g><g data-mml-node="mo" transform="translate(1465.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(2521, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(600, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(715, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420, 0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></g></g></g></svg></mjx-container></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(n_H):</span><br><span class="line">        vert_start = h * stride</span><br><span class="line">        vert_end = vert_start + f</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> range(n_W):</span><br><span class="line">            horiz_start = w * stride</span><br><span class="line">            horiz_end = horiz_start + f</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range (n_C):</span><br><span class="line">                a_prev_slice = A_prev[i, vert_start:vert_end, horiz_start:horiz_end, c]</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> mode == <span class="string">"max"</span>:</span><br><span class="line">                    A[i, h, w, c] = np.max(a_prev_slice)</span><br><span class="line">                <span class="keyword">elif</span> mode == <span class="string">"average"</span>:</span><br><span class="line">                    A[i, h, w, c] = np.mean(a_prev_slice)</span><br></pre></td></tr></table></figure>

<h3 id="5-2-Pooling-layer-backward-pass"><a href="#5-2-Pooling-layer-backward-pass" class="headerlink" title="5.2 Pooling layer - backward pass"></a>5.2 Pooling layer - backward pass</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">mask = np.max(x) == x</span><br></pre></td></tr></table></figure>

<h3 id="5-2-2-Average-pooling-backward-pass"><a href="#5-2-2-Average-pooling-backward-pass" class="headerlink" title="5.2.2 - Average pooling - backward pass"></a>5.2.2 - Average pooling - backward pass</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">(n_H, n_W) = shape</span><br><span class="line">average = dz / (n_H * n_W)</span><br><span class="line">a = np.ones(shape) * average</span><br></pre></td></tr></table></figure>

<h3 id="5-2-3-Putting-it-together-Pooling-backward"><a href="#5-2-3-Putting-it-together-Pooling-backward" class="headerlink" title="5.2.3 Putting it together: Pooling backward"></a>5.2.3 Putting it together: Pooling backward</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">(A_prev, hparameters) = cache</span><br><span class="line"></span><br><span class="line">stride = hparameters[<span class="string">"stride"</span>]</span><br><span class="line">f = hparameters[<span class="string">"f"</span>]</span><br><span class="line"></span><br><span class="line">m, n_H_prev, n_W_prev, n_C_prev = A_prev.shape</span><br><span class="line">m, n_H, n_W, n_C = dA.shape</span><br><span class="line"></span><br><span class="line">dA_prev = np.zeros(A_prev.shape)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line"></span><br><span class="line">    a_prev = A_prev[i]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(n_H):</span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> range(n_W):</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(n_C):</span><br><span class="line"></span><br><span class="line">                vert_start = h * stride</span><br><span class="line">                vert_end = vert_start + f</span><br><span class="line">                horiz_start = w * stride</span><br><span class="line">                horiz_end = horiz_start + f</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> mode == <span class="string">"max"</span>:</span><br><span class="line">                    a_prev_slice = a_prev[vert_start:vert_end, horiz_start:horiz_end, c]</span><br><span class="line">                    mask = create_mask_from_window(a_prev_slice)</span><br><span class="line"></span><br><span class="line">                    dA_prev[i, vert_start: vert_end, horiz_start: horiz_end, c] += (dA[i, h, w, c] * mask)</span><br><span class="line">                <span class="keyword">elif</span> mode == <span class="string">"average"</span>:</span><br><span class="line">                    da = dA[i, h, w, c]</span><br><span class="line">                    shape = (f, f)</span><br><span class="line">                    dA_prev[i, vert_start: vert_end, horiz_start: horiz_end, c] += distribute_value(da, shape)</span><br></pre></td></tr></table></figure>

<h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><h3 id="1-1-Create-placeholders"><a href="#1-1-Create-placeholders" class="headerlink" title="1.1 - Create placeholders"></a>1.1 - Create placeholders</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = tf.placeholder(tf.float32, shape=[<span class="literal">None</span>, n_H0, n_W0, n_C0])</span><br><span class="line">Y =  tf.placeholder(tf.float32, shape=[<span class="literal">None</span>, n_y])</span><br></pre></td></tr></table></figure>

<h3 id="1-2-Initialize-parameters"><a href="#1-2-Initialize-parameters" class="headerlink" title="1.2 - Initialize parameters"></a>1.2 - Initialize parameters</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">W1 = tf.get_variable(<span class="string">"W1"</span>, [<span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">0</span>))</span><br><span class="line">W2 = tf.get_variable(<span class="string">"W2"</span>, [<span class="number">2</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">16</span>], initializer = tf.contrib.layers.xavier_initializer(seed = <span class="number">0</span>))</span><br></pre></td></tr></table></figure>

<h3 id="1-3-Forward-propagation"><a href="#1-3-Forward-propagation" class="headerlink" title="1.3 - Forward propagation"></a>1.3 - Forward propagation</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">Z1 = tf.nn.conv2d(X, W1, strides = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>], padding = <span class="string">'SAME'</span>)</span><br><span class="line">A1 = tf.nn.relu(Z1)</span><br><span class="line">P1 = tf.nn.max_pool(A1, ksize = [<span class="number">1</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">1</span>], strides = [<span class="number">1</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">1</span>], padding = <span class="string">'SAME'</span>)</span><br><span class="line">Z2 = tf.nn.conv2d(P1, W2, strides = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>], padding = <span class="string">'SAME'</span>)</span><br><span class="line">A2 = tf.nn.relu(Z2)</span><br><span class="line">P2 = tf.nn.max_pool(A2, ksize = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>], strides = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>], padding = <span class="string">'SAME'</span>)</span><br><span class="line">F = tf.contrib.layers.flatten(P2)</span><br><span class="line">Z3 = tf.contrib.layers.fully_connected(F, <span class="number">6</span>, activation_fn=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>

<h3 id="1-4-Compute-cost"><a href="#1-4-Compute-cost" class="headerlink" title="1.4 - Compute cost"></a>1.4 - Compute cost</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">cost = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits = Z3, labels = Y))</span><br></pre></td></tr></table></figure>

<h3 id="1-5-Model"><a href="#1-5-Model" class="headerlink" title="1.5 Model"></a>1.5 Model</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X, Y = create_placeholders(n_H0, n_W0, n_C0, n_y)</span><br><span class="line">parameters = initialize_parameters()</span><br><span class="line">Z3 = forward_propagation(X, parameters)</span><br><span class="line">cost = compute_cost(Z3, Y)</span><br><span class="line">optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(cost)</span><br><span class="line"><span class="comment">### ... </span></span><br><span class="line">    _ , temp_cost = sess.run([optimizer, cost], feed_dict={X: minibatch_X, Y: minibatch_Y})</span><br></pre></td></tr></table></figure>

<h2 id="Week-2-Residual-Networks"><a href="#Week-2-Residual-Networks" class="headerlink" title="Week 2 - Residual Networks"></a>Week 2 - Residual Networks</h2><h3 id="2-1-The-identity-block"><a href="#2-1-The-identity-block" class="headerlink" title="2.1 - The identity block"></a>2.1 - The identity block</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = Conv2D(filters = F2, kernel_size = (f, f), strides = (<span class="number">1</span>,<span class="number">1</span>), padding = <span class="string">'same'</span>, name = conv_name_base + <span class="string">'2b'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X)</span><br><span class="line">X = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'2b'</span>)(X)</span><br><span class="line">X = Activation(<span class="string">'relu'</span>)(X)</span><br><span class="line"></span><br><span class="line">X = Conv2D(filters = F3, kernel_size = (<span class="number">1</span>, <span class="number">1</span>), strides = (<span class="number">1</span>,<span class="number">1</span>), padding = <span class="string">'valid'</span>, name = conv_name_base + <span class="string">'2c'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X)</span><br><span class="line">X = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'2c'</span>)(X)</span><br><span class="line"></span><br><span class="line">X = layers.Add()([X, X_shortcut])</span><br><span class="line">X = Activation(<span class="string">'relu'</span>)(X)</span><br></pre></td></tr></table></figure>

<h3 id="2-2-The-convolutional-block"><a href="#2-2-The-convolutional-block" class="headerlink" title="2.2 - The convolutional block"></a>2.2 - The convolutional block</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = Conv2D(F2, (f, f), strides = (<span class="number">1</span>,<span class="number">1</span>), padding = <span class="string">'same'</span>, name = conv_name_base + <span class="string">'2b'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X)</span><br><span class="line">X = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'2b'</span>)(X)</span><br><span class="line">X = Activation(<span class="string">'relu'</span>)(X)</span><br><span class="line"></span><br><span class="line">X = Conv2D(F3, (<span class="number">1</span>, <span class="number">1</span>), strides = (<span class="number">1</span>,<span class="number">1</span>), name = conv_name_base + <span class="string">'2c'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X)</span><br><span class="line">X = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'2c'</span>)(X)</span><br><span class="line"></span><br><span class="line">X_shortcut = Conv2D(F3, (<span class="number">1</span>, <span class="number">1</span>), strides = (s,s), name = conv_name_base + <span class="string">'1'</span>, kernel_initializer = glorot_uniform(seed=<span class="number">0</span>))(X_shortcut)</span><br><span class="line">X_shortcut = BatchNormalization(axis = <span class="number">3</span>, name = bn_name_base + <span class="string">'1'</span>)(X_shortcut)</span><br><span class="line"></span><br><span class="line">X = layers.Add()([X, X_shortcut])</span><br><span class="line">X = Activation(<span class="string">'relu'</span>)(X)</span><br></pre></td></tr></table></figure>

<h3 id="3-Building-your-first-ResNet-model-50-layers"><a href="#3-Building-your-first-ResNet-model-50-layers" class="headerlink" title="3 - Building your first ResNet model (50 layers)"></a>3 - Building your first ResNet model (50 layers)</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">X = convolutional_block(X, f = <span class="number">3</span>, filters = [<span class="number">128</span>, <span class="number">128</span>, <span class="number">512</span>], stage = <span class="number">3</span>, block=<span class="string">'a'</span>, s = <span class="number">2</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">128</span>, <span class="number">128</span>, <span class="number">512</span>], stage=<span class="number">3</span>, block=<span class="string">'b'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">128</span>, <span class="number">128</span>, <span class="number">512</span>], stage=<span class="number">3</span>, block=<span class="string">'c'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">128</span>, <span class="number">128</span>, <span class="number">512</span>], stage=<span class="number">3</span>, block=<span class="string">'d'</span>)</span><br><span class="line"></span><br><span class="line">X = convolutional_block(X, f = <span class="number">3</span>, filters = [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage = <span class="number">4</span>, block=<span class="string">'a'</span>, s = <span class="number">2</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'b'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'c'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'d'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'e'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">256</span>, <span class="number">256</span>, <span class="number">1024</span>], stage=<span class="number">4</span>, block=<span class="string">'f'</span>)</span><br><span class="line"></span><br><span class="line">X = convolutional_block(X, f = <span class="number">3</span>, filters = [<span class="number">512</span>, <span class="number">512</span>, <span class="number">2048</span>], stage = <span class="number">5</span>, block=<span class="string">'a'</span>, s = <span class="number">2</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">512</span>, <span class="number">512</span>, <span class="number">2048</span>], stage=<span class="number">5</span>, block=<span class="string">'b'</span>)</span><br><span class="line">X = identity_block(X, <span class="number">3</span>, [<span class="number">512</span>, <span class="number">512</span>, <span class="number">2048</span>], stage=<span class="number">5</span>, block=<span class="string">'c'</span>)</span><br><span class="line"></span><br><span class="line">X = AveragePooling2D((<span class="number">2</span>,<span class="number">2</span>), name=<span class="string">'avg_pool'</span>)(X)</span><br></pre></td></tr></table></figure>

<h2 id="Week-3-Autonomous-driving-Car-detection"><a href="#Week-3-Autonomous-driving-Car-detection" class="headerlink" title="Week 3 - Autonomous driving - Car detection"></a>Week 3 - Autonomous driving - Car detection</h2><h3 id="2-1-Model-details"><a href="#2-1-Model-details" class="headerlink" title="2.1 - Model details"></a>2.1 - Model details</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">box_scores = np.multiply(box_confidence, box_class_probs)</span><br><span class="line"></span><br><span class="line">box_classes = K.argmax(box_scores, axis=<span class="number">-1</span>)</span><br><span class="line">box_class_scores = K.max(box_scores, axis=<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">filtering_mask = K.greater_equal(box_class_scores, threshold)</span><br><span class="line"></span><br><span class="line">scores = tf.boolean_mask(box_class_scores, filtering_mask)</span><br><span class="line">boxes = tf.boolean_mask(boxes, filtering_mask)</span><br><span class="line">classes = tf.boolean_mask(box_classes, filtering_mask)</span><br></pre></td></tr></table></figure>

<h3 id="2-3-Non-max-suppression"><a href="#2-3-Non-max-suppression" class="headerlink" title="2.3 - Non-max suppression"></a>2.3 - Non-max suppression</h3><h4 id="virus"><a href="#virus" class="headerlink" title="virus"></a>virus</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">xi1 = max(box1_x1, box2_x1)</span><br><span class="line">yi1 = max(box1_y1, box2_y1)</span><br><span class="line">xi2 = min(box1_x2, box2_x2)</span><br><span class="line">yi2 = min(box1_y2, box2_y2)</span><br><span class="line">inter_width = xi2 - xi1</span><br><span class="line">inter_height = yi2 - yi1</span><br><span class="line">inter_area = max(inter_width, <span class="number">0</span>) * max(inter_height, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">box1_area = (box1_y2 - box1_y1) * (box1_x2 - box1_x1)</span><br><span class="line">box2_area = (box2_y2 - box2_y1) * (box2_x2 - box2_x1)</span><br><span class="line">union_area = (box1_area + box2_area) - inter_area</span><br><span class="line"></span><br><span class="line">iou = inter_area / union_area</span><br></pre></td></tr></table></figure>

<h4 id="yolo-non-max-suppression"><a href="#yolo-non-max-suppression" class="headerlink" title="yolo_non_max_suppression"></a>yolo_non_max_suppression</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">nms_indices = tf.image.non_max_suppression(boxes, scores, max_boxes_tensor, iou_threshold=iou_threshold)</span><br><span class="line"></span><br><span class="line">scores = K.gather(scores, nms_indices)</span><br><span class="line">boxes = K.gather(boxes, nms_indices)</span><br><span class="line">classes = K.gather(classes, nms_indices)</span><br></pre></td></tr></table></figure>

<h3 id="2-4-Wrapping-up-the-filtering"><a href="#2-4-Wrapping-up-the-filtering" class="headerlink" title="2.4 Wrapping up the filtering"></a>2.4 Wrapping up the filtering</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">box_confidence, box_xy, box_wh, box_class_probs = yolo_outputs</span><br><span class="line"></span><br><span class="line">boxes = yolo_boxes_to_corners(box_xy, box_wh)</span><br><span class="line"></span><br><span class="line">scores, boxes, classes = yolo_filter_boxes(box_confidence, boxes, box_class_probs, threshold = score_threshold)</span><br><span class="line"></span><br><span class="line">boxes = scale_boxes(boxes, image_shape)</span><br><span class="line"></span><br><span class="line">scores, boxes, classes = yolo_non_max_suppression(scores, boxes, classes, max_boxes = max_boxes, iou_threshold = iou_threshold)</span><br></pre></td></tr></table></figure>

<h3 id="3-5-Run-the-graph-on-an-image"><a href="#3-5-Run-the-graph-on-an-image" class="headerlink" title="3.5 - Run the graph on an image"></a>3.5 - Run the graph on an image</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">out_scores, out_boxes, out_classes = sess.run([scores, boxes, classes], feed_dict={yolo_model.input: image_data, K.learning_phase(): <span class="number">0</span>})</span><br></pre></td></tr></table></figure>

<h2 id="Week-4"><a href="#Week-4" class="headerlink" title="Week 4"></a>Week 4</h2><h3 id="Deep-Learning-amp-Art-Neural-Style-Transfer"><a href="#Deep-Learning-amp-Art-Neural-Style-Transfer" class="headerlink" title="Deep Learning & Art: Neural Style Transfer"></a>Deep Learning &amp; Art: Neural Style Transfer</h3><h4 id="3-1-Computing-the-content-cost"><a href="#3-1-Computing-the-content-cost" class="headerlink" title="3.1 - Computing the content cost"></a>3.1 - Computing the content cost</h4><p><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="min-width: 64.612ex"><svg style="vertical-align: -2.328ex; min-width: 64.612ex" xmlns="http://www.w3.org/2000/svg" width="100%" height="5.786ex" role="img" focusable="false"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0) scale(0.0181) translate(0, -1528.8)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078, 0) translate(-2078, 0)"><g transform="translate(0 1528.8) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="12201.3 -1528.8 1 2557.5"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0, 186.8)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="TeXAtom" transform="translate(555, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(918, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1518, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(1879, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2345, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2945, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2942.7, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3331.7, 0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(4091.7, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4536.4, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(5322.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5989.1, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(7044.9, 0)"><g data-mml-node="mn" transform="translate(3981.8, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(722.2, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msub" transform="translate(1722.4, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g><g data-mml-node="mo" transform="translate(3222.6, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msub" transform="translate(4222.8, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g></g><g data-mml-node="mo" transform="translate(5836.1, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msub" transform="translate(6836.3, 0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600, -150) scale(0.707)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g></g></g><rect width="8223.7" height="60" x="120" y="220"></rect></g><g data-mml-node="munder" transform="translate(15675.3, 0)"><g data-mml-node="mo" transform="translate(764, 0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mtext"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(500, 0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(778, 0)"></path><path data-c="20" d="" transform="translate(1056, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1306, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1750, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(2306, 0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(2695, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(3087, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(3365, 0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(3809, 0)"></path></g></g></g><g data-mml-node="mo" transform="translate(18647.2, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(19036.2, 0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(529, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1149, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(20925, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(21925.2, 0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(529, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1175, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(23610.1, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -1528.8 1 2557.5"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn-1" transform="translate(0, 186.8)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(389, 0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889, 0)"></path></g></g></g></svg></g></g></g></g></svg></mjx-container></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a_C_unrolled = tf.transpose(a_C)</span><br><span class="line">a_G_unrolled = tf.transpose(a_G)</span><br><span class="line"></span><br><span class="line">J_content = (<span class="number">1</span>/ (<span class="number">4</span>* n_H * n_W * n_C)) * tf.reduce_sum(tf.pow((a_G_unrolled - a_C_unrolled), <span class="number">2</span>))</span><br></pre></td></tr></table></figure>

<h4 id="3-2-1-Style-matrix"><a href="#3-2-1-Style-matrix" class="headerlink" title="3.2.1 - Style matrix"></a>3.2.1 - Style matrix</h4><p>$$\mathbf{G}<em>{gram} = \mathbf{A}</em>{unrolled} \mathbf{A}_{unrolled}^T$$</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">GA = tf.matmul(A, tf.transpose(A))</span><br></pre></td></tr></table></figure>

<h4 id="3-2-2-Style-cost"><a href="#3-2-2-Style-cost" class="headerlink" title="3.2.2 - Style cost"></a>3.2.2 - Style cost</h4><p>$$J_{style}^{[l]}(S,G) = \frac{1}{4 \times {n_C}^2 \times (n_H \times n_W)^2} \sum <em>{i=1}^{n_C}\sum</em>{j=1}^{n_C}(G^{(S)}<em>{(gram)i,j} - G^{(G)}</em>{(gram)i,j})^2\tag{2} $$</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">m, n_H, n_W, n_C = a_G.get_shape().as_list()</span><br><span class="line"></span><br><span class="line">a_S = tf.transpose(tf.reshape(a_S, [n_H*n_W, n_C]))</span><br><span class="line">a_G = tf.transpose(tf.reshape(a_G, [n_H*n_W, n_C]))</span><br><span class="line"></span><br><span class="line">GS = gram_matrix(a_S)</span><br><span class="line">GG = gram_matrix(a_G)</span><br><span class="line"></span><br><span class="line">J_style_layer = <span class="number">1.</span>/(<span class="number">4</span> * n_C**<span class="number">2</span> * (n_H*n_W)**<span class="number">2</span>) * tf.reduce_sum(tf.pow((GS - GG), <span class="number">2</span>))</span><br></pre></td></tr></table></figure>

<h4 id="3-2-3-Style-Weights"><a href="#3-2-3-Style-Weights" class="headerlink" title="3.2.3 Style Weights"></a>3.2.3 Style Weights</h4><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.667ex" xmlns="http://www.w3.org/2000/svg" width="37.11ex" height="2.364ex" role="img" focusable="false" viewBox="0 -750 16402.6 1045"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1808, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2474.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3530.6, 0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="msub" transform="translate(4170.6, 0)"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="TeXAtom" transform="translate(555, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(918, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1518, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(1879, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2345, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2945, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7113.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(7502.3, 0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(8262.3, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(8706.9, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(9492.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10104.1, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(11104.4, 0)"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="msub" transform="translate(11670.4, 0)"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="TeXAtom" transform="translate(555, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(830, 0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1320, 0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1618, 0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g><g data-mml-node="mo" transform="translate(13749, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(14138, 0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(14783, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(15227.6, 0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(16013.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">J = alpha * J_content + beta * J_style</span><br></pre></td></tr></table></figure>

<h3 id="Face-Recognition"><a href="#Face-Recognition" class="headerlink" title="Face Recognition"></a>Face Recognition</h3><h4 id="1-2-The-Triplet-Loss"><a href="#1-2-The-Triplet-Loss" class="headerlink" title="1.2 - The Triplet Loss"></a>1.2 - The Triplet Loss</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">pos_dist = tf.reduce_sum(tf.square(tf.subtract(anchor, positive)), axis=<span class="literal">None</span>)</span><br><span class="line">neg_dist = tf.reduce_sum(tf.square(tf.subtract(anchor, negative)), axis=<span class="literal">None</span>)</span><br><span class="line">basic_loss = tf.add(tf.subtract(pos_dist, neg_dist), alpha)</span><br><span class="line"></span><br><span class="line">loss = tf.reduce_sum(tf.maximum(basic_loss, <span class="number">0</span>))</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Deep Learning Course 5</title>
    <url>/en/Deep-Learning-Course-5/</url>
    <content><![CDATA[<p>Wow, I finished them before the deadline. </p>
<p>😃😃😃 </p>
<p><a href="https://www.coursera.org/account/accomplishments/specialization/8BQ77WBNDVQH">Deep Learning Specialization Certificate</a> </p>
<h2 id="Week-1"><a href="#Week-1" class="headerlink" title="Week 1"></a>Week 1</h2><h3 id="Building-a-recurrent-neural-network-step-by-step"><a href="#Building-a-recurrent-neural-network-step-by-step" class="headerlink" title="Building a recurrent neural network - step by step"></a>Building a recurrent neural network - step by step</h3><h3 id="1-1-RNN-cell"><a href="#1-1-RNN-cell" class="headerlink" title="1.1 - RNN cell"></a>1.1 - RNN cell</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a_next = np.tanh(np.matmul(Waa, a_prev) + np.matmul(Wax, xt) + ba)</span><br><span class="line"></span><br><span class="line">yt_pred = softmax(np.matmul(Wya, a_next) + by)</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="1-2-RNN-forward-pass"><a href="#1-2-RNN-forward-pass" class="headerlink" title="1.2 - RNN forward pass"></a>1.2 - RNN forward pass</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">xt = x[:,:,t]</span><br><span class="line">a_next, yt_pred, cache = rnn_cell_forward(xt, a_next, parameters)</span><br><span class="line"></span><br><span class="line">a[:,:,t] = a_next</span><br><span class="line"></span><br><span class="line">y_pred[:,:,t] = yt_pred</span><br><span class="line"></span><br><span class="line">caches.append(cache)</span><br></pre></td></tr></table></figure>

<h3 id="2-Long-Short-Term-Memory-LSTM-network"><a href="#2-Long-Short-Term-Memory-LSTM-network" class="headerlink" title="2 - Long Short-Term Memory (LSTM) network"></a>2 - Long Short-Term Memory (LSTM) network</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">concat = np.concatenate((a_prev, xt), axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">ft = sigmoid(np.matmul(Wf, concat) + bf)        <span class="comment"># forget gate</span></span><br><span class="line">it = sigmoid(np.matmul(Wi, concat) + bi)        <span class="comment"># update gate</span></span><br><span class="line">cct = np.tanh(np.matmul(Wc, concat) + bc)       <span class="comment"># candidate value</span></span><br><span class="line">c_next = ft*c_prev + it*cct    <span class="comment"># cell state</span></span><br><span class="line">ot = sigmoid(np.matmul(Wo, concat) + bo)        <span class="comment"># output gate</span></span><br><span class="line">a_next = ot * np.tanh(c_next)    <span class="comment"># hidden state</span></span><br><span class="line"></span><br><span class="line">yt_pred = softmax(np.matmul(Wy, a_next) + by)</span><br></pre></td></tr></table></figure>

<h3 id="2-2-Forward-pass-for-LSTM"><a href="#2-2-Forward-pass-for-LSTM" class="headerlink" title="2.2 - Forward pass for LSTM"></a>2.2 - Forward pass for LSTM</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">Wy = parameters[<span class="string">'Wy'</span>]</span><br><span class="line">n_x, m, T_x = x.shape</span><br><span class="line">n_y, n_a = parameters[<span class="string">'Wy'</span>].shape</span><br><span class="line"></span><br><span class="line">a = np.zeros((n_a, m, T_x))</span><br><span class="line">c = np.zeros((n_a, m, T_x))</span><br><span class="line">y = np.zeros((n_y, m, T_x))</span><br><span class="line"></span><br><span class="line">a_next = a0</span><br><span class="line">c_next = c[:,:,<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> range(T_x):</span><br><span class="line">    xt = x[:,:,t]</span><br><span class="line">    a_next, c_next, yt, cache = lstm_cell_forward(xt, a_next, c_next, parameters)</span><br><span class="line">    a[:,:,t] = a_next</span><br><span class="line">    c[:,:,t]  = c_next</span><br><span class="line">    y[:,:,t] = yt</span><br><span class="line">    caches.append(cache)</span><br></pre></td></tr></table></figure>

<p>… </p>
<p>Too much code and didn’t have time to record them as I have got the Certificate. </p>
]]></content>
      <tags>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Arrays 101</title>
    <url>/en/LeetCode-Arrays-101/</url>
    <content><![CDATA[<h2 id="Max-Consecutive-Ones"><a href="#Max-Consecutive-Ones" class="headerlink" title="Max Consecutive Ones"></a>Max Consecutive Ones</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMaxConsecutiveOnes</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">split</span>(separator: <span class="number">0</span>).<span class="built_in">map</span> &#123;$<span class="number">0</span>.<span class="built_in">count</span>&#125;.<span class="built_in">max</span>() ?? <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="Find-Numbers-with-Even-Number-of-Digits"><a href="#Find-Numbers-with-Even-Number-of-Digits" class="headerlink" title="Find Numbers with Even Number of Digits"></a>Find Numbers with Even Number of Digits</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findNumbers</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">filter</span>(&#123;<span class="type">String</span>($<span class="number">0</span>).<span class="built_in">count</span> &amp; <span class="number">1</span> == <span class="number">0</span> &#125;).<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Squares-of-a-Sorted-Array"><a href="#Squares-of-a-Sorted-Array" class="headerlink" title="Squares of a Sorted Array"></a>Squares of a Sorted Array</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortedSquares</span><span class="params">(<span class="number">_</span> A: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>, ans = <span class="type">A</span></span><br><span class="line">        <span class="keyword">while</span> j &lt; <span class="type">A</span>.<span class="built_in">count</span>, <span class="type">A</span>[j] &lt; <span class="number">0</span> &#123;</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        i = j - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span>, j &lt; <span class="type">A</span>.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> (ai, aj) = (<span class="type">A</span>[i]*<span class="type">A</span>[i], <span class="type">A</span>[j]*<span class="type">A</span>[j])</span><br><span class="line">            ai &lt; aj ? (ans[k] = ai, i -= <span class="number">1</span>) : (ans[k] = aj, j += <span class="number">1</span>)</span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> i &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            ans[k...] = <span class="type">A</span>[...i].reversed().<span class="built_in">map</span> &#123;$<span class="number">0</span>*$<span class="number">0</span>&#125;.suffix(from: <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> j &lt; <span class="type">A</span>.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans[k...] = <span class="type">A</span>[k...].<span class="built_in">map</span> &#123; $<span class="number">0</span>*$<span class="number">0</span> &#125;.suffix(from: <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Duplicate-Zeros"><a href="#Duplicate-Zeros" class="headerlink" title="Duplicate Zeros"></a>Duplicate Zeros</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">duplicateZeros</span><span class="params">(<span class="number">_</span> arr: <span class="keyword">inout</span> [Int])</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> na = <span class="type">Array</span>(repeating: <span class="number">0</span>, <span class="built_in">count</span>: arr.<span class="built_in">count</span>), i = <span class="number">0</span>, j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> j &lt; na.<span class="built_in">count</span> &#123;</span><br><span class="line">            na[j] = arr[i]</span><br><span class="line">            <span class="keyword">if</span> arr[i] == <span class="number">0</span>, j &lt; na.<span class="built_in">count</span>-<span class="number">1</span> &#123; j += <span class="number">1</span>; na[j] = <span class="number">0</span> &#125;</span><br><span class="line">            i += <span class="number">1</span>; j += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        arr = na</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Merge-Sorted-Array"><a href="#Merge-Sorted-Array" class="headerlink" title="Merge Sorted Array"></a>Merge Sorted Array</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(<span class="number">_</span> nums1: <span class="keyword">inout</span> [Int], <span class="number">_</span> m: Int, <span class="number">_</span> nums2: [Int], <span class="number">_</span> n: Int)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> nums0 = nums1[..&lt;m]</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums0.<span class="built_in">count</span>, j &lt; nums2.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums0[i] &lt; nums2[j] &#123;</span><br><span class="line">                nums1[k] = nums0[i]</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                nums1[k] = nums2[j]</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt; nums0.<span class="built_in">count</span> &#123;</span><br><span class="line">            nums1[k] = nums0[i]</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> j &lt; nums2.<span class="built_in">count</span> &#123;</span><br><span class="line">            nums1[k] = nums2[j]</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Remove-Element"><a href="#Remove-Element" class="headerlink" title="Remove Element"></a>Remove Element</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeElement</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int], <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] == val &#123;</span><br><span class="line">                <span class="keyword">while</span> nums[j] == val &#123; j -= <span class="number">1</span> &#125;</span><br><span class="line">                nums.swapAt(i, j)</span><br><span class="line">            &#125;</span><br><span class="line">            i += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Remove-Duplicates-from-Sorted-Array"><a href="#Remove-Duplicates-from-Sorted-Array" class="headerlink" title="Remove Duplicates from Sorted Array"></a>Remove Duplicates from Sorted Array</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeDuplicates</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] != nums[j] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">                nums[i] = nums[j]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums.isEmpty ? <span class="number">0</span> : i+<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Check-If-N-and-Its-Double-Exist"><a href="#Check-If-N-and-Its-Double-Exist" class="headerlink" title="Check If N and Its Double Exist"></a>Check If N and Its Double Exist</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">checkIfExist</span><span class="params">(<span class="number">_</span> arr: [Int])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = <span class="type">Dictionary</span>&lt;<span class="type">Int</span>, <span class="type">Int</span>&gt;()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> arr &#123;</span><br><span class="line">            dict[i] = (dict[i] ?? <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> arr &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[i*<span class="number">2</span>], v &gt;= ((i==<span class="number">0</span>) ? <span class="number">2</span> : <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Valid-Mountain-Array"><a href="#Valid-Mountain-Array" class="headerlink" title="Valid Mountain Array"></a>Valid Mountain Array</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">validMountainArray</span><span class="params">(<span class="number">_</span> A: [Int])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; <span class="type">A</span>.<span class="built_in">count</span>-<span class="number">1</span>, <span class="type">A</span>[i] &lt; <span class="type">A</span>[i+<span class="number">1</span>] &#123; i += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span> || i == <span class="type">A</span>.<span class="built_in">count</span>-<span class="number">1</span> &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt; <span class="type">A</span>.<span class="built_in">count</span>-<span class="number">1</span>, <span class="type">A</span>[i] &gt; <span class="type">A</span>[i+<span class="number">1</span>] &#123; i += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> i == <span class="type">A</span>.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Replace-Elements-with-Greatest-Element-on-Right-Side"><a href="#Replace-Elements-with-Greatest-Element-on-Right-Side" class="headerlink" title="Replace Elements with Greatest Element on Right Side"></a>Replace Elements with Greatest Element on Right Side</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">replaceElements</span><span class="params">(<span class="number">_</span> arr: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = arr.<span class="built_in">count</span>-<span class="number">1</span>, rMax = -<span class="number">1</span>, newArr = arr</span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            newArr[i] = rMax</span><br><span class="line">            rMax = <span class="built_in">max</span>(rMax, arr[i])</span><br><span class="line">            i -= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newArr</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Remove-Duplicates-from-Sorted-Array-1"><a href="#Remove-Duplicates-from-Sorted-Array-1" class="headerlink" title="Remove Duplicates from Sorted Array"></a>Remove Duplicates from Sorted Array</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeDuplicates</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] != nums[j] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">                nums[i] = nums[j]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums.isEmpty ? <span class="number">0</span> : i+<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Move-Zeroes"><a href="#Move-Zeroes" class="headerlink" title="Move Zeroes"></a>Move Zeroes</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">moveZeroes</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int])</span></span> &#123;</span><br><span class="line">        nums = <span class="type">Array</span>(nums.<span class="built_in">split</span>(separator: <span class="number">0</span>).joined()) + <span class="type">Array</span>(nums.<span class="built_in">filter</span>(&#123;$<span class="number">0</span> == <span class="number">0</span>&#125;))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Sort-Array-By-Parity"><a href="#Sort-Array-By-Parity" class="headerlink" title="Sort Array By Parity"></a>Sort Array By Parity</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortArrayByParity</span><span class="params">(<span class="number">_</span> A: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> even = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">A</span> &#123;</span><br><span class="line">            i &amp; <span class="number">1</span> == <span class="number">0</span> ? (even.append(i)) : (odd.append(i))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> even + odd</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Squares-of-a-Sorted-Array-1"><a href="#Squares-of-a-Sorted-Array-1" class="headerlink" title="Squares of a Sorted Array"></a>Squares of a Sorted Array</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortedSquares</span><span class="params">(<span class="number">_</span> A: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>, ans = <span class="type">A</span></span><br><span class="line">        <span class="keyword">while</span> j &lt; <span class="type">A</span>.<span class="built_in">count</span>, <span class="type">A</span>[j] &lt; <span class="number">0</span> &#123;</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        i = j - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span>, j &lt; <span class="type">A</span>.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> (ai, aj) = (<span class="type">A</span>[i]*<span class="type">A</span>[i], <span class="type">A</span>[j]*<span class="type">A</span>[j])</span><br><span class="line">            ai &lt; aj ? (ans[k] = ai, i -= <span class="number">1</span>) : (ans[k] = aj, j += <span class="number">1</span>)</span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> i &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            ans[k...] = <span class="type">A</span>[...i].reversed().<span class="built_in">map</span> &#123;$<span class="number">0</span>*$<span class="number">0</span>&#125;.suffix(from: <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> j &lt; <span class="type">A</span>.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans[k...] = <span class="type">A</span>[k...].<span class="built_in">map</span> &#123; $<span class="number">0</span>*$<span class="number">0</span> &#125;.suffix(from: <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Height-Checker"><a href="#Height-Checker" class="headerlink" title="Height Checker"></a>Height Checker</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">heightChecker</span><span class="params">(<span class="number">_</span> heights: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">zip</span>(heights, heights.sorted()).<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; <span class="keyword">return</span> $<span class="number">0</span> + ($<span class="number">1.0</span> == $<span class="number">1.1</span> ? <span class="number">0</span> : <span class="number">1</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Max-Consecutive-Ones-II"><a href="#Max-Consecutive-Ones-II" class="headerlink" title="Max Consecutive Ones II"></a>Max Consecutive Ones II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMaxConsecutiveOnes</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> z0 = <span class="number">0</span>, z1 = <span class="number">0</span>, maxZ = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">1</span> &#123;</span><br><span class="line">                z1 += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                z0 = z1</span><br><span class="line">                z1 = <span class="number">0</span></span><br><span class="line">            &#125;</span><br><span class="line">            maxZ = <span class="built_in">max</span>(maxZ, z0+z1+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">min</span>(maxZ, nums.<span class="built_in">count</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Third-Maximum-Number"><a href="#Third-Maximum-Number" class="headerlink" title="Third Maximum Number"></a>Third Maximum Number</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">thirdMax</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> maxs = [<span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">min</span>]</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> n &gt; maxs[<span class="number">2</span>], maxs.firstIndex(of: n) == <span class="literal">nil</span> &#123;</span><br><span class="line">                maxs[<span class="number">2</span>] = n</span><br><span class="line">                <span class="keyword">if</span> maxs[<span class="number">2</span>] &gt; maxs[<span class="number">1</span>] &#123;</span><br><span class="line">                    maxs.swapAt(<span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">if</span> maxs[<span class="number">1</span>] &gt; maxs[<span class="number">0</span>] &#123;</span><br><span class="line">                        maxs.swapAt(<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxs[<span class="number">2</span>] == <span class="type">Int</span>.<span class="built_in">min</span> ? maxs[<span class="number">0</span>] : maxs[<span class="number">2</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Find-All-Numbers-Disappeared-in-an-Array"><a href="#Find-All-Numbers-Disappeared-in-an-Array" class="headerlink" title="Find All Numbers Disappeared in an Array"></a>Find All Numbers Disappeared in an Array</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDisappearedNumbers</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> nums = nums, ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> ..&lt; nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> index = <span class="built_in">abs</span>(nums[i])-<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> nums[index] &gt; <span class="number">0</span> &#123; nums[index] *= -<span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] &gt; <span class="number">0</span> &#123; ans.append(i+<span class="number">1</span>) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Linked List</title>
    <url>/en/LeetCode-Linked-List/</url>
    <content><![CDATA[<h2 id="Design-Linked-List"><a href="#Design-Linked-List" class="headerlink" title="Design Linked List"></a>Design Linked List</h2><a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> val: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">var</span> prev: <span class="type">Node?</span>, next: <span class="type">Node?</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> val: <span class="type">Int</span>, prev: <span class="type">Node?</span> = <span class="literal">nil</span>, <span class="number">_</span> next: <span class="type">Node?</span> = <span class="literal">nil</span>) &#123; <span class="keyword">self</span>.val = val; <span class="keyword">self</span>.prev = prev; <span class="keyword">self</span>.next = next &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyLinkedList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">let</span> head: <span class="type">Node</span> = <span class="type">Node</span>(-<span class="number">1</span>), tail: <span class="type">Node</span> = <span class="type">Node</span>(-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>() &#123;  head.next = tail; tail.prev = head &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">get</span><span class="params">(<span class="number">_</span> index: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findNode(index)?.val ?? -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addAtHead</span><span class="params">(<span class="number">_</span> val: Int)</span></span> &#123;</span><br><span class="line">        addAtIndex(<span class="number">0</span>, val)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addAtTail</span><span class="params">(<span class="number">_</span> val: Int)</span></span> &#123;</span><br><span class="line">        addAtIndex(<span class="built_in">count</span>, val)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addAtIndex</span><span class="params">(<span class="number">_</span> index: Int, <span class="number">_</span> val: Int)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= <span class="built_in">count</span>, <span class="keyword">let</span> node = findNode(index) &#123;</span><br><span class="line">            <span class="keyword">let</span> newNode = <span class="type">Node</span>(val)</span><br><span class="line">            newNode.next = node</span><br><span class="line">            newNode.prev = node.prev</span><br><span class="line">            node.prev?.next = newNode</span><br><span class="line">            node.prev = newNode</span><br><span class="line">            <span class="built_in">count</span> += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// printList()</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deleteAtIndex</span><span class="params">(<span class="number">_</span> index: Int)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> index &gt;= <span class="number">0</span> &amp;&amp; index &lt; <span class="built_in">count</span>, <span class="keyword">let</span> node = findNode(index) &#123;</span><br><span class="line">            node.prev?.next = node.next</span><br><span class="line">            node.next?.prev = node.prev</span><br><span class="line">            node.prev = <span class="literal">nil</span>; node.next = <span class="literal">nil</span></span><br><span class="line">            <span class="built_in">count</span> -= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// printList()</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">findNode</span><span class="params">(<span class="number">_</span> index: Int)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p: <span class="type">Node?</span>, i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> index &lt;= (<span class="built_in">count</span>/<span class="number">2</span>) &#123;</span><br><span class="line">            p = head.next</span><br><span class="line">            <span class="keyword">while</span> p != <span class="literal">nil</span>, i &lt; index &#123;</span><br><span class="line">                p = p?.next; i += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            p = tail; i = <span class="built_in">count</span></span><br><span class="line">            <span class="keyword">while</span> p != <span class="literal">nil</span>, i &gt; index &#123;</span><br><span class="line">                p = p?.prev; i -= <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">printList</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = head.next, i: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span>, i &lt; <span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(p!.val, terminator: <span class="string">&quot;-&gt;&quot;</span> )</span><br><span class="line">            p = p?.next; i += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Linked-List-Cycle"><a href="#Linked-List-Cycle" class="headerlink" title="Linked List Cycle"></a>Linked List Cycle</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasCycle</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> fast = head?.next, slow = head</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fast != <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Linked-List-Cycle-II"><a href="#Linked-List-Cycle-II" class="headerlink" title="Linked List Cycle II"></a>Linked List Cycle II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">detectCycle</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> slow = head, fast = head?.next</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        slow = head; fast = fast?.next</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fast</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Intersection-of-Two-Linked-Lists"><a href="#Intersection-of-Two-Linked-Lists" class="headerlink" title="Intersection of Two Linked Lists"></a>Intersection of Two Linked Lists</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getIntersectionNode</span><span class="params">(<span class="number">_</span> headA: ListNode?, <span class="number">_</span> headB: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> tailA = headA</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> p = tailA?.next &#123; tailA = p &#125;</span><br><span class="line">        tailA?.next = headB</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> fast = detectCycle(headA)</span><br><span class="line"></span><br><span class="line">        tailA?.next = <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fast</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">detectCycle</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> slow = head, fast = head?.next</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        slow = head; fast = fast?.next</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fast</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Remove-Nth-Node-From-End-of-List"><a href="#Remove-Nth-Node-From-End-of-List" class="headerlink" title="Remove Nth Node From End of List"></a>Remove Nth Node From End of List</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeNthFromEnd</span><span class="params">(<span class="number">_</span> head: ListNode?, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> pHead = <span class="type">ListNode</span>(-<span class="number">1</span>, head), p0: <span class="type">ListNode?</span> = pHead, p1 = p0, i = <span class="number">0</span>, j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> q = p1?.next, j &lt; n &#123;</span><br><span class="line">            p1 = q; j += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> q = p1?.next &#123;</span><br><span class="line">            p1 = q; p0 = p0?.next</span><br><span class="line">        &#125;</span><br><span class="line">        p0?.next = p0?.next?.next</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pHead.next</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Reverse-Linked-List"><a href="#Reverse-Linked-List" class="headerlink" title="Reverse Linked List"></a>Reverse Linked List</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> head?.next == <span class="literal">nil</span> &#123; <span class="keyword">return</span> head &#125;</span><br><span class="line">        <span class="keyword">let</span> h = reverseList(head?.next)</span><br><span class="line">        head?.next?.next = head</span><br><span class="line">        head?.next = <span class="literal">nil</span></span><br><span class="line">        <span class="keyword">return</span> h</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> prev: <span class="type">ListNode?</span> = <span class="literal">nil</span>, cur = head</span><br><span class="line">        <span class="keyword">while</span> cur != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> p = cur?.next</span><br><span class="line">            cur?.next = prev</span><br><span class="line">            prev = cur</span><br><span class="line">            cur = p</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prev</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Remove-Linked-List-Elements"><a href="#Remove-Linked-List-Elements" class="headerlink" title="Remove Linked List Elements"></a>Remove Linked List Elements</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeElements</span><span class="params">(<span class="number">_</span> head: ListNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> pHead = <span class="type">ListNode</span>(-<span class="number">1</span>, head); <span class="keyword">var</span> p: <span class="type">ListNode?</span> = pHead</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> pn = p!.next, pn.val == val &#123;</span><br><span class="line">                p!.next = pn.next</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                p = p!.next</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pHead.next</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Odd-Even-Linked-List"><a href="#Odd-Even-Linked-List" class="headerlink" title="Odd Even Linked List"></a>Odd Even Linked List</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">oddEvenList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> evenHead = head, oddHead = head?.next</span><br><span class="line">        <span class="keyword">var</span> evenP = evenHead, oddP = oddHead</span><br><span class="line">        <span class="keyword">while</span> oddP?.next != <span class="literal">nil</span> &#123;</span><br><span class="line">            evenP?.next = evenP?.next?.next</span><br><span class="line">            oddP?.next = oddP?.next?.next</span><br><span class="line">            evenP = evenP?.next</span><br><span class="line">            oddP = oddP?.next</span><br><span class="line">        &#125;</span><br><span class="line">        evenP?.next = oddHead</span><br><span class="line">        <span class="keyword">return</span> evenHead</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Palindrome-Linked-List"><a href="#Palindrome-Linked-List" class="headerlink" title="Palindrome Linked List"></a>Palindrome Linked List</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isPalindrome</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> tail = reverseList(center(head))</span><br><span class="line">        <span class="keyword">return</span> compare(head, tail)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">compare</span><span class="params">(<span class="number">_</span> head: ListNode?, <span class="number">_</span> tail: ListNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = head, q = tail</span><br><span class="line">        <span class="keyword">while</span> q != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> p == <span class="literal">nil</span> || q!.val != p!.val &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">            p = p!.next; q = q!.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">center</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span>  -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> fast = head?.next, slow = head</span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span>, fast !== slow &#123;</span><br><span class="line">            fast = fast?.next?.next</span><br><span class="line">            slow = slow?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">reverseList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> prev: <span class="type">ListNode?</span> = <span class="literal">nil</span>, cur = head</span><br><span class="line">        <span class="keyword">while</span> cur != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> p = cur?.next</span><br><span class="line">            cur?.next = prev</span><br><span class="line">            prev = cur; cur = p</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prev</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Merge-Two-Sorted-Lists"><a href="#Merge-Two-Sorted-Lists" class="headerlink" title="Merge Two Sorted Lists"></a>Merge Two Sorted Lists</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mergeTwoLists</span><span class="params">(<span class="number">_</span> l1: ListNode?, <span class="number">_</span> l2: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p1 = l1 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l2 &#125;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p2 = l2 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l1 &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> (p, q) = p1.val &lt;= p2.val ? (p1, p2) : (p2, p1)</span><br><span class="line">        p.next = mergeTwoLists(p.next, q)</span><br><span class="line">        <span class="keyword">return</span> p</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Add-Two-Numbers"><a href="#Add-Two-Numbers" class="headerlink" title="Add Two Numbers"></a>Add Two Numbers</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addTwoNumbers</span><span class="params">(<span class="number">_</span> l1: ListNode?, <span class="number">_</span> l2: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> head = <span class="type">ListNode</span>(-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">var</span> p1 = l1, p2 = l2, p3: <span class="type">ListNode?</span> = head, v = <span class="number">0</span>, carry = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> p1 != <span class="literal">nil</span> || p2 != <span class="literal">nil</span> &#123;</span><br><span class="line">            v = (p1?.val ?? <span class="number">0</span>)+(p2?.val ?? <span class="number">0</span>)+carry</span><br><span class="line">            carry =  v/<span class="number">10</span>; v %= <span class="number">10</span></span><br><span class="line">            p3?.next = <span class="type">ListNode</span>(v)</span><br><span class="line">            p1 = p1?.next; p2 = p2?.next; p3 = p3?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> carry != <span class="number">0</span> &#123; p3?.next = <span class="type">ListNode</span>(carry) &#125;</span><br><span class="line">        <span class="keyword">return</span> head.next</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Flatten-a-Multilevel-Doubly-Linked-List"><a href="#Flatten-a-Multilevel-Doubly-Linked-List" class="headerlink" title="Flatten a Multilevel Doubly Linked List"></a>Flatten a Multilevel Doubly Linked List</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">flatten</span><span class="params">(<span class="number">_</span> head: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        getTail(head)</span><br><span class="line">        <span class="keyword">return</span> head</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">getTail</span><span class="params">(<span class="number">_</span> head: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> head = head <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> child = head.child &#123;</span><br><span class="line">            <span class="keyword">let</span> tail = getTail(child)</span><br><span class="line">            tail?.next = head.next</span><br><span class="line">            head.next?.prev = tail</span><br><span class="line">            head.next = head.child</span><br><span class="line">            head.child?.prev = head</span><br><span class="line">            head.child = <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> p = head.next &#123;</span><br><span class="line">            <span class="keyword">return</span> getTail(p)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Insert-into-a-Cyclic-Sorted-List"><a href="#Insert-into-a-Cyclic-Sorted-List" class="headerlink" title="Insert into a Cyclic Sorted List"></a>Insert into a Cyclic Sorted List</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> head: Node?, <span class="number">_</span> insertVal: Int)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> head == <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">Node</span>(insertVal)</span><br><span class="line">            n.next = n</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> p = head</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (p!.val &lt;= insertVal &amp;&amp;  p!.next!.val &gt;= insertVal) ||</span><br><span class="line">            (p!.val &gt; p!.next!.val &amp;&amp; (insertVal &lt;= p!.next!.val || insertVal &gt;= p!.val ) ||</span><br><span class="line">             p!.next == head</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="keyword">let</span> n = <span class="type">Node</span>(insertVal)</span><br><span class="line">                n.next = p!.next</span><br><span class="line">                p!.next = n</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">            p = p!.next</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> head</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Copy-List-with-Random-Pointer"><a href="#Copy-List-with-Random-Pointer" class="headerlink" title="Copy List with Random Pointer"></a>Copy List with Random Pointer</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">copyRandomList</span><span class="params">(<span class="number">_</span> head: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = head, nNode = head</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">Node</span>(p!.val)</span><br><span class="line">            n.next = p?.next</span><br><span class="line">            p?.next = n</span><br><span class="line">            p = p?.next?.next</span><br><span class="line">        &#125;</span><br><span class="line">        p = head</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            p?.next?.random = p?.random?.next</span><br><span class="line">            p = p?.next?.next</span><br><span class="line">        &#125;</span><br><span class="line">        p = head; nNode = head?.next</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> q = p?.next</span><br><span class="line">            p?.next = p?.next?.next</span><br><span class="line">            q?.next = q?.next?.next</span><br><span class="line">            p = p?.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nNode</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Rotate-List"><a href="#Rotate-List" class="headerlink" title="Rotate List"></a>Rotate List</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">rotateRight</span><span class="params">(<span class="number">_</span> head: ListNode?, <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> length = <span class="number">0</span>, fast = head, slow = head, i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> fast != <span class="literal">nil</span> &#123; fast = fast!.next; length += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> length &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> head &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> k = k % length</span><br><span class="line"></span><br><span class="line">        fast = head</span><br><span class="line">        <span class="keyword">while</span> i &lt; k &#123; fast = fast?.next; i += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> fast?.next != <span class="literal">nil</span> &#123;</span><br><span class="line">            slow = slow?.next; fast = fast?.next</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fast?.next = head</span><br><span class="line">        <span class="keyword">let</span> node = slow?.next</span><br><span class="line">        slow?.next = <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> node</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Binary Tree</title>
    <url>/en/LeetCode-Binary-Tree/</url>
    <content><![CDATA[<h2 id="Binary-Tree-Preorder-Traversal"><a href="#Binary-Tree-Preorder-Traversal" class="headerlink" title="Binary Tree Preorder Traversal"></a>Binary Tree Preorder Traversal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// iterative</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> p = stack.popLast() &#123;</span><br><span class="line">            ans.append(p.val)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> r = p.<span class="keyword">right</span> &#123; stack.append(r) &#125;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> l = p.<span class="keyword">left</span> &#123; stack.append(l) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// recursive</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorderTraversal0</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">return</span> [root.val] + preorderTraversal(root.<span class="keyword">left</span>) + preorderTraversal(root.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="Binary-Tree-Inorder-Traversal"><a href="#Binary-Tree-Inorder-Traversal" class="headerlink" title="Binary Tree Inorder Traversal"></a>Binary Tree Inorder Traversal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// iteratively</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">inorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> || !stack.isEmpty &#123;</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">let</span> l = p &#123;</span><br><span class="line">                stack.append(l)</span><br><span class="line">                p = l.<span class="keyword">left</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> n = stack.popLast() &#123;</span><br><span class="line">                ans.append(n.val)</span><br><span class="line">                p = n.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Binary-Tree-Postorder-Traversal"><a href="#Binary-Tree-Postorder-Traversal" class="headerlink" title="Binary Tree Postorder Traversal"></a>Binary Tree Postorder Traversal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Recursive</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">postorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">return</span> postorderTraversal(root.<span class="keyword">left</span>) + postorderTraversal(root.<span class="keyword">right</span>) + [root.val]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Binary-Tree-Level-Order-Traversal"><a href="#Binary-Tree-Level-Order-Traversal" class="headerlink" title="Binary Tree Level Order Traversal"></a>Binary Tree Level Order Traversal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        helper(root, <span class="number">0</span>, &amp;ans)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> level: Int, <span class="number">_</span> ans: <span class="keyword">inout</span> [[Int]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> level &gt;= ans.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans.append( [root.val] )</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ans[level].append(root.val)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        helper(root.<span class="keyword">left</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">        helper(root.<span class="keyword">right</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Maximum-Depth-of-Binary-Tree"><a href="#Maximum-Depth-of-Binary-Tree" class="headerlink" title="Maximum Depth of Binary Tree"></a>Maximum Depth of Binary Tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> root != <span class="literal">nil</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">max</span>(maxDepth(root?.<span class="keyword">left</span>), maxDepth(root?.<span class="keyword">right</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Symmetric-Tree"><a href="#Symmetric-Tree" class="headerlink" title="Symmetric Tree"></a>Symmetric Tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isSymmetric</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> inOrder(root) == inOrder(<span class="built_in">reverse</span>(root))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">reverse</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="built_in">reverse</span>(root.<span class="keyword">left</span>); <span class="built_in">reverse</span>(root.<span class="keyword">right</span>)</span><br><span class="line">        <span class="built_in">swap</span>(&amp;root.<span class="keyword">left</span>, &amp;root.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">inOrder</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int?</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> root == <span class="literal">nil</span> ? [<span class="literal">nil</span>] : [root!.val] + inOrder(root!.<span class="keyword">left</span>) + inOrder(root!.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Path-Sum"><a href="#Path-Sum" class="headerlink" title="Path Sum"></a>Path Sum</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasPathSum</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> sum: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.<span class="keyword">left</span> == <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> == <span class="literal">nil</span> &amp;&amp; root.val == sum &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> hasPathSum(root.<span class="keyword">left</span>, sum-root.val) || hasPathSum(root.<span class="keyword">right</span>, sum-root.val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Count-Univalue-Subtrees"><a href="#Count-Univalue-Subtrees" class="headerlink" title="Count Univalue Subtrees"></a>Count Univalue Subtrees</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">countUnivalSubtrees</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        isUni(root)</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">isUni</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.<span class="keyword">left</span> == <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> == <span class="literal">nil</span> &#123;</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> lv = root.<span class="keyword">left</span>?.val ?? root.<span class="keyword">right</span>!.val</span><br><span class="line">        <span class="keyword">let</span> rv = root.<span class="keyword">right</span>?.val ?? root.<span class="keyword">left</span>!.val</span><br><span class="line">        <span class="keyword">let</span> l = root.<span class="keyword">left</span> == <span class="literal">nil</span> ? <span class="literal">true</span> : isUni(root.<span class="keyword">left</span>)</span><br><span class="line">        <span class="keyword">let</span> r = root.<span class="keyword">right</span> == <span class="literal">nil</span> ? <span class="literal">true</span> : isUni(root.<span class="keyword">right</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> ans = l &amp;&amp; r &amp;&amp; (lv == root.val &amp;&amp; rv == root.val)</span><br><span class="line">        <span class="keyword">if</span> ans &#123; num += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Construct-Binary-Tree-from-Inorder-and-Postorder-Traversal"><a href="#Construct-Binary-Tree-from-Inorder-and-Postorder-Traversal" class="headerlink" title="Construct Binary Tree from Inorder and Postorder Traversal"></a>Construct Binary Tree from Inorder and Postorder Traversal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">buildTree</span><span class="params">(<span class="number">_</span> inorder: [Int], <span class="number">_</span> postorder: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> dict = inorder.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">Int</span>:<span class="type">Int</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> inRange: <span class="params">(Int, Int)</span></span></span>, <span class="number">_</span> postI: <span class="type">Int</span>) -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> postI &lt; <span class="number">0</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> v = postorder[postI]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> i = dict[v], i &gt;= inRange.<span class="number">0</span> &amp;&amp; i &lt;= inRange.<span class="number">1</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> n = <span class="type">TreeNode</span>(v)</span><br><span class="line">                n.<span class="keyword">left</span> = helper((inRange.<span class="number">0</span>, i-<span class="number">1</span>), postI-<span class="number">1</span>)</span><br><span class="line">                n.<span class="keyword">right</span> = helper((i+<span class="number">1</span>, inRange.<span class="number">1</span>), postI-<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> n</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> helper(inRange, postI-<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper((<span class="number">0</span>, inorder.<span class="built_in">count</span>-<span class="number">1</span>), postorder.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Construct-Binary-Tree-from-Preorder-and-Inorder-Traversal"><a href="#Construct-Binary-Tree-from-Preorder-and-Inorder-Traversal" class="headerlink" title="Construct Binary Tree from Preorder and Inorder Traversal"></a>Construct Binary Tree from Preorder and Inorder Traversal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">buildTree</span><span class="params">(<span class="number">_</span> preorder: [Int], <span class="number">_</span> inorder: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> dict = inorder.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">Int</span>: <span class="type">Int</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> inRange: <span class="params">(Int, Int)</span></span></span>, <span class="number">_</span> preI: <span class="type">Int</span>) -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> preI &gt;= preorder.<span class="built_in">count</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> v = preorder[preI]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> i = dict[v], i &gt;= inRange.<span class="number">0</span> &amp;&amp; i &lt;= inRange.<span class="number">1</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> n = <span class="type">TreeNode</span>(v)</span><br><span class="line">                n.<span class="keyword">left</span> = helper((inRange.<span class="number">0</span>, i-<span class="number">1</span>), preI+<span class="number">1</span>)</span><br><span class="line">                n.<span class="keyword">right</span> = helper((i+<span class="number">1</span>, inRange.<span class="number">1</span>), preI+<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> n</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> helper(inRange, preI+<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper((<span class="number">0</span>, inorder.<span class="built_in">count</span>-<span class="number">1</span>), <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Populating-Next-Right-Pointers-in-Each-Node"><a href="#Populating-Next-Right-Pointers-in-Each-Node" class="headerlink" title="Populating Next Right Pointers in Each Node"></a>Populating Next Right Pointers in Each Node</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">connect</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        root.<span class="keyword">left</span>?.next = root.<span class="keyword">right</span></span><br><span class="line">        root.<span class="keyword">right</span>?.next = root.next?.<span class="keyword">left</span></span><br><span class="line">        connect(root.<span class="keyword">left</span>)</span><br><span class="line">        connect(root.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Populating-Next-Right-Pointers-in-Each-Node-II"><a href="#Populating-Next-Right-Pointers-in-Each-Node-II" class="headerlink" title="Populating Next Right Pointers in Each Node II"></a>Populating Next Right Pointers in Each Node II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">connect</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> nodes = [[<span class="type">Node</span>]</span><br><span class="line">        helper(root, <span class="number">0</span>, &amp;nodes)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nodes.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;(nodes[i].<span class="built_in">count</span>-<span class="number">1</span>) &#123;</span><br><span class="line">                nodes[i][j].next = nodes[i][j+<span class="number">1</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: Node?, <span class="number">_</span> level: Int, <span class="number">_</span> nodes: <span class="keyword">inout</span> [[Node]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        level &lt; nodes.<span class="built_in">count</span> ? nodes[level].append(root) : nodes.append([root])</span><br><span class="line">        helper(root.<span class="keyword">left</span>, level+<span class="number">1</span>, &amp;nodes)</span><br><span class="line">        helper(root.<span class="keyword">right</span>, level+<span class="number">1</span>, &amp;nodes)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Lowest-Common-Ancestor-of-a-Binary-Tree"><a href="#Lowest-Common-Ancestor-of-a-Binary-Tree" class="headerlink" title="Lowest Common Ancestor of a Binary Tree"></a>Lowest Common Ancestor of a Binary Tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">lowestCommonAncestor</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root, <span class="keyword">let</span> p = p, <span class="keyword">let</span> q = q <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> l = lowestCommonAncestor(root.<span class="keyword">left</span>, p, q), r = lowestCommonAncestor(root.<span class="keyword">right</span>, p, q)</span><br><span class="line">        <span class="keyword">if</span> root.val == p.val || root.val == q.val || (l != <span class="literal">nil</span> &amp;&amp; r != <span class="literal">nil</span>) &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">return</span> l ?? r</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Serialize-and-Deserialize-Binary-Tree"><a href="#Serialize-and-Deserialize-Binary-Tree" class="headerlink" title="Serialize and Deserialize Binary Tree"></a>Serialize and Deserialize Binary Tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">serialize</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="string">&quot;#&quot;</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;\(root.val),\(serialize(root.left)),\(serialize(root.right))&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">(<span class="number">_</span> data: String)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> vals = data.<span class="built_in">split</span>(separator: <span class="string">&quot;,&quot;</span>)</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">()</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> i &lt; vals.<span class="built_in">count</span>, <span class="keyword">let</span> v = <span class="type">Int</span>(vals[i]) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">TreeNode</span>(v)</span><br><span class="line">            i += <span class="number">1</span>; n.<span class="keyword">left</span> = helper()</span><br><span class="line">            i += <span class="number">1</span>; n.<span class="keyword">right</span> = helper()</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> helper()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Recursion 2</title>
    <url>/en/LeetCode-Recursion-2/</url>
    <content><![CDATA[<h2 id="Sort-an-Array"><a href="#Sort-an-Array" class="headerlink" title="Sort an Array"></a>Sort an Array</h2><a id="more"></a>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortArray</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> nums &#125;</span><br><span class="line">        <span class="keyword">let</span> i = nums.<span class="built_in">count</span>/<span class="number">2</span>, l = sortArray(<span class="type">Array</span>(nums[..&lt;i])), r = sortArray(<span class="type">Array</span>(nums[i...]))</span><br><span class="line">        <span class="keyword">return</span> merge(l, r)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(<span class="number">_</span> n1: [Int], <span class="number">_</span> n2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i1 = <span class="number">0</span>, i2 = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> arr = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> i1 &lt; n1.<span class="built_in">count</span>, i2 &lt; n2.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> n1[i1] &lt; n2[i2] &#123;</span><br><span class="line">                arr.append(n1[i1])</span><br><span class="line">                i1 += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                arr.append(n2[i2])</span><br><span class="line">                i2 += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i1 &lt; n1.<span class="built_in">count</span> &#123;</span><br><span class="line">            arr.append(n1[i1])</span><br><span class="line">            i1 += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i2 &lt; n2.<span class="built_in">count</span> &#123;</span><br><span class="line">            arr.append(n2[i2])</span><br><span class="line">            i2 += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Validate-Binary-Search-Tree"><a href="#Validate-Binary-Search-Tree" class="headerlink" title="Validate Binary Search Tree"></a>Validate Binary Search Tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidBST</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">max</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> node: TreeNode?, <span class="number">_</span> lower: Int, <span class="number">_</span> upper: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> n = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> n.val &lt;= lower || n.val &gt;= upper &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper(n.<span class="keyword">left</span>, lower, n.val) &amp;&amp; helper(n.<span class="keyword">right</span>, n.val, upper)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Search-a-2D-Matrix-II"><a href="#Search-a-2D-Matrix-II" class="headerlink" title="Search a 2D Matrix II"></a>Search a 2D Matrix II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchMatrix</span><span class="params">(<span class="number">_</span> matrix: [[Int]], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> n = matrix.<span class="built_in">count</span>-<span class="number">1</span>, m = matrix.first?.<span class="built_in">count</span> ?? <span class="number">0</span>; <span class="keyword">var</span> i = n, j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span> &amp;&amp; j &lt; m &#123;</span><br><span class="line">            <span class="keyword">if</span> target &gt; matrix[i][j] &#123;</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> target &lt; matrix[i][j] &#123;</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="N-Queens-II"><a href="#N-Queens-II" class="headerlink" title="N-Queens II"></a>N-Queens II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">totalNQueens</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">1</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(n-<span class="number">1</span>, <span class="type">Array</span>(repeating: <span class="type">Array</span>(repeating: <span class="number">1</span>, <span class="built_in">count</span>: n), <span class="built_in">count</span>: n)).<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> i: Int, <span class="number">_</span> board: [[Int]])</span></span> -&gt; [[[<span class="type">Int</span>]]] &#123;</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span> &#123; <span class="keyword">return</span> put(i, board) &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(i-<span class="number">1</span>, board).<span class="built_in">reduce</span>( [[[<span class="type">Int</span>]]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> i: Int, <span class="number">_</span> board: [[Int]])</span></span> -&gt; [[[<span class="type">Int</span>]]] &#123;</span><br><span class="line">        <span class="keyword">var</span> boards = [[[<span class="type">Int</span>]]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;board.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> board[i][j] == <span class="number">1</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> board = put((i,j), board)</span><br><span class="line">                boards.append(board)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> boards</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> p: <span class="params">(Int, Int)</span></span></span>, <span class="number">_</span> board: [[<span class="type">Int</span>]]) -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">let</span> n = board.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> board = board</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;n &#123; board[i][p.<span class="number">1</span>] = <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;n &#123; board[p.<span class="number">0</span>][j] = <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> p0 = p.<span class="number">0</span>, p1 = p.<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> p0 &lt; n, p1 &lt; n, p0 &gt;= <span class="number">0</span>, p1 &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            board[p0][p1] = <span class="number">0</span></span><br><span class="line">            p0 += <span class="number">1</span>; p1 += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        p0 = p.<span class="number">0</span>; p1 = p.<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> p0 &lt; n, p1 &lt; n, p0 &gt;= <span class="number">0</span>, p1 &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            board[p0][p1] = <span class="number">0</span></span><br><span class="line">            p0 += <span class="number">1</span>; p1 -= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        board[p.<span class="number">0</span>][p.<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> board</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Robot-Room-Cleaner"><a href="#Robot-Room-Cleaner" class="headerlink" title="Robot Room Cleaner"></a>Robot Room Cleaner</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">cleanRoom</span><span class="params">(<span class="number">_</span> robot: Robot)</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> visited = <span class="type">Set</span>&lt;[<span class="type">Int</span>]&gt;()</span><br><span class="line">        <span class="keyword">let</span> directions = [[-<span class="number">1</span>,<span class="number">0</span>], [<span class="number">0</span>,<span class="number">1</span>], [<span class="number">1</span>,<span class="number">0</span>], [<span class="number">0</span>,-<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">backtrack</span><span class="params">(<span class="number">_</span> cell: [Int] = [<span class="number">0</span>,<span class="number">0</span>], <span class="number">_</span> d: Int = <span class="number">0</span>)</span></span> &#123;</span><br><span class="line">            <span class="function"><span class="keyword">func</span> <span class="title">goBack</span><span class="params">()</span></span> &#123;</span><br><span class="line">                <span class="function"><span class="keyword">func</span> <span class="title">uTurn</span><span class="params">()</span></span> &#123; robot.turnRight(); robot.turnRight() &#125;</span><br><span class="line">                uTurn(); robot.move(); uTurn()</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            visited.insert(cell)</span><br><span class="line">            robot.clean()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">4</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> d = (d+i)%<span class="number">4</span>, cell = [cell[<span class="number">0</span>]+directions[d][<span class="number">0</span>], cell[<span class="number">1</span>]+directions[d][<span class="number">1</span>]]</span><br><span class="line">                <span class="keyword">if</span> !visited.<span class="built_in">contains</span>(cell) &amp;&amp; robot.move() &#123;</span><br><span class="line">                    backtrack(cell, d)</span><br><span class="line">                    goBack()</span><br><span class="line">                &#125;</span><br><span class="line">                robot.turnRight()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        backtrack()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Sudoku-Solver"><a href="#Sudoku-Solver" class="headerlink" title="Sudoku Solver"></a>Sudoku Solver</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">solveSudoku</span><span class="params">(<span class="number">_</span> board: <span class="keyword">inout</span> [[Character]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> chars: [<span class="type">Character</span>] = [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>,<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;7&quot;</span>,<span class="string">&quot;8&quot;</span>,<span class="string">&quot;9&quot;</span>]</span><br><span class="line">        <span class="keyword">var</span> boxes = <span class="type">Array</span>(repeating: <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">3</span>), <span class="built_in">count</span>: <span class="number">3</span>),  rows = (<span class="number">0</span>..&lt;<span class="number">9</span>).<span class="built_in">map</span> &#123; <span class="type">Set</span>(board[$<span class="number">0</span>]) &#125;, cols = (<span class="number">0</span>..&lt;<span class="number">9</span>).<span class="built_in">map</span> &#123; i <span class="keyword">in</span> <span class="type">Set</span>( (<span class="number">0</span>..&lt;<span class="number">9</span>).<span class="built_in">map</span> &#123; j <span class="keyword">in</span> board[j][i] &#125; )&#125;</span><br><span class="line">        (<span class="number">0</span>..&lt;<span class="number">9</span>).forEach &#123; i <span class="keyword">in</span> (<span class="number">0</span>..&lt;<span class="number">9</span>).forEach &#123; j <span class="keyword">in</span> boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].insert(board[i][j]) &#125; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> <span class="built_in">c</span>: Character, <span class="number">_</span> i: Int, <span class="number">_</span> j: Int)</span></span> &#123;</span><br><span class="line">            board[i][j] = <span class="built_in">c</span>; rows[i].insert(<span class="built_in">c</span>); cols[j].insert(<span class="built_in">c</span>); boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].insert(<span class="built_in">c</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">restore</span><span class="params">(<span class="number">_</span> <span class="built_in">c</span>: Character, <span class="number">_</span> i: Int, <span class="number">_</span> j: Int)</span></span> &#123;</span><br><span class="line">            board[i][j] = <span class="string">&quot;.&quot;</span>; rows[i].remove(<span class="built_in">c</span>); cols[j].remove(<span class="built_in">c</span>); boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].remove(<span class="built_in">c</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">backtrack</span><span class="params">(<span class="number">_</span> k: Int = <span class="number">0</span>)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> i = k/<span class="number">9</span>, j = k%<span class="number">9</span></span><br><span class="line">            <span class="keyword">if</span> k &gt;= <span class="number">81</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> board[i][j] != <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">return</span> backtrack(k+<span class="number">1</span>) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">c</span> <span class="keyword">in</span> chars.<span class="built_in">filter</span>(&#123; !rows[i].<span class="built_in">contains</span>($<span class="number">0</span>) &amp;&amp; !cols[j].<span class="built_in">contains</span>($<span class="number">0</span>) &amp;&amp; !boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].<span class="built_in">contains</span>($<span class="number">0</span>) &#125;) &#123;</span><br><span class="line">                put(<span class="built_in">c</span>, i, j)</span><br><span class="line">                <span class="keyword">if</span> backtrack(k+<span class="number">1</span>) &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">                restore(<span class="built_in">c</span>, i, j)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        backtrack()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Combinations"><a href="#Combinations" class="headerlink" title="Combinations"></a>Combinations</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">combine</span><span class="params">(<span class="number">_</span> n: Int, <span class="number">_</span> k: Int)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">if</span> k &gt; n &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">let</span> b = (k...n).<span class="built_in">map</span> &#123; [$<span class="number">0</span>] &#125;</span><br><span class="line">        <span class="keyword">if</span> k == <span class="number">1</span> &#123; <span class="keyword">return</span> b &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> a = combine(n-<span class="number">1</span>, k-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> a &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> b &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> last = i.last, <span class="keyword">let</span> first = j.first, last &lt; first &#123;</span><br><span class="line">                    ans.append(i + j)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Same-Tree"><a href="#Same-Tree" class="headerlink" title="Same Tree"></a>Same Tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isSameTree</span><span class="params">(<span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> p = p, <span class="keyword">let</span> q = q, p.val == q.val &#123;</span><br><span class="line">            <span class="keyword">return</span> isSameTree(p.<span class="keyword">left</span>, q.<span class="keyword">left</span>) &amp;&amp; isSameTree(p.<span class="keyword">right</span>, q.<span class="keyword">right</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p == <span class="literal">nil</span> &amp;&amp; q == <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Generate-Parentheses"><a href="#Generate-Parentheses" class="headerlink" title="Generate Parentheses"></a>Generate Parentheses</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateParenthesis</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">String</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">backtrack</span><span class="params">(<span class="number">_</span> s: String = <span class="string">&quot;&quot;</span>, <span class="number">_</span> l: Int = <span class="number">0</span>, <span class="number">_</span> r: Int = <span class="number">0</span>)</span></span> &#123;</span><br><span class="line">            <span class="keyword">if</span> s.<span class="built_in">count</span> == n*<span class="number">2</span> &#123;</span><br><span class="line">                ans.append(s); <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> l &lt; n &#123; backtrack(s+<span class="string">&quot;(&quot;</span>, l+<span class="number">1</span>, r) &#125;</span><br><span class="line">            <span class="keyword">if</span> r &lt; l &#123; backtrack(s+<span class="string">&quot;)&quot;</span>, l, r+<span class="number">1</span>) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        backtrack()</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Binary-Tree-Inorder-Traversal"><a href="#Binary-Tree-Inorder-Traversal" class="headerlink" title="Binary Tree Inorder Traversal"></a>Binary Tree Inorder Traversal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// iteratively</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">inorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> || !stack.isEmpty &#123;</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">let</span> l = p &#123;</span><br><span class="line">                stack.append(l)</span><br><span class="line">                p = l.<span class="keyword">left</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> n = stack.popLast() &#123;</span><br><span class="line">                ans.append(n.val)</span><br><span class="line">                p = n.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Binary-Tree-Level-Order-Traversal"><a href="#Binary-Tree-Level-Order-Traversal" class="headerlink" title="Binary Tree Level Order Traversal"></a>Binary Tree Level Order Traversal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        helper(root, <span class="number">0</span>, &amp;ans)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> level: Int, <span class="number">_</span> ans: <span class="keyword">inout</span> [[Int]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> level &gt;= ans.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans.append( [root.val] )</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ans[level].append(root.val)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        helper(root.<span class="keyword">left</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">        helper(root.<span class="keyword">right</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Convert-Binary-Search-Tree-to-Sorted-Doubly-Linked-List"><a href="#Convert-Binary-Search-Tree-to-Sorted-Doubly-Linked-List" class="headerlink" title="Convert Binary Search Tree to Sorted Doubly Linked List"></a>Convert Binary Search Tree to Sorted Doubly Linked List</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">treeToDoublyList</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> first: <span class="type">Node?</span>, last: <span class="type">Node?</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> cur = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            helper(cur.<span class="keyword">left</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> last = last &#123;</span><br><span class="line">                last.<span class="keyword">right</span> = cur</span><br><span class="line">                cur.<span class="keyword">left</span> = last</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                first = cur</span><br><span class="line">            &#125;</span><br><span class="line">            last = cur</span><br><span class="line">            helper(cur.<span class="keyword">right</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        helper(root)</span><br><span class="line">        last?.<span class="keyword">right</span> = first</span><br><span class="line">        first?.<span class="keyword">left</span> = last</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> first</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Largest-Rectangle-in-Histogram"><a href="#Largest-Rectangle-in-Histogram" class="headerlink" title="Largest Rectangle in Histogram"></a>Largest Rectangle in Histogram</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">largestRectangleArea</span><span class="params">(<span class="number">_</span> heights: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> i: Int, <span class="number">_</span> j: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> i &lt;= j <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">            <span class="keyword">var</span> index = <span class="number">0</span>, v = <span class="type">Int</span>.<span class="built_in">max</span></span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> i...j &#123;</span><br><span class="line">                <span class="keyword">if</span> heights[k] &lt; v &#123; index = k; v = heights[k] &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">max</span>(v*(j-i+<span class="number">1</span>), helper(i, index-<span class="number">1</span>), helper(index+<span class="number">1</span>, j))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(<span class="number">0</span>, heights.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Permutations"><a href="#Permutations" class="headerlink" title="Permutations"></a>Permutations</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">permute</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> [nums] &#125;</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> arr = nums; arr.remove(at: i)</span><br><span class="line">            ans += permute(arr).<span class="built_in">map</span> &#123; [nums[i]] + $<span class="number">0</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Letter-Combinations-of-a-Phone-Number"><a href="#Letter-Combinations-of-a-Phone-Number" class="headerlink" title="Letter Combinations of a Phone Number"></a>Letter Combinations of a Phone Number</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">let</span> dict : [<span class="type">Character</span>: [<span class="type">String</span>]] = [<span class="string">&quot;2&quot;</span>:[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>],<span class="string">&quot;3&quot;</span>:[<span class="string">&quot;d&quot;</span>,<span class="string">&quot;e&quot;</span>,<span class="string">&quot;f&quot;</span>],<span class="string">&quot;4&quot;</span>:[<span class="string">&quot;g&quot;</span>,<span class="string">&quot;h&quot;</span>,<span class="string">&quot;i&quot;</span>],<span class="string">&quot;5&quot;</span>:[<span class="string">&quot;j&quot;</span>,<span class="string">&quot;k&quot;</span>,<span class="string">&quot;l&quot;</span>],<span class="string">&quot;6&quot;</span>:[<span class="string">&quot;m&quot;</span>,<span class="string">&quot;n&quot;</span>,<span class="string">&quot;o&quot;</span>],<span class="string">&quot;7&quot;</span>:[<span class="string">&quot;p&quot;</span>,<span class="string">&quot;q&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="string">&quot;s&quot;</span>],<span class="string">&quot;8&quot;</span>:[<span class="string">&quot;t&quot;</span>,<span class="string">&quot;u&quot;</span>,<span class="string">&quot;v&quot;</span>],<span class="string">&quot;9&quot;</span>:[<span class="string">&quot;w&quot;</span>,<span class="string">&quot;x&quot;</span>,<span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">letterCombinations</span><span class="params">(<span class="number">_</span> digits: String)</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> digits.isEmpty ? [] : digits.<span class="built_in">reduce</span>([<span class="string">&quot;&quot;</span>]) &#123; (ans, digit) <span class="keyword">in</span></span><br><span class="line">            ans.flatMap &#123; s <span class="keyword">in</span> dict[digit, <span class="keyword">default</span>: [<span class="string">&quot;&quot;</span>]].<span class="built_in">map</span> &#123; <span class="built_in">c</span> <span class="keyword">in</span> s + <span class="built_in">c</span> &#125; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="The-Skyline-Problem"><a href="#The-Skyline-Problem" class="headerlink" title="The Skyline Problem"></a>The Skyline Problem</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getSkyline</span><span class="params">(<span class="number">_</span> buildings: [[Int]])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">let</span> n = buildings.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">0</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> [[buildings[<span class="number">0</span>][<span class="number">0</span>], buildings[<span class="number">0</span>][<span class="number">2</span>]], [buildings[<span class="number">0</span>][<span class="number">1</span>], <span class="number">0</span>]]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> l = getSkyline(<span class="type">Array</span>(buildings[..&lt;(n/<span class="number">2</span>)]))</span><br><span class="line">        <span class="keyword">let</span> r = getSkyline(<span class="type">Array</span>(buildings[(n/<span class="number">2</span>)...]))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> merge(l, r)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(<span class="number">_</span> l: [[Int]], <span class="number">_</span> r: [[Int]])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">let</span> ln = l.<span class="built_in">count</span>, rn = r.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> lp = <span class="number">0</span>, rp = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> curY = <span class="number">0</span>, lY = <span class="number">0</span>, rY = <span class="number">0</span> , output = [[<span class="type">Int</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">update</span><span class="params">(<span class="number">_</span> x: Int, <span class="number">_</span> y: Int)</span></span> &#123;</span><br><span class="line">            <span class="keyword">if</span> output.isEmpty || output.last?.first != x &#123;</span><br><span class="line">                output.append([x, y])</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                output[output.<span class="built_in">count</span>-<span class="number">1</span>][<span class="number">1</span>] = y</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">append</span><span class="params">(<span class="number">_</span> p: Int, <span class="number">_</span> lst: [[Int]], <span class="number">_</span> n: Int, <span class="number">_</span> curY: Int)</span></span> &#123;</span><br><span class="line">            <span class="keyword">var</span> p = p, curY = curY</span><br><span class="line">            <span class="keyword">while</span> p &lt; n &#123;</span><br><span class="line">                <span class="keyword">let</span> (x, y) = (lst[p][<span class="number">0</span>], lst[p][<span class="number">1</span>])</span><br><span class="line">                p += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> curY != y &#123;</span><br><span class="line">                    update(x, y)</span><br><span class="line">                    curY = y</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> lp &lt; ln &amp;&amp; rp &lt; rn &#123;</span><br><span class="line">            <span class="keyword">let</span> lPoint = l[lp], rPoint = r[rp]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> x = <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> lPoint[<span class="number">0</span>] &lt; rPoint[<span class="number">0</span>] &#123;</span><br><span class="line">                (x, lY) = (lPoint[<span class="number">0</span>], lPoint[<span class="number">1</span>])</span><br><span class="line">                lp += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                (x, rY) = (rPoint[<span class="number">0</span>], rPoint[<span class="number">1</span>])</span><br><span class="line">                rp += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> maxY = <span class="built_in">max</span>(lY, rY)</span><br><span class="line">            <span class="keyword">if</span> curY != maxY &#123;</span><br><span class="line">                update(x, maxY)</span><br><span class="line">                curY = maxY</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        append(lp, l, ln, curY)</span><br><span class="line">        append(rp, r, rn, curY)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Recursion 1</title>
    <url>/en/LeetCode-Recursion-1/</url>
    <content><![CDATA[<h2 id="Reverse-String"><a href="#Reverse-String" class="headerlink" title="Reverse String"></a>Reverse String</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseString</span><span class="params">(<span class="number">_</span> s: <span class="keyword">inout</span> [Character])</span></span> &#123;</span><br><span class="line">        s.<span class="built_in">reverse</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="Swap-Nodes-in-Pairs"><a href="#Swap-Nodes-in-Pairs" class="headerlink" title="Swap Nodes in Pairs"></a>Swap Nodes in Pairs</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">swapPairs</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> h = <span class="built_in">swap</span>(head)</span><br><span class="line">        h?.next?.next = swapPairs(h?.next?.next)</span><br><span class="line">        <span class="keyword">return</span> h</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">swap</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> h0 = head, <span class="keyword">let</span> h1 = h0.next &#123;</span><br><span class="line">            h0.next = h1.next</span><br><span class="line">            h1.next = h0</span><br><span class="line">            <span class="keyword">return</span> h1</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> head</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Reverse-Linked-List"><a href="#Reverse-Linked-List" class="headerlink" title="Reverse Linked List"></a>Reverse Linked List</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> prev: <span class="type">ListNode?</span> = <span class="literal">nil</span>, cur = head</span><br><span class="line">        <span class="keyword">while</span> cur != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> p = cur?.next</span><br><span class="line">            cur?.next = prev</span><br><span class="line">            prev = cur</span><br><span class="line">            cur = p</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prev</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Search-in-a-Binary-Search-Tree"><a href="#Search-in-a-Binary-Search-Tree" class="headerlink" title="Search in a Binary Search Tree"></a>Search in a Binary Search Tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == val &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">left</span>, val)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">right</span>, val)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Pascal’s-Triangle-II"><a href="#Pascal’s-Triangle-II" class="headerlink" title="Pascal’s Triangle II"></a>Pascal’s Triangle II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getRow</span><span class="params">(<span class="number">_</span> rowIndex: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> arr = [<span class="number">1</span>], j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;rowIndex &#123;</span><br><span class="line">            arr.append(<span class="number">1</span>)</span><br><span class="line">            j = arr.<span class="built_in">count</span> - <span class="number">2</span></span><br><span class="line">            <span class="keyword">while</span> j &gt; <span class="number">0</span> &#123;</span><br><span class="line">                arr[j] += arr[j-<span class="number">1</span>]</span><br><span class="line">                j -= <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Fibonacci-Number"><a href="#Fibonacci-Number" class="headerlink" title="Fibonacci Number"></a>Fibonacci Number</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = <span class="type">Array</span>(repeating: <span class="number">0</span>, <span class="built_in">count</span>: <span class="number">31</span>)</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fib</span><span class="params">(<span class="number">_</span> N: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        arr[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> <span class="type">N</span> &lt; <span class="number">2</span> || arr[<span class="type">N</span>] != <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> arr[<span class="type">N</span>]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            arr[<span class="type">N</span>-<span class="number">1</span>] = fib(<span class="type">N</span>-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> arr[<span class="type">N</span>-<span class="number">1</span>] + arr[<span class="type">N</span>-<span class="number">2</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Climbing-Stairs"><a href="#Climbing-Stairs" class="headerlink" title="Climbing Stairs"></a>Climbing Stairs</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] + <span class="type">Array</span>(repeating: <span class="number">0</span>, <span class="built_in">count</span>: <span class="number">127</span>)</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">climbStairs</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">4</span> || arr[n] != <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> arr[n]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            arr[n-<span class="number">1</span>] = climbStairs(n-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> arr[n-<span class="number">1</span>] + arr[n-<span class="number">2</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Maximum-Depth-of-Binary-Tree"><a href="#Maximum-Depth-of-Binary-Tree" class="headerlink" title="Maximum Depth of Binary Tree"></a>Maximum Depth of Binary Tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">max</span>(maxDepth(root.<span class="keyword">left</span>), maxDepth(root.<span class="keyword">right</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Pow-x-n"><a href="#Pow-x-n" class="headerlink" title="Pow(x, n)"></a>Pow(x, n)</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">myPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dic = [<span class="type">Int</span>:<span class="type">Double</span></span><br><span class="line">        dic[-<span class="number">1</span>] = <span class="number">1</span>/x; dic[<span class="number">0</span>] = <span class="number">1</span>; dic[<span class="number">1</span>] = x</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fastPow(x, n, &amp;dic)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fastPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int, <span class="number">_</span> arr: <span class="keyword">inout</span> [Int:Double])</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> v = arr[n] &#123; <span class="keyword">return</span> v &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> l = n / <span class="number">2</span>, r = n - l</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> arr[l] == <span class="literal">nil</span> &#123;</span><br><span class="line">            arr[l] = fastPow(x, l, &amp;arr)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> arr[r] == <span class="literal">nil</span> &#123;</span><br><span class="line">            arr[r] = fastPow(x, r, &amp;arr)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr[l]! * arr[r]!</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Merge-Two-Sorted-Lists"><a href="#Merge-Two-Sorted-Lists" class="headerlink" title="Merge Two Sorted Lists"></a>Merge Two Sorted Lists</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mergeTwoLists</span><span class="params">(<span class="number">_</span> l1: ListNode?, <span class="number">_</span> l2: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p1 = l1 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l2 &#125;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p2 = l2 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l1 &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> (p, q) = p1.val &lt;= p2.val ? (p1, p2) : (p2, p1)</span><br><span class="line">        p.next = mergeTwoLists(p.next, q)</span><br><span class="line">        <span class="keyword">return</span> p</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="K-th-Symbol-in-Grammar"><a href="#K-th-Symbol-in-Grammar" class="headerlink" title="K-th Symbol in Grammar"></a>K-th Symbol in Grammar</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">kthGrammar</span><span class="params">(<span class="number">_</span> N: Int, <span class="number">_</span> K: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="type">N</span> &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> (kthGrammar(<span class="type">N</span>-<span class="number">1</span>, (<span class="type">K</span>+<span class="number">1</span>)/<span class="number">2</span>) == <span class="number">0</span>) ? <span class="number">1</span>-<span class="type">K</span>%<span class="number">2</span> : <span class="type">K</span>%<span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Unique-Binary-Search-Trees-II"><a href="#Unique-Binary-Search-Trees-II" class="headerlink" title="Unique Binary Search Trees II"></a>Unique Binary Search Trees II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateTrees</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">1</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(<span class="number">1</span>, n)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> i1: Int, <span class="number">_</span> i2:Int)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> i1 &gt; i2 &#123; <span class="keyword">return</span> [<span class="literal">nil</span>] &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> tn = [<span class="type">TreeNode</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> i1...i2 &#123;</span><br><span class="line">            <span class="keyword">let</span> l = helper(i1, i-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">let</span> r = helper(i+<span class="number">1</span>, i2)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> li <span class="keyword">in</span> l &#123;</span><br><span class="line">                <span class="keyword">for</span> ri <span class="keyword">in</span> r &#123;</span><br><span class="line">                    <span class="keyword">let</span> n = <span class="type">TreeNode</span>(i)</span><br><span class="line">                    n.<span class="keyword">left</span> = li</span><br><span class="line">                    n.<span class="keyword">right</span> = ri</span><br><span class="line">                    tn.append(n)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> tn</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Binary Search</title>
    <url>/en/LeetCode-Binary-Search/</url>
    <content><![CDATA[<h2 id="Binary-Search"><a href="#Binary-Search" class="headerlink" title="Binary Search"></a>Binary Search</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123; i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; j = mid-<span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="Sqrt-x"><a href="#Sqrt-x" class="headerlink" title="Sqrt(x)"></a>Sqrt(x)</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mySqrt</span><span class="params">(<span class="number">_</span> x: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> target = <span class="type">Int</span>(sqrt(<span class="type">Double</span>(x)))</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = x</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> mid == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            mid &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Guess-Number-Higher-or-Lower"><a href="#Guess-Number-Higher-or-Lower" class="headerlink" title="Guess Number Higher or Lower"></a>Guess Number Higher or Lower</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> : <span class="title">GuessGame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">guessNumber</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">switch</span> guess(mid) &#123;</span><br><span class="line">                <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">                    j = mid-<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    i = mid+<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> mid</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Search-in-Rotated-Sorted-Array"><a href="#Search-in-Rotated-Sorted-Array" class="headerlink" title="Search in Rotated Sorted Array"></a>Search in Rotated Sorted Array</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j - i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &gt;= nums[i] &#123;</span><br><span class="line">                (target &gt;= nums[i] &amp;&amp; target &lt; nums[mid]) ? (j = mid-<span class="number">1</span>) : (i = mid+<span class="number">1</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                (target &lt;= nums[j] &amp;&amp; target &gt; nums[mid]) ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="First-Bad-Version"><a href="#First-Bad-Version" class="headerlink" title="First Bad Version"></a>First Bad Version</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>: <span class="title">VersionControl</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">firstBadVersion</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> h = i + (j-i)/<span class="number">2</span></span><br><span class="line">            isBadVersion(h) ? (j = h-<span class="number">1</span>) : (i = h + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Find-Peak-Element"><a href="#Find-Peak-Element" class="headerlink" title="Find Peak Element"></a>Find Peak Element</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[mid+<span class="number">1</span>] ? (r = mid) : (l = mid+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> l: Int, <span class="number">_</span> r: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (l == r) &#123; <span class="keyword">return</span> l &#125;</span><br><span class="line">            <span class="keyword">let</span> mid = l + (r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> (nums[mid] &gt; nums[mid+<span class="number">1</span>]) ? search(l, mid) : search(mid+<span class="number">1</span>, r)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> search(<span class="number">0</span>, nums.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Find-Minimum-in-Rotated-Sorted-Array"><a href="#Find-Minimum-in-Rotated-Sorted-Array" class="headerlink" title="Find Minimum in Rotated Sorted Array"></a>Find Minimum in Rotated Sorted Array</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Search-for-a-Range"><a href="#Search-for-a-Range" class="headerlink" title="Search for a Range"></a>Search for a Range</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchRange</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> [-<span class="number">1</span>, -<span class="number">1</span>] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                i = mid; j = mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123;</span><br><span class="line">                i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                j = mid-<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i-<span class="number">1</span> &gt;= <span class="number">0</span>, nums[i-<span class="number">1</span>] == target &#123; i -= <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j+<span class="number">1</span> &lt; nums.<span class="built_in">count</span>, nums[j+<span class="number">1</span>] == target &#123; j += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i] == target ? [i, j] : [-<span class="number">1</span>, -<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Find-K-Closest-Elements"><a href="#Find-K-Closest-Elements" class="headerlink" title="Find K Closest Elements"></a>Find K Closest Elements</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findClosestElements</span><span class="params">(<span class="number">_</span> arr: [Int], <span class="number">_</span> k: Int, <span class="number">_</span> x: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.isEmpty &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = arr.<span class="built_in">count</span>, ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> arr[mid] == x &#123; i = mid &#125;</span><br><span class="line">            arr[mid] &lt; x ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        j = i+k &lt; arr.<span class="built_in">count</span> ? i+k : arr.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        i = (i-k) &gt;= <span class="number">0</span> ? (i-k) : <span class="number">0</span></span><br><span class="line">        ans = <span class="type">Array</span>(arr[i...j])</span><br><span class="line">        <span class="keyword">while</span> ans.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">            <span class="built_in">abs</span>(x-ans.first!) &lt;= <span class="built_in">abs</span>(x-ans.last!) ? ans.removeLast() : ans.removeFirst()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Closest-Binary-Search-Tree-Value"><a href="#Closest-Binary-Search-Tree-Value" class="headerlink" title="Closest Binary Search Tree Value"></a>Closest Binary Search Tree Value</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">closestValue</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> target: Double)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = root, v = p!.val</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">abs</span>(<span class="type">Double</span>(p!.val)-target) &lt; <span class="built_in">abs</span>(<span class="type">Double</span>(v)-target) &#123; v = p!.val &#125;</span><br><span class="line">            p = target &lt; <span class="type">Double</span>(p!.val) ? p!.<span class="keyword">left</span> : p!.<span class="keyword">right</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Search-in-a-Sorted-Array-of-Unknown-Size"><a href="#Search-in-a-Sorted-Array-of-Unknown-Size" class="headerlink" title="Search in a Sorted Array of Unknown Size"></a>Search in a Sorted Array of Unknown Size</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> reader: ArrayReader, <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> reader.<span class="keyword">get</span>(<span class="number">0</span>) == target &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> reader.<span class="keyword">get</span>(j) &lt; target &#123;</span><br><span class="line">            i = j; j &lt;&lt;= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)&gt;&gt;<span class="number">1</span>, v = reader.<span class="keyword">get</span>(mid)</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            v &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Pow-x-n"><a href="#Pow-x-n" class="headerlink" title="Pow(x, n)"></a>Pow(x, n)</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">myPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="number">0</span>: <span class="number">1.0</span>, <span class="number">1</span>: x]</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">fastPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n] &#123; <span class="keyword">return</span> v &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> h = fastPow(x, n/<span class="number">2</span>), v = n&amp;<span class="number">1</span> == <span class="number">0</span> ? h*h : x*h*h</span><br><span class="line">            dict[n] = v</span><br><span class="line">            <span class="keyword">return</span> v</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> v = fastPow(x, <span class="built_in">abs</span>(n))</span><br><span class="line">        <span class="keyword">return</span> n &lt; <span class="number">0</span> ? <span class="number">1</span>/v : v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Valid-Perfect-Square"><a href="#Valid-Perfect-Square" class="headerlink" title="Valid Perfect Square"></a>Valid Perfect Square</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isPerfectSquare</span><span class="params">(<span class="number">_</span> num: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> x = (num+<span class="number">1</span>)/<span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> x*x &gt; num &#123;</span><br><span class="line">            x = (x + num/x) / <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> x*x == num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Find-Smallest-Letter-Greater-Than-Target"><a href="#Find-Smallest-Letter-Greater-Than-Target" class="headerlink" title="Find Smallest Letter Greater Than Target"></a>Find Smallest Letter Greater Than Target</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">nextGreatestLetter</span><span class="params">(<span class="number">_</span> letters: [Character], <span class="number">_</span> target: Character)</span></span> -&gt; <span class="type">Character</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">c</span> <span class="keyword">in</span> letters &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">c</span> &gt; target &#123; <span class="keyword">return</span> <span class="built_in">c</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> letters.first!</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Find-Minimum-in-Rotated-Sorted-Array-1"><a href="#Find-Minimum-in-Rotated-Sorted-Array-1" class="headerlink" title="Find Minimum in Rotated Sorted Array"></a>Find Minimum in Rotated Sorted Array</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            nums[mid] &gt;= nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Find-Minimum-in-Rotated-Sorted-Array-II"><a href="#Find-Minimum-in-Rotated-Sorted-Array-II" class="headerlink" title="Find Minimum in Rotated Sorted Array II"></a>Find Minimum in Rotated Sorted Array II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] &gt; nums[r] &#123; l = mid+<span class="number">1</span> &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; nums[r]  &#123; r = mid &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123; r -= <span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Intersection-of-Two-Arrays"><a href="#Intersection-of-Two-Arrays" class="headerlink" title="Intersection of Two Arrays"></a>Intersection of Two Arrays</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Intersection-of-Two-Arrays-II"><a href="#Intersection-of-Two-Arrays-II" class="headerlink" title="Intersection of Two Arrays II"></a>Intersection of Two Arrays II</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Two-Sum-II-Input-array-is-sorted"><a href="#Two-Sum-II-Input-array-is-sorted" class="headerlink" title="Two Sum II - Input array is sorted"></a>Two Sum II - Input array is sorted</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(<span class="number">_</span> numbers: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = numbers.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> v =  numbers[i]+numbers[j]</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            v &lt; target ? (i+=<span class="number">1</span>) : (j-=<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> [i+<span class="number">1</span>, j+<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Find-the-Duplicate-Number"><a href="#Find-the-Duplicate-Number" class="headerlink" title="Find the Duplicate Number"></a>Find the Duplicate Number</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;(), i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(nums[i]) &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(nums[i]); i+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Median-of-Two-Sorted-Arrays"><a href="#Median-of-Two-Sorted-Arrays" class="headerlink" title="Median of Two Sorted Arrays"></a>Median of Two Sorted Arrays</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> nums = nums1+nums2</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span>, j &lt; nums2.<span class="built_in">count</span> &#123;</span><br><span class="line">            nums1[i] &lt; nums2[j] ? (nums[k] = nums1[i], i+=<span class="number">1</span>) : (nums[k] = nums2[j], j+=<span class="number">1</span>); k+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span> &#123; nums[k] = nums1[i]; i+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j &lt; nums2.<span class="built_in">count</span> &#123; nums[k] = nums2[j]; j+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> h = nums.<span class="built_in">count</span>/<span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">count</span>&amp;<span class="number">1</span> == <span class="number">1</span> ? <span class="type">Double</span>(nums[h]) : <span class="type">Double</span>(nums[h-<span class="number">1</span>]+nums[h])/<span class="number">2.0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Find-K-th-Smallest-Pair-Distance"><a href="#Find-K-th-Smallest-Pair-Distance" class="headerlink" title="Find K-th Smallest Pair Distance"></a>Find K-th Smallest Pair Distance</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">smallestDistancePair</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> nums = nums.sorted()</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, h = nums.last!-nums.first!</span><br><span class="line">        <span class="keyword">while</span> l &lt; h &#123;</span><br><span class="line">            <span class="keyword">let</span> m = (l+h)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span>, l1 = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> r1 <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (nums[r1]-nums[l1]) &gt; m &#123; l1 += <span class="number">1</span> &#125;</span><br><span class="line">                <span class="built_in">count</span> += r1-l1</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">count</span> &gt;= k ? (h = m): (l = m+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Split-Array-Largest-Sum"><a href="#Split-Array-Largest-Sum" class="headerlink" title="Split Array Largest Sum"></a>Split Array Largest Sum</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode N-ary Tree</title>
    <url>/en/leetcode-n-ary-tree/</url>
    <content><![CDATA[<h2 id="N-ary-Tree-Preorder-Traversal"><a href="#N-ary-Tree-Preorder-Traversal" class="headerlink" title="N-ary Tree Preorder Traversal"></a>N-ary Tree Preorder Traversal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    	<span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children.reversed()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="N-and-Tree-Postorder-Traversal"><a href="#N-and-Tree-Postorder-Traversal" class="headerlink" title="N-and Tree Postorder Traversal"></a>N-and Tree Postorder Traversal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">postorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    	<span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans.reversed()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="N-ary-Tree-Level-Order-Traversal"><a href="#N-ary-Tree-Level-Order-Traversal" class="headerlink" title="N-ary Tree Level Order Traversal"></a>N-ary Tree Level Order Traversal</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> cur = [root], ans = [[root.val]]</span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            <span class="keyword">let</span> children = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            <span class="keyword">if</span> !children.isEmpty &#123; ans.append( children.<span class="built_in">map</span> &#123; $<span class="number">0</span>.val &#125; ) &#125;</span><br><span class="line">            cur = children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Maximum-Depth-of-N-ary-Tree"><a href="#Maximum-Depth-of-N-ary-Tree" class="headerlink" title="Maximum Depth of N-ary Tree"></a>Maximum Depth of N-ary Tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> cur = root == <span class="literal">nil</span> ? [] : [root!], depth = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            cur = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            depth += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> depth</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Encode-N-ary-Tree-to-Binary-Tree"><a href="#Encode-N-ary-Tree-to-Binary-Tree" class="headerlink" title="Encode N-ary Tree to Binary Tree"></a>Encode N-ary Tree to Binary Tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">encode</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> tn = <span class="type">TreeNode</span>(root.val); <span class="keyword">var</span> p: <span class="type">TreeNode?</span> = tn</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> n = root.children.first &#123;</span><br><span class="line">            p?.<span class="keyword">left</span> = encode(n); p = p?.<span class="keyword">left</span></span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> root.children[<span class="number">1</span>...] &#123;</span><br><span class="line">                p?.<span class="keyword">right</span> = encode(n); p = p?.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tn</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">decode</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = <span class="type">Node</span>(root.val); <span class="keyword">var</span> p = root.<span class="keyword">left</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> l = decode(p) &#123; n.children.append(l) &#125;</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> q = p?.<span class="keyword">right</span>, <span class="keyword">let</span> r = decode(q) &#123;</span><br><span class="line">            n.children.append(r); p = q</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Serialize-and-Deserialize-N-ary-Tree"><a href="#Serialize-and-Deserialize-N-ary-Tree" class="headerlink" title="Serialize and Deserialize N-ary Tree"></a>Serialize and Deserialize N-ary Tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">serialize</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="string">&quot;$&quot;</span> &#125;</span><br><span class="line">    	<span class="keyword">var</span> s = <span class="string">&quot;\(root.val),\(root.children.count),&quot;</span></span><br><span class="line">        <span class="keyword">for</span> child <span class="keyword">in</span> root.children &#123;</span><br><span class="line">            s += serialize(child)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">(<span class="number">_</span> data: String)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> arr = data.components(separatedBy: <span class="string">&quot;,&quot;</span>).<span class="built_in">compactMap</span> &#123; <span class="type">Int</span>($<span class="number">0</span>) &#125;; <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">()</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> i &gt;= arr.<span class="built_in">count</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">Node</span>(arr[i])</span><br><span class="line">            i += <span class="number">2</span>; <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;arr[i-<span class="number">1</span>] &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> a = deserialize() &#123; n.children.append(a) &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deserialize()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Binary Search Tree</title>
    <url>/en/LeetCode-Binary-Search-Tree/</url>
    <content><![CDATA[<h2 id="Verify-Binary-Search-Tree"><a href="#Verify-Binary-Search-Tree" class="headerlink" title="Verify Binary Search Tree"></a>Verify Binary Search Tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidBST</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">max</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> node: TreeNode?, <span class="number">_</span> lower: Int, <span class="number">_</span> upper: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> n = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> n.val &lt;= lower || n.val &gt;= upper &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper(n.<span class="keyword">left</span>, lower, n.val) &amp;&amp; helper(n.<span class="keyword">right</span>, n.val, upper)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Binary-search-tree-iterator"><a href="#Binary-search-tree-iterator" class="headerlink" title="Binary search tree iterator"></a>Binary search tree iterator</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BSTIterator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> queue = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        helper(root.<span class="keyword">left</span>)</span><br><span class="line">        queue.append(root.val)</span><br><span class="line">        helper(root.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> root: <span class="type">TreeNode?</span>) &#123;</span><br><span class="line">        helper(root)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">next</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> queue.removeFirst()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasNext</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !queue.isEmpty</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Search-in-binary-search-tree"><a href="#Search-in-binary-search-tree" class="headerlink" title="Search in binary search tree"></a>Search in binary search tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == val &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">left</span>, val)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">right</span>, val)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Insert-operation-in-binary-search-tree"><a href="#Insert-operation-in-binary-search-tree" class="headerlink" title="Insert operation in binary search tree"></a>Insert operation in binary search tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insertIntoBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> root: TreeNode? = root, <span class="number">_</span> val: Int = val)</span></span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> l = root.<span class="keyword">left</span> &#123;</span><br><span class="line">                    insert(l, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">left</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> r = root.<span class="keyword">right</span> &#123;</span><br><span class="line">                    insert(r, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">right</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        insert()</span><br><span class="line">        <span class="keyword">return</span> root ?? <span class="type">TreeNode</span>(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Delete-the-node-in-the-binary-search-tree"><a href="#Delete-the-node-in-the-binary-search-tree" class="headerlink" title="Delete the node in the binary search tree"></a>Delete the node in the binary search tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deleteNode</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == key &#123;</span><br><span class="line">            <span class="keyword">if</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> != <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> p = root.<span class="keyword">right</span></span><br><span class="line">                <span class="keyword">while</span> p?.<span class="keyword">left</span> != <span class="literal">nil</span> &#123;  p = p?.<span class="keyword">left</span> &#125;</span><br><span class="line">                p?.<span class="keyword">left</span> = root.<span class="keyword">left</span></span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">right</span></span><br><span class="line">            &#125; <span class="keyword">else</span>  &#123;</span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> ? root.<span class="keyword">left</span> : root.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> key &lt; root.val &#123;</span><br><span class="line">            root.<span class="keyword">left</span> = deleteNode(root.<span class="keyword">left</span>, key)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            root.<span class="keyword">right</span> = deleteNode(root.<span class="keyword">right</span>, key)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="The-Kth-largest-element-in-the-data-stream"><a href="#The-Kth-largest-element-in-the-data-stream" class="headerlink" title="The Kth largest element in the data stream"></a>The Kth largest element in the data stream</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KthLargest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">var</span> k = <span class="number">0</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> k: <span class="type">Int</span>, <span class="number">_</span> nums: [<span class="type">Int</span>]) &#123;</span><br><span class="line">        <span class="keyword">self</span>.k = k</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123; add(i) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.<span class="built_in">count</span> &lt; k || val &gt; arr.first! &#123;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> i &lt; arr.<span class="built_in">count</span>, val &gt; arr[i] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            arr.insert(val, at: i)</span><br><span class="line">            <span class="keyword">if</span> arr.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">                arr.removeFirst()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr.first!</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Nearest-common-ancestor-of-binary-search-tree"><a href="#Nearest-common-ancestor-of-binary-search-tree" class="headerlink" title="Nearest common ancestor of binary search tree"></a>Nearest common ancestor of binary search tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">lowestCommonAncestor</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root, <span class="keyword">let</span> pv = p?.val, <span class="keyword">let</span> qv = q?.val <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val &gt;= <span class="built_in">min</span>(pv, qv) &amp;&amp; root.val &lt;= <span class="built_in">max</span>(pv, qv) &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">return</span> root.val &gt; <span class="built_in">max</span>(pv, qv) ? lowestCommonAncestor(root.<span class="keyword">left</span>, p, q) : lowestCommonAncestor(root.<span class="keyword">right</span>, p, q)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="There-are-duplicate-elements-III"><a href="#There-are-duplicate-elements-III" class="headerlink" title="There are duplicate elements III"></a>There are duplicate elements III</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Balanced-binary-tree"><a href="#Balanced-binary-tree" class="headerlink" title="Balanced binary tree"></a>Balanced binary tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isBalanced</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root).<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; (<span class="type">Int</span>, <span class="type">Bool</span>) &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> r = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> (<span class="number">0</span>, <span class="literal">true</span>) &#125;</span><br><span class="line">        <span class="keyword">let</span> rl = helper(r.<span class="keyword">left</span>), rr = helper(r.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span> + <span class="built_in">max</span>(rl.<span class="number">0</span>, rr.<span class="number">0</span>), rl.<span class="number">1</span> &amp;&amp; rr.<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(rl.<span class="number">0</span> - rr.<span class="number">0</span>) &lt;= <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Convert-an-ordered-array-to-a-binary-search-tree"><a href="#Convert-an-ordered-array-to-a-binary-search-tree" class="headerlink" title="Convert an ordered array to a binary search tree"></a>Convert an ordered array to a binary search tree</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortedArrayToBST</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = nums.<span class="built_in">count</span>, h = n/<span class="number">2</span>, h1 = h+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> r = <span class="type">TreeNode</span>(nums[n/<span class="number">2</span>])</span><br><span class="line">        r.<span class="keyword">left</span> = sortedArrayToBST(<span class="type">Array</span>(nums[<span class="number">0</span>..&lt;h]))</span><br><span class="line">        r.<span class="keyword">right</span> = sortedArrayToBST(<span class="type">Array</span>(nums[h1...]))</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Hash Table</title>
    <url>/en/LeetCode-Hash-Table/</url>
    <content><![CDATA[<h2 id="Design-HashSet"><a href="#Design-HashSet" class="headerlink" title="Design HashSet"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashSet">Design HashSet</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: <span class="literal">false</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">         bucket[key] = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">contains</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="Design-HashMap"><a href="#Design-HashMap" class="headerlink" title="Design HashMap"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashMap">Design HashMap</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashMap</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: -<span class="number">1</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> key: Int, <span class="number">_</span> value: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">get</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Contains-Duplicate"><a href="#Contains-Duplicate" class="headerlink" title="Contains Duplicate"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate">Contains Duplicate</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(i) &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(i)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Single-Number"><a href="#Single-Number" class="headerlink" title="Single Number"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Single-Number">Single Number</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">singleNumber</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> ^ $<span class="number">1</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Intersection-of-Two-Arrays"><a href="#Intersection-of-Two-Arrays" class="headerlink" title="Intersection of Two Arrays"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-Arrays">Intersection of Two Arrays</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Happy-Number"><a href="#Happy-Number" class="headerlink" title="Happy Number"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Happy-Number">Happy Number</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> setI = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isHappy</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = n, r = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &gt; <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> t = i%<span class="number">10</span></span><br><span class="line">            r += t*t</span><br><span class="line">            i /= <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> setI.<span class="built_in">contains</span>(r) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        setI.insert(r)</span><br><span class="line">        <span class="keyword">return</span> isHappy(r)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Minimum-Index-Sum-of-Two-Lists"><a href="#Minimum-Index-Sum-of-Two-Lists" class="headerlink" title="Minimum Index Sum of Two Lists"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Minimum-Index-Sum-of-Two-Lists">Minimum Index Sum of Two Lists</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 452 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict2 = [<span class="type">String</span>: <span class="type">Int</span>](), least = <span class="type">Int</span>.<span class="built_in">max</span>, arr = [<span class="type">String</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list2.<span class="built_in">count</span> &#123;</span><br><span class="line">            dict2[ list2[i] ] = i</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list1.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> j = dict2[ list1[i] ] &#123;</span><br><span class="line">                <span class="keyword">let</span> n = i+j</span><br><span class="line">                <span class="keyword">if</span> n &lt; least &#123;</span><br><span class="line">                    arr = [list1[i]]</span><br><span class="line">                    least = n</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> n == least &#123;</span><br><span class="line">                    arr.append(list1[i])</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2104 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> dict1 = list1.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict2 = list2.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict = <span class="type">Set</span>(dict1.keys).intersection(dict2.keys).<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>] = dict1[$<span class="number">1</span>]! + dict2[$<span class="number">1</span>]! &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value == dict.<span class="built_in">map</span>(&#123; $<span class="number">0</span>.value &#125;).<span class="built_in">min</span>()  &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.key &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Intersection-of-Two-Arrays-II"><a href="#Intersection-of-Two-Arrays-II" class="headerlink" title="Intersection of Two Arrays II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-Arrays-II">Intersection of Two Arrays II</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span>](), ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Contains-Duplicate-II"><a href="#Contains-Duplicate-II" class="headerlink" title="Contains Duplicate II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate-II">Contains Duplicate II</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsNearbyDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: [<span class="type">Int</span>]]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> n = nums[i]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> arr = dict[n] &#123;</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> arr &#123;</span><br><span class="line">                    <span class="keyword">if</span> i-j &lt;= k &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                dict[n] = arr + [i]</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dict[n] = [i]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Logger-Rate-Limiter"><a href="#Logger-Rate-Limiter" class="headerlink" title="Logger Rate Limiter"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Logger-Rate-Limiter">Logger Rate Limiter</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> logs = [<span class="type">String</span>: <span class="type">Int</span>]()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">shouldPrintMessage</span><span class="params">(<span class="number">_</span> timestamp: Int, <span class="number">_</span> message: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> lastTimestamp = logs[message], timestamp - lastTimestamp &lt; <span class="number">10</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        logs[message] = timestamp</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Group-Shifted-Strings"><a href="#Group-Shifted-Strings" class="headerlink" title="Group Shifted Strings"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Group-Shifted-Strings">Group Shifted Strings</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">groupStrings</span><span class="params">(<span class="number">_</span> strings: [String])</span></span> -&gt; [[<span class="type">String</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [[<span class="type">Int</span>]: [<span class="type">String</span>]]()</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> strings &#123;</span><br><span class="line">            <span class="keyword">let</span> arrS = <span class="type">Array</span>(s)</span><br><span class="line">            <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">1</span>..&lt;arrS.<span class="built_in">count</span>) &#123;</span><br><span class="line">                arr.append((<span class="type">Int</span>(arrS[i].asciiValue!)-<span class="type">Int</span>(arrS[i-<span class="number">1</span>].asciiValue!)+<span class="number">26</span>)%<span class="number">26</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            dict[arr, <span class="keyword">default</span>: []] += [s]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Valid-Sudoku"><a href="#Valid-Sudoku" class="headerlink" title="Valid Sudoku"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Valid-Sudoku">Valid Sudoku</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidSudoku</span><span class="params">(<span class="number">_</span> board: [[Character]])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[i].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[i].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[j].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[j].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> setC = <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;()</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                        <span class="keyword">let</span> <span class="built_in">c</span> = board[i*<span class="number">3</span>+k][j*<span class="number">3</span>+l]</span><br><span class="line">                        <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                        <span class="keyword">if</span> setC.<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            setC.insert(<span class="built_in">c</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Find-Duplicate-Subtrees"><a href="#Find-Duplicate-Subtrees" class="headerlink" title="Find Duplicate Subtrees"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Find-Duplicate-Subtrees">Find Duplicate Subtrees</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicateSubtrees</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        dfs(root)</span><br><span class="line">        <span class="keyword">return</span> nodeDict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value.<span class="number">1</span> &gt; <span class="number">1</span> &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value.<span class="number">0</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> nodeDict = [[<span class="type">Int?</span>]: (<span class="type">TreeNode</span>, <span class="type">Int</span>)]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">dfs</span><span class="params">(<span class="number">_</span> node: TreeNode?)</span></span> -&gt; [<span class="type">Int?</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> node = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> [<span class="literal">nil</span>] &#125;</span><br><span class="line">        <span class="keyword">let</span> key: [<span class="type">Int?</span>] = [node.val] + dfs(node.<span class="keyword">left</span>) + dfs(node.<span class="keyword">right</span>)</span><br><span class="line">        nodeDict[key, <span class="keyword">default</span>: (node, <span class="number">0</span>)].<span class="number">1</span> += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> key</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Jewels-and-Stones"><a href="#Jewels-and-Stones" class="headerlink" title="Jewels and Stones"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Jewels-and-Stones">Jewels and Stones</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">numJewelsInStones</span><span class="params">(<span class="number">_</span> J: String, <span class="number">_</span> S: String)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> j = <span class="type">Set</span>(<span class="type">J</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">S</span>.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + (j.<span class="built_in">contains</span>($<span class="number">1</span>) ? <span class="number">1</span> : <span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Longest-Substring-Without-Repeating-Characters"><a href="#Longest-Substring-Without-Repeating-Characters" class="headerlink" title="Longest Substring Without Repeating Characters"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Longest-Substring-Without-Repeating-Characters">Longest Substring Without Repeating Characters</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Two-Sum-III-Data-structure-design"><a href="#Two-Sum-III-Data-structure-design" class="headerlink" title="Two Sum III - Data structure design"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Two-Sum-III---Data-structure-design">Two Sum III - Data structure design</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TwoSum</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> numbers = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> number: Int)</span></span> &#123;</span><br><span class="line">        numbers[number, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">find</span><span class="params">(<span class="number">_</span> value: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (k, v) <span class="keyword">in</span> numbers &#123;</span><br><span class="line">            <span class="keyword">let</span> rest = value-k</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> num = numbers[rest], (num &gt; ((rest == k) ? <span class="number">1</span> : <span class="number">0</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4Sum-II"><a href="#4Sum-II" class="headerlink" title="4Sum II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#4Sum-II">4Sum II</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fourSumCount</span><span class="params">(<span class="number">_</span> A: [Int], <span class="number">_</span> B: [Int], <span class="number">_</span> C: [Int], <span class="number">_</span> D: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">0</span>, ab = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">A</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">B</span> &#123;</span><br><span class="line">                ab[i+j, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">C</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">D</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> v = ab[-i-j] &#123; num += v &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Top-K-Frequent-Elements"><a href="#Top-K-Frequent-Elements" class="headerlink" title="Top K Frequent Elements"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Top-K-Frequent-Elements">Top K Frequent Elements</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">topKFrequent</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(into: [<span class="type">Int</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span> &#125;.sorted(by: &#123;$<span class="number">0</span>.value &gt; $<span class="number">1</span>.value&#125;)[..&lt;k].<span class="built_in">map</span>&#123;$<span class="number">0</span>.key&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Unique-Word-Abbreviation"><a href="#Unique-Word-Abbreviation" class="headerlink" title="Unique Word Abbreviation"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Unique-Word-Abbreviation">Unique Word Abbreviation</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ValidWordAbbr</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> abbrDict = [<span class="type">String</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;]()</span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> dictionary: [<span class="type">String</span>]) &#123;</span><br><span class="line">        dictionary.forEach &#123; abbrDict[abbreviate($<span class="number">0</span>), <span class="keyword">default</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;()].insert($<span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isUnique</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> abbrSet = abbrDict[abbreviate(word)] &#123;</span><br><span class="line">            <span class="keyword">return</span> abbrSet.<span class="built_in">contains</span>(word) &amp;&amp; abbrSet.<span class="built_in">count</span> == <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">abbreviate</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> word.<span class="built_in">count</span> &lt; <span class="number">3</span> ? word : (<span class="type">String</span>(word.first!) + <span class="type">String</span>(word.<span class="built_in">count</span>-<span class="number">2</span>) + <span class="type">String</span>(word.last!))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Insert-Delete-GetRandom-O-1"><a href="#Insert-Delete-GetRandom-O-1" class="headerlink" title="Insert Delete GetRandom O(1)"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Insert-Delete-GetRandom-O(1)">Insert Delete GetRandom O(1)</a></h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 220 ms, 30.27%</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RandomizedSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> vals = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.insert(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> !vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.remove(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getRandom</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> vals.randomElement() ?? <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Swift</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>How to reduce iCloud storage by shrinking videos</title>
    <url>/en/How-to-reduce-iCloud-storage-by-shrink-videos/</url>
    <content><![CDATA[<p>In fact, subtracting unnecessary clips from 4k video can save space more effectively </p>
<hr>
<p>When I gallery videos in “Photos”, it will show when and where I took them </p>
<p>This is a great feature that can help me recall my memories<br>But the original 4k takes up too much space in iCloud </p>
<p>For example, even with HEVC (High Efficiency Video Coding), a 2:30 video will occupy 1GB of space<br>My 200G iCloud plan is almost full ​​ </p>
<p>Therefore, I plan to compress the video a bit to save some space. </p>
<a id="more"></a>

<p>but, </p>
<h2 id="FFmpeg-converts-video-even-if-there-is-metadata-GPS-will-be-lost"><a href="#FFmpeg-converts-video-even-if-there-is-metadata-GPS-will-be-lost" class="headerlink" title="FFmpeg converts video, even if there is metadata, GPS will be lost"></a>FFmpeg converts video, even if there is metadata, GPS will be lost</h2><p>Fortunately, I found a way </p>
<h3 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h3><ul>
<li>FFmpeg </li>
<li>Exiftool </li>
</ul>
<h4 id="Export-original-video-to-folder"><a href="#Export-original-video-to-folder" class="headerlink" title="Export original video to folder"></a>Export original video to folder</h4><p>The common way to drag a video from “Photo” to a folder is to let “Photo” convert the video </p>
<p>Therefore, you must select all the videos you want to export, </p>
<p><code>File -&gt; Export -&gt; Export Unmodified Original For...</code> </p>
<h4 id="Shrink-each-video"><a href="#Shrink-each-video" class="headerlink" title="Shrink each video"></a>Shrink each video</h4><p>iPhone default stream is </p>
<p><code># 0: 0 (and): Video: hevc (Main) (hvc1 / 0x31637668), yuv420p (tv, bt709)</code> </p>
<p>So using <code>-pix_fmt yuv420p10le</code> to re-encode to 10bit does not help </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">ffmov</span></span>() &#123;</span><br><span class="line">    mkdir -p shrunk</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ffmpeg with h265 </span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v libx265 -crf 28 -c:a copy -c:s copy -tag:v hvc1 shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    overwriteExif <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># copy Exif info from the original video to the shrunk *.mov </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## walk through all *.mov </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$f</span></span><br><span class="line">        ffmov <span class="variable">$f</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Then, you can copy and paste these codes into <code>Terminal</code> and <code>cd VideoFolder</code>, then <code>shrinkVideos</code> </p>
<p>Shrinking will take a long time </p>
<p>On my MacBook Pro (15 inches, 2018), it’s only 0.3 times<br>But usually, the video will be reduced by 5 times without losing too much quality </p>
<p>When all is done, the reduced video will be located under the <code>shrunk/</code> folder </p>
<p>You can then compare them and delete the original video before importing the reduced video </p>
<p>Okay, in the end I can’t stand the extremely slow speed, so I use Nvidia 1080 GPU for acceleration to learn more: [CUDA GPU Accelerated h264/h265/HEVC Video Encoding with Staxrip](<a href="https://leihao0.github.io">https://leihao0.github.io</a> /CUDA-GPU-Accelerated-h264-h265-HEVC-Video-Encoding-with-Staxrip/) </p>
<p>The next step is to mark the converted video as <code>hvc1</code>, otherwise, an error will occur when importing photos: </p>
<p><strong>Invalid: The operation couldn’t be completed. (PHPhotosErrorDomain error -1.)</strong> </p>
<p>So the whole step is </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">ffhvc1</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> -&gt; <span class="variable">$1</span>.mov&quot;</span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v copy -c:a copy -c:s copy -tag:v hvc1 <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>.mov -&gt; <span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm <span class="string">&quot;<span class="variable">$1</span>&quot;</span>; mv <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line">    <span class="comment"># copy Exif info from the original video to the shrunk *.mov </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## walk through all *.mov </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">        ffhvc1 <span class="string">&quot;shrunk/<span class="variable">$f</span>&quot;</span></span><br><span class="line">        overwriteExif <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># use Staxrip to convert all videos to shrunk/ </span></span><br><span class="line"><span class="comment"># then run `shrinkVideos` </span></span><br></pre></td></tr></table></figure>

<hr>
<p>hope it helps you </p>
]]></content>
      <tags>
        <tag>FFmpeg</tag>
        <tag>Exiftool</tag>
        <tag>iCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>SwiftUI Tips</title>
    <url>/en/SwiftUI-Tips/</url>
    <content><![CDATA[<h2 id="Binding-to-UserDefaults"><a href="#Binding-to-UserDefaults" class="headerlink" title="Binding to UserDefaults"></a>Binding to UserDefaults</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UD</span>: <span class="title">ObservableObject</span> </span>&#123;</span><br><span class="line">    @<span class="type">Published</span> <span class="keyword">var</span> date: <span class="type">Date</span> = <span class="type">UserDefaults</span>.standard.value(forKey: <span class="string">&quot;date&quot;</span>) <span class="keyword">as</span>? <span class="type">Date</span> ?? <span class="type">Date</span>() &#123;</span><br><span class="line">        <span class="keyword">didSet</span> &#123;</span><br><span class="line">            <span class="type">UserDefaults</span>.standard.<span class="keyword">set</span>(<span class="keyword">self</span>.date, forKey: <span class="string">&quot;date&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="AppDelegate-gt-SceneDelegate"><a href="#AppDelegate-gt-SceneDelegate" class="headerlink" title="AppDelegate -&gt; SceneDelegate"></a>AppDelegate -&gt; SceneDelegate</h2><p>Many Delegates moved from <code>AppDelegate.swift</code> to <code>SceneDelegate.swift</code> </p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> app: UIApplication, <span class="keyword">open</span> url: URL, options: [UIApplication.OpenURLOptionsKey : <span class="keyword">Any</span>] = [:])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// to</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">scene</span><span class="params">(<span class="number">_</span> scene: UIScene, openURLContexts URLContexts: Set&lt;UIOpenURLContext&gt;)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="NavigationView-NavigationBarItems-NavigationLink"><a href="#NavigationView-NavigationBarItems-NavigationLink" class="headerlink" title="NavigationView, NavigationBarItems, NavigationLink"></a>NavigationView, NavigationBarItems, NavigationLink</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ContentView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">EnvironmentObject</span> <span class="keyword">var</span> ud: <span class="type">UD</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> url = <span class="string">&quot;Title:status?date=\(String(ud.firstDate.timeIntervalSince1970))&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                qrCodeImage(<span class="keyword">for</span>: url)!</span><br><span class="line"></span><br><span class="line">                <span class="type">Spacer</span>().frame(height: <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">                <span class="type">Text</span>(<span class="string">&quot;\(ud.firstDate)&quot;</span>)</span><br><span class="line">            &#125;.navigationBarTitle(<span class="string">&quot;Title&quot;</span>)</span><br><span class="line">                .navigationBarItems(trailing:</span><br><span class="line">                    <span class="type">HStack</span> &#123;</span><br><span class="line">                        <span class="type">NavigationLink</span>(destination: <span class="type">PickerView</span>(firstDate: $ud.firstDate)) &#123;</span><br><span class="line">                            <span class="type">Image</span>(systemName: <span class="string">&quot;gear&quot;</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="PickerView-Binding"><a href="#PickerView-Binding" class="headerlink" title="PickerView Binding"></a>PickerView Binding</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PickerView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">Binding</span> <span class="keyword">var</span> date: <span class="type">Date</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                <span class="type">DatePicker</span>(selection: $date, <span class="keyword">in</span>: ...<span class="type">Date</span>(), displayedComponents: .date) &#123;</span><br><span class="line">                    <span class="type">Text</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Fix-SwiftUI-Image-Blank-View"><a href="#Fix-SwiftUI-Image-Blank-View" class="headerlink" title="Fix SwiftUI Image Blank View"></a>Fix SwiftUI Image Blank View</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ciContext = <span class="type">CIContext</span>()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">qrCodeImage</span><span class="params">(<span class="keyword">for</span> string: String)</span></span> -&gt; <span class="type">Image?</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> data = string.data(using: <span class="type">String</span>.<span class="type">Encoding</span>.utf8)</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> qrFilter = <span class="type">CIFilter</span>(name: <span class="string">&quot;CIQRCodeGenerator&quot;</span>) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">    qrFilter.setValue(data, forKey: <span class="string">&quot;inputMessage&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">10</span>, y: <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> ciImage = qrFilter.outputImage?.transformed(by: transform) <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cgImage = ciContext.createCGImage(ciImage, from: ciImage.extent)</span><br><span class="line">    <span class="comment">// convert to UIImage</span></span><br><span class="line">    <span class="keyword">let</span> uiImage = <span class="type">UIImage</span>(cgImage: cgImage!)</span><br><span class="line">    <span class="keyword">let</span> image = <span class="type">Image</span>(uiImage: uiImage)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> image</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>SwiftUI</tag>
      </tags>
  </entry>
  <entry>
    <title>Cemetery Book</title>
    <url>/en/The-Graveyard-Book/</url>
    <content><![CDATA[<h1 id="Amusement-Park-🎠-Book"><a href="#Amusement-Park-🎠-Book" class="headerlink" title="Amusement Park 🎠 Book"></a>Amusement Park 🎠 Book</h1><div style="width: 300px">
<img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/The%20Graveyard%20Book.jpg" />
</div>

<p>Children have no concept of life and death, and the cemetery is more like an amusement park for them </p>
<a id="more"></a>

<hr>
<p>Thank you 🙏 🐼 reader for sending another book </p>
<p>Ashamed, the number of readings plummeted after going abroad<br>From hundreds of books per year before suddenly to single digits now </p>
<p>Think about the boastful saying that reading should not be utilitarian, but should be driven by interest<br>Now it’s really slap in the face </p>
<p>But there are also objective reasons: </p>
<p>One is that most of the books I want to read now have original editions<br>Since there is the original version, I don’t really want to see the translated version </p>
<p>Secondly, I was on a phone call and was heard by a friend from the National University of Singapore<br>After that, she repeatedly despised “Your Plastic English” </p>
<p>But I have my stubbornness, slow is slow, but I stick to the original version<br>There should be one day I can get up as fast as Chinese books </p>
<p>The third is that Po County is an island, and there is no such thing as the good mountains and rivers abroad, so lonely as the gods say<br>And at the beginning of this epidemic, I once thought that this place was a developed country in a mess<br>In addition, it is summer all year round, except for the hotter, other things are quite comfortable<br>The blue sky and white clouds, heavy rain and thunder, feel like time is frozen, it’s good </p>
<p>Without utilitarianism, naturally there is no motivation to read </p>
<p>Circuit Breaker is now, so I have some time and mood </p>
<hr>
<p>I got this book first<br>I thought it was science fiction at the beginning<br>I heard that I could be invisible and thought it was fantasy<br>I thought it was love when I met sister paper<br>Went to school and thought it was a campus<br>Dad came to the game and thought it was a parent-child<br>The whole family was killed and thought it was suspense<br>In the end, I was talking about growth </p>
<p>As the last author wrote: </p>
<blockquote>
<p>I finished the sixth chapter, “Bertie’s School Days” in a shabby hotel in New Orleans. I finished the last page in the gazebo in my garden, holding back tears while writing. Only at that moment, I understood why I didn’t write this book when I was a father. Because before creating, I have to accompany my children through their growth process, nurture them, love them, and finally learn to let go </p>
</blockquote>
<hr>
<p>In addition, it’s hard to get involved in the reading process<br>The whole book keeps giving me the feeling of a Harry Potter copy </p>
<p>But there is a significant difference in reading this time<br>In the past, when reading such novels, I often entered the book from the perspective of the protagonist<br>With age<br>This time it’s more from Silas’ perspective </p>
<p>If this book is a common fantasy routine in China<br>Bod will definitely pick up sister Scarlett, tame Sleer, become Master, tear Jack, sit as Brotherhood boss </p>
<p>However, none of this happened in Neil, who wrote about the American Gods.<br>After Bod played the monster 👾, the sister paper was scared away. Bod is just an ordinary <strong>The world is so big, I want to see</strong> </p>
<p>As a father, do you want to see your Bod become the one in the country or the one in the book 📖? </p>
<hr>
<p>There are sometimes stupid things done during the rebellious period that require parents to pay for it<br>Now that I’m older, I understand the difficulties of the parents’ various prohibitions. </p>
<p>But I can’t help thinking about it<br>I didn’t know what I knew now </p>
<p>I have imagined that if the self now and the self then<br>I would definitely not be obedient at that time<br>You must be hammered in the face by the iron fist of society to wake up<br>Do something resolutely </p>
<hr>
<p>After dealing with the general affairs, one day he will step out of the fairy tale world and enter life </p>
<blockquote>
<p>“Good-bye, then, Silas.” Bod held out his hand, as he had when he was a small boy, and Silas took it, in a cold hand the color of old ivory, and shook it gravely.<br>“Good-bye, Nobody Owens.”<br>Bod picked up the little suitcase. He opened the door to let himself out of the crypt, walked back up the gentle slope to the path without looking back.” </p>
</blockquote>
<p>I was miserable when I came out, no one gave me away, no goodbye<br>The rent in Beijing was refunded and I bought a one-way ticket<br>All the belongings are packed in three suitcases<br>Take a taxi to the airport at 4 in the morning<br>After finishing the consignment, boarding, and then leaving </p>
<blockquote>
<p>without looking back </p>
</blockquote>
<p>How I wish I also heard Bod’s auditory hallucinations: </p>
<blockquote>
<p>He took a step forward … a voice said, “I am so proud of you, my son.” </p>
</blockquote>
]]></content>
      <tags>
        <tag>Reading</tag>
      </tags>
  </entry>
  <entry>
    <title>APN based on iOS token</title>
    <url>/en/iOS-Token-Based-APNs/</url>
    <content><![CDATA[<p>Apple provides a new method (authentication token) to perform APN </p>
<p>Compared with the previous method (provider certificate), the certificate <code>*.p12</code> will expire every year </p>
<p>Token-based <code>*.p8</code> <strong>Never expires</strong> </p>
<a id="more"></a>

<ul>
<li><a href="https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/establishing_a_token-based_connection_to_apns">Establish a token-based connection with APN</a> </li>
<li><a href="https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html">Communication with APN</a> </li>
</ul>
<h2 id="For-customers"><a href="#For-customers" class="headerlink" title="For customers"></a>For customers</h2><p>The only difference in the client is </p>
<ol>
<li>Create an authentication token signing key on <a href="https://developer.apple.com/">https://developer.apple.com/</a> </li>
<li>Download the <code>*.p8</code> and send it to backend engineer </li>
</ol>
<h2 id="For-the-backend"><a href="#For-the-backend" class="headerlink" title="For the backend"></a>For the backend</h2><p>Many frameworks support <code>*.p8</code>. </p>
<p>E.g: </p>
<p><a href="https://firebase.google.com/docs/cloud-messaging/ios/certs">Firebase</a> </p>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>APNs</tag>
      </tags>
  </entry>
  <entry>
    <title>Raspberry 4</title>
    <url>/en/Raspberry-Pi-4/</url>
    <content><![CDATA[<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Pi-Hole.png" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Raspberrypi.png" alt=""></div></div></div>

<a id="more"></a>

<h2 id="Boot-without-the-monitor"><a href="#Boot-without-the-monitor" class="headerlink" title="Boot without the monitor"></a>Boot without the monitor</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span></span><br><span class="line"><span class="string">update_config=1</span></span><br><span class="line"><span class="string">country=CN</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">network=&#123;</span></span><br><span class="line"><span class="string"> ssid=&quot;xxx&quot;</span></span><br><span class="line"><span class="string"> psk=&quot;xxx&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; wpa_supplicant.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy wpa_supplicant, ssh or ssh.txt to the root of the sd card </span></span><br><span class="line"></span><br><span class="line">sudo raspi-config</span><br><span class="line"></span><br><span class="line"><span class="comment"># crontab -e </span></span><br><span class="line"><span class="comment"># @reboot sudo ifdown wlan1 </span></span><br><span class="line">sudo iwconfig wlan1 txpower off</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># EEPROM </span></span><br><span class="line">sudo apt -y update</span><br><span class="line">sudo apt -y upgrade</span><br><span class="line">sudo apt -y install rpi-eeprom</span><br><span class="line">sudo rpi-eeprom-update</span><br><span class="line">sudo rpi-eeprom-update -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># oh-my-zsh </span></span><br><span class="line">sudo apt-get install zsh</span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line">sudo apt -y install vim</span><br><span class="line"></span><br><span class="line">sudo chsh -s /bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># pi-hole </span></span><br><span class="line">curl -sSL https://install.pi-hole.net | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># piVPN </span></span><br><span class="line">curl -L https://install.pivpn.io | bash</span><br><span class="line">pivpn add</span><br><span class="line">pivpn remove</span><br><span class="line">pivpn list</span><br><span class="line">pivpn -qr</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Passwordless-SSH-access"><a href="#Passwordless-SSH-access" class="headerlink" title="Passwordless SSH access"></a>Passwordless SSH access</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="comment"># raspberrypi </span></span><br><span class="line">cat raspberrypi.pub</span><br><span class="line">cat ~/.ssh/raspberrypi.pub | ssh pi@192.168.2.2 <span class="string">&#x27;mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="Static-IP-address"><a href="#Static-IP-address" class="headerlink" title="Static IP address"></a>Static IP address</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dhcpcd.conf </span></span><br><span class="line"></span><br><span class="line">interface eth0</span><br><span class="line">static ip_address=192.168.0.4/24</span><br><span class="line">static routers=192.168.0.254</span><br><span class="line">static domain_name_servers=192.168.0.254 8.8.8.8</span><br></pre></td></tr></table></figure>

<h2 id="VNC"><a href="#VNC" class="headerlink" title="VNC"></a>VNC</h2><p>Https: // 马 果. .Raspberry skin .org / articles / vnc-raspberry-skin </p>
<h2 id="Rclone-amp-Google-Drive"><a href="#Rclone-amp-Google-Drive" class="headerlink" title="Rclone &amp; Google Drive"></a>Rclone &amp; Google Drive</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt -y install fuse</span><br><span class="line"></span><br><span class="line">curl -L https://raw.github.com/pageauc/rclone4pi/master/rclone-install.sh | bash</span><br><span class="line">rclone config</span><br><span class="line"></span><br><span class="line">mkdir -p /tmp/gdrive</span><br><span class="line">fusermount -u /tmp/gdrive</span><br><span class="line"></span><br><span class="line">sudo vim /etc/fuse.conf</span><br><span class="line"><span class="comment"># user_allow_other </span></span><br></pre></td></tr></table></figure>

<h2 id="This-Mind"><a href="#This-Mind" class="headerlink" title="This Mind"></a>This Mind</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo blkid</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo vim /etc/fstab </span></span><br><span class="line"></span><br><span class="line">UUID=633a8bc8 /media/3T ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=d271d018 /media/TM ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=53f3ce6b /media/8G ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo chown -R pi:pi /media/3T /media/TM</span><br></pre></td></tr></table></figure>

<h2 id="Ramdisk-amp-Logs"><a href="#Ramdisk-amp-Logs" class="headerlink" title="Ramdisk &amp; Logs"></a>Ramdisk &amp; Logs</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sudo service rsyslog stop </span></span><br><span class="line"><span class="comment"># sudo systemctl disable rsyslog </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo vim /etc/fstab </span></span><br><span class="line"></span><br><span class="line">tmpfs /var/lib/plexmediaserver tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /home/pi./cache tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /tmp tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /var/<span class="built_in">log</span> tmpfs defaults,noatime 0 0</span><br></pre></td></tr></table></figure>

<h2 id="Fix-Ext4"><a href="#Fix-Ext4" class="headerlink" title="Fix Ext4"></a>Fix Ext4</h2><p><code>sudo fsck.ext4 -vfy /dev/sda2</code> </p>
<h2 id="Swap-space-on-an-external-hard-drive"><a href="#Swap-space-on-an-external-hard-drive" class="headerlink" title="Swap space on an external hard drive"></a>Swap space on an external hard drive</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/dphys-swapfile</span><br><span class="line"></span><br><span class="line">CONF_SWAPFILE=/media/3T/swapfile</span><br><span class="line">CONF_SWAPSIZE=8192</span><br></pre></td></tr></table></figure>

<h2 id="AFP-amp-Time-Machine"><a href="#AFP-amp-Time-Machine" class="headerlink" title="AFP &amp; Time Machine"></a>AFP &amp; Time Machine</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt -y install netatalk gparted</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo mkfs.ext4 /dev/sda2 </span></span><br><span class="line"><span class="comment"># Suda - 4 / guest / headache </span></span><br><span class="line"><span class="comment"># sudo mkdir /media/TM </span></span><br><span class="line"><span class="comment"># Suda Monte / Guest / Headache / Media / Done </span></span><br><span class="line"><span class="comment"># Suddo Poon -r Pi: Pi / Media / ZT </span></span><br><span class="line"><span class="comment"># Sudo Cheng -rpi: skin / Media / TM </span></span><br><span class="line"></span><br><span class="line">sudo vim /etc/netatalk/afp.conf</span><br><span class="line"><span class="comment"># 3t </span></span><br><span class="line"><span class="comment"># ; Patish = / media / dt / </span></span><br><span class="line"><span class="comment"># ;[tmp] </span></span><br><span class="line"><span class="comment"># ;  path = /tmp/ </span></span><br><span class="line"><span class="comment"># [TM] </span></span><br><span class="line"><span class="comment"># Path = / Media / Tum / </span></span><br><span class="line"><span class="comment"># time machine = yes </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo systemctl restart netatalk</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Samba"><a href="#Samba" class="headerlink" title="Samba"></a>Samba</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install samba samba-common-bin</span><br><span class="line"></span><br><span class="line">sudo vim /etc/samba/smb.conf</span><br><span class="line"><span class="comment"># [pimylifeup share] </span></span><br><span class="line"><span class="comment"># Patish = / media / dt / </span></span><br><span class="line"><span class="comment"># writeable=Yes </span></span><br><span class="line"><span class="comment"># create mask=0777 </span></span><br><span class="line"><span class="comment"># directory mask=0777 </span></span><br><span class="line"><span class="comment"># public=no </span></span><br><span class="line"><span class="comment"># [tmp] </span></span><br><span class="line"><span class="comment"># path = /tmp/ </span></span><br><span class="line"><span class="comment"># writeable=Yes </span></span><br><span class="line"><span class="comment"># create mask=0777 </span></span><br><span class="line"><span class="comment"># directory mask=0777 </span></span><br><span class="line"><span class="comment"># public=no </span></span><br><span class="line">sudo smbpasswd -a pi</span><br><span class="line">sudo systemctl restart smbd</span><br></pre></td></tr></table></figure>

<h2 id="Plex-Server"><a href="#Plex-Server" class="headerlink" title="Plex Server"></a>Plex Server</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkdir -p <span class="string">&quot;/tmp/plexmediaserver&quot;</span></span><br><span class="line">sudo mount -t tmpfs -o size=1000M tmpfs /tmp/plexmediaserver</span><br><span class="line">sudo chown -R pi:pi /var/lib/plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo apt -y install apt-transport-https</span><br><span class="line">curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list</span><br><span class="line">sudo apt -y install plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo vim /etc/default/plexmediaserver</span><br><span class="line"><span class="comment"># export PLEX_MEDIA_SERVER_USER=pi </span></span><br><span class="line"></span><br><span class="line">hostname -I</span><br><span class="line">sudo vim /boot/cmdline.txt</span><br><span class="line"><span class="comment"># ip=IPADDRESS </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo apt -y install pmount </span></span><br><span class="line"><span class="comment"># sudo apt-get install ntfs-3g exfat-fuse exfat-utils pmount </span></span><br><span class="line"><span class="comment"># sudo apt-get install hfsplus hfsutils hfsprogs gdisk </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lsblk </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># / Week / system / system / photography X Media Server.Service </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># user plex to pi </span></span><br><span class="line">sudo mkdir -p /etc/systemd/system/plexmediaserver.service.d</span><br><span class="line">sudo vim /etc/systemd/system/plexmediaserver.service.d/override.conf</span><br><span class="line"><span class="comment"># [Service] </span></span><br><span class="line"><span class="comment"># User=pi </span></span><br><span class="line"><span class="comment"># Group = skin </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [Service] </span></span><br><span class="line"><span class="comment"># ExecStartPre=/bin/sleep 120;/bin/sh -c &#x27;/usr/bin/test -d &quot;$&#123;PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR&#125;&quot; || /bin/mkdir -p &quot;$&#123;PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR&#125;&quot;&#x27; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># data folder </span></span><br><span class="line"></span><br><span class="line">sudo systemctl stop plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo service plexmediaserver stop</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> plexmediaserver.service</span><br><span class="line">sudo systemctl restart plexmediaserver.service</span><br></pre></td></tr></table></figure>

<h2 id="Crontab-e"><a href="#Crontab-e" class="headerlink" title="Crontab -e"></a>Crontab -e</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt -y install php php-curl</span><br></pre></td></tr></table></figure>

<p><code>Crontab -e</code> </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># rclone </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;mkdir -p /tmp/gdrive</span></span><br><span class="line"><span class="string">fusermount -u /tmp/gdrive</span></span><br><span class="line"><span class="string">/usr/bin/rclone mount Plex:Plex /tmp/gdrive --umask 0000 --default-permissions --allow-non-empty --allow-other --buffer-size 64M --dir-cache-time 48h --vfs-read-chunk-size 128M --vfs-read-chunk-size-limit 1500M &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; rclone.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Backup </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tar --exclude=&quot;$PlexPath/Logs&quot; --exclude=&quot;$PlexPath/Cache&quot; --exclude=&quot;$PlexPath/Crash Reports&quot; -czf /tmp/gdrive/backup/plex.tar.gz /var/lib/plexmediaserver </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">mkdir -p /tmp/gdrive/backup/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">tar cf - --exclude=&quot;$PlexPath/Logs&quot; --exclude=&quot;$PlexPath/Cache&quot; --exclude=&quot;$PlexPath/Crash Reports&quot; /var/lib/plexmediaserver | lz4 -f - /tmp/gdrive/backup/plex.tar.lz4</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; backup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Restore </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">lz4 -d /tmp/gdrive/backup/plex.tar.lz4 | tar -xC /</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">mkdir -p &quot;$PlexPath/Logs&quot; &quot;$PlexPath/Cache&quot; &quot;$PlexPath/Crash Reports&quot;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; restore.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chmod a+x backup.sh restore.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Update </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">sudo apt update &amp;&amp; sudo apt upgrade &amp;&amp; sudo apt autoremove &amp;&amp; sudo apt clean</span></span><br><span class="line"><span class="string">pihole -up &amp;&amp; pihole -g</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; update.sh</span><br><span class="line"></span><br><span class="line">chmod a+x update.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">@reboot vncserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># @ RUBWITE PMOTS2 ZT </span></span><br><span class="line"><span class="comment"># @ Rabwa with a headache </span></span><br><span class="line"></span><br><span class="line">@reboot /home/pi/rclone.sh</span><br><span class="line">@reboot sleep 30 &amp;&amp; /home/pi/restore.sh</span><br><span class="line"></span><br><span class="line">*/30 * * * * /home/pi/backup.sh</span><br><span class="line">0 3 * * * /home/pi/update.sh</span><br><span class="line"></span><br><span class="line">0 22 * * * <span class="built_in">cd</span> ~/Bot;python3 autoPill.py</span><br><span class="line">0 9 * * * php ~/Bot/bilibiliRun.ph</span><br></pre></td></tr></table></figure>

<p><code>sudo crontab -e</code> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 0 4 * * * &#x2F;sbin&#x2F;shutdown -r </span><br><span class="line">@reboot sleep 90 &amp;&amp; sudo service plexmediaserver start</span><br></pre></td></tr></table></figure>

<h2 id="Jellyfin"><a href="#Jellyfin" class="headerlink" title="Jellyfin"></a><del>Jellyfin</del></h2><p>Https: // jelly fat.org/ </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt install apt-transport-https</span><br><span class="line">wget -O - https://repo.jellyfin.org/jellyfin_team.gpg.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$( dpkg --print-architecture )</span>] https://repo.jellyfin.org/<span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^ID=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> <span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^VERSION_CODENAME=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> main&quot;</span> | sudo tee /etc/apt/sources.list.d/jellyfin.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># service jellyfin status </span></span><br><span class="line"><span class="comment"># systemctl restart jellyfin </span></span><br><span class="line"><span class="comment"># sudo /etc/init.d/jellyfin stop </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># .local/share/jellyfin </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;#!/bin/zsh</span></span><br><span class="line"><span class="string">JELLYFINTMP=&quot;/tmp/jellyfin&quot;</span></span><br><span class="line"><span class="string">USRBIN=&quot;/usr/bin&quot;</span></span><br><span class="line"><span class="string">mkdir -p $JELLYFINTMP/log $JELLYFINTMP/cache $JELLYFINTMP/transcodes \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/data \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/metadata \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/config</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$USRBIN/jellyfin \</span></span><br><span class="line"><span class="string"> -C $JELLYFINTMP/cache \</span></span><br><span class="line"><span class="string"> -l $JELLYFINTMP/log \</span></span><br><span class="line"><span class="string"> -d $JELLYFINTMP/data \</span></span><br><span class="line"><span class="string"> -c $JELLYFINTMP/config \</span></span><br><span class="line"><span class="string"> --ffmpeg $USRBIN/ffmpeg &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; jellyfin.sh</span><br><span class="line"></span><br><span class="line">chmod a+x jellyfin.sh</span><br><span class="line">nohup ./jellyfin.sh &lt;/dev/null &amp;</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># Https: // jelly fin.org/docs/general/administration/hardware-acceleration.html </span></span><br><span class="line">sudo usermod -aG video jellyfin</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Raspberry</tag>
      </tags>
  </entry>
  <entry>
    <title>Python vs Java for children</title>
    <url>/en/Python-vs-Java-for-Kids/</url>
    <content><![CDATA[<p><em>The</em> <a href="https://junilearning.com/blog/guide/python-vs-java/"><em>Article</em></a> _ originally appeared in_ <a href="https://junilearning.com/"><em>junilearning.com</em></a> </p>
<h1 id="Python-and-Java-usage-performance-learning"><a href="#Python-and-Java-usage-performance-learning" class="headerlink" title="Python and Java: usage, performance, learning"></a>Python and Java: usage, performance, learning</h1><p>In the field of computer science, there are many programming languages, and no one language is superior to another. In other words, <strong>each language is best for solving certain problems</strong>. In fact, for a given programming project, there is usually no one best language to choose from. Therefore, for students who want to develop software or solve interesting problems through code, it is very important to have a strong foundation in computer science ** applicable to any programming language**. </p>
<a id="more"></a>

<p>Programming languages tend to share certain characteristics in the way they work, for example, they deal with memory usage or the intensity of using objects. As students become exposed to more languages, they will begin to see these patterns. This article will focus on Python and Java, the two most widely used programming languages in the world. Although it is difficult to accurately measure the growth rate of each programming language, <strong>They are the two most popular programming languages used in industry today</strong>. </p>
<p>The main difference between Python and Java is that Python is <strong>dynamically typed</strong>, while Java is <strong>statically typed</strong>. Loosely speaking, this means that Java is stricter on how to define and use variables in the code. *<em>As a result, the syntax of Java tends to be verbose, which is one of the reasons why we recommend that beginners learn Python before Java. *</em>For example, this is how <code>numbers</code> creates a name variable in Python that holds the numbers 0 to 9: </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numbers = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">numbers.append(i)</span><br></pre></td></tr></table></figure>

<p>Here’s how you would do the same thing in Java: </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ArrayList numbers = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    numbers.add(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Another major difference is that Java is a <strong>compiled language</strong>, so it usually runs programs faster than Python. This means that the compiler converts Java code into machine-level code before actually running the program. In contrast, Python is an <strong>interpreted</strong> language, which means there are no compilation steps. </p>
<h2 id="Usage-and-practicality"><a href="#Usage-and-practicality" class="headerlink" title="Usage and practicality"></a>Usage and practicality</h2><p>Historically, Java has become a more popular language, partly because of its long history. However, Python is rapidly gaining popularity. According to <a href="https://octoverse.github.com/">Github’s October Status Report</a>, it has recently surpassed Java as the most widely used programming language. According to the 2018 Developer Survey, <strong>Python is now the fastest growing computer programming language</strong>. </p>
<p>Both Python and Java have a large developer community, and you can answer questions on <a href="https://stackoverflow.com/">Stack Overflow</a> websites. From <a href="https://insights.stackoverflow.com/trends?tags=python%2Cjava">Stack Overflow Trends</a>, it can be seen that the percentage of questions asked by Python on Stack Overflow in 2017 exceeds that of Java**. At the time of writing, about 13% of questions on Stack Overflow are marked with Python, and about 8% are marked with Java! </p>
<h2 id="Web-development"><a href="#Web-development" class="headerlink" title="Web development"></a>Web development</h2><p>** Both Python and Java can be used for back-end web development**. Typically, developers will use the <a href="https://stackify.com/python-frameworks/">Django and Flask</a> framework for Python and <a href="https://spring.io/">Spring</a> for Java. Python is known for the readability of its code, which means that Python code is clean, easy to read and concise. Python also has a large number of comprehensive modules, packages, and libraries. These modules, packages, and libraries are developed by the Python enthusiast community, in addition to its standard library. Java has a similar ecosystem, although to a lesser extent. </p>
<h2 id="Mobile-application-development"><a href="#Mobile-application-development" class="headerlink" title="Mobile application development"></a>Mobile application development</h2><p><strong>When it comes to mobile application development, Java has a dominant position</strong> because <strong>Java</strong> is the main language used to build Android applications and games. With the above-mentioned tailor-made libraries, developers can choose to write Android applications using powerful frameworks and development tools built specifically for the operating system. Currently, although there are tools such as <a href="https://kivy.org/">Kivy</a> and <a href="https://beeware.org/">BeeWare 之</a> that allow you to write code once and run it on Windows, OS X, iOS and Deploy applications on Android, but Python is not often used for mobile development. </p>
<h2 id="Machine-learning-and-big-data"><a href="#Machine-learning-and-big-data" class="headerlink" title="Machine learning and big data"></a>Machine learning and big data</h2><p>In contrast, in machine learning and <a href="https://junilearning.com/blog/coding-and-data-science">data science</a>, Python is the most popular language. Python is commonly used in big data, scientific computing, and artificial intelligence (AI) projects. <strong>When working on projects involving sentiment analysis, most data scientists and machine learning programmers choose to use Python instead of Java</strong>. At the same time, it is worth noting that many machine learning programmers may choose to use Java when working on projects related to network security, network attack prevention, and fraud detection. </p>
<h2 id="Where-to-start"><a href="#Where-to-start" class="headerlink" title="Where to start"></a>Where to start</h2><p>When learning the basics of programming, <strong>many studies have reached the conclusion</strong>, because of the simple and intuitive syntax of Python, it is <strong>easier than Java</strong> <strong>**</strong>[Learn Python](https ://junilearning.com/coding)<em><em>, as shown in the previous example. Compared with Python, Java programs usually have more boilerplate code-they must contain parts of the code with little or no changes in many places. Having said that, Java has some significant advantages, especially its speed as a compiled language. *</em>Learning Python and Java will expose students to two languages, which are based on similar computer science concepts but differ in education. *\</em> </p>
<p>Overall, it is clear that Python and Java are both powerful programming languages in practice, so for any aspiring software developer, it is best to learn both languages proficiently. Programmers should compare Python and Java according to the specific needs of each software development project, rather than simply learning a language they like. In short, no one language is superior to another, so programmers should strive to have both languages in both codings**. </p>
<table>
<thead>
<tr>
<th></th>
<th>Python</th>
<th>Java</th>
</tr>
</thead>
<tbody><tr>
<td>Runtime Performance</td>
<td></td>
<td>Winner</td>
</tr>
<tr>
<td>Ease of Learning</td>
<td>Winner</td>
<td></td>
</tr>
<tr>
<td>Practical Agility</td>
<td>Tie</td>
<td>Tie</td>
</tr>
<tr>
<td>Mobile App Development</td>
<td></td>
<td>Winner</td>
</tr>
<tr>
<td>Big Data</td>
<td>Winner</td>
<td></td>
</tr>
</tbody></table>
<hr>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>How to clean MacBook dust and fans</title>
    <url>/en/How-to-Clean-MacBook-Dust-Fan/</url>
    <content><![CDATA[<h2 id="If-kernel-task-is-using-a-large-percentage-of-your-Mac-CPU"><a href="#If-kernel-task-is-using-a-large-percentage-of-your-Mac-CPU" class="headerlink" title="If kernel_task is using a large percentage of your Mac CPU"></a>If kernel_task is using a large percentage of your Mac CPU</h2><p>I have noticed before that <code>kernel_task</code> will be 100% stuck at every turn, but it is a <code>System</code> process, there is no way </p>
<p>根据  的文档 <a href="https://support.apple.com/en-us/HT207359">If kernel_task is using a large percentage of your Mac CPU</a> </p>
<blockquote>
<p>In other words, kernel_task responds to conditions that cause <strong>your CPU to become too hot</strong>, even if your Mac doesn’t feel hot to you. It does not itself cause those conditions. When the CPU temperature decreases, kernel_task automatically reduces its activity. </p>
</blockquote>
<p>This is because the CPU is too hot 🔥 even if you think it’s not hot 🥶… </p>
<p>In addition, <code>kernel_task</code> is not the culprit. When the CPU is not hot, its occupancy rate will automatically go down… </p>
<a id="more"></a>

<p>I found that it shouldn’t be on the left 👈 charging 🔋, I believe it </p>
<h3 id="Here’s-why-you-shouldn’t-charge-your-MacBook-Pro-on-the-left-side"><a href="#Here’s-why-you-shouldn’t-charge-your-MacBook-Pro-on-the-left-side" class="headerlink" title="Here’s why you shouldn’t charge your MacBook Pro on the left side"></a><a href="https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text=While%20charging%20the%20MacBook%20Pro,use%20the%20right%2Dhand%20ports.">Here’s why you shouldn’t charge your MacBook Pro on the left side</a></h3><blockquote>
<p>While charging the MacBook Pro and having peripherals plugged in to the left-hand ports, the device’s ports can get hot; for some reason, this can result in kernel_task going a bit haywire and using up a whole boatload of system resources. </p>
</blockquote>
<p>But after switching to the right 👉 charging 🔋 after a few days, it still got 100% after a while </p>
<p>despair… </p>
<p>Suddenly wondered if it was because of the need to clean up </p>
<h2 id="How-to-Clean-MacBook-Dust-amp-Fan"><a href="#How-to-Clean-MacBook-Dust-amp-Fan" class="headerlink" title="How to Clean MacBook Dust &amp; Fan"></a>How to Clean MacBook Dust &amp; Fan</h2><p>It took Google to know that you can disassemble it yourself<br>Mine is a 16-year-old book, which has been guaranteed<br>不然根据 <a href="https://www.apple.com/legal/warranty/products/embedded-mac-warranty-rest-of-apac-english.html">Mac Warranty</a><br>If you dismantle it yourself, you should lose </p>
<blockquote>
<p>This Warranty does not apply: </p>
<ul>
<li>(c) to damage caused by use a third party component or product that does not meet the Apple Product’s specifications </li>
</ul>
</blockquote>
<h3 id="Tools-🔧"><a href="#Tools-🔧" class="headerlink" title="Tools 🔧"></a>Tools 🔧</h3><ul>
<li>Penta screw 🔩 knife </li>
<li>Soot ball, small brush </li>
<li>Abandoned credit card 💳 </li>
</ul>
<h3 id="step"><a href="#step" class="headerlink" title="step"></a>step</h3><ol>
<li>Unscrew </li>
<li>Make a small slit on the side </li>
<li>Insert the unused credit card 💳 and slide it in the direction of the blue arrow <ol>
<li>You will hear a click </li>
<li>In Figure 2 you can see that there are four buckles in the middle horizontal line </li>
<li>Instead of breaking something (I hope so 😓) </li>
</ol>
</li>
<li>Use symmetrically on the right 💳 to slide </li>
<li>Then press the red arrow to pull it horizontally <ol>
<li>Figure 2 The card slot can be seen above the fan </li>
<li>So force horizontally, pull left and right ↔️ a little bit symmetrically </li>
</ol>
</li>
<li>The back cover is opened </li>
</ol>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-3.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-0.jpg" alt=""></div></div></div>

<p>Really dirty </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-1.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-2.jpg" alt=""></div></div></div>

<p>After cleaning up the ash, <code>kernel_task</code> does not appear much, and 💻 is also resurrected<br>I instantly feel that the notebook for 16 years 💻 can be used for 5 years 👨‍💻 </p>
]]></content>
      <tags>
        <tag>Macbook</tag>
      </tags>
  </entry>
  <entry>
    <title>What is the purpose of Python</title>
    <url>/en/What-is-Python-Used-for/</url>
    <content><![CDATA[<h1 id="How-to-use-Python-in-the-real-world"><a href="#How-to-use-Python-in-the-real-world" class="headerlink" title="How to use Python in the real world"></a>How to use Python in the real world</h1><p><strong>Python</strong> is one of the most popular coding languages in the world. </p>
<p>Most of the top American universities even use Python in their introductory coding courses: teach students to use Python to build simple games, parse information from web pages, and even perform language processing! </p>
<p>Nevertheless, many parents and students often want to know-how is Python actually used in the company or in various fields? </p>
<p>Read on to learn how <strong>Python</strong> drives** today’s leading industry and plays an important role in many computer science disciplines. ** </p>
<a id="more"></a>

<h2 id="Why-choose-Python"><a href="#Why-choose-Python" class="headerlink" title="Why choose Python?"></a>Why choose Python?</h2><p>[Python](<a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gout_mxTc?utm_source=goutus=ed">https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gout_mxTc?utm_source=goutus=ed</a> is a high-level camign_m_source=gf&amp;utium) ** and <strong>Universal Coding Language</strong>-This means it is easier to understand and can be used to solve a variety of problems! </p>
<p>With its simple syntax, high readability, and use on the entire operating system, Python is a valuable language that can be used for learning and use in various applications. </p>
<p><img src="https://images.ctfassets.net/mrop88jh71hl/70P7f6p7J1Bk4VY8GDzm95/58d544a1044609e94a001523d9583f22/python-code-application.jpeg" alt="Python code on screen. "> </p>
<p>Python code example on the engineer’s screen. </p>
<p>Therefore, it is not surprising that Python is not only prevalent in today’s job market, but also in the common technologies we use every day. </p>
<p><strong>Python programming</strong> is a skill that can be used in almost any industry, and its role goes far beyond software development. From industries like <strong>finance, healthcare, *<em>and *</em>insurance</strong>, like field <strong>aerospace</strong> to <strong>entertainment</strong>-[Python-based technology](<a href="https://appdevelopermagazine.com/ten">https://appdevelopermagazine.com/ten</a> -industries-using-python-programming/) is to promote ** innovation and new solutions**. </p>
<p>In the “<a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjm_mxfor">What is Python 101” guide</a>, we introduced Python and some areas used by Python, such as <strong>technology</strong>, <strong>finance</strong> and <strong>biotechnology</strong>. But in this article, we will delve deeper into the wide range of uses of Python-especially in the following areas: </p>
<ul>
<li><strong>Web Development</strong> </li>
<li><strong>Data Science</strong> </li>
<li><strong>Machine Learning</strong> </li>
<li><strong>artificial intelligence</strong> </li>
</ul>
<h2 id="Python-applications"><a href="#Python-applications" class="headerlink" title="Python applications"></a>Python applications</h2><h3 id="Web-development"><a href="#Web-development" class="headerlink" title="Web development"></a>Web development</h3><p>Although HTML, CSS and Javascript may be common tools for <strong>Web development</strong>, Python is also a good choice. </p>
<p>[Web Development](<a href="https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before">https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before</a> -getting-started/) refers to building websites on the Internet from static plain text pages to dynamic e-commerce websites and interactive Internet applications. </p>
<p>Coding is essential for Web development to build site functionality, optimize user experience, and ensure that information is properly organized. Web frameworks such as Python’s <strong>Django</strong> and <strong>Flask</strong> have become popular choices for website development. </p>
<p><img src="https://images.ctfassets.net/mrop88jh71hl/6prH9NRKgybllrNcEqeCBy/c7fbc7b6960e8f94efb9eaa0b70a97d2/python-web-development-applications.png" alt="Python is used to create web pages. "> </p>
<p>Python is an excellent choice for back-end web development and is now used by many companies. </p>
<p>These open source frameworks enable users to build Web applications more efficiently because Python has the ability to process large amounts of data and automate tasks. In fact, <strong>Instagram</strong>, <strong>Pinterest</strong> and <strong>Google</strong> are all in their [back-end web development](<a href="https://learn.onemonth.com/10-famous-websites-built">https://learn.onemonth.com/10-famous-websites-built</a> -using-python/) uses Python. </p>
<h3 id="Data-science"><a href="#Data-science" class="headerlink" title="Data science"></a>Data science</h3><p>In [Data Science](<a href="https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_reach=[campaign]">https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_reach=[campaign]</a>** data analysis and data analysis ](<a href="https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_outm_reach_campaign=Python">https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_outm_reach_campaign=Python</a> or the main language choice) </p>
<p>In the era of <strong>big data</strong>, we frequently come into contact with data in daily life through navigation (GPS), online shopping, energy usage, and wearable devices such as smart watches. </p>
<p>On average, each household has about [11 devices,](<a href="https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should">https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should</a> -push-that-even-higher-1203431225/) And this number may increase in the future! With so many devices, companies need to process large amounts of data to provide services. </p>
<p><img src="https://images.ctfassets.net/mrop88jh71hl/3XS43f9pqDhRuft9GdnvZq/2d0513d9f0079c572923a49cd214add5/python-data-analysis-applications.png" alt="Description of the process of Python for data analysis"> </p>
<p>Python-based tools are often used to visualize, process, and analyze large amounts of data. </p>
<p><strong>Data Science</strong> involves processing data and inferring trends<strong>-Python</strong> is very useful in this field because it contains dense packages such as <strong>scipy</strong>, <strong>numpy</strong> and <strong>pandas</strong>. </p>
<p>In addition, the <strong>matplotlib</strong> software package can be used to build data visualizations. This makes Python a popular choice in fields such as <strong>bioinformatics</strong>, which also involves large amounts of data and modeling. </p>
<p>These Python-based tools have become popular because of their ease of use and scalability. For example, <a href="https://www.edureka.co/blog/how-netflix-uses-python/#hownetflixusespython">Netflix</a> uses <strong>scipy</strong> and <strong>numpy</strong> for numerical calculations to manage cross-platform users flow. </p>
<p>▶ <strong>Try:</strong> [Advanced Data Science and Python Tutorial](<a href="https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMT9Cutj_HBXf">https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMT9Cutj_HBXf</a> =gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach) </p>
<h3 id="Machine-learning"><a href="#Machine-learning" class="headerlink" title="Machine learning"></a>Machine learning</h3><p>By analyzing a large amount of data, <strong>Machine Learning</strong> [Algorithm](<a href="https://junilearning.com/blog/guide/what-are-algorithms/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTium">https://junilearning.com/blog/guide/what-are-algorithms/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTium</a> can be found? Pattern and apply it to future behavior. </p>
<p>The most obvious use of machine learning in products is recommendation systems. Companies such as <strong>Netflix</strong>, <strong>Spotify</strong>, and <strong>Youtube</strong> collect user behavior to predict and suggest playlists and videos. </p>
<p><strong>Scikit-learn</strong> and <strong>tensorflow</strong> are Python libraries that can be used for algorithms for classification, clustering and regression of large data sets. The high performance and wide range of functions of these libraries make them essential in any machine learning exploration. </p>
<p>▶ <strong>Learn more:</strong> [Importance of Children’s Algorithms](<a href="https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTcium">https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTcium</a> what_is_python_used_for&amp;utm_campaign=outreach) </p>
<h3 id="artificial-intelligence"><a href="#artificial-intelligence" class="headerlink" title="artificial intelligence"></a>artificial intelligence</h3><p>Machine learning is actually just one aspect of <strong>artificial intelligence</strong>. AI refers to the intelligence of machines and the development of computer systems to perform human-oriented tasks such as perception or decision-making. </p>
<p>An outstanding example of artificial intelligence is ride-hailing applications such as <strong>Uber</strong> and <strong>Lyft</strong>. </p>
<p><img src="https://images.ctfassets.net/mrop88jh71hl/dlvfPv6HAIV4YaMb1TRCl/88739612a93476c94733255a94a567d7/python-artificial-intelligence-in-ride-sharing.png" alt="Python illustration of artificial intelligence used in carpooling applications. "> </p>
<p>Python is used in artificial intelligence for applications such as Lyft or Uber. The AI system can then predict things such as user needs and estimated time of arrival. </p>
<p>Uber uses AI to <strong>predict user needs</strong> and <strong>estimated arrival time</strong> (and other features), most of which are through [Python](<a href="https://eng.uber.com/uber-ai-blog">https://eng.uber.com/uber-ai-blog</a> -2019/) completed. </p>
<p>In addition to some of the aforementioned Python libraries, other libraries such as <strong>keras</strong> and <strong>pytorch</strong> can also be used to create AI functions (such as predictive models and neural networks). </p>
<h2 id="Python-is-everywhere"><a href="#Python-is-everywhere" class="headerlink" title="Python is everywhere!"></a>Python is everywhere!</h2><p>Among popular programming languages, Python is one of the most diverse languages in its applications. In addition, it has been deeply integrated with us and today’s leading companies. </p>
<p>Occupations involving Python include <strong>software engineer, web developer, data scientist, product manager, business analyst</strong>, etc. Regardless of the industry, companies in this technological age rely on data-driven decision making, and Python is the perfect tool to do this. </p>
<p>If you or your child is interested in the fields or roles listed above, then learning Python is a good choice! </p>
<h2 id="Want-to-become-a-Python-programmer"><a href="#Want-to-become-a-Python-programmer" class="headerlink" title="Want to become a Python programmer?"></a>Want to become a Python programmer?</h2><p>One of the biggest advantages of Python is to help new coders learn basic concepts and become familiar with programming! For new programmers of all ages, there are also many resources for learning Python extensively. </p>
<h3 id="Python-classes-for-children"><a href="#Python-classes-for-children" class="headerlink" title="Python classes for children"></a>Python classes for children</h3><p>! <a href="https://images.ctfassets.net/mrop88jh71hl/2dK37wFC5SF8HNKm4nGmqr/c256e7002d196ea54e4c10817a68f8a7/learning-python-with-juni.png">A Juni instructor using Python. </a> </p>
<p>Instructor Juni teaches basic Python to a young student. </p>
<p>In Juni Learning, with the help of experienced coding teachers, we will teach young coders [teaching Python](<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACutjMEHBXfCjJMxT=c">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACutjMEHBXfCjJMxT=c</a> gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach). From <strong>consolidating coding foundations to building algorithms and analyzing data sets</strong>, these courses explore many different applications of Python and teach students how to build their own coding projects. </p>
<p>Read more about our [coding course](<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_medium=ed_is&amp;out&amp;out[https://campaign][More">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_medium=ed_is&amp;out&amp;out[https://campaign][More</a> information on the course and[<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8]">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8]</a> join.junilearning.com/) Learn which course is best for your child’s coding journey with our admissions team. </p>
<hr>
<p><em>This</em> <a href="https://junilearning.com/blog/guide/what-is-python-used-for-major-industries/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&utm_medium=what_is_python_used_for&utm_campaign=outreach"><em>article</em></a> <em>originally appeared on</em> <a href="https://junilearning.com/?utm_source=gf&utm_medium=what_is_python_used_for&utm_campaign=outreach"><em>junilearning.com</em></a>. </p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>How to open an account in US stocks</title>
    <url>/en/how-to-buy-us-stocks/</url>
    <content><![CDATA[<p>refer code <code>0CM1QE</code> </p>
<p>US elections these two days<br>As leeks, don’t share it because of the time difference.<br>Woke up in the middle of the night and cut the meat<br>Now seeing the 🚀 generally rising, but not dare to enter the market embarrassment </p>
<p>Just share the sad journey of opening an account at that time </p>
<a id="more"></a>

<h2 id="U-S-brokerage"><a href="#U-S-brokerage" class="headerlink" title="U.S. brokerage"></a>U.S. brokerage</h2><p>Because many U.S. brokerages are exempt from commissions, so look first </p>
<ul>
<li>Robinhood (better user interface) </li>
<li>TD Ameritrade (old brand) </li>
<li>Firstrade (Chinese customer service) </li>
</ul>
<p>Robinhood Because both parties can send stocks when invited, I asked my friends in the United States to get the code, and then I went to the official website and found that it can only be submitted within the United States…<br>TD Ameritrade does have SG and website, but I don’t know how to get stuck in the last step after submitting the information. No one has reviewed the email in the past.<br>Firstrade, non-Americans automatically helped to submit the tax exemption form. After submitting the information, the account was finally opened after a few working days, and then found that the deposit can only be ACH, Check, Wire Trannsfer </p>
<p>Both ACH and Check need to transfer money to my U.S. bank account, so definitely not<br>Wire Trannsfer has another fee </p>
<h2 id="Singapore-Brokerage"><a href="#Singapore-Brokerage" class="headerlink" title="Singapore Brokerage"></a>Singapore Brokerage</h2><p>Then I researched Singapore and found that these people actually went to UOB or DBS Bank’s Trading Account<br>I only heard that the handling fee is too expensive, not worth it </p>
<h2 id="Domestic-brokerage"><a href="#Domestic-brokerage" class="headerlink" title="Domestic brokerage"></a>Domestic brokerage</h2><p>Okay, I went around and came back… </p>
<ul>
<li>Xiaomi’s Tiger </li>
<li>Tencent’s Futu </li>
<li>Snowball </li>
</ul>
<p>I’m happy 🐯 support Singapore account opening, yes </p>
<ul>
<li>US stocks, Hong Kong stocks, Singapore stocks, Australian stocks… </li>
<li>Support pre post market, futures </li>
<li>lever </li>
</ul>
<p>I originally planned to upload passport and other information, anyway I prepared it before<br>It turns out that Singpass authentication is supported, and I clicked and jumped back and forth, and it was authenticated… </p>
<p>God knew it was so easy<br>Did I open it last year? </p>
<p>Otherwise, this time has already doubled<br>Or have jumped off the rooftop </p>
<h2 id="transaction-fee"><a href="#transaction-fee" class="headerlink" title="transaction fee"></a>transaction fee</h2><p>Because I don’t (dare) buy options<br>There are three additional expenses for normal trading </p>
<ul>
<li>Buy 2$ </li>
<li>0.1% of total stock </li>
<li>Sell 2$ </li>
</ul>
<p>So even if you accompany all your underwear, 🐯 will be full </p>
<h2 id="Refer-code"><a href="#Refer-code" class="headerlink" title="Refer code"></a>Refer code</h2><p>You can use my code <code>0CM1QE</code> </p>
<p>I think the current activity is both sides </p>
<ul>
<li>Free 5 commissions </li>
<li>Charge 2000SGD to get 30SGD, 3W to get 100SGD </li>
</ul>
<p>Well, there is no desire to refer at all<br>I remember that I used to give away a share of Ali’s stock. Could it be too high now? </p>
<h2 id="Transcript"><a href="#Transcript" class="headerlink" title="Transcript"></a>Transcript</h2><p>Let’s take a look at the global stock market boom in the past two days. I was scared at night for fear of being unable to sleep. I had a report card after the fierce operation. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/how-to-buy-us-stocks.jpeg" alt=""></p>
<p>So what are you waiting for, sign up </p>
<p>I’m waiting for you on the rooftop<del>~</del> </p>
]]></content>
      <tags>
        <tag>Stock</tag>
        <tag>Broker</tag>
      </tags>
  </entry>
  <entry>
    <title>Fly back to China in the shadow of the coronavirus</title>
    <url>/en/fly-back-to-china-under-covid-19/</url>
    <content><![CDATA[<p>The global epidemic situation in new museums does not improve at the end of 2020<br>And with the advent of winter, there are gradually signs of another outbreak<br>But recently the little mage needs to go home<br>Although various vaccines have been vaccinated globally </p>
<table>
<thead>
<tr>
<th>Company</th>
<th>Type</th>
<th>Dosage</th>
<th>Effectiveness</th>
<th>Storage ℃</th>
</tr>
</thead>
<tbody><tr>
<td>BioNTech/Pfizer</td>
<td>mRNA</td>
<td>x2</td>
<td>95%</td>
<td>-70</td>
</tr>
<tr>
<td>Modern</td>
<td>mRNA</td>
<td>x2</td>
<td>95%</td>
<td>-20</td>
</tr>
<tr>
<td>Oxford/AstraZeneca</td>
<td>Adenovirus vector</td>
<td>x2</td>
<td>62-90%</td>
<td>0</td>
</tr>
</tbody></table>
<p>But it still requires 14 days of isolation to return home </p>
<a id="more"></a>

<h2 id="ready"><a href="#ready" class="headerlink" title="ready"></a>ready</h2><p>Visit the local embassy to obtain entry information<br>Taking Singapore as an example, according to <a href="http://www.chinaembassy.org.sg/chn/lsfw/zytzs/t1838128.htm">Embassy in New Zealand</a> </p>
<p>Boarding after October will probably go through several stages, tightening step by step </p>
<ol>
<li>Nucleic acid amplification testing </li>
<li>Nucleic acid + serum IgM double negative certificate </li>
<li>You must apply for the epidemic prevention health code in the WeChat mini program </li>
</ol>
<h2 id="Nucleic-acid-amplification-testing"><a href="#Nucleic-acid-amplification-testing" class="headerlink" title="Nucleic acid amplification testing"></a>Nucleic acid amplification testing</h2><p>You need to make an appointment for testing in November, and you don’t need to make an appointment in December. You can do the test directly when you find an approved hospital<br>There is a clinic right next to the apartment where the little mage lives. Walk for 5 minutes<br>Because there are no appointments, there are too many people, and I waited for about an hour<br>Drew blood and stabbed his nose<br>I’ve been afraid of this test before, but the Singaporean doctors are more gentle and not too uncomfortable </p>
<p>Here is a reminder that you must press for a while after the blood is drawn. The little brother in front of the blood drawn the blood and did not use the band-aid carefully 🩹 hold it down<br>As a result, the blood flowed into a river, and the clothes on the ground were covered with blood, it was terrible </p>
<h2 id="Health-code"><a href="#Health-code" class="headerlink" title="Health code"></a>Health code</h2><p>Double-yin proof received by SMS and email the next morning<br>But the WeChat applet cannot submit documents<br>As a mage, the little mage boldly guessed that it was a DNS resolution problem<br>Cloudflare did not correctly return the server IP of the applet.<br>Change the phone 📱 DNS to 114.114.114.114 and it will be amazing<br>Not only sigh what to do with Muggles </p>
<p>I received the health code after about an hour<br>Save screenshots just in case </p>
<h2 id="Biochemical-suit"><a href="#Biochemical-suit" class="headerlink" title="Biochemical suit"></a>Biochemical suit</h2><p>I was scared by the people returning home in the biochemical suits at the airport.<br>The little mage was shaking and bought a set of + adult diapers<br>It was uncomfortable to try it on secretly<br>Considering that the northern hemisphere is in winter at the end of the year, getting on the plane in a tropical T-shirt and getting off the plane without clothes will definitely catch a bad cold on the spot. </p>
<p>Wearing biochemical suits and adding clothes becomes a big problem </p>
<p>After repeatedly reading CDC’s <a href="https://chinese.cdc.gov/coronavirus/2019-ncov/travelers/travel-during-covid19.html">Domestic Travel During the COVID-19 Epidemic</a>, the little master concluded </p>
<ul>
<li>Airplane has fresh air </li>
<li>Wear a mask </li>
<li>Not soft eyes and nose </li>
</ul>
<p>The main route of infection of the new crown is the respiratory system. The little mage feels that wearing <strong>N95+surgical mask+goggles</strong> should be at ease </p>
<h2 id="Return-flight"><a href="#Return-flight" class="headerlink" title="Return flight"></a>Return flight</h2><p>There are currently no direct flights from Singapore to Beijing<br>You can only choose to go to Shanghai first, and then transfer after 14 isolation </p>
<p>There are only three direct flights from Singapore to Shanghai a week<br>Singapore Airlines on Monday, Eastern Airlines on Thursday, Juneyao Airlines on Friday night </p>
<p>Eastern Airlines can only check one piece of baggage, and the excess amount needs to be purchased extra, one piece is 500 RMB<br>20% discount for advance purchase on the app </p>
<p>In addition to the health code just before boarding, you also need to use the Customs Passenger Mini Program to fill in an entry information </p>
<h2 id="Eastern-Airlines"><a href="#Eastern-Airlines" class="headerlink" title="Eastern Airlines"></a>Eastern Airlines</h2><p>3:00 pm </p>
<p>Waiting for the boarding gate, about half of the people wore biochemical suits and covered them tightly.<br>In fact, during the front security check, it was extremely embarrassing, because some people had to take half of the biochemical service because of a belt and other reasons.<br>In this case, won’t the work break? What protective effect is there? </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-02.jpg" alt=""></div></div></div>

<p>The crew also wears double-layer masks + goggles </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-03.jpg" alt=""></p>
<p>After the plane climbed up, the little wizard connected to the satellite Wi-Fi and continued to update his family with news updates so that they don’t have to worry. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-05.jpg" alt=""></p>
<p>Although there is an epidemic, there are still meals provided<br>There are not many passengers, the little wizard is in the middle, and there is no one on either side.<br>So I didn’t wait for the wrong peak to eat, I couldn’t wait to eat it after receiving the snack. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-04.jpg" alt=""></p>
<p>An older sister on the left by the window wrapped it up tightly. She did not eat, drink, or go to the bathroom during the whole trip<br>Also great </p>
<h2 id="Hard-Nucleic-Acid-Detection"><a href="#Hard-Nucleic-Acid-Detection" class="headerlink" title="Hard Nucleic Acid Detection"></a>Hard Nucleic Acid Detection</h2><p>21:30 p.m. </p>
<p>Check the QR code before disembarking<br>Then poke his nostrils again for nucleic acid testing<br>The little mage said that he already has experience.<br>Miss sister said that China is stricter, I try to be lighter </p>
<p>Then I stabbed it deeper than Singapore, and then turned the cotton swab a few times<br>The little mage thought it was over and made an OK gesture<br>Unexpectedly, after waiting for a few seconds, Miss Sister turned back a few times<br>Then break the cotton swab and put it in the test tube<br>The little mage was about to talk, the little sister took out another cotton swab<br>Face the right nostril clockwise, stop, counterclockwise, do the same </p>
<p>The little mage held back tears and said thank you 🙏<br>After all, it’s late at night, everyone is working hard </p>
<h2 id="Entry"><a href="#Entry" class="headerlink" title="Entry"></a>Entry</h2><p>22:10 p.m. </p>
<p>Check entry form, passport </p>
<p>The little brother at the border flipped through the visas of the little mage and changed a chapter.<br>Then we remind you not to put your ID card together with your passport because it may be demagnetized </p>
<p>22:20 p.m. </p>
<p>Don’t forget the trolley during security check </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-07.jpg" alt=""></div></div></div>

<p>22:30 in the evening </p>
<p>Shanghai local and foreign diversion and isolation </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-08.jpg" alt=""></div></div></div>

<h2 id="Nightmare"><a href="#Nightmare" class="headerlink" title="Nightmare"></a>Nightmare</h2><p>This is the nightmare of the whole trip<br>Because there are too many flights today, the bus is isolated 🚌 insufficient preparation<br>Started a long wait ⌛️ </p>
<p>00:40 AM<br>Passport registration </p>
<p>Wait and wait, Shanghai is very cold late at night<br>Fortunately, the friend from the National University of Singapore before leaving helped buy a set of warm equipment<br>The little mage put on a warm one and fell asleep standing up </p>
<p>2:33 AM<br>Wait, get on the bus, the staff reminds that the passport will be returned to you at the hotel </p>
<p>Shaking and shaking in the car, on the high speed<br>Fell asleep with the heater<br>I got off the high-speed car and stopped. I woke up and found that it was 10,000 red lights that I had to wait for late at night. </p>
<p>Stop and go, suffering </p>
<p>Because the isolation hotel is randomly assigned, the good expensive ones are cheap<br>But this time the little mage can no longer save money, just thinking </p>
<p>God, please assign me a better hotel 🏨 </p>
<h2 id="International-Spa"><a href="#International-Spa" class="headerlink" title="International Spa"></a>International Spa</h2><p>4:50 am </p>
<p>Finally arrived at the isolation hotel<br>The little mage looked up and saw that it was a tall building. Intuitively this hotel is good. </p>
<p>I opened the map and found it was a five-star<br>An international spa in Shanghai </p>
<p>Secretly happy<br>No pole tail </p>
<p>But the goose still can’t get off<br>Need to wait for the first few buses to check in </p>
<p>5:50 am </p>
<p>Finally get off<br>Register passport ID </p>
<ul>
<li>Hotel 350 a day, you can use Alipay, WeChat, UnionPay and other methods to transfer money </li>
<li>Three meals 100 days a day, but it’s not a hotel’s catering, but an outsourced box lunch </li>
<li>You can also order take-out by yourself, and deliver food at 12 o’clock and 6 o’clock every day. </li>
<li>Courier can only receive but not mail </li>
<li>Take temperature twice a day </li>
<li>Trash bags are sealed and placed outside the door, and staff with full-body biochemical suits clean up regularly </li>
</ul>
<h2 id="Check-in"><a href="#Check-in" class="headerlink" title="Check in"></a>Check in</h2><p>6:10 am </p>
<p>Then the little mage started a 14-day quarantine life<br>Mom was worried that the little mage would be bored if he couldn’t go out<br>However, the little mage was originally a house, and now he doesn’t have to meet people in accordance with the law, so he is very happy<br>In addition, it seems like the M hotel I stayed in when I first went to Singapore </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-12.jpg" alt=""></div></div></div>

<h2 id="14-days-quarantine"><a href="#14-days-quarantine" class="headerlink" title="14 days quarantine"></a>14 days quarantine</h2><p>Of course you can’t take it lightly during isolation<br>Compared with tourists who came from the same country along the way with a double-yin certificate<br>In the isolated hotel, people from various countries will be encountered </p>
<ul>
<li>For example, on December 20th <a href="https://www.zaobao.com.sg/znews/singapore/story20201220-1110087">13 people were admitted to isolation and confirmed coronary disease</a> </li>
<li>There are also 14 who get sick on the 16th day after the isolation </li>
<li>Beijing 14+7 Medical Observation </li>
<li>70% increase in infectiousness of new variants of British coronavirus </li>
<li>… </li>
</ul>
<p>So on the one hand open windows 🪟 ventilation to ensure air circulation and reduce virus concentration<br>On the other hand, wash your hands frequently 🧽, not soft your eyes and nose 👀👃, wear a mask honestly 😷 </p>
]]></content>
      <tags>
        <tag>Covid</tag>
      </tags>
  </entry>
  <entry>
    <title>The principle conjecture and realization of Everything</title>
    <url>/en/QSearch/</url>
    <content><![CDATA[<p>research content </p>
<ol>
<li>Read NTFS MFT </li>
<li>Construction of the hash table </li>
<li>System path of the file </li>
<li>GUI and worker threads </li>
<li>Multiple search methods </li>
<li>MFC interface </li>
</ol>
<p>research plan </p>
<ul>
<li>Early-April-Mid-April to determine the research direction </li>
<li>From the end of April to the end of April. Preparation for each knowledge point, simple test </li>
<li>At the beginning of May, program design and development debugging and operation </li>
<li>Mid-May-End of May Writing graduation design thesis </li>
</ul>
<p>Features and innovation </p>
<ol>
<li>CPU and memory usage are within a reasonable range </li>
<li>The software is stable and provides different search options </li>
<li>Compared with the search function of windows, the file location speed is super fast </li>
</ol>
<h1 id="Fast-location-of-NTFS-disk-files"><a href="#Fast-location-of-NTFS-disk-files" class="headerlink" title="Fast location of NTFS disk files"></a>Fast location of NTFS disk files</h1><p><strong>Summary</strong> </p>
<blockquote>
<p>This article introduces how to enumerate the names of all files and folders on the hard disk under the Windows NTFS disk format, and use the STL of C++ to construct a hash table, as well as the GUI and worker threads of MFC, and finally realize the implementation based on the keywords entered by the user Search as simple as google keyword search, and then instantly return all matching files/folders and recursively get the system path of the file/folder. </p>
</blockquote>
<p><strong>Keywords</strong>: <strong>NTFS, fast, keyword, search, file path</strong> </p>
<h2 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1 Introduction"></a>1 Introduction</h2><p>The directory structure of Windows. In NTFS volumes, files are<br>Arranged in the form of B+ tree, press when searching for files in the directory<br>The B+ tree search method first searches the root node (starting from the root directory), and then compares the file name to be found with the file name corresponding to the child node in the root node to determine which child node corresponds to the storage area to search, and then Use the child node as the current root node and search again until the file is found. ^[1]^ </p>
<p>Although the search provided by the Microsoft system can search text content, the speed is very unsatisfactory. In most cases, we just want to know which folder on the computer the file is stored in, and this program solves this very well. </p>
<h2 id="2-Brief-introduction-to-NTFS"><a href="#2-Brief-introduction-to-NTFS" class="headerlink" title="2 Brief introduction to NTFS"></a>2 Brief introduction to NTFS</h2><h3 id="2-1-NTFS"><a href="#2-1-NTFS" class="headerlink" title="2.1 NTFS"></a>2.1 NTFS</h3><p>NTFS(New Technology File System)是 Windows<br>The standard file system of NT and later Windows. NTFS replaces the file allocation table (FAT) file system and provides a file system for Microsoft’s Windows series operating systems. NTFS has made several improvements to FAT and HPFS (High-Performance File System), for example, it supports metadata and uses advanced data structures to improve performance, reliability, and disk space utilization. ^[2]^ </p>
<h3 id="2-2-Current-situation"><a href="#2-2-Current-situation" class="headerlink" title="2.2 Current situation"></a>2.2 Current situation</h3><p>With NT-based Windows<br>With the popularity of 2000/XP, many individual users have begun to use NTFS. NTFS also uses clusters as a unit to store data files, but the cluster size in NTFS does not depend on the disk or partition size. Shrinking the cluster size not only reduces the waste of disk space, but also reduces the possibility of disk fragmentation. NTFS supports file encryption management function, which can provide users with a higher level of security assurance. ^[3]^ </p>
<h2 id="3-Preparation"><a href="#3-Preparation" class="headerlink" title="3 Preparation"></a>3 Preparation</h2><h3 id="3-1-Design-ideas"><a href="#3-1-Design-ideas" class="headerlink" title="3.1 Design ideas"></a>3.1 Design ideas</h3><p>Read all file names of the disk as data, and match in the data according to the keywords entered by the user. The correct path is returned to the user together with the path to facilitate opening the file. </p>
<p>The specific design idea is shown in Figure 3-1. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_00.jpg" alt="Figure 3-1 Design Ideas"> </p>
<p>The biggest advantage of a hash table is that it greatly reduces the time consumed for data storage and search, which can almost be regarded as a constant time; the cost is only to consume more memory. However, with more and more available memory, it is worthwhile to trade space for time. In addition, easier coding is also one of its characteristics. </p>
<h3 id="3-2-What-is-USN"><a href="#3-2-What-is-USN" class="headerlink" title="3.2 What is USN"></a>3.2 What is USN</h3><p>The top priority of the program is to read the USN. </p>
<p>USN 是 Update Service Number Journal or Change<br>The abbreviation of Journal, the function of recording the modified information in the NTFS volume, you can set the number of files and directories to be monitored in the partition, and record the modification time and content of the monitored object. </p>
<p>When the USN log is enabled, for each NTFS volume, when there is information about adding, deleting, and modifying files, NTFS uses the USN log to record and store it as<br>The format of USN_RECORD. </p>
<h3 id="3-3-Why-is-it-fast"><a href="#3-3-Why-is-it-fast" class="headerlink" title="3.3 Why is it fast"></a>3.3 Why is it fast</h3><p>The USN log is equivalent to the WORD directory and provides an index. Of course, when the content of the article changes, the USN log will record when the modification is made, but it does not record what is modified in it, so the index file is very small. And when you want to find the specific paragraph of the article, you don’t need to turn the mouse wheel wildly, just look at the table of contents directly, and you only need to hold down ctrl+mouse click to locate. </p>
<p>In the same way, when you want to find a certain file, you can find out whether the file exists directly by searching the USN log (that is, the established index). </p>
<p>PS: Although windows is not “everything is a file” (Unix/Linux<br>One of the basic philosophy of ), but the folder also exists in the form of a file, so you can also find the location through USN. </p>
<h3 id="3-4-Environment"><a href="#3-4-Environment" class="headerlink" title="3.4 Environment"></a>3.4 Environment</h3><p>Since the NTFS format is originally a patent of Microsoft, a series of API functions are provided for our convenient access. </p>
<p>As an old but classic Visual C++ 6.0<br>Programming tool, but there was no NTFS format at that time, so VC2005 was chosen as the integrated development environment, and it can only run on Windows systems after 2000. </p>
<h2 id="4-Implementation-of-the-program"><a href="#4-Implementation-of-the-program" class="headerlink" title="4 Implementation of the program"></a>4 Implementation of the program</h2><h3 id="4-1-Read-USN"><a href="#4-1-Read-USN" class="headerlink" title="4.1 Read USN"></a>4.1 Read USN</h3><p>The following are all API functions provided by Microsoft^[4]^, which are included in the <code>&lt;Winioctl.h&gt;</code> header file. </p>
<h4 id="4-1-1-Determine-the-disk-format"><a href="#4-1-1-Determine-the-disk-format" class="headerlink" title="4.1.1 Determine the disk format"></a>4.1.1 Determine the disk format</h4><p>Call the following function to find out the disk in NTFS format </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">GetVolumeInformation(</span><br><span class="line">	lpRootPathName: PChar;               <span class="comment">// 磁盘驱动器代码字符串</span></span><br><span class="line">	lpVolumeNameBuffer: PChar;           <span class="comment">// 磁盘驱动器卷标名称</span></span><br><span class="line">	nVolumeNameSize: DWORD;              <span class="comment">// 磁盘驱动器卷标名称长度</span></span><br><span class="line">	lpVolumeSerialNumber: PDWORD;        <span class="comment">// 磁盘驱动器卷标序列号</span></span><br><span class="line">	var lpMaximumComponentLength: DWORD; <span class="comment">// 系统允许的最大文件名长度</span></span><br><span class="line">    var lpFileSystemFlags: DWORD;        <span class="comment">// 文件系统标识</span></span><br><span class="line">	lpFileSystemNameBuffer: PChar;       <span class="comment">// 格式类型</span></span><br><span class="line">	nFileSystemNameSize: DWORD           <span class="comment">// 文件操作系统名称长度</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>The lpFileSystemNameBuffer, which is what we want, will return strings such as “FAT32” and “NTFS”. </p>
<p>Then use a loop to count A-Z drive letters in NTFS format, and then initialize </p>
<h4 id="4-1-2-Get-drive-disk-handle"><a href="#4-1-2-Get-drive-disk-handle" class="headerlink" title="4.1.2 Get drive disk handle"></a>4.1.2 Get drive disk handle</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">HANDLE hVol = CreateFile(</span><br><span class="line">	<span class="string">&quot;盘符字符串&quot;</span>,  <span class="comment">// 必须如\.\C: (A-Z)的形式</span></span><br><span class="line">	GENERIC_READ | GENERIC_WRITE, <span class="comment">// 可以为</span></span><br><span class="line">	FILE_SHARE_READ | FILE_SHARE_WRITE, <span class="comment">// 必须包含有FILE_SHARE_WRITE</span></span><br><span class="line">	<span class="literal">NULL</span>, <span class="comment">// 这里不需要</span></span><br><span class="line">	OPEN_EXISTING, <span class="comment">// 必须包含OPEN_EXISTING, CREATE_ALWAYS可能会导致错误</span></span><br><span class="line">	FILE_ATTRIBUTE_READONLY, <span class="comment">// FILE_ATTRIBUTE_NORMAL可能会导致错误</span></span><br><span class="line">	<span class="literal">NULL</span>); <span class="comment">// 这里不需要</span></span><br></pre></td></tr></table></figure>

<p>Points to note: </p>
<ol>
<li>CreateFile returns a handle, which will be used below; </li>
<li>Since the drive letter must be in the form of <code>\\.\C:</code>, the backslash “//“ in the <code>C++</code> language represents “/“; </li>
<li>Administrator rights are required (vista, UAC will pop up in win7) </li>
</ol>
<p>If <code>hVol != INVALID_HANDLE_VALUE</code>, it means that the handle is successfully obtained and you can continue to the next step. </p>
<h4 id="4-1-3-Initialize-USN-log"><a href="#4-1-3-Initialize-USN-log" class="headerlink" title="4.1.3 Initialize USN log"></a>4.1.3 Initialize USN log</h4><p>Use <code>FSCTL_CREATE_USN_JOURNAL</code> as the control code of <code>DeviceIoControl</code>. </p>
<p><code>Cujd</code> is a pointer to the input buffer, pointing to the <code>CREATE_USN_JOURNAL_DATA</code> structure. </p>
<h4 id="4-1-4-Get-USN-log-information"><a href="#4-1-4-Get-USN-log-information" class="headerlink" title="4.1.4 Get USN log information"></a>4.1.4 Get USN log information</h4><p>Use <code>FSCTL_QUERY_USN_JOURNAL</code> as the control code of <code>DeviceIoControl</code>. </p>
<p><code>lpOutBuffer</code> returns a <code>USN_JOURNAL_DATA</code>, which is a structure </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    DWORDLONG UsnJournalID;</span><br><span class="line">    USN       FirstUsn;</span><br><span class="line">    USN       NextUsn;</span><br><span class="line">    USN       LowestValidUsn;</span><br><span class="line">    USN       MaxUsn;</span><br><span class="line">    DWORDLONG MaximumSize;</span><br><span class="line">    DWORDLONG AllocationDelta;</span><br><span class="line">&#125; USN_JOURNAL_DATA, *PUSN_JOURNAL_DATA;</span><br></pre></td></tr></table></figure>

<p><code>UsnJournalID</code>, <code>FirstUsn</code>, <code>NextUsn</code> will be used in the next step </p>
<h4 id="4-1-5-Obtaining-USN-Journal-file-information"><a href="#4-1-5-Obtaining-USN-Journal-file-information" class="headerlink" title="4.1.5 Obtaining USN Journal file information"></a>4.1.5 Obtaining USN Journal file information</h4><p>Since <code>USN</code> is stored in the form of <code>USN_RECORD</code>, its structure is: </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">	DWORD RecordLength; <span class="comment">// 记录长度</span></span><br><span class="line">	WORD MajorVersion; <span class="comment">// 主版本</span></span><br><span class="line">	WORD MinorVersion; <span class="comment">// 次版本</span></span><br><span class="line">	DWORDLONG FileReferenceNumber; <span class="comment">// 文件引用数</span></span><br><span class="line">	DWORDLONG ParentFileReferenceNumber; <span class="comment">// 父目录引用数</span></span><br><span class="line">	USN Usn; <span class="comment">// USN</span></span><br><span class="line">	LARGE_INTEGER TimeStamp; <span class="comment">// 时间戳</span></span><br><span class="line">	DWORD Reason; <span class="comment">// 原因</span></span><br><span class="line">	DWORD SourceInfo; <span class="comment">// 源信息</span></span><br><span class="line">	DWORD SecurityId; <span class="comment">// 安全</span></span><br><span class="line">	ID DWORD FileAttributes; <span class="comment">// 文件属性</span></span><br><span class="line">	WORD FileNameLength; <span class="comment">// 文件长度</span></span><br><span class="line">	WORD FileNameOffset; <span class="comment">// 文件名偏移</span></span><br><span class="line">	DWORD ExtraInfo1;</span><br><span class="line">	DWORD ExtraInfo2; DWORD ExtraInfo3; <span class="comment">// Hypothetically added in version 2.3</span></span><br><span class="line">	WCHAR FileName[<span class="number">1</span>]; <span class="comment">// 文件名第一位的指针</span></span><br><span class="line">&#125; USN_RECORD, *PUSN_RECORD;</span><br></pre></td></tr></table></figure>

<p>Note the <code>FileReferenceNumber</code>, <code>ParentFileReferenceNumber</code>, <code>FileNameLength</code>, <code>FileName</code> </p>
<p>These variables are very important </p>
<p><code>DeviceIoControl()</code> cooperates with <code>FSCTL_ENUM_USN_DATA</code> </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">0</span>!=DeviceIoControl(hVol,</span><br><span class="line">	 	FSCTL_ENUM_USN_DATA,</span><br><span class="line">	 	&amp;med,</span><br><span class="line">	 	<span class="keyword">sizeof</span> (med),</span><br><span class="line">	 	Buffer,</span><br><span class="line">	 	BUF_LEN,</span><br><span class="line">	 	&amp;usnDataSize,</span><br><span class="line">	 	<span class="literal">NULL</span>)) &#123;</span><br><span class="line"></span><br><span class="line">	 	DWORD dwRetBytes = usnDataSize - <span class="keyword">sizeof</span> (USN);</span><br><span class="line">	 	<span class="comment">// 找到第一个 USN 记录</span></span><br><span class="line">	 	UsnRecord = (PUSN_RECORD)(((PCHAR)Buffer)+<span class="keyword">sizeof</span> (USN));</span><br><span class="line"></span><br><span class="line">	 	<span class="keyword">while</span> (dwRetBytes&gt;<span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">	 		<span class="comment">// 获取到的信息</span></span><br><span class="line">	 		<span class="function">CString <span class="title">CfileName</span><span class="params">(UsnRecord-&gt;FileName, UsnRecord-&gt;FileNameLength/<span class="number">2</span>)</span></span>;</span><br><span class="line">	 		pfrnName.filename = nameCur.filename = CfileName;</span><br><span class="line">	 		pfrnName.pfrn = nameCur.pfrn = UsnRecord-&gt;ParentFileReferenceNumber;</span><br><span class="line"></span><br><span class="line">	 		<span class="comment">// Vector</span></span><br><span class="line">	 		VecNameCur.push_back(nameCur);</span><br><span class="line"></span><br><span class="line">	 		<span class="comment">// 构建hash...</span></span><br><span class="line">	 		frnPfrnNameMap[UsnRecord-&gt;FileReferenceNumber] = pfrnName;</span><br><span class="line">	 		<span class="comment">// 获取下一个记录</span></span><br><span class="line">	 		DWORD recordLen = UsnRecord-&gt;RecordLength;</span><br><span class="line">	 		dwRetBytes -= recordLen;</span><br><span class="line">	 		UsnRecord = (PUSN_RECORD)(((PCHAR)UsnRecord)+recordLen);</span><br><span class="line"></span><br><span class="line">	 	&#125;</span><br><span class="line">	 	<span class="comment">// 获取下一页数据</span></span><br><span class="line">	 	med.StartFileReferenceNumber = \*(USN \*)&amp;Buffer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Among them, <code>Med</code> is: </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">MFT_ENUM_DATA med;</span><br><span class="line"></span><br><span class="line">med.StartFileReferenceNumber = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">med.LowUsn = <span class="number">0</span>;<span class="comment">//UsnInfo.FirstUsn;</span></span><br></pre></td></tr></table></figure>

<p>After testing here, it is found that if the use of <code>FirstUsn</code> is sometimes incorrect, resulting in incomplete data being obtained, it is better to write 0 directly. </p>
<p><code>med.HighUsn = UsnInfo.NextUsn;</code> </p>
<p>In this loop, the file name obtained each time is inserted into the vector and hash table respectively (described below). </p>
<h4 id="4-1-6-Delete-USN-log-file"><a href="#4-1-6-Delete-USN-log-file" class="headerlink" title="4.1.6 Delete USN log file"></a>4.1.6 Delete USN log file</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">DeviceIoControl(hVol,</span><br><span class="line">	FSCTL_DELETE_USN_JOURNAL,</span><br><span class="line">	&amp;dujd,</span><br><span class="line">	<span class="keyword">sizeof</span> (dujd),</span><br><span class="line">	<span class="literal">NULL</span>,</span><br><span class="line">	<span class="number">0</span>,</span><br><span class="line">	&amp;br,</span><br><span class="line">	<span class="literal">NULL</span>)</span><br></pre></td></tr></table></figure>

<h4 id="4-1-7-Results-of-enumerating-all-files"><a href="#4-1-7-Results-of-enumerating-all-files" class="headerlink" title="4.1.7 Results of enumerating all files"></a>4.1.7 Results of enumerating all files</h4><p>Save the data as Allfile.txt for analysis, as shown in Figure 4-1. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_01.jpg" alt="图 4-1 Allfile.txt"> </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_02.jpg" alt="图 4-1 Allfile.txt"> </p>
<p>I used the D drive on my computer as a test and enumerated all the files. As shown in the figure, there are about 40W files, a total of more than 100W data, and the file size is about 20MB. This has a vague estimate of the amount of memory occupied by subsequent programs, which is about 50M. For even only 1G of memory, it is within a reasonable range. With the original data, the analysis is as follows: </p>
<p>For example, Linux programming practice.isz file, its system path is: <code>D:\Ghost\Linux\Linux programming practice.isz</code>, look at the result in the file: </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\</span><br><span class="line">Frn: 5000000000005</span><br><span class="line">Pfrn: NULL</span><br><span class="line">……</span><br><span class="line">……</span><br><span class="line">Ghost</span><br><span class="line">Frn: 20000000000fd</span><br><span class="line">Pfrn: 5000000000005</span><br><span class="line">……</span><br><span class="line">……</span><br><span class="line">Linux</span><br><span class="line">Frn: e0000000010d2</span><br><span class="line">Pfrn: 20000000000fd</span><br><span class="line">……</span><br><span class="line">……</span><br><span class="line">Linux编程实践.isz</span><br><span class="line">Frn: 190000000003b2</span><br><span class="line">Pfrn: e0000000010d2</span><br><span class="line">可以得出：</span><br><span class="line">Linux编程实践.isz-&gt;Pfrn &#x3D;&#x3D; Linux-&gt;Frn</span><br><span class="line">Linux-&gt;Pfrn &#x3D;&#x3D; Ghost-&gt;Frn</span><br><span class="line">Ghost-&gt;Pfrn &#x3D;&#x3D; D:\ -&gt; Frn</span><br><span class="line">D:\ -&gt; Pfrn 停止</span><br></pre></td></tr></table></figure>

<p>So using a recursive function (directly or indirectly calling its own function), you can get the complete path. </p>
<h3 id="4-2-Build-search-data"><a href="#4-2-Build-search-data" class="headerlink" title="4.2 Build search data"></a>4.2 Build search data</h3><h4 id="4-2-1-Construct-Vector"><a href="#4-2-1-Construct-Vector" class="headerlink" title="4.2.1 Construct Vector"></a>4.2.1 Construct Vector</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">name_cur</span> &#123;</span></span><br><span class="line">    CString filename;</span><br><span class="line">    DWORDLONG pfrn;</span><br><span class="line">&#125;Name_Cur;</span><br></pre></td></tr></table></figure>

<p>Vector： </p>
<p>A sequential container. The elements in the vector are accessed via their position index. You can call push_back or<br>The insert function adds elements to the vector. In vector<br>Adding elements to the container may cause the re-allocation of memory space for the container, and may also invalidate all iterators. in<br>vector<br>Adding (or deleting) elements in the middle of the container will invalidate all iterators pointing to elements after the insertion (or deletion) point. </p>
<p>Use Vector to store &lt;file name, current directory&gt;. Due to the requirements of fuzzy search, fast search methods such as binary search are not applicable here, and the linear traversal method of Vector from begin to end meets this requirement. . </p>
<h4 id="4-2-2-Building-a-hash-table"><a href="#4-2-2-Building-a-hash-table" class="headerlink" title="4.2.2 Building a hash table"></a>4.2.2 Building a hash table</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">pfrn_name</span> &#123;</span></span><br><span class="line">    DWORDLONG pfrn;</span><br><span class="line">    CString filename;</span><br><span class="line">&#125;Pfrn_Name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">map</span>&lt;DWORDLONG, Pfrn_Name&gt; Frn_Pfrn_Name_Map;</span><br></pre></td></tr></table></figure>

<p>Here we use the map library function ^[5]^ provided by STL, map is a collection of key-value pairs. map<br>The type can usually be understood as an associative array (associative<br>array): You can use the key as a subscript to get a value, just like the built-in array type. The essence of association is that the value of an element is associated with a specific key, rather than obtained by the position of the element in the array. </p>
<ol>
<li>Considering that if you implement the hash function yourself, there may be several bugs that affect the progress, it is better to use the stable map provided by STL to implement it. </li>
<li>“Don’t Reinvent the Wheel” Don’t reinvent the wheel^[6]^ <ol>
<li>For example, Google’s Android, is Google’s inability to develop a system kernel alone, so it uses a very mature Linux kernel? I think it’s impossible for a world giant like Google to be without this ability. Instead, it respects the principle of not reinventing the wheel. </li>
</ol>
</li>
</ol>
<h4 id="4-2-3-Insert-data"><a href="#4-2-3-Insert-data" class="headerlink" title="4.2.3 Insert data:"></a>4.2.3 Insert data:</h4><p>This is used here in Section 4.1.5, Get USN Journal<br>In the loop of file information, the <code>USN_RECORD</code> information obtained each time, the <code>filename</code>,<br><code>pfrn</code>, <code>frn</code> are inserted into the vector and hash table respectively. </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pfrnName.filename &#x3D; nameCur.filename &#x3D; CfileName;</span><br><span class="line">pfrnName.pfrn &#x3D; nameCur.pfrn &#x3D; UsnRecord-&gt;ParentFileReferenceNumber;</span><br><span class="line">VecNameCur.push_back(nameCur);</span><br><span class="line">frnPfrnNameMap[UsnRecord-&gt;FileReferenceNumber] &#x3D; pfrnName;</span><br></pre></td></tr></table></figure>

<h3 id="4-3-Interface"><a href="#4-3-Interface" class="headerlink" title="4.3 Interface"></a>4.3 Interface</h3><p>When starting a project, VC2005 provides command line (console) projects and GUI projects. Command line programming is very convenient, fast, practical, and relatively simple. If the console can meet the requirements, the interface is not necessary. Or sometimes the target platform cannot display the graphical user interface. but,<br>GUI has more obvious advantages, such as menu system and better interactivity. In addition, in the process of menu selection and moving data between fields,<br>The mouse is very useful, and the GUI is the way to go. Therefore, when writing the program, I first tested some intermediate data under the console, and then switched to the GUI interface when it was over. </p>
<p>MFC: Microsoft Foundation Classes, also known as MFC<br>, Is Microsoft’s response to “lowering Windows<br>The greatest contribution made by programming is bored, bored and difficult. MFC<br>Makes the generation of dialog boxes extremely simple. It also implements a message delivery system (message<br>dispatching), dealing with the easy mistakes of WPARAM and LP ARAM. MFC<br>It is even the driving force to lure some people into C++.<br>This program is implemented by MFC provided by Microsoft, as shown in Figure 4-2: </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_04.jpg" alt="Figure 4-2 MFC interface"> </p>
<h4 id="4-3-1-KISS-principle"><a href="#4-3-1-KISS-principle" class="headerlink" title="4.3.1 KISS principle"></a>4.3.1 KISS principle</h4><p>The KISS principle is “Keep It Sample And<br>The abbreviation of “Stupid”, simplicity and ease of operation are the most important principles of design. </p>
<p>The KISS principle is probably the most respected in design, home improvement design, interface design<br>In terms of operational design, complex things are becoming more and more popular, while simple things are becoming more and more recognized. For example, these UI designs and our Chinese web pages are negative examples. “IKEA” (IKEA) simple and efficient home design and production ideas; “Microsoft” (Microsoft) “what you see is what you get” concept; “Google” (Google) simple and direct business style, without exception, follow The “kiss” principle. ^[7]^ </p>
<h4 id="4-3-2-Function"><a href="#4-3-2-Function" class="headerlink" title="4.3.2 Function"></a>4.3.2 Function</h4><p>Under the kiss principle, be as concise as possible. Add Editbox button listbox<br>menu^[8]^The functions of these controls are as follows: </p>
<ul>
<li>Editbox <ul>
<li>Get the string that needs to be searched by the user </li>
</ul>
</li>
<li>Button <ol>
<li>Get the string in EditBox </li>
<li>The character is too short to pop up a prompt </li>
<li>Add a magnifying glass picture, the function is clear at a glance </li>
</ol>
</li>
<li>Listbox <ol>
<li>Display the matching file name and path, double-click to open the file </li>
<li>Since the path may be relatively long, add a horizontal scroll bar </li>
<li>Double-click the result file path in Listbox to open the file selected by double-click </li>
</ol>
</li>
<li>Menu <ul>
<li>Menu, you can select case, search order </li>
</ul>
</li>
</ul>
<h3 id="4-4-Join-thread"><a href="#4-4-Join-thread" class="headerlink" title="4.4 Join thread"></a>4.4 Join thread</h3><h4 id="4-4-1-Why-join-threads"><a href="#4-4-1-Why-join-threads" class="headerlink" title="4.4.1 Why join threads"></a>4.4.1 Why join threads</h4><p>The benefits of threads: threads are cheap. Thread starts faster, exits faster, and has less impact on system resources. </p>
<p>Also consider: </p>
<ol>
<li>Due to the limitation of io, it doesn’t make much sense to use multiple threads to read MFT at the same time on the same hard disk. </li>
<li>Disk access to MFT located in different partitions of the same hard disk may affect the speed instead. For computers with multiple hard disks, efficiency should be greatly improved. However, users of multiple hard drives may form a RAID array. The best solution should be to read A-Z disks sequentially. </li>
<li>When the MFC was first created, it was executed sequentially. As a result, the interface could not be displayed until all data statistics were completed. During this process, users would easily lose patience. </li>
<li>Finally decide a UI thread, a worker thread background statistics. </li>
</ol>
<h4 id="4-4-2-Start-a-Worker-thread-in-MFC"><a href="#4-4-2-Start-a-Worker-thread-in-MFC" class="headerlink" title="4.4.2 Start a Worker thread in MFC"></a>4.4.2 Start a Worker thread in MFC</h4><p>MFC has long added support for multithreading. In a typical MFC<br>In the program, the support of multithreading is hidden behind a lot of amazing work. MFC<br>Even attempts to strengthen certain Win32 concepts related to multithreading. </p>
<p>Both GUI and worker threads are started with AfxBeginThread(), but MFC uses the overloading nature of C++ functions to provide two different declarations for this function. The compiler will automatically select the correct one to use based on the parameters you provide. ^[9]^ </p>
<p>Use AfxBeginThread to start the thread.<br>pParam Any 4-byte value, used to pass to the new thread. It can be an integer, or a pointer, or just a zero. </p>
<p>Only the first two parameters are used here, the thread function in the object, and the object pointer </p>
<p>You can see two threads in the task manager, as shown in Figure 4-3 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_03.jpg" alt="Figure 4-3 Task Manager displays the number of threads"> </p>
<p>When the worker thread completes its task, it will automatically end and return to a thread. </p>
<h4 id="4-4-3-Minimize-to-the-notification-area"><a href="#4-4-3-Minimize-to-the-notification-area" class="headerlink" title="4.4.3 Minimize to the notification area"></a>4.4.3 Minimize to the notification area</h4><p>Now more and more programs click close in the upper right corner, which is actually minimized to the tray icon. To exit the program, you need to right-click on the tray icon to exit. </p>
<p>Realize minimization without exiting the program, you can find files conveniently. </p>
<p>1) Minimize the display on the taskbar. </p>
<p>2) Click Close to exit to the tray icon without displaying it in the taskbar; double-click to reply to the display window. </p>
<p>3) Add menu to tray icon. </p>
<h3 id="4-5-Find"><a href="#4-5-Find" class="headerlink" title="4.5 Find"></a>4.5 Find</h3><h4 id="4-5-1-Wildcard"><a href="#4-5-1-Wildcard" class="headerlink" title="4.5.1 Wildcard"></a>4.5.1 Wildcard</h4><p>In actual applications, it’s impossible to remember the file name clearly, such as test.2012-5-14.txt, which often means “test<br>.txt”, so fuzzy search is needed. Because under the console, the file name is &lt;filename,<br>pfrn&gt; Create a hash table. If you want to implement fuzzy search, the hash table becomes unnecessary. You can directly use the container vector. </p>
<p>According to the actual situation, no strict wildcard is required, “*?”<br>Can solve most of the search problems, plus users generally may not know the use of wildcards, let alone regular expressions. So start with “space”<br>Instead of “*?”, implement Baidu<br>Google’s search method of separating keywords with spaces is a good solution. **** </p>
<h4 id="4-5-2-Case-order"><a href="#4-5-2-Case-order" class="headerlink" title="4.5.2 Case, order"></a>4.5.2 Case, order</h4><p>There are generally the following two situations: </p>
<ol>
<li>The user may not remember the case of the file name or path </li>
<li>Sometimes there are too many files, and strict capitalization may be required to filter the correct files </li>
<li>Can’t remember the order of keywords </li>
</ol>
<p>So provide the following two options: </p>
<ol>
<li>Strict case </li>
<li>No order </li>
</ol>
<p>According to the general situation, the default is: case-insensitive, sequential search </p>
<h4 id="4-5-3-User-privacy-and-system-path"><a href="#4-5-3-User-privacy-and-system-path" class="headerlink" title="4.5.3 User privacy and system path"></a>4.5.3 User privacy and system path</h4><ol>
<li>Consider that some folders are used to store users’ private files. </li>
<li>System folders, for example: <code>c:\windows\*</code> General users will not use it. The same search will only increase unnecessary files and burden the system. </li>
</ol>
<p>So it is necessary to add an exclude folder option, as shown in Figure 4-4 </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_06.jpg" alt="Figure 4-4 Exclude Folder Interface"> </p>
<p>The corresponding function is: </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isIgnore</span><span class="params">( <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;\* pignorelist )</span> </span>&#123;</span><br><span class="line">	<span class="built_in">string</span> tmp = CW2A(path);</span><br><span class="line">	<span class="keyword">for</span> ( <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;::iterator it = pignorelist-&gt;begin();</span><br><span class="line">		it != pignorelist-&gt;end(); ++it ) &#123;</span><br><span class="line">			<span class="keyword">size_t</span> i = it-&gt;length();</span><br><span class="line">			<span class="keyword">if</span> ( !tmp.compare(<span class="number">0</span>, i, \*it,<span class="number">0</span>, i) ) &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-5-4-Implementation"><a href="#4-5-4-Implementation" class="headerlink" title="4.5.4 Implementation"></a>4.5.4 Implementation</h4><p>New matching string class </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cmpStrStr</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	cmpStrStr(<span class="keyword">bool</span> uplow, <span class="keyword">bool</span> inorder) &#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;uplow = uplow;</span><br><span class="line">		<span class="keyword">this</span>-&gt;isOrder = inorder;</span><br><span class="line">	&#125;</span><br><span class="line">	~cmpStrStr() &#123;&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">cmpStrFilename</span><span class="params">(CString str, CString filename)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">infilename</span><span class="params">(CString &amp;strtmp, CString &amp;filenametmp)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">bool</span> uplow;</span><br><span class="line">	<span class="keyword">bool</span> isOrder;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>Traverse the VecNameCur in <strong>4.2.1</strong>, pass the cmpStrFilename matching function, and get the matching filename </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ( <span class="built_in">vector</span>&lt;Name_Cur&gt;::const_iterator cit = VecNameCur.begin();</span><br><span class="line">	cit != VecNameCur.end(); ++cit) &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( cmpstrstr.cmpStrFilename(str, cit-&gt;filename) ) &#123;</span><br><span class="line">		path.Empty();</span><br><span class="line">		<span class="comment">// 还原 路径</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">// vol:\  path \ cit-&gt;filename</span></span><br><span class="line">		getPath(cit-&gt;pfrn, path);</span><br><span class="line">		path += cit-&gt;filename;</span><br><span class="line">		<span class="comment">// path已是全路径</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> ( isIgnore(pignorelist) ) &#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		rightFile.push_back(path);</span><br><span class="line">		<span class="comment">//path.Empty();</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cmpStrFilename函数：</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> end = str.GetLength();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ( pos &lt; end ) &#123;</span><br><span class="line">	<span class="comment">// 对于str，取得 每个空格分开为的关键词</span></span><br><span class="line">	pos = str.Find( _T(<span class="string">&#x27; &#x27;</span>) );</span><br><span class="line"></span><br><span class="line">	CString strtmp;</span><br><span class="line">	<span class="keyword">if</span> ( pos == <span class="number">-1</span> ) &#123;</span><br><span class="line">		<span class="comment">// 无空格</span></span><br><span class="line">		strtmp = str;</span><br><span class="line">		pos = end;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		strtmp = str.Mid(<span class="number">0</span>, pos<span class="number">-0</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( !infilename(strtmp, filename) ) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	str.Delete(<span class="number">0</span>, pos);</span><br><span class="line">	str.TrimLeft(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>You can easily rewrite the string matching algorithm in the infilename function to achieve some extensions </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">CString <span class="title">filenametmp</span><span class="params">(filename)</span></span>;</span><br><span class="line"><span class="keyword">int</span> pos;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( !uplow ) &#123;</span><br><span class="line">	<span class="comment">// 大小写敏感</span></span><br><span class="line">	filenametmp.MakeLower();</span><br><span class="line">	pos = filenametmp.Find(strtmp.MakeLower());</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	pos = filenametmp.Find(strtmp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="number">-1</span> == pos ) &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( !isOrder ) &#123;</span><br><span class="line">	<span class="comment">// 无顺序</span></span><br><span class="line">	filename.Delete(<span class="number">0</span>, pos+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-5-5-Path-output"><a href="#4-5-5-Path-output" class="headerlink" title="4.5.5 Path output"></a>4.5.5 Path output</h4><p>After getting the matching file name, the next step is to get the system path of the file. Pass the full name of the matching file name obtained above into the frnPfrnNameMap hash table constructed in <strong>4.2.2</strong>, and get the path recursively. </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">CString <span class="title">Volume::getPath</span><span class="params">(DWORDLONG frn, CString &amp;path)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 查找2</span></span><br><span class="line">	Frn_Pfrn_Name_Map::iterator it = frnPfrnNameMap.find(frn);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (it != frnPfrnNameMap.end()) &#123;</span><br><span class="line"></span><br><span class="line">		  <span class="keyword">if</span> ( <span class="number">0</span> != it-&gt;second.pfrn ) &#123;</span><br><span class="line">		 	  getPath(it-&gt;second.pfrn, path);</span><br><span class="line">		  &#125;</span><br><span class="line"></span><br><span class="line">		  path += it-&gt;second.filename;</span><br><span class="line">		  path += ( _T(<span class="string">&quot;\&quot;) );</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	return path;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="5-Complexity-analysis"><a href="#5-Complexity-analysis" class="headerlink" title="5 Complexity analysis"></a>5 Complexity analysis</h2><h3 id="5-1-Time-complexity"><a href="#5-1-Time-complexity" class="headerlink" title="5.1 Time complexity"></a>5.1 Time complexity</h3><p>In theory, the time complexity is: </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_05.jpg" alt="Figure 5-1 Complexity analysis"> </p>
<p>On the AMD Athlon(tm) II X2 245 2.9GHz processor, the result is almost instantaneous. </p>
<h3 id="5-2-Space-complexity"><a href="#5-2-Space-complexity" class="headerlink" title="5.2 Space complexity"></a>5.2 Space complexity</h3><p>Due to the huge number of computer files-usually 10W-100W, the memory usage of the program itself can be ignored. </p>
<p>234,708 files about 43M. </p>
<p>For systems with at least 2G of memory today, it is not a burden. </p>
<h2 id="6-Problems-encountered"><a href="#6-Problems-encountered" class="headerlink" title="6 Problems encountered"></a>6 Problems encountered</h2><h3 id="6-1-Unable-to-initialize-USN-file"><a href="#6-1-Unable-to-initialize-USN-file" class="headerlink" title="6.1 Unable to initialize USN file"></a>6.1 Unable to initialize USN file</h3><p>The O disk on the computer cannot initialize the USN log file. Through debugging, it is found that: </p>
<p>DeviceIoControl returns 0, GetLastError 0x70 </p>
<p>Check msdn, the reason is ERROR_SHARING_PAUSED </p>
<p>It turns out that I forgot to initialize and add the following code, the program can access the O disk normally </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">CREATE_USN_JOURNAL_DATA cujd;</span><br><span class="line">cujd.MaximumSize = <span class="number">0</span>; <span class="comment">// 0表示使用默认值</span></span><br><span class="line">cujd.AllocationDelta = <span class="number">0</span>; <span class="comment">// 0表示使用默认值</span></span><br></pre></td></tr></table></figure>

<h3 id="6-2-The-problem-of-wchar-and-char-under-unicode"><a href="#6-2-The-problem-of-wchar-and-char-under-unicode" class="headerlink" title="6.2 The problem of wchar and char under unicode"></a>6.2 The problem of wchar and char under unicode</h3><p>Initially, in terms of string processing, the standard library function string was used as the processing method, but in unicode<br>The following is a double-byte wchar, which has gotten into a lot of trouble in string conversion. Finally, CString is used as the default string, and _T(“”) is used to initialize the string. </p>
<h3 id="6-3-ifdef-position-problem"><a href="#6-3-ifdef-position-problem" class="headerlink" title="6.3 #ifdef position problem"></a>6.3 #ifdef position problem</h3><p>#ifdef, no breakpoints can be set in it, and then I noticed that #define was written in front of include. </p>
<h3 id="6-4-Parameter-transfer"><a href="#6-4-Parameter-transfer" class="headerlink" title="6.4 Parameter transfer"></a>6.4 Parameter transfer</h3><p>I started to design with a process-oriented thinking, and got into the trouble of passing the same handle by passing parameters. Later, I changed to a class method to improve a lot. </p>
<h2 id="7-small-optimizations"><a href="#7-small-optimizations" class="headerlink" title="7 small optimizations"></a>7 small optimizations</h2><h3 id="7-1-Reading-speed"><a href="#7-1-Reading-speed" class="headerlink" title="7.1 Reading speed"></a>7.1 Reading speed</h3><p>When constructing the hash function, three methods were thought of, and experiments were performed respectively, and the time function was used to count the time spent. The results are as follows: </p>
<p>1) After modifying the code, read the usn once, save it in a temporary file, read and build the hash table </p>
<p>Each run, the average time is about 27s </p>
<p>2) Use vector to store data in memory, after release, </p>
<p>The result is gratifying, and the time has been increased by nearly 10 times! ! ! As shown in Figure 7-1: </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_06.jpg" alt="7-1 Traverse all disks"> </p>
<p>It is completely within the acceptable range. </p>
<p>The first run was obviously time-consuming, and then the file was pre-read from the disk cache, and the speed soared. The analysis hotspot should lie in the disk seek time and file reading. </p>
<h3 id="7-2-Open-file-method"><a href="#7-2-Open-file-method" class="headerlink" title="7.2 Open file method"></a>7.2 Open file method</h3><p>In <strong>4.3.2</strong>, double-click the file path in the ListBox to open the response file. At the beginning, the system() system function was used, but a black console window will pop up, and the main window will be locked, etc. Execution can only be continued after the file is closed, which is very detrimental to user experience. Call the ShellExecute function instead to open up a new process and the main window can continue to execute. </p>
<h3 id="7-3-Progress-bar"><a href="#7-3-Progress-bar" class="headerlink" title="7.3 Progress bar"></a>7.3 Progress bar</h3><p>After the V1.0 version was released, there was no prompt when some students reported the background statistics file, so I don’t know when it will be completed. So a progress bar is added at the bottom of the main interface to enhance interactivity, as shown in the figure<br>7-2: </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/QSearch_07.jpg" alt="Figure 7-2 Progress bar"> </p>
<p>Of course, the thread function has also made necessary changes: </p>
<h1 id="8-Conclusion"><a href="#8-Conclusion" class="headerlink" title="8 Conclusion"></a>8 Conclusion</h1><p>At this point, the basic functions of the program are completed. Tests on multiple computers and different systems (XP and later windows series) have basically no suspended animations and program hangs. </p>
<p>Due to time and other reasons, there are still many functions that have not been implemented, such as the interface cannot be extended, and the file data cannot be dynamically collected. </p>
<h1 id="references"><a href="#references" class="headerlink" title="references"></a>references</h1><p>[1] Hardware white paper. NTFS file system specification [OL]. Baidu Library, 2011: 30.<br>[2] Beiyu. Research on several technologies of NTFS file system [OL]. 2007: 7.<br>[3] Babies. Interactive Encyclopedia [OL]. <a href="http://www.hudong.com/wiki/ntfs">http://www.hudong.com/wiki/ntfs</a><br>[4] Microsoft. MSDN Library[OL]. 2012 :<br>[5] Stanley B.Lippman / Josée LaJoie / Barbara E.Moo. C++ Primer[M]. Addison-Wesley Professional , 2006 : 10.3<br>[6] Eric S. Raymond. Translators: Jiang Hong, He Yuan, Cai Xiaojun. The Art of UNIX Programming [m]. Publishing House of Electronics Industry, 2006:<br>[7] Chen Hao. Some principles of software design [OL]. <a href="http://coolshell.cn/articles/4535.html">http://coolshell.cn/articles/4535.html</a><br>[8] Sun Xin. VC++ in-depth detailed explanation [m]. Electronics Industry, 2006<br>[9] Jim Beveridge / Robert Wiener. Multithreading Applications in Win32: The Complete Guide to Threads<br>[10] Addison-Wesley Professional, 1996: 223-243 </p>
<h1 id="English-summary"><a href="#English-summary" class="headerlink" title="English summary"></a>English summary</h1><p><strong>Rapid positioning of the NTFS disk files</strong> </p>
<p>LE IH Austria </p>
<p>(School of Information &amp; Computer, Anhui Agricultural University, Hefei 230036) </p>
<p><strong>Abstract</strong>：This article describes on windows NTFS disk, the<br>enumeration all the names of the files and folders on the hard disk ,<br>and to build a hash table by using C++ STL, MFC GUI and worker thread.<br>Ultimately the user to enter keywords , as a simple search like google<br>keyword search , and then instantly return all matching files / folders<br>and their system path. </p>
<p><strong>Key words :</strong> NTFS, Fast, Search, Keywords, File Path </p>
]]></content>
      <tags>
        <tag>Programming</tag>
        <tag>Everything</tag>
        <tag>NTFS</tag>
      </tags>
  </entry>
  <entry>
    <title>🇮🇹-0-2</title>
    <url>/en/italy-0-2/</url>
    <content><![CDATA[<h2 id="Vatican"><a href="#Vatican" class="headerlink" title="Vatican"></a>Vatican</h2><p>Original Vatican in Italy<br>The area is less than the domestic colleges and universities<br>Territory is not open<br>In addition to museums </p>
<a id="more"></a>

<h3 id="Egyptian"><a href="#Egyptian" class="headerlink" title="Egyptian"></a>Egyptian</h3><p>I saw that the mummy feels more horrible.<br>Dare to take pictures<br>I am afraid of being chased soul </p>
<p>There is also a Nosbis </p>
<p>If you play Assassin’s Creed: Origin<br>Will see a lot of familiar elements </p>
<h3 id="Mythical-hero"><a href="#Mythical-hero" class="headerlink" title="Mythical hero"></a>Mythical hero</h3><p>Unfortunately, the little mage has not reached the corresponding level in art cultivation.<br>I saw the art of these textbooks, and the results didn’t know who is.<br>Be ashamed </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-06.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-10.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-14.jpg" alt=""></div></div></div>

<h3 id="Pine-Art-Garden-amp-Broken-Earth"><a href="#Pine-Art-Garden-amp-Broken-Earth" class="headerlink" title="Pine Art Garden &amp; Broken Earth"></a>Pine Art Garden &amp; Broken Earth</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-17.jpg" alt=""></div></div></div>

<h3 id="Laoy-hole-and-his-son"><a href="#Laoy-hole-and-his-son" class="headerlink" title="Laoy hole and his son"></a>Laoy hole and his son</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-28.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-25.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-27.jpg" alt=""></div></div></div>

<h3 id="Circular-exhibition-hall"><a href="#Circular-exhibition-hall" class="headerlink" title="Circular exhibition hall"></a>Circular exhibition hall</h3><p>The central center is the bidet used by Nero, Nero. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-29.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-31.jpg" alt=""></div></div></div>

<h3 id="mural"><a href="#mural" class="headerlink" title="mural"></a>mural</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-37.jpg" alt=""></div></div></div>

<h3 id="Rafael-painting-room"><a href="#Rafael-painting-room" class="headerlink" title="Rafael painting room"></a>Rafael painting room</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-39.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-40.jpg" alt=""></div></div></div>

<h3 id="Sistin-Chapel"><a href="#Sistin-Chapel" class="headerlink" title="Sistin Chapel"></a>Sistin Chapel</h3><p>The final trial and Genesis of Michelangelo<br>Not allowed to take pictures<br>You can only stay for 15 minutes per person. </p>
<p>The original century that usually see is actually the most intermediate, in fact, a total of nine chapters<br>Darkness, creative day, month, grass, semland, creating Adam, creating Eve, original sin - Extended Eden, Noah Dedication, Great Flood, Noahirun </p>
<h3 id="Spiral-staircase"><a href="#Spiral-staircase" class="headerlink" title="Spiral staircase"></a>Spiral staircase</h3><p>Export continues to be shocked<br>It turned out to be here </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-41.jpg" alt=""></div></div></div>

<h3 id="Holy-cup"><a href="#Holy-cup" class="headerlink" title="Holy cup"></a>Holy cup</h3><p>Fate Stay Night </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-44.jpg" alt=""></div></div></div>

<h2 id="St-Peter-Square"><a href="#St-Peter-Square" class="headerlink" title="St. Peter Square"></a>St. Peter Square</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-45.jpg" alt=""></div></div></div>

<h2 id="Angel-fort"><a href="#Angel-fort" class="headerlink" title="Angel fort"></a>Angel fort</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-47.jpg" alt=""></div></div></div>

<p>Suddenly the assassin’s creed </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-53.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-54.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-55.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-56.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-57.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-58.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-59.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-60.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-61.jpg" alt=""></div></div></div>

<h2 id="sunset"><a href="#sunset" class="headerlink" title="sunset"></a>sunset</h2><p>First time watching sunset </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-62.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-66.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-67.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-69.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-68.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-70.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-71.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-73.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-74.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-76.jpg" alt=""></div></div></div>

<h2 id="the-next-day"><a href="#the-next-day" class="headerlink" title="the next day"></a>the next day</h2><p>On the road, a little brother comes to recommend a day tour bus<br>Received the money to get tickets, then people disappeared<br>When I thought it was a liar, my little brother came back with two votes.<br>Loop, you can get off at the bus at all times, or very good </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-78.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-79.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-82.jpg" alt=""></div></div></div>

<h2 id="Pantheon"><a href="#Pantheon" class="headerlink" title="Pantheon"></a>Pantheon</h2><p>There are too many people, and I have seen an eye outside. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-80.jpg" alt=""></p>
<h2 id="Roman-fighting-beast"><a href="#Roman-fighting-beast" class="headerlink" title="Roman fighting beast"></a>Roman fighting beast</h2><p>Scorpio, last time I saw the beast, the little mage played Assassin’s Creed: Revelation<br>Climb the beast, see the sunset<br>I have been shocked for a long time.<br>I didn’t expect to see it in the three-dimensional world.<br>Is it incredible? </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-92.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-86.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-91.jpg" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-89.jpg" alt=""></div></div></div>

<h2 id="Arc-de-Triomphe"><a href="#Arc-de-Triomphe" class="headerlink" title="Arc de Triomphe"></a>Arc de Triomphe</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-87.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-88.jpg" alt=""></div></div></div>

<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-90.jpg" alt=""></p>
<h2 id="Hermes-small-wallet"><a href="#Hermes-small-wallet" class="headerlink" title="Hermes small wallet"></a>Hermes small wallet</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-94.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-95.jpg" alt=""></div></div></div>

<p>Back to CBD Luxury Building Street<br>Herbled recommended to buy love Ma Shi bag<br>Say what is in luxury, it is also a top existence </p>
<p>The little mage did not hear Hermès before the apple launched the strap.<br>Naturally do not believe<br>I want to read less, don’t lie to me.<br>Going to Google “Hermes is not a luxury”<br>Surprised to find that the might is really true </p>
<p>Brush it off, I bought a pack of puppies.<br>Be careful of the blank box<br>Check out to see a huge incomparable box in the garbage pile next to it. </p>
<h2 id="airport"><a href="#airport" class="headerlink" title="airport"></a>airport</h2><p>Torting all the way, I finally came back.<br>Unlike Japan, Europe can refund at the airport<br>perfect </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-97.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-98.jpg" alt=""></div></div></div>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Italy</tag>
        <tag>🇮🇹</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-1-0</title>
    <url>/en/japan-1-0/</url>
    <content><![CDATA[<h1 id="Kyoto"><a href="#Kyoto" class="headerlink" title="Kyoto"></a>Kyoto</h1><p>Eleven holidays have come back from 🇮🇹<br>Maybe because the credit card is brushed, China Merchants Bank sent to Zhang Premium </p>
<p>One day after half a month, the small mage is sent to Japan to see Maple Leaf.<br>Indicates that route planning has been done<br>Kyoto-&gt; Nara-&gt; Kinosaki-&gt; Osaka<br>If you are not good in the system, please fake, so you can only order the tickets in the beginning of November, I hope to catch the tail of the maple leaf season. </p>
<p>Little Master is watching the Kansai Area, I haven’t been there.<br>Immediately, the June is a three-year round-trip visa.<br>You can also go together together </p>
<p>Although it is only two weeks, the time is more urgent<br>Fortunately, buy tickets, crazy, do two weeks, complete the task in advance<br>After submitting the code to the organization, you started the second Japanese </p>
<p>I still don’t know how to watch it.<br>When I arrived at the airport, I was stupid when I saw this single small plane.<br>It’s just Boeing 737<br>Although MAX events have not occurred yet<br>But it is still worried that it will fly where to fall into the sea.<br>Open the LOST main line </p>
<a id="more"></a>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-02.webp" alt=""></div></div></div>

<h2 id="Kyoto-Metro-Station"><a href="#Kyoto-Metro-Station" class="headerlink" title="Kyoto Metro Station"></a>Kyoto Metro Station</h2><p>Last time in Tokyo in the same platform 🚉, etc. </p>
<p>The little mage is still the first time, the subway station is a huge MALL.<br>A total of 7 floors, eat more and more<br>Although it was only in the beginning of November, it has been filled with Christmas. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-05.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-08.webp" alt=""></div></div></div>

<h2 id="Golden-Pavilion-Temple"><a href="#Golden-Pavilion-Temple" class="headerlink" title="Golden Pavilion Temple"></a>Golden Pavilion Temple</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-12.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-10.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-11.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-15.webp" alt=""></div></div></div>

<h2 id="Kyoto-Gyoen"><a href="#Kyoto-Gyoen" class="headerlink" title="Kyoto Gyoen"></a>Kyoto Gyoen</h2><p>There is a special yellow leaf tree between red green </p>
<blockquote>
<p>Headless </p>
</blockquote>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-23.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-24.webp" alt=""></div></div></div>

<p>Time to come, no one </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-20.webp" alt=""></div></div></div>

<h2 id="Shimizuji"><a href="#Shimizuji" class="headerlink" title="Shimizuji"></a>Shimizuji</h2><p>Watch the kimono sister </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-28.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-32.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-33.webp" alt=""></div></div></div>

<h2 id="Temple"><a href="#Temple" class="headerlink" title="Temple"></a>Temple</h2><p>Touching a family in shooting wedding </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-35.webp" alt=""></div></div></div>

<p>Sunset and strange faucet </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-36.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-38.webp" alt=""></div></div></div>

<p>Seeing that many people are seeking God of Worship Buddha<br>The little mage is also going to cast the coin rock.<br>I hope that the app is online, don’t crash 🙏 </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-41.webp" alt=""></div></div></div>

<h2 id="Lushan-small-train"><a href="#Lushan-small-train" class="headerlink" title="Lushan small train"></a>Lushan small train</h2><p>The next morning, I went to the Lushan small train early in the morning. It is said that the scenery is picturesque.<br>However, be sure to buy the side of the mountain, otherwise I will only listen to other tourists “wow”, I can’t see anything. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-47.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-49.webp" alt=""></div></div></div>

<h2 id="Chino-Bamboo-forest-small-diameter"><a href="#Chino-Bamboo-forest-small-diameter" class="headerlink" title="Chino Bamboo forest small diameter"></a>Chino Bamboo forest small diameter</h2><p>stunned </p>
<p>This is the bamboo forest that often seen in the Kyoto brochure. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-57.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-52.webp" alt=""></div></div></div>

<blockquote>
<p>Background into the deep forest, copy the moss </p>
</blockquote>
<p>The moss here is great, once a small mage’s mobile phone wallpaper </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-92.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-93.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-54.webp" alt=""></div></div></div>

<p>Shift </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-62.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-63.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-64.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-65.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-67.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-68.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-69.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-70.webp" alt=""></div></div></div>

<p>Zhou Enlai Prime Minister’s poem </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-73.webp" alt=""></div></div></div>

<p>You can also do a human car. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-78.webp" alt=""></div></div></div>

<p>Although it is a lot of wither<br>Even if this only the red is also beautiful, it doesn’t win. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-76.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-81.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-82.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-83.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-84.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-85.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-86.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-87.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-88.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-89.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-90.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-91.webp" alt=""></div></div></div>

<p>Unlike the city landscape of Tokyo </p>
<p>The landscape here in Kyoto is also an explosive. </p>
<p>Next time, I will take a sister paper together.<br>Little Master is thinking </p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-1-1</title>
    <url>/en/japan-1-1/</url>
    <content><![CDATA[<h2 id="Thousand-birds"><a href="#Thousand-birds" class="headerlink" title="Thousand birds"></a>Thousand birds</h2><p>It turns out that this is called thousands of birds. </p>
<p>Climb<br>The little mage said that it is still coming, it is better to climb to the top of the mountain.<br>But it’s not a small.<br>Looked down the map, the thousand birds were nearly a small, the little mage felt a lot of image.<br>It seems that it is still in the middle of the mountain, if you decently climb, I am afraid that it is necessary to delay the remaining itinerary.<br>So just go down the mountain. </p>
<p>I came back later, I learned that there is not much distance.<br>Because the bird is really, the less it is </p>
<a id="more"></a>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-04.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-11.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-10.webp" alt=""></div></div></div>

<p>Everyone is washing hands by Qingquan<br>The little master washed by the mobile phone.<br>I am afraid when I want to come.<br>I don’t know if there is any happiness<br>Still not being burst by people around people </p>
<p>Bamboo </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-17.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-16.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-15.webp" alt=""></div></div></div>

<p>Dinner, wine house, is a place where the local person is chatting and relaxing.<br>Compared with the wine, it is still a good drink.<br>Next to the supermarkets various comic magazines to sell together </p>
<h2 id="Kinosaki-Onsen-♨♨"><a href="#Kinosaki-Onsen-♨♨" class="headerlink" title="Kinosaki Onsen ♨♨"></a>Kinosaki Onsen ♨♨</h2><p>The next day, do a small train to go to the city of the city.<br>The little master did not bother the hot springs.<br>However, as a northerner, I want to come and the big bathroom is not too much. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-20.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-21.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-22.webp" alt=""></div></div></div>

<h2 id="Shinual-Onsen-♨♨"><a href="#Shinual-Onsen-♨♨" class="headerlink" title="Shinual Onsen ♨♨"></a>Shinual Onsen ♨♨</h2><p>However, the fact is beyond imagination </p>
<p>First of all, the hot springs have open air, there is a pond, the autumn wind leaves, plus snow<br>Bubble in warm spring water, don’t be too happy </p>
<p>The little mage forced the little mage forced a thousand birds before they arrived.<br>Arthrophert pain can only crawl on tatami </p>
<p>After the hot springs, it turned out to be magical. </p>
<p>Not only sigh<br>False boiler water can only take a shower<br>And the real spa can return blood </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-26.webp" alt=""></div></div></div>

<p>Because of November, close to the spring, steam<br>There is also hot spring eggs on the side of the road, you can also buy it in the hot spring ♨️ in 20 minutes.<br>Take it out is the standard sugar heart egg </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-55.webp" alt=""></div></div></div>

<p>Water is clear or fish<br>There are also a variety of big crabs<br>The bus 🚌 here is like Singapore<br>Before getting on the bus, press the small button before getting off the bus. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-24.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-27.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-28.webp" alt=""></div></div></div>

<h2 id="Day-and-Mountain-Coast"><a href="#Day-and-Mountain-Coast" class="headerlink" title="Day and Mountain Coast"></a>Day and Mountain Coast</h2><p>Unlike San Francis, it is different, the sea here is clean, there is nothing smell<br>However, the weather has changed in an instant, just still wind and beautiful, suddenly rain, super cold<br>Hiding the aquarium next to, playing a cup of hot coffee and listening to the rain is warm </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-30.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-33.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-32.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-49.webp" alt=""></div></div></div>

<h2 id="Rainbow"><a href="#Rainbow" class="headerlink" title="Rainbow"></a>Rainbow</h2><p>Life first saw the rainbow<br>Come to Zhang Da Tu to commemorate </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-37.webp" alt=""></p>
<h2 id="aquarium"><a href="#aquarium" class="headerlink" title="aquarium"></a>aquarium</h2><p>I can’t buy it.<br>More than 100 yuan, 7 themes can be seen<br>More than the aquarium in Tokyo before<br>Because of the sea, the place is large<br>I saw a huge seahorse<br>Next to you can also measure body weight, 21 little mage == this seahorse<br>Finally, there is a small water performance of small dolphins. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-39.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-41.webp" alt=""></div></div></div>

<h2 id="Hot-spring-temple"><a href="#Hot-spring-temple" class="headerlink" title="Hot spring temple"></a>Hot spring temple</h2><p>There is a hill next to it, you can do the cable car.<br>The mountain is not high, but there is already snowing.<br>The design of the eaves is very good, and the snow will not splash around. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-57.webp" alt=""></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-68.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-59.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-67.webp" alt=""></div></div></div>

<p>Tiles on the tile<br>When I go back to the hotel, I found the road center in the sprinkler.<br>Very magical, don’t understand why you want this to design </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-71.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-73.webp" alt=""></div></div></div>

<p>Packed up the luggage back to Osaka </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-75.webp" alt=""></div></div></div>

<h2 id="Crab-Levia"><a href="#Crab-Levia" class="headerlink" title="Crab Levia"></a>Crab Levia</h2><h2 id="One-bluelavan"><a href="#One-bluelavan" class="headerlink" title="One bluelavan"></a>One bluelavan</h2><p>Gourmet street<br>Crab music, need to make an appointment in advance, or the store is no seat.<br>It can be played onto, but this kind of hardship is very difficult, so there is a seat that is hollowed down to pretend tatami. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-78.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-82.webp" alt=""></div></div></div>

<hr>
<p><a href="https://twitter.com/leihao0">Follow me on Twitter</a> </p>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-1-2</title>
    <url>/en/japan-1-2/</url>
    <content><![CDATA[<h1 id="Osaka-Huanshi-City"><a href="#Osaka-Huanshi-City" class="headerlink" title="Osaka Huanshi City"></a>Osaka Huanshi City</h1><p>Take JR on the next day to go to Nara to see the little deer </p>
<a id="more"></a>

<h2 id="Nara"><a href="#Nara" class="headerlink" title="Nara"></a>Nara</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-02.webp" alt=""></div></div></div>

<p>See Conan </p>
<p>The shocking is that the little deer is mixed with the car and the lapie </p>
<p>I don’t know if it is eating bad stomach, I have to go to the bathroom in public space.<br>Surprised discovery also took the toilet cover, and this little mage will not worry about it in Japan. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-05.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-07.webp" alt=""></div></div></div>

<p>Receive a small deer after getting out<br>I accidentally taken a tap<br>The bag of the little mage is opened, and the travel brochure has fallen out. </p>
<p>then… </p>
<p>When I said that I heard that sheep can eat paper.<br>I didn’t expect it to see it. </p>
<p>Due to the various attack patterns of the little deer 🦌<br>I have to help the staff, but I haven’t seen it for a long time.<br>Silly deer can only ask more than a blessing, don’t diarrhea. </p>
<h2 id="Uji"><a href="#Uji" class="headerlink" title="Uji"></a>Uji</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-08.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-09.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-13.webp" alt=""></div></div></div>

<p>If you have a daily name, you didn’t expect to exceed expectations.<br>Passing through Japanese orthopedics<br>Then go to Yutu to eat tea ice cream and tat tea </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-16.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-17.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-18.webp" alt=""></div></div></div>

<p>I was pulled back to Osaka when I just finished eating.<br>It turns out that Yuji is just for ice cream … </p>
<h2 id="Osaka-Huanshi-City-1"><a href="#Osaka-Huanshi-City-1" class="headerlink" title="Osaka Huanshi City"></a>Osaka Huanshi City</h2><p>Early morning to Global Studios next morning </p>
<p>There is a geophone that often appears in some movies. </p>
<p>Then the little mage is surprisingly discovered<br>It turned out that Xiao Huang, Spider-Man, Meng, I am IP of Global Studios. </p>
<p>Because the global studio is particularly large, the theme is particularly<br>If you want to play, you must live at least one night in it.<br>However, later learned the largest Los Angeles, California, for a few days.<br>And Singapore is very small, you can have more than one day.<br>Of course, this is a later words, and I will not mention it. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-20.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-21.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-24.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-27.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-30.webp" alt=""></div></div></div>

<h3 id="Hollywood-dream"><a href="#Hollywood-dream" class="headerlink" title="Hollywood dream"></a>Hollywood dream</h3><p>I heard screams far away.<br>Repeatedly reminds the death of the gods to the fragment of the mountain car<br>But looking at the people of this car.<br>I want to come, there is nothing.<br>I am afraid that I will adjust myself. </p>
<p>The same is true.<br>Because I bought a quick ticket<br>The little master has passed the long man dragon, directly on the bus. </p>
<p>Hollywood dream can be done or do<br>The staff said that they were not so afraid.<br>That natural choice is doing </p>
<p>The process is okay, except for the vertical fall, it feels more exaggerated.<br>Then several continuous turns feel huge<br>I always feel that the rails are not sufficient to support the steering, which will be smashed like a movie. </p>
<p>However, there is no, or the security is over. </p>
<p>Therefore, 🎢 is also different from person.<br>I can’t scare it, I scream all the way, I know that I have to sit down, but I don’t have a fast ticket for the flying dragon. </p>
<p>And the little mage felt still, the whole journey and the passers-by of the passers-by<br>The little mage is even thinking, according to the hanging bridge effect, the sister paper is already in love with yourself. </p>
<h3 id="Jurassic-Park"><a href="#Jurassic-Park" class="headerlink" title="Jurassic Park"></a>Jurassic Park</h3><p>I checked the Raiders and threw a raincoat, saying that it will be used behind it.<br>In the middle, I saw some false dinosaurs, and there was a sudden out of the Overlord Dragon, and the picture was scared.<br>All the way is indifferent to a black room and slowly climb<br>The sudden ship fell, and the first row of tourists were splashed.<br>Well, it is not the same as it is </p>
<h3 id="Flying-Tianyi-Dragon"><a href="#Flying-Tianyi-Dragon" class="headerlink" title="Flying Tianyi Dragon"></a>Flying Tianyi Dragon</h3><p>And Hollywood Dream<br>Flying flask players will be fixed on the seat, rotate 90 degrees, face the earth, slowly climb </p>
<p>But this little master is not too much.<br>Let’s not be a sister paper next to it, two is late, you can’t see it.<br>I only felt that I was awkward and I took a few turns, I’m going down. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-36.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-33.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-37.webp" alt=""></div></div></div>

<h3 id="Harry-Potter"><a href="#Harry-Potter" class="headerlink" title="Harry Potter"></a>Harry Potter</h3><p>After a long forest road, accompanied by the 🦉 咕 🦉 咕, 境 </p>
<p>There are butter beer 🧈 🧈, Azkan’s wanted things </p>
<h4 id="Olifan-De-Cane-Shop"><a href="#Olifan-De-Cane-Shop" class="headerlink" title="Olifan De Cane Shop"></a>Olifan De Cane Shop</h4><p>NPC will randomly choose a child, take a plot when Harry first chooses the magic wand<br>Others are under the downstairs </p>
<p>After you come out, you can use the wand, you can see the spell. </p>
<h4 id="Hoggaz-Magic-and-Wizard-College"><a href="#Hoggaz-Magic-and-Wizard-College" class="headerlink" title="Hoggaz Magic and Wizard College"></a>Hoggaz Magic and Wizard College</h4><p>Take a small car to see 3D movie<br>Followed with Harry Ronggen to participate in the Quyli Competition </p>
<p>Wow, it is really fun. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-39.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-40.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-41.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-42.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-43.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-44.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-46.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-47.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-49.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-52.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-54.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-55.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-57.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-58.webp" alt=""></div></div></div>

<h2 id="Friends"><a href="#Friends" class="headerlink" title="Friends"></a>Friends</h2><p>It’s been late after coming from the Global Studio.<br>Playing, I didn’t expect to send a small and the spirit, friends, all, bought the toilet, rice rice cooker, a pile of electrical appliances back … </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-59.webp" alt=""></p>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>🇯🇵-1-3</title>
    <url>/en/japan-1-3/</url>
    <content><![CDATA[<h1 id="Osaka"><a href="#Osaka" class="headerlink" title="Osaka"></a>Osaka</h1><p>I bought a second day, I bought a two-day travel coupon in Osaka.<br>So all the next items are<br>Free<br>Free<br>Free </p>
<a id="more"></a>

<h2 id="Ferris-wheel"><a href="#Ferris-wheel" class="headerlink" title="Ferris wheel"></a>Ferris wheel</h2><p>Redhorse Osaka Wheel divided into two boxes<br>White is the full transparent box<br>Red and blue is opaque at the bottom </p>
<p>After that, yesterday’s roller coaster is<br>The little mage is naturally a transparent. </p>
<p>And Singapore 🇸🇬 has always had to close the ferris wheel<br>This can’t be eaten inside </p>
<p>Turn a circle for approximately half an hour<br>I thought I want to share with others.<br>I didn’t expect everyone to stand alone. </p>
<p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-01.webp" alt=""></p>
<h2 id="Captain-line"><a href="#Captain-line" class="headerlink" title="Captain line"></a>Captain line</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-03.webp" alt=""></div></div></div>

<p>Standing on the boat, continue to watch the Ferris wheel </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-05.webp" alt=""></div></div></div>

<h2 id="Santa-Maria"><a href="#Santa-Maria" class="headerlink" title="Santa Maria"></a>Santa Maria</h2><p>Every hour, alternating, about 50 minutes </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-08.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-07.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-09.webp" alt=""></div></div></div>

<h2 id="Ocean-hall"><a href="#Ocean-hall" class="headerlink" title="Ocean hall"></a>Ocean hall</h2><p>There is a huge whale shark model outside the wall outside the ocean hall. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-10.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-11.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-12.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-16.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-17.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-19.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-20.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-21.webp" alt=""></div></div></div>

<h3 id="Touch-fish"><a href="#Touch-fish" class="headerlink" title="Touch fish"></a>Touch fish</h3><p>Need to wash your hands, but you can’t use the sole<br>It seems to be because it will destroy the skin of the fish skin. </p>
<p>Say that the little master has never touched the fish before<br>For the first time, I touched the shark. </p>
<p>Different from the imaginary ice<br>The temperature is soft, soft, like the calf that I touched the girl. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-24.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-27.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-30.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-32.webp" alt=""></div></div></div>

<p>Haofu unique drink 🥤<br>Blue, super good drink<br>I have eaten iron burn after coming out. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-33.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-35.webp" alt=""></div></div></div>

<h2 id="Hep-FIVE-Ferris-Wheel"><a href="#Hep-FIVE-Ferris-Wheel" class="headerlink" title="Hep FIVE Ferris Wheel"></a>Hep FIVE Ferris Wheel</h2><p>This feature is characterized by the floor in the mall.<br>I saw the high reached model and FATE </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-36.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-37.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-39.webp" alt=""></div></div></div>

<p>The last time I lived in Rome after Rome.<br>Naturally, I will know and Hilton </p>
<p>Have to say it on the ferris wheel<br>One of the lights of lights<br>Hilton several big words sparkling </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-41.webp" alt=""></div></div></div>

<h2 id="Tianshuge-Time-and-Space-Capsule"><a href="#Tianshuge-Time-and-Space-Capsule" class="headerlink" title="Tianshuge Time and Space Capsule"></a>Tianshuge Time and Space Capsule</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-43.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-44.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-45.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-47.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-48.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-49.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-51.webp" alt=""></div></div></div>

<h2 id="Tianyu-Temple-Zoo"><a href="#Tianyu-Temple-Zoo" class="headerlink" title="Tianyu Temple Zoo"></a>Tianyu Temple Zoo</h2><p>I saw the black swan 🦢 in Naxim Niklas Tarebo “Stroller” </p>
<ul>
<li>Black bear </li>
<li>Ancestral bird </li>
<li>Koah (骷髅) </li>
<li>Elephant </li>
<li>Owl </li>
<li>crow </li>
<li>Rhinoceros </li>
<li>Hippo </li>
<li>Camel </li>
<li>Raccoon </li>
<li>Goat (livestock) </li>
<li>Crocodile 🐊 (骷髅) </li>
<li>Lion </li>
<li>Giraffe </li>
<li>Panda (doll) </li>
<li>There is no small horses in children. </li>
</ul>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-54.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-57.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-59.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-60.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-62.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-63.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-65.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-66.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-71.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-68.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-69.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-70.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-73.webp" alt=""></div></div></div>

<h2 id="Tongtiange"><a href="#Tongtiange" class="headerlink" title="Tongtiange"></a>Tongtiange</h2><p>Due to tomorrow </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-75.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-78.webp" alt=""></div></div></div>

<h2 id="Airport"><a href="#Airport" class="headerlink" title="Airport"></a>Airport</h2><p>When the ticket is checked, the little sister asked the little master. Is it a person?<br>The little mage is strange, saying that he is of course a person. </p>
<p>Then see a series of operations in the little sister<br>Then congratulations to the little mage to give him the boost </p>
<p>At that time, I did inexplicably, and I was indifferent to the ticket.<br>The little sister saw that the little mage had no expression, thinking that he didn’t understand, repeating it again. </p>
<p>However, it is still different from the upgrading ticket and its own expense.<br>Different from the first time to Japan<br>The upgrading ticket is unable to enter VIP rest </p>
<p>So this time you can’t take a bath.<br>However, the service enjoyed after plane is exactly the same. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-79.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-80.webp" alt=""></div></div></div>

<p>After coming back, I learned from the might of the world. The airport will give some free upgrade of potential customers. </p>
<p>Originally single, this benefit<br>Little Master is sad </p>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>LittleMaster</tag>
        <tag>Japan</tag>
        <tag>🇯🇵</tag>
      </tags>
  </entry>
  <entry>
    <title>Beijing-1</title>
    <url>/en/bejing-1/</url>
    <content><![CDATA[<h2 id="2014-2018"><a href="#2014-2018" class="headerlink" title="2014-2018"></a>2014-2018</h2><p>The little mage has lived in the emperor several spring and autumn. </p>
<p>Just arrived at the emperor, experienced a crit<br>Although there is a heart preparing, it is still shocked to breathe every day. </p>
<a id="more"></a>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-12.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-13.webp" alt=""></div></div></div>

<p>In the past few years<br>Earmily running<br>Either on the way<br>Either it is ready to run </p>
<p>Of course, there are also a few blue sky and white clouds.<br>Even the Shengguang with Diesider effect </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-00.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-11.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-05.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-07.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-14.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-16.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-17.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-20.webp" alt=""></div></div></div>

<p>After the last time I came back from Japan, the little mage suddenly thought<br>In addition to the natural landscape, travel, is it just to visit various venues. Is there no domestic?<br>So I checked it, I found that there were a lot of emperors, almost vomiting blood. </p>
<h2 id="Astronomical"><a href="#Astronomical" class="headerlink" title="Astronomical"></a>Astronomical</h2><p>Different from Japanese text, this time I can finally understand. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-30.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-32.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-33.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-36.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-37.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-39.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-41.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-42.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-43.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-44.webp" alt=""></div></div></div>

<h2 id="Ocean-hall"><a href="#Ocean-hall" class="headerlink" title="Ocean hall"></a>Ocean hall</h2><p>I don’t know if there is a problem with road phones or design.<br>After coming out along the road sign, I found that the middle huge dolphin hall didn’t see … </p>
<p>However, most of the glass oil, I don’t know if it is still a long time or the style. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-47.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-49.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-50.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-53.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-54.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-56.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-57.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-59.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-60.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-62.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-63.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-65.webp" alt=""></div></div></div>

<h2 id="zoo"><a href="#zoo" class="headerlink" title="zoo"></a>zoo</h2><p>Exquisite difference from Osaka Zoo<br>Here is a big objective<br>The only bad thing is too tired<br>Change a creature to see the old </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-67.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-68.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-69.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-70.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-71.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-73.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-75.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-76.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-78.webp" alt=""></div></div></div>

<h2 id="Moon"><a href="#Moon" class="headerlink" title="Moon"></a>Moon</h2><p>Magic<br>Although the moon is often<br>But the real scene is still in the first time. </p>
<p>At that time, the iPhone had no night scene, and the paste is not </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-79.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-80.webp" alt=""></div></div></div>

<h2 id="Market-research"><a href="#Market-research" class="headerlink" title="Market research"></a>Market research</h2><p>莫名 其 面 作, let Soft Motion Run offline to do market research </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-81.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-82.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-84.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-85.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-86.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-87.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-88.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-89.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-90.webp" alt=""></div></div></div>

<h2 id="Delicious"><a href="#Delicious" class="headerlink" title="Delicious"></a>Delicious</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-24.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-25.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-91.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-92.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-94.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-95.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-98.webp" alt=""></div></div></div>

<h2 id="Fun"><a href="#Fun" class="headerlink" title="Fun"></a>Fun</h2><p>🏎️, 🎬, 🎭, 👨💻 </p>
<p>Racing, movie, cross talk, rust party </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-27.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-93.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-96.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-97.webp" alt=""></div></div></div>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-03.webp" alt=""></div></div></div>

<p>Finally, the end of the year ended in the emperor. </p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-22.webp" alt=""></div></div></div>

<p>– Walden </p>
<hr>
<p>Translated by Google</p>
]]></content>
      <tags>
        <tag>Travel</tag>
        <tag>Beijing</tag>
        <tag>LittleMaster</tag>
        <tag>🇨🇳</tag>
      </tags>
  </entry>
</search>
