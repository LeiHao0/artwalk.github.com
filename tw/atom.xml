<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeiHao&#39;s Blog</title>
  
  
  <link href="/tw/atom.xml" rel="self"/>
  
  <link href="https://leihao0.github.io/tw/"/>
  <updated>2017-12-08T16:00:00.000Z</updated>
  <id>https://leihao0.github.io/tw/</id>
  
  <author>
    <name>LeiHao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Beijing-1</title>
    <link href="https://leihao0.github.io/tw/bejing-1/"/>
    <id>https://leihao0.github.io/tw/bejing-1/</id>
    <published>2021-08-11T16:00:00.000Z</published>
    <updated>2017-12-08T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2014-2018"><a href="#2014-2018" class="headerlink" title="2014-2018"></a>2014-2018</h2><p>小法師曾經在帝都生活了數個春秋 </p><p>剛到帝都時經歷了開局暴擊<br>雖然有心裡準備，但還是震驚於每天呼吸的空氣 </p><a id="more"></a><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-12.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-13.webp" alt=""></div></div></div><p>後來的幾年時間裡<br>小伙伴們要么已經跑路<br>要么在跑路的途中<br>要么在準備跑路 </p><p>當然也有少數的藍天白雲<br>甚至還有丁達爾效應的聖光 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-00.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-11.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-05.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-07.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-14.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-16.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-17.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-20.webp" alt=""></div></div></div><p>最後一次從日本回來後，小法師突發奇想<br>出國旅遊除了自然景觀外，也只是逛各種館，難道國內沒有嗎<br>於是查了下，發現帝都就有很多，差點吐血 </p><h2 id="天文館"><a href="#天文館" class="headerlink" title="天文館"></a>天文館</h2><p>和日本文字講解不同，這次終於能看懂了 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-30.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-32.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-33.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-36.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-37.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-39.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-41.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-42.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-43.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-44.webp" alt=""></div></div></div><h2 id="海洋館"><a href="#海洋館" class="headerlink" title="海洋館"></a>海洋館</h2><p>不知是路痴還是設計的有問題<br>沿著路標走出來後發現中間巨大的海豚館沒看到… </p><p>不過大多玻璃油油的，不知是年久失修還是風格如此 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-47.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-49.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-50.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-53.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-54.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-56.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-57.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-59.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-60.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-62.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-63.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-65.webp" alt=""></div></div></div><h2 id="動物園"><a href="#動物園" class="headerlink" title="動物園"></a>動物園</h2><p>和大阪動物園的精緻不同<br>這里處處體現出地大物博<br>唯一的壞處是逛起來太累<br>換一個生物看要走老遠 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-67.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-68.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-69.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-70.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-71.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-73.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-75.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-76.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-78.webp" alt=""></div></div></div><h2 id="月食-🌛"><a href="#月食-🌛" class="headerlink" title="月食 🌛"></a>月食 🌛</h2><p>神奇<br>雖然月食常常有<br>但真實場景下還是第一次看到 </p><p>那時的 iPhone 還沒夜景模式，拍起來糊的不行 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-79.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-80.webp" alt=""></div></div></div><h2 id="市場調研"><a href="#市場調研" class="headerlink" title="市場調研"></a>市場調研</h2><p>莫名其妙的面試作業，讓軟工跑線下店做市場調研 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-81.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-82.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-84.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-85.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-86.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-87.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-88.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-89.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-90.webp" alt=""></div></div></div><h2 id="好吃的-😋"><a href="#好吃的-😋" class="headerlink" title="好吃的 😋"></a>好吃的 😋</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-24.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-25.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-91.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-92.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-94.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-95.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-98.webp" alt=""></div></div></div><h2 id="好玩的"><a href="#好玩的" class="headerlink" title="好玩的"></a>好玩的</h2><p>🏎️，🎬，🎭，👨‍💻 </p><p>賽車，電影，相聲，Rust 聚會 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-27.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-93.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-96.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-97.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-03.webp" alt=""></div></div></div><p>最後引用一句話結束在帝都的那幾年吧 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/beijing-0/beijing-0-22.webp" alt=""></div></div></div><p>—— 瓦爾登湖 </p><hr><p>Translated by Google</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2014-2018&quot;&gt;&lt;a href=&quot;#2014-2018&quot; class=&quot;headerlink&quot; title=&quot;2014-2018&quot;&gt;&lt;/a&gt;2014-2018&lt;/h2&gt;&lt;p&gt;小法師曾經在帝都生活了數個春秋 &lt;/p&gt;
&lt;p&gt;剛到帝都時經歷了開局暴擊&lt;br&gt;雖然有心裡準備，但還是震驚於每天呼吸的空氣 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/tw/tags/travel/"/>
    
      <category term="Beijing" scheme="https://leihao0.github.io/tw/tags/beijing/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/tw/tags/littlemaster/"/>
    
      <category term="🇨🇳" scheme="https://leihao0.github.io/tw/tags/%F0%9F%87%A8%F0%9F%87%B3/"/>
    
  </entry>
  
  <entry>
    <title>🇯🇵-1-3</title>
    <link href="https://leihao0.github.io/tw/japan-1-3/"/>
    <id>https://leihao0.github.io/tw/japan-1-3/</id>
    <published>2021-05-13T13:58:00.000Z</published>
    <updated>2017-12-08T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大阪"><a href="#大阪" class="headerlink" title="大阪"></a>大阪</h1><p>發小早早的買了大阪兩日周遊券<br>所以接下來的所有項目都是<br>免費 🆓<br>免費 🆓<br>免費 🆓 </p><a id="more"></a><h2 id="摩天輪-🎡"><a href="#摩天輪-🎡" class="headerlink" title="摩天輪 🎡"></a>摩天輪 🎡</h2><p>Redhorse Osaka Wheel 分兩種包廂<br>白色的是包廂全透明的<br>紅色和藍色的是底部不透明的 </p><p>經歷了昨天的過山車 🎢<br>小法師 🧙‍♀️ 自然是坐透明的啦 </p><p>和新加坡 🇸🇬 一直要倒閉的摩天輪 🎡 不同<br>這個不能在裡面吃飯 </p><p>轉一圈大概半小時<br>本來以為要和別人共享<br>沒想到每個人都可以獨立一個包廂 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-01.webp" alt=""></p><h2 id="船長線"><a href="#船長線" class="headerlink" title="船長線"></a>船長線</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-03.webp" alt=""></div></div></div><p>站在船上 🚢 繼續看 摩天輪 🎡 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-05.webp" alt=""></div></div></div><h2 id="聖瑪利亞號"><a href="#聖瑪利亞號" class="headerlink" title="聖瑪利亞號"></a>聖瑪利亞號</h2><p>每小時一次，來回交替，大概 50 分鐘 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-08.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-07.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-09.webp" alt=""></div></div></div><h2 id="海洋館"><a href="#海洋館" class="headerlink" title="海洋館"></a>海洋館</h2><p>海洋館外的牆壁上有一隻巨大的鯨鯊模型 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-10.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-11.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-12.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-16.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-17.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-19.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-20.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-21.webp" alt=""></div></div></div><h3 id="摸魚-🐟"><a href="#摸魚-🐟" class="headerlink" title="摸魚 🐟"></a>摸魚 🐟</h3><p>需要洗手，但不能用洗手液<br>好像是因為會破壞魚兒皮膚的酸鹼性 </p><p>話說小法師 🧙‍♀️ 以前從沒摸過魚<br>第一次就摸到了鯊魚 🦈 </p><p>和想像的冰冷感不同<br>溫溫的，軟軟的，像是摸到了妹子的小腿 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-24.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-27.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-30.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-32.webp" alt=""></div></div></div><p>海洋館特有的飲料 🥤<br>大海的藍色，超好喝<br>出來後吃了鐵板燒 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-33.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-35.webp" alt=""></div></div></div><h2 id="HEP-FIVE-摩天輪"><a href="#HEP-FIVE-摩天輪" class="headerlink" title="HEP FIVE 摩天輪"></a>HEP FIVE 摩天輪</h2><p>這個摩天輪 🎡 的特點是在商場的樓裡<br>看到了 高達 🤖️ 模型 和 Fate </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-36.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-37.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-39.webp" alt=""></div></div></div><p>話說上次在羅馬 🇷🇴 住過 萬豪 後<br>自然就知道了 和 希爾頓 </p><p>不得不說在摩天輪上<br>一片燈火璀璨的夜景 🌃 中<br>希爾頓 那幾個大字 閃閃發光 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-41.webp" alt=""></div></div></div><h2 id="天守閣-時空膠囊"><a href="#天守閣-時空膠囊" class="headerlink" title="天守閣 時空膠囊"></a>天守閣 時空膠囊</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-43.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-44.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-45.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-47.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-48.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-49.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-51.webp" alt=""></div></div></div><h2 id="天王寺動物園"><a href="#天王寺動物園" class="headerlink" title="天王寺動物園"></a>天王寺動物園</h2><p>上來就看到了 納西姆·尼可拉斯·塔雷伯《漫步的傻瓜》中的黑天鵝 🦢 </p><ul><li>黑熊 </li><li>始祖鳥 </li><li>考拉 🐨 (骷髏 ☠️) </li><li>大象 🐘 </li><li>貓頭鷹 🦉 </li><li>烏鴉 </li><li>犀牛 🦏 </li><li>河馬 🦛 </li><li>駱駝 🐫 </li><li>浣熊 🦝 </li><li>山羊 🐐 (家畜) </li><li>鱷魚 🐊 (骷髏 ☠️) </li><li>獅子 🦁️ </li><li>長頸鹿 🦒 </li><li>小熊貓 (玩偶) </li><li>還沒有小朋友高的 小馬 🐎 </li></ul><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-54.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-57.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-59.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-60.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-62.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-63.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-65.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-66.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-71.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-68.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-69.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-70.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-73.webp" alt=""></div></div></div><h2 id="通天閣"><a href="#通天閣" class="headerlink" title="通天閣"></a>通天閣</h2><p>由於明天 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-75.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-78.webp" alt=""></div></div></div><h2 id="機場-✈️"><a href="#機場-✈️" class="headerlink" title="機場 ✈️"></a>機場 ✈️</h2><p>檢票時小姐姐問小法師 🧙‍♀️ 是否是一個人<br>小法師 🧙‍♀️ 奇怪，表示自己當然是一個人 </p><p>然後就看到小姐姐一系列的操作<br>然後恭喜 🎉 小法師 🧙‍♀️ 給他​​升艙了 </p><p>當時確實莫名其妙，無動於衷的接過票 🎫<br>小姐姐看到小法師 🧙‍♀️ 面癱面無表情，以為他沒聽懂，又重複了一遍 </p><p>不過升艙票和自費還是有區別的<br>和第一次來日本 🇯🇵 時不同<br>升艙票無法進入貴賓休息 ♨️ 室 </p><p>所以這次不能洗澡 🛀 了<br>不過上飛機後享受的服務是一模一樣的 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-79.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-3-80.webp" alt=""></div></div></div><p>回來後從土豪那裡得知，機場會給一些單獨出行的潛在客戶免費升艙 </p><p>原來單身還有這種好處<br>小法師 🧙‍♀️ 傷心 💔 的想 </p><hr><p>Translated by Google</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;大阪&quot;&gt;&lt;a href=&quot;#大阪&quot; class=&quot;headerlink&quot; title=&quot;大阪&quot;&gt;&lt;/a&gt;大阪&lt;/h1&gt;&lt;p&gt;發小早早的買了大阪兩日周遊券&lt;br&gt;所以接下來的所有項目都是&lt;br&gt;免費 🆓&lt;br&gt;免費 🆓&lt;br&gt;免費 🆓 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/tw/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/tw/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/tw/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/tw/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>🇯🇵-1-2</title>
    <link href="https://leihao0.github.io/tw/japan-1-2/"/>
    <id>https://leihao0.github.io/tw/japan-1-2/</id>
    <published>2021-05-12T01:58:00.000Z</published>
    <updated>2017-12-06T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大阪環球影城"><a href="#大阪環球影城" class="headerlink" title="大阪環球影城"></a>大阪環球影城</h1><p>第二天乘坐 JR 去奈良看小鹿 🦌 </p><a id="more"></a><h2 id="奈良-🦌"><a href="#奈良-🦌" class="headerlink" title="奈良 🦌"></a>奈良 🦌</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-02.webp" alt=""></div></div></div><p>看到了柯南 </p><p>令人震驚 🤯 的是小鹿 🦌 在街上和車 🚗 混在一起，悠閒的散步 </p><p>不知是否是吃壞了肚子，不得不上公共空間的衛生間<br>驚奇的發現也帶馬桶蓋，至此小法師 🧙‍♀️ 再也不擔心在日本旅遊時在外面鬧肚子了 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-04.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-05.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-07.webp" alt=""></div></div></div><p>出來後近距離拍攝小鹿<br>不小心被一隻憨憨的鹿背刺<br>小法師 🧙‍♀️ 的包包被翻開，旅遊小冊子掉了出來 </p><p>然後… </p><p>話說小時候就听說過羊 🐑 可以吃紙<br>萬萬沒想到真的見到了 </p><p>由於見識過小鹿 🦌 的各種攻擊模式<br>只好求助工作人員，但找了半天沒看到<br>傻鹿 🦌 只能自求多福了，不要也拉肚子呀 </p><h2 id="UJI"><a href="#UJI" class="headerlink" title="UJI."></a>UJI.</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-08.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-09.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-13.webp" alt=""></div></div></div><p>午飯隨便找了一家日料，沒想到超出預期<br>路過 日本骨科<br>然後去宇治吃抹茶冰淇淋 🍦 和抹茶 🍵 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-15.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-16.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-17.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-18.webp" alt=""></div></div></div><p>剛吃完就被發小拉回了 大阪<br>原來去宇治只是為了冰淇淋 🍦… </p><h2 id="大阪環球影城-1"><a href="#大阪環球影城-1" class="headerlink" title="大阪環球影城"></a>大阪環球影城</h2><p>第二天一早去環球影城 </p><p>門口有一個在一些電影中經常出現的地球 🌍 </p><p>然後小法師 🧙‍♀️ 驚奇的發現<br>原來小黃人，蜘蛛俠，卑鄙的我 都是 環球影城的 IP </p><p>因為環球影城特別大，主題特別多<br>如果想每一個都玩的話，在裡面至少住一晚是必須的，<br>然而後來得知 美國加州洛杉磯最大， 要幾天<br>而新加坡的很小，一天就能玩完<br>當然這是後話了，暫且不提 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-20.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-21.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-23.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-24.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-27.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-28.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-30.webp" alt=""></div></div></div><h3 id="好萊塢之夢"><a href="#好萊塢之夢" class="headerlink" title="好萊塢之夢"></a>好萊塢之夢</h3><p>遠遠的就听到尖叫<br>反复提醒死神來了過山車 🎢 中的片段<br>不過看著這一車車的人上去又下來<br>想來應該沒什麼事<br>害怕 😨 什麼的自己調節就好 </p><p>事實也是如此<br>由於買了快速 🔜 票 🎫<br>小法師 🧙‍♀️ 越過了長長的人龍，直接上車 </p><p>好萊塢之夢可以正著做或者倒著做<br>工作人員說倒著坐會沒那麼害怕<br>那自然選擇正著做 </p><p>過程還好，除了垂直下跌那一段感覺比較誇張<br>然後幾個連續轉圈 感覺離心力巨大<br>總感覺鋼軌不足以支撐轉向，會像電影裡那樣被甩出去 </p><p>然而並沒有，還是安全的結束 🔚 了 </p><p>所以 🎢 也是因人而異的<br>發小表示被嚇的不行，一路尖叫，說早知道倒著坐了，還好沒有買飛天翼龍的快速票 </p><p>而小法師 🧙‍♀️ 覺得還好，全程和旁邊的路人妹紙開心的大笑<br>小法師 🧙‍♀️ 甚至想，根據 吊橋效應，妹紙是不是已經愛上自己了 </p><h3 id="侏羅紀公園"><a href="#侏羅紀公園" class="headerlink" title="侏羅紀公園"></a>侏羅紀公園</h3><p>查過攻略的發小扔了一件雨衣過來，說穿上後面會用得著<br>中間看到了一些虛假的恐龍 🦕，還有突然冒出來的霸王龍 🦖，妄圖嚇小法師 🧙‍♀️<br>一路無動於衷來到一個黑色的屋子，緩緩爬升<br>突然船就掉下去了，第一排的遊客被濺了一身水<br>嗯，有準備就是不一樣 ✌ </p><h3 id="飛天翼龍"><a href="#飛天翼龍" class="headerlink" title="飛天翼龍"></a>飛天翼龍</h3><p>和 好萊塢之夢<br>飛天翼龍玩家會被固定在座位上，旋轉 90 度，面朝大地，緩緩爬升 </p><p>然鵝這次小法師 🧙‍♀️ 並沒太多感覺<br>一來旁邊不是妹紙，二來天色已晚，看不清楚<br>只覺得被拽上去甩了幾圈肉，就下來了 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-36.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-33.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-37.webp" alt=""></div></div></div><h3 id="哈利波特"><a href="#哈利波特" class="headerlink" title="哈利波特"></a>哈利波特</h3><p>經過一條長長的森林小路，伴隨著貓頭鷹的 🦉 咕咕聲，漸入佳境 </p><p>裡面有 黃油啤酒 🧈 🍺， 阿茲卡班的通緝 各種東西 </p><h4 id="奧利凡德魔杖店-🪄"><a href="#奧利凡德魔杖店-🪄" class="headerlink" title="奧利凡德魔杖店 🪄"></a>奧利凡德魔杖店 🪄</h4><p>NPC 會隨機選個小孩子，走一遍 哈利 第一次選魔杖時的情節<br>其他人則在樓下當吃瓜群眾 </p><p>出來後可以用買到的魔杖 🪄 ，念咒語生火 </p><h4 id="霍格華茲魔法與巫術學院"><a href="#霍格華茲魔法與巫術學院" class="headerlink" title="霍格華茲魔法與巫術學院"></a>霍格華茲魔法與巫術學院</h4><p>坐小車看 3D 電影<br>跟著 哈利 榮恩 赫敏 參加 魁地奇比賽 </p><p>哇，真的太好玩了 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-39.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-40.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-41.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-42.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-43.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-44.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-46.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-47.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-49.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-52.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-54.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-55.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-57.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-58.webp" alt=""></div></div></div><h2 id="友都八喜"><a href="#友都八喜" class="headerlink" title="友都八喜"></a>友都八喜</h2><p>從環球影城出來後已經很晚了<br>玩玩沒想到發小還有精神去友都八喜買了馬桶蓋電飯煲一堆電器回去… </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-2-59.webp" alt=""></p><hr><p>Translated by Google</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;大阪環球影城&quot;&gt;&lt;a href=&quot;#大阪環球影城&quot; class=&quot;headerlink&quot; title=&quot;大阪環球影城&quot;&gt;&lt;/a&gt;大阪環球影城&lt;/h1&gt;&lt;p&gt;第二天乘坐 JR 去奈良看小鹿 🦌 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/tw/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/tw/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/tw/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/tw/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>🇯🇵-1-1</title>
    <link href="https://leihao0.github.io/tw/japan-1-1/"/>
    <id>https://leihao0.github.io/tw/japan-1-1/</id>
    <published>2021-03-15T16:24:10.000Z</published>
    <updated>2021-03-22T16:00:09.079Z</updated>
    
    <content type="html"><![CDATA[<h2 id="千鳥居-⛩️"><a href="#千鳥居-⛩️" class="headerlink" title="千鳥居 ⛩️"></a>千鳥居 ⛩️</h2><p>原來這個就叫千鳥居 ⛩️ </p><p>爬了一小時<br>小法師表示尚可，來都來了，不如爬到山頂<br>但發小已經不行了<br>看了下地圖，千鳥居近大遠小，小法師覺得畫的還蠻形象<br>看起來目前還在半山腰，如果執意往上爬，怕是要耽誤餘下的行程<br>於是就一起下山了 </p><p>回來後來得知上面並沒有多少路程了<br>因為鳥居 ⛩️ 真的是越往上越小 </p><a id="more"></a><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-04.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-11.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-10.webp" alt=""></div></div></div><p>大家藉著清泉洗手<br>小法師順便洗了洗手機 📱<br>現在想來陣陣後怕<br>不知有沒有觸犯山神<br>還好沒被周圍人爆打 </p><p>🙃🙃🙃 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-17.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-16.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-15.webp" alt=""></div></div></div><p>晚餐居酒屋 🏮，是本地人下班聊天放鬆的地方<br>相比燒酒，還是感覺清酒 🍶 好喝<br>旁邊超市各種漫畫 雜誌 摻雜著一起賣 </p><h2 id="Kinosaki-Onsen♨♨"><a href="#Kinosaki-Onsen♨♨" class="headerlink" title="Kinosaki Onsen♨♨"></a>Kinosaki Onsen♨♨</h2><p>第二天做小火車 🚄 去城崎泡溫泉<br>此前小法師是沒泡過溫泉 ♨️ 的<br>不過作為北方人，想來和大澡堂差不了太多 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-20.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-21.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-22.webp" alt=""></div></div></div><h2 id="出片onsen♨♨"><a href="#出片onsen♨♨" class="headerlink" title="出片onsen♨♨"></a>出片onsen♨♨</h2><p>然而事實超乎想像 </p><p>首先溫泉 ♨️ 有露天的，有假山有池塘，秋風落葉 🍂，外加飄雪 ❄️<br>泡在暖暖的泉水里 ♨️，不要太幸福 🥰 </p><p>之前到達旅館時 小法師強行爬千鳥居 ⛩️ 出現了反噬<br>關節劇痛，只能在榻榻米上爬行 </p><p>泡完溫泉後竟然神奇的痊癒了 </p><p>不僅感嘆<br>虛假的鍋爐水只能洗澡<br>而真正的溫泉可以回血 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-26.webp" alt=""></div></div></div><p>因為十一月了，靠近泉眼的地方，就會蒸汽裊裊<br>路邊還有溫泉蛋賣，也可以買了後放到溫泉 ♨️ 裡 20 分鐘<br>拿出來就是標準的糖心蛋 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-55.webp" alt=""></div></div></div><p>水至清還是有魚啊<br>還有各種大螃蟹 🦀️<br>這裡的公交車 🚌 和新加坡一樣<br>上車前招手 🙋‍♂️ 下車前按小按鈕 🔘 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-24.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-27.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-28.webp" alt=""></div></div></div><h2 id="日和山海岸"><a href="#日和山海岸" class="headerlink" title="日和山海岸"></a>日和山海岸</h2><p>和三藩以及意大利不同，這裡的海好乾淨，沒有什麼腥味<br>不過天氣 ☁️ 瞬間就變了，剛剛還風和日麗，突然下起雨，超冷<br>躲到旁邊的水族館，打了杯熱咖啡聽雨聲好溫暖 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-30.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-33.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-32.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-49.webp" alt=""></div></div></div><h2 id="彩虹-🌈"><a href="#彩虹-🌈" class="headerlink" title="彩虹 🌈"></a>彩虹 🌈</h2><p>人生第一次看到彩虹 🌈<br>來張大圖紀念下 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-37.webp" alt=""></p><h2 id="水族館"><a href="#水族館" class="headerlink" title="水族館"></a>水族館</h2><p>買不了吃虧上當<br>才 100 多塊錢，7 個主題可以看<br>比之前在東京的水族館還要棒<br>因為臨海，地方超大<br>看到了一個巨大的海象<br>旁邊還可以測體重，21 個小法師 == 這只海象<br>最後還有小海豚 🐬 半小時的水上表演 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-39.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-41.webp" alt=""></div></div></div><h2 id="溫泉寺廟"><a href="#溫泉寺廟" class="headerlink" title="溫泉寺廟"></a>溫泉寺廟</h2><p>旁邊有座小山，可以做纜車 🚠 上去<br>山不高，但已經有積雪了<br>屋簷的設計很贊，雪水不會四處飛濺 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-57.webp" alt=""></p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-68.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-59.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-67.webp" alt=""></div></div></div><p>瓦片上冒著蒸汽<br>回旅館時發現路中心在噴水 ⛲️<br>非常神奇，不明白為什麼要這樣設計 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-71.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-73.webp" alt=""></div></div></div><p>收拾下行李 🧳 就回大阪啦 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-75.webp" alt=""></div></div></div><h2 id="蟹道樂-🦀️"><a href="#蟹道樂-🦀️" class="headerlink" title="蟹道樂 🦀️"></a>蟹道樂 🦀️</h2><h2 id="一蘭拉麵-🍜"><a href="#一蘭拉麵-🍜" class="headerlink" title="一蘭拉麵 🍜"></a>一蘭拉麵 🍜</h2><p>美食一條街<br>蟹道樂 🦀️ 需要提前預約，不然到店是沒有座位的<br>可以選榻榻米，不過這種跪著很難受啦，所以有下面鏤空假裝榻榻米的那種座位 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-78.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-82.webp" alt=""></div></div></div><hr><p><a href="https://twitter.com/leihao0">在Twitter上關注我</a> </p><hr><p>Translated by Google</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;千鳥居-⛩️&quot;&gt;&lt;a href=&quot;#千鳥居-⛩️&quot; class=&quot;headerlink&quot; title=&quot;千鳥居 ⛩️&quot;&gt;&lt;/a&gt;千鳥居 ⛩️&lt;/h2&gt;&lt;p&gt;原來這個就叫千鳥居 ⛩️ &lt;/p&gt;
&lt;p&gt;爬了一小時&lt;br&gt;小法師表示尚可，來都來了，不如爬到山頂&lt;br&gt;但發小已經不行了&lt;br&gt;看了下地圖，千鳥居近大遠小，小法師覺得畫的還蠻形象&lt;br&gt;看起來目前還在半山腰，如果執意往上爬，怕是要耽誤餘下的行程&lt;br&gt;於是就一起下山了 &lt;/p&gt;
&lt;p&gt;回來後來得知上面並沒有多少路程了&lt;br&gt;因為鳥居 ⛩️ 真的是越往上越小 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/tw/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/tw/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/tw/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/tw/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>🇯🇵-1-0</title>
    <link href="https://leihao0.github.io/tw/japan-1-0/"/>
    <id>https://leihao0.github.io/tw/japan-1-0/</id>
    <published>2021-03-14T02:38:19.000Z</published>
    <updated>2021-03-14T11:21:46.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="京都"><a href="#京都" class="headerlink" title="京都"></a>京都</h1><p>十一長假從 🇮🇹 回來後<br>可能因為信用卡 💳 刷爆，招商銀行寄來張 Premium </p><p>半月後的一天小法師 🧙‍♀️ 的發小要去日本看楓葉 🍁<br>表示已經做好了路線規劃<br>京都 - &gt;奈良 - &gt; kinosaki-&gt;大阪<br>無奈體制內不好請假，所以只能訂十一月初的票，希望趕上 🍁 楓葉季的尾巴 </p><p>小法師 🧙‍♀️ 一看是沒去過的關西地區<br>立即表示自己六月辦的是三年往返簽證<br>也可以一起同往 </p><p>雖然裡出發只有兩週，時間比較緊迫<br>好在順利買到機票，瘋狂加班兩週，提前完成 ✅ 任務<br>將代碼提交給組織後，就開始了第二次日本 🇯🇵 之旅 </p><p>當時買票還不知道看機型<br>到了機場看到這單薄的小飛機 ✈️ 時人都傻了<br>竟然是波音 737<br>雖然當時還沒有發生 MAX 事件<br>但還是一度擔心會飛不到地方墜落大海<br>轉而開啟 Lost 主線 </p><a id="more"></a><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-02.webp" alt=""></div></div></div><h2 id="京都地鐵站"><a href="#京都地鐵站" class="headerlink" title="京都地鐵站"></a>京都地鐵站</h2><p>上次在東京在同一個站台 🚉 等不同的地鐵 🚇 </p><p>小法師 🧙‍♀️ 還是第一次碰到地鐵站是碩大無比的 mall<br>一共 7 層，吃喝玩樂全包了<br>雖然才 11 月 🈷️ 初，但是各處已瀰漫著聖誕氣息了 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-05.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-08.webp" alt=""></div></div></div><h2 id="金閣寺"><a href="#金閣寺" class="headerlink" title="金閣寺"></a>金閣寺</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-12.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-10.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-11.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-15.webp" alt=""></div></div></div><h2 id="京都戈恩"><a href="#京都戈恩" class="headerlink" title="京都戈恩"></a>京都戈恩</h2><p>在紅綠之間有一棵特殊的黃葉樹 </p><blockquote><p>無邊落木蕭蕭下 </p></blockquote><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-23.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-24.webp" alt=""></div></div></div><p>來的時間特殊，沒什麼人 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-20.webp" alt=""></div></div></div><h2 id="Shimizuji"><a href="#Shimizuji" class="headerlink" title="Shimizuji."></a>Shimizuji.</h2><p>觀看劍道的和服 👘 妹子 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-28.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-32.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-33.webp" alt=""></div></div></div><h2 id="寺廟"><a href="#寺廟" class="headerlink" title="寺廟"></a>寺廟</h2><p>碰到一家人在拍攝婚禮 💒 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-35.webp" alt=""></div></div></div><p>夕陽 🌇 和奇怪的 龍頭 🐲 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-36.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-38.webp" alt=""></div></div></div><p>看到很多人在求神拜佛<br>小法師 🧙‍♀️ 也去投硬幣搖鈴鐺試了下<br>希望 App 上線了不要 Crash 🙏 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-41.webp" alt=""></div></div></div><h2 id="嵐山小火車"><a href="#嵐山小火車" class="headerlink" title="嵐山小火車"></a>嵐山小火車</h2><p>第二天一大早去做嵐山小火車，據說景色如畫<br>然而一定要買靠近山的一邊，不然就會想下面這樣只能聽其他遊客 “哇哇”，自己什麼都看不到 😂 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-47.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-49.webp" alt=""></div></div></div><h2 id="奇諾竹林小直徑"><a href="#奇諾竹林小直徑" class="headerlink" title="奇諾竹林小直徑"></a>奇諾竹林小直徑</h2><p>錯愕 </p><p>這個就是在京都宣傳冊上經常看到的竹林 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-57.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-52.webp" alt=""></div></div></div><blockquote><p>返景入深林，復照青苔上 </p></blockquote><p>這裡的青苔太棒了，一度是小法師 🧙‍♀️ 的手機 📱 壁紙 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-92.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-93.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-54.webp" alt=""></div></div></div><p>移步換景 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-62.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-63.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-64.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-65.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-67.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-68.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-69.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-70.webp" alt=""></div></div></div><p>周恩來總理詩碑 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-73.webp" alt=""></div></div></div><p>走累了 還可以做 人力車 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-78.webp" alt=""></div></div></div><p>雖然 🍁 凋謝了不少<br>就算這僅存的紅色也是美不勝收呢 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-76.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-81.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-82.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-83.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-84.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-85.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-86.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-87.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-88.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-89.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-90.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-91.webp" alt=""></div></div></div><p>和 東京 的 城市景觀不同 </p><p>京都這裡的景觀 🌃 也是美爆了呢 </p><p>下次一定帶個妹紙一起來看<br>小法師 🧙‍♀️ 心想到 </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;京都&quot;&gt;&lt;a href=&quot;#京都&quot; class=&quot;headerlink&quot; title=&quot;京都&quot;&gt;&lt;/a&gt;京都&lt;/h1&gt;&lt;p&gt;十一長假從 🇮🇹 回來後&lt;br&gt;可能因為信用卡 💳 刷爆，招商銀行寄來張 Premium &lt;/p&gt;
&lt;p&gt;半月後的一天小法師 🧙‍♀️ 的發小要去日本看楓葉 🍁&lt;br&gt;表示已經做好了路線規劃&lt;br&gt;京都 - &amp;gt;奈良 - &amp;gt; kinosaki-&amp;gt;大阪&lt;br&gt;無奈體制內不好請假，所以只能訂十一月初的票，希望趕上 🍁 楓葉季的尾巴 &lt;/p&gt;
&lt;p&gt;小法師 🧙‍♀️ 一看是沒去過的關西地區&lt;br&gt;立即表示自己六月辦的是三年往返簽證&lt;br&gt;也可以一起同往 &lt;/p&gt;
&lt;p&gt;雖然裡出發只有兩週，時間比較緊迫&lt;br&gt;好在順利買到機票，瘋狂加班兩週，提前完成 ✅ 任務&lt;br&gt;將代碼提交給組織後，就開始了第二次日本 🇯🇵 之旅 &lt;/p&gt;
&lt;p&gt;當時買票還不知道看機型&lt;br&gt;到了機場看到這單薄的小飛機 ✈️ 時人都傻了&lt;br&gt;竟然是波音 737&lt;br&gt;雖然當時還沒有發生 MAX 事件&lt;br&gt;但還是一度擔心會飛不到地方墜落大海&lt;br&gt;轉而開啟 Lost 主線 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/tw/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/tw/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/tw/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/tw/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>🇮🇹-0-2</title>
    <link href="https://leihao0.github.io/tw/italy-0-2/"/>
    <id>https://leihao0.github.io/tw/italy-0-2/</id>
    <published>2021-02-12T16:00:00.000Z</published>
    <updated>2017-09-30T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="梵蒂岡"><a href="#梵蒂岡" class="headerlink" title="梵蒂岡"></a>梵蒂岡</h2><p>原來 梵蒂岡 在意大利內部<br>面積小於國內一所普通高校<br>領土不對外開放<br>除了博物館 </p><a id="more"></a><h3 id="埃及館"><a href="#埃及館" class="headerlink" title="埃及館"></a>埃及館</h3><p>看到了木乃伊感覺比較恐怖<br>都不敢拍照了<br>怕被追魂 </p><p>還有阿努比斯神像 </p><p>如果玩過刺客信條：起源<br>會看到很多熟悉的元素 </p><h3 id="神話英雄"><a href="#神話英雄" class="headerlink" title="神話英雄"></a>神話英雄</h3><p>可惜 小法師 在藝術修養尚未達到相應的水準時<br>就看到了這些教科書上的藝術品，結果完全不知道誰是誰<br>慚愧慚愧 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-06.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-10.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-14.jpg" alt=""></div></div></div><h3 id="松果庭院-amp-破碎地球"><a href="#松果庭院-amp-破碎地球" class="headerlink" title="松果庭院 &amp; 破碎地球"></a>松果庭院 &amp; 破碎地球</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-17.jpg" alt=""></div></div></div><h3 id="拉奧孔和他的兒子們"><a href="#拉奧孔和他的兒子們" class="headerlink" title="拉奧孔和他的兒子們"></a>拉奧孔和他的兒子們</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-28.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-25.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-27.jpg" alt=""></div></div></div><h3 id="圓形展廳"><a href="#圓形展廳" class="headerlink" title="圓形展廳"></a>圓形展廳</h3><p>正中央是羅馬時期尼祿曾使用過的浴盆 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-29.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-31.jpg" alt=""></div></div></div><h3 id="壁畫"><a href="#壁畫" class="headerlink" title="壁畫"></a>壁畫</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-37.jpg" alt=""></div></div></div><h3 id="拉斐爾畫室"><a href="#拉斐爾畫室" class="headerlink" title="拉斐爾畫室"></a>拉斐爾畫室</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-39.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-40.jpg" alt=""></div></div></div><h3 id="西斯廷禮拜堂"><a href="#西斯廷禮拜堂" class="headerlink" title="西斯廷禮拜堂"></a>西斯廷禮拜堂</h3><p>有 米開朗基羅的 最後的審判 和 創世紀<br>不准拍照<br>每人只可停留 15 分鐘 </p><p>平時看到的 創世紀 其實是最中間的一幅，其實一共九個篇章<br>神分光暗、創造日、月、草木、神分水陸、創造亞當、創造夏娃、原罪－逐出伊甸園、諾亞獻祭、大洪水、諾亞醉酒 </p><h3 id="螺旋樓梯"><a href="#螺旋樓梯" class="headerlink" title="螺旋樓梯"></a>螺旋樓梯</h3><p>出口繼續被震驚中<br>原來竟然是在這裡 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-41.jpg" alt=""></div></div></div><h3 id="聖杯"><a href="#聖杯" class="headerlink" title="聖杯"></a>聖杯</h3><p>命運之夜 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-44.jpg" alt=""></div></div></div><h2 id="聖彼得廣場"><a href="#聖彼得廣場" class="headerlink" title="聖彼得廣場"></a>聖彼得廣場</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-45.jpg" alt=""></div></div></div><h2 id="天使堡"><a href="#天使堡" class="headerlink" title="天使堡"></a>天使堡</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-47.jpg" alt=""></div></div></div><p>突然就刺客信條了起來 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-53.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-54.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-55.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-56.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-57.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-58.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-59.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-60.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-61.jpg" alt=""></div></div></div><h2 id="日落"><a href="#日落" class="headerlink" title="日落"></a>日落</h2><p>第一次看日落 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-62.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-66.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-67.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-69.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-68.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-70.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-71.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-73.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-74.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-76.jpg" alt=""></div></div></div><h2 id="第二天"><a href="#第二天" class="headerlink" title="第二天"></a>第二天</h2><p>路上一個小哥過來推荐一日遊 Bus<br>收了錢說去拿票，然後人就消失了<br>就當以為是騙子時，小哥帶著兩張票回來了<br>環線，可以定點隨時下車上車，還是挺不錯的 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-78.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-79.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-82.jpg" alt=""></div></div></div><h2 id="萬神殿"><a href="#萬神殿" class="headerlink" title="萬神殿"></a>萬神殿</h2><p>人太多，在外面遠遠的看了一眼 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-80.jpg" alt=""></p><h2 id="羅馬鬥獸場"><a href="#羅馬鬥獸場" class="headerlink" title="羅馬鬥獸場"></a>羅馬鬥獸場</h2><p>天吶，上次看到鬥獸場還是 間隔年時 小法師 玩 刺客信條：啟示錄<br>爬上鬥獸場，看到夕陽西下 🌇<br>被震撼的呆了好久<br>沒想到在三維世界見到了<br>真是不可思議呢 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-92.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-86.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-91.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-89.jpg" alt=""></div></div></div><h2 id="凱旋門"><a href="#凱旋門" class="headerlink" title="凱旋門"></a>凱旋門</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-87.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-88.jpg" alt=""></div></div></div><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-90.jpg" alt=""></p><h2 id="愛馬仕小錢包"><a href="#愛馬仕小錢包" class="headerlink" title="愛馬仕小錢包"></a>愛馬仕小錢包</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-94.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-95.jpg" alt=""></div></div></div><p>回到 CBD 奢飾品一條街<br>被土豪強烈推薦買愛馬仕包包<br>說什麼在奢飾品裡也是頂級的存在 </p><p>小法師在 Apple 推出錶帶前就沒聽說過 Hermès<br>自然不信<br>心想我讀書少你別騙我<br>轉頭就去 Google “愛馬仕 並不是 奢侈品”<br>驚訝的發現土豪說的竟然是真的 </p><p>刷掉巨資買了個巴掌大小的錢包<br>小心翼翼的把盒子包好<br>結賬出來看到旁邊的垃圾堆里扔了個巨大無比的盒子 </p><h2 id="機場"><a href="#機場" class="headerlink" title="機場"></a>機場</h2><p>折騰了一路，終於可以回程了<br>和日本不同，歐洲在機場可以退稅<br>完美 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-97.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-98.jpg" alt=""></div></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;梵蒂岡&quot;&gt;&lt;a href=&quot;#梵蒂岡&quot; class=&quot;headerlink&quot; title=&quot;梵蒂岡&quot;&gt;&lt;/a&gt;梵蒂岡&lt;/h2&gt;&lt;p&gt;原來 梵蒂岡 在意大利內部&lt;br&gt;面積小於國內一所普通高校&lt;br&gt;領土不對外開放&lt;br&gt;除了博物館 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/tw/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/tw/tags/littlemaster/"/>
    
      <category term="Italy" scheme="https://leihao0.github.io/tw/tags/italy/"/>
    
      <category term="🇮🇹" scheme="https://leihao0.github.io/tw/tags/%F0%9F%87%AE%F0%9F%87%B9/"/>
    
  </entry>
  
  <entry>
    <title>在冠狀病毒陰影下飛回中國</title>
    <link href="https://leihao0.github.io/tw/fly-back-to-china-under-covid-19/"/>
    <id>https://leihao0.github.io/tw/fly-back-to-china-under-covid-19/</id>
    <published>2020-12-20T07:52:43.000Z</published>
    <updated>2020-12-20T23:56:39.376Z</updated>
    
    <content type="html"><![CDATA[<p>2020 年底全球新館疫情沒有好轉<br>並且隨著冬季來臨逐漸有再次爆發的跡象<br>但最近小法師需要回國一趟<br>雖然目前全球已經開始接種各種疫苗 </p><table><thead><tr><th>公司</th><th>種類</th><th>劑量</th><th>有效率</th><th>存儲 ℃</th></tr></thead><tbody><tr><td>BioNTech/輝瑞</td><td>mRNA</td><td>x2</td><td>95%</td><td>-70</td></tr><tr><td>現代</td><td>mRNA</td><td>x2</td><td>95％</td><td>-20</td></tr><tr><td>牛津/阿斯利康</td><td>腺病毒載體</td><td>x2</td><td>62-90%</td><td>0</td></tr></tbody></table><p>但目前回國仍需要 14 天隔離 </p><a id="more"></a><h2 id="準備"><a href="#準備" class="headerlink" title="準備"></a>準備</h2><p>訪問當地大使館獲得入境信息<br>以新加坡為例，根據<a href="http://www.chinaembassy.org.sg/chn/lsfw/zytzs/t1838128.htm">駐新大使館</a> </p><p>10 月後登機大概經歷這麼幾個階段，在一步步收緊 </p><ol><li>核酸檢測 </li><li>核酸 + 血清 IgM 雙陰證明 </li><li>必須在微信小程序申請 防疫健康碼 </li></ol><h2 id="核酸檢測"><a href="#核酸檢測" class="headerlink" title="核酸檢測"></a>核酸檢測</h2><p>11 月還需預約檢測，12 月就不用預約了，直接找到認可的醫院就可以做測試<br>小法師住的公寓旁邊正好有一家診所，走過去 5 分鐘<br>因為不用預約，所以人暴多，等了大概一小時<br>抽了血捅鼻子<br>之前一直害怕這個測試，結果新加坡醫生比較溫柔，並沒太多不舒服 </p><p>這裡提醒下，抽血後一定要壓一會兒，前面那個小哥抽了血沒仔細用創可貼 🩹 壓住<br>結果血流成河，地上衣服上都是血，超可怕 😨 </p><h2 id="健康碼"><a href="#健康碼" class="headerlink" title="健康碼"></a>健康碼</h2><p>第二天上午收到短信和郵件的雙陰證明<br>但微信小程序死活提交不了文檔<br>小法師作為法師，大膽猜測是 DNS 解析的問題<br>Cloudflare 沒有正確返回小程序的服務器 IP 導致<br>把手機 📱 DNS 改成 114.114.114.114 就神奇的好了<br>不僅感嘆麻瓜們怎麼辦呀 </p><p>大概一小時後收到了健康碼<br>截圖保存以防萬一 </p><h2 id="生化服"><a href="#生化服" class="headerlink" title="生化服"></a>生化服</h2><p>之前被回國的人們在機場全副武裝的生化服嚇到了<br>小法師哆嗦著也買了一套+成人紙尿褲<br>偷偷試穿了下並不舒服<br>考慮到年底北半球處於冬季，在熱帶 T 恤上飛機，下飛機時不加衣服肯定當場重感冒 </p><p>穿生化服再加衣服就成了大問題 </p><p>反复閱讀 CDC 的 <a href="https://chinese.cdc.gov/coronavirus/2019-ncov/travelers/travel-during-covid19.html">COVID-19 疫情期間的國內旅行</a> 後，小法師推論 </p><ul><li>飛機有新風 </li><li>佩戴口罩 </li><li>不柔眼鼻 </li></ul><p>新冠的主要感染途徑是呼吸系統，小法師覺得 帶上 <strong>N95+外科口罩+護目鏡</strong> 應該就可以放心了 </p><h2 id="回國航班"><a href="#回國航班" class="headerlink" title="回國航班"></a>回國航班</h2><p>目前新加坡沒有直飛到北京的飛機<br>只能選擇先到上海，隔離 14 後再轉機 </p><p>新加坡直飛上海一周只有三趟飛機<br>週一的新加坡航空，週四的東方航空，週五夜裡的吉祥航空 </p><p>東方航空只能托運一件行李，超額需要額外購買，一件 500 RMB<br>在 App 上提前購買可以 8 折優惠 </p><p>登機前除了剛剛的 健康碼，還需要用 海關旅客 小程序 填寫一份入境信息 </p><h2 id="東方航空"><a href="#東方航空" class="headerlink" title="東方航空"></a>東方航空</h2><p>下午 3:00 </p><p>等登機口等待，大約有一半的人穿生化服，捂得嚴嚴實實<br>其實在前面安檢的時候，異常尷尬，因為有人有腰帶等原因，不得不把生化服脫一半<br>這種情況不就破功了嗎，還有什麼防護效果呀 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-02.jpg" alt=""></div></div></div><p>機組人員也帶雙層口罩+護目鏡 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-03.jpg" alt=""></p><p>飛機爬升後，小法師連上衛星 Wi-Fi，繼續給家人發消息更新動態，讓他們不用擔心 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-05.jpg" alt=""></p><p>雖然有疫情，但還是有餐飲提供<br>乘客並不多，小法師在中間，左右兩邊都沒人<br>所以沒等錯峰吃飯，收到點心後就迫不及待的吃掉了 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-04.jpg" alt=""></p><p>左邊靠窗的一位姐姐包裹的嚴嚴實實，整個行程沒吃飯沒喝水沒上衛生間<br>也是厲害 </p><h2 id="硬核核酸檢測"><a href="#硬核核酸檢測" class="headerlink" title="硬核核酸檢測"></a>硬核核酸檢測</h2><p>晚上 21:30 </p><p>下機前檢查二維碼<br>然後再次捅鼻孔做核酸檢測<br>小法師表示自己已經有經驗了隨便來<br>小姐姐說中國這邊比較嚴格，我盡量輕一點 </p><p>然後先是捅的比新加坡深多了，然後轉了棉籤幾圈<br>小法師以為已經結束了，比了個 OK 的手勢<br>沒想到小姐姐等了幾秒中後，又反向轉了幾圈<br>然後把棉籤折斷放到試管裡<br>小法師正要說話，小姐姐又拿出一個棉籤<br>對著右鼻孔 正時針，停留，逆時針，同樣操作了一番 </p><p>小法師強忍著淚水說謝謝 🙏<br>畢竟已經深夜了，大家都很辛苦呀 </p><h2 id="入境"><a href="#入境" class="headerlink" title="入境"></a>入境</h2><p>晚上 22:10 </p><p>檢查入境表單，護照 </p><p>邊境的小哥哥翻了翻小法師的幾個簽證，啪的改了個章<br>然後溫馨提示身份證不要和護照放一起，因為可能會被消磁 </p><p>晚上 22:20 </p><p>取行李，安檢時，被提醒小推车别給忘了 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-07.jpg" alt=""></div></div></div><p>晚上 22:30 </p><p>上海本地，外地分流隔離 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-08.jpg" alt=""></div></div></div><h2 id="噩夢"><a href="#噩夢" class="headerlink" title="噩夢"></a>噩夢</h2><p>這時候整個行程的噩夢來了<br>因為今天航班過多，隔離大巴 🚌 準備不足<br>開始了漫長的等待 ⌛️ </p><p>凌晨 00:40<br>收護照登記 </p><p>等啊等，深夜的上海已經很冷了<br>還好臨走前那位新加坡國立大學的朋友幫著買了一整套禦寒裝備<br>小法師穿上暖暖的，竟然站著睡著了 </p><p>凌晨 2:33<br>等待，上大巴，工作人員提醒護照到酒店會還給各位 </p><p>在車上晃啊晃，上了高速<br>吹著暖氣又睡著了<br>下了高速車停了，醒來發現是深夜也要等待的一萬個紅燈 </p><p>走走停停，煎熬 </p><p>因為隔離酒店隨機分配的，好的貴差的便宜<br>但這時候小法師已經顧不上省錢了，只想著 </p><p>天吶，快給我分配一個好點的酒店吧 🏨 </p><h2 id="國際水療中心"><a href="#國際水療中心" class="headerlink" title="國際水療中心"></a>國際水療中心</h2><p>凌晨 4:50 </p><p>終於到了隔離酒店<br>小法師抬頭一看，是個高樓，憑直覺這酒店不錯 </p><p>打開地圖發現果然是五星級<br>上海某國際水療中心 </p><p>心中暗喜<br>否極泰來 </p><p>然鵝還是不能下車<br>需要等待前面幾輛大巴登記入住完畢 </p><p>凌晨 5:50 </p><p>終於可以下車了<br>登記護照身份證 </p><ul><li>酒店 350 一天，可以支付寶微信銀聯閃付轉賬等各種辦法 </li><li>三餐 100 一天，但並不是酒店的餐飲，而是外包的盒飯 </li><li>也可自行點外賣，每天 12 點， 6 點左右統一送餐 </li><li>快遞只能接收無法郵寄 </li><li>每天測溫兩次 </li><li>垃圾袋密封放到門外，有全身生化服的工作人員定時清理 </li></ul><h2 id="入住"><a href="#入住" class="headerlink" title="入住"></a>入住</h2><p>凌晨 6:10 </p><p>然後小法師就這麼開始了 14 天的 隔離生活<br>媽媽之前還擔心小法師不能出門會無聊<br>然而小法師本來就宅，現在依法不用見人，十分開心<br>另外這裡好像第一次去新加坡時入住的 M hotel 啊 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-12.jpg" alt=""></div></div></div><h2 id="14-天隔離"><a href="#14-天隔離" class="headerlink" title="14 天隔離"></a>14 天隔離</h2><p>當然隔離期間也不能掉以輕心<br>相對於一路上從同一個國家來的持有雙陰證明的遊客<br>在隔離酒店反而會碰到來自各個國家的人們 </p><ul><li>比如 12 月 20 號 發生的 <a href="https://www.zaobao.com.sg/znews/singapore/story20201220-1110087">13 人入住隔離確診冠病</a> </li><li>還有 14 結束隔離後 第 16 天發病 </li><li>北京 14+7 醫學觀察 </li><li>英國新冠病毒新變種傳染性增加 70% </li><li>… </li></ul><p>所以一方面開窗戶 🪟 通風保證空氣流通，減小病毒濃度<br>另一方面還是要勤洗手 🧽，不柔眼鼻 👀👃，老老實實戴上口罩 😷 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2020 年底全球新館疫情沒有好轉&lt;br&gt;並且隨著冬季來臨逐漸有再次爆發的跡象&lt;br&gt;但最近小法師需要回國一趟&lt;br&gt;雖然目前全球已經開始接種各種疫苗 &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;公司&lt;/th&gt;
&lt;th&gt;種類&lt;/th&gt;
&lt;th&gt;劑量&lt;/th&gt;
&lt;th&gt;有效率&lt;/th&gt;
&lt;th&gt;存儲 ℃&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;BioNTech/輝瑞&lt;/td&gt;
&lt;td&gt;mRNA&lt;/td&gt;
&lt;td&gt;x2&lt;/td&gt;
&lt;td&gt;95%&lt;/td&gt;
&lt;td&gt;-70&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;現代&lt;/td&gt;
&lt;td&gt;mRNA&lt;/td&gt;
&lt;td&gt;x2&lt;/td&gt;
&lt;td&gt;95％&lt;/td&gt;
&lt;td&gt;-20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;牛津/阿斯利康&lt;/td&gt;
&lt;td&gt;腺病毒載體&lt;/td&gt;
&lt;td&gt;x2&lt;/td&gt;
&lt;td&gt;62-90%&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;但目前回國仍需要 14 天隔離 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Covid" scheme="https://leihao0.github.io/tw/tags/covid/"/>
    
  </entry>
  
  <entry>
    <title>如何在美股開戶</title>
    <link href="https://leihao0.github.io/tw/how-to-buy-us-stocks/"/>
    <id>https://leihao0.github.io/tw/how-to-buy-us-stocks/</id>
    <published>2020-11-05T15:00:03.000Z</published>
    <updated>2020-12-20T23:53:08.629Z</updated>
    
    <content type="html"><![CDATA[<p>參考代碼<code>0CM1QE</code> </p><p>這兩天美國大選<br>作為韭菜的就不分享因為時差高位接盤<br>半夜大跌驚醒割肉<br>現在眼看著 🚀 一般的往上漲，又不敢入市的尷尬 </p><p>只分享一下當時開戶的心酸歷程吧 </p><a id="more"></a><h2 id="美國券商"><a href="#美國券商" class="headerlink" title="美國券商"></a>美國券商</h2><p>因為不少美國券商可免佣金，所以先看的 </p><ul><li>Robinhood (用戶界面比較好) </li><li>TD Ameritrade (老牌) </li><li>Firstrade (中文客服) </li></ul><p>Robinhood 因為被邀請雙方都可以送股票，我問美國的小伙伴要到了碼，然後去官網發現只能美國境內提交…<br>TD Ameritrade 倒是有 SG，網站，但是提交了資料不知道怎麼卡在最後一步，郵件過去也沒人審核<br>Firstrade ，非美國人自動幫提交 免稅表格，提交了資料後，賬戶過了幾個工作日終於開好了，然後發現 存款只能 ACH，Check, Wire Trannsfer </p><p>ACH，Check 都需要本人美國銀行都賬戶轉賬，所以肯定不行<br>Wire Trannsfer 又要手續費 </p><h2 id="新加坡券商"><a href="#新加坡券商" class="headerlink" title="新加坡券商"></a>新加坡券商</h2><p>然後又調研了 新加坡，發現這些人竟然走 UOB 或者 DBS 銀行的 Trading Account<br>只聽說手續費貴到天上去了，不值 </p><h2 id="國內券商"><a href="#國內券商" class="headerlink" title="國內券商"></a>國內券商</h2><p>好吧，繞了一圈又回來了… </p><ul><li>小米的老虎 </li><li>騰訊的富途 </li><li>雪球的雪盈 </li></ul><p>比較高興的 🐯 支持新加坡開戶，可以 </p><ul><li>美股，港股，坡股，澳股… </li><li>支持 pre post market, 期貨 </li><li>槓桿 </li></ul><p>我本來還打算上傳護照什麼的資料，反正之前也準備好了<br>結果發現支持 Singpass 認證，點了來回跳轉了一下，就認證好了… </p><p>天吶早知道這麼容易<br>我去年就開了不香嗎 </p><p>不然這時候已然翻了數倍<br>或者已經從天台跳下去了 </p><h2 id="交易費"><a href="#交易費" class="headerlink" title="交易費"></a>交易費</h2><p>因為我不(敢)買期權<br>正常買賣額外支出分三塊 </p><ul><li>買 2$ </li><li>股票總額 0.1% </li><li>賣 2$ </li></ul><p>所以就算你陪光底褲， 🐯 也會盆滿缽滿 </p><h2 id="參考代碼"><a href="#參考代碼" class="headerlink" title="參考代碼"></a>參考代碼</h2><p>可以用我的 code <code>0CM1QE</code> </p><p>我看目前的活動是雙方 </p><ul><li>免 5 筆佣金 </li><li>充 2000SGD 送 30SGD，3W 送 100SGD </li></ul><p>好吧，完全沒 refer 的慾望<br>我記得以前是送一股阿里的股票啊，莫非現在漲太高給不起了？ </p><h2 id="成績單"><a href="#成績單" class="headerlink" title="成績單"></a>成績單</h2><p>且看我在這兩天全球股市大漲，夜裡擔驚受怕睡不著，一頓猛如虎的操作後的成績單 </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/how-to-buy-us-stocks.jpeg" alt=""></p><p>所以還等什麼呢，快快註冊吧 </p><p>我在天台等你額～～～ </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;參考代碼&lt;code&gt;0CM1QE&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;這兩天美國大選&lt;br&gt;作為韭菜的就不分享因為時差高位接盤&lt;br&gt;半夜大跌驚醒割肉&lt;br&gt;現在眼看著 🚀 一般的往上漲，又不敢入市的尷尬 &lt;/p&gt;
&lt;p&gt;只分享一下當時開戶的心酸歷程吧 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Stock" scheme="https://leihao0.github.io/tw/tags/stock/"/>
    
      <category term="Broker" scheme="https://leihao0.github.io/tw/tags/broker/"/>
    
  </entry>
  
  <entry>
    <title>Python 的用途是什麼</title>
    <link href="https://leihao0.github.io/tw/What-is-Python-Used-for/"/>
    <id>https://leihao0.github.io/tw/What-is-Python-Used-for/</id>
    <published>2020-09-15T03:17:56.000Z</published>
    <updated>2020-12-20T23:53:08.629Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在現實世界中如何使用-Python"><a href="#在現實世界中如何使用-Python" class="headerlink" title="在現實世界中如何使用 Python"></a>在現實世界中如何使用 Python</h1><p><strong>Python</strong>是世界上最受歡迎的編碼語言之一。 </p><p>大多數美國頂尖大學甚至在其入門的編碼課程中都使用 Python：教導學生使用 Python 來構建簡單的遊戲，解析來自網頁的信息，甚至進行語言處理！ </p><p>儘管如此，許多父母和學生都常常想知道-Python 在公司或各個領域中實際上是如何使用的？ </p><p>繼續閱讀以了解<strong>Python</strong>如何驅動*<em>當今的領先行業，並在眾多計算機科學學科中發揮重要作用。 *</em> </p><a id="more"></a><h2 id="為什麼選擇-Python？"><a href="#為什麼選擇-Python？" class="headerlink" title="為什麼選擇 Python？"></a>為什麼選擇 Python？</h2><p><a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&utm_medium=what_is_python_used_for&utm_campaign=outreach">Python</a>是一種<strong>高層次的</strong>和<strong>通用的編碼語言</strong> -這意味著它更容易理解和可用於解決各種各樣的問題！ </p><p>憑藉其簡單的語法，高可讀性，可在整個操作系統上使用，Python 是一種有價值的語言，可用於各種應用程序的學習和使用。 </p><p><img src="https://images.ctfassets.net/mrop88jh71hl/70P7f6p7J1Bk4VY8GDzm95/58d544a1044609e94a001523d9583f22/python-code-application.jpeg" alt="屏幕上的Python代碼。 "> </p><p>工程師屏幕上的 Python 代碼示例。 </p><p>因此，Python 不僅在當今的就業市場中盛行，而且在我們日常使用的通用技術中盛行也就不足為奇了。 </p><p><strong>Python 編程</strong>是一種幾乎可以在任何行業中使用的技能，其作用遠不止軟件開發。從行業像<strong>金融，醫療保健，</strong>以及<strong>保險</strong>，像田<strong>航空航天</strong>到<strong>娛樂</strong> - [基於Python 的技術](<a href="https://appdevelopermagazine.com/ten">https://appdevelopermagazine.com/ten</a> -industries-using-python-programming/)是推動<strong>創新和新的解決方案</strong>。 </p><p>在《<a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&utm_medium=what_is_python_used_for&utm_campaign=outreach">什麼是Python 101》指南中</a>，我們介紹了Python 以及Python 所使用的一些領域，例如<strong>技術</strong>，<strong>金融</strong>和<strong>生物技術</strong>。但是在本文中，我們將更深入地研究 Python 的廣泛用途-特別是在以下領域： </p><ul><li><strong>Web 開發</strong> </li><li><strong>數據科學</strong> </li><li><strong>機器學習</strong> </li><li><strong>人工智能</strong> </li></ul><h2 id="Python-的應用"><a href="#Python-的應用" class="headerlink" title="Python 的應用"></a>Python 的應用</h2><h3 id="Web-開發"><a href="#Web-開發" class="headerlink" title="Web 開發"></a>Web 開發</h3><p>雖然 HTML，CSS 和 Javascript 可能是進行<strong>Web 開發</strong>的常用工具，但 Python 也是一個不錯的選擇。 </p><p>[Web 開發](<a href="https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before">https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before</a> -getting-started/)是指從靜態純文本頁面到動態電子商務網站和交互式Internet 應用程序，在Internet 上構建網站。 </p><p>編碼對於 Web 開發對於構建站點功能，優化用戶體驗並確保信息被正確組織至關重要。 Python 的<strong>Django</strong>和<strong>Flask</strong>等網絡框架已成為網站開發的流行選擇。 </p><p><img src="https://images.ctfassets.net/mrop88jh71hl/6prH9NRKgybllrNcEqeCBy/c7fbc7b6960e8f94efb9eaa0b70a97d2/python-web-development-applications.png" alt="Python用於創建網頁。 "> </p><p>Python 是後端 Web 開發的絕佳選擇，如今已被許多公司使用。 </p><p>這些開放源代碼框架使用戶能夠更有效地構建 Web 應用程序，因為 Python 具有處理大量數據和自動執行任務的能力。實際上，<strong>Instagram</strong>，<strong>Pinterest</strong>和<strong>Google 等</strong>公司在其[後端Web 開發中都](<a href="https://learn.onemonth.com/10-famous-websites-built">https://learn.onemonth.com/10-famous-websites-built</a> -using-python/)採用了Python 。 </p><h3 id="數據科學"><a href="#數據科學" class="headerlink" title="數據科學"></a>數據科學</h3><p>在<a href="https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&utm_medium=what_is_python_used_for&utm_campaign=outreach">數據科學</a>和<strong>數據分析</strong><a href="https://junilearning.com/blog/guide/coding-and-data-science/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&utm_medium=what_is_python_used_for&utm_campaign=outreach">方面</a>，Python 還是主要的選擇語言。 </p><p>在<strong>大數據</strong>時代，我們通過導航(GPS)，在線購物，能源使用以及智能手錶等可穿戴設備來與日常生活中的數據頻繁接觸。 </p><p>平均每個家庭約有[11 台設備，](<a href="https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should">https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should</a> -push-that-even-higher-1203431225/)並且將來這個數字可能還會增加！擁有如此多的設備，企業需要處理大量數據才能提供服務。 </p><p><img src="https://images.ctfassets.net/mrop88jh71hl/3XS43f9pqDhRuft9GdnvZq/2d0513d9f0079c572923a49cd214add5/python-data-analysis-applications.png" alt="Python用於數據分析的過程的說明"> </p><p>基於 Python 的工具通常用於可視化，處理和分析大量數據。 </p><p><strong>數據科學</strong>涉及處理數據和推斷趨勢<strong>-Python</strong>在此領域非常有用，因為它包含<strong>scipy</strong>，<strong>numpy</strong>和<strong>pandas</strong>等密集包 。 </p><p>此外，<strong>matplotlib</strong>軟件包可用於構建數據可視化。這使 Python 成為諸如<strong>生物信息學</strong>等領域的熱門選擇，該領域還涉及大量數據和建模。 </p><p>這些基於 Python 的工具因其易用性和可伸縮性而變得流行。例如，<a href="https://www.edureka.co/blog/how-netflix-uses-python/#hownetflixusespython">Netflix</a>使用<strong>scipy</strong>和<strong>numpy</strong>進行數值計算來管理跨平台的用戶流量。 </p><p>▶ <strong>嘗試：</strong> [高級數據科學和Python 教程](<a href="https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source">https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source</a> =gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach) </p><h3 id="機器學習"><a href="#機器學習" class="headerlink" title="機器學習"></a>機器學習</h3><p>通過分析大量數據，<strong>機器學習</strong> <a href="https://junilearning.com/blog/guide/what-are-algorithms/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&utm_medium=what_is_python_used_for&utm_campaign=outreach">算法</a>可以找到模式並將其應用於未來的行為。 </p><p>產品中機器學習最明顯的用途是推薦系統。公司如<strong>Netflix 公司</strong>，<strong>Spotify 的</strong>，和<strong>的 Youtube</strong>收集用戶行為進行預測，並建議播放列表和視頻。 </p><p><strong>Scikit-learn</strong>和<strong>tensorflow</strong>是 Python 庫，可用於對大型數據集進行分類，聚類和回歸的算法。這些庫的高性能和廣泛功能使其在任何機器學習探索中都至關重要。 </p><p>▶ <strong>了解更多：</strong> [兒童算法的重要性](<a href="https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_medium=">https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&amp;utm_medium=</a> what_is_python_used_for&amp;utm_campaign=outreach) </p><h3 id="人工智能"><a href="#人工智能" class="headerlink" title="人工智能"></a>人工智能</h3><p>機器學習實際上只是<strong>人工智能的</strong>一個方面。 AI 是指機器的智能和計算機系統的開發，以執行以人為本的任務，例如感知或決策。 </p><p>人工智能的一個傑出示例是<strong>Uber</strong>和<strong>Lyft</strong>等乘車應用。 </p><p><img src="https://images.ctfassets.net/mrop88jh71hl/dlvfPv6HAIV4YaMb1TRCl/88739612a93476c94733255a94a567d7/python-artificial-intelligence-in-ride-sharing.png" alt="人工智能用於拼車應用的Python插圖。 "> </p><p>Python 在人工智能中用於 Lyft 或 Uber 等應用程序。然後，AI 系統可以預測諸如用戶需求和預計到達時間之類的事情。 </p><p>Uber 利用AI 來<strong>預測用戶需求</strong>和<strong>估計的到達時間</strong>(以及其他功能)，其中大部分是通過[Python](<a href="https://eng.uber.com/uber-ai-blog">https://eng.uber.com/uber-ai-blog</a> -2019/)完成的。 </p><p>除了一些前面提到的 Python 庫之外，還可以通過<strong>keras</strong>和<strong>pytorch</strong>等其他庫來創建 AI 功能(例如預測模型和神經網絡)。 </p><h2 id="Python-無處不在！"><a href="#Python-無處不在！" class="headerlink" title="Python 無處不在！"></a>Python 無處不在！</h2><p>在流行的編程語言中，Python 是其應用程序中種類最多的語言之一。此外，它已與我們以及當今的領先公司深入地融合在一起。 </p><p>涉及 Python 的職業包括<strong>軟件工程師，Web 開發人員，數據科學家，產品經理，業務分析師</strong>等。無論哪個行業，這個技術時代的公司都依賴於數據驅動的決策制定，而 Python 是做到這一點的完美工具。 </p><p>如果您或您的孩子對上面列出的領域或角色感興趣，那麼學習 Python 是一個不錯的選擇！ </p><h2 id="想要成為-Python-程序員？"><a href="#想要成為-Python-程序員？" class="headerlink" title="想要成為 Python 程序員？"></a>想要成為 Python 程序員？</h2><p>Python 的最大優勢之一是幫助新編碼人員學習基本概念並熟悉編程！對於各個年齡段的新程序員，也有許多資源可供廣泛學習 Python。 </p><h3 id="適用於兒童的-Python-類"><a href="#適用於兒童的-Python-類" class="headerlink" title="適用於兒童的 Python 類"></a>適用於兒童的 Python 類</h3><p><img src="https://images.ctfassets.net/mrop88jh71hl/2dK37wFC5SF8HNKm4nGmqr/c256e7002d196ea54e4c10817a68f8a7/learning-python-with-juni.png" alt="一位使用Python的Juni講師。 "> </p><p>Juni 講師向一名年輕學生教授基本的 Python。 </p><p>在Juni Learning 中，我們將在經驗豐富的編碼老師的幫助下，向11-18 歲的年輕編碼人員[教授Python](<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=">https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=</a> gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach)。從<strong>鞏固編碼基礎到構建算法和分析數據集</strong>，這些課程探索 Python 的許多不同應用，並教學生如何構建自己的編碼項目。 </p><p>閱讀有關我們的<a href="https://junilearning.com/coding/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc?utm_source=gf&utm_medium=what_is_python_used_for&utm_campaign=outreach">編碼課程</a>和課程的更多信息，或[開始](https:// join.junilearning.com/)與我們的招生團隊一起學習哪種課程最適合您孩子的編碼之旅。 </p><hr><p><em>This</em> [<em>article_](<a href="https://junilearning.com/blog/guide/what-is-python-used-for-major-industries/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjME_X">https://junilearning.com/blog/guide/what-is-python-used-for-major-industries/?fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjME_X</a><strong><strong>____</strong></strong></em> _junilearning.com_](<a href="https://junilearning.com/?utm_source=gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach)。">https://junilearning.com/?utm_source=gf&amp;utm_medium=what_is_python_used_for&amp;utm_campaign=outreach)。</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;在現實世界中如何使用-Python&quot;&gt;&lt;a href=&quot;#在現實世界中如何使用-Python&quot; class=&quot;headerlink&quot; title=&quot;在現實世界中如何使用 Python&quot;&gt;&lt;/a&gt;在現實世界中如何使用 Python&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;是世界上最受歡迎的編碼語言之一。 &lt;/p&gt;
&lt;p&gt;大多數美國頂尖大學甚至在其入門的編碼課程中都使用 Python：教導學生使用 Python 來構建簡單的遊戲，解析來自網頁的信息，甚至進行語言處理！ &lt;/p&gt;
&lt;p&gt;儘管如此，許多父母和學生都常常想知道-Python 在公司或各個領域中實際上是如何使用的？ &lt;/p&gt;
&lt;p&gt;繼續閱讀以了解&lt;strong&gt;Python&lt;/strong&gt;如何驅動*&lt;em&gt;當今的領先行業，並在眾多計算機科學學科中發揮重要作用。 *&lt;/em&gt; &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://leihao0.github.io/tw/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>如何清潔 MacBook 灰塵和風扇</title>
    <link href="https://leihao0.github.io/tw/How-to-Clean-MacBook-Dust-Fan/"/>
    <id>https://leihao0.github.io/tw/How-to-Clean-MacBook-Dust-Fan/</id>
    <published>2020-09-10T08:46:44.000Z</published>
    <updated>2020-12-20T23:53:08.628Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如果kernel-task正在使用您大量的Mac-CPU"><a href="#如果kernel-task正在使用您大量的Mac-CPU" class="headerlink" title="如果kernel_task正在使用您大量的Mac CPU"></a>如果kernel_task正在使用您大量的Mac CPU</h2><p>之前我有留意到 <code>kernel_task</code> 動不動就會 100%，卡到不行，但它又是 <code>System</code> 進程，毫無辦法 </p><p>根據的文檔<a href="https://support.apple.com/zh-cn/HT207359">如果kernel_task正在使用您的大部分Mac CPU</a> </p><blockquote><p>換句話說，即使您的Mac感覺不熱，kernel_task也會對導致<strong>您的CPU變得過熱</strong>的情況做出響應。 它本身不會導致這些情況。 當CPU溫度降低時，kernel_task會自動減少其活動。 </p></blockquote><p>這是說因為 CPU 太熱 🔥 了，即使你覺得不熱 🥶… </p><p>另外 <code>kernel_task</code> 也不是罪魁禍首，等 CPU 不熱了，它的佔用率也就自動下去… </p><a id="more"></a><p>又查到不應該在左側 👈 充電 🔋 ，信以為真 </p><h3 id="這就是為什麼您不應該在左側為MacBook-Pro充電-https-www-digitaltrends-com-computing-why-you-shouldnt-charge-macbook-pro-left-side-text-當％20charging％20the％20MacBook％20Pro時，請使用％20the％20right％2Dhand％20ports。"><a href="#這就是為什麼您不應該在左側為MacBook-Pro充電-https-www-digitaltrends-com-computing-why-you-shouldnt-charge-macbook-pro-left-side-text-當％20charging％20the％20MacBook％20Pro時，請使用％20the％20right％2Dhand％20ports。" class="headerlink" title="[這就是為什麼您不應該在左側為MacBook Pro充電](https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text =當％20charging％20the％20MacBook％20Pro時，請使用％20the％20right％2Dhand％20ports。)"></a>[這就是為什麼您不應該在左側為MacBook Pro充電](<a href="https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text">https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text</a> =當％20charging％20the％20MacBook％20Pro時，請使用％20the％20right％2Dhand％20ports。)</h3><blockquote><p>給MacBook Pro充電並在左側端口中插入外圍設備時，設備的端口可能會變熱。 由於某些原因，這可能會導致kernel_task變得有點麻煩，並耗盡整個系統資源。 </p></blockquote><p>但換到右邊 👉 充電 🔋 了幾天后，還是過一陣就 100% </p><p>絕望… </p><p>突然想是不是因為需要清灰了 </p><h2 id="如何清潔MacBook灰塵和風扇"><a href="#如何清潔MacBook灰塵和風扇" class="headerlink" title="如何清潔MacBook灰塵和風扇"></a>如何清潔MacBook灰塵和風扇</h2><p>Google 了下才知道可以自己拆卸<br>我的是 16 年的本本，已經過保<br>不然根據<a href="https://www.apple.com/legal/warranty/products/embedded-mac-warranty-rest-of-apac-english.html">Mac保修</a><br>自己拆了應該就不保了 </p><blockquote><p>本保證不適用於： </p><p>-(c)因使用不符合Apple產品規格的第三方組件或產品而造成的損壞 </p></blockquote><h3 id="工具-🔧"><a href="#工具-🔧" class="headerlink" title="工具 🔧"></a>工具 🔧</h3><ul><li>五角螺絲 🔩 刀 </li><li>吹灰球，小刷子 </li><li>廢棄的信用卡 💳 </li></ul><h3 id="步驟"><a href="#步驟" class="headerlink" title="步驟"></a>步驟</h3><ol><li>把螺絲擰下來 </li><li>邊上開個小縫 </li><li>把不用的信用卡 💳 插進去，沿著圖示藍色箭頭方向滑動 <ol><li>會聽見 <strong>咔</strong> 的一聲 </li><li>圖 2 可以看到中間水平線一排有四個卡扣 </li><li>而不是把什麼東西弄斷了(但願如此 😓) </li></ol></li><li>右邊對稱的用 💳 在滑一下 </li><li>然後按紅色箭頭用力水平拽 <ol><li>圖 2 風扇上方可以看到卡槽 </li><li>所以要水平用力，左右 ↔️ 對稱一點點的拽 </li></ol></li><li>後蓋就打開了 </li></ol><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-3.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-0.jpg" alt=""></div></div></div><p>確實臟到不行 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-1.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-2.jpg" alt=""></div></div></div><p>清了灰後 <code>kernel_task</code> 就不怎麼出現了，💻 也復活了<br>瞬間感覺 16 年的本本 💻 可以在用 5 年 👨‍💻 </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;如果kernel-task正在使用您大量的Mac-CPU&quot;&gt;&lt;a href=&quot;#如果kernel-task正在使用您大量的Mac-CPU&quot; class=&quot;headerlink&quot; title=&quot;如果kernel_task正在使用您大量的Mac CPU&quot;&gt;&lt;/a&gt;如果kernel_task正在使用您大量的Mac CPU&lt;/h2&gt;&lt;p&gt;之前我有留意到 &lt;code&gt;kernel_task&lt;/code&gt; 動不動就會 100%，卡到不行，但它又是 &lt;code&gt;System&lt;/code&gt; 進程，毫無辦法 &lt;/p&gt;
&lt;p&gt;根據的文檔&lt;a href=&quot;https://support.apple.com/zh-cn/HT207359&quot;&gt;如果kernel_task正在使用您的大部分Mac CPU&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;換句話說，即使您的Mac感覺不熱，kernel_task也會對導致&lt;strong&gt;您的CPU變得過熱&lt;/strong&gt;的情況做出響應。 它本身不會導致這些情況。 當CPU溫度降低時，kernel_task會自動減少其活動。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這是說因為 CPU 太熱 🔥 了，即使你覺得不熱 🥶… &lt;/p&gt;
&lt;p&gt;另外 &lt;code&gt;kernel_task&lt;/code&gt; 也不是罪魁禍首，等 CPU 不熱了，它的佔用率也就自動下去… &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Macbook" scheme="https://leihao0.github.io/tw/tags/macbook/"/>
    
  </entry>
  
  <entry>
    <title>適用於兒童的 Python vs Java</title>
    <link href="https://leihao0.github.io/tw/Python-vs-Java-for-Kids/"/>
    <id>https://leihao0.github.io/tw/Python-vs-Java-for-Kids/</id>
    <published>2020-08-12T05:33:04.000Z</published>
    <updated>2020-12-20T23:53:08.628Z</updated>
    
    <content type="html"><![CDATA[<p><em>該</em> <a href="https://junilearning.com/blog/guide/python-vs-java/"><em>文章</em></a> <em>最初出現在</em> <a href="https://junilearning.com/"><em>junilearning.com</em></a> </p><h1 id="Python-與-Java：使用，性能，學習"><a href="#Python-與-Java：使用，性能，學習" class="headerlink" title="Python 與 Java：使用，性能，學習"></a>Python 與 Java：使用，性能，學習</h1><p>在計算機科學領域，有許多編程語言，沒有一種語言能比另一種語言優越。換句話說，<strong>每種語言最適合解決某些問題</strong>，實際上，對於給定的編程項目，通常沒有一種最佳語言可供選擇。因此，對於希望開發軟件或通過代碼解決有趣問題的學生來說，擁有<strong>適用於任何編程語言的強大計算機科學基礎非常重要</strong>。 </p><a id="more"></a><p>編程語言傾向於在它們的工作方式上共享某些特徵，例如，它們在處理內存使用情況或使用對象的強度方面。當學生接觸更多語言時，他們將開始看到這些模式。本文將主要關注 Python 與 Java，這是世界上使用最廣泛的兩種編程語言。雖然很難準確地衡量每種編程語言的增長速度，但<strong>它們是當今工業上使用的兩種最受歡迎的編程語言</strong>。 </p><p>Python 和 Java 之間的主要區別是 Python 是<strong>動態類型的</strong>，而 Java 是<strong>靜態類型的</strong>。寬鬆地講，這意味著 Java 對如何在代碼中定義和使用變量更加嚴格。 *<em>結果，Java 的語法趨於冗長，這是我們建議初學者在 Java 之前學習 Python 的原因之一。 *</em>例如，這是<code>numbers</code>在 Python 中創建一個名稱變量的方法，該變量保存數字 0 到 9： </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">numbers = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">numbers.append(i)</span><br></pre></td></tr></table></figure><p>這是您在Java中執行相同操作的方式： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ArrayList numbers = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    numbers.add(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另一個主要區別是，Java 是一種<strong>編譯語言</strong>，因此通常比 Python 運行程序的速度更快。這意味著在實際運行程序之前，編譯器會將 Java 代碼轉換為機器級代碼。相比之下，Python 是一種<strong>解釋型</strong>語言，這意味著沒有編譯步驟。 </p><h2 id="用法和實用性"><a href="#用法和實用性" class="headerlink" title="用法和實用性"></a>用法和實用性</h2><p>從歷史上看，Java 之所以成為較流行的語言，部分原因是它的悠久歷史。但是，Python 正在迅速普及。根據<a href="https://octoverse.github.com/">Github 的十月狀態報告</a>，它最近已經超過 Java，成為使用最廣泛的編程語言。根據 2018 年開發人員調查，<strong>Python 現在是增長最快的計算機編程語言</strong>。 </p><p>Python 和 Java 都有大量的開發人員社區，可以在<a href="https://stackoverflow.com/">Stack Overflow 之</a>類的網站上回答問題。從<a href="https://insights.stackoverflow.com/trends?tags=python%2Cjava">Stack Overflow 趨勢中</a>可以看出，<strong>Python 在 2017 年 Stack Overflow 上所問問題的百分比超過 Java</strong>。在撰寫本文時，Stack Overflow 上大約 13％的問題用 Python 標記，而大約 8％的問題用 Java 標記！ </p><h2 id="Web-開發"><a href="#Web-開發" class="headerlink" title="Web 開發"></a>Web 開發</h2><p><strong>Python 和 Java 均可用於後端 Web 開發</strong>。通常，開發人員將使用適用於 Python 的<a href="https://stackify.com/python-frameworks/">Django 和 Flask</a>框架以及適用於 Java 的<a href="https://spring.io/">Spring</a>。 Python 以其代碼的可讀性而聞名，這意味著 Python 代碼乾淨，易讀且簡潔。 Python 還擁有大量，全面的模塊，軟件包和庫，這些模塊，軟件包和庫由 Python 發燒友社區開發，而其標準庫之外。 Java 具有類似的生態系統，儘管程度可能較小。 </p><h2 id="移動應用開發"><a href="#移動應用開發" class="headerlink" title="移動應用開發"></a>移動應用開發</h2><p><strong>在移動應用程序開發方面，Java 佔據了主導地位</strong>，因為<strong>Java</strong>是用於構建 Android 應用程序和遊戲的主要語言。借助上述量身定制的庫，開發人員可以選擇利用專門為操作系統構建的強大框架和開發工具來編寫 Android 應用程序。當前，儘管有<a href="https://kivy.org/">Kivy</a>和<a href="https://beeware.org/">BeeWare 之</a>類的工具可讓您編寫一次代碼並在Windows，OS X，iOS 和Android 上部署應用程序，但是Python 並不常用於移動開發。 </p><h2 id="機器學習與大數據"><a href="#機器學習與大數據" class="headerlink" title="機器學習與大數據"></a>機器學習與大數據</h2><p>相反，在機器學習和<a href="https://junilearning.com/blog/coding-and-data-science">數據科學領域</a>，Python 是最受歡迎的語言。 Python 通常用於大數據，科學計算和人工智能(AI)項目。 <strong>在從事涉及情感分析的項目時，絕大多數數據科學家和機器學習程序員都選擇使用 Python 而不是 Java</strong>。同時，值得注意的是，許多機器學習程序員在從事與網絡安全，網絡攻擊預防和欺詐檢測有關的項目時可能會選擇使用 Java。 </p><h2 id="從哪兒開始"><a href="#從哪兒開始" class="headerlink" title="從哪兒開始"></a>從哪兒開始</h2><p>在學習編程的基礎時，<strong>許多研究得出的結論是</strong>，由於Python 的簡單直觀的語法，因此<strong>比Java</strong> <strong>更容易**</strong>[學習Python](https ://junilearning.com/coding)<em><em>，如前面的示例所示。與 Python 相比，Java 程序通常具有更多的樣板代碼-必須在許多地方包含很少或沒有改動的部分代碼。話雖如此，Java 有一些顯著的優勢，特別是它作為一種編譯語言的速度。 *</em>學習 Python 和 Java 將使學生接觸兩種語言，這兩種語言基於相似的計算機科學概念，但教育方式不同。 *\</em> </p><p>總體而言，很明顯，Python 和 Java 在實踐中都是強大的編程語言，因此，對於任何有抱負的軟件開發人員，最好熟練地學習這兩種語言。程序員應該根據每個軟件開發項目的特定需求比較 Python 和 Java，而不是簡單地學習他們喜歡的一種語言。簡而言之，<strong>任何一種語言都不比另一種語言優越，因此程序員應力爭在兩種編碼方面都擁有這兩種語言</strong>。 </p><table><thead><tr><th></th><th>Python</th><th>Java</th></tr></thead><tbody><tr><td>運行時性能</td><td></td><td>優勝者</td></tr><tr><td>易於學習</td><td>優勝者</td><td></td></tr><tr><td>實用敏捷性</td><td>領帶</td><td>領帶</td></tr><tr><td>移動應用開發</td><td></td><td>優勝者</td></tr><tr><td>大數據</td><td>優勝者</td><td></td></tr></tbody></table><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;該&lt;/em&gt; &lt;a href=&quot;https://junilearning.com/blog/guide/python-vs-java/&quot;&gt;&lt;em&gt;文章&lt;/em&gt;&lt;/a&gt; &lt;em&gt;最初出現在&lt;/em&gt; &lt;a href=&quot;https://junilearning.com/&quot;&gt;&lt;em&gt;junilearning.com&lt;/em&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h1 id=&quot;Python-與-Java：使用，性能，學習&quot;&gt;&lt;a href=&quot;#Python-與-Java：使用，性能，學習&quot; class=&quot;headerlink&quot; title=&quot;Python 與 Java：使用，性能，學習&quot;&gt;&lt;/a&gt;Python 與 Java：使用，性能，學習&lt;/h1&gt;&lt;p&gt;在計算機科學領域，有許多編程語言，沒有一種語言能比另一種語言優越。換句話說，&lt;strong&gt;每種語言最適合解決某些問題&lt;/strong&gt;，實際上，對於給定的編程項目，通常沒有一種最佳語言可供選擇。因此，對於希望開發軟件或通過代碼解決有趣問題的學生來說，擁有&lt;strong&gt;適用於任何編程語言的強大計算機科學基礎非常重要&lt;/strong&gt;。 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://leihao0.github.io/tw/tags/python/"/>
    
      <category term="Java" scheme="https://leihao0.github.io/tw/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>樹莓派 4</title>
    <link href="https://leihao0.github.io/tw/Raspberry-Pi-4/"/>
    <id>https://leihao0.github.io/tw/Raspberry-Pi-4/</id>
    <published>2020-06-11T15:14:06.000Z</published>
    <updated>2021-03-08T16:29:06.229Z</updated>
    
    <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Pi-Hole.png" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Raspberrypi.png" alt=""></div></div></div><a id="more"></a><h2 id="沒有顯示器的啟動"><a href="#沒有顯示器的啟動" class="headerlink" title="沒有顯示器的啟動"></a>沒有顯示器的啟動</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span></span><br><span class="line"><span class="string">update_config=1</span></span><br><span class="line"><span class="string">country=CN</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">network=&#123;</span></span><br><span class="line"><span class="string"> ssid=&quot;xxx&quot;</span></span><br><span class="line"><span class="string"> psk=&quot;xxx&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; wpa_supplicant.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 將WPA_Supplicant，ssh或ssh.txt複製到SD卡的根目錄 </span></span><br><span class="line"></span><br><span class="line">sudo raspi-config</span><br><span class="line"></span><br><span class="line"><span class="comment"># crontab -e. </span></span><br><span class="line"><span class="comment"># @Reboot sudo ifdown wlan1 </span></span><br><span class="line">sudo iwconfig wlan1 txpower off</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># EEPROM. </span></span><br><span class="line">sudo apt -y update</span><br><span class="line">sudo apt -y upgrade</span><br><span class="line">sudo apt -y install rpi-eeprom</span><br><span class="line">sudo rpi-eeprom-update</span><br><span class="line">sudo rpi-eeprom-update -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 哦 -  my-zsh </span></span><br><span class="line">sudo apt-get install zsh</span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line">sudo apt -y install vim</span><br><span class="line"></span><br><span class="line">sudo chsh -s /bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pi-孔 </span></span><br><span class="line">curl -sSL https://install.pi-hole.net | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pivpn. </span></span><br><span class="line">curl -L https://install.pivpn.io | bash</span><br><span class="line">pivpn add</span><br><span class="line">pivpn remove</span><br><span class="line">pivpn list</span><br><span class="line">pivpn -qr</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="無密碼SSH訪問"><a href="#無密碼SSH訪問" class="headerlink" title="無密碼SSH訪問"></a>無密碼SSH訪問</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="comment"># Raspbertypi. </span></span><br><span class="line">cat raspberrypi.pub</span><br><span class="line">cat ~/.ssh/raspberrypi.pub | ssh pi@192.168.2.2 <span class="string">&#x27;mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="靜態IP地址"><a href="#靜態IP地址" class="headerlink" title="靜態IP地址"></a>靜態IP地址</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dhcpcd.conf. </span></span><br><span class="line"></span><br><span class="line">interface eth0</span><br><span class="line">static ip_address=192.168.0.4/24</span><br><span class="line">static routers=192.168.0.254</span><br><span class="line">static domain_name_servers=192.168.0.254 8.8.8.8</span><br></pre></td></tr></table></figure><h2 id="VNC"><a href="#VNC" class="headerlink" title="VNC."></a>VNC.</h2><p>HTTPS://馬果啤.raspberry皮.org/articles/VNC-raspberry-皮 </p><h2 id="rclone和Google-Drive"><a href="#rclone和Google-Drive" class="headerlink" title="rclone和Google Drive"></a>rclone和Google Drive</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install fuse</span><br><span class="line"></span><br><span class="line">curl -L https://raw.github.com/pageauc/rclone4pi/master/rclone-install.sh | bash</span><br><span class="line">rclone config</span><br><span class="line"></span><br><span class="line">mkdir -p /tmp/gdrive</span><br><span class="line">fusermount -u /tmp/gdrive</span><br><span class="line"></span><br><span class="line">sudo vim /etc/fuse.conf</span><br><span class="line"><span class="comment"># user_allow_other. </span></span><br></pre></td></tr></table></figure><h2 id="這態度"><a href="#這態度" class="headerlink" title="這態度"></a>這態度</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo blkid</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo vim / etc / fstab </span></span><br><span class="line"></span><br><span class="line">UUID=633a8bc8 /media/3T ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=d271d018 /media/TM ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=53f3ce6b /media/8G ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo chown -R pi:pi /media/3T /media/TM</span><br></pre></td></tr></table></figure><h2 id="ramdisk＆logs"><a href="#ramdisk＆logs" class="headerlink" title="ramdisk＆logs."></a>ramdisk＆logs.</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sudo服務rsyslog停止 </span></span><br><span class="line"><span class="comment"># sudo systemctl禁用rsyslog </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo vim / etc / fstab </span></span><br><span class="line"></span><br><span class="line">tmpfs /var/lib/plexmediaserver tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /home/pi./cache tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /tmp tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /var/<span class="built_in">log</span> tmpfs defaults,noatime 0 0</span><br></pre></td></tr></table></figure><h2 id="修復Ext4"><a href="#修復Ext4" class="headerlink" title="修復Ext4."></a>修復Ext4.</h2><p><code>sudo fsck.ext4 -vfy / dev / sda2</code> </p><h2 id="在外部硬盤上交換空間"><a href="#在外部硬盤上交換空間" class="headerlink" title="在外部硬盤上交換空間"></a>在外部硬盤上交換空間</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/dphys-swapfile</span><br><span class="line"></span><br><span class="line">CONF_SWAPFILE=/media/3T/swapfile</span><br><span class="line">CONF_SWAPSIZE=8192</span><br></pre></td></tr></table></figure><h2 id="AFP和時間機器"><a href="#AFP和時間機器" class="headerlink" title="AFP和時間機器"></a>AFP和時間機器</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install netatalk gparted</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo mkfs.ext4 / dev / sda2 </span></span><br><span class="line"><span class="comment"># SUDA  -  4 /嘉賓/頭痛 </span></span><br><span class="line"><span class="comment"># sudo mkdir / media / tm </span></span><br><span class="line"><span class="comment"># Suda Monte / Guest / Highache / Media / Done </span></span><br><span class="line"><span class="comment"># suddo poon -r pi：pi / media / zt </span></span><br><span class="line"><span class="comment"># sudo成own -RPI:皮 /Media/TM </span></span><br><span class="line"></span><br><span class="line">sudo vim /etc/netatalk/afp.conf</span><br><span class="line"><span class="comment"># 3T. </span></span><br><span class="line"><span class="comment"># ; patish = / media / dt / </span></span><br><span class="line"><span class="comment"># ; [TMP] </span></span><br><span class="line"><span class="comment"># ; 路徑= / TMP / </span></span><br><span class="line"><span class="comment"># [TM值] </span></span><br><span class="line"><span class="comment"># 路徑= /媒體/腫瘤/ </span></span><br><span class="line"><span class="comment"># 時間機器=是的 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo systemctl restart netatalk</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="桑巴"><a href="#桑巴" class="headerlink" title="桑巴"></a>桑巴</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install samba samba-common-bin</span><br><span class="line"></span><br><span class="line">sudo vim /etc/samba/smb.conf</span><br><span class="line"><span class="comment"># [pimylifeup share] </span></span><br><span class="line"><span class="comment"># patish = / media / dt / </span></span><br><span class="line"><span class="comment"># 可寫的=是的 </span></span><br><span class="line"><span class="comment"># 創建面具= 0777 </span></span><br><span class="line"><span class="comment"># 目錄蒙版= 0777 </span></span><br><span class="line"><span class="comment"># 公共=沒有 </span></span><br><span class="line"><span class="comment"># [TMP] </span></span><br><span class="line"><span class="comment"># 路徑= / TMP / </span></span><br><span class="line"><span class="comment"># 可寫的=是的 </span></span><br><span class="line"><span class="comment"># 創建面具= 0777 </span></span><br><span class="line"><span class="comment"># 目錄蒙版= 0777 </span></span><br><span class="line"><span class="comment"># 公共=沒有 </span></span><br><span class="line">sudo smbpasswd -a pi</span><br><span class="line">sudo systemctl restart smbd</span><br></pre></td></tr></table></figure><h2 id="Plex服務器"><a href="#Plex服務器" class="headerlink" title="Plex服務器"></a>Plex服務器</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="string">&quot;/tmp/plexmediaserver&quot;</span></span><br><span class="line">sudo mount -t tmpfs -o size=1000M tmpfs /tmp/plexmediaserver</span><br><span class="line">sudo chown -R pi:pi /var/lib/plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo apt -y install apt-transport-https</span><br><span class="line">curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list</span><br><span class="line">sudo apt -y install plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo vim /etc/default/plexmediaserver</span><br><span class="line"><span class="comment"># 出口plex_media_server_user = pi </span></span><br><span class="line"></span><br><span class="line">hostname -I</span><br><span class="line">sudo vim /boot/cmdline.txt</span><br><span class="line"><span class="comment"># ip = ipaddress. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo apt -y安裝pmount </span></span><br><span class="line"><span class="comment"># sudo apt-get安裝ntfs-3g exfat-fuse exfat-utils pmount </span></span><br><span class="line"><span class="comment"># sudo apt-get安裝hfsplus hfsutils hfsprogs gdisk </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Lsblk. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># /禮拜/system的/system/拍了X Media server.service </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用戶plex到pi </span></span><br><span class="line">sudo mkdir -p /etc/systemd/system/plexmediaserver.service.d</span><br><span class="line">sudo vim /etc/systemd/system/plexmediaserver.service.d/override.conf</span><br><span class="line"><span class="comment"># [服務] </span></span><br><span class="line"><span class="comment"># 用戶= PI. </span></span><br><span class="line"><span class="comment"># group=皮 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [服務] </span></span><br><span class="line"><span class="comment"># execstartpre = / bin /睡眠120; / bin / sh -c&#x27;/ usr / bin / test -d“$ &#123;plex_media_server_application_support_dir&#125;”|| / bin / mkdir -p“$ &#123;plex_media_server_application_support_dir&#125;”&#x27; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 數據文件夾 </span></span><br><span class="line"></span><br><span class="line">sudo systemctl stop plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo service plexmediaserver stop</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> plexmediaserver.service</span><br><span class="line">sudo systemctl restart plexmediaserver.service</span><br></pre></td></tr></table></figure><h2 id="crontab-e"><a href="#crontab-e" class="headerlink" title="crontab -e."></a>crontab -e.</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install php php-curl</span><br></pre></td></tr></table></figure><p><code>crontab -e</code> </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># rclone. </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;mkdir -p /tmp/gdrive</span></span><br><span class="line"><span class="string">fusermount -u /tmp/gdrive</span></span><br><span class="line"><span class="string">/usr/bin/rclone mount Plex:Plex /tmp/gdrive --umask 0000 --default-permissions --allow-non-empty --allow-other --buffer-size 64M --dir-cache-time 48h --vfs-read-chunk-size 128M --vfs-read-chunk-size-limit 1500M &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; rclone.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 備份 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tar -exclude =“$ plexpath / logs”--exclude =“$ plexpath / cache”--exclude =“$ plexpath / crash報告”-czf /tmp/gdrive/backup/plex.tar.gz / var / lib / plexmediaserver </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">mkdir -p /tmp/gdrive/backup/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">tar cf - --exclude=&quot;$PlexPath/Logs&quot; --exclude=&quot;$PlexPath/Cache&quot; --exclude=&quot;$PlexPath/Crash Reports&quot; /var/lib/plexmediaserver | lz4 -f - /tmp/gdrive/backup/plex.tar.lz4</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; backup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢復 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">lz4 -d /tmp/gdrive/backup/plex.tar.lz4 | tar -xC /</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">mkdir -p &quot;$PlexPath/Logs&quot; &quot;$PlexPath/Cache&quot; &quot;$PlexPath/Crash Reports&quot;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; restore.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chmod a+x backup.sh restore.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">sudo apt update &amp;&amp; sudo apt upgrade &amp;&amp; sudo apt autoremove &amp;&amp; sudo apt clean</span></span><br><span class="line"><span class="string">pihole -up &amp;&amp; pihole -g</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; update.sh</span><br><span class="line"></span><br><span class="line">chmod a+x update.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@reboot vncserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># @ Rubwite Pmots2 ZT </span></span><br><span class="line"><span class="comment"># @ rabwa頭疼 </span></span><br><span class="line"></span><br><span class="line">@reboot /home/pi/rclone.sh</span><br><span class="line">@reboot sleep 30 &amp;&amp; /home/pi/restore.sh</span><br><span class="line"></span><br><span class="line">*/30 * * * * /home/pi/backup.sh</span><br><span class="line">0 3 * * * /home/pi/update.sh</span><br><span class="line"></span><br><span class="line">0 22 * * * <span class="built_in">cd</span> ~/Bot;python3 autoPill.py</span><br><span class="line">0 9 * * * php ~/Bot/bilibiliRun.ph</span><br></pre></td></tr></table></figure><p><code>sudo crontab -e</code> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 0 4 * * * &#x2F; sbin &#x2F; shutdown -r </span><br><span class="line">@reboot sleep 90 &amp;&amp; sudo service plexmediaserver start</span><br></pre></td></tr></table></figure><h2 id="jellyfin"><a href="#jellyfin" class="headerlink" title="~ jellyfin ~"></a><del>~ jellyfin ~</del></h2><p><a href="HTTPS://jelly">HTTPS://jelly</a> fin.org/ </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install apt-transport-https</span><br><span class="line">wget -O - https://repo.jellyfin.org/jellyfin_team.gpg.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$( dpkg --print-architecture )</span>] https://repo.jellyfin.org/<span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^ID=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> <span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^VERSION_CODENAME=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> main&quot;</span> | sudo tee /etc/apt/sources.list.d/jellyfin.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服務果凍垃圾狀況 </span></span><br><span class="line"><span class="comment"># systemctl重新啟動果凍粉 </span></span><br><span class="line"><span class="comment"># sudo /etc/init.d/jellyfin停止 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># .local / share /果凍粉 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;#!/bin/zsh</span></span><br><span class="line"><span class="string">JELLYFINTMP=&quot;/tmp/jellyfin&quot;</span></span><br><span class="line"><span class="string">USRBIN=&quot;/usr/bin&quot;</span></span><br><span class="line"><span class="string">mkdir -p $JELLYFINTMP/log $JELLYFINTMP/cache $JELLYFINTMP/transcodes \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/data \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/metadata \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/config</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$USRBIN/jellyfin \</span></span><br><span class="line"><span class="string"> -C $JELLYFINTMP/cache \</span></span><br><span class="line"><span class="string"> -l $JELLYFINTMP/log \</span></span><br><span class="line"><span class="string"> -d $JELLYFINTMP/data \</span></span><br><span class="line"><span class="string"> -c $JELLYFINTMP/config \</span></span><br><span class="line"><span class="string"> --ffmpeg $USRBIN/ffmpeg &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; jellyfin.sh</span><br><span class="line"></span><br><span class="line">chmod a+x jellyfin.sh</span><br><span class="line">nohup ./jellyfin.sh &lt;/dev/null &amp;</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># HTTPS://jelly fin.org/docs/general/administration/hardware-acceleration.HTML </span></span><br><span class="line">sudo usermod -aG video jellyfin</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;group-picture&quot;&gt;&lt;div class=&quot;group-picture-row&quot;&gt;&lt;div class=&quot;group-picture-column&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Pi-Hole.png&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;group-picture-column&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Raspberrypi.png&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
    
    </summary>
    
    
    
      <category term="Raspberry" scheme="https://leihao0.github.io/tw/tags/raspberry/"/>
    
  </entry>
  
  <entry>
    <title>基於 iOS 令牌的 APN</title>
    <link href="https://leihao0.github.io/tw/iOS-Token-Based-APNs/"/>
    <id>https://leihao0.github.io/tw/iOS-Token-Based-APNs/</id>
    <published>2020-05-29T09:23:18.000Z</published>
    <updated>2020-12-20T23:53:08.628Z</updated>
    
    <content type="html"><![CDATA[<p>蘋果提供了一種新的方法(身份驗證令牌)來進行 APN </p><p>與以前的方式(提供商證書)相比，證書 <code>*.p12</code> 每年都會過期 </p><p>基於令牌的<code>* .p8</code> <strong>永不過期</strong> </p><a id="more"></a><ul><li><a href="https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/establishing_a_token-based_connection_to_apns">建立與 APN 的基於令牌的連接</a> </li><li><a href="https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html">與 APN 通訊</a> </li></ul><h2 id="對於客戶"><a href="#對於客戶" class="headerlink" title="對於客戶"></a>對於客戶</h2><p>客戶端唯一不同的是 </p><ol><li>在上創建身份驗證令牌簽名密鑰 <a href="https://developer.apple.com/">https://developer.apple.com/</a> </li><li>下載<code>* .p8</code>並將其發送給後端工程師 </li></ol><h2 id="對於後端"><a href="#對於後端" class="headerlink" title="對於後端"></a>對於後端</h2><p>許多框架都有支持 <code>*.p8</code>. </p><p>例如： </p><p><a href="https://firebase.google.com/docs/cloud-messaging/ios/certs">Firebase</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;蘋果提供了一種新的方法(身份驗證令牌)來進行 APN &lt;/p&gt;
&lt;p&gt;與以前的方式(提供商證書)相比，證書 &lt;code&gt;*.p12&lt;/code&gt; 每年都會過期 &lt;/p&gt;
&lt;p&gt;基於令牌的&lt;code&gt;* .p8&lt;/code&gt; &lt;strong&gt;永不過期&lt;/strong&gt; &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="iOS" scheme="https://leihao0.github.io/tw/tags/ios/"/>
    
      <category term="APNs" scheme="https://leihao0.github.io/tw/tags/apns/"/>
    
  </entry>
  
  <entry>
    <title>墳場之書</title>
    <link href="https://leihao0.github.io/tw/The-Graveyard-Book/"/>
    <id>https://leihao0.github.io/tw/The-Graveyard-Book/</id>
    <published>2020-05-07T00:55:21.000Z</published>
    <updated>2020-12-20T23:53:08.628Z</updated>
    
    <content type="html"><![CDATA[<h1 id="遊樂園-🎠-之書"><a href="#遊樂園-🎠-之書" class="headerlink" title="遊樂園 🎠 之書"></a>遊樂園 🎠 之書</h1><div style="width: 300px"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/The%20Graveyard%20Book.jpg" /></div><p>孩子們沒有生死的概念，墳場對於他們來說更像是遊樂園 </p><a id="more"></a><hr><p>感謝 🙏 🐼 讀客 又寄來一本書 </p><p>說來慚愧，出國後閱讀數量直線下降<br>由以前每年的幾百本驟變成現在的個位數 </p><p>想想以前大言不慚的說閱讀應無功利心，而應由興趣驅動<br>現在真是啪啪打臉 </p><p>不過也有客觀原因： </p><p>一是我現在想看的大多數書都有原版<br>既然有原版，我就不是很想看翻譯的版本 </p><p>二是有次我電話，被一個新加坡國立大學的朋友聽到了<br>之後就被她反复鄙視 “你的塑料英語” </p><p>不過我有我的倔強，慢就慢，但堅持看原版<br>應該總會有一天可以向中文書那樣快起來 </p><p>三是坡縣是個島，沒有各位大神說的什麼國外好山好水好寂寞<br>並且這次疫情的初期讓我一度以為這裡是紙糊的發達國家<br>另外一年四季都是夏天，除了比較熱，其他都蠻安逸的<br>藍天白雲暴雨電閃雷鳴，感覺時間像是凝固了，挺好 </p><p>沒了功利心，自然也沒了閱讀的動力 </p><p>現在 Circuit Breaker 了，算是有了點時間和心情吧 </p><hr><p>最早拿到這本書<br>剛開始時以為是科幻<br>聽到可以隱身以為是玄幻<br>碰到妹紙以為是愛情<br>去上學又以為是校園<br>老爸來局裡撈人以為是親子<br>全家被殺又以為是懸疑<br>最後的最後原來是在說成長 </p><p>就如最後作者寫到： </p><blockquote><p>我在美國新奧爾良一家破舊的賓館裡寫完第六章，《伯蒂上學的日子》。我在自家花園的涼亭裡完成了最後一頁，一邊寫一邊強忍淚水。只在那一刻，我明白了我為何沒在剛剛當爸爸時寫下這本書。因為在創作之前，我得先陪伴我的孩子走完他們的成長歷程，養育他們，愛他們，並在最後學會放手 </p></blockquote><hr><p>另外閱讀過程中很難入戲<br>整本書一直給我一種哈利波特翻版的感覺 </p><p>不過這次閱讀有一個明顯的不同<br>以前閱讀此類小說，往往是以主人公的視角進入書本<br>隨著年齡的增長<br>這次更多的是以 Silas 的視角 </p><p>這書如果是國內常見的玄幻套路<br>Bod 肯定把妹 Scarlett，馴服 Sleer，成為 Master， 手撕 Jack，坐當 Brotherhood 老大 </p><p>然而這一切在寫出了 美國眾神的 Neil 筆下並沒有發生<br>Bod 打完怪 👾 後，妹紙反倒嚇跑了，Bod 也只是普普通通的 <strong>世界那麼大，我想去看看</strong> </p><p>作為父親，你希望看到自己的 Bod 成為國內的那個還是書 📖 中的這個？ </p><hr><p>還有有時候叛逆期做的一些蠢事，需要父母來買單<br>現在年齡大了，也理解的當年父母各種禁令的苦衷 </p><p>不過想想也沒什麼辦法<br>那時候的自己並不知道現在的自己知道的這些 </p><p>我曾設想過，如果現在的自己和那時的自己對話<br>那時的自己肯定也不會乖乖聽話<br>必須被社會的鐵拳錘在臉上才能幡然醒悟<br>毅然決然的做一些事情 </p><hr><p>處理了總總事情后，總有一天要走出童話世界，進入生活 </p><blockquote><p>“再見，西拉斯。” 鮑德像小時候一樣伸出他的手，而西拉斯則用一隻冷冷的手握住了那隻老象牙的顏色，嚴肅地搖了一下。<br>“再見，沒人歐文斯。”<br>鮑德拿起小手提箱。 他打開門讓自己走出地下室，然後沿著平緩的斜坡往回走，不回頭。” </p></blockquote><p>我出來的時候就比較慘，沒人送我，沒有道別<br>北京的房租退了，買了單程機票<br>全部家當打了三個行李箱<br>凌晨 4 點打車去機場<br>辦完托運，登機，然後就走了 </p><blockquote><p>不回頭 </p></blockquote><p>我多麼希望當時也聽到了 Bod 的幻聽： </p><blockquote><p>他向前邁了一步……一個聲音說：“我為你感到驕傲，我的兒子。” </p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;遊樂園-🎠-之書&quot;&gt;&lt;a href=&quot;#遊樂園-🎠-之書&quot; class=&quot;headerlink&quot; title=&quot;遊樂園 🎠 之書&quot;&gt;&lt;/a&gt;遊樂園 🎠 之書&lt;/h1&gt;&lt;div style=&quot;width: 300px&quot;&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/The%20Graveyard%20Book.jpg&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;孩子們沒有生死的概念，墳場對於他們來說更像是遊樂園 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Reading" scheme="https://leihao0.github.io/tw/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>SwiftUI提示</title>
    <link href="https://leihao0.github.io/tw/SwiftUI-Tips/"/>
    <id>https://leihao0.github.io/tw/SwiftUI-Tips/</id>
    <published>2020-04-24T11:49:41.000Z</published>
    <updated>2020-12-20T23:53:08.627Z</updated>
    
    <content type="html"><![CDATA[<h2 id="綁定到UserDefaults"><a href="#綁定到UserDefaults" class="headerlink" title="綁定到UserDefaults"></a>綁定到UserDefaults</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UD</span>: <span class="title">ObservableObject</span> </span>&#123;</span><br><span class="line">    @<span class="type">Published</span> <span class="keyword">var</span> date: <span class="type">Date</span> = <span class="type">UserDefaults</span>.standard.value(forKey: <span class="string">&quot;date&quot;</span>) <span class="keyword">as</span>? <span class="type">Date</span> ?? <span class="type">Date</span>() &#123;</span><br><span class="line">        <span class="keyword">didSet</span> &#123;</span><br><span class="line">            <span class="type">UserDefaults</span>.standard.<span class="keyword">set</span>(<span class="keyword">self</span>.date, forKey: <span class="string">&quot;date&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="AppDelegate-gt-SceneDelegate"><a href="#AppDelegate-gt-SceneDelegate" class="headerlink" title="AppDelegate-&gt; SceneDelegate"></a>AppDelegate-&gt; SceneDelegate</h2><p>許多代表從“ AppDelegate.swift”移至“ SceneDelegate.swift” </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> app: UIApplication, <span class="keyword">open</span> url: URL, options: [UIApplication.OpenURLOptionsKey : <span class="keyword">Any</span>] = [:])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// to</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">scene</span><span class="params">(<span class="number">_</span> scene: UIScene, openURLContexts URLContexts: Set&lt;UIOpenURLContext&gt;)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="NavigationView，NavigationBarItems，NavigationLink"><a href="#NavigationView，NavigationBarItems，NavigationLink" class="headerlink" title="NavigationView，NavigationBarItems，NavigationLink"></a>NavigationView，NavigationBarItems，NavigationLink</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ContentView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">EnvironmentObject</span> <span class="keyword">var</span> ud: <span class="type">UD</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> url = <span class="string">&quot;Title:status?date=\(String(ud.firstDate.timeIntervalSince1970))&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                qrCodeImage(<span class="keyword">for</span>: url)!</span><br><span class="line"></span><br><span class="line">                <span class="type">Spacer</span>().frame(height: <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">                <span class="type">Text</span>(<span class="string">&quot;\(ud.firstDate)&quot;</span>)</span><br><span class="line">            &#125;.navigationBarTitle(<span class="string">&quot;Title&quot;</span>)</span><br><span class="line">                .navigationBarItems(trailing:</span><br><span class="line">                    <span class="type">HStack</span> &#123;</span><br><span class="line">                        <span class="type">NavigationLink</span>(destination: <span class="type">PickerView</span>(firstDate: $ud.firstDate)) &#123;</span><br><span class="line">                            <span class="type">Image</span>(systemName: <span class="string">&quot;gear&quot;</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="PickerView綁定"><a href="#PickerView綁定" class="headerlink" title="PickerView綁定"></a>PickerView綁定</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PickerView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">Binding</span> <span class="keyword">var</span> date: <span class="type">Date</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                <span class="type">DatePicker</span>(selection: $date, <span class="keyword">in</span>: ...<span class="type">Date</span>(), displayedComponents: .date) &#123;</span><br><span class="line">                    <span class="type">Text</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修復SwiftUI圖像空白視圖"><a href="#修復SwiftUI圖像空白視圖" class="headerlink" title="修復SwiftUI圖像空白視圖"></a>修復SwiftUI圖像空白視圖</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ciContext = <span class="type">CIContext</span>()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">qrCodeImage</span><span class="params">(<span class="keyword">for</span> string: String)</span></span> -&gt; <span class="type">Image?</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> data = string.data(using: <span class="type">String</span>.<span class="type">Encoding</span>.utf8)</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> qrFilter = <span class="type">CIFilter</span>(name: <span class="string">&quot;CIQRCodeGenerator&quot;</span>) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">    qrFilter.setValue(data, forKey: <span class="string">&quot;inputMessage&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">10</span>, y: <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> ciImage = qrFilter.outputImage?.transformed(by: transform) <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cgImage = ciContext.createCGImage(ciImage, from: ciImage.extent)</span><br><span class="line">    <span class="comment">// convert to UIImage</span></span><br><span class="line">    <span class="keyword">let</span> uiImage = <span class="type">UIImage</span>(cgImage: cgImage!)</span><br><span class="line">    <span class="keyword">let</span> image = <span class="type">Image</span>(uiImage: uiImage)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> image</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;綁定到UserDefaults&quot;&gt;&lt;a href=&quot;#綁定到UserDefaults&quot; class=&quot;headerlink&quot; title=&quot;綁定到UserDefaults&quot;&gt;&lt;/a&gt;綁定到UserDefaults&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UD&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;ObservableObject&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @&lt;span class=&quot;type&quot;&gt;Published&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; date: &lt;span class=&quot;type&quot;&gt;Date&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;UserDefaults&lt;/span&gt;.standard.value(forKey: &lt;span class=&quot;string&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;Date&lt;/span&gt; ?? &lt;span class=&quot;type&quot;&gt;Date&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;didSet&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;UserDefaults&lt;/span&gt;.standard.&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.date, forKey: &lt;span class=&quot;string&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="SwiftUI" scheme="https://leihao0.github.io/tw/tags/swiftui/"/>
    
  </entry>
  
  <entry>
    <title>如何通過收縮視頻減少iCloud存儲</title>
    <link href="https://leihao0.github.io/tw/How-to-reduce-iCloud-storage-by-shrink-videos/"/>
    <id>https://leihao0.github.io/tw/How-to-reduce-iCloud-storage-by-shrink-videos/</id>
    <published>2020-03-29T16:04:51.000Z</published>
    <updated>2020-12-20T23:53:08.627Z</updated>
    
    <content type="html"><![CDATA[<p>事實上對於 4k 視頻減去不必要的片段可以更有效的節省空間 </p><hr><p>當我在“照片”中畫廊視頻時，它將顯示我在何時何地拍攝它們 </p><p>這是一個很棒的功能，可以幫助我回憶我的記憶<br>但是原始的 4k 在 iCloud 中佔用了太多空間 </p><p>例如，即使採用 HEVC(高效視頻編碼)，則 2:30 的視頻將佔用 1GB 的空間<br>我的 200G iCloud 計劃幾乎已 ​​ 滿 </p><p>因此，我計劃稍微壓縮視頻以節省一些空間。 </p><a id="more"></a><p>但， </p><h2 id="FFmpeg-轉換視頻，即使有元數據也會丟失-GPS"><a href="#FFmpeg-轉換視頻，即使有元數據也會丟失-GPS" class="headerlink" title="FFmpeg 轉換視頻，即使有元數據也會丟失 GPS"></a>FFmpeg 轉換視頻，即使有元數據也會丟失 GPS</h2><p>幸運的是，我找到了一種方法 </p><h3 id="工具類"><a href="#工具類" class="headerlink" title="工具類"></a>工具類</h3><ul><li>FFmpeg </li><li>Exiftool </li></ul><h4 id="將原始視頻導出到文件夾"><a href="#將原始視頻導出到文件夾" class="headerlink" title="將原始視頻導出到文件夾"></a>將原始視頻導出到文件夾</h4><p>將視頻從“照片”拖到文件夾的常用方法是讓“照片”轉換視頻 </p><p>因此，您必須選擇所有要導出的視頻， </p><p>`文件-&gt;導出-&gt;導出未修改的原件… </p><h4 id="縮小每個視頻"><a href="#縮小每個視頻" class="headerlink" title="縮小每個視頻"></a>縮小每個視頻</h4><p>iPhone 默認流為 </p><p><code>＃0：0(和)：視頻：hevc(主要)(hvc1 / 0x31637668)，yuv420p(電視，bt709)</code> </p><p>因此使用<code>-pix_fmt yuv420p10le</code>重新編碼為 10bit 並沒有幫助 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">ffmov</span></span>() &#123;</span><br><span class="line">    mkdir -p shrunk</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ffmpeg與h265 </span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v libx265 -crf 28 -c:a copy -c:s copy -tag:v hvc1 shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    overwriteExif <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 將Exif信息從原始視頻複製到縮小的* .mov </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## 遍歷所有* .mov </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$f</span></span><br><span class="line">        ffmov <span class="variable">$f</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然後，您可以將這些代碼複製並粘貼到<code>Terminal</code> 和 <code>cd VideoFolder</code>, 然後 <code>shrinkVideos</code> </p><p>收縮將花費很長時間 </p><p>在我的 MacBook Pro(15 英寸，2018 年)上，只有 0.3 倍<br>但通常情況下，視頻會縮小 5 倍，而不會損失太多質量 </p><p>全部完成後，縮小的視頻將位於 <code>shrunk/</code> 文件夾下 </p><p>然後，您可以對其進行比較，並先刪除原始視頻，然後再導入縮小的視頻 </p><p>好的，最後我不能忍受極慢的速度，所以我使用Nvidia 1080 GPU 進行加速，以了解更多: [CUDA GPU Accelerated h264/h265/HEVC Video Encoding with Staxrip](<a href="https://leihao0.github.io">https://leihao0.github.io</a> /CUDA-GPU-Accelerated-h264-h265-HEVC-Video-Encoding-with-Staxrip/) </p><p>下一步是將轉換後的視頻標記為 <code>hvc1</code>，否則，導入照片時會出現錯誤： </p><p><strong>無效：操作無法完成。 (PHPhotosErrorDomain錯誤-1。)</strong> </p><p>所以整個步驟是 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">ffhvc1</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> -&gt; <span class="variable">$1</span>.mov&quot;</span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v copy -c:a copy -c:s copy -tag:v hvc1 <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>.mov -&gt; <span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm <span class="string">&quot;<span class="variable">$1</span>&quot;</span>; mv <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line">    <span class="comment"># 將Exif信息從原始視頻複製到縮小的* .mov </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## 遍歷所有* .mov </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">        ffhvc1 <span class="string">&quot;shrunk/<span class="variable">$f</span>&quot;</span></span><br><span class="line">        overwriteExif <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用Staxrip將所有視頻轉換為縮小/ </span></span><br><span class="line"><span class="comment"># 然後運行`shrinkVideos` </span></span><br></pre></td></tr></table></figure><hr><p>希望對您有幫助 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;事實上對於 4k 視頻減去不必要的片段可以更有效的節省空間 &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;當我在“照片”中畫廊視頻時，它將顯示我在何時何地拍攝它們 &lt;/p&gt;
&lt;p&gt;這是一個很棒的功能，可以幫助我回憶我的記憶&lt;br&gt;但是原始的 4k 在 iCloud 中佔用了太多空間 &lt;/p&gt;
&lt;p&gt;例如，即使採用 HEVC(高效視頻編碼)，則 2:30 的視頻將佔用 1GB 的空間&lt;br&gt;我的 200G iCloud 計劃幾乎已 ​​ 滿 &lt;/p&gt;
&lt;p&gt;因此，我計劃稍微壓縮視頻以節省一些空間。 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="FFmpeg" scheme="https://leihao0.github.io/tw/tags/ffmpeg/"/>
    
      <category term="Exiftool" scheme="https://leihao0.github.io/tw/tags/exiftool/"/>
    
      <category term="iCloud" scheme="https://leihao0.github.io/tw/tags/icloud/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode哈希表</title>
    <link href="https://leihao0.github.io/tw/LeetCode-Hash-Table/"/>
    <id>https://leihao0.github.io/tw/LeetCode-Hash-Table/</id>
    <published>2020-01-11T16:00:00.000Z</published>
    <updated>2020-12-20T23:53:08.627Z</updated>
    
    <content type="html"><![CDATA[<h2 id="設計HashSet"><a href="#設計HashSet" class="headerlink" title="設計HashSet"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashSet">設計HashSet</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: <span class="literal">false</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">         bucket[key] = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">contains</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="設計HashMap"><a href="#設計HashMap" class="headerlink" title="設計HashMap"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashMap">設計HashMap</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashMap</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: -<span class="number">1</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> key: Int, <span class="number">_</span> value: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">get</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="包含重複項"><a href="#包含重複項" class="headerlink" title="包含重複項"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate">包含重複項</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(i) &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(i)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="單號"><a href="#單號" class="headerlink" title="單號"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#單號">單號</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">singleNumber</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> ^ $<span class="number">1</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="兩個數組的交集"><a href="#兩個數組的交集" class="headerlink" title="兩個數組的交集"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-Arrays">兩個數組的交集</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="快樂號碼"><a href="#快樂號碼" class="headerlink" title="快樂號碼"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Happy-Number">快樂號碼</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> setI = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isHappy</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = n, r = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &gt; <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> t = i%<span class="number">10</span></span><br><span class="line">            r += t*t</span><br><span class="line">            i /= <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> setI.<span class="built_in">contains</span>(r) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        setI.insert(r)</span><br><span class="line">        <span class="keyword">return</span> isHappy(r)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="兩個列表的最小索引總和"><a href="#兩個列表的最小索引總和" class="headerlink" title="兩個列表的最小索引總和"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Minimum-Index-Sum-of-Two-Lists">兩個列表的最小索引總和</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 452 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict2 = [<span class="type">String</span>: <span class="type">Int</span>](), least = <span class="type">Int</span>.<span class="built_in">max</span>, arr = [<span class="type">String</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list2.<span class="built_in">count</span> &#123;</span><br><span class="line">            dict2[ list2[i] ] = i</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list1.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> j = dict2[ list1[i] ] &#123;</span><br><span class="line">                <span class="keyword">let</span> n = i+j</span><br><span class="line">                <span class="keyword">if</span> n &lt; least &#123;</span><br><span class="line">                    arr = [list1[i]]</span><br><span class="line">                    least = n</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> n == least &#123;</span><br><span class="line">                    arr.append(list1[i])</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2104 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> dict1 = list1.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict2 = list2.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict = <span class="type">Set</span>(dict1.keys).intersection(dict2.keys).<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>] = dict1[$<span class="number">1</span>]! + dict2[$<span class="number">1</span>]! &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value == dict.<span class="built_in">map</span>(&#123; $<span class="number">0</span>.value &#125;).<span class="built_in">min</span>()  &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.key &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="兩個數組的交集II"><a href="#兩個數組的交集II" class="headerlink" title="兩個數組的交集II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-Arrays-II">兩個數組的交集II</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span>](), ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="包含重複的II"><a href="#包含重複的II" class="headerlink" title="包含重複的II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate-II">包含重複的II</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsNearbyDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: [<span class="type">Int</span>]]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> n = nums[i]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> arr = dict[n] &#123;</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> arr &#123;</span><br><span class="line">                    <span class="keyword">if</span> i-j &lt;= k &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                dict[n] = arr + [i]</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dict[n] = [i]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="記錄器速率限制器"><a href="#記錄器速率限制器" class="headerlink" title="記錄器速率限制器"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Logger-Rate-Limiter">記錄器速率限制器</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> logs = [<span class="type">String</span>: <span class="type">Int</span>]()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">shouldPrintMessage</span><span class="params">(<span class="number">_</span> timestamp: Int, <span class="number">_</span> message: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> lastTimestamp = logs[message], timestamp - lastTimestamp &lt; <span class="number">10</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        logs[message] = timestamp</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="組移位的字符串"><a href="#組移位的字符串" class="headerlink" title="組移位的字符串"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Group-Shifted-Strings">組移位的字符串</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">groupStrings</span><span class="params">(<span class="number">_</span> strings: [String])</span></span> -&gt; [[<span class="type">String</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [[<span class="type">Int</span>]: [<span class="type">String</span>]]()</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> strings &#123;</span><br><span class="line">            <span class="keyword">let</span> arrS = <span class="type">Array</span>(s)</span><br><span class="line">            <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">1</span>..&lt;arrS.<span class="built_in">count</span>) &#123;</span><br><span class="line">                arr.append((<span class="type">Int</span>(arrS[i].asciiValue!)-<span class="type">Int</span>(arrS[i-<span class="number">1</span>].asciiValue!)+<span class="number">26</span>)%<span class="number">26</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            dict[arr, <span class="keyword">default</span>: []] += [s]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="有效數獨"><a href="#有效數獨" class="headerlink" title="有效數獨"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Valid-Sudoku">有效數獨</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidSudoku</span><span class="params">(<span class="number">_</span> board: [[Character]])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[i].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[i].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[j].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[j].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> setC = <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;()</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                        <span class="keyword">let</span> <span class="built_in">c</span> = board[i*<span class="number">3</span>+k][j*<span class="number">3</span>+l]</span><br><span class="line">                        <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                        <span class="keyword">if</span> setC.<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            setC.insert(<span class="built_in">c</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查找重複的子樹"><a href="#查找重複的子樹" class="headerlink" title="查找重複的子樹"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Find-Duplicate-Subtrees">查找重複的子樹</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicateSubtrees</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        dfs(root)</span><br><span class="line">        <span class="keyword">return</span> nodeDict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value.<span class="number">1</span> &gt; <span class="number">1</span> &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value.<span class="number">0</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> nodeDict = [[<span class="type">Int?</span>]: (<span class="type">TreeNode</span>, <span class="type">Int</span>)]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">dfs</span><span class="params">(<span class="number">_</span> node: TreeNode?)</span></span> -&gt; [<span class="type">Int?</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> node = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> [<span class="literal">nil</span>] &#125;</span><br><span class="line">        <span class="keyword">let</span> key: [<span class="type">Int?</span>] = [node.val] + dfs(node.<span class="keyword">left</span>) + dfs(node.<span class="keyword">right</span>)</span><br><span class="line">        nodeDict[key, <span class="keyword">default</span>: (node, <span class="number">0</span>)].<span class="number">1</span> += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> key</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="寶石和石頭"><a href="#寶石和石頭" class="headerlink" title="寶石和石頭"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Jewels-and-Stones">寶石和石頭</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">numJewelsInStones</span><span class="params">(<span class="number">_</span> J: String, <span class="number">_</span> S: String)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> j = <span class="type">Set</span>(<span class="type">J</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">S</span>.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + (j.<span class="built_in">contains</span>($<span class="number">1</span>) ? <span class="number">1</span> : <span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="沒有重複字符的最長子字符串"><a href="#沒有重複字符的最長子字符串" class="headerlink" title="沒有重複字符的最長子字符串"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Longest-Substring-Without-Repeating-Characters">沒有重複字符的最長子字符串</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="兩個總和III-數據結構設計"><a href="#兩個總和III-數據結構設計" class="headerlink" title="兩個總和III-數據結構設計"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Two-Sum-III---Data-structure-design">兩個總和III-數據結構設計</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TwoSum</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> numbers = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> number: Int)</span></span> &#123;</span><br><span class="line">        numbers[number, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">find</span><span class="params">(<span class="number">_</span> value: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (k, v) <span class="keyword">in</span> numbers &#123;</span><br><span class="line">            <span class="keyword">let</span> rest = value-k</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> num = numbers[rest], (num &gt; ((rest == k) ? <span class="number">1</span> : <span class="number">0</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4Sum-II"><a href="#4Sum-II" class="headerlink" title="4Sum II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#4Sum-II">4Sum II</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fourSumCount</span><span class="params">(<span class="number">_</span> A: [Int], <span class="number">_</span> B: [Int], <span class="number">_</span> C: [Int], <span class="number">_</span> D: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">0</span>, ab = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">A</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">B</span> &#123;</span><br><span class="line">                ab[i+j, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">C</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">D</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> v = ab[-i-j] &#123; num += v &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="前K個常用元素"><a href="#前K個常用元素" class="headerlink" title="前K個常用元素"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Top-K-Frequent-Elements">前K個常用元素</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">topKFrequent</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(into: [<span class="type">Int</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span> &#125;.sorted(by: &#123;$<span class="number">0</span>.value &gt; $<span class="number">1</span>.value&#125;)[..&lt;k].<span class="built_in">map</span>&#123;$<span class="number">0</span>.key&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="唯一詞縮寫"><a href="#唯一詞縮寫" class="headerlink" title="唯一詞縮寫"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Unique-Word-Abbreviation">唯一詞縮寫</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ValidWordAbbr</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> abbrDict = [<span class="type">String</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;]()</span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> dictionary: [<span class="type">String</span>]) &#123;</span><br><span class="line">        dictionary.forEach &#123; abbrDict[abbreviate($<span class="number">0</span>), <span class="keyword">default</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;()].insert($<span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isUnique</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> abbrSet = abbrDict[abbreviate(word)] &#123;</span><br><span class="line">            <span class="keyword">return</span> abbrSet.<span class="built_in">contains</span>(word) &amp;&amp; abbrSet.<span class="built_in">count</span> == <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">abbreviate</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> word.<span class="built_in">count</span> &lt; <span class="number">3</span> ? word : (<span class="type">String</span>(word.first!) + <span class="type">String</span>(word.<span class="built_in">count</span>-<span class="number">2</span>) + <span class="type">String</span>(word.last!))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插入刪除GetRandom-O-1"><a href="#插入刪除GetRandom-O-1" class="headerlink" title="插入刪除GetRandom O(1)"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Insert-Delete-GetRandom-O(1)">插入刪除GetRandom O(1)</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 220 ms, 30.27%</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RandomizedSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> vals = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.insert(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> !vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.remove(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getRandom</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> vals.randomElement() ?? <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;設計HashSet&quot;&gt;&lt;a href=&quot;#設計HashSet&quot; class=&quot;headerlink&quot; title=&quot;設計HashSet&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashSet&quot;&gt;設計HashSet&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyHashSet&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bucket = &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;(repeating: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1000001&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; key: Int)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bucket[key] = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; key: Int)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         bucket[key] = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; key: Int)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bucket[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Swift" scheme="https://leihao0.github.io/tw/tags/swift/"/>
    
      <category term="LeetCode" scheme="https://leihao0.github.io/tw/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 二叉搜索樹</title>
    <link href="https://leihao0.github.io/tw/LeetCode-Binary-Search-Tree/"/>
    <id>https://leihao0.github.io/tw/LeetCode-Binary-Search-Tree/</id>
    <published>2020-01-09T16:00:00.000Z</published>
    <updated>2020-12-20T23:53:08.627Z</updated>
    
    <content type="html"><![CDATA[<h2 id="驗證二叉搜索樹"><a href="#驗證二叉搜索樹" class="headerlink" title="驗證二叉搜索樹"></a>驗證二叉搜索樹</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidBST</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">max</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> node: TreeNode?, <span class="number">_</span> lower: Int, <span class="number">_</span> upper: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> n = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> n.val &lt;= lower || n.val &gt;= upper &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper(n.<span class="keyword">left</span>, lower, n.val) &amp;&amp; helper(n.<span class="keyword">right</span>, n.val, upper)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二叉搜索樹迭代器"><a href="#二叉搜索樹迭代器" class="headerlink" title="二叉搜索樹迭代器"></a>二叉搜索樹迭代器</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BSTIterator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> queue = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        helper(root.<span class="keyword">left</span>)</span><br><span class="line">        queue.append(root.val)</span><br><span class="line">        helper(root.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> root: <span class="type">TreeNode?</span>) &#123;</span><br><span class="line">        helper(root)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">next</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> queue.removeFirst()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasNext</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !queue.isEmpty</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二叉搜索樹中的搜索"><a href="#二叉搜索樹中的搜索" class="headerlink" title="二叉搜索樹中的搜索"></a>二叉搜索樹中的搜索</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == val &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">left</span>, val)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">right</span>, val)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二叉搜索樹中的插入操作"><a href="#二叉搜索樹中的插入操作" class="headerlink" title="二叉搜索樹中的插入操作"></a>二叉搜索樹中的插入操作</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insertIntoBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> root: TreeNode? = root, <span class="number">_</span> val: Int = val)</span></span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> l = root.<span class="keyword">left</span> &#123;</span><br><span class="line">                    insert(l, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">left</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> r = root.<span class="keyword">right</span> &#123;</span><br><span class="line">                    insert(r, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">right</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        insert()</span><br><span class="line">        <span class="keyword">return</span> root ?? <span class="type">TreeNode</span>(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="刪除二叉搜索樹中的節點"><a href="#刪除二叉搜索樹中的節點" class="headerlink" title="刪除二叉搜索樹中的節點"></a>刪除二叉搜索樹中的節點</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deleteNode</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == key &#123;</span><br><span class="line">            <span class="keyword">if</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> != <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> p = root.<span class="keyword">right</span></span><br><span class="line">                <span class="keyword">while</span> p?.<span class="keyword">left</span> != <span class="literal">nil</span> &#123;  p = p?.<span class="keyword">left</span> &#125;</span><br><span class="line">                p?.<span class="keyword">left</span> = root.<span class="keyword">left</span></span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">right</span></span><br><span class="line">            &#125; <span class="keyword">else</span>  &#123;</span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> ? root.<span class="keyword">left</span> : root.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> key &lt; root.val &#123;</span><br><span class="line">            root.<span class="keyword">left</span> = deleteNode(root.<span class="keyword">left</span>, key)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            root.<span class="keyword">right</span> = deleteNode(root.<span class="keyword">right</span>, key)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="數據流中的第-K-大元素"><a href="#數據流中的第-K-大元素" class="headerlink" title="數據流中的第 K 大元素"></a>數據流中的第 K 大元素</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KthLargest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">var</span> k = <span class="number">0</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> k: <span class="type">Int</span>, <span class="number">_</span> nums: [<span class="type">Int</span>]) &#123;</span><br><span class="line">        <span class="keyword">self</span>.k = k</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123; add(i) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.<span class="built_in">count</span> &lt; k || val &gt; arr.first! &#123;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> i &lt; arr.<span class="built_in">count</span>, val &gt; arr[i] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            arr.insert(val, at: i)</span><br><span class="line">            <span class="keyword">if</span> arr.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">                arr.removeFirst()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr.first!</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二叉搜索樹的最近公共祖先"><a href="#二叉搜索樹的最近公共祖先" class="headerlink" title="二叉搜索樹的最近公共祖先"></a>二叉搜索樹的最近公共祖先</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">lowestCommonAncestor</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root, <span class="keyword">let</span> pv = p?.val, <span class="keyword">let</span> qv = q?.val <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val &gt;= <span class="built_in">min</span>(pv, qv) &amp;&amp; root.val &lt;= <span class="built_in">max</span>(pv, qv) &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">return</span> root.val &gt; <span class="built_in">max</span>(pv, qv) ? lowestCommonAncestor(root.<span class="keyword">left</span>, p, q) : lowestCommonAncestor(root.<span class="keyword">right</span>, p, q)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="存在重複元素-III"><a href="#存在重複元素-III" class="headerlink" title="存在重複元素 III"></a>存在重複元素 III</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="平衡二叉樹"><a href="#平衡二叉樹" class="headerlink" title="平衡二叉樹"></a>平衡二叉樹</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isBalanced</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root).<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; (<span class="type">Int</span>, <span class="type">Bool</span>) &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> r = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> (<span class="number">0</span>, <span class="literal">true</span>) &#125;</span><br><span class="line">        <span class="keyword">let</span> rl = helper(r.<span class="keyword">left</span>), rr = helper(r.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span> + <span class="built_in">max</span>(rl.<span class="number">0</span>, rr.<span class="number">0</span>), rl.<span class="number">1</span> &amp;&amp; rr.<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(rl.<span class="number">0</span> - rr.<span class="number">0</span>) &lt;= <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="將有序數組轉換為二叉搜索樹"><a href="#將有序數組轉換為二叉搜索樹" class="headerlink" title="將有序數組轉換為二叉搜索樹"></a>將有序數組轉換為二叉搜索樹</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortedArrayToBST</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = nums.<span class="built_in">count</span>, h = n/<span class="number">2</span>, h1 = h+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> r = <span class="type">TreeNode</span>(nums[n/<span class="number">2</span>])</span><br><span class="line">        r.<span class="keyword">left</span> = sortedArrayToBST(<span class="type">Array</span>(nums[<span class="number">0</span>..&lt;h]))</span><br><span class="line">        r.<span class="keyword">right</span> = sortedArrayToBST(<span class="type">Array</span>(nums[h1...]))</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;驗證二叉搜索樹&quot;&gt;&lt;a href=&quot;#驗證二叉搜索樹&quot; class=&quot;headerlink&quot; title=&quot;驗證二叉搜索樹&quot;&gt;&lt;/a&gt;驗證二叉搜索樹&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
    
    
      <category term="Swift" scheme="https://leihao0.github.io/tw/tags/swift/"/>
    
      <category term="LeetCode" scheme="https://leihao0.github.io/tw/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode N元樹</title>
    <link href="https://leihao0.github.io/tw/leetcode-n-ary-tree/"/>
    <id>https://leihao0.github.io/tw/leetcode-n-ary-tree/</id>
    <published>2020-01-08T16:00:00.000Z</published>
    <updated>2020-12-20T23:53:08.627Z</updated>
    
    <content type="html"><![CDATA[<h2 id="N元樹預遍歷"><a href="#N元樹預遍歷" class="headerlink" title="N元樹預遍歷"></a>N元樹預遍歷</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children.reversed()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="N和樹後置遍歷"><a href="#N和樹後置遍歷" class="headerlink" title="N和樹後置遍歷"></a>N和樹後置遍歷</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">postorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans.reversed()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="N元樹級順序遍歷"><a href="#N元樹級順序遍歷" class="headerlink" title="N元樹級順序遍歷"></a>N元樹級順序遍歷</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> cur = [root], ans = [[root.val]]</span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            <span class="keyword">let</span> children = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            <span class="keyword">if</span> !children.isEmpty &#123; ans.append( children.<span class="built_in">map</span> &#123; $<span class="number">0</span>.val &#125; ) &#125;</span><br><span class="line">            cur = children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="N進制樹的最大深度"><a href="#N進制樹的最大深度" class="headerlink" title="N進制樹的最大深度"></a>N進制樹的最大深度</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> cur = root == <span class="literal">nil</span> ? [] : [root!], depth = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            cur = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            depth += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> depth</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="將N元樹編碼為二叉樹"><a href="#將N元樹編碼為二叉樹" class="headerlink" title="將N元樹編碼為二叉樹"></a>將N元樹編碼為二叉樹</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">encode</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> tn = <span class="type">TreeNode</span>(root.val); <span class="keyword">var</span> p: <span class="type">TreeNode?</span> = tn</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> n = root.children.first &#123;</span><br><span class="line">            p?.<span class="keyword">left</span> = encode(n); p = p?.<span class="keyword">left</span></span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> root.children[<span class="number">1</span>...] &#123;</span><br><span class="line">                p?.<span class="keyword">right</span> = encode(n); p = p?.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tn</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">decode</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = <span class="type">Node</span>(root.val); <span class="keyword">var</span> p = root.<span class="keyword">left</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> l = decode(p) &#123; n.children.append(l) &#125;</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> q = p?.<span class="keyword">right</span>, <span class="keyword">let</span> r = decode(q) &#123;</span><br><span class="line">            n.children.append(r); p = q</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="序列化和反序列化N元樹"><a href="#序列化和反序列化N元樹" class="headerlink" title="序列化和反序列化N元樹"></a>序列化和反序列化N元樹</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">serialize</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="string">&quot;$&quot;</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="string">&quot;\(root.val),\(root.children.count),&quot;</span></span><br><span class="line">        <span class="keyword">for</span> child <span class="keyword">in</span> root.children &#123;</span><br><span class="line">            s += serialize(child)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">(<span class="number">_</span> data: String)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> arr = data.components(separatedBy: <span class="string">&quot;,&quot;</span>).<span class="built_in">compactMap</span> &#123; <span class="type">Int</span>($<span class="number">0</span>) &#125;; <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">()</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> i &gt;= arr.<span class="built_in">count</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">Node</span>(arr[i])</span><br><span class="line">            i += <span class="number">2</span>; <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;arr[i-<span class="number">1</span>] &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> a = deserialize() &#123; n.children.append(a) &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deserialize()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;N元樹預遍歷&quot;&gt;&lt;a href=&quot;#N元樹預遍歷&quot; class=&quot;headerlink&quot; title=&quot;N元樹預遍歷&quot;&gt;&lt;/a&gt;N元樹預遍歷&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;preorder&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; root: Node?)&lt;/span&gt;&lt;/span&gt; -&amp;gt; [&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; stack = [root], ans = [&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;]()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; node = stack.popLast(), &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; n = node &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans.append(n.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            stack += n.children.reversed()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Swift" scheme="https://leihao0.github.io/tw/tags/swift/"/>
    
      <category term="LeetCode" scheme="https://leihao0.github.io/tw/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode二進制搜索</title>
    <link href="https://leihao0.github.io/tw/LeetCode-Binary-Search/"/>
    <id>https://leihao0.github.io/tw/LeetCode-Binary-Search/</id>
    <published>2020-01-06T16:00:00.000Z</published>
    <updated>2020-12-20T23:53:08.626Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二元搜尋"><a href="#二元搜尋" class="headerlink" title="二元搜尋"></a>二元搜尋</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123; i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; j = mid-<span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="平方根-x"><a href="#平方根-x" class="headerlink" title="平方根(x)"></a>平方根(x)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mySqrt</span><span class="params">(<span class="number">_</span> x: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> target = <span class="type">Int</span>(sqrt(<span class="type">Double</span>(x)))</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = x</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> mid == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            mid &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="猜數更高或更低"><a href="#猜數更高或更低" class="headerlink" title="猜數更高或更低"></a>猜數更高或更低</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> : <span class="title">GuessGame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">guessNumber</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">switch</span> guess(mid) &#123;</span><br><span class="line">                <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">                    j = mid-<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    i = mid+<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> mid</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="搜索旋轉排序數組"><a href="#搜索旋轉排序數組" class="headerlink" title="搜索旋轉排序數組"></a>搜索旋轉排序數組</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j - i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &gt;= nums[i] &#123;</span><br><span class="line">                (target &gt;= nums[i] &amp;&amp; target &lt; nums[mid]) ? (j = mid-<span class="number">1</span>) : (i = mid+<span class="number">1</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                (target &lt;= nums[j] &amp;&amp; target &gt; nums[mid]) ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第一個錯誤版本"><a href="#第一個錯誤版本" class="headerlink" title="第一個錯誤版本"></a>第一個錯誤版本</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>: <span class="title">VersionControl</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">firstBadVersion</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> h = i + (j-i)/<span class="number">2</span></span><br><span class="line">            isBadVersion(h) ? (j = h-<span class="number">1</span>) : (i = h + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查找峰元素"><a href="#查找峰元素" class="headerlink" title="查找峰元素"></a>查找峰元素</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[mid+<span class="number">1</span>] ? (r = mid) : (l = mid+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> l: Int, <span class="number">_</span> r: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (l == r) &#123; <span class="keyword">return</span> l &#125;</span><br><span class="line">            <span class="keyword">let</span> mid = l + (r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> (nums[mid] &gt; nums[mid+<span class="number">1</span>]) ? search(l, mid) : search(mid+<span class="number">1</span>, r)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> search(<span class="number">0</span>, nums.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在旋轉排序數組中查找最小值"><a href="#在旋轉排序數組中查找最小值" class="headerlink" title="在旋轉排序數組中查找最小值"></a>在旋轉排序數組中查找最小值</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="搜索範圍"><a href="#搜索範圍" class="headerlink" title="搜索範圍"></a>搜索範圍</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchRange</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> [-<span class="number">1</span>, -<span class="number">1</span>] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                i = mid; j = mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123;</span><br><span class="line">                i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                j = mid-<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i-<span class="number">1</span> &gt;= <span class="number">0</span>, nums[i-<span class="number">1</span>] == target &#123; i -= <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j+<span class="number">1</span> &lt; nums.<span class="built_in">count</span>, nums[j+<span class="number">1</span>] == target &#123; j += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i] == target ? [i, j] : [-<span class="number">1</span>, -<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查找K個最近的元素"><a href="#查找K個最近的元素" class="headerlink" title="查找K個最近的元素"></a>查找K個最近的元素</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findClosestElements</span><span class="params">(<span class="number">_</span> arr: [Int], <span class="number">_</span> k: Int, <span class="number">_</span> x: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.isEmpty &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = arr.<span class="built_in">count</span>, ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> arr[mid] == x &#123; i = mid &#125;</span><br><span class="line">            arr[mid] &lt; x ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        j = i+k &lt; arr.<span class="built_in">count</span> ? i+k : arr.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        i = (i-k) &gt;= <span class="number">0</span> ? (i-k) : <span class="number">0</span></span><br><span class="line">        ans = <span class="type">Array</span>(arr[i...j])</span><br><span class="line">        <span class="keyword">while</span> ans.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">            <span class="built_in">abs</span>(x-ans.first!) &lt;= <span class="built_in">abs</span>(x-ans.last!) ? ans.removeLast() : ans.removeFirst()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最近的二分搜索樹值"><a href="#最近的二分搜索樹值" class="headerlink" title="最近的二分搜索樹值"></a>最近的二分搜索樹值</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">closestValue</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> target: Double)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = root, v = p!.val</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">abs</span>(<span class="type">Double</span>(p!.val)-target) &lt; <span class="built_in">abs</span>(<span class="type">Double</span>(v)-target) &#123; v = p!.val &#125;</span><br><span class="line">            p = target &lt; <span class="type">Double</span>(p!.val) ? p!.<span class="keyword">left</span> : p!.<span class="keyword">right</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在未知大小的排序數組中搜索"><a href="#在未知大小的排序數組中搜索" class="headerlink" title="在未知大小的排序數組中搜索"></a>在未知大小的排序數組中搜索</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> reader: ArrayReader, <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> reader.<span class="keyword">get</span>(<span class="number">0</span>) == target &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> reader.<span class="keyword">get</span>(j) &lt; target &#123;</span><br><span class="line">            i = j; j &lt;&lt;= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)&gt;&gt;<span class="number">1</span>, v = reader.<span class="keyword">get</span>(mid)</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            v &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="戰俘-x，n"><a href="#戰俘-x，n" class="headerlink" title="戰俘(x，n)"></a>戰俘(x，n)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">myPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="number">0</span>: <span class="number">1.0</span>, <span class="number">1</span>: x]</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">fastPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n] &#123; <span class="keyword">return</span> v &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> h = fastPow(x, n/<span class="number">2</span>), v = n&amp;<span class="number">1</span> == <span class="number">0</span> ? h*h : x*h*h</span><br><span class="line">            dict[n] = v</span><br><span class="line">            <span class="keyword">return</span> v</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> v = fastPow(x, <span class="built_in">abs</span>(n))</span><br><span class="line">        <span class="keyword">return</span> n &lt; <span class="number">0</span> ? <span class="number">1</span>/v : v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="有效完美廣場"><a href="#有效完美廣場" class="headerlink" title="有效完美廣場"></a>有效完美廣場</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isPerfectSquare</span><span class="params">(<span class="number">_</span> num: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> x = (num+<span class="number">1</span>)/<span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> x*x &gt; num &#123;</span><br><span class="line">            x = (x + num/x) / <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> x*x == num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查找大於目標的最小字母"><a href="#查找大於目標的最小字母" class="headerlink" title="查找大於目標的最小字母"></a>查找大於目標的最小字母</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">nextGreatestLetter</span><span class="params">(<span class="number">_</span> letters: [Character], <span class="number">_</span> target: Character)</span></span> -&gt; <span class="type">Character</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">c</span> <span class="keyword">in</span> letters &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">c</span> &gt; target &#123; <span class="keyword">return</span> <span class="built_in">c</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> letters.first!</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在旋轉排序數組中查找最小值-1"><a href="#在旋轉排序數組中查找最小值-1" class="headerlink" title="在旋轉排序數組中查找最小值"></a>在旋轉排序數組中查找最小值</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            nums[mid] &gt;= nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在旋轉排序數組II中查找最小值"><a href="#在旋轉排序數組II中查找最小值" class="headerlink" title="在旋轉排序數組II中查找最小值"></a>在旋轉排序數組II中查找最小值</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] &gt; nums[r] &#123; l = mid+<span class="number">1</span> &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; nums[r]  &#123; r = mid &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123; r -= <span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="兩個數組的交集"><a href="#兩個數組的交集" class="headerlink" title="兩個數組的交集"></a>兩個數組的交集</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="兩個數組的交集II"><a href="#兩個數組的交集II" class="headerlink" title="兩個數組的交集II"></a>兩個數組的交集II</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="兩個和II-輸入數組已排序"><a href="#兩個和II-輸入數組已排序" class="headerlink" title="兩個和II-輸入數組已排序"></a>兩個和II-輸入數組已排序</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(<span class="number">_</span> numbers: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = numbers.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> v =  numbers[i]+numbers[j]</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            v &lt; target ? (i+=<span class="number">1</span>) : (j-=<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> [i+<span class="number">1</span>, j+<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查找重複的號碼"><a href="#查找重複的號碼" class="headerlink" title="查找重複的號碼"></a>查找重複的號碼</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;(), i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(nums[i]) &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(nums[i]); i+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="兩個排序數組的中位數"><a href="#兩個排序數組的中位數" class="headerlink" title="兩個排序數組的中位數"></a>兩個排序數組的中位數</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> nums = nums1+nums2</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span>, j &lt; nums2.<span class="built_in">count</span> &#123;</span><br><span class="line">            nums1[i] &lt; nums2[j] ? (nums[k] = nums1[i], i+=<span class="number">1</span>) : (nums[k] = nums2[j], j+=<span class="number">1</span>); k+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span> &#123; nums[k] = nums1[i]; i+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j &lt; nums2.<span class="built_in">count</span> &#123; nums[k] = nums2[j]; j+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> h = nums.<span class="built_in">count</span>/<span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">count</span>&amp;<span class="number">1</span> == <span class="number">1</span> ? <span class="type">Double</span>(nums[h]) : <span class="type">Double</span>(nums[h-<span class="number">1</span>]+nums[h])/<span class="number">2.0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查找第K個最小對距離"><a href="#查找第K個最小對距離" class="headerlink" title="查找第K個最小對距離"></a>查找第K個最小對距離</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">smallestDistancePair</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> nums = nums.sorted()</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, h = nums.last!-nums.first!</span><br><span class="line">        <span class="keyword">while</span> l &lt; h &#123;</span><br><span class="line">            <span class="keyword">let</span> m = (l+h)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span>, l1 = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> r1 <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (nums[r1]-nums[l1]) &gt; m &#123; l1 += <span class="number">1</span> &#125;</span><br><span class="line">                <span class="built_in">count</span> += r1-l1</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">count</span> &gt;= k ? (h = m): (l = m+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分割數組最大和"><a href="#分割數組最大和" class="headerlink" title="分割數組最大和"></a>分割數組最大和</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;二元搜尋&quot;&gt;&lt;a href=&quot;#二元搜尋&quot; class=&quot;headerlink&quot; title=&quot;二元搜尋&quot;&gt;&lt;/a&gt;二元搜尋&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; nums: [Int], &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; target: Int)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, j = nums.&lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt;= j &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; mid = i + (j-i)/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; nums[mid] == target &amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mid &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; nums[mid] &amp;lt; target &amp;#123; i = mid+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123; j = mid-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Swift" scheme="https://leihao0.github.io/tw/tags/swift/"/>
    
      <category term="LeetCode" scheme="https://leihao0.github.io/tw/tags/leetcode/"/>
    
  </entry>
  
</feed>
